
#line 1: "D:\Workspaces\UtilWorkspace\Reverse\GhidraTools\ghidra_ida_til\4_til_til2c_headers\arm\iphoneos64_sdk14.til.h"
/// #define HAVETYPE__opaque_pthread_mutex_t ===DEFINED

/// #define HAVETYPE_Block_byref ===DEFINED

/// #define HAVETYPE__xmlSAXHandler ===DEFINED

/// #define GHIDRA ===DEFINED

/// #ifndef INCLUDE_GUARD_iphoneos64_sdk14_til ===true

/// #define INCLUDE_GUARD_iphoneos64_sdk14_til ===DEFINED


#line 1: "D:\Workspaces\UtilWorkspace\Reverse\GhidraTools\ghidra_ida_til\5_gengdt\arm\.\..\..\..\..\IDAPlugins\idatil2c\common.h"


/// #define __int64  long long ===DEFINED
/// #define __int32  int ===DEFINED
/// #define __int16  short ===DEFINED
/// #define __int8  char ===DEFINED

/// #ifdef GHIDRA ===true

typedef struct {
    long long u1;
    long long u2;
} __int128;
typedef struct {
    unsigned long long u1;
    unsigned long long u2;
} __uint128;
/// #endif ===true


typedef char int8_t;
typedef short int16_t;
typedef int int32_t;
typedef long long int64_t;

typedef unsigned char uint8_t;
typedef unsigned short uint16_t;
typedef unsigned int uint32_t;
typedef unsigned long long uint64_t;

/// #define _BYTE  uint8_t ===DEFINED
/// #define _WORD  uint16_t ===DEFINED
/// #define _QWORD  uint64_t ===DEFINED
/// #define _DWORD  uint32_t ===DEFINED



/// #ifndef HAVETYPE_bool ===true

/// #define bool  char ===DEFINED
/// #endif ===true


/// #ifndef HAVETYPE___u32 ===true

typedef uint32_t __u32;
/// #endif ===true

/// #ifndef HAVETYPE___u16 ===true

typedef uint16_t __u16;
/// #endif ===true

/// #ifndef HAVETYPE___u64 ===true

typedef uint64_t __u64;
/// #endif ===true

/// #ifndef HAVETYPE___kernel_uid32_t ===true

typedef unsigned int __kernel_uid32_t;
/// #endif ===true

/// #ifndef HAVETYPE___kernel_mqd_t ===true

typedef int __kernel_mqd_t;
/// #endif ===true



/// #define __fastcall ===DEFINED

/// #define __unaligned ===DEFINED

/// #define __stdcall ===DEFINED

/// #define __cppobj ===DEFINED

/// #define __declspec([x])   ===DEFINED
/// #define __hidden ===DEFINED

/// #define __cdecl ===DEFINED

/// #define __noreturn ===DEFINED


/// #define const ===DEFINED

/// #define this  _this ===DEFINED

typedef char _Mbstatet;

typedef void **va_list;





























 
#line 7: "D:\Workspaces\UtilWorkspace\Reverse\GhidraTools\ghidra_ida_til\4_til_til2c_headers\arm\iphoneos64_sdk14.til.h"




struct std____1____type_list_std____align_type_unsigned_char___std____type_list_std____align_type_unsigned_short___std____type_list_std____align_type_unsigned_int___std____type_list_std____align_type_unsigned_long___std____type_list_std____align_type_unsigned_long_long___std____type_list_std____align_type_double___std____type_list_std____align_type_long_double___std____type_list_std____align_type_std____struct_double___std____type_list_std____align_type_std____struct_double4___std____type_list_std____align_type_int__P___std____nat__________;
struct std____1____type_list_unsigned_char__std____type_list_unsigned_short__std____type_list_unsigned_int__std____type_list_unsigned_long__std____type_list_unsigned_long_long__std____type_list_unsigned___int128__std____nat______;
struct std____1____type_list_signed_char__std____type_list_short__std____type_list_int__std____type_list_long__std____type_list_long_long__std____type_list___int128__std____nat______;
struct std____1__chrono__time_point_std__chrono__steady_clock__std__chrono__duration_long_long__std__ratio_1__1000000000___;
struct std____1__chrono__time_point_std__chrono__system_clock__std__chrono__duration_long_long__std__ratio_1__1000000000___;
struct std____1__chrono__time_point_std__chrono__system_clock__std__chrono__duration_long_long__std__ratio_1__1000000___;
struct std____1__iterator_std__random_access_iterator_tag__char16_t__long__const_char16_t__P__const_char16_t__R_;
struct std____1__iterator_std__random_access_iterator_tag__char32_t__long__const_char32_t__P__const_char32_t__R_;
struct std____1__iterator_std__random_access_iterator_tag__wchar_t__long__const_wchar_t__P__const_wchar_t__R_;
struct std____1__iterator_std__random_access_iterator_tag__char__long__const_char__P__const_char__R_;
struct std____1____compressed_pair_std__basic_string_char16_t_____rep__std__allocator_char16_t__;
struct std____1____compressed_pair_std__basic_string_char32_t_____rep__std__allocator_char32_t__;
struct std____1____compressed_pair_std__basic_string_wchar_t_____rep__std__allocator_wchar_t__;
struct std____1__iterator_std__input_iterator_tag__wchar_t__long_long__wchar_t__P__wchar_t_;
struct std____1____compressed_pair_std__basic_string_char_____rep__std__allocator_char__;
struct std____1____compressed_pair_elem_std__basic_string_char16_t_____rep__0__false_;
struct std____1____compressed_pair_elem_std__basic_string_char32_t_____rep__0__false_;
struct std____1____compressed_pair_elem_std__basic_string_wchar_t_____rep__0__false_;
struct ASAccountAuthenticationModificationReplacePasswordWithSignInWithAppleRequest;
struct std____1__basic_string_char16_t_____short___F258D7DED934BF0EB39F60A209D311FC;
struct std____1__basic_string_char32_t_____short___4BCC28CA51C261F04D7FA0FC5D6C1490;
struct std____1__basic_string_wchar_t_____short___FF41AE7C12FB3515350232ED16A8A858;
struct std____1__iterator_std__input_iterator_tag__char__long_long__char__P__char_;
struct std____1____compressed_pair_elem_std__basic_string_char_____rep__0__false_;
union std____1__basic_string_char16_t_____rep___B1BBB8AFCA68510948C54AD5ECDD08AF;
union std____1__basic_string_char32_t_____rep___0FAB7A1DE5A04F8E060EE1A12296626F;
struct ASAccountAuthenticationModificationUpgradePasswordToStrongPasswordRequest;
union std____1__basic_string_wchar_t_____rep___7E5635CA808A9EE38F5B97749E9C5407;
struct std____1__basic_string_char_____short___654DBF3D633A6121C0B197AC38B89F76;
union std____1__basic_string_char_____rep___BBC8CF68AFD2118CFD95232F156F26A4;
struct std____1__iterator_std__output_iterator_tag__void__void__void__void_;
struct CLKComplicationTemplateGraphicExtraLargeCircularOpenGaugeSimpleText;
struct std____1____compressed_pair_elem_std__allocator_char16_t___1__true_;
struct std____1____compressed_pair_elem_std__allocator_char32_t___1__true_;
struct CLKComplicationTemplateGraphicExtraLargeCircularOpenGaugeRangeText;
struct std____1____compressed_pair_elem_std__allocator_wchar_t___1__true_;
struct std____1__allocator_std____shared_ptr_dummy_rebind_allocator_type_;
struct std____1__chrono__duration_long_double__std__ratio_1__1000000000__;
struct CLKComplicationTemplateGraphicExtraLargeCircularClosedGaugeImage;
struct INGetAvailableRestaurantReservationBookingDefaultsIntentResponse;
struct std____1__chrono__duration_long_long__std__ratio_1__1000000000__;
struct CLKComplicationTemplateGraphicExtraLargeCircularClosedGaugeText;
struct __Request__host_register_well_known_mach_voucher_attr_manager_t;
struct std____1____compressed_pair_elem_std__allocator_char___1__true_;
struct std____1__chrono__duration_long_double__std__ratio_1__1000000__;
struct std____1__codecvt_byname_char16_t__char__mbstate_t__vtbl_layout;
struct std____1__codecvt_byname_char32_t__char__mbstate_t__vtbl_layout;
struct std____1__reverse_iterator_std____wrap_iter_const_char16_t__P__;
struct std____1__reverse_iterator_std____wrap_iter_const_char32_t__P__;
struct CLKComplicationTemplateGraphicExtraLargeCircularOpenGaugeImage;
struct std____1__codecvt_byname_wchar_t__char__mbstate_t__vtbl_layout;
struct MPSIntersectionDistancePrimitiveIndexInstanceIndexCoordinates;
struct __Reply__host_register_well_known_mach_voucher_attr_manager_t;
struct std____1__chrono__duration_long_long__std__ratio_1__1000000__;
struct std____1__iterator_std__random_access_iterator_tag__char16_t_;
struct std____1__iterator_std__random_access_iterator_tag__char32_t_;
struct std____1__unary_function_std__error_condition__unsigned_long_;
struct std____1__chrono__duration_long_double__std__ratio_1__1000__;
struct std____1__chrono__duration_long_double__std__ratio_3600__1__;
struct INGetUserCurrentRestaurantReservationBookingsIntentResponse;
union arm_unified_thread_state___9FA5E432098BAEED883302D0D647C3FA;
struct dyld_shared_cache_ranges___C6EA7859B0EAEDB620D074CEA3C16F57;
struct std____1__codecvt_byname_char__char__mbstate_t__vtbl_layout;
struct std____1__unary_function_unsigned_long_long__unsigned_long_;
union AudioUnitParameterEvent___30DB46DA13B14C3192C3DF0E34A08043;
struct CLKComplicationTemplateGraphicExtraLargeCircularStackImage;
struct std____1__chrono__duration_long_double__std__ratio_60__1__;
struct std____1__chrono__duration_long_long__std__ratio_1__1000__;
struct std____1__unary_function_unsigned___int128__unsigned_long_;
struct CLKComplicationTemplateGraphicCircularOpenGaugeSimpleText;
struct CLKComplicationTemplateGraphicExtraLargeCircularStackText;
struct INGetAvailableRestaurantReservationBookingsIntentResponse;
struct MTLResourceStatePassSampleBufferAttachmentDescriptorArray;
struct UICollectionViewDiffableDataSourceSectionSnapshotHandlers;
struct std____1__reverse_iterator_std____wrap_iter_char16_t__P__;
struct std____1__reverse_iterator_std____wrap_iter_char32_t__P__;
struct CLKComplicationTemplateGraphicCircularOpenGaugeRangeText;
struct INGetAvailableRestaurantReservationBookingDefaultsIntent;
union SparseIterativeMethod___55D3F39CA3A5B677629EB14D504DE9DB;
union dns_resource_record_t___ACCCA089A96433C3C2E2A191C0A26330;
struct std____1__codecvt_char16_t__char__mbstate_t__vtbl_layout;
struct std____1__codecvt_char32_t__char__mbstate_t__vtbl_layout;
struct std____1__codecvt_byname_char16_t__char__mbstate_t__vtbl;
struct std____1__codecvt_byname_char32_t__char__mbstate_t__vtbl;
struct std____1__unary_function_std__error_code__unsigned_long_;
struct AVAssetResourceLoadingContentInformationRequestInternal;
struct __Request__task_register_dyld_shared_cache_image_info_t;
struct std____1____bit_iterator_std____bitset_0__0___false__0_;
struct std____1__codecvt_wchar_t__char__mbstate_t__vtbl_layout;
struct std____1__codecvt_byname_wchar_t__char__mbstate_t__vtbl;
struct std____1__moneypunct_byname_wchar_t__false__vtbl_layout;
struct std____1__unary_function_unsigned_short__unsigned_long_;
struct CLKComplicationTemplateGraphicCircularClosedGaugeImage;
struct INSetTaskAttributeTemporalEventTriggerResolutionResult;
struct at_block_features_t___95F68058DEB3F3BE2E9E414B0815CF1B;
struct std____1____bit_iterator_std____bitset_0__0___true__0_;
struct std____1__moneypunct_byname_wchar_t__true__vtbl_layout;
struct std____1__unary_function_unsigned_char__unsigned_long_;
struct std____1__unary_function_unsigned_long__unsigned_long_;
struct CLKComplicationTemplateGraphicCircularClosedGaugeText;
struct CLKComplicationTemplateGraphicExtraLargeCircularImage;
struct CLKComplicationTemplateGraphicRectangularStandardBody;
struct MTLAccelerationStructureBoundingBoxGeometryDescriptor;
struct __Reply__task_register_dyld_shared_cache_image_info_t;
struct axr_decoder_info_t___A147FA619674AD8F0C1DA22DD7FB259D;
struct std____1__chrono__duration_long__std__ratio_3600__1__;
struct std____1__unary_function_unsigned_int__unsigned_long_;
union AAEntryAttributes___EFADEFB9DC9004767965205374614248;
struct ASAuthorizationProviderExtensionAuthorizationRequest;
union AUNodeInteraction___E219FB71B0DE9D0AF0BF60B4604E2975;
struct CLKComplicationTemplateGraphicCircularOpenGaugeImage;
struct MTLResourceStatePassSampleBufferAttachmentDescriptor;
struct UICollectionViewDiffableDataSourceReorderingHandlers;
struct __Request__host_register_mach_voucher_attr_manager_t;
union mach_port_options___35CF9E4DD47DBA463F25D88A6280642A;
struct std____1____bit_const_reference_std____bitset_0__0__;
struct std____1____bit_reference_std____bitset_0__0___true_;
struct std____1____libcpp_numeric_limits_long_double__true_;
struct std____1__codecvt_char__char__mbstate_t__vtbl_layout;
struct std____1__codecvt_byname_char__char__mbstate_t__vtbl;
struct std____1__moneypunct_byname_char__false__vtbl_layout;
struct std____1__unary_function_long_double__unsigned_long_;
struct std____1__unary_function_signed_char__unsigned_long_;
struct ASAccountAuthenticationModificationExtensionContext;
struct CLKComplicationTemplateGraphicRectangularLargeImage;
struct INGetUserCurrentRestaurantReservationBookingsIntent;
struct MTLComputePassSampleBufferAttachmentDescriptorArray;
struct MTLTileRenderPipelineColorAttachmentDescriptorArray;
union _MPSPackedFloat3___39DC2D7EDDF348CEA81137C15E26DB7E;
union _MTLPackedFloat3___39DC2D7EDDF348CEA81137C15E26DB7E;
struct std____1____make_unsigned_unsigned_long_long__true_;
struct std____1__chrono__duration_long__std__ratio_60__1__;
struct std____1__codecvt_byname_char16_t__char__mbstate_t_;
struct std____1__codecvt_byname_char32_t__char__mbstate_t_;
struct std____1__moneypunct_byname_char__true__vtbl_layout;
struct ASWebAuthenticationSessionWebBrowserSessionManager;
struct AVCaptureManualExposureBracketedStillImageSettings;
struct CLKComplicationTemplateGraphicRectangularFullImage;
struct CLKComplicationTemplateGraphicRectangularTextGauge;
struct MPSIntersectionDistancePrimitiveIndexInstanceIndex;
struct MTLAccelerationStructureTriangleGeometryDescriptor;
struct MTLRenderPassSampleBufferAttachmentDescriptorArray;
struct TKSmartCardUserInteractionForSecurePINVerification;
struct __Reply__host_register_mach_voucher_attr_manager_t;
struct __Request__mach_voucher_extract_all_attr_recipes_t;
struct axr_part_info_t___38C3DEC81229B66F67FB6D350D75FF5A;
union axr_part_info_t___9F129DB9CDBDC1B09F866A34CEF265DD;
struct axr_part_info_t___C2A9D52C59000E92D946D3240063F922;
struct sqlite3_index_info__sqlite3_index_constraint_usage;
struct std____1____atomic_base_unsigned_long_long__false_;
struct std____1____libcpp_is_integral_unsigned_long_long_;
struct std____1____shared_ptr_dummy_rebind_allocator_type;
struct std____1__basic_istringstream_wchar_t__vtbl_layout;
struct std____1__basic_ostringstream_wchar_t__vtbl_layout;
struct std____1__codecvt_byname_wchar_t__char__mbstate_t_;
struct std____1__unary_function_long_long__unsigned_long_;
struct ASAccountAuthenticationModificationViewController;
struct AVMutableVideoCompositionLayerInstructionInternal;
struct CLKComplicationTemplateGraphicCornerCircularImage;
struct INGetAvailableRestaurantReservationBookingsIntent;
struct INTemporalEventTriggerTypeOptionsResolutionResult;
struct _GLKQuaternion___44B881517778DCFD8543672A2FEF14EA;
struct _GLKQuaternion___91D1B2149FAC90180ECB9AC277F76009;
struct __Request__task_register_dyld_get_process_state_t;
union accepted_reply___31595615714680EC1AE1A80BF98BFB1C;
union rejected_reply___FEB4F6CB395C7E44573402E2A32E10A3;
struct std____1____atomic_base_unsigned_long_long__true_;
struct std____1____libcpp_is_floating_point_long_double_;
struct std____1____make_signed_unsigned_long_long__true_;
struct std____1__basic_stringstream_wchar_t__vtbl_layout;
struct std____1__codecvt_char16_t__char__mbstate_t__vtbl;
struct std____1__codecvt_char32_t__char__mbstate_t__vtbl;
struct std____1__unary_function___int128__unsigned_long_;
struct std____1__unary_function_char16_t__unsigned_long_;
struct std____1__unary_function_char32_t__unsigned_long_;
struct AVCaptureAutoExposureBracketedStillImageSettings;
struct CLKComplicationTemplateGraphicCircularStackImage;
struct CLKComplicationTemplateGraphicExtraLargeCircular;
struct CLKComplicationTemplateUtilitarianSmallRingImage;
struct MPSIntersectionDistancePrimitiveIndexCoordinates;
struct MTLBlitPassSampleBufferAttachmentDescriptorArray;
struct UICollectionViewCompositionalLayoutConfiguration;
struct __Reply__mach_voucher_extract_all_attr_recipes_t;
struct __res_9_state___74FC9BA5E222057206531471DD26DEFB;
union __res_9_state___E1C47136107487A623680D4B7EE68AB7;
union arm_amx_state___E7A5EE9080EE8402944F8D536A1F0C4F;
union getquota_rslt___93D720EECC4BDA120269F9F7BB40A95B;
union nlm4_testrply___5672F96DA0F1B9BE5DC546E200F63A51;
struct std____1____libcpp_is_function_imp____dummy_type;
struct std____1__codecvt_wchar_t__char__mbstate_t__vtbl;
struct std____1__moneypunct_wchar_t__false__vtbl_layout;
struct std____1__moneypunct_byname_wchar_t__false__vtbl;
struct std____1__unary_function_wchar_t__unsigned_long_;
struct AVAssetResourceLoadingContentInformationRequest;
struct AVAudioEnvironmentDistanceAttenuationParameters;
struct AVCaptureSynchronizedMetadataObjectDataInternal;
struct CLKComplicationTemplateCircularSmallSimpleImage;
struct CLKComplicationTemplateGraphicBezelCircularText;
struct CLKComplicationTemplateGraphicCircularStackText;
struct CLKComplicationTemplateModularLargeStandardBody;
struct CLKComplicationTemplateUtilitarianSmallRingText;
struct INStartCallCallRecordToCallBackResolutionResult;
struct MTLRenderPipelineColorAttachmentDescriptorArray;
struct __Reply__task_register_dyld_get_process_state_t;
struct __Request__mach_memory_entry_purgable_control_t;
struct __Request__mach_memory_object_memory_entry_64_t;
union klm_testrply___25A6F5B59BE8949FB52C1CBCE60C93A0;
union nlm_testrply___9560609B77CA2DE28561BE781A7E7270;
struct std____1____libcpp_numeric_limits_double__true_;
struct std____1____make_unsigned_unsigned_short__true_;
struct std____1__basic_istringstream_char__vtbl_layout;
struct std____1__basic_ostringstream_char__vtbl_layout;
struct std____1__codecvt_byname_char__char__mbstate_t_;
struct std____1__istreambuf_iterator_wchar_t_____proxy;
struct std____1__moneypunct_wchar_t__true__vtbl_layout;
struct std____1__moneypunct_byname_wchar_t__true__vtbl;
struct std____1__unary_function_double__unsigned_long_;
struct unwind_info_compressed_second_level_page_header;
struct AVAssetDownloadStorageManagementPolicyInternal;
struct AVCompositionTrackFormatDescriptionReplacement;
struct CLKComplicationTemplateCircularSmallSimpleText;
struct CLKComplicationTemplateCircularSmallStackImage;
struct CLKComplicationTemplateGraphicCornerGaugeImage;
struct CLKComplicationTemplateModularSmallColumnsText;
struct CLKComplicationTemplateModularSmallSimpleImage;
struct INAddTasksTemporalEventTriggerResolutionResult;
struct INRequestPaymentCurrencyAmountResolutionResult;
struct INUpdateMediaAffinityMediaItemResolutionResult;
struct MTLComputePassSampleBufferAttachmentDescriptor;
struct MTLTileRenderPipelineColorAttachmentDescriptor;
struct _GLKMatrix2___9B57ABAB53129359FC278B413DD04FEA;
struct _GLKMatrix3___BB947FF03F7651DA078F6D1ECDA4F9F6;
struct _GLKMatrix4___149E04C8607449E2E7257C0CA95EBF69;
struct _GLKVector2___38C3DEC81229B66F67FB6D350D75FF5A;
struct _GLKVector2___EA2C0D501FE1607857099885D8D2A78D;
struct _GLKVector3___13ED18E8C21063FF516926CE05468478;
struct _GLKVector3___393C16A032292777F0C3725FFB2C0008;
struct _GLKVector3___7B7AD9436E53DE341D9DDF6F0536A99B;
struct _GLKVector4___43F634250C0E94E2A09AB0840E4770D1;
struct _GLKVector4___8049FD4CE32D3F768A2FD438003016CA;
struct _GLKVector4___91D1B2149FAC90180ECB9AC277F76009;
struct __Request__mach_memory_entry_access_tracking_t;
struct __Request__mach_voucher_extract_attr_content_t;
struct __Request__task_register_dyld_set_dyld_state_t;
union extern_proc___F477F83051F9A905E317A45D3B2D5518;
struct std____1____atomic_base_unsigned_short__false_;
struct std____1____libcpp_is_integral_unsigned_short_;
struct std____1____libcpp_numeric_limits_float__true_;
struct std____1____make_unsigned_unsigned_long__true_;
struct std____1____scalar_hash_unsigned_long_long__1_;
struct std____1__basic_streambuf_wchar_t__vtbl_layout;
struct std____1__basic_stringbuf_wchar_t__vtbl_layout;
struct std____1__basic_stringstream_char__vtbl_layout;
struct std____1__messages_byname_wchar_t__vtbl_layout;
struct std____1__numpunct_byname_wchar_t__vtbl_layout;
struct std____1__time_get_byname_wchar_t__vtbl_layout;
struct std____1__time_put_byname_wchar_t__vtbl_layout;
struct std____1__unary_function_float__unsigned_long_;
struct std____1__unary_function_short__unsigned_long_;
union ypbind_resp___CD49527FE086EB7F6D0E69C2C3AD50AC;
struct ASAccountAuthenticationModificationController;
struct AVAsynchronousCIImageFilteringRequestInternal;
struct AVAsynchronousVideoCompositionRequestInternal;
struct AVCaptureSynchronizedSampleBufferDataInternal;
struct AVCaptureWhiteBalanceTemperatureAndTintValues;
struct AVMutableAssetDownloadStorageManagementPolicy;
struct CLKComplicationTemplateCircularSmallRingImage;
struct CLKComplicationTemplateCircularSmallStackText;
struct CLKComplicationTemplateGraphicCornerGaugeText;
struct CLKComplicationTemplateGraphicCornerStackText;
struct CLKComplicationTemplateGraphicCornerTextImage;
struct CLKComplicationTemplateModularSmallSimpleText;
struct CLKComplicationTemplateModularSmallStackImage;
struct CLKComplicationTemplateUtilitarianSmallSquare;
struct MTLRenderPassSampleBufferAttachmentDescriptor;
struct PKIssuerProvisioningExtensionPaymentPassEntry;
struct UICollectionViewFlowLayoutInvalidationContext;
struct VNGenerateObjectnessBasedSaliencyImageRequest;
struct __Reply__mach_memory_entry_purgable_control_t;
struct __Reply__mach_memory_object_memory_entry_64_t;
struct __Request__host_virtual_physical_table_info_t;
struct __Request__mach_voucher_extract_attr_recipe_t;
struct __Request__task_unregister_dyld_image_infos_t;
union bp_address___3B940BBAFE206A608BBBF7EC1987BA49;
union reply_body___B1794D2A0DAD208A76987CA2B117700C;
union sadb_x_sa2___0B8F6C7C603ED8E5ADDF6AC271DF4C5E;
union sadb_x_sa2___BE0BF66556B3A07F217BF5ED388C8220;
struct std____1____atomic_base_unsigned_char__false_;
struct std____1____atomic_base_unsigned_long__false_;
struct std____1____atomic_base_unsigned_short__true_;
struct std____1____is_nullptr_t_impl_std__nullptr_t_;
struct std____1____libcpp_is_integral_unsigned_char_;
struct std____1____libcpp_is_integral_unsigned_long_;
struct std____1____libcpp_numeric_limits_bool__true_;
struct std____1____make_signed_unsigned_short__true_;
struct std____1____make_unsigned_unsigned_int__true_;
struct std____1____scalar_hash_unsigned___int128__2_;
struct std____1__basic_iostream_wchar_t__vtbl_layout;
struct std____1__codecvt_char__char__mbstate_t__vtbl;
struct std____1__collate_byname_wchar_t__vtbl_layout;
struct std____1__moneypunct_char__false__vtbl_layout;
struct std____1__moneypunct_byname_char__false__vtbl;
struct std____1__reverse_iterator_const_char16_t__P_;
struct std____1__reverse_iterator_const_char32_t__P_;
struct std____1__unary_function_bool__unsigned_long_;
struct std____1__unary_function_char__unsigned_long_;
struct std____1__unary_function_long__unsigned_long_;
union ypresp_all___438EB5C0F713AEE99C9EADC1C626DC0A;
union ypresponse___6D34D2F64A3B31777223FA377120CA09;
struct AVAssetWriterInputPixelBufferAdaptorInternal;
struct AVMutableVideoCompositionInstructionInternal;
struct CLKComplicationTemplateCircularSmallRingText;
struct CLKComplicationTemplateExtraLargeColumnsText;
struct CLKComplicationTemplateExtraLargeSimpleImage;
struct CLKComplicationTemplateModularSmallRingImage;
struct CLKComplicationTemplateModularSmallStackText;
struct MPSCNNLocalContrastNormalizationGradientNode;
struct MPSNNReductionFeatureChannelsArgumentMaxNode;
struct MPSNNReductionFeatureChannelsArgumentMinNode;
struct TKSmartCardUserInteractionForSecurePINChange;
struct VNGenerateAttentionBasedSaliencyImageRequest;
struct __Reply__mach_memory_entry_access_tracking_t;
struct __Reply__mach_voucher_extract_attr_content_t;
struct __Reply__task_register_dyld_set_dyld_state_t;
struct __Request__host_get_multiuser_config_flags_t;
struct __Request__host_security_create_task_token_t;
struct __Request__host_set_multiuser_config_flags_t;
struct __Request__mach_memory_object_memory_entry_t;
struct __Request__processor_set_tasks_with_flavor_t;
struct des_block___E577A72923D02C4B0C353C58593774EC;
union icmp6_hdr___D19D92B5F4F43A148CE7ABC3DA9CAAC9;
union ranlib_64___3D81D97140096141A6E59905565A4088;
struct sqlite3_index_info__sqlite3_index_constraint;
struct std____1____apply_cv_mf_false__false__false_;
struct std____1____atomic_base_unsigned_char__true_;
struct std____1____atomic_base_unsigned_int__false_;
struct std____1____atomic_base_unsigned_long__true_;
struct std____1____invoke_void_return_wrapper_void_;
struct std____1____libcpp_is_floating_point_double_;
struct std____1____libcpp_is_integral_unsigned_int_;
struct std____1____make_signed_unsigned_long__true_;
struct std____1____make_unsigned___uint128_t__true_;
struct std____1__basic_istream_wchar_t__vtbl_layout;
struct std____1__basic_ostream_wchar_t__vtbl_layout;
struct std____1__codecvt_char16_t__char__mbstate_t_;
struct std____1__codecvt_char32_t__char__mbstate_t_;
struct std____1__is_error_condition_enum_std__errc_;
struct std____1__istreambuf_iterator_char_____proxy;
struct std____1__moneypunct_char__true__vtbl_layout;
struct std____1__moneypunct_byname_char__true__vtbl;
struct std____1__reverse_iterator_const_wchar_t__P_;
struct std____1__unary_function_int__unsigned_long_;
struct unwind_info_regular_second_level_page_header;
union yprequest___6FDF785020AAFE35EF4D4B0B11050AAA;
struct AVAssetReaderVideoCompositionOutputInternal;
struct AVCaptureSynchronizedDataCollectionInternal;
struct AVMetadataMachineReadableCodeObjectInternal;
struct AVVideoCompositionCoreAnimationToolInternal;
struct CLKComplicationTemplateExtraLargeSimpleText;
struct CLKComplicationTemplateExtraLargeStackImage;
struct CLKComplicationTemplateGraphicCircularImage;
struct CLKComplicationTemplateModularLargeTallBody;
struct CLKComplicationTemplateModularSmallRingText;
struct CLKComplicationTemplateUtilitarianLargeFlat;
struct CLKComplicationTemplateUtilitarianSmallFlat;
struct CNChangeHistoryRemoveSubgroupFromGroupEvent;
struct ICScannerFunctionalUnitNegativeTransparency;
struct ICScannerFunctionalUnitPositiveTransparency;
struct INSendPaymentCurrencyAmountResolutionResult;
struct MPSCNNConvolutionTransposeGradientStateNode;
struct MPSCNNCrossChannelNormalizationGradientNode;
struct MPSRayOriginMinDistanceDirectionMaxDistance;
struct MTLBlitPassSampleBufferAttachmentDescriptor;
struct MTLPrimitiveAccelerationStructureDescriptor;
struct MTLRenderPassColorAttachmentDescriptorArray;
struct NSCollectionLayoutBoundarySupplementaryItem;
struct __Reply__host_virtual_physical_table_info_t;
struct __Reply__mach_voucher_extract_attr_recipe_t;
struct __Reply__task_unregister_dyld_image_infos_t;
struct __Request__exception_raise_state_identity_t;
struct __Request__mach_port_request_notification_t;
struct __Request__task_register_dyld_image_infos_t;
union fhstatus___30CF5BCCDA22B93749F2B0C0553C9F0B;
union in6_addr___330434928707C706902F20BE7BA89EB4;
union nlist_64___4D543BF749BB09F4875D250FEC3C43C7;
struct std____1____apply_cv_mf_false__false__true_;
struct std____1____apply_cv_mf_false__true__false_;
struct std____1____apply_cv_mf_true__false__false_;
struct std____1____atomic_base_signed_char__false_;
struct std____1____atomic_base_unsigned_int__true_;
struct std____1____libcpp_is_floating_point_float_;
struct std____1____libcpp_is_integral___uint128_t_;
struct std____1____libcpp_is_integral_signed_char_;
struct std____1____make_signed_unsigned_int__true_;
struct std____1____make_unsigned___int128_t__true_;
struct std____1____widen_from_utf8_16__vtbl_layout;
struct std____1____widen_from_utf8_32__vtbl_layout;
struct std____1__basic_istringstream_wchar_t__vtbl;
struct std____1__basic_ostringstream_wchar_t__vtbl;
struct std____1__basic_streambuf_char__vtbl_layout;
struct std____1__basic_stringbuf_char__vtbl_layout;
struct std____1__codecvt_wchar_t__char__mbstate_t_;
struct std____1__ctype_byname_wchar_t__vtbl_layout;
struct std____1__messages_byname_char__vtbl_layout;
struct std____1__moneypunct_byname_wchar_t__false_;
struct std____1__numpunct_byname_char__vtbl_layout;
struct std____1__time_get_byname_char__vtbl_layout;
struct std____1__time_put_byname_char__vtbl_layout;
struct unwind_info_section_header_lsda_index_entry;
struct ADInterstitialAdPresentationViewController;
struct ASAccountAuthenticationModificationRequest;
struct AVAssetReaderOutputMetadataAdaptorInternal;
struct AVAssetReaderSampleReferenceOutputInternal;
struct AVVideoCompositionLayerInstructionInternal;
struct BNNSLayerParametersLossSigmoidCrossEntropy;
struct BNNSLayerParametersLossSoftmaxCrossEntropy;
struct CLKComplicationTemplateExtraLargeRingImage;
struct CLKComplicationTemplateExtraLargeStackText;
struct CLKComplicationTemplateModularLargeColumns;
struct HMMutableCharacteristicThresholdRangeEvent;
struct INAddMediaMediaDestinationResolutionResult;
struct MPMusicPlayerPlayParametersQueueDescriptor;
struct MPSCNNBatchNormalizationStatisticsGradient;
struct MTLAccelerationStructureGeometryDescriptor;
struct MTLAccelerationStructureInstanceDescriptor;
struct MTLInstanceAccelerationStructureDescriptor;
struct MTLRenderPipelineColorAttachmentDescriptor;
struct NFCISO15693ReadMultipleBlocksConfiguration;
struct __Reply__host_get_multiuser_config_flags_t;
struct __Reply__host_security_create_task_token_t;
struct __Reply__host_set_multiuser_config_flags_t;
struct __Reply__mach_memory_object_memory_entry_t;
struct __Reply__processor_set_tasks_with_flavor_t;
struct __Request__mach_port_kobject_description_t;
struct __Request__task_set_phys_footprint_limit_t;
union ip6_hdr___4B39ABADBFFE16DEF7AD006048FD8DAF;
union rpc_err___30A4560269546B25A76610837B21C9C6;
union rpc_msg___E53F600B540232E6C505A79CFF91D695;
struct std____1____apply_cv_mf_false__true__true_;
struct std____1____apply_cv_mf_true__false__true_;
struct std____1____apply_cv_mf_true__true__false_;
struct std____1____atomic_base_signed_char__true_;
struct std____1____libcpp_is_integral___int128_t_;
struct std____1____make_signed___uint128_t__true_;
struct std____1____make_unsigned_long_long__true_;
struct std____1____narrow_to_utf8_16__vtbl_layout;
struct std____1____narrow_to_utf8_32__vtbl_layout;
struct std____1__basic_iostream_char__vtbl_layout;
struct std____1__basic_stringstream_wchar_t__vtbl;
struct std____1__collate_byname_char__vtbl_layout;
struct std____1__is_error_code_enum_std__io_errc_;
struct std____1__moneypunct_byname_wchar_t__true_;
struct AVAssetResourceLoadingDataRequestInternal;
struct AVAssetWriterInputMetadataAdaptorInternal;
struct AVAssetWriterInputPassDescriptionInternal;
struct AVMutableVideoCompositionLayerInstruction;
struct CLKComplicationTemplateExtraLargeRingText;
struct CNChangeHistoryRemoveMemberFromGroupEvent;
struct INBookRestaurantReservationIntentResponse;
struct INMessageAttributeOptionsResolutionResult;
struct INSearchForMediaMediaItemResolutionResult;
struct INSetDefrosterSettingsInCarIntentResponse;
struct INStartCallCallCapabilityResolutionResult;
struct MTLDrawIndexedPrimitivesIndirectArguments;
struct NSPersistentCloudKitContainerEventRequest;
struct TKSmartCardUserInteractionForPINOperation;
struct UIAccessibilityCustomRotorSearchPredicate;
struct UICollectionViewLayoutInvalidationContext;
struct UICollectionViewSupplementaryRegistration;
struct __Reply__exception_raise_state_identity_t;
struct __Reply__mach_port_request_notification_t;
struct __Reply__task_register_dyld_image_infos_t;
struct __Request__host_get_atm_diagnostic_flag_t;
struct __Request__host_security_set_task_token_t;
struct __Request__host_set_atm_diagnostic_flag_t;
struct __Request__processor_set_policy_control_t;
struct __Request__processor_set_policy_disable_t;
union glob_t___19FCDAD5B7B8F1E3E1965FC150EC2E21;
union ifconf___5DC96BFAC5DE8146297FC415464D4A33;
union ranlib___24EC4077698CAAE5404246A0B9CA27DF;
struct sqlite3_index_info__sqlite3_index_orderby;
struct std____1____apply_cv_mf_true__true__true_;
struct std____1____atomic_base_long_long__false_;
struct std____1____libcpp_is_integral_long_long_;
struct std____1____make_signed___int128_t__true_;
struct std____1____shared_weak_count_vtbl_layout;
struct std____1__basic_istream_char__vtbl_layout;
struct std____1__basic_ostream_char__vtbl_layout;
struct std____1__basic_string_char16_t_____short;
struct std____1__basic_string_char32_t_____short;
struct std____1__moneypunct_wchar_t__false__vtbl;
struct std____1__reverse_iterator_const_char__P_;
struct AVMutableAudioMixInputParametersInternal;
struct AVSampleBufferRenderSynchronizerInternal;
struct CLKComplicationTemplateModularLargeTable;
struct INAddTasksTargetTaskListResolutionResult;
struct INPlayMediaPlaybackSpeedResolutionResult;
struct MDLPhysicallyPlausibleScatteringFunction;
struct MPSCNNInstanceNormalizationGradientState;
struct MPSCNNLocalContrastNormalizationGradient;
struct MPSNNReduceFeatureChannelsAndWeightsMean;
struct MTLDispatchThreadgroupsIndirectArguments;
struct MTLRenderPassStencilAttachmentDescriptor;
struct MTLTilePipelineColorAttachmentDescriptor;
struct NSPersistentCloudKitContainerEventResult;
struct __Reply__mach_port_kobject_description_t;
struct __Reply__task_set_phys_footprint_limit_t;
struct __Request__host_default_memory_manager_t;
struct __Request__mach_memory_entry_ownership_t;
struct __Request__processor_set_policy_enable_t;
struct __Request__task_get_exc_guard_behavior_t;
struct __Request__task_set_exc_guard_behavior_t;
struct __Request__thread_convert_thread_state_t;
struct __Request__thread_swap_exception_ports_t;
union ifkpi___41FCD958378792E4BAD3BFA006FE005B;
union ifreq___E0FC42874A550D533741D474A8188B08;
struct inpcb___63812C9EE20CEA811C29254429EC420D;
union inpcb___7D460B6C0767DE165AC6133441A5769E;
union inpcb___8484DCF5CF4707A7FE251BC9B24F4E7E;
struct inpcb___A3F4421969B6E37110B41AEAB8712ABC;
union inpcb___C7595A3B4BE5971B51D33E1DD0735D09;
union nlist___4D543BF749BB09F4875D250FEC3C43C7;
struct os_workgroup_max_parallel_threads_attr_s;
struct std____1____atomic_base_char16_t__false_;
struct std____1____atomic_base_char32_t__false_;
struct std____1____atomic_base_long_long__true_;
struct std____1____check_tuple_constructor_fail;
struct std____1____libcpp_is_integral_char16_t_;
struct std____1____libcpp_is_integral_char32_t_;
struct std____1____make_signed_long_long__true_;
struct std____1____wrap_iter_const_char16_t__P_;
struct std____1____wrap_iter_const_char32_t__P_;
struct std____1__basic_ios_wchar_t__vtbl_layout;
struct std____1__basic_istringstream_char__vtbl;
struct std____1__basic_ostringstream_char__vtbl;
struct std____1__basic_string_char16_t_____long;
struct std____1__basic_string_char32_t_____long;
struct std____1__basic_string_wchar_t_____short;
struct std____1__codecvt_char__char__mbstate_t_;
struct std____1__ctype_byname_char__vtbl_layout;
struct std____1__integral_constant_bool__false_;
struct std____1__money_get_wchar_t__vtbl_layout;
struct std____1__money_put_wchar_t__vtbl_layout;
struct std____1__moneypunct_wchar_t__true__vtbl;
struct std____1__moneypunct_byname_char__false_;
struct AVAssetResourceLoadingRequestorInternal;
struct AVCaptureDataOutputSynchronizerInternal;
struct AVCaptureSynchronizedMetadataObjectData;
struct AVCaptureWhiteBalanceChromaticityValues;
struct AVVideoCompositionRenderContextInternal;
struct INCallRecordTypeOptionsResolutionResult;
struct INCarAirCirculationModeResolutionResult;
struct INPlaybackQueueLocationResolutionResult;
struct INSetClimateSettingsInCarIntentResponse;
struct MPSCNNConvolutionTransposeGradientState;
struct MPSCNNCrossChannelNormalizationGradient;
struct MPSCNNInstanceNormalizationGradientNode;
struct MPSCNNNormalizationMeanAndVarianceState;
struct MPSNDArrayBinarySecondaryGradientKernel;
struct MPSNNOptimizerStochasticGradientDescent;
struct MPSNNReduceFeatureChannelsAndWeightsSum;
struct NEVPNIKEv2SecurityAssociationParameters;
struct UIDocumentPickerExtensionViewController;
struct UIFontPickerViewControllerConfiguration;
struct VNTranslationalImageRegistrationRequest;
struct __Reply__host_get_atm_diagnostic_flag_t;
struct __Reply__host_security_set_task_token_t;
struct __Reply__host_set_atm_diagnostic_flag_t;
struct __Reply__processor_set_policy_control_t;
struct __Reply__processor_set_policy_disable_t;
union __RequestUnion__host_security_subsystem;
union __RequestUnion__processor_set_subsystem;
struct __Request__mach_port_guard_with_flags_t;
struct __Request__mach_port_space_basic_info_t;
struct __Request__processor_set_max_priority_t;
struct __Request__thread_get_exception_ports_t;
struct __Request__thread_set_exception_ports_t;
struct _bkt___880F21833111A601F09DBE5770BB9990;
struct dyld_chained_ptr_64_kernel_cache_rebase;
union icmp___B235664BFCA97AAED3CE94418077D709;
union icmp___C4DAEE47A1B4C5B2D295BC56AED6DB45;
struct std____1____atomic_base_char16_t__true_;
struct std____1____atomic_base_char32_t__true_;
struct std____1____atomic_base_wchar_t__false_;
struct std____1____libcpp_is_integral_wchar_t_;
struct std____1____scalar_hash_long_double__1_;
struct std____1__bad_function_call_vtbl_layout;
struct std____1__basic_streambuf_wchar_t__vtbl;
struct std____1__basic_string_char16_t_____raw;
struct std____1__basic_string_char16_t_____rep;
struct std____1__basic_string_char32_t_____raw;
struct std____1__basic_string_char32_t_____rep;
struct std____1__basic_string_wchar_t_____long;
struct std____1__basic_stringbuf_wchar_t__vtbl;
struct std____1__basic_stringstream_char__vtbl;
struct std____1__chrono__duration_long_double_;
struct std____1__integral_constant_bool__true_;
struct std____1__ios_base__failure_vtbl_layout;
struct std____1__messages_wchar_t__vtbl_layout;
struct std____1__messages_byname_wchar_t__vtbl;
struct std____1__moneypunct_byname_char__true_;
struct std____1__numpunct_wchar_t__vtbl_layout;
struct std____1__numpunct_byname_wchar_t__vtbl;
struct std____1__ratio_1__1000000000000000000_;
struct std____1__ratio_1000000000000000000__1_;
struct std____1__time_get_wchar_t__vtbl_layout;
struct std____1__time_get_byname_wchar_t__vtbl;
struct std____1__time_put_wchar_t__vtbl_layout;
struct std____1__time_put_byname_wchar_t__vtbl;
struct wait___7577FAE843D32618A04985FDB883FD87;
struct wait___D2BE3D1E9784782BB73F97C8AEDA900E;
struct AVAssetDownloadStorageManagementPolicy;
struct AVCaptureResolvedPhotoSettingsInternal;
struct AVCaptureSynchronizedDepthDataInternal;
struct AVPlayerItemMediaDataCollectorInternal;
struct CLKComplicationTemplateGraphicCircular;
struct CNChangeHistoryAddSubgroupToGroupEvent;
struct CPMessageListItemTrailingConfiguration;
union FTS___0F1278270169A806A3DDB076936BA357;
struct INGetCarPowerLevelStatusIntentResponse;
struct INSearchForNotebookItemsIntentResponse;
struct INSendMessageRecipientResolutionResult;
struct INTemporalEventTriggerResolutionResult;
struct MPSCNNConvolutionTransposeGradientNode;
struct MPSCNNConvolutionWeightsAndBiasesState;
struct MPSCNNSpatialNormalizationGradientNode;
struct MPSNNGramMatrixCalculationGradientNode;
struct MTLIndirectCommandBufferExecutionRange;
struct MTLIntersectionFunctionTableDescriptor;
struct MTLRenderPassColorAttachmentDescriptor;
struct MTLRenderPassDepthAttachmentDescriptor;
struct NSDiffableDataSourceSectionTransaction;
struct PKIssuerProvisioningExtensionPassEntry;
struct UIWindowSceneDestructionRequestOptions;
struct VNImageHomographicAlignmentObservation;
struct VNImageTranslationAlignmentObservation;
struct __Reply__host_default_memory_manager_t;
struct __Reply__mach_memory_entry_ownership_t;
struct __Reply__processor_set_policy_enable_t;
struct __Reply__task_get_exc_guard_behavior_t;
struct __Reply__task_set_exc_guard_behavior_t;
struct __Reply__thread_convert_thread_state_t;
struct __Reply__thread_swap_exception_ports_t;
union __RequestUnion__mach_voucher_subsystem;
union __RequestUnion__memory_entry_subsystem;
struct __Request__host_check_multiuser_mode_t;
struct __Request__host_request_notification_t;
struct __Request__host_swap_exception_ports_t;
struct __Request__mach_make_memory_entry_64_t;
struct __Request__mach_voucher_attr_command_t;
struct __Request__processor_set_stack_usage_t;
struct __Request__task_get_dyld_image_infos_t;
struct __Request__task_get_emulation_vector_t;
struct __Request__task_set_emulation_vector_t;
struct __Request__task_swap_exception_ports_t;
struct std____1____atomic_base_wchar_t__true_;
struct std____1____make_unsigned_short__true_;
struct std____1__basic_iostream_wchar_t__vtbl;
struct std____1__basic_istringstream_wchar_t_;
struct std____1__basic_ostringstream_wchar_t_;
struct std____1__basic_string_wchar_t_____raw;
struct std____1__basic_string_wchar_t_____rep;
struct std____1__collate_wchar_t__vtbl_layout;
struct std____1__collate_byname_wchar_t__vtbl;
struct std____1__istreambuf_iterator_wchar_t_;
struct std____1__moneypunct_char__false__vtbl;
struct std____1__num_get_wchar_t__vtbl_layout;
struct std____1__num_put_wchar_t__vtbl_layout;
struct std____1__ostreambuf_iterator_wchar_t_;
struct unwind_info_regular_second_level_entry;
struct unwind_info_section_header_index_entry;
struct ASAuthorizationSingleSignOnCredential;
struct AVAssetResourceLoadingRequestInternal;
struct AVAssetSegmentReportSampleInformation;
struct AVAsynchronousCIImageFilteringRequest;
struct AVAsynchronousVideoCompositionRequest;
struct AVCapturePhotoBracketSettingsInternal;
struct AVCaptureSynchronizedSampleBufferData;
struct AVPlayerItemMetadataCollectorInternal;
struct AVVideoCompositionInstructionInternal;
struct BNNSLayerParametersMultiheadAttention;
struct CABTMIDILocalPeripheralViewController;
struct CKFetchRecordZoneChangesConfiguration;
struct CPMessageListItemLeadingConfiguration;
struct CVPlanarPixelBufferInfo_YCbCrBiPlanar;
struct HKElectrocardiogramVoltageMeasurement;
struct ICScannerFunctionalUnitDocumentFeeder;
struct INCallDestinationTypeResolutionResult;
struct INDateComponentsRangeResolutionResult;
struct INDeleteTasksTaskListResolutionResult;
struct INGetReservationDetailsIntentResponse;
struct INOutgoingMessageTypeResolutionResult;
struct INRequestPaymentPayerResolutionResult;
struct INSpatialEventTriggerResolutionResult;
struct INWorkoutGoalUnitTypeResolutionResult;
struct INWorkoutLocationTypeResolutionResult;
struct MPMusicPlayerMediaItemQueueDescriptor;
struct MPSCNNGroupNormalizationGradientState;
struct MPSIntersectionDistancePrimitiveIndex;
struct MPSMatrixRandomDistributionDescriptor;
struct MPSNDArrayBinaryPrimaryGradientKernel;
struct MPSNNReduceFeatureChannelsArgumentMax;
struct MPSNNReduceFeatureChannelsArgumentMin;
struct MPSNNReductionFeatureChannelsMeanNode;
struct MPSNNReductionSpatialMeanGradientNode;
struct MPSQuadrilateralAccelerationStructure;
struct NFCISO15693CustomCommandConfiguration;
struct PKDisbursementAuthorizationController;
struct PKPaymentRequestMerchantSessionUpdate;
struct PKPaymentRequestShippingContactUpdate;
struct SFSpeechAudioBufferRecognitionRequest;
struct UIDocumentBrowserTransitionController;
struct VNHomographicImageRegistrationRequest;
union __ReplyUnion__host_security_subsystem;
union __ReplyUnion__processor_set_subsystem;
struct __Reply__mach_port_guard_with_flags_t;
struct __Reply__mach_port_space_basic_info_t;
struct __Reply__processor_set_max_priority_t;
struct __Reply__thread_get_exception_ports_t;
struct __Reply__thread_set_exception_ports_t;
union __RequestUnion__clock_reply_subsystem;
struct __Request__host_create_mach_voucher_t;
struct __Request__host_get_exception_ports_t;
struct __Request__host_set_exception_ports_t;
struct __Request__mach_port_dnrequest_info_t;
struct __Request__mach_port_extract_member_t;
struct __Request__mach_port_get_attributes_t;
struct __Request__mach_port_get_set_status_t;
struct __Request__mach_port_set_attributes_t;
struct __Request__processor_get_assignment_t;
struct __Request__processor_set_statistics_t;
struct __Request__task_get_exception_ports_t;
struct __Request__task_set_exception_ports_t;
struct __Request__thread_swap_mach_voucher_t;
struct std____1____atomic_base_short__false_;
struct std____1____basic_string_common_true_;
struct std____1____libcpp_is_integral_short_;
struct std____1____make_unsigned_bool__true_;
struct std____1____make_unsigned_long__true_;
struct std____1____scalar_hash_long_long__1_;
struct std____1__basic_ios_char__vtbl_layout;
struct std____1__basic_istream_wchar_t__vtbl;
struct std____1__basic_ostream_wchar_t__vtbl;
struct std____1__basic_string_char_____short;
struct std____1__basic_string_view_char16_t_;
struct std____1__basic_string_view_char32_t_;
struct std____1__basic_stringstream_wchar_t_;
struct std____1__chrono__duration_long_long_;
struct std____1__money_get_char__vtbl_layout;
struct std____1__money_put_char__vtbl_layout;
struct std____1__moneypunct_char__true__vtbl;
struct std__bad_array_new_length_vtbl_layout;
struct ASCredentialProviderExtensionContext;
struct AUInputSamplesInOutputCallbackStruct;
struct AVAssetWriterInputPixelBufferAdaptor;
struct AVCaptureBracketedStillImageSettings;
struct AVCaptureSystemPressureStateInternal;
struct AVMutableVideoCompositionInstruction;
struct AVVideoCompositionRenderHintInternal;
struct AudioPacketDependencyInfoTranslation;
struct AudioPacketRangeByteCountTranslation;
struct BNNSLayerParametersTensorContraction;
struct CKDiscoverAllUserIdentitiesOperation;
struct CNChangeHistoryAddMemberToGroupEvent;
struct GKFriendRequestComposeViewController;
struct INLocationSearchTypeResolutionResult;
struct INPlayMediaMediaItemResolutionResult;
struct INPlaybackRepeatModeResolutionResult;
struct INSetSeatSettingsInCarIntentResponse;
struct MIDIObjectPropertyChangeNotification;
struct MPChangePlaybackPositionCommandEvent;
struct MPSCNNBatchNormalizationGradientNode;
struct MPSCNNDepthWiseConvolutionDescriptor;
struct MPSCNNGroupNormalizationGradientNode;
struct MPSCNNLocalContrastNormalizationNode;
struct MPSCNNNormalizationGammaAndBetaState;
struct MPSCNNUpsamplingBilinearGradientNode;
struct MPSNNReductionFeatureChannelsMaxNode;
struct MPSNNReductionFeatureChannelsMinNode;
struct MPSNNReductionFeatureChannelsSumNode;
struct MPSRayOriginMaskDirectionMaxDistance;
struct MTLVertexBufferLayoutDescriptorArray;
struct NSPersistentCloudKitContainerOptions;
struct NSSecureUnarchiveFromDataTransformer;
struct NSURLAuthenticationChallengeInternal;
struct PKAddPaymentPassRequestConfiguration;
struct PKAddSecureElementPassViewController;
struct PKIssuerProvisioningExtensionHandler;
struct PKPaymentAuthorizationViewController;
struct PKPaymentRequestShippingMethodUpdate;
struct UIAccessibilityCustomRotorItemResult;
struct UIPercentDrivenInteractiveTransition;
union __ReplyUnion__mach_voucher_subsystem;
union __ReplyUnion__memory_entry_subsystem;
struct __Reply__host_check_multiuser_mode_t;
struct __Reply__host_request_notification_t;
struct __Reply__host_swap_exception_ports_t;
struct __Reply__mach_make_memory_entry_64_t;
struct __Reply__mach_voucher_attr_command_t;
struct __Reply__processor_set_stack_usage_t;
struct __Reply__task_get_dyld_image_infos_t;
struct __Reply__task_get_emulation_vector_t;
struct __Reply__task_set_emulation_vector_t;
struct __Reply__task_swap_exception_ports_t;
union __RequestUnion__clock_priv_subsystem;
union __RequestUnion__thread_act_subsystem;
struct __Request__host_processor_set_priv_t;
struct __Request__mach_port_allocate_full_t;
struct __Request__mach_port_allocate_name_t;
struct __Request__mach_port_extract_right_t;
struct __Request__mach_port_insert_member_t;
struct __Request__mach_port_kernel_object_t;
struct __Request__mach_voucher_debug_info_t;
struct __Request__mach_zone_info_for_zone_t;
struct __Request__task_map_corpse_info_64_t;
struct __Request__thread_get_mach_voucher_t;
struct __Request__thread_get_special_port_t;
struct __Request__thread_set_mach_voucher_t;
struct __Request__thread_set_special_port_t;
struct mach_msg_guarded_port_descriptor32_t;
struct mach_msg_guarded_port_descriptor64_t;
struct std____1____atomic_base_bool__false_;
struct std____1____atomic_base_char__false_;
struct std____1____atomic_base_long__false_;
struct std____1____atomic_base_short__true_;
struct std____1____libcpp_is_integral_bool_;
struct std____1____libcpp_is_integral_char_;
struct std____1____libcpp_is_integral_long_;
struct std____1____make_signed_short__true_;
struct std____1____make_unsigned_int__true_;
struct std____1____scalar_hash___int128__2_;
struct std____1____shared_count_vtbl_layout;
struct std____1____widen_from_utf8_16__vtbl;
struct std____1____widen_from_utf8_32__vtbl;
struct std____1__atomic_unsigned_long_long_;
struct std____1__basic_streambuf_char__vtbl;
struct std____1__basic_string_char_____long;
struct std____1__basic_string_view_wchar_t_;
struct std____1__basic_stringbuf_char__vtbl;
struct std____1__bidirectional_iterator_tag;
struct std____1__ctype_wchar_t__vtbl_layout;
struct std____1__ctype_byname_wchar_t__vtbl;
struct std____1__error_category_vtbl_layout;
struct std____1__hash_std__error_condition_;
struct std____1__messages_char__vtbl_layout;
struct std____1__messages_byname_char__vtbl;
struct std____1__moneypunct_wchar_t__false_;
struct std____1__numpunct_char__vtbl_layout;
struct std____1__numpunct_byname_char__vtbl;
struct std____1__random_access_iterator_tag;
struct std____1__ratio_1__1000000000000000_;
struct std____1__ratio_1000000000000000__1_;
struct std____1__time_get_char__vtbl_layout;
struct std____1__time_get_byname_char__vtbl;
struct std____1__time_put_char__vtbl_layout;
struct std____1__time_put_byname_char__vtbl;
struct ASAuthorizationSingleSignOnProvider;
struct AVAssetReaderAudioMixOutputInternal;
struct AVAssetReaderVideoCompositionOutput;
struct AVAudioSessionDataSourceDescription;
struct AVCaptureAudioPreviewOutputInternal;
struct AVCaptureSynchronizedDataCollection;
struct AVMetadataMachineReadableCodeObject;
struct AVSampleBufferAudioRendererInternal;
struct AVVideoCompositionCoreAnimationTool;
struct CKFetchNotificationChangesOperation;
struct CPTemplateApplicationDashboardScene;
struct CVPlanarPixelBufferInfo_YCbCrPlanar;
struct GKTurnBasedMatchmakerViewController;
struct HMCharacteristicThresholdRangeEvent;
struct INAddMediaMediaItemResolutionResult;
struct INMediaAffinityTypeResolutionResult;
struct INRelativeReferenceResolutionResult;
struct INRestaurantGuestDisplayPreferences;
struct INSetAudioSourceInCarIntentResponse;
struct INSetMessageAttributeIntentResponse;
struct INUIEditVoiceShortcutViewController;
struct INUpdateMediaAffinityIntentResponse;
struct MPMusicPlayerControllerMutableQueue;
struct MPNowPlayingInfoLanguageOptionGroup;
struct MPSCNNCrossChannelNormalizationNode;
struct MPSCNNDilatedPoolingMaxGradientNode;
struct MPSCNNInstanceNormalizationGradient;
struct MPSCNNSubPixelConvolutionDescriptor;
struct MPSCNNUpsamplingNearestGradientNode;
struct MPSMatrixBatchNormalizationGradient;
struct MTLRasterizationRateLayerDescriptor;
struct NSCollectionLayoutSupplementaryItem;
struct NSDiffableDataSourceSectionSnapshot;
struct NSPersistentStoreAsynchronousResult;
struct PDFAppearanceCharacteristicsPrivate;
struct PHContentEditingInputRequestOptions;
struct PKAddSecureElementPassConfiguration;
struct PKIssuerProvisioningExtensionStatus;
struct PKPaymentRequestPaymentMethodUpdate;
struct SFSafariViewControllerConfiguration;
struct UICollectionLayoutListConfiguration;
struct UICollectionViewCompositionalLayout;
struct VTDecompressionOutputCallbackRecord;
union __ReplyUnion__clock_reply_subsystem;
struct __Reply__host_create_mach_voucher_t;
struct __Reply__host_get_exception_ports_t;
struct __Reply__host_set_exception_ports_t;
struct __Reply__mach_port_dnrequest_info_t;
struct __Reply__mach_port_extract_member_t;
struct __Reply__mach_port_get_attributes_t;
struct __Reply__mach_port_get_set_status_t;
struct __Reply__mach_port_set_attributes_t;
struct __Reply__processor_get_assignment_t;
struct __Reply__processor_set_statistics_t;
struct __Reply__task_get_exception_ports_t;
struct __Reply__task_set_exception_ports_t;
struct __Reply__thread_swap_mach_voucher_t;
union __RequestUnion__host_priv_subsystem;
union __RequestUnion__mach_host_subsystem;
union __RequestUnion__mach_port_subsystem;
union __RequestUnion__processor_subsystem;
struct __Request__host_get_clock_control_t;
struct __Request__host_get_clock_service_t;
struct __Request__mach_make_memory_entry_t;
struct __Request__mach_port_allocate_qos_t;
struct __Request__mach_port_insert_right_t;
struct __Request__mach_vm_region_info_64_t;
struct __Request__task_swap_mach_voucher_t;
struct dyld_chained_ptr_32_firmware_rebase;
struct dyld_chained_ptr_arm64e_auth_bind24;
struct dyld_chained_ptr_arm64e_auth_rebase;
struct ip_timestamp__ipt_timestamp__ipt_ta;
struct os_workgroup_interval_data_opaque_s;
struct std____1____atomic_base_char__true_;
struct std____1____atomic_base_int__false_;
struct std____1____atomic_base_long__true_;
struct std____1____libcpp_is_integral_int_;
struct std____1____make_signed_bool__true_;
struct std____1____make_signed_long__true_;
struct std____1____narrow_to_utf8_16__vtbl;
struct std____1____narrow_to_utf8_32__vtbl;
struct std____1____return_temporary_buffer;
struct std____1__basic_iostream_char__vtbl;
struct std____1__basic_istringstream_char_;
struct std____1__basic_ostringstream_char_;
struct std____1__basic_string_char_____raw;
struct std____1__basic_string_char_____rep;
struct std____1__collate_char__vtbl_layout;
struct std____1__collate_byname_char__vtbl;
struct std____1__is_scalar_std__nullptr_t_;
struct std____1__istreambuf_iterator_char_;
struct std____1__locale__facet_vtbl_layout;
struct std____1__moneypunct_wchar_t__true_;
struct std____1__num_get_char__vtbl_layout;
struct std____1__num_put_char__vtbl_layout;
struct std____1__ostreambuf_iterator_char_;
struct ABPeoplePickerNavigationController;
struct AROrientationTrackingConfiguration;
struct ASAuthorizationSingleSignOnRequest;
struct ASCredentialProviderViewController;
struct AVAssetReaderOutputMetadataAdaptor;
struct AVAssetReaderSampleReferenceOutput;
struct AVAudioEnvironmentReverbParameters;
struct AVCaptureDeviceInputSourceInternal;
struct AVCaptureVideoPreviewLayerInternal;
struct AVMetadataItemValueRequestInternal;
struct AVPlayerItemAccessLogEventInternal;
struct AVPlayerItemMetadataOutputInternal;
struct AVSampleBufferDisplayLayerInternal;
struct AVVideoCompositionLayerInstruction;
struct AudioPacketRollDistanceTranslation;
struct BNNSLayerParametersBroadcastMatMul;
struct CHHapticParameterCurveControlPoint;
struct CNChangeHistoryDropEverythingEvent;
struct EAWiFiUnconfiguredAccessoryBrowser;
struct INCarSignalOptionsResolutionResult;
struct INGetRestaurantGuestIntentResponse;
struct INMediaDestinationResolutionResult;
struct INMessageAttributeResolutionResult;
struct INNotebookItemTypeResolutionResult;
struct INRestaurantReservationUserBooking;
struct INSendPaymentPayeeResolutionResult;
struct INStartCallContactResolutionResult;
struct INStartPhotoPlaybackIntentResponse;
struct INUIAddVoiceShortcutViewController;
struct MPChangeLanguageOptionCommandEvent;
struct MPMusicPlayerApplicationController;
struct MPSCNNBatchNormalizationStatistics;
struct MPSCNNConvolutionGradientStateNode;
struct MPSCNNConvolutionTransposeGradient;
struct MPSCNNSpatialNormalizationGradient;
struct MPSImageEuclideanDistanceTransform;
struct MPSNNGramMatrixCalculationGradient;
struct MTLAccelerationStructureDescriptor;
struct MTLDrawPrimitivesIndirectArguments;
struct MTLIndirectCommandBufferDescriptor;
struct MTLTriangleTessellationFactorsHalf;
struct NSMetadataQueryAttributeValueTuple;
struct NSPersistentCloudKitContainerEvent;
struct NSURLSessionTaskTransactionMetrics;
struct PKBarcodeEventConfigurationRequest;
struct PKPaymentInformationEventExtension;
struct UICellAccessoryDisclosureIndicator;
struct UICollectionViewDiffableDataSource;
struct UICollectionViewFocusUpdateContext;
struct VNGenerateImageFeaturePrintRequest;
union __ReplyUnion__clock_priv_subsystem;
union __ReplyUnion__thread_act_subsystem;
struct __Reply__host_processor_set_priv_t;
struct __Reply__mach_port_allocate_full_t;
struct __Reply__mach_port_allocate_name_t;
struct __Reply__mach_port_extract_right_t;
struct __Reply__mach_port_insert_member_t;
struct __Reply__mach_port_kernel_object_t;
struct __Reply__mach_voucher_debug_info_t;
struct __Reply__mach_zone_info_for_zone_t;
struct __Reply__task_map_corpse_info_64_t;
struct __Reply__thread_get_mach_voucher_t;
struct __Reply__thread_get_special_port_t;
struct __Reply__thread_set_mach_voucher_t;
struct __Reply__thread_set_special_port_t;
union __RequestUnion__lock_set_subsystem;
struct __Request__exception_raise_state_t;
struct __Request__host_get_special_port_t;
struct __Request__host_set_special_port_t;
struct __Request__mach_port_get_context_t;
struct __Request__mach_port_get_srights_t;
struct __Request__mach_port_move_member_t;
struct __Request__mach_port_set_context_t;
struct __Request__mach_port_set_mscount_t;
struct __Request__processor_set_default_t;
struct __Request__processor_set_destroy_t;
struct __Request__processor_set_threads_t;
struct __Request__task_create_suid_cred_t;
struct __Request__task_get_mach_voucher_t;
struct __Request__task_get_special_port_t;
struct __Request__task_set_mach_voucher_t;
struct __Request__task_set_special_port_t;
struct __Request__thread_assign_default_t;
struct __Request__thread_create_running_t;
struct __Request__thread_get_assignment_t;
struct dyld_cache_accelerator_initializer;
struct mach_msg_guarded_port_descriptor_t;
struct mach_port_destroyed_notification_t;
struct std____1____atomic_base_int__true_;
struct std____1____do_message_vtbl_layout;
struct std____1____make_signed_int__true_;
struct std____1____scalar_hash_double__1_;
struct std____1____shared_weak_count_vtbl;
struct std____1____wrap_iter_char16_t__P_;
struct std____1____wrap_iter_char32_t__P_;
struct std____1__bad_weak_ptr_vtbl_layout;
struct std____1__basic_istream_char__vtbl;
struct std____1__basic_ostream_char__vtbl;
struct std____1__basic_streambuf_wchar_t_;
struct std____1__basic_stringbuf_wchar_t_;
struct std____1__basic_stringstream_char_;
struct std____1__hash_unsigned_long_long_;
struct std____1__messages_byname_wchar_t_;
struct std____1__numpunct_byname_wchar_t_;
struct std____1__system_error_vtbl_layout;
struct std____1__time_get_byname_wchar_t_;
struct std____1__time_put_byname_wchar_t_;
struct _0F86A902432A6AC29AEC495AB2D22C1F;
struct _1948E5937AB2C1104C85847A9E0DBADF;
struct _213D9A961E8B493221875F078C74556F;
struct _2480E168A8CF38FB319C7F302A3EC51F;
struct _267FA10EEE474E805B8C8A97DF30A983;
struct _393C16A032292777F0C3725FFB2C0008;
struct _678A87172BFFCBF6A0FE0078F3A89BFB;
union _79F3AB6A34861CC03A68F8EA0BB70127;
struct _883DE74D7D01918C60D70A31734D633A;
struct _8991E2D102B0A4682EC5E58EBA9CEC64;
union _97632B3213A37D6762BB025878435371;
struct _9CD7DB5FE14A2A04079DBE65AB72DE56;
struct _AC186CABF9007C2DA87CD3BECABD7D45;
struct _BA13FB9ECCDB043D951462000929904B;
struct _BF7AC7AAFAE2A9D4F26CD1E6B816F6B2;
struct _BFD7413E14FC21CAB05150D69A0647C0;
struct _C9F83CCA9902694B07BD70569193FE6A;
struct _F11DCF9AB84521AF9E41C64324B37A66;
struct ARPositionalTrackingConfiguration;
struct ASWebAuthenticationSessionRequest;
struct AVAssetResourceLoadingDataRequest;
struct AVAssetWriterInputMetadataAdaptor;
struct AVAssetWriterInputPassDescription;
struct AVAudioMixInputParametersInternal;
struct AVCaptureStillImageOutputInternal;
struct AVCaptureSynchronizedDataInternal;
struct AVCompositionTrackSegmentInternal;
struct AVMutableCompositionTrackInternal;
struct AVMutableVideoCompositionInternal;
struct AVOutputSettingsAssistantInternal;
struct AVPlayerItemErrorLogEventInternal;
struct AVPlayerItemLegibleOutputInternal;
struct AudioIndependentPacketTranslation;
struct AudioUnitParameterStringFromValue;
struct AudioUnitParameterValueFromString;
struct BNNSFullyConnectedLayerParameters;
struct BNNSLayerParametersFullyConnected;
struct CGDataProviderSequentialCallbacks;
struct CKDiscoverUserIdentitiesOperation;
struct CKFetchRecordZoneChangesOperation;
struct CKFetchShareParticipantsOperation;
struct CNChangeHistoryDeleteContactEvent;
struct CNChangeHistoryUpdateContactEvent;
struct CompileTimeAssertionChecks_DNS_SD;
struct FPUIActionExtensionViewController;
struct GCExtendedGamepadSnapShotDataV100;
struct INActivateCarSignalIntentResponse;
struct INBookRestaurantReservationIntent;
struct INDeleteTasksTaskResolutionResult;
struct INNoteContentTypeResolutionResult;
struct INRelativeSettingResolutionResult;
struct INRestaurantGuestResolutionResult;
struct INSearchCallHistoryIntentResponse;
struct INSearchForAccountsIntentResponse;
struct INSearchForMessagesIntentResponse;
struct INSetDefrosterSettingsInCarIntent;
struct INSnoozeTasksTaskResolutionResult;
struct INSpeakableStringResolutionResult;
struct MPMusicPlayerStoreQueueDescriptor;
struct MPSGraphConvolution2DOpDescriptor;
struct MPSImageStatisticsMeanAndVariance;
struct MTLIntersectionFunctionDescriptor;
struct MTLRasterizationRateMapDescriptor;
struct MTLRenderPassAttachmentDescriptor;
struct MTLStageInRegionIndirectArguments;
struct MTLVertexAmplificationViewMapping;
struct MTLVertexAttributeDescriptorArray;
struct MTLVisibleFunctionTableDescriptor;
struct NETransparentProxyNetworkSettings;
struct NSCollectionLayoutGroupCustomItem;
struct NSUnitElectricPotentialDifference;
struct RPBroadcastActivityViewController;
struct SKCloudServiceSetupViewController;
struct SKProductStorePromotionController;
struct STScreenTimeConfigurationObserver;
struct SparseOpaquePreconditioner_Double;
struct SparseOpaqueSymbolicFactorization;
struct UIAccessibilityLocationDescriptor;
struct UIMutableUserNotificationCategory;
struct UNTimeIntervalNotificationTrigger;
struct VNDetectFaceCaptureQualityRequest;
struct _SparseIterativeMethodBaseOptions;
union __ReplyUnion__host_priv_subsystem;
union __ReplyUnion__mach_host_subsystem;
union __ReplyUnion__mach_port_subsystem;
union __ReplyUnion__processor_subsystem;
struct __Reply__host_get_clock_control_t;
struct __Reply__host_get_clock_service_t;
struct __Reply__mach_make_memory_entry_t;
struct __Reply__mach_port_allocate_qos_t;
struct __Reply__mach_port_insert_right_t;
struct __Reply__mach_vm_region_info_64_t;
struct __Reply__task_swap_mach_voucher_t;
struct __Request__clock_get_attributes_t;
struct __Request__clock_set_attributes_t;
struct __Request__host_priv_statistics_t;
struct __Request__mach_port_deallocate_t;
struct __Request__mach_port_space_info_t;
struct __Request__mach_port_swap_guard_t;
struct __Request__processor_set_create_t;
struct __Request__task_generate_corpse_t;
struct __Request__task_map_corpse_info_t;
struct __Request__thread_depress_abort_t;
struct __Request__vm_machine_attribute_t;
struct __Request__vm_map_exec_lockdown_t;
struct __Request__vm_mapped_pages_info_t;
struct __Request__vm_region_recurse_64_t;
struct dyld_chained_ptr_arm64e_auth_bind;
struct mach_msg_ool_ports_descriptor32_t;
struct mach_msg_ool_ports_descriptor64_t;
struct mach_send_possible_notification_t;
struct std____1____extract_key_first_tag;
struct std____1____is_referenceable_impl;
struct std____1____scalar_hash_float__0_;
struct std____1__basic_ifstream_wchar_t_;
struct std____1__basic_ios_wchar_t__vtbl;
struct std____1__basic_iostream_wchar_t_;
struct std____1__basic_ofstream_wchar_t_;
struct std____1__basic_string_view_char_;
struct std____1__collate_byname_wchar_t_;
struct std____1__ctype_char__vtbl_layout;
struct std____1__ctype_byname_char__vtbl;
struct std____1__money_get_wchar_t__vtbl;
struct std____1__money_put_wchar_t__vtbl;
struct std____1__moneypunct_char__false_;
struct std____1__ratio_1__1000000000000_;
struct std____1__ratio_1000000000000__1_;
struct std____1__unique_lock_std__mutex_;
struct std__bad_array_length_vtbl_layout;
struct std__invalid_argument_vtbl_layout;
struct std__nested_exception_vtbl_layout;
struct ASAuthorizationAppleIDCredential;
struct AVAssetReaderTrackOutputInternal;
struct AVAudioSessionChannelDescription;
struct AVCaptureAudioDataOutputInternal;
struct AVCaptureAudioFileOutputInternal;
struct AVCaptureDepthDataOutputInternal;
struct AVCaptureMovieFileOutputInternal;
struct AVCaptureVideoDataOutputInternal;
struct AVDateRangeMetadataGroupInternal;
struct AVMutableAudioMixInputParameters;
struct AVSampleBufferRenderSynchronizer;
struct AudioOutputUnitStartAtTimeParams;
struct BNNSLayerParametersNormalization;
struct CKMarkNotificationsReadOperation;
struct CVFillExtendedPixelsCallBackData;
struct GKLinearCongruentialRandomSource;
struct HKCumulativeQuantitySeriesSample;
struct INCallCapabilityResolutionResult;
struct INCallRecordTypeResolutionResult;
struct INCarAudioSourceResolutionResult;
struct INCurrencyAmountResolutionResult;
struct INDateComponentsResolutionResult;
struct INDateSearchTypeResolutionResult;
struct INGetCarLockStatusIntentResponse;
struct INPaymentAccountResolutionResult;
struct INSaveProfileInCarIntentResponse;
struct INSendRideFeedbackIntentResponse;
struct INSetCarLockStatusIntentResponse;
struct INSetTaskAttributeIntentResponse;
struct INVisualCodeTypeResolutionResult;
struct MPChangePlaybackRateCommandEvent;
struct MPSCNNBatchNormalizationGradient;
struct MPSCNNFullyConnectedGradientNode;
struct MPSCNNGroupNormalizationGradient;
struct MPSCNNLocalContrastNormalization;
struct MPSCNNPoolingAverageGradientNode;
struct MPSCNNUpsamplingBilinearGradient;
struct MPSImageLaplacianPyramidSubtract;
struct MPSInstanceAccelerationStructure;
struct MPSNDArrayMultiaryGradientKernel;
struct MPSNNArithmeticGradientStateNode;
struct MPSTriangleAccelerationStructure;
struct MTLCounterResultStageUtilization;
struct MTLCounterSampleBufferDescriptor;
struct MTLPipelineBufferDescriptorArray;
struct NEOnDemandRuleEvaluateConnection;
struct NSCollectionLayoutDecorationItem;
struct NSPersistentHistoryChangeRequest;
struct PKPaymentAuthorizationController;
struct SparseOpaqueFactorization_Double;
struct SparseOpaquePreconditioner_Float;
struct TKTokenSmartCardPINAuthOperation;
struct UICellAccessoryOutlineDisclosure;
struct UICollectionViewCellRegistration;
struct UICollectionViewLayoutAttributes;
struct UICollectionViewTransitionLayout;
struct UIMutableApplicationShortcutItem;
struct UIReferenceLibraryViewController;
struct UISceneDestructionRequestOptions;
struct UIScreenEdgePanGestureRecognizer;
struct VSSubscriptionRegistrationCenter;
union __ReplyUnion__lock_set_subsystem;
struct __Reply__exception_raise_state_t;
struct __Reply__host_get_special_port_t;
struct __Reply__host_set_special_port_t;
struct __Reply__mach_port_get_context_t;
struct __Reply__mach_port_get_srights_t;
struct __Reply__mach_port_move_member_t;
struct __Reply__mach_port_set_context_t;
struct __Reply__mach_port_set_mscount_t;
struct __Reply__processor_set_default_t;
struct __Reply__processor_set_destroy_t;
struct __Reply__processor_set_threads_t;
struct __Reply__task_create_suid_cred_t;
struct __Reply__task_get_mach_voucher_t;
struct __Reply__task_get_special_port_t;
struct __Reply__task_set_mach_voucher_t;
struct __Reply__task_set_special_port_t;
struct __Reply__thread_assign_default_t;
struct __Reply__thread_create_running_t;
struct __Reply__thread_get_assignment_t;
union __RequestUnion__vm_map_subsystem;
struct __Request__host_kernel_version_t;
struct __Request__host_lockgroup_info_t;
struct __Request__host_processor_info_t;
struct __Request__host_processor_sets_t;
struct __Request__lock_handoff_accept_t;
struct __Request__mach_port_construct_t;
struct __Request__mach_port_set_seqno_t;
struct __Request__mach_ports_register_t;
struct __Request__mach_vm_region_info_t;
struct __Request__processor_set_tasks_t;
struct __Request__task_assign_default_t;
struct __Request__task_get_assignment_t;
struct __Request__task_set_port_space_t;
struct __Request__thread_abort_safely_t;
struct __Request__vm_purgable_control_t;
struct dyld_chained_ptr_32_cache_rebase;
struct mach_port_deleted_notification_t;
struct os_workgroup_join_token_opaque_s;
struct std____1____extract_key_fail_tag;
struct std____1____extract_key_self_tag;
struct std____1____libcpp_is_void_void_;
struct std____1____padding_char16_t__2_;
struct std____1____padding_char32_t__4_;
struct std____1__atomic_unsigned_short_;
struct std____1__bad_function_call_vtbl;
struct std____1__basic_filebuf_wchar_t_;
struct std____1__basic_fstream_wchar_t_;
struct std____1__basic_istream_wchar_t_;
struct std____1__basic_ostream_wchar_t_;
struct std____1__basic_string_char16_t_;
struct std____1__basic_string_char32_t_;
struct std____1__ios_base__failure_vtbl;
struct std____1__messages_wchar_t__vtbl;
struct std____1__moneypunct_char__true_;
struct std____1__numpunct_wchar_t__vtbl;
struct std____1__time_get_wchar_t__vtbl;
struct std____1__time_put_wchar_t__vtbl;
struct std__underflow_error_vtbl_layout;
struct vImage_MultidimensionalTableData;
struct ASAuthorizationPasswordProvider;
struct AVAssetResourceLoadingRequestor;
struct AVAssetWriterInputGroupInternal;
struct AVCameraCalibrationDataInternal;
struct AVCaptureDataOutputSynchronizer;
struct AVCaptureDeviceDiscoverySession;
struct AVCaptureMetadataOutputInternal;
struct AVFragmentedAssetMinderInternal;
struct AVMutableDateRangeMetadataGroup;
struct AVMutableMediaSelectionInternal;
struct AVPlayerItemVideoOutputInternal;
struct AVVideoCompositionRenderContext;
struct CKFetchDatabaseChangesOperation;
struct CKFetchRecordZoneChangesOptions;
struct CNChangeHistoryDeleteGroupEvent;
struct CNChangeHistoryUpdateGroupEvent;
struct CXCallDirectoryExtensionContext;
struct INDailyRoutineRelevanceProvider;
struct INListRideOptionsIntentResponse;
struct INPaymentAmountResolutionResult;
struct INPaymentMethodResolutionResult;
struct INPaymentStatusResolutionResult;
struct INSearchForPhotosIntentResponse;
struct INSetClimateSettingsInCarIntent;
struct INSetProfileInCarIntentResponse;
struct INSetRadioStationIntentResponse;
struct MIDIObjectAddRemoveNotification;
struct MLCMultiheadAttentionDescriptor;
struct MPChangePlaybackPositionCommand;
struct MPChangeShuffleModeCommandEvent;
struct MPMediaPlaylistCreationMetadata;
struct MPPlayableContentManagerContext;
struct MPSCNNCrossChannelNormalization;
struct MPSCNNDilatedPoolingMaxGradient;
struct MPSCNNInstanceNormalizationNode;
struct MPSCNNPoolingL2NormGradientNode;
struct MPSCNNUpsamplingNearestGradient;
struct MPSMatrixFullyConnectedGradient;
struct MPSNNMultiplicationGradientNode;
struct MPSPolygonAccelerationStructure;
struct MTLRasterizationRateSampleArray;
struct MTLTileRenderPipelineDescriptor;
struct MTLVertexBufferLayoutDescriptor;
struct NSCoreDataCoreSpotlightDelegate;
struct NSDiffableDataSourceTransaction;
struct NSPersonNameComponentsFormatter;
struct OpaqueJSPropertyNameAccumulator;
struct PKAddShareablePassConfiguration;
struct PKBarcodeEventSignatureResponse;
struct SLComposeSheetConfigurationItem;
struct SparseOpaqueFactorization_Float;
struct UICollectionViewDropPlaceholder;
struct UIDocumentBrowserViewController;
struct UIDocumentInteractionController;
struct UILargeContentViewerInteraction;
struct UIMutableUserNotificationAction;
struct UINotificationFeedbackGenerator;
struct UIPopoverPresentationController;
struct UISceneActivationRequestOptions;
struct UISearchContainerViewController;
struct UNTextInputNotificationResponse;
struct VNCoreMLFeatureValueObservation;
struct __Reply__clock_get_attributes_t;
struct __Reply__clock_set_attributes_t;
struct __Reply__host_priv_statistics_t;
struct __Reply__mach_port_deallocate_t;
struct __Reply__mach_port_space_info_t;
struct __Reply__mach_port_swap_guard_t;
struct __Reply__processor_set_create_t;
struct __Reply__task_generate_corpse_t;
struct __Reply__task_map_corpse_info_t;
struct __Reply__thread_depress_abort_t;
struct __Reply__vm_machine_attribute_t;
struct __Reply__vm_map_exec_lockdown_t;
struct __Reply__vm_mapped_pages_info_t;
struct __Reply__vm_region_recurse_64_t;
union __RequestUnion__clock_subsystem;
struct __Request__host_get_UNDServer_t;
struct __Request__host_get_boot_info_t;
struct __Request__host_get_io_master_t;
struct __Request__host_set_UNDServer_t;
struct __Request__mach_port_allocate_t;
struct __Request__mach_port_destruct_t;
struct __Request__mach_port_get_refs_t;
struct __Request__mach_port_mod_refs_t;
struct __Request__processor_set_info_t;
struct __Request__task_purgable_info_t;
struct __Request__task_set_emulation_t;
struct mach_msg_ool_ports_descriptor_t;
struct opaqueCMBufferQueueTriggerToken;
struct std____1____is_construct____nat;
struct std____1____lazy_and_impl_true_;
struct std____1____lazy_or_impl_false_;
struct std____1____padding_wchar_t__4_;
struct std____1____widen_from_utf8_16_;
struct std____1____widen_from_utf8_32_;
struct std____1__allocator_const_void_;
struct std____1__atomic_unsigned_char_;
struct std____1__atomic_unsigned_long_;
struct std____1__basic_streambuf_char_;
struct std____1__basic_string_wchar_t_;
struct std____1__basic_stringbuf_char_;
struct std____1__char_traits_char16_t_;
struct std____1__char_traits_char32_t_;
struct std____1__collate_wchar_t__vtbl;
struct std____1__ctype_byname_wchar_t_;
struct std____1__hash_std__error_code_;
struct std____1__is_destructible_void_;
struct std____1__messages_byname_char_;
struct std____1__num_get_wchar_t__vtbl;
struct std____1__num_put_wchar_t__vtbl;
struct std____1__numpunct_byname_char_;
struct std____1__piecewise_construct_t;
struct std____1__recursive_timed_mutex;
struct std____1__time_get_byname_char_;
struct std____1__time_put_byname_char_;
struct std__initializer_list_char16_t_;
struct std__initializer_list_char32_t_;
struct std__overflow_error_vtbl_layout;
struct ASAuthorizationAppleIDProvider;
struct ASAuthorizationPasswordRequest;
struct ASCredentialIdentityStoreState;
struct AVAudioSessionRouteDescription;
struct AVCaptureMetadataInputInternal;
struct AVCapturePhotoSettingsInternal;
struct AVCaptureResolvedPhotoSettings;
struct AVCaptureSynchronizedDepthData;
struct AVFragmentedAssetTrackInternal;
struct AVFragmentedMovieTrackInternal;
struct AVMediaSelectionOptionInternal;
struct AVPersistableContentKeyRequest;
struct AVPlayerItemMediaDataCollector;
struct AVPlayerMediaSelectionCriteria;
struct AVPortraitEffectsMatteInternal;
struct BNNSConvolutionLayerParameters;
struct BNNSLayerParametersConvolution;
struct BNNSOptimizerSGDMomentumFields;
struct CKModifySubscriptionsOperation;
struct CLSProgressReportingCapability;
struct CMBlockBufferCustomBlockSource;
struct CNChangeHistoryAddContactEvent;
struct CPNowPlayingAddToLibraryButton;
struct CPNowPlayingPlaybackRateButton;
struct CPTripPreviewTextConfiguration;
struct CSIndexExtensionRequestHandler;
struct GCMicroGamepadSnapShotDataV100;
struct ICScannerFunctionalUnitFlatbed;
struct INCarDefrosterResolutionResult;
struct INCreateTaskListIntentResponse;
struct INGetCarPowerLevelStatusIntent;
struct INRequestPaymentIntentResponse;
struct INRestaurantReservationBooking;
struct INSearchForBillsIntentResponse;
struct INSearchForMediaIntentResponse;
struct INSearchForNotebookItemsIntent;
struct INStartAudioCallIntentResponse;
struct INStartVideoCallIntentResponse;
struct INTaskPriorityResolutionResult;
struct INTimeIntervalResolutionResult;
struct MFMessageComposeViewController;
struct MKLocalPointsOfInterestRequest;
struct MPChangeRepeatModeCommandEvent;
struct MPNowPlayingInfoLanguageOption;
struct MPSCNNBinaryFullyConnectedNode;
struct MPSCNNConvolutionGradientState;
struct MPSCNNConvolutionTransposeNode;
struct MPSCNNSpatialNormalizationNode;
struct MPSImageHistogramSpecification;
struct MPSImageThresholdBinaryInverse;
struct MPSImageThresholdToZeroInverse;
struct MPSMatrixDecompositionCholesky;
struct MPSNDArrayMatrixMultiplication;
struct MPSNDArrayStridedSliceGradient;
struct MPSNNConcatenationGradientNode;
struct MPSNNGramMatrixCalculationNode;
struct MPSNNMultiaryGradientStateNode;
struct MPSNNReduceFeatureChannelsMean;
struct MPSSVGFDefaultTextureAllocator;
struct MSStickerBrowserViewController;
struct MTLBufferLayoutDescriptorArray;
struct MTLQuadTessellationFactorsHalf;
struct MTLRasterizationRateLayerArray;
struct MTLResourceStatePassDescriptor;
struct MXDiskWriteExceptionDiagnostic;
struct NSFetchIndexElementDescription;
struct NSPersistentHistoryTransaction;
struct NSURLCredentialStorageInternal;
struct PDFActionRemoteGoToPrivateVars;
struct PHAssetCollectionChangeRequest;
struct PHAssetResourceCreationOptions;
struct PKAddPaymentPassViewController;
struct PKBarcodeEventMetadataResponse;
struct PKBarcodeEventSignatureRequest;
union SFNTLookupFormatSpecificHeader;
struct SLComposeServiceViewController;
struct UIBarButtonItemStateAppearance;
struct UIDocumentPickerViewController;
struct UIGraphicsImageRendererContext;
struct UNNotificationServiceExtension;
struct VNDetectHumanRectanglesRequest;
struct VNDocumentCameraViewController;
union __ReplyUnion__vm_map_subsystem;
struct __Reply__host_kernel_version_t;
struct __Reply__host_lockgroup_info_t;
struct __Reply__host_processor_info_t;
struct __Reply__host_processor_sets_t;
struct __Reply__lock_handoff_accept_t;
struct __Reply__mach_port_construct_t;
struct __Reply__mach_port_set_seqno_t;
struct __Reply__mach_ports_register_t;
struct __Reply__mach_vm_region_info_t;
struct __Reply__processor_set_tasks_t;
struct __Reply__task_assign_default_t;
struct __Reply__task_get_assignment_t;
struct __Reply__task_set_port_space_t;
struct __Reply__thread_abort_safely_t;
struct __Reply__vm_purgable_control_t;
union __RequestUnion__task_subsystem;
struct __Request__clock_alarm_reply_t;
struct __Request__etap_trace_thread_t;
struct __Request__host_statistics64_t;
struct __Request__mach_port_destroy_t;
struct __Request__mach_port_kobject_t;
struct __Request__mach_port_unguard_t;
struct __Request__mach_ports_lookup_t;
struct __Request__processor_control_t;
struct __Request__semaphore_destroy_t;
struct __Request__thread_policy_get_t;
struct __Request__thread_policy_set_t;
struct __Request__thread_set_policy_t;
struct __Request__vm_map_page_query_t;
struct __Request__vm_read_overwrite_t;
struct __Request__vm_region_recurse_t;
struct __darwin_arm_exception_state64;
struct dyld_cache_local_symbols_entry;
struct dyld_chained_ptr_arm64e_bind24;
struct dyld_chained_ptr_arm64e_rebase;
struct dyld_chained_starts_in_segment;
struct gss_krb5_lucid_context_version;
struct mach_no_senders_notification_t;
struct std____1____money_get_wchar_t_;
struct std____1____money_put_wchar_t_;
struct std____1____narrow_to_utf8_16_;
struct std____1____narrow_to_utf8_32_;
struct std____1____numeric_type_void_;
struct std____1____tuple_cat_return__;
struct std____1____widen_from_utf8_8_;
struct std____1__atomic_unsigned_int_;
struct std____1__basic_ifstream_char_;
struct std____1__basic_ios_char__vtbl;
struct std____1__basic_iostream_char_;
struct std____1__basic_ofstream_char_;
struct std____1__char_traits_wchar_t_;
struct std____1__chrono__steady_clock;
struct std____1__chrono__system_clock;
struct std____1__collate_byname_char_;
struct std____1__complex_long_double_;
struct std____1__forward_iterator_tag;
struct std____1__hash_unsigned_short_;
struct std____1__ios_base_vtbl_layout;
struct std____1__money_get_char__vtbl;
struct std____1__money_put_char__vtbl;
struct std____1__ratio_1__1000000000_;
struct std____1__ratio_1000000000__1_;
struct std__bad_array_new_length_vtbl;
struct std__bad_exception_vtbl_layout;
struct std__runtime_error_vtbl_layout;
struct vm_region_submap_short_info_64;
struct ABUnknownPersonViewController;
struct ARObjectScanningConfiguration;
struct ASAuthorizationAppleIDRequest;
struct ASCredentialServiceIdentifier;
struct AVAssetDownloadStorageManager;
struct AVAssetImageGeneratorInternal;
struct AVAssetResourceLoaderInternal;
struct AVAssetResourceLoadingRequest;
struct AVAssetResourceRenewalRequest;
struct AVAudioSessionPortDescription;
struct AVAudioUnitEQFilterParameters;
struct AVCaptureAudioChannelInternal;
struct AVCaptureDeviceFormatInternal;
struct AVCapturePhotoBracketSettings;
struct AVMediaSelectionGroupInternal;
struct AVMutableMetadataItemInternal;
struct AVPlayerItemAccessLogInternal;
struct AVPlayerItemMetadataCollector;
struct AVVideoCompositionInstruction;
struct AudioComponentPlugInInterface;
struct AudioUnitFrequencyResponseBin;
struct AudioUnitParameterHistoryInfo;
struct BNNSLayerParametersActivation;
struct BNNSLayerParametersArithmetic;
struct CABTMIDICentralViewController;
struct CGDataProviderDirectCallbacks;
struct CKFetchRecordChangesOperation;
struct CKFetchShareMetadataOperation;
struct CKFetchSubscriptionsOperation;
struct CNContactPickerViewController;
struct GCExtendedGamepadSnapshotData;
struct GKMersenneTwisterRandomSource;
struct HKQuantitySeriesSampleBuilder;
struct HMMutableSignificantTimeEvent;
struct HMNetworkConfigurationProfile;
struct INAccountTypeResolutionResult;
struct INBalanceTypeResolutionResult;
struct INCancelWorkoutIntentResponse;
struct INGetReservationDetailsIntent;
struct INGetRideStatusIntentResponse;
struct INGetVisualCodeIntentResponse;
struct INNoteContentResolutionResult;
struct INResumeWorkoutIntentResponse;
struct INTemperatureResolutionResult;
struct INTransferMoneyIntentResponse;
struct MDLMaterialPropertyConnection;
struct MLCInstanceNormalizationLayer;
struct MPSAccelerationStructureGroup;
struct MPSCNNArithmeticGradientState;
struct MPSCNNBatchNormalizationState;
struct MPSCNNConvolutionGradientNode;
struct MPSGraphPooling2DOpDescriptor;
struct MPSImageHistogramEqualization;
struct MPSMatrixVectorMultiplication;
struct MPSNDArrayGatherGradientState;
struct MPSNDArrayUnaryGradientKernel;
struct MPSNNReduceFeatureChannelsMax;
struct MPSNNReduceFeatureChannelsMin;
struct MPSNNReduceFeatureChannelsSum;
struct MPSNNReductionSpatialMeanNode;
struct MTAudioProcessingTapCallbacks;
struct MTLAccelerationStructureSizes;
struct MTLDrawPatchIndirectArguments;
struct MTLSharedTextureHandlePrivate;
struct MTLStageInputOutputDescriptor;
struct NEFilterProviderConfiguration;
struct NEHotspotConfigurationManager;
struct NEPacketTunnelNetworkSettings;
struct NSCollectionLayoutEdgeSpacing;
struct NSDerivedAttributeDescription;
struct NSOrderedCollectionDifference;
struct NSPersistentCloudKitContainer;
struct OpaqueAudioQueueProcessingTap;
struct PDFActionResetFormPrivateVars;
struct PHAssetResourceRequestOptions;
struct PHCollectionListChangeRequest;
struct PKBarcodeEventMetadataRequest;
struct SCNParticlePropertyController;
struct SFSpeechURLRecognitionRequest;
struct SKOverlayAppClipConfiguration;
struct UIGraphicsImageRendererFormat;
struct UIIndirectScribbleInteraction;
struct UISceneOpenExternalURLOptions;
struct UIStoryboardUnwindSegueSource;
struct UITableViewDiffableDataSource;
struct UITableViewFocusUpdateContext;
struct UNCalendarNotificationTrigger;
struct UNLocationNotificationTrigger;
struct UNTextInputNotificationAction;
struct VNDetectFaceRectanglesRequest;
struct VNDetectTextRectanglesRequest;
struct VNIdentifiedPointsObservation;
struct VNRecognizedObjectObservation;
struct VNRecognizedPointsObservation;
struct _GLKVertexAttributeParameters;
union __ReplyUnion__clock_subsystem;
struct __Reply__host_get_UNDServer_t;
struct __Reply__host_get_boot_info_t;
struct __Reply__host_get_io_master_t;
struct __Reply__host_set_UNDServer_t;
struct __Reply__mach_port_allocate_t;
struct __Reply__mach_port_destruct_t;
struct __Reply__mach_port_get_refs_t;
struct __Reply__mach_port_mod_refs_t;
struct __Reply__processor_set_info_t;
struct __Reply__task_purgable_info_t;
struct __Reply__task_set_emulation_t;
union __RequestUnion__exc_subsystem;
struct __Request__lock_make_stable_t;
struct __Request__lock_set_destroy_t;
struct __Request__mach_memory_info_t;
struct __Request__mach_port_rename_t;
struct __Request__processor_assign_t;
struct __Request__semaphore_create_t;
struct __Request__thread_get_state_t;
struct __Request__thread_set_state_t;
struct __Request__thread_terminate_t;
struct dyld_cache_local_symbols_info;
struct mach_dead_name_notification_t;
struct mach_send_once_notification_t;
struct mach_voucher_attr_recipe_data;
struct proc_rlimit_control_wakeupmon;
struct quadrature_integrate_function;
struct std____1____libcpp_debug_info;
struct std____1____narrow_to_utf8_8_;
struct std____1____shared_count_vtbl;
struct std____1____shared_weak_count;
struct std____1____tuple_sfinae_base;
struct std____1__allocator_char16_t_;
struct std____1__allocator_char32_t_;
struct std____1__atomic_signed_char_;
struct std____1__basic_filebuf_char_;
struct std____1__basic_fstream_char_;
struct std____1__basic_istream_char_;
struct std____1__basic_ostream_char_;
struct std____1__ctype_wchar_t__vtbl;
struct std____1__error_category_vtbl;
struct std____1__greater_equal_void_;
struct std____1__hash_unsigned_char_;
struct std____1__hash_unsigned_long_;
struct std____1__messages_char__vtbl;
struct std____1__money_base__pattern;
struct std____1__numpunct_char__vtbl;
struct std____1__output_iterator_tag;
struct std____1__time_get_char__vtbl;
struct std____1__time_put_char__vtbl;
struct std__domain_error_vtbl_layout;
struct std__length_error_vtbl_layout;
struct std__out_of_range_vtbl_layout;
struct thread_time_constraint_policy;
struct vImage_AffineTransform_Double;
struct ARImageTrackingConfiguration;
struct ARWorldTrackingConfiguration;
struct ASAuthorizationAppleIDButton;
struct ASAuthorizationOpenIDRequest;
struct ASPasswordCredentialIdentity;
struct AUAudioUnitViewConfiguration;
struct AVAggregateAssetDownloadTask;
struct AVAssetExportSessionInternal;
struct AVCaptureDeviceInputInternal;
struct AVCapturePhotoOutputInternal;
struct AVCaptureScreenInputInternal;
struct AVCaptureSystemPressureState;
struct AVContentKeyResponseInternal;
struct AVMetadataFaceObjectInternal;
struct AVMetadataItemFilterInternal;
struct AVMutableCompositionInternal;
struct AVPictureInPictureController;
struct AVPlayerItemErrorLogInternal;
struct AVTimedMetadataGroupInternal;
struct AVVideoCompositionRenderHint;
struct AudioOutputUnitMIDICallbacks;
struct AudioStreamPacketDescription;
struct BNNSLayerParametersLossHuber;
struct BNNSLayerParametersReduction;
struct CAInterAppAudioTransportView;
struct CAMediaTimingFunctionPrivate;
struct CKFetchWebAuthTokenOperation;
struct CKModifyRecordZonesOperation;
struct CLKComplicationTimelineEntry;
struct CLKTimeIntervalGaugeProvider;
struct CNChangeHistoryAddGroupEvent;
struct CSSearchableItemAttributeSet;
struct HMMutableCharacteristicEvent;
struct INAppendToNoteIntentResponse;
struct INCallRecordResolutionResult;
struct INPauseWorkoutIntentResponse;
struct INRestaurantResolutionResult;
struct INSetSeatSettingsInCarIntent;
struct INStartWorkoutIntentResponse;
struct INTaskStatusResolutionResult;
struct MLCTensorOptimizerDeviceData;
struct MPMusicPlayerControllerQueue;
struct MPMusicPlayerQueueDescriptor;
struct MPSCNNBatchNormalizationNode;
struct MPSCNNFullyConnectedGradient;
struct MPSCNNGroupNormalizationNode;
struct MPSCNNLogSoftMaxGradientNode;
struct MPSCNNPoolingAverageGradient;
struct MPSCNNPoolingMaxGradientNode;
struct MPSCNNUpsamplingBilinearNode;
struct MPSCustomKernelArgumentCount;
struct MPSNNBinaryGradientStateNode;
struct MPSNNReductionColumnMeanNode;
struct MPSNNSubtractionGradientNode;
struct MTLComputePipelineDescriptor;
struct MTLComputePipelineReflection;
struct MTLVertexAttributeDescriptor;
struct NSDiffableDataSourceSnapshot;
struct NSFetchedPropertyDescription;
struct NSPersistentStoreCoordinator;
struct NSPersistentStoreDescription;
struct NSURLAuthenticationChallenge;
struct NSURLProtectionSpaceInternal;
struct NSURLSessionWebSocketMessage;
struct OpaqueAudioComponentInstance;
struct OpaqueVTDecompressionSession;
struct PDFAppearanceCharacteristics;
struct PKAddCarKeyPassConfiguration;
struct PKPaymentAuthorizationResult;
struct QLThumbnailGenerationRequest;
struct SCNetworkReachabilityContext;
struct SFNTLookupBinarySearchHeader;
struct SFNTLookupTrimmedArrayHeader;
struct SKStoreProductViewController;
struct SparseOpaqueSubfactor_Double;
struct TKSmartCardATRInterfaceGroup;
struct TKTokenKeyExchangeParameters;
struct TKTokenPasswordAuthOperation;
struct TWTweetComposeViewController;
struct UIActivityItemsConfiguration;
struct UICollectionViewDropProposal;
struct UIDocumentMenuViewController;
struct UIGraphicsPDFRendererContext;
struct UIListContentImageProperties;
struct UILongPressGestureRecognizer;
struct UIPrintInteractionController;
struct UISelectionFeedbackGenerator;
struct UNMutableNotificationContent;
struct VNDetectFaceLandmarksRequest;
struct VNDetectHumanBodyPoseRequest;
struct VNDetectHumanHandPoseRequest;
struct VNGenerateOpticalFlowRequest;
union __ReplyUnion__task_subsystem;
struct __Reply__clock_alarm_reply_t;
struct __Reply__etap_trace_thread_t;
struct __Reply__host_statistics64_t;
struct __Reply__mach_port_destroy_t;
struct __Reply__mach_port_kobject_t;
struct __Reply__mach_port_unguard_t;
struct __Reply__mach_ports_lookup_t;
struct __Reply__processor_control_t;
struct __Reply__semaphore_destroy_t;
struct __Reply__thread_policy_get_t;
struct __Reply__thread_policy_set_t;
struct __Reply__thread_set_policy_t;
struct __Reply__vm_map_page_query_t;
struct __Reply__vm_read_overwrite_t;
struct __Reply__vm_region_recurse_t;
struct __Request___host_page_size_t;
struct __Request__exception_raise_t;
struct __Request__host_processors_t;
struct __Request__host_statistics_t;
struct __Request__lock_set_create_t;
struct __Request__mach_port_guard_t;
struct __Request__mach_port_names_t;
struct __Request__processor_start_t;
struct __Request__task_policy_get_t;
struct __Request__task_policy_set_t;
struct __Request__task_set_policy_t;
struct __Request__task_set_ras_pc_t;
struct __Request__vm_allocate_cpm_t;
struct __Request__vm_behavior_set_t;
struct __darwin_arm_exception_state;
struct __darwin_pthread_handler_rec;
struct _opaque_pthread_rwlockattr_t;
struct dyld_chained_import_addend64;
struct dyld_chained_ptr_arm64e_bind;
struct dyld_chained_starts_in_image;
struct quadrature_integrate_options;
struct std____1____libcpp_refstring;
struct std____1____num_get_wchar_t_;
struct std____1____num_put_wchar_t_;
struct std____1____padding_char__1_;
struct std____1____static_gcd_0__0_;
struct std____1__allocator_wchar_t_;
struct std____1__basic_ios_wchar_t_;
struct std____1__basic_string_char_;
struct std____1__collate_char__vtbl;
struct std____1__condition_variable;
struct std____1__ctype_byname_char_;
struct std____1__hash_unsigned_int_;
struct std____1__input_iterator_tag;
struct std____1__locale__facet_vtbl;
struct std____1__money_get_wchar_t_;
struct std____1__money_put_wchar_t_;
struct std____1__not_equal_to_void_;
struct std____1__num_get_char__vtbl;
struct std____1__num_put_char__vtbl;
struct std__logic_error_vtbl_layout;
struct std__range_error_vtbl_layout;
struct thread_throughput_qos_policy;
struct ARBodyTrackingConfiguration;
struct ARFaceTrackingConfiguration;
struct AVAssetReaderAudioMixOutput;
struct AVAssetReaderOutputInternal;
struct AVAudio3DAngularOrientation;
struct AVAudioUnitComponentManager;
struct AVCaptureAudioPreviewOutput;
struct AVCaptureConnectionInternal;
struct AVCaptureFileOutputInternal;
struct AVContentKeyRequestInternal;
struct AVContentKeySessionInternal;
struct AVMutableMovieTrackInternal;
struct AVMutableTimedMetadataGroup;
struct AVSampleBufferAudioRenderer;
struct AVSemanticSegmentationMatte;
struct AVSynchronizedLayerInternal;
struct AudioFramePacketTranslation;
struct AudioQueueChannelAssignment;
struct AudioStreamBasicDescription;
struct BNNSLayerParametersLossBase;
struct BNNSLayerParametersLossYolo;
struct BNNSMHAProjectionParameters;
struct CAInterAppAudioSwitcherView;
struct CKFetchRecordZonesOperation;
struct CKFetchShareMetadataOptions;
struct CLKRelativeDateTextProvider;
struct CLKTimeIntervalTextProvider;
struct CMRecordedAccelerometerData;
struct CNChangeHistoryFetchRequest;
struct CNContactVCardSerialization;
struct EAWiFiUnconfiguredAccessory;
struct GKAchievementViewController;
struct GKLeaderboardViewController;
struct HKAudiogramSensitivityPoint;
struct HKFitzpatrickSkinTypeObject;
struct HKQuantitySeriesSampleQuery;
struct HKStatisticsCollectionQuery;
struct HMCharacteristicWriteAction;
struct ICScannerFeatureEnumeration;
struct INBillPayeeResolutionResult;
struct INDeleteTasksIntentResponse;
struct INLocationRelevanceProvider;
struct INMediaItemResolutionResult;
struct INPlacemarkResolutionResult;
struct INRadioTypeResolutionResult;
struct INRequestRideIntentResponse;
struct INSendMessageIntentResponse;
struct INSendPaymentIntentResponse;
struct INSetAudioSourceInCarIntent;
struct INSetMessageAttributeIntent;
struct INSnoozeTasksIntentResponse;
struct INUpdateMediaAffinityIntent;
struct MDLPhysicallyPlausibleLight;
struct MFMailComposeViewController;
struct MKUserTrackingBarButtonItem;
struct MLDictionaryFeatureProvider;
struct MLMultiArrayShapeConstraint;
struct MPChangePlaybackRateCommand;
struct MPMoviePlayerViewController;
struct MPMusicPlayerPlayParameters;
struct MPSCNNBinaryConvolutionNode;
struct MPSCNNConvolutionDescriptor;
struct MPSCNNDilatedPoolingMaxNode;
struct MPSCNNInstanceNormalization;
struct MPSCNNNeuronExponentialNode;
struct MPSCNNNeuronHardSigmoidNode;
struct MPSCNNPoolingL2NormGradient;
struct MPSCNNUpsamplingNearestNode;
struct MPSGraphExecutionDescriptor;
struct MPSImageLaplacianPyramidAdd;
struct MPSImageNormalizedHistogram;
struct MPSImageStatisticsMinAndMax;
struct MPSMatrixBatchNormalization;
struct MPSMatrixLogSoftMaxGradient;
struct MPSNNArithmeticGradientNode;
struct MPSNNReductionColumnMaxNode;
struct MPSNNReductionColumnMinNode;
struct MPSNNReductionColumnSumNode;
struct MPSRayPackedOriginDirection;
struct MSMessagesAppViewController;
struct MTLAttributeDescriptorArray;
struct MTLPipelineBufferDescriptor;
struct MTLRenderPipelineDescriptor;
struct MTLRenderPipelineReflection;
struct MTLSharedEventHandlePrivate;
struct MXUnitAveragePixelLuminance;
struct NSCachedURLResponseInternal;
struct NSCollectionLayoutDimension;
struct NSHTTPCookieStorageInternal;
struct NSPropertyListSerialization;
struct NSRelativeDateTimeFormatter;
struct RPSystemBroadcastPickerView;
struct SKProductSubscriptionPeriod;
struct SRKeyboardProbabilityMetric;
struct SparseOpaqueSubfactor_Float;
struct SparseSymbolicFactorOptions;
struct UIAccessibilityCustomAction;
struct UICollectionViewPlaceholder;
struct UIColorPickerViewController;
struct UIFocusAnimationCoordinator;
struct UIGraphicsPDFRendererFormat;
struct UIInterpolatingMotionEffect;
struct UIListContentTextProperties;
struct UILocalizedIndexedCollation;
struct UIRotationGestureRecognizer;
struct UISceneActivationConditions;
struct UISwipeActionsConfiguration;
struct UITabBarItemStateAppearance;
struct UITableViewHeaderFooterView;
struct UITextFormattingCoordinator;
struct VNClassificationObservation;
struct VNDetectTrajectoriesRequest;
struct VNDetectedObjectObservation;
struct VNImageAlignmentObservation;
struct VNRecognizedTextObservation;
union __ReplyUnion__exc_subsystem;
struct __Reply__lock_make_stable_t;
struct __Reply__lock_set_destroy_t;
struct __Reply__mach_memory_info_t;
struct __Reply__mach_port_rename_t;
struct __Reply__processor_assign_t;
struct __Reply__semaphore_create_t;
struct __Reply__thread_get_state_t;
struct __Reply__thread_set_state_t;
struct __Reply__thread_terminate_t;
struct __Request__clock_get_time_t;
struct __Request__clock_set_time_t;
struct __Request__mach_port_peek_t;
struct __Request__mach_port_type_t;
struct __Request__mach_zone_info_t;
struct __Request__processor_exit_t;
struct __Request__processor_info_t;
struct __Request__task_get_state_t;
struct __Request__task_set_state_t;
struct __Request__task_terminate_t;
struct __Request__task_zone_info_t;
struct __Request__thread_suspend_t;
struct __darwin_arm_thread_state64;
struct __dns_handle_private_struct;
struct __objc_instance_vars_struct;
struct __objc_protocol_list_struct;
struct _opaque_pthread_mutexattr_t;
struct dyld_cache_accelerator_info;
struct dyld_cache_image_info_extra;
struct dyld_chained_starts_offsets;
struct gss_channel_bindings_struct;
union ip_timestamp__ipt_timestamp;
struct mach_msg_ool_descriptor32_t;
struct mach_msg_ool_descriptor64_t;
struct mach_msg_security_trailer_t;
struct std____1____do_message_vtbl;
struct std____1____money_get_char_;
struct std____1____money_put_char_;
struct std____1__atomic_long_long_;
struct std____1__bad_function_call;
struct std____1__bad_weak_ptr_vtbl;
struct std____1__char_traits_char_;
struct std____1__fpos___mbstate_t_;
struct std____1__hash___uint128_t_;
struct std____1__hash_long_double_;
struct std____1__hash_signed_char_;
struct std____1__ios_base__failure;
struct std____1__logical_and_void_;
struct std____1__logical_not_void_;
struct std____1__messages_wchar_t_;
struct std____1__numpunct_wchar_t_;
struct std____1__ratio_1__1000000_;
struct std____1__ratio_1000000__1_;
struct std____1__system_error_vtbl;
struct std____1__time_get_wchar_t_;
struct std____1__time_put_wchar_t_;
struct std__bad_typeid_vtbl_layout;
struct ARDirectionalLightEstimate;
struct ARGeoTrackingConfiguration;
struct ASWebAuthenticationSession;
struct AUMIDIOutputCallbackStruct;
struct AUParameterAutomationEvent;
struct AVAssetWriterInputInternal;
struct AVAudio3DVectorOrientation;
struct AVCaptureDeviceInputSource;
struct AVCaptureInputPortInternal;
struct AVCaptureVideoPreviewLayer;
struct AVCaptureWhiteBalanceGains;
struct AVCompositionTrackInternal;
struct AVMediaDataStorageInternal;
struct AVMetadataItemValueRequest;
struct AVPlayerItemAccessLogEvent;
struct AVPlayerItemMetadataOutput;
struct AVPlayerItemOutputInternal;
struct AVSampleBufferDisplayLayer;
struct AVVideoCompositionInternal;
struct AudioBytePacketTranslation;
struct AudioUnitParameterNameInfo;
struct BNNSLayerParametersDropout;
struct BNNSLayerParametersPadding;
struct BNNSLayerParametersPermute;
struct BNNSLayerParametersPooling;
struct BNNSOptimizerRMSPropFields;
struct BNNSPoolingLayerParameters;
struct CFBinaryHeapCompareContext;
struct CFDictionaryValueCallBacks;
struct CIDataMatrixCodeDescriptor;
struct CLBeaconIdentityConstraint;
struct CPTemplateApplicationScene;
struct ENExposureDetectionSummary;
struct FPUIActionExtensionContext;
struct GCMicroGamepadSnapshotData;
struct GKGameCenterViewController;
struct GKMatchmakerViewController;
struct GLKEffectPropertyTransform;
struct HKCumulativeQuantitySample;
struct INBillTypeResolutionResult;
struct INCancelRideIntentResponse;
struct INCreateNoteIntentResponse;
struct INEndWorkoutIntentResponse;
struct INGetRestaurantGuestIntent;
struct INStartPhotoPlaybackIntent;
struct INTaskListResolutionResult;
struct INTicketedEventReservation;
struct INUIAddVoiceShortcutButton;
struct JustPCConditionalAddAction;
struct JustPCGlyphRepeatAddAction;
struct KernVersion0SubtableHeader;
struct MDLAnimatedQuaternionArray;
struct MDLMeshBufferDataAllocator;
struct MIDICIDeviceIdentification;
struct MIDIThruConnectionEndpoint;
struct MKGradientPolylineRenderer;
struct MLCBatchNormalizationLayer;
struct MLCGroupNormalizationLayer;
struct MLCLayerNormalizationLayer;
struct MLCMultiheadAttentionLayer;
struct MPChangeShuffleModeCommand;
struct MPSCNNBinaryFullyConnected;
struct MPSCNNConvolutionTranspose;
struct MPSCNNDropoutGradientState;
struct MPSCNNSpatialNormalization;
struct MPSNNCropAndResizeBilinear;
struct MPSNNGramMatrixCalculation;
struct MPSNNMultiaryGradientState;
struct MPSRNNMatrixInferenceLayer;
struct MPSRNNRecurrentMatrixState;
struct MPSRNNSingleGateDescriptor;
struct MPSkipIntervalCommandEvent;
struct MTLBinaryArchiveDescriptor;
struct MTLCommandBufferDescriptor;
struct NEDNSProxyProviderProtocol;
struct NEFilterRemediationVerdict;
struct NFCTagCommandConfiguration;
struct NFCVASCommandConfiguration;
struct NSAsynchronousFetchRequest;
struct NSFetchedResultsController;
struct NSMetadataQueryResultGroup;
struct OpaqueVTCompressionSession;
struct PHFetchResultChangeDetails;
struct SCNAvoidOccluderConstraint;
struct SCNetworkConnectionContext;
struct SFSpeechRecognitionRequest;
struct SKOverlayTransitionContext;
struct SRAmbientLightChromaticity;
struct SparseNumericFactorOptions;
struct TKSmartCardUserInteraction;
struct TKTokenDriverConfiguration;
struct TKTokenKeychainCertificate;
struct UIAccessibilityCustomRotor;
struct UICellAccessoryMultiselect;
struct UICollectionViewController;
struct UICollectionViewFlowLayout;
struct UICollectionViewUpdateItem;
struct UIContextMenuConfiguration;
struct UIFontPickerViewController;
struct UIImageSymbolConfiguration;
struct UIListContentConfiguration;
struct UIMarkupTextPrintFormatter;
struct UISimpleTextPrintFormatter;
struct UITableViewDropPlaceholder;
struct UITextInputStringTokenizer;
struct UITextInteractionAssistant;
struct UIUserNotificationCategory;
struct UIUserNotificationSettings;
struct VNImageRegistrationRequest;
struct VNSaliencyImageObservation;
struct _MPSAxisAlignedBoundingBox;
struct __Reply___host_page_size_t;
struct __Reply__exception_raise_t;
struct __Reply__host_processors_t;
struct __Reply__host_statistics_t;
struct __Reply__lock_set_create_t;
struct __Reply__mach_port_guard_t;
struct __Reply__mach_port_names_t;
struct __Reply__processor_start_t;
struct __Reply__task_policy_get_t;
struct __Reply__task_policy_set_t;
struct __Reply__task_set_policy_t;
struct __Reply__task_set_ras_pc_t;
struct __Reply__vm_allocate_cpm_t;
struct __Reply__vm_behavior_set_t;
struct __Request__act_get_state_t;
struct __Request__act_set_state_t;
struct __Request__kmod_get_info_t;
struct __Request__task_set_info_t;
struct __Request__task_suspend2_t;
struct __Request__thread_assign_t;
struct __Request__thread_create_t;
struct __Request__thread_policy_t;
struct __Request__thread_resume_t;
struct __Request__thread_sample_t;
struct __Request__vm_deallocate_t;
struct __darwin_arm_debug_state32;
struct __darwin_arm_debug_state64;
struct _opaque_pthread_condattr_t;
struct dyld_aot_shared_cache_info;
struct dyld_cache_accelerator_dof;
struct dyld_cache_image_text_info;
struct dyld_chained_fixups_header;
struct dyld_chained_import_addend;
struct dyld_chained_ptr_32_rebase;
struct dyld_chained_ptr_64_rebase;
struct encryption_info_command_64;
struct gss_buffer_set_desc_struct;
struct gss_iov_buffer_desc_struct;
struct host_can_has_debugger_info;
struct mach_msg_context_trailer_t;
struct mach_msg_port_descriptor_t;
struct mach_msg_type_descriptor_t;
struct opaqueMTAudioProcessingTap;
struct os_workgroup_attr_opaque_s;
struct rpc_routine_arg_descriptor;
struct std____1____struct_double4;
struct std____1____tuple_equal_0_;
struct std____1__atomic_char16_t_;
struct std____1__atomic_char32_t_;
struct std____1__collate_wchar_t_;
struct std____1__ctype_char__vtbl;
struct std____1__hash___int128_t_;
struct std____1__less_equal_void_;
struct std____1__logical_or_void_;
struct std____1__multiplies_void_;
struct std____1__num_get_wchar_t_;
struct std____1__num_put_wchar_t_;
struct std__bad_alloc_vtbl_layout;
struct std__bad_array_length_vtbl;
struct std__exception_vtbl_layout;
struct std__invalid_argument_vtbl;
struct std__nested_exception_vtbl;
struct std__type_info_vtbl_layout;
struct unwind_info_section_header;
struct ABNewPersonViewController;
struct AEAssessmentConfiguration;
struct ASAuthorizationController;
struct ASCredentialIdentityStore;
struct AVAssetDownloadURLSession;
struct AVAssetSegmentTrackReport;
struct AVAssetTrackGroupInternal;
struct AVAudioConverterPrimeInfo;
struct AVAudioMixInputParameters;
struct AVAudioUnitMIDIInstrument;
struct AVCaptureStillImageOutput;
struct AVCaptureSynchronizedData;
struct AVCompositionTrackSegment;
struct AVDisplayCriteriaInternal;
struct AVFragmentedAssetInternal;
struct AVFragmentedMovieInternal;
struct AVMetadataHumanBodyObject;
struct AVMusicTrackEventIterator;
struct AVMutableAudioMixInternal;
struct AVMutableCompositionTrack;
struct AVMutableVideoComposition;
struct AVOutputSettingsAssistant;
struct AVPlayerItemErrorLogEvent;
struct AVPlayerItemLegibleOutput;
struct AVPlayerItemTrackInternal;
struct AudioCodecMagicCookieInfo;
struct AudioComponentDescription;
struct AudioQueueLevelMeterState;
struct BNNSLayerParametersResize;
struct CFNetServiceClientContext;
struct CLKComplicationDescriptor;
struct CLKFullColorImageProvider;
struct CMCalibratedMagneticField;
struct CMDyskineticSymptomResult;
struct CMMovementDisorderManager;
struct CPContactDirectionsButton;
struct CPMessageComposeBarButton;
struct CPNowPlayingShuffleButton;
struct CPPointOfInterestTemplate;
struct EKEventEditViewController;
struct GCExtendedGamepadSnapshot;
struct GCGamepadSnapShotDataV100;
struct GKCheckerboardNoiseSource;
struct GLKEffectPropertyMaterial;
struct HMAccessoryOwnershipToken;
struct INActivateCarSignalIntent;
struct INBooleanResolutionResult;
struct INCarSeatResolutionResult;
struct INIntegerResolutionResult;
struct INPlayMediaIntentResponse;
struct INSearchCallHistoryIntent;
struct INSearchForAccountsIntent;
struct INSearchForMessagesIntent;
struct INStartCallIntentResponse;
struct JustPCDecompositionAction;
struct MCNearbyServiceAdvertiser;
struct MDLAnimationBindComponent;
struct MDLAxisAlignedBoundingBox;
struct MPChangeRepeatModeCommand;
struct MPSCNNConvolutionGradient;
struct MPSCNNDropoutGradientNode;
struct MPSCNNNeuronLogarithmNode;
struct MPSCNNPoolingGradientNode;
struct MPSCNNSoftMaxGradientNode;
struct MPSCustomKernelSourceInfo;
struct MPSImageIntegralOfSquares;
struct MPSImageKeypointRangeInfo;
struct MPSImageThresholdTruncate;
struct MPSNNAdditionGradientNode;
struct MPSNNBinaryArithmeticNode;
struct MPSNNReductionRowMeanNode;
struct MPSRNNImageInferenceLayer;
struct MPSRNNMatrixTrainingLayer;
struct MPSRNNMatrixTrainingState;
struct MPSRNNRecurrentImageState;
struct MTLBufferLayoutDescriptor;
struct MTLCommandQueueDescriptor;
struct MTLCounterResultStatistic;
struct MTLCounterResultTimestamp;
struct MTLDepthStencilDescriptor;
struct MTLFunctionConstantValues;
struct MTLTextureSwizzleChannels;
struct MXAppResponsivenessMetric;
struct MXCellularConditionMetric;
struct MortRearrangementSubtable;
struct MorxRearrangementSubtable;
struct NEAppProxyProviderManager;
struct NETransparentProxyManager;
struct NINearbyPeerConfiguration;
struct NSAsynchronousFetchResult;
struct NSCollectionLayoutSection;
struct NSCollectionLayoutSpacing;
struct NSDateComponentsFormatter;
struct NSHTTPURLResponseInternal;
struct NSMutableAttributedString;
struct NSOrderedCollectionChange;
struct NSPersistentHistoryChange;
struct NSPersistentHistoryResult;
struct NSRelationshipDescription;
struct NSURLSessionConfiguration;
struct NSURLSessionWebSocketTask;
struct NSUbiquitousKeyValueStore;
struct OpaqueJSPropertyNameArray;
struct PDFActionNamedPrivateVars;
struct PHEditingExtensionContext;
struct PHLivePhotoEditingContext;
struct PHLivePhotoRequestOptions;
struct PKAddPassesViewController;
struct QLThumbnailRepresentation;
struct RPBroadcastMP4ClipHandler;
struct SCNAccelerationConstraint;
struct SCNPhysicsBallSocketJoint;
struct SFSpeechRecognitionResult;
struct SKOverlayAppConfiguration;
struct STScreenTimeConfiguration;
struct UIApplicationShortcutIcon;
struct UIApplicationShortcutItem;
struct UIBackgroundConfiguration;
struct UIBarButtonItemAppearance;
struct UICellAccessoryCustomView;
struct UIGraphicsRendererContext;
struct UIImpactFeedbackGenerator;
struct UINavigationBarAppearance;
struct UIPrinterPickerController;
struct UISearchDisplayController;
struct UISpringLoadedInteraction;
struct UITextDragPreviewRenderer;
struct UNPushNotificationTrigger;
struct VNDetectRectanglesRequest;
struct VNFeaturePrintObservation;
struct VNRecognizeAnimalsRequest;
struct VSAccountProviderResponse;
struct WCSessionUserInfoTransfer;
struct XML_Memory_Handling_Suite;
struct __Reply__clock_get_time_t;
struct __Reply__clock_set_time_t;
struct __Reply__mach_port_peek_t;
struct __Reply__mach_port_type_t;
struct __Reply__mach_zone_info_t;
struct __Reply__processor_exit_t;
struct __Reply__processor_info_t;
struct __Reply__task_get_state_t;
struct __Reply__task_set_state_t;
struct __Reply__task_terminate_t;
struct __Reply__task_zone_info_t;
struct __Reply__thread_suspend_t;
struct __Request__kext_request_t;
struct __Request__kmod_control_t;
struct __Request__kmod_destroy_t;
struct __Request__lock_acquire_t;
struct __Request__lock_handoff_t;
struct __Request__lock_release_t;
struct __Request__mach_vm_wire_t;
struct __Request__task_inspect_t;
struct __Request__task_resume2_t;
struct __Request__task_suspend_t;
struct __Request__task_threads_t;
struct __Request__thread_abort_t;
struct __Request__vm_read_list_t;
struct __Request__vm_region_64_t;
struct __darwin_arm_amx_state_v1;
struct __darwin_arm_cpmu_state64;
struct __darwin_arm_neon_state64;
struct __darwin_arm_thread_state;
struct __objc_instance_vars_list;
struct __objc_module_info_struct;
struct dns_raw_resource_record_t;
struct gss_cred_id_t_desc_struct;
struct gss_krb5_lucid_context_v1;
struct ipsec_wake_pkt_event_data;
struct mach_msg_ool_descriptor_t;
struct memory_object_behave_info;
struct objc_property_attribute_t;
struct opaqueCMFormatDescription;
struct os_activity_scope_state_s;
struct scattered_relocation_info;
struct sfntCMapExtendedSubHeader;
struct std____1____num_get_char_;
struct std____1____num_put_char_;
struct std____1____struct_double;
struct std____1____tuple_less_0_;
struct std____1__allocator_char_;
struct std____1__allocator_void_;
struct std____1__allocator_arg_t;
struct std____1__atomic_wchar_t_;
struct std____1__basic_ios_char_;
struct std____1__complex_double_;
struct std____1__error_condition;
struct std____1__hash_long_long_;
struct std____1__money_get_char_;
struct std____1__money_put_char_;
struct std____1__recursive_mutex;
struct std__bad_array_new_length;
struct std__bad_cast_vtbl_layout;
struct std__underflow_error_vtbl;
struct task_inspect_basic_counts;
struct thread_latency_qos_policy;
struct vDSP_biquadm_SetupStructD;
struct vImage_ARGBToYpCbCrMatrix;
struct vImage_YpCbCrToARGBMatrix;
struct AREnvironmentProbeAnchor;
struct AURecordedParameterEvent;
struct AVAssetReaderTrackOutput;
struct AVAudioMixingDestination;
struct AVCaptureAudioDataOutput;
struct AVCaptureAudioFileOutput;
struct AVCaptureDepthDataOutput;
struct AVCaptureMovieFileOutput;
struct AVCaptureMultiCamSession;
struct AVCaptureSessionInternal;
struct AVCaptureVideoDataOutput;
struct AVDateRangeMetadataGroup;
struct AVFrameRateRangeInternal;
struct AVMediaSelectionInternal;
struct AVMetadataObjectInternal;
struct AudioFilePacketTableInfo;
struct AudioFileTypeAndFormatID;
struct AudioQueueParameterEvent;
struct BNNSImageStackDescriptor;
struct CFDictionaryKeyCallBacks;
struct CFRunLoopObserverContext;
struct CHHapticDynamicParameter;
struct CKLocationSortDescriptor;
struct CKModifyRecordsOperation;
struct CKOperationConfiguration;
struct CKRecordZoneNotification;
struct CKRecordZoneSubscription;
struct CKUserIdentityLookupInfo;
struct CMHeadphoneMotionManager;
struct CNPostalAddressFormatter;
struct CPNowPlayingRepeatButton;
struct GCControllerDirectionPad;
struct GKAchievementDescription;
struct GKTurnBasedExchangeReply;
struct GLKEffectPropertyTexture;
struct HKDiscreteQuantitySample;
struct HKElectrocardiogramQuery;
struct HKHeartbeatSeriesBuilder;
struct HMCharacteristicMetadata;
struct ICScannerFeatureTemplate;
struct INAddMediaIntentResponse;
struct INAddTasksIntentResponse;
struct INDoubleResolutionResult;
struct INEnergyResolutionResult;
struct INGetCarLockStatusIntent;
struct INIntentResolutionResult;
struct INLengthResolutionResult;
struct INListCarsIntentResponse;
struct INObjectResolutionResult;
struct INPersonResolutionResult;
struct INSaveProfileInCarIntent;
struct INSendRideFeedbackIntent;
struct INSetCarLockStatusIntent;
struct INSetTaskAttributeIntent;
struct INStringResolutionResult;
struct INVolumeResolutionResult;
union KernFormatSpecificHeader;
union KerxFormatSpecificHeader;
struct MDLMaterialPropertyGraph;
struct MDLMeshBufferZoneDefault;
struct MDLRelativeAssetResolver;
struct MIDIThruConnectionParams;
struct MLCConvolutionDescriptor;
struct MLUpdateProgressHandlers;
struct MPMediaPropertyPredicate;
struct MPPlayableContentManager;
struct MPSAccelerationStructure;
struct MPSCNNArithmeticGradient;
struct MPSCNNBatchNormalization;
struct MPSCNNFullyConnectedNode;
struct MPSCNNGroupNormalization;
struct MPSCNNLogSoftMaxGradient;
struct MPSCNNLossDataDescriptor;
struct MPSCNNNeuronAbsoluteNode;
struct MPSCNNNeuronGradientNode;
struct MPSCNNNeuronSoftPlusNode;
struct MPSCNNNeuronSoftSignNode;
struct MPSCNNPoolingAverageNode;
struct MPSCNNPoolingMaxGradient;
struct MPSCNNUpsamplingBilinear;
struct MPSCNNUpsamplingGradient;
struct MPSCNNYOLOLossDescriptor;
struct MPSImageLaplacianPyramid;
struct MPSImageReduceColumnMean;
struct MPSIntegerDivisionParams;
struct MPSMatrixDecompositionLU;
struct MPSMatrixSoftMaxGradient;
struct MPSMatrixSolveTriangular;
struct MPSNDArrayGatherGradient;
struct MPSNDArrayMultiaryKernel;
struct MPSNNBinaryGradientState;
struct MPSNNInitialGradientNode;
struct MPSNNOptimizerDescriptor;
struct MPSNNReductionRowMaxNode;
struct MPSNNReductionRowMinNode;
struct MPSNNReductionRowSumNode;
struct MPSNNReshapeGradientNode;
struct MTLComputePassDescriptor;
struct MXCPUExceptionDiagnostic;
struct MXLocationActivityMetric;
struct MusicDeviceStdNoteParams;
struct NEEvaluateConnectionRule;
struct NEOnDemandRuleDisconnect;
struct NETunnelProviderProtocol;
struct NFCISO15693ReaderSession;
struct NSCollectionLayoutAnchor;
struct NSFetchRequestExpression;
struct NSMapTableValueCallBacks;
struct NSOperatingSystemVersion;
struct NSPersistentHistoryToken;
struct NSPersistentStoreRequest;
struct NSURLSessionDownloadTask;
struct NSUnitElectricResistance;
struct NSUnitInformationStorage;
struct NWBonjourServiceEndpoint;
struct OS_os_workgroup_interval;
struct OS_os_workgroup_parallel;
struct OpaqueAudioQueueTimeline;
struct OpaqueMusicEventIterator;
struct OpaqueVTMultiPassStorage;
struct PDFActionGoToPrivateVars;
struct PDFAnnotationPrivateVars;
struct PKPaymentMerchantSession;
struct RPBroadcastConfiguration;
struct RPBroadcastSampleHandler;
struct SCNPhysicsConeTwistJoint;
struct SKCloudServiceController;
struct ScheduledAudioFileRegion;
struct SecKeychainAttributeInfo;
struct SecKeychainAttributeList;
struct UIActivityViewController;
struct UICellAccessoryCheckmark;
struct UICellConfigurationState;
struct UICloudSharingController;
struct UICollectionReusableView;
struct UICollectionViewListCell;
struct UIContextMenuInteraction;
struct UIGraphicsRendererFormat;
struct UIHoverGestureRecognizer;
struct UIPinchGestureRecognizer;
struct UIPointerHighlightEffect;
struct UIPresentationController;
struct UISceneConnectionOptions;
struct UISpringTimingParameters;
struct UIStoryboardPopoverSegue;
struct UISwipeGestureRecognizer;
struct UITextInputAssistantItem;
struct UITextInputPasswordRules;
struct UIUserNotificationAction;
struct UIViewConfigurationState;
struct UNNotificationAttachment;
struct UNUserNotificationCenter;
struct VNPixelBufferObservation;
struct VNSequenceRequestHandler;
struct VSAccountMetadataRequest;
struct WKContextMenuElementInfo;
struct __CVOpenGLESTextureCache;
struct __Reply__act_get_state_t;
struct __Reply__act_set_state_t;
struct __Reply__kmod_get_info_t;
struct __Reply__task_set_info_t;
struct __Reply__task_suspend2_t;
struct __Reply__thread_assign_t;
struct __Reply__thread_create_t;
struct __Reply__thread_policy_t;
struct __Reply__thread_resume_t;
struct __Reply__thread_sample_t;
struct __Reply__vm_deallocate_t;
struct __Request__clock_alarm_t;
struct __Request__host_reboot_t;
struct __Request__kmod_create_t;
struct __Request__task_assign_t;
struct __Request__task_create_t;
struct __Request__task_policy_t;
struct __Request__task_resume_t;
struct __Request__task_sample_t;
struct __Request__thread_info_t;
struct __Request__thread_wire_t;
struct __Request__vm_allocate_t;
struct __arm_legacy_debug_state;
struct __libcpp_debug_exception;
struct _opaque_pthread_rwlock_t;
struct _xmlSchemaAttributeGroup;
struct _xmlSchematronParserCtxt;
struct arm_unified_thread_state;
struct dns_domain_name_record_t;
struct dns_in6_address_record_t;
struct dyld_chained_ptr_32_bind;
struct dyld_chained_ptr_64_bind;
struct dyld_kernel_process_info;
struct dyld_shared_cache_ranges;
struct gss_ctx_id_t_desc_struct;
struct gss_krb5_rfc1964_keydata;
struct host_preferred_user_arch;
struct kauth_identity_extlookup;
struct mach_msg_audit_trailer_t;
struct mach_msg_seqno_trailer_t;
struct processor_set_basic_info;
struct sqlite3_rtree_query_info;
struct std____1____bitset_0__0_;
struct std____1____ll_mul_0__0_;
struct std____1____num_get_base;
struct std____1____num_put_base;
struct std____1____shared_count;
struct std____1__auto_ptr_void_;
struct std____1__complex_float_;
struct std____1__ctype_wchar_t_;
struct std____1__equal_to_void_;
struct std____1__error_category;
struct std____1__hash_char16_t_;
struct std____1__hash_char32_t_;
struct std____1__ios_base__Init;
struct std____1__messages_char_;
struct std____1__numpunct_char_;
struct std____1__pointer_safety;
struct std____1__ratio_1__1000_;
struct std____1__ratio_1000__1_;
struct std____1__time_get_char_;
struct std____1__time_put_char_;
struct std__overflow_error_vtbl;
struct thread_background_policy;
struct thread_precedence_policy;
struct vDSP_biquad_SetupStructD;
struct vDSP_biquadm_SetupStruct;
struct vImageChannelDescription;
struct vm_region_submap_info_64;
struct voucher_mach_msg_state_s;
struct AUSamplerBankPresetData;
struct AUSamplerInstrumentData;
struct AVAssetWriterInputGroup;
struct AVAudioCompressedBuffer;
struct AVCameraCalibrationData;
struct AVCaptureDeviceInternal;
struct AVCaptureMetadataOutput;
struct AVCaptureOutputInternal;
struct AVFragmentedAssetMinder;
struct AVFragmentedMovieMinder;
struct AVMetadataCatBodyObject;
struct AVMetadataDogBodyObject;
struct AVMetadataSalientObject;
struct AVMutableMediaSelection;
struct AVPlayerItemVideoOutput;
struct AVRouteDetectorInternal;
struct AVTextStyleRuleInternal;
struct AudioChannelDescription;
struct AudioConverterPrimeInfo;
struct AudioUnitExternalBuffer;
struct AudioUnitNodeConnection;
struct AudioUnitParameterEvent;
struct BGAppRefreshTaskRequest;
struct BGProcessingTaskRequest;
struct BNNSLayerParametersGram;
struct BNNSLayerParametersLSTM;
struct BNNSOptimizerAdamFields;
struct CBMutableCharacteristic;
struct CFFileDescriptorContext;
struct CFRunLoopSourceContext1;
struct CGDataConsumerCallbacks;
struct CIFilterGeneratorStruct;
struct CKAcceptSharesOperation;
struct CKFetchRecordsOperation;
struct CLKComplicationTemplate;
struct CMMotionActivityManager;
struct CNContactViewController;
struct CNInstantMessageAddress;
struct CPNowPlayingImageButton;
struct CTParagraphStyleSetting;
struct CVPlanarPixelBufferInfo;
struct CXCallDirectoryProvider;
struct CXProviderConfiguration;
struct ENExposureConfiguration;
struct ExtendedAudioFormatInfo;
struct GCControllerButtonInput;
struct GKChallengeEventHandler;
struct GKTurnBasedEventHandler;
struct HKElectrocardiogramType;
struct HKHeartbeatSeriesSample;
struct HKLiveWorkoutDataSource;
struct HMAccessorySetupPayload;
struct HMCameraSettingsControl;
struct HMCameraSnapshotControl;
struct ICScannerFeatureBoolean;
struct ICScannerFunctionalUnit;
struct INDateRelevanceProvider;
struct INListRideOptionsIntent;
struct INPayBillIntentResponse;
struct INRelevantShortcutStore;
struct INRestaurantReservation;
struct INSearchForPhotosIntent;
struct INSendMessageAttachment;
struct INSetProfileInCarIntent;
struct INSetRadioStationIntent;
struct INSpeedResolutionResult;
struct MCBrowserViewController;
struct MDLAnimatedVector3Array;
struct MDLMaterialPropertyNode;
struct MDLPackedJointAnimation;
struct MDLTransformTranslateOp;
struct MIDIIOErrorNotification;
struct MKLocalSearchCompletion;
struct MKMultiPolylineRenderer;
struct MKPointOfInterestFilter;
struct MLCActivationDescriptor;
struct MPMediaPickerController;
struct MPMoviePlayerController;
struct MPMusicPlayerController;
struct MPSCNNBinaryConvolution;
struct MPSCNNDilatedPoolingMax;
struct MPSCNNNeuronExponential;
struct MPSCNNNeuronHardSigmoid;
struct MPSCNNNeuronSigmoidNode;
struct MPSCNNNormalizationNode;
struct MPSCNNPoolingL2NormNode;
struct MPSCNNUpsamplingNearest;
struct MPSImageGaussianPyramid;
struct MPSImageReadWriteParams;
struct MPSImageReduceColumnMax;
struct MPSImageReduceColumnMin;
struct MPSImageReduceColumnSum;
struct MPSImageThresholdBinary;
struct MPSImageThresholdToZero;
struct MPSIntersectionDistance;
struct MPSMatrixCopyDescriptor;
struct MPSMatrixFullyConnected;
struct MPSMatrixMultiplication;
struct MPSMatrixNeuronGradient;
struct MPSNDArrayGradientState;
struct MPSNNGradientFilterNode;
struct MPSNNMultiplicationNode;
struct MPSNNUnaryReductionNode;
struct MSMessageTemplateLayout;
struct MTLMapIndirectArguments;
struct MTLRenderPassDescriptor;
struct MTLTextureReferenceType;
struct MXNetworkTransferMetric;
struct NEFilterControlProvider;
struct NEHotspotHelperResponse;
struct NETunnelNetworkSettings;
struct NETunnelProviderManager;
struct NETunnelProviderSession;
struct NSBundleResourceRequest;
struct NSCollectionLayoutGroup;
struct NSDateIntervalFormatter;
struct NSDirectionalEdgeInsets;
struct NSEntityMigrationPolicy;
struct NSExpressionDescription;
struct NSFetchIndexDescription;
struct NSFileProviderExtension;
struct NSLinkEditErrorHandlers;
struct NSMutableParagraphStyle;
struct NSPersistentStoreResult;
struct NSURLConnectionInternal;
struct NSURLCredentialInternal;
struct NSURLSessionTaskMetrics;
struct NSUnitConcentrationMass;
struct OpaqueAudioFileStreamID;
struct PDFActionURLPrivateVars;
struct PDFThumbnailViewPrivate;
struct PKAddPaymentPassRequest;
struct PKShareablePassMetadata;
struct PKTransitPassProperties;
struct RPPreviewViewController;
struct SCNReplicatorConstraint;
struct SFAuthenticationSession;
struct SFContentBlockerManager;
struct SFNTLookupSegmentHeader;
struct SFSpeechRecognitionTask;
struct SKReceiptRefreshRequest;
struct SKStoreReviewController;
struct SLComposeViewController;
struct TKSmartCardTokenSession;
struct TKTokenKeychainContents;
struct UIActivityIndicatorView;
struct UICubicTimingParameters;
struct UIDocumentBrowserAction;
struct UIDragPreviewParameters;
struct UIGraphicsImageRenderer;
struct UIImagePickerController;
struct UIPopoverBackgroundView;
struct UISceneSizeRestrictions;
struct UITableViewDropProposal;
struct UIVideoEditorController;
struct VNDetectBarcodesRequest;
struct VNDetectContoursRequest;
struct VNTrackRectangleRequest;
struct VNTrajectoryObservation;
struct WKSnapshotConfiguration;
struct WKUserContentController;
struct __Reply__kext_request_t;
struct __Reply__kmod_control_t;
struct __Reply__kmod_destroy_t;
struct __Reply__lock_acquire_t;
struct __Reply__lock_handoff_t;
struct __Reply__lock_release_t;
struct __Reply__mach_vm_wire_t;
struct __Reply__task_inspect_t;
struct __Reply__task_resume2_t;
struct __Reply__task_suspend_t;
struct __Reply__task_threads_t;
struct __Reply__thread_abort_t;
struct __Reply__vm_read_list_t;
struct __Reply__vm_region_64_t;
struct __Request__vm_inherit_t;
struct __Request__vm_protect_t;
struct __SCNetworkReachability;
struct __SecTrustedApplication;
struct __darwin_arm_neon_state;
struct __objc_class_struct_ext;
struct __objc_method_desc_list;
struct _opaque_pthread_mutex_t;
struct _xmlCharEncodingHandler;
struct _xmlSchemaAttributeLink;
struct _xmlSchematronValidCtxt;
struct dyld_cache_mapping_info;
struct dylib_table_of_contents;
struct encryption_info_command;
struct gss_OID_set_desc_struct;
struct memory_object_attr_info;
struct memory_object_perf_info;
struct objc_method_description;
struct processor_cpu_load_info;
struct processor_set_load_info;
struct res_9_ns_tcp_tsig_state;
struct sqlite3_pcache_methods2;
struct std____1____get_pair_0_;
struct std____1____get_pair_1_;
struct std____1__atomic_short_;
struct std____1__bit_and_void_;
struct std____1__bit_not_void_;
struct std____1__bit_xor_void_;
struct std____1__collate_char_;
struct std____1__divides_void_;
struct std____1__greater_void_;
struct std____1__hash_wchar_t_;
struct std____1__ios_base_vtbl;
struct std____1__locale____imp;
struct std____1__locale__facet;
struct std____1__messages_base;
struct std____1__modulus_void_;
struct std____1__num_get_char_;
struct std____1__num_put_char_;
struct std____1__ratio_1__100_;
struct std____1__ratio_100__1_;
struct std____1__try_to_lock_t;
struct std__bad_exception_vtbl;
struct std__runtime_error_vtbl;
struct vDSP_biquad_SetupStruct;
struct vImage_YpCbCrPixelRange;
struct vm_region_basic_info_64;
struct vm_region_extended_info;
struct ABPersonViewController;
struct ARQuickLookPreviewItem;
struct ASAuthorizationRequest;
struct AURenderCallbackStruct;
struct AVAudioConnectionPoint;
struct AVAudioEnvironmentNode;
struct AVCaptureInputInternal;
struct AVCaptureMetadataInput;
struct AVCapturePhotoInternal;
struct AVCapturePhotoSettings;
struct AVFragmentedAssetTrack;
struct AVFragmentedMovieTrack;
struct AVMediaSelectionOption;
struct AVMetadataItemInternal;
struct AVMutableMovieInternal;
struct AVPlayerLooperInternal;
struct AVPlayerViewController;
struct AVPortraitEffectsMatte;
struct AVSpeechSynthesisVoice;
struct AudioUnitMeterClipping;
struct AudioUnitParameterInfo;
struct AudioUnitRenderContext;
struct AuthorizationOpaqueRef;
struct BNNSLSTMDataDescriptor;
struct BNNSLSTMGateDescriptor;
struct BigEndianUnsignedFixed;
struct BigEndianUnsignedShort;
struct CAFAudioFormatListItem;
struct CFRunLoopSourceContext;
struct CHHapticEventParameter;
struct CHHapticParameterCurve;
struct CIImageProcessorKernel;
struct CIPDF417CodeDescriptor;
struct CKDatabaseNotification;
struct CKDatabaseSubscription;
struct CKModifyBadgeOperation;
struct CLKSimpleGaugeProvider;
struct CLLocationCoordinate2D;
struct CNContactsUserDefaults;
struct CNMutablePostalAddress;
struct CPContactMessageButton;
struct CPNowPlayingMoreButton;
struct CPSessionConfiguration;
struct CPVoiceControlTemplate;
struct CTRunDelegateCallbacks;
struct CTTelephonyNetworkInfo;
struct CXCallDirectoryManager;
struct ENTemporaryExposureKey;
struct GCMicroGamepadSnapshot;
struct GCPhysicalInputProfile;
struct GKAchievementChallenge;
struct GKCylindersNoiseSource;
struct GKGaussianDistribution;
struct GKMonteCarloStrategist;
struct GKPeerPickerController;
struct GKShuffledDistribution;
struct GKThreadsafeDictionary;
struct GKTurnBasedParticipant;
struct GLKEffectPropertyLight;
struct GLKMeshBufferAllocator;
struct GLKReflectionMapEffect;
struct HKActivitySummaryQuery;
struct HKHeartbeatSeriesQuery;
struct HKStatisticsCollection;
struct HKWorkoutConfiguration;
struct HMMutableCalendarEvent;
struct HMMutableDurationEvent;
struct HMMutableLocationEvent;
struct HMMutablePresenceEvent;
struct HMSignificantTimeEvent;
struct INCreateTaskListIntent;
struct INEnumResolutionResult;
struct INFileResolutionResult;
struct INMassResolutionResult;
struct INNoteResolutionResult;
struct INRentalCarReservation;
struct INRequestPaymentIntent;
struct INRideCompletionStatus;
struct INSearchForBillsIntent;
struct INSearchForMediaIntent;
struct INStartAudioCallIntent;
struct INStartVideoCallIntent;
struct INTaskResolutionResult;
struct INTemporalEventTrigger;
struct INUpcomingMediaManager;
struct KerxControlPointAction;
struct KerxControlPointHeader;
struct MCNearbyServiceBrowser;
struct MDLAnimatedScalarArray;
struct MDLBundleAssetResolver;
struct MDLCheckerboardTexture;
struct MDLVertexAttributeData;
struct MIDICIDiscoveryManager;
struct MKLocalSearchCompleter;
struct MKMarkerAnnotationView;
struct MKMultiPolygonRenderer;
struct MKUserLocationInternal;
struct MLCEmbeddingDescriptor;
struct MLCFullyConnectedLayer;
struct MLCOptimizerDescriptor;
struct MLDictionaryConstraint;
struct MLModelCollectionEntry;
struct MLMultiArrayConstraint;
struct MLParameterDescription;
struct MPFeedbackCommandEvent;
struct MPNowPlayingInfoCenter;
struct MPSCNNMultiplyGradient;
struct MPSCNNNeuronLinearNode;
struct MPSCNNSubtractGradient;
struct MPSImageStatisticsMean;
struct MPSMatrixSolveCholesky;
struct MPSNDArrayBinaryKernel;
struct MPSNDArrayMultiaryBase;
struct MPSNDArrayStridedSlice;
struct MPSNNBilinearScaleNode;
struct MPSNNConcatenationNode;
struct MPSNNGradientStateNode;
struct MTKMeshBufferAllocator;
struct MTLAttributeDescriptor;
struct MTLSharedEventListener;
struct MTLSharedTextureHandle;
struct MXSignpostIntervalData;
struct MortContextualSubtable;
struct MorxContextualSubtable;
struct NEDNSOverHTTPSSettings;
struct NEFilterControlVerdict;
struct NEFilterNewFlowVerdict;
struct NEFilterPacketProvider;
struct NEHotspotConfiguration;
struct NEHotspotHelperCommand;
struct NEPacketTunnelProvider;
struct NSAtomicStoreCacheNode;
struct NSAttributeDescription;
struct NSCollectionLayoutItem;
struct NSCollectionLayoutSize;
struct NSDecimalNumberHandler;
struct NSFastEnumerationState;
struct NSISO8601DateFormatter;
struct NSIncrementalStoreNode;
struct NSManagedObjectContext;
struct NSMapTableKeyCallBacks;
struct NSMeasurementFormatter;
struct NSPersonNameComponents;
struct NSQueryGenerationToken;
struct NSStringDrawingContext;
struct NSURLCredentialStorage;
struct NSURLSessionStreamTask;
struct NSURLSessionUploadTask;
struct NoteParamsControlValue;
struct PHAssetCreationRequest;
struct PHAssetResourceManager;
struct PHContentEditingOutput;
struct PHPickerViewController;
struct PHProjectChangeRequest;
struct PKPaymentRequestUpdate;
struct QLFileThumbnailRequest;
struct SCNBillboardConstraint;
struct SCNGeometryTessellator;
struct SCNPhysicsVehicleWheel;
struct SCNTransformConstraint;
struct SFNTLookupSingleHeader;
struct SFNTLookupVectorHeader;
struct SFSafariViewController;
struct SFTranscriptionSegment;
struct SKOverlayConfiguration;
struct SNClassificationResult;
struct SNClassifySoundRequest;
struct TKSmartCardSlotManager;
struct TKSmartCardTokenDriver;
struct UIAccessibilityElement;
struct UIActivityItemProvider;
struct UICellAccessoryReorder;
struct UICollectionViewLayout;
struct UINavigationController;
struct UIPanGestureRecognizer;
struct UIPointerRegionRequest;
struct UISearchSuggestionItem;
struct UITabBarItemAppearance;
struct UITableViewPlaceholder;
struct UITapGestureRecognizer;
struct UIViewPropertyAnimator;
struct UNNotificationCategory;
struct UNNotificationResponse;
struct UNNotificationSettings;
struct VNClassifyImageRequest;
struct VNDetectHorizonRequest;
struct VNFaceLandmarkRegion2D;
struct VNRecognizeTextRequest;
struct VNRectangleObservation;
struct VNTargetedImageRequest;
struct VSAccountManagerResult;
struct WKContentRuleListStore;
struct WKWebViewConfiguration;
struct _EAGLSharegroupPrivate;
struct __CFNotificationCenter;
struct __Reply__clock_alarm_t;
struct __Reply__host_reboot_t;
struct __Reply__kmod_create_t;
struct __Reply__task_assign_t;
struct __Reply__task_create_t;
struct __Reply__task_policy_t;
struct __Reply__task_resume_t;
struct __Reply__task_sample_t;
struct __Reply__thread_info_t;
struct __Reply__thread_wire_t;
struct __Reply__vm_allocate_t;
struct __Request__host_info_t;
struct __Request__task_info_t;
struct __Request__task_wire_t;
struct __Request__vm_map_64_t;
struct __Request__vm_region_t;
struct __darwin_arm_vfp_state;
struct __objc_category_struct;
struct __objc_protocol_struct;
struct _opaque_pthread_attr_t;
struct _opaque_pthread_cond_t;
struct _opaque_pthread_once_t;
struct _xmlXPathParserContext;
struct dispatch_source_type_s;
struct dyld_cache_range_entry;
struct dyld_cache_slide_info2;
struct dyld_cache_slide_info3;
struct dyld_kernel_image_info;
struct gss_buffer_desc_struct;
struct gss_name_t_desc_struct;
struct mach_msg_mac_trailer_t;
struct malloc_introspection_t;
struct policy_timeshare_limit;
struct prebound_dylib_command;
struct rpc_routine_descriptor;
struct sfntFontFeatureSetting;
struct source_version_command;
struct sqlite3_pcache_methods;
struct sqlite3_rtree_geometry;
struct std____1____destruct_n;
struct std____1____do_message;
struct std____1____rs_default;
struct std____1____second_tag;
struct std____1__adopt_lock_t;
struct std____1__atomic_bool_;
struct std____1__atomic_char_;
struct std____1__atomic_long_;
struct std____1__bad_weak_ptr;
struct std____1__bit_or_void_;
struct std____1__codecvt_base;
struct std____1__defer_lock_t;
struct std____1__hash_double_;
struct std____1__negate_void_;
struct std____1__ratio_1__10_;
struct std____1__ratio_10__1_;
struct std____1__system_error;
struct std__domain_error_vtbl;
struct std__length_error_vtbl;
struct std__out_of_range_vtbl;
struct task_absolutetime_info;
struct task_affinity_tag_info;
struct task_kernelmemory_info;
struct task_thread_times_info;
struct task_trace_memory_info;
struct thread_affinity_policy;
struct thread_extended_policy;
struct thread_identifier_info;
struct thread_standard_policy;
struct twolevel_hints_command;
struct vImageTransferFunction;
struct vImage_AffineTransform;
struct ALAssetRepresentation;
struct ARCoachingOverlayView;
struct AVAssetImageGenerator;
struct AVAssetReaderInternal;
struct AVAssetResourceLoader;
struct AVAssetWriterInternal;
struct AVAudioUnitDistortion;
struct AVAudioUnitTimeEffect;
struct AVCaptureAudioChannel;
struct AVCaptureDeviceFormat;
struct AVCompositionInternal;
struct AVMediaSelectionGroup;
struct AVMutableMetadataItem;
struct AVPlayerImageProvider;
struct AVPlayerItemAccessLog;
struct AVPlayerLayerInternal;
struct AVQueuePlayerInternal;
struct AudioClassDescription;
struct AudioValueTranslation;
struct BNNSNDArrayDescriptor;
struct BigEndianUnsignedLong;
struct CAMediaTimingFunction;
struct CFBinaryHeapCallBacks;
struct CFRunLoopTimerContext;
struct CFStreamClientContext;
struct CGColorConversionInfo;
struct CIAztecCodeDescriptor;
struct CLKComplicationServer;
struct CLKSimpleTextProvider;
struct CNChangeHistoryAnchor;
struct CNContactFetchRequest;
struct CPActionSheetTemplate;
struct CPDashboardController;
struct CPInformationTemplate;
struct CPInterfaceController;
struct CVPlanarComponentInfo;
struct DSPDoubleSplitComplex;
struct EKEventViewController;
struct EKRecurrenceDayOfWeek;
struct ENExposureSummaryItem;
struct GCControllerAxisInput;
struct GCEventViewController;
struct GKCoherentNoiseSource;
struct GKConstantNoiseSource;
struct HKActivitySummaryType;
struct HKAnchoredObjectQuery;
struct HKAudiogramSampleType;
struct HKBiologicalSexObject;
struct HKWheelchairUseObject;
struct HKWorkoutRouteBuilder;
struct HMAddAccessoryRequest;
struct HMCameraStreamControl;
struct HMCharacteristicEvent;
struct ICScannerFeatureRange;
struct INCancelWorkoutIntent;
struct INDateComponentsRange;
struct INDefaultCardTemplate;
struct INGetRideStatusIntent;
struct INGetVisualCodeIntent;
struct INResumeWorkoutIntent;
struct INRidePartySizeOption;
struct INSpatialEventTrigger;
struct INTransferMoneyIntent;
struct INURLResolutionResult;
struct INVoiceShortcutCenter;
struct JustPCActionSubrecord;
struct JustPCDuctilityAction;
struct KernOrderedListHeader;
struct KernSimpleArrayHeader;
struct KerxAnchorPointAction;
struct KerxControlPointEntry;
struct KerxOrderedListHeader;
struct KerxSimpleArrayHeader;
struct MCAdvertiserAssistant;
struct MDLAnimatedQuaternion;
struct MDLColorSwatchTexture;
struct MDLScatteringFunction;
struct MDLStereoscopicCamera;
struct MDLTransformRotateXOp;
struct MDLTransformRotateYOp;
struct MDLTransformRotateZOp;
struct MDLVertexBufferLayout;
struct MIDINetworkConnection;
struct MKLocalSearchResponse;
struct MKOverlayPathRenderer;
struct MKTileOverlayRenderer;
struct MLCConcatenationLayer;
struct MLCYOLOLossDescriptor;
struct MLImageSizeConstraint;
struct MPMediaItemCollection;
struct MPMovieAccessLogEvent;
struct MPRemoteCommandCenter;
struct MPSCNNConvolutionNode;
struct MPSCNNDropoutGradient;
struct MPSCNNNeuronLogarithm;
struct MPSCNNNeuronPReLUNode;
struct MPSCNNNeuronPowerNode;
struct MPSCNNNeuronReLUNNode;
struct MPSCNNPoolingGradient;
struct MPSCNNSoftMaxGradient;
struct MPSImageBilinearScale;
struct MPSImageFindKeypoints;
struct MPSImageHistogramInfo;
struct MPSImageReduceRowMean;
struct MPSMatrixBinaryKernel;
struct MPSMatrixRandomMTGP32;
struct MPSMatrixRandomPhilox;
struct MPSNDArrayUnaryKernel;
struct MPSNNLanczosScaleNode;
struct MPSNNLocalCorrelation;
struct MPSNNLossGradientNode;
struct MPSNNNeuronDescriptor;
struct MPSNNOptimizerRMSProp;
struct MPSNNReduceColumnMean;
struct MPSRayOriginDirection;
struct MPSkipIntervalCommand;
struct MTLArgumentDescriptor;
struct MTLBlitPassDescriptor;
struct MTLFunctionDescriptor;
struct MortInsertionSubtable;
struct MorxInsertionSubtable;
struct MusicDeviceNoteParams;
struct NEFilterPacketContext;
struct NEHotspotHS20Settings;
struct NEOnDemandRuleConnect;
struct NSComparisonPredicate;
struct NSDirectoryEnumerator;
struct NSFileProviderManager;
struct NSFileProviderService;
struct NSInvocationOperation;
struct NSMutableCharacterSet;
struct NSPersistentContainer;
struct NSPropertyDescription;
struct NSURLProtocolInternal;
struct NSURLResponseInternal;
struct NSUnitConverterLinear;
struct NSUnitElectricCurrent;
struct NSXPCListenerEndpoint;
struct OSLogMessageComponent;
struct PDFDestinationPrivate;
struct PHCachingImageManager;
struct PHContentEditingInput;
struct PHImageRequestOptions;
struct PHObjectChangeDetails;
struct PHPickerConfiguration;
struct PHVideoRequestOptions;
struct PKDisbursementRequest;
struct PKDisbursementVoucher;
struct PKSuicaPassProperties;
struct RPBroadcastController;
struct SCDynamicStoreContext;
struct SCNDistanceConstraint;
struct SCNPhysicsSliderJoint;
struct SFContentBlockerState;
struct SFNTLookupArrayHeader;
struct SKPhysicsJointSliding;
struct SNAudioStreamAnalyzer;
struct SRMessagesUsageReport;
struct SparseIterativeMethod;
struct SparseMatrixStructure;
struct UICellAccessoryDelete;
struct UICellAccessoryInsert;
struct UIDeferredMenuElement;
struct UIDynamicItemBehavior;
struct UIGraphicsPDFRenderer;
struct UIInputViewController;
struct UISceneOpenURLOptions;
struct UIScribbleInteraction;
struct UISplitViewController;
struct UITableViewController;
struct UITargetedDragPreview;
struct UIWindowSceneDelegate;
struct UNNotificationContent;
struct UNNotificationRequest;
struct UNNotificationTrigger;
struct VNContoursObservation;
struct VNImageRequestHandler;
struct WCSessionFileTransfer;
struct WKBackForwardListItem;
struct WKOpenPanelParameters;
struct _CFHTTPAuthentication;
struct __CFNetServiceBrowser;
struct __CFNetServiceMonitor;
struct __CVMetalTextureCache;
struct __Reply__vm_inherit_t;
struct __Reply__vm_protect_t;
struct __Request__lock_try_t;
struct __Request__vm_msync_t;
struct __Request__vm_remap_t;
struct __Request__vm_write_t;
struct __SCNetworkConnection;
struct __objc2_class_rw1_ext;
struct _xmlParserInputBuffer;
struct _xmlParserNodeInfoSeq;
struct _xmlRelaxNGParserCtxt;
struct build_version_command;
struct dispatch_queue_attr_s;
struct dns_resource_record_t;
struct dyld_cache_image_info;
struct dyld_cache_slide_info;
struct fileset_entry_command;
struct kernel_resource_sizes;
struct linkedit_data_command;
struct linker_option_command;
union mach_msg_descriptor_t;
struct mach_msg_empty_send_t;
struct policy_timeshare_base;
struct policy_timeshare_info;
struct prebind_cksum_command;
struct sqlite3_mutex_methods;
struct std____1__atomic_int_;
struct std____1__atomic_flag;
struct std____1__ctype_char_;
struct std____1__hash_float_;
struct std____1__hash_short_;
struct std____1__minus_void_;
struct std____1__timed_mutex;
struct std__bad_array_length;
struct std__invalid_argument;
struct std__logic_error_vtbl;
struct std__nested_exception;
struct std__range_error_vtbl;
struct sub_framework_command;
struct vDSP_DFT_SetupStructD;
struct vm_region_submap_info;
struct vol_capabilities_attr;
struct AAAccessControlEntry;
struct AAArchiveStream_impl;
struct ARSkeletonDefinition;
struct ASPasswordCredential;
struct AUDependentParameter;
struct AUNodeRenderCallback;
struct AVAssetExportSession;
struct AVAssetSegmentReport;
struct AVAssetTrackInternal;
struct AVAudioChannelLayout;
struct AVAudioUnitComponent;
struct AVAudioUnitGenerator;
struct AVAudioUnitTimePitch;
struct AVAudioUnitVarispeed;
struct AVCaptureDeviceInput;
struct AVCapturePhotoOutput;
struct AVCaptureScreenInput;
struct AVContentKeyResponse;
struct AVMetadataBodyObject;
struct AVMetadataFaceObject;
struct AVMetadataItemFilter;
struct AVMovieTrackInternal;
struct AVMutableComposition;
struct AVPlayerItemErrorLog;
struct AVPlayerItemInternal;
struct AVTimedMetadataGroup;
struct AudioFile_SMPTE_Time;
struct BNNSArithmeticBinary;
struct BNNSFilterParameters;
struct BNNSVectorDescriptor;
struct CAFPacketTableHeader;
struct CAF_UUID_ChunkHeader;
struct CFMessagePortContext;
struct CFStringInlineBuffer;
struct CNChangeHistoryEvent;
struct CPNowPlayingTemplate;
struct CSCustomAttributeKey;
struct CXPlayDTMFCallAction;
struct CXSetGroupCallAction;
struct CXSetMutedCallAction;
struct EKStructuredLocation;
struct ENExposureDaySummary;
struct GCControllerTouchpad;
struct GKNotificationBanner;
struct GKRandomDistribution;
struct GKSpheresNoiseSource;
struct GKVoronoiNoiseSource;
struct GLKEffectPropertyFog;
struct GLKEffectPropertyPrv;
struct HKCharacteristicType;
struct HKLiveWorkoutBuilder;
struct HMCameraAudioControl;
struct INAppendToNoteIntent;
struct INLodgingReservation;
struct INPauseWorkoutIntent;
struct INStartWorkoutIntent;
struct INTermsAndConditions;
struct IUnknown_vtbl_layout;
struct KernIndexArrayHeader;
struct KernOrderedListEntry;
struct KerxCoordinateAction;
struct KerxIndexArrayHeader;
struct KerxOrderedListEntry;
struct MDLAnimatedMatrix4x4;
struct MDLPathAssetResolver;
struct MDLTransformMatrixOp;
struct MDLTransformOrientOp;
struct MDLTransformRotateOp;
struct MIDICIDiscoveredNode;
struct MIDIControlTransform;
struct MIDISysexSendRequest;
struct MKDirectionsResponse;
struct MKLocalSearchRequest;
struct MKMapCameraZoomRange;
struct MKMapSnapshotOptions;
struct MKUserTrackingButton;
struct MLArrayBatchProvider;
struct MLCPoolingDescriptor;
struct MLFeatureDescription;
struct MLModelConfiguration;
struct MLSequenceConstraint;
struct MPMovieErrorLogEvent;
struct MPRatingCommandEvent;
struct MPRemoteCommandEvent;
struct MPSBinaryImageKernel;
struct MPSCNNFullyConnected;
struct MPSCNNGradientKernel;
struct MPSCNNLogSoftMaxNode;
struct MPSCNNLossDescriptor;
struct MPSCNNMultiaryKernel;
struct MPSCNNNeuronAbsolute;
struct MPSCNNNeuronGeLUNode;
struct MPSCNNNeuronGradient;
struct MPSCNNNeuronReLUNode;
struct MPSCNNNeuronSoftPlus;
struct MPSCNNNeuronSoftSign;
struct MPSCNNNeuronTanHNode;
struct MPSCNNPoolingAverage;
struct MPSCNNPoolingMaxNode;
struct MPSImageCopyToMatrix;
struct MPSImageGaussianBlur;
struct MPSImageGuidedFilter;
struct MPSImageKeypointData;
struct MPSImageLanczosScale;
struct MPSImageReduceRowMax;
struct MPSImageReduceRowMin;
struct MPSImageReduceRowSum;
struct MPSMatrixCopyOffsets;
struct MPSMatrixCopyToImage;
struct MPSMatrixUnaryKernel;
struct MPSNDArrayDescriptor;
struct MPSNNForwardLossNode;
struct MPSNNInitialGradient;
struct MPSNNPadGradientNode;
struct MPSNNReduceColumnMax;
struct MPSNNReduceColumnMin;
struct MPSNNReduceColumnSum;
struct MPSNNReshapeGradient;
struct MPSNNSubtractionNode;
struct MPSStateResourceList;
struct MSStickerBrowserView;
struct MTLCaptureDescriptor;
struct MTLSamplerDescriptor;
struct MTLSharedEventHandle;
struct MTLStencilDescriptor;
struct MTLTextureDescriptor;
struct MXBackgroundExitData;
struct MXForegroundExitData;
struct MortLigatureSubtable;
union MortSpecificSubtable;
struct MorxLigatureSubtable;
union MorxSpecificSubtable;
struct NEDNSOverTLSSettings;
struct NEDNSSettingsManager;
struct NEFilterDataProvider;
struct NEHotspotEAPSettings;
struct NEOnDemandRuleIgnore;
struct NFCNDEFReaderSession;
struct NLLanguageRecognizer;
struct NLModelConfiguration;
struct NSBatchDeleteRequest;
struct NSBatchInsertRequest;
struct NSBatchUpdateRequest;
struct NSByteCountFormatter;
struct NSConstraintConflict;
struct NSFileProviderDomain;
struct NSHTTPCookieInternal;
struct NSHashTableCallBacks;
struct NSManagedObjectModel;
struct NSNotificationCenter;
struct NSSaveChangesRequest;
struct NSTextCheckingResult;
struct NSURLProtectionSpace;
struct NSURLRequestInternal;
struct NSURLSessionDataTask;
struct NSUnitElectricCharge;
struct NSUnitFuelEfficiency;
struct OpaqueAudioComponent;
struct OpaqueAudioConverter;
struct OpaqueJSContextGroup;
struct PDFAccessibilityNode;
struct PDFBorderPrivateVars;
struct PHAssetChangeRequest;
struct PKPaymentSummaryItem;
struct QLThumbnailGenerator;
struct SCNPhysicsHingeJoint;
struct SCPreferencesContext;
struct SKPaymentTransaction;
struct SKPhysicsJointSpring;
struct SRAmbientLightSample;
struct SecKeychainAttribute;
struct TKSmartCardPINFormat;
struct TKTokenAuthOperation;
struct TKTokenConfiguration;
struct TKTokenKeychainState;
struct UIAttachmentBehavior;
struct UIBarButtonItemGroup;
struct UICellAccessoryLabel;
struct UICollectionViewCell;
struct UIFocusUpdateContext;
struct UIImageConfiguration;
struct UIPageViewController;
struct UIPasteConfiguration;
struct UIPointerHoverEffect;
struct UIPointerInteraction;
struct UIPreviewActionGroup;
struct UIPreviewInteraction;
struct UISceneConfiguration;
struct UITableViewRowAction;
struct UIViewPrintFormatter;
struct UNNotificationAction;
struct VNBarcodeObservation;
struct VNDocumentCameraScan;
struct VNFaceLandmarkRegion;
struct VNHorizonObservation;
struct VNTrackObjectRequest;
struct WKNavigationResponse;
struct WKPreviewElementInfo;
struct WKWebpagePreferences;
struct _CAMetalLayerPrivate;
struct __CFAttributedString;
struct __CFUserNotification;
struct __CLPK_doublecomplex;
struct __Reply__host_info_t;
struct __Reply__task_info_t;
struct __Reply__task_wire_t;
struct __Reply__vm_map_64_t;
struct __Reply__vm_region_t;
struct __Request__vm_copy_t;
struct __Request__vm_read_t;
struct __Request__vm_wire_t;
struct __SCNetworkInterface;
struct __darwin_sigaltstack;
struct __objc_property_list;
struct __objc_symtab_struct;
struct _xmlRelaxNGValidCtxt;
struct _xmlSchemaParserCtxt;
struct _xmlSchemaWildcardNs;
struct dns_address_record_t;
struct dyld_all_image_infos;
struct gss_krb5_cfx_keydata;
struct ipc_info_space_basic;
struct mach_core_fileheader;
struct mach_msg_empty_rcv_t;
struct mach_task_basic_info;
struct opaqueCMSampleBuffer;
struct processor_basic_info;
struct processor_cpu_stat64;
union res_9_sockaddr_union;
struct sfntDescriptorHeader;
union simd_packed_ushort16;
union simd_packed_ushort32;
struct sqlite3_api_routines;
struct std____1____time_get;
struct std____1____time_put;
struct std____1__ctype_base;
struct std____1__error_code;
struct std____1__hash_bool_;
struct std____1__hash_char_;
struct std____1__hash_long_;
struct std____1__less_void_;
struct std____1__locale__id;
struct std____1__money_base;
struct std____1__plus_void_;
struct std__bad_typeid_vtbl;
struct std__underflow_error;
struct sub_umbrella_command;
struct task_basic_info_64_2;
struct task_category_policy;
struct task_wait_state_info;
struct thread_extended_info;
struct vDSP_DFT_SetupStruct;
struct vImage_CGImageFormat;
struct vm_extmod_statistics;
struct vm_region_basic_info;
struct AAEntryACLBlob_impl;
struct AAEntryXATBlob_impl;
struct ACAccountCredential;
struct AEAssessmentSession;
struct APActivationPayload;
struct ARCollaborationData;
struct ARGeoTrackingStatus;
struct ARParticipantAnchor;
struct ASIdentifierManager;
struct AUAudioUnitBusArray;
struct AUAudioUnitV2Bridge;
struct AURenderEventHeader;
struct AVAssetDownloadTask;
struct AVAssetReaderOutput;
struct AVAssetTrackSegment;
struct AVCaptureConnection;
struct AVCaptureFileOutput;
struct AVContentKeyRequest;
struct AVContentKeySession;
struct AVDepthDataInternal;
struct AVMutableMovieTrack;
struct AVSpeechSynthesizer;
struct AVSynchronizedLayer;
struct AudioCodecPrimeInfo;
struct AudioFileMarkerList;
struct AudioFileRegionList;
struct AudioFormatListItem;
struct AudioUnitConnection;
struct BNNSArithmeticUnary;
struct CAFAudioDescription;
struct CAKeyframeAnimation;
struct CAPropertyAnimation;
struct CBMutableDescriptor;
struct CBPeripheralManager;
struct CFHostClientContext;
struct CGFunctionCallbacks;
struct CIBarcodeDescriptor;
struct CIRenderDestination;
struct CKDatabaseOperation;
struct CKQueryNotification;
struct CKQuerySubscription;
struct CKServerChangeToken;
struct CLKDateTextProvider;
struct CLKTimeTextProvider;
struct CLKWatchFaceLibrary;
struct CLPlacemarkInternal;
struct CMAccelerometerData;
struct CPContactCallButton;
struct CPNavigationSession;
struct CPVoiceControlState;
struct CXSetHeldCallAction;
struct EAAccessoryInternal;
struct ExtendedNoteOnEvent;
struct GCControllerElement;
struct GKBillowNoiseSource;
struct GKCompositeBehavior;
struct GKPerlinNoiseSource;
struct GKRidgedNoiseSource;
struct GKTurnBasedExchange;
struct HKCDADocumentSample;
struct HKElectrocardiogram;
struct HKWorkoutRouteQuery;
struct HMAccessoryCategory;
struct HMHomeAccessControl;
struct INDeleteTasksIntent;
struct INFlightReservation;
struct INRelevanceProvider;
struct INRequestRideIntent;
struct INReservationAction;
struct INSendMessageIntent;
struct INSendPaymentIntent;
struct INSnoozeTasksIntent;
struct JustWidthDeltaEntry;
struct JustWidthDeltaGroup;
struct LcarCaretClassEntry;
struct MDLMaterialProperty;
struct MDLNormalMapTexture;
struct MDLPhotometricLight;
struct MDLTransformScaleOp;
struct MDLVertexDescriptor;
struct MDLVoxelIndexExtent;
struct MIDIDriverInterface;
struct MKClusterAnnotation;
struct MKDirectionsRequest;
struct MKDistanceFormatter;
struct MKMapCameraBoundary;
struct MKPinAnnotationView;
struct MLCConvolutionLayer;
struct MLCMatMulDescriptor;
struct MLCRMSPropOptimizer;
struct MLCTensorDescriptor;
struct MLNumericConstraint;
struct MLPredictionOptions;
struct MPMediaQuerySection;
struct MPNowPlayingSession;
struct MPSCNNNeuronELUNode;
struct MPSCNNNeuronSigmoid;
struct MPSCNNPoolingL2Norm;
struct MPSCustomKernelInfo;
struct MPSImageConvolution;
struct MPSImageReduceUnary;
struct MPSMatrixDescriptor;
struct MPSMatrixLogSoftMax;
struct MPSNNComparisonNode;
struct MPSNNDefaultPadding;
struct MPSNNResizeBilinear;
struct MPSStateTextureInfo;
struct MPSTemporaryNDArray;
struct MPSUnaryImageKernel;
struct MPSVectorDescriptor;
struct MSMessageLiveLayout;
struct MTLFunctionConstant;
struct MTLVertexDescriptor;
struct MXDiagnosticPayload;
struct MixerDistanceParams;
struct NEFilterBrowserFlow;
struct NEFilterDataVerdict;
struct NFCTagReaderSession;
struct NFCVASReaderSession;
struct NSBatchDeleteResult;
struct NSBatchInsertResult;
struct NSBatchUpdateResult;
struct NSCachedURLResponse;
struct NSCompoundPredicate;
struct NSEntityDescription;
struct NSHTTPCookieStorage;
struct NSJSONSerialization;
struct NSLayoutXAxisAnchor;
struct NSLayoutYAxisAnchor;
struct NSMutableDictionary;
struct NSMutableOrderedSet;
struct NSMutableURLRequest;
struct NSNetServiceBrowser;
struct NSNotificationQueue;
struct NSPredicateOperator;
struct NSRegularExpression;
struct OpaqueCMBlockBuffer;
struct OpaqueMusicSequence;
struct PDFActionRemoteGoTo;
struct PDFSelectionPrivate;
struct PHObjectPlaceholder;
struct PKSecureElementPass;
struct ProcessSerialNumber;
struct QLPreviewController;
struct QLThumbnailProvider;
struct SCNCameraController;
struct SCNLookAtConstraint;
struct SCNMaterialProperty;
struct SCNSliderConstraint;
struct SKPhysicsJointFixed;
struct SKPhysicsJointLimit;
struct SNAudioFileAnalyzer;
struct SRDeviceUsageReport;
struct SRNotificationUsage;
struct STWebpageController;
struct ScheduledAudioSlice;
struct SparseMatrix_Double;
struct TKTokenKeyAlgorithm;
struct TKTokenKeychainItem;
struct UICollisionBehavior;
struct UIDragPreviewTarget;
struct UIFeedbackGenerator;
struct UIFocusMovementHint;
struct UIGestureRecognizer;
struct UILocalNotification;
struct UIMotionEffectGroup;
struct UIPencilInteraction;
struct UIPointerLiftEffect;
struct UIPopoverController;
struct UIPreviewParameters;
struct UIPrintPageRenderer;
struct UIScreenshotService;
struct UITextSelectionRect;
struct UITextSelectionView;
struct UIToolbarAppearance;
struct UNNotificationSound;
struct VNImageBasedRequest;
struct WKFindConfiguration;
struct WKWebsiteDataRecord;
struct _CAEAGLNativeWindow;
struct _EAGLContextPrivate;
struct __CFNumberFormatter;
struct __CFRunLoopObserver;
struct __CFStringTokenizer;
struct __CVPixelBufferPool;
struct __NSObjectFileImage;
struct __Reply__lock_try_t;
struct __Reply__vm_msync_t;
struct __Reply__vm_remap_t;
struct __Reply__vm_write_t;
struct __Request__vm_map_t;
struct __SCNetworkProtocol;
struct __SecKeychainSearch;
struct __darwin_mcontext32;
struct __darwin_mcontext64;
struct __darwin_ucontext64;
struct _xmlSchemaAttribute;
struct _xmlSchemaFacetLink;
struct _xmlSchemaValidCtxt;
union at_block_features_t;
struct dyld_aot_image_info;
struct dyld_chained_import;
struct entry_point_command;
struct gss_OID_desc_struct;
struct ip6_hdr__ip6_hdrctl;
struct ipsec_wake_pkt_info;
struct mach_vm_info_region;
struct mach_zone_info_data;
struct malloc_statistics_t;
struct nd_neighbor_solicit;
struct opaqueCMBufferQueue;
struct opaqueCMSimpleQueue;
struct persona_modify_info;
struct routines_command_64;
struct sadb_x_ipsecrequest;
struct sfntVariationHeader;
union simd_packed_double2;
union simd_packed_double4;
union simd_packed_double8;
union simd_packed_float16;
union simd_packed_short16;
union simd_packed_short32;
union simd_packed_uchar16;
union simd_packed_uchar32;
union simd_packed_uchar64;
union simd_packed_ushort2;
union simd_packed_ushort4;
union simd_packed_ushort8;
struct sqlite3_mem_methods;
struct sqlite3_pcache_page;
struct sqlite3_vtab_cursor;
struct std____1__hash_int_;
struct std____1__once_flag;
struct std____1__time_base;
struct std__bad_alloc_vtbl;
struct std__exception_vtbl;
struct std__overflow_error;
struct std__type_info_vtbl;
struct sub_library_command;
struct task_zone_info_data;
struct tcp_connection_info;
struct vImageCVImageFormat;
struct vImage_ARGBToYpCbCr;
struct vImage_YpCbCrToARGB;
struct version_min_command;
struct vol_attributes_attr;
struct AAFieldKeySet_impl;
struct ARSCNPlaneGeometry;
struct AVAssetWriterInput;
struct AVAudioMixInternal;
struct AVAudioUnitSampler;
struct AVCaptureInputPort;
struct AVCompositionTrack;
struct AVMediaDataStorage;
struct AVPixelAspectRatio;
struct AVPlayerItemOutput;
struct AVURLAssetInternal;
struct AVVideoComposition;
struct AudioChannelLayout;
struct AudioUnitParameter;
struct Block_callbacks_RR;
struct Block_descriptor_1;
struct Block_descriptor_2;
struct Block_descriptor_3;
struct CAFInstrumentChunk;
struct CATextLayerPrivate;
struct CFAllocatorContext;
struct CGImageDestination;
struct CGImageMetadataTag;
struct CGPDFContentStream;
struct CGPDFOperatorTable;
struct CGPatternCallbacks;
struct CIImageAccumulator;
struct CIQRCodeDescriptor;
struct CIRectangleFeature;
struct CKNotificationInfo;
struct CKShareParticipant;
struct CLGeocoderInternal;
struct CMMagnetometerData;
struct CMSampleTimingInfo;
struct CNContactFormatter;
struct CPListImageRowItem;
struct CPNowPlayingButton;
struct CXAnswerCallAction;
struct DCAppAttestService;
struct DenseMatrix_Double;
struct DenseVector_Double;
struct EAAccessoryManager;
struct ExtendedTempoEvent;
struct GCDualShockGamepad;
struct GKARC4RandomSource;
struct GKLeaderboardEntry;
struct GKLeaderboardScore;
struct GKMinmaxStrategist;
struct GKSCNNodeComponent;
struct GKVoiceChatService;
struct HKActivityRingView;
struct HKCorrelationQuery;
struct HMAccessoryBrowser;
struct HMAccessoryProfile;
struct INCallRecordFilter;
struct INCancelRideIntent;
struct INCreateNoteIntent;
struct INEndWorkoutIntent;
struct INImageNoteContent;
struct INMediaDestination;
struct INMediaUserContext;
struct INObjectCollection;
struct INRelevantShortcut;
struct INRideFareLineItem;
struct INTrainReservation;
struct JustDirectionTable;
struct KernSubtableHeader;
struct KernVersion0Header;
struct KerxSubtableHeader;
struct LPMetadataProvider;
struct MDLAnimatedVector2;
struct MDLAnimatedVector3;
struct MDLAnimatedVector4;
struct MDLObjectContainer;
struct MDLSubmeshTopology;
struct MDLVertexAttribute;
struct MIDICIProfileState;
struct MIDIChannelMessage;
struct MIDINetworkSession;
struct MKCoordinateRegion;
struct MKGeodesicPolyline;
struct MKPolylineRenderer;
struct MKUserLocationView;
struct MLCActivationLayer;
struct MLCArithmeticLayer;
struct MLCDeviceOptimizer;
struct MLCGramMatrixLayer;
struct MLCTensorParameter;
struct MLModelDescription;
struct MPMediaItemArtwork;
struct MPSCNNBinaryKernel;
struct MPSCNNNeuronLinear;
struct MPSCNNYOLOLossNode;
struct MPSGraphShapedType;
struct MPSGraphTensorData;
struct MPSGraphVariableOp;
struct MPSImageArithmetic;
struct MPSImageConversion;
struct MPSImageCoordinate;
struct MPSImageDescriptor;
struct MPSKeyedUnarchiver;
struct MPSNNGradientState;
struct MPSNNOptimizerAdam;
struct MPSNNReduceRowMean;
struct MPSTemporaryMatrix;
struct MPSTemporaryVector;
struct MPSeekCommandEvent;
struct MTLLinkedFunctions;
struct MTLVertexAttribute;
struct MXAppRunTimeMetric;
struct MusicEventUserData;
struct MusicTrackLoopInfo;
struct NCWidgetController;
struct NEAppProxyProvider;
struct NEDNSProxyProvider;
struct NEFilterSocketFlow;
struct NEPacketTunnelFlow;
struct NEVPNProtocolIKEv2;
struct NEVPNProtocolIPSec;
struct NSAssertionHandler;
struct NSAttributedString;
struct NSExtensionContext;
struct NSFileAccessIntent;
struct NSIncrementalStore;
struct NSLayoutConstraint;
struct NSLinguisticTagger;
struct NSMigrationContext;
struct NSMigrationManager;
struct NSPointerFunctions;
struct NSTextAlternatives;
struct NSURLCacheInternal;
struct NSUnitAcceleration;
struct NSValueTransformer;
struct OSLogEntryActivity;
struct OSLogEntryBoundary;
struct OSLogEntrySignpost;
struct OpaqueCMMemoryPool;
struct OpaqueExtAudioFile;
struct PDFActionResetForm;
struct PDFAnnotationPopup;
struct PDFDocumentPrivate;
struct RPBroadcastHandler;
struct SCNAnimationPlayer;
struct SCNGeometryElement;
struct SCNPhysicsBehavior;
struct SFSpeechRecognizer;
struct SKKeyframeSequence;
struct SKProductsResponse;
struct SKReachConstraints;
struct SKWarpGeometryGrid;
struct SRApplicationUsage;
struct SRPhoneUsageReport;
struct SparseAttributes_t;
struct SparseGMRESOptions;
struct SparseMatrix_Float;
struct TKCompactTLVRecord;
struct TKTokenKeychainKey;
struct UICommandAlternate;
struct UIContextualAction;
struct UIDynamicItemGroup;
struct UIGraphicsRenderer;
struct UIPointerLockState;
struct UISearchController;
struct UISegmentedControl;
struct UIStatusBarManager;
struct UITabBarAppearance;
struct UITabBarController;
struct UITextDropProposal;
struct UIVisualEffectView;
struct URegularExpression;
struct WKNavigationAction;
struct WKPDFConfiguration;
struct WKWebsiteDataStore;
struct _MTLPackedFloat4x3;
struct __CFFileDescriptor;
struct __CFPlugInInstance;
struct __CTFontCollection;
struct __CTFontDescriptor;
struct __CTParagraphStyle;
struct __CTRubyAnnotation;
struct __Reply__vm_copy_t;
struct __Reply__vm_read_t;
struct __Reply__vm_wire_t;
struct __SCNetworkService;
struct __SecAccessControl;
struct __arm_pagein_state;
struct __objc_method_desc;
struct __objc_method_list;
struct __rpc_xdr__xdr_ops;
struct _res_9_ns_flagdata;
struct _xmlElementContent;
struct _xmlParserNodeInfo;
struct _xmlSchemaNotation;
struct _xmlSchemaTypeLink;
struct _xmlSchemaWildcard;
struct accessx_descriptor;
struct axr_channel_info_t;
struct axr_decoder_info_t;
struct build_tool_version;
struct cache_attributes_s;
struct compression_stream;
struct data_in_code_entry;
struct dns_AFSDB_record_t;
struct dns_HINFO_record_t;
struct dns_MINFO_record_t;
struct fbootstraptransfer;
struct gss_krb5_lucid_key;
struct host_cpu_load_info;
struct host_priority_info;
struct icmp6_router_renum;
struct ipc_info_tree_name;
struct mach_msg_trailer_t;
struct mach_port_info_ext;
struct mach_timebase_info;
struct mach_vm_read_entry;
struct nd_neighbor_advert;
struct nd_opt_prefix_info;
struct objc_classheader_t;
struct processor_cpu_stat;
struct pthread_override_s;
struct routine_descriptor;
struct segment_command_64;
struct sfntDirectoryEntry;
struct sfntFontDescriptor;
struct sfntFontRunFeature;
union simd_packed_char16;
union simd_packed_char32;
union simd_packed_char64;
union simd_packed_float2;
union simd_packed_float4;
union simd_packed_float8;
union simd_packed_short2;
union simd_packed_short4;
union simd_packed_short8;
union simd_packed_uchar2;
union simd_packed_uchar4;
union simd_packed_uchar8;
union simd_packed_uint16;
union simd_packed_ulong2;
union simd_packed_ulong4;
union simd_packed_ulong8;
struct sqlite3_index_info;
struct sqlite3_io_methods;
struct std____1____and___;
struct std____1____sp_mut;
struct std____1__ios_base;
struct std__bad_cast_vtbl;
struct std__bad_exception;
struct std__exception_ptr;
struct std__runtime_error;
struct sub_client_command;
struct task_basic_info_32;
struct task_basic_info_64;
struct task_power_info_v2;
struct vImageRGBPrimaries;
struct vm_page_info_basic;
struct vm_region_top_info;
struct AAByteStream_impl;
struct AAEntryAttributes;
struct ALCcontext_struct;
struct ARGeometryElement;
struct ARReferenceObject;
struct ARSCNFaceGeometry;
struct ATTrackingManager;
struct AUAudioUnitPreset;
struct AUNodeInteraction;
struct AVAssetTrackGroup;
struct AVAudioOutputNode;
struct AVAudioPlayerNode;
struct AVAudioSourceNode;
struct AVAudioUnitEffect;
struct AVAudioUnitReverb;
struct AVDisplayCriteria;
struct AVFragmentedAsset;
struct AVFragmentedMovie;
struct AVMutableAudioMix;
struct AVPlayerItemTrack;
struct AVRoutePickerView;
struct AVSpeechUtterance;
struct AudioUnitProperty;
struct CAFOverviewSample;
struct CAReplicatorLayer;
struct CASpringAnimation;
struct CC_SHA256state_st;
struct CC_SHA512state_st;
struct CFMachPortContext;
struct CFSocketSignature;
struct CGAffineTransform;
struct CIFilterGenerator;
struct CLLocationManager;
struct CMBufferCallbacks;
struct CMVideoDimensions;
struct CNContactProperty;
struct CNContactRelation;
struct CPContactTemplate;
struct CPDashboardButton;
struct CPInformationItem;
struct CPMessageListItem;
struct CPNavigationAlert;
struct CPPointOfInterest;
struct CPTravelEstimates;
struct CSLocalizedString;
struct CSSearchableIndex;
struct CXStartCallAction;
struct DenseMatrix_Float;
struct DenseVector_Float;
struct EKCalendarChooser;
struct GCExtendedGamepad;
struct GCGamepadSnapshot;
struct GKComponentSystem;
struct GKNSPredicateRule;
struct GKPolygonObstacle;
struct GKSKNodeComponent;
struct GLKEffectProperty;
struct GLKViewController;
struct HKActivitySummary;
struct HKAudiogramSample;
struct HKBloodTypeObject;
struct HKCorrelationType;
struct HKStatisticsQuery;
struct ICScannerBandData;
struct INBoatReservation;
struct INPlayMediaIntent;
struct INRestaurantGuest;
struct INRestaurantOffer;
struct INSpeakableString;
struct INStartCallIntent;
struct INTextNoteContent;
struct JSClassDefinition;
struct JustPostcompTable;
struct MDLAnimatedScalar;
struct MDLMatrix4x4Array;
struct MDLMeshBufferData;
struct MDLSkyCubeTexture;
struct MDLTextureSampler;
struct MDLTransformStack;
struct MKOverlayPathView;
struct MKOverlayRenderer;
struct MKPointAnnotation;
struct MKPolygonRenderer;
struct MKReverseGeocoder;
struct MKTileOverlayPath;
struct MLCEmbeddingLayer;
struct MLCInferenceGraph;
struct MLCLSTMDescriptor;
struct MLCLossDescriptor;
struct MLCReductionLayer;
struct MLCTransposeLayer;
struct MLImageConstraint;
struct MLModelCollection;
struct MPFeedbackCommand;
struct MPSCNNAddGradient;
struct MPSCNNConvolution;
struct MPSCNNDropoutNode;
struct MPSCNNNeuronPReLU;
struct MPSCNNNeuronPower;
struct MPSCNNNeuronReLUN;
struct MPSCNNPoolingNode;
struct MPSCNNSoftMaxNode;
struct MPSDimensionSlice;
struct MPSGraphOperation;
struct MPSImageHistogram;
struct MPSImageLaplacian;
struct MPSImageTranspose;
struct MPSLSTMDescriptor;
struct MPSMatrixFindTopK;
struct MPSNDArrayOffsets;
struct MPSNNAdditionNode;
struct MPSNNDivisionNode;
struct MPSNNLossGradient;
struct MPSNNReduceBinary;
struct MPSNNReduceRowMax;
struct MPSNNReduceRowMin;
struct MPSNNReduceRowSum;
struct MPSRayIntersector;
struct MPSScaleTransform;
struct MPSTemporaryImage;
struct MTLCaptureManager;
struct MTLCompileOptions;
struct MTLHeapDescriptor;
struct MTLSamplePosition;
struct MXAnimationMetric;
struct MXAppLaunchMetric;
struct MXCrashDiagnostic;
struct MXHistogramBucket;
struct MortSwashSubtable;
struct NEAppProxyTCPFlow;
struct NEAppProxyUDPFlow;
struct NEAppPushProvider;
struct NEDNSProxyManager;
struct NEFilterPacketSet;
struct NSAutoreleasePool;
struct NSEnergyFormatter;
struct NSFileCoordinator;
struct NSHTTPURLResponse;
struct NSKeyedUnarchiver;
struct NSLayoutDimension;
struct NSLengthFormatter;
struct NSManagedObjectID;
struct NSMethodSignature;
struct NSMutableIndexSet;
struct NSNumberFormatter;
struct NSPersistentStore;
struct NSPropertyMapping;
struct NSUnitIlluminance;
struct NSUnitTemperature;
union NumVersionVariant;
struct OpaqueAudioFileID;
struct OpaqueMusicPlayer;
struct OpaqueVTFrameSilo;
struct PDFOutlinePrivate;
struct PHAssetCollection;
struct PHCloudIdentifier;
struct PKPushCredentials;
struct PropLookupSegment;
struct SCNAnimationEvent;
struct SCNGeometrySource;
struct SCNParticleSystem;
struct SCNPhysicsContact;
struct SCNPhysicsVehicle;
struct SCNTimingFunction;
struct SFAcousticFeature;
struct SFNTLookupSegment;
struct SKPaymentDiscount;
struct SKPhysicsJointPin;
struct SKProductDiscount;
struct SKProductsRequest;
struct SRKeyboardMetrics;
struct SparseLSMROptions;
struct TKSimpleTLVRecord;
struct UIAlertController;
struct UIDictationPhrase;
struct UIDragInteraction;
struct UIDropInteraction;
struct UIDynamicAnimator;
struct UIDynamicBehavior;
struct UIGravityBehavior;
struct UIListContentView;
struct UIManagedDocument;
struct UISearchTextField;
struct UIStoryboardSegue;
struct UITargetedPreview;
struct UITextInputTraits;
struct UITextInteraction;
struct UITextPlaceholder;
struct UITraitCollection;
struct UIWebViewInternal;
struct VNFaceLandmarks2D;
struct VNFaceObservation;
struct VNRecognizedPoint;
struct VNStatefulRequest;
struct VNTextObservation;
struct VNTrackingRequest;
struct VSAccountMetadata;
struct WKBackForwardList;
struct WKContentRuleList;
struct WKHTTPCookieStore;
struct XML_Expat_Version;
struct XML_ParsingStatus;
struct _Unwind_Exception;
struct __CFDateFormatter;
struct __CFNetDiagnostic;
struct __CFRunLoopSource;
struct __CFURLEnumerator;
struct __Reply__vm_map_t;
struct __SecKeychainItem;
struct __darwin_ucontext;
struct __objc2_class_rw1;
struct __objc2_ivar_list;
struct __objc2_meth_list;
struct __objc2_prop_list;
struct __objc2_prot_list;
struct __res_9_state_ext;
struct _inpcb_list_entry;
struct _opaque_pthread_t;
struct _removefile_state;
struct _xmlAutomataState;
struct _xmlSchemaElement;
struct _xmlSchemaSAXPlug;
struct _xmlXPathCompExpr;
struct _xmlXPathVariable;
struct at_block_buffer_t;
struct at_texel_region_t;
struct dns_ISDN_record_t;
struct dyld_info_command;
struct gss_auth_identity;
struct kauth_cache_sizes;
struct kev_dl_proto_data;
struct kinfo_proc__eproc;
struct mach_core_details;
struct mach_msg_header_t;
struct mach_port_options;
struct mig_reply_error_t;
struct nd_opt_route_info;
struct nd_router_solicit;
struct objc_stringhash_t;
struct policy_fifo_limit;
struct proc_persona_info;
struct res_9_ns_tsig_key;
struct sfntCMapSubHeader;
struct sfntFeatureHeader;
struct sfntVariationAxis;
union simd_packed_char2;
union simd_packed_char4;
union simd_packed_char8;
union simd_packed_int16;
union simd_packed_long2;
union simd_packed_long4;
union simd_packed_long8;
union simd_packed_uint2;
union simd_packed_uint4;
union simd_packed_uint8;
struct std____1____or___;
struct std____1__tuple__;
struct std__domain_error;
struct std__length_error;
struct std__out_of_range;
struct thread_basic_info;
struct vm_info_region_64;
struct vm_purgeable_info;
struct vm_purgeable_stat;
struct ADInterstitialAd;
struct ALCdevice_struct;
struct ARGeometrySource;
struct ARMatteGenerator;
struct ARReferenceImage;
struct ARTrackedRaycast;
struct AUParameterEvent;
struct AUParameterGroup;
struct AUViewController;
struct AVAudioConverter;
struct AVAudioInputNode;
struct AVAudioMixerNode;
struct AVAudioPCMBuffer;
struct AVAudioSequencer;
struct AVAudioUnitDelay;
struct AVCaptureSession;
struct AVFrameRateRange;
struct AVMediaSelection;
struct AVMetadataObject;
struct AVPlayerInternal;
struct AnchorPointTable;
struct AudioBalanceFade;
struct AudioPanningInfo;
struct AudioQueueBuffer;
struct BGAppRefreshTask;
struct BGProcessingTask;
struct CAAnimationGroup;
struct CABasicAnimation;
struct CAFOverviewChunk;
struct CATransformLayer;
struct CBCentralManager;
struct CBCharacteristic;
struct CBMutableService;
struct CFArrayCallBacks;
struct CFGregorianUnits;
struct CFSwappedFloat32;
struct CFSwappedFloat64;
struct CKNotificationID;
struct CKOperationGroup;
struct CKQueryOperation;
struct CLBeaconInternal;
struct CLCircularRegion;
struct CLIENT__clnt_ops;
struct CLKGaugeProvider;
struct CLKImageProvider;
struct CLRegionInternal;
struct CMBufferHandlers;
struct CMMotionActivity;
struct CMPedometerEvent;
struct CMRotationMatrix;
struct CMSensorDataList;
struct CMSensorRecorder;
struct CNMutableContact;
struct CPSearchTemplate;
struct CPTabBarTemplate;
struct CSSearchableItem;
struct CTSubscriberInfo;
struct CXCallController;
struct DSPDoubleComplex;
struct EKRecurrenceRule;
struct ENExposureWindow;
struct Fts5ExtensionApi;
struct GKCircleObstacle;
struct GKLeaderboardSet;
struct GKPlayerInternal;
struct GKScoreChallenge;
struct GKSphereObstacle;
struct GKTurnBasedMatch;
struct GLKTextureLoader;
struct HKCategorySample;
struct HKClinicalRecord;
struct HKDocumentSample;
struct HKQuantitySample;
struct HKSourceRevision;
struct HKWorkoutBuilder;
struct HKWorkoutSession;
struct HMCameraSnapshot;
struct HMCharacteristic;
struct HostCallbackInfo;
struct ICScannerFeature;
struct INAddMediaIntent;
struct INAddTasksIntent;
struct INBusReservation;
struct INCurrencyAmount;
struct INIntentResponse;
struct INListCarsIntent;
struct INParameterImage;
struct INPaymentAccount;
struct INRecurrenceRule;
struct JSStaticFunction;
struct JSVirtualMachine;
struct MDLAnimatedValue;
struct MDLMeshBufferMap;
struct MDLTextureFilter;
struct MIDICIDeviceInfo;
struct MIDINotification;
struct MKAnnotationView;
struct MKCircleRenderer;
struct MKCoordinateSpan;
struct MKGeoJSONDecoder;
struct MKGeoJSONFeature;
struct MKMapSnapshotter;
struct MLCAdamOptimizer;
struct MLCTrainingGraph;
struct MLCUpsampleLayer;
struct MLCYOLOLossLayer;
struct MPMediaPredicate;
struct MPMovieAccessLog;
struct MPSCNNArithmetic;
struct MPSCNNLogSoftMax;
struct MPSCNNLossLabels;
struct MPSCNNNeuronNode;
struct MPSCNNNeuronReLU;
struct MPSCNNNeuronTanH;
struct MPSCNNPoolingMax;
struct MPSCNNUpsampling;
struct MPSCommandBuffer;
struct MPSGRUDescriptor;
struct MPSImageIntegral;
struct MPSImageMultiply;
struct MPSImageSubtract;
struct MPSMatrixSoftMax;
struct MPSMatrixSolveLU;
struct MPSNDArrayGather;
struct MPSNNForwardLoss;
struct MPSNNPadGradient;
struct MPSNNReduceUnary;
struct MPSNNReshapeNode;
struct MPSPolygonBuffer;
struct MPSRNNDescriptor;
struct MSServiceAccount;
struct MTKTextureLoader;
struct MXHangDiagnostic;
struct MXSignpostMetric;
struct MXUnitSignalBars;
struct MortFeatureEntry;
struct NEAppPushManager;
struct NEFilterProvider;
struct NEFilterSettings;
struct NEHotspotNetwork;
struct NETunnelProvider;
struct NFCReaderSession;
struct NIDiscoveryToken;
struct NSBlockOperation;
struct NSConstantString;
struct NSDateComponents;
struct NSHashEnumerator;
struct NSOperationQueue;
struct NSParagraphStyle;
struct NSSortDescriptor;
struct NSTextAttachment;
struct NSURLSessionTask;
struct NSUnitDispersion;
struct OpaqueAudioQueue;
struct OpaqueCMTimebase;
struct OpaqueMusicTrack;
struct PDFActionPrivate;
struct PDFThumbnailView;
struct PHAdjustmentData;
struct PHCollectionList;
struct PKPaymentRequest;
struct PKShippingMethod;
struct PropLookupSingle;
struct QLThumbnailReply;
struct RPScreenRecorder;
struct SCNHitTestResult;
struct SCNLevelOfDetail;
struct SCNReferenceNode;
struct SFNTLookupSingle;
struct SFVoiceAnalytics;
struct SKAttributeValue;
struct SKMutablePayment;
struct SKMutableTexture;
struct SKPhysicsContact;
struct SKTileDefinition;
struct SNClassification;
struct SRDeletionRecord;
struct SRWristDetection;
struct TKSmartCardToken;
struct UICollectionView;
struct UIFontDescriptor;
struct UIMenuController;
struct UINavigationItem;
struct UIOpenURLContext;
struct UIPrintFormatter;
struct UIRefreshControl;
struct UIVibrancyEffect;
struct UIViewController;
struct VNRecognizedText;
struct VNVideoProcessor;
struct VSAccountManager;
struct WKSecurityOrigin;
struct WKWindowFeatures;
struct XML_ParserStruct;
struct _DNSServiceRef_t;
struct _MPSPackedFloat3;
struct _MTLPackedFloat3;
struct __CFCharacterSet;
struct __CFFileSecurity;
struct __CFRunLoopTimer;
struct __SCDynamicStore;
struct __SecCertificate;
struct __objc2_category;
struct __objc2_class_ro;
struct __objc2_class_rw;
struct __objc_class_ext;
struct _expressionFlags;
struct _printf_compiled;
struct _xmlChRangeGroup;
struct _xmlOutputBuffer;
struct _xmlSAXHandlerV1;
struct _xmlXIncludeCtxt;
struct _xmlXPathContext;
struct axr_layer_info_t;
struct axr_pixel_data_t;
struct dispatch_queue_s;
struct dns_LOC_record_t;
struct dns_SOA_record_t;
struct dns_SRV_record_t;
struct dns_TXT_record_t;
struct dns_WKS_record_t;
struct dns_X25_record_t;
struct dylinker_command;
struct dysymtab_command;
struct group_source_req;
struct hash_info_bucket;
struct icmp6_namelookup;
struct krb5_ccache_data;
struct mach_memory_info;
union mach_msg_empty_t;
struct mach_port_limits;
struct mach_port_status;
struct nd_router_advert;
struct objc_headeropt_t;
struct objc_method_list;
struct os_unfair_lock_s;
struct policy_fifo_base;
struct policy_fifo_info;
struct routines_command;
struct sadb_x_kmprivate;
struct security_token_t;
struct sfntCMapEncoding;
union simd_packed_int2;
union simd_packed_int4;
union simd_packed_int8;
struct so_np_extensions;
struct sockaddr_storage;
struct std____1___PairT;
struct std____1__locale;
struct std__logic_error;
struct std__range_error;
struct task_events_info;
struct task_extmod_info;
struct vImageWhitePoint;
struct AAPathList_impl;
struct ALAssetsLibrary;
struct ARConfiguration;
struct ARHitTestResult;
struct ARLightEstimate;
struct ARPlaneGeometry;
struct ARRaycastResult;
struct ASAuthorization;
struct AUParameterNode;
struct AUParameterTree;
struct AVAssetInternal;
struct AVAudioRecorder;
struct AVAudioSinkNode;
struct AVCaptureDevice;
struct AVCaptureOutput;
struct AVMetadataGroup;
struct AVMovieInternal;
struct AVRouteDetector;
struct AVTextStyleRule;
struct AXCustomContent;
struct AudioBufferList;
struct AudioFileMarker;
struct AudioFileRegion;
struct AudioFormatInfo;
struct AudioValueRange;
struct BGTaskScheduler;
struct BigEndianOSType;
struct BslnFormat0Part;
struct BslnFormat1Part;
struct BslnFormat2Part;
struct BslnFormat3Part;
union BslnFormatUnion;
struct CAFPositionPeak;
struct CAGradientLayer;
struct CAValueFunction;
struct CC_SHA1state_st;
struct CFGregorianDate;
struct CFSocketContext;
struct CGImageMetadata;
struct CGPDFDictionary;
struct CHHapticPattern;
struct CIQRCodeFeature;
struct CKShareMetadata;
struct CLKComplication;
struct CLKTextProvider;
struct CLSActivityItem;
struct CLSQuantityItem;
struct CMMagneticField;
struct CMMotionManager;
struct CMPedometerData;
struct CNPostalAddress;
struct CNSocialProfile;
struct CPAlertTemplate;
struct CXEndCallAction;
struct DSPSplitComplex;
struct EKRecurrenceEnd;
struct GCDeviceBattery;
struct GCDeviceHaptics;
struct GCKeyboardInput;
struct GKGridGraphNode;
struct GKObstacleGraph;
struct GLKSkyboxEffect;
struct HKDeletedObject;
struct HKDocumentQuery;
struct HKObserverQuery;
struct HKSeriesBuilder;
struct HMAccessControl;
struct HMCalendarEvent;
struct HMCameraControl;
struct HMCameraProfile;
struct HMDurationEvent;
struct HMLocationEvent;
struct HMPresenceEvent;
struct ICDeviceBrowser;
struct ICScannerDevice;
struct INBalanceAmount;
struct INObjectSection;
struct INPayBillIntent;
struct INPaymentAmount;
struct INPaymentMethod;
struct INPaymentRecord;
struct INTicketedEvent;
struct INVoiceShortcut;
struct KernKerningPair;
struct KernOffsetTable;
struct KernStateHeader;
struct KernTableHeader;
struct KerxKerningPair;
struct KerxStateHeader;
struct KerxTableHeader;
struct LtagStringRange;
struct MDLNoiseTexture;
struct MIDICIResponder;
struct MIDIEventPacket;
struct MIDINetworkHost;
struct MIDINoteMessage;
struct MKCompassButton;
struct MKMultiPolyline;
struct MLCDropoutLayer;
struct MLCPaddingLayer;
struct MLCPoolingLayer;
struct MLCReshapeLayer;
struct MLCSGDOptimizer;
struct MLCSoftmaxLayer;
struct MLUpdateContext;
struct MPMediaPlaylist;
struct MPMovieErrorLog;
struct MPRatingCommand;
struct MPRemoteCommand;
struct MPSCNNNeuronELU;
struct MPSImageAreaMax;
struct MPSImageAreaMin;
struct MPSImageEDLines;
struct MPSImagePyramid;
struct MPSMatrixNeuron;
struct MPSMatrixOffset;
struct MPSMatrixRandom;
struct MPSNDArraySizes;
struct MPSNNFilterNode;
struct MPSNNGridSample;
struct MPSNNLabelsNode;
struct MPSSVGFDenoiser;
struct MPTimedMetadata;
struct MSMessageLayout;
struct MTLSizeAndAlign;
struct MTLStructMember;
struct MXAppExitMetric;
struct MXCallStackTree;
struct MXDisplayMetric;
struct MXMetricManager;
struct MXMetricPayload;
struct NEFilterManager;
struct NEFilterVerdict;
struct NEHotspotHelper;
struct NEProxySettings;
struct NEVPNConnection;
struct NIConfiguration;
struct NKAssetDownload;
struct NSConditionLock;
struct NSDateFormatter;
struct NSDecimalNumber;
struct NSEntityMapping;
struct NSExtensionItem;
struct NSKeyedArchiver;
struct NSLayoutManager;
struct NSListFormatter;
struct NSManagedObject;
struct NSMapEnumerator;
struct NSMassFormatter;
struct NSMergeConflict;
struct NSMetadataQuery;
struct NSMutableString;
struct NSPurgeableData;
struct NSRecursiveLock;
struct NSSimpleCString;
struct NSSwappedDouble;
struct NSTextContainer;
struct NSURLComponents;
struct NSURLConnection;
struct NSURLCredential;
struct NSUnitConverter;
struct NSUnitFrequency;
struct NSXPCConnection;
struct NWTCPConnection;
struct NWTLSParameters;
struct OSLogEnumerator;
struct OS_os_workgroup;
struct OpaqueFFTSetupD;
struct OpaqueJSContext;
struct PHAssetResource;
struct PHChangeRequest;
struct PHLivePhotoView;
struct PKAddPassButton;
struct PKPaymentButton;
struct PKPaymentMethod;
struct SCNIKConstraint;
struct SCNPhysicsField;
struct SCNPhysicsShape;
struct SCNPhysicsWorld;
struct SFNTLookupTable;
struct SFTranscription;
struct SKArcadeService;
struct SKReferenceNode;
struct SKTileGroupRule;
struct SKTransformNode;
struct SVCXPRT__xp_ops;
struct SparseCGOptions;
struct TKSmartCardSlot;
struct UIAccelerometer;
struct UIBarAppearance;
struct UIBarButtonItem;
struct UICellAccessory;
struct UIFieldBehavior;
struct UIFocusDebugger;
struct UINavigationBar;
struct UIPointerEffect;
struct UIPointerRegion;
struct UIPreviewAction;
struct UIPreviewTarget;
struct UITableViewCell;
struct UITextInputMode;
struct VNCoreMLRequest;
struct VNDetectedPoint;
struct VNFaceLandmarks;
struct VNGeometryUtils;
struct WKScriptMessage;
struct _DNSRecordRef_t;
struct _GLKMatrixStack;
struct _OSUnalignedU16;
struct _OSUnalignedU32;
struct _OSUnalignedU64;
union _TXTRecordRef_t;
struct _Unwind_Context;
struct __CFHTTPMessage;
struct __CFMessagePort;
struct __CFWriteStream;
struct __CTFramesetter;
struct __CTRunDelegate;
struct __SCPreferences;
struct __objc_property;
struct _copyfile_state;
struct _htmlEntityDesc;
struct _predicateFlags;
struct _xmlDOMWrapCtxt;
struct _xmlEnumeration;
struct _xmlGlobalState;
struct _xmlLocationSet;
struct _xmlParserInput;
struct _xmlRegExecCtxt;
struct _xmlSchemaAnnot;
struct _xmlSchemaFacet;
struct _xmlXPathObject;
struct au_expire_after;
struct auditpinfo_addr;
struct axr_part_info_t;
struct dispatch_data_s;
struct dns_MX_record_t;
struct dns_RP_record_t;
struct dns_RT_record_t;
struct dyld_image_info;
struct dylib_module_64;
struct dylib_reference;
struct ftrimactivefile;
struct fvmfile_command;
struct gpu_energy_data;
struct host_basic_info;
struct host_sched_info;
struct icmp__ih_rtradv;
struct iconv_fallbacks;
struct kmod_info_32_v1;
struct kmod_info_64_v1;
struct mach_msg_base_t;
struct mach_msg_body_t;
struct nlm4_unlockargs;
struct objc_image_info;
struct policy_rr_limit;
struct port_obj_tentry;
struct relocation_info;
struct sadb_session_id;
struct segment_command;
struct sfntFeatureName;
struct short_hand_verf;
struct simd__double2x2;
struct simd__double2x3;
struct simd__double2x4;
struct simd__double3x2;
struct simd__double3x3;
struct simd__double3x4;
struct simd__double4x2;
struct simd__double4x3;
struct simd__double4x4;
struct sparse_m_double;
struct sqlite3_context;
struct std____1____any;
struct std____1____nat;
struct std____1____two;
struct std____1__mutex;
struct std__bad_typeid;
struct task_basic_info;
struct task_flags_info;
struct task_power_info;
struct task_qos_policy;
struct unw_proc_info_t;
struct vImageConverter;
struct vm_statistics64;
struct ACAccountStore;
struct ALAssetsFilter;
struct ALMXGlyphEntry;
struct ARFaceGeometry;
struct ARMeshGeometry;
struct ARObjectAnchor;
struct ARRaycastQuery;
struct AUAudioUnitBus;
struct AUTH__auth_ops;
struct AVAudio3DPoint;
struct AVAudioSession;
struct AVCaptureInput;
struct AVCapturePhoto;
struct AVMetadataItem;
struct AVMutableMovie;
struct AVPlayerLooper;
struct AudioTimeStamp;
struct BNNSActivation;
struct BigEndianFixed;
struct BigEndianShort;
struct CAEmitterLayer;
struct CAFChunkHeader;
struct CAFInfoStrings;
struct CAFMarkerChunk;
struct CAFRegionChunk;
struct CAF_SMPTE_Time;
struct CBL2CAPChannel;
struct CC_MD2state_st;
struct CC_MD4state_st;
struct CC_MD5state_st;
struct CFBagCallBacks;
struct CFSetCallBacks;
struct CGDataConsumer;
struct CGDataProvider;
struct CHHapticEngine;
struct CKNotification;
struct CKRecordZoneID;
struct CKSubscription;
struct CKUserIdentity;
struct CLBeaconRegion;
struct CMAcceleration;
struct CMAltitudeData;
struct CMDeviceMotion;
struct CMRotationRate;
struct CMTremorResult;
struct CNContactStore;
struct CNFetchRequest;
struct CNLabeledValue;
struct CNMutableGroup;
struct CPBaseListItem;
struct CPGridTemplate;
struct CPListTemplate;
struct CXCallObserver;
struct EAGLSharegroup;
struct EKCalendarItem;
struct ENExposureInfo;
struct ENScanInstance;
struct Fts5PhraseIter;
struct GCAcceleration;
struct GCDeviceCursor;
struct GCMicroGamepad;
struct GCRotationRate;
struct GKDecisionNode;
struct GKDecisionTree;
struct GKMatchRequest;
struct GKQuadtreeNode;
struct GKRandomSource;
struct GKStateMachine;
struct GLKTextureInfo;
struct HKCategoryType;
struct HKClinicalType;
struct HKDocumentType;
struct HKFHIRResource;
struct HKQuantityType;
struct HKSeriesSample;
struct HKWorkoutEvent;
struct HKWorkoutRoute;
struct HMCameraSource;
struct HMCameraStream;
struct HMEventTrigger;
struct HMServiceGroup;
struct HMTimerTrigger;
struct ICCameraDevice;
struct ICCameraFolder;
struct INPersonHandle;
struct JSManagedValue;
struct KernStateEntry;
struct KerxStateEntry;
struct LPLinkMetadata;
struct LcarCaretTable;
struct MIDIPacketList;
struct MKMultiPolygon;
struct MKPitchControl;
struct MKPolylineView;
struct MKUserLocation;
struct MLCMatMulLayer;
struct MLFeatureValue;
struct MLParameterKey;
struct MPMediaLibrary;
struct MPSCNNLossNode;
struct MPSCNNMultiply;
struct MPSCNNSubtract;
struct MPSCNNYOLOLoss;
struct MPSGraphDevice;
struct MPSGraphTensor;
struct MPSImageDilate;
struct MPSImageDivide;
struct MPSImageMedian;
struct MPSImageRegion;
struct MPSNNImageNode;
struct MPSNNOptimizer;
struct MPSNNScaleNode;
struct MPSNNStateNode;
struct MSConversation;
struct MSSetupSession;
struct MTLPointerType;
struct MTLScissorRect;
struct MXDiskIOMetric;
struct MXMemoryMetric;
struct NEAppProxyFlow;
struct NEFilterReport;
struct NEFlowMetaData;
struct NEIPv4Settings;
struct NEIPv6Settings;
struct NEOnDemandRule;
struct NFCISO7816APDU;
struct NFCNDEFMessage;
struct NFCNDEFPayload;
struct NFCVASResponse;
struct NINearbyObject;
struct NSCharacterSet;
struct NSDataDetector;
struct NSDateInterval;
struct NSFetchRequest;
struct NSFileSecurity;
struct NSItemProvider;
struct NSLayoutAnchor;
struct NSMappingModel;
struct NSMetadataItem;
struct NSMutableArray;
struct NSNotification;
struct NSOutputStream;
struct NSPointerArray;
struct NSSwappedFloat;
struct NSURLQueryItem;
struct NSUnitDuration;
struct NSUnitPressure;
struct NSUserActivity;
struct NSUserDefaults;
struct NSXPCInterface;
struct NWHostEndpoint;
struct OpaqueFFTSetup;
struct OpaqueJSString;
struct OpbdSideValues;
struct PDFActionNamed;
struct PDFDestination;
struct PDFPagePrivate;
struct PDFViewPrivate;
struct PHFetchOptions;
struct PHImageManager;
struct PHPhotoLibrary;
struct PHPickerFilter;
struct PHPickerResult;
struct PKLabeledValue;
struct PKPaymentToken;
struct PKPushRegistry;
struct ParameterEvent;
struct ROTAGlyphEntry;
struct SCNAudioPlayer;
struct SCNAudioSource;
struct SCNPhysicsBody;
struct SCNSceneSource;
struct SCNTransaction;
struct SKPaymentQueue;
struct SKPhysicsJoint;
struct SKPhysicsWorld;
struct SKTextureAtlas;
struct SKWarpGeometry;
struct SRFetchRequest;
struct SRSensorReader;
struct TKBERTLVRecord;
struct TKSmartCardATR;
struct TKTokenSession;
struct TKTokenWatcher;
struct TimeBaseRecord;
struct TrakTableEntry;
struct UBreakIterator;
struct UIAcceleration;
struct UIDropProposal;
struct UILexiconEntry;
struct UIMotionEffect;
struct UIPointerShape;
struct UIPointerStyle;
struct UIPressesEvent;
struct UIProgressView;
struct UIPushBehavior;
struct UISceneSession;
struct UISnapBehavior;
struct UITextPosition;
struct UIVisualEffect;
struct UNNotification;
struct VSSubscription;
struct WKContentWorld;
union _GLKQuaternion;
struct _RuneCharClass;
struct __CFBinaryHeap;
struct __CFDictionary;
struct __CFNetService;
struct __CFReadStream;
struct __CLPK_complex;
struct __CTTypesetter;
struct __SCBondStatus;
struct __SCNetworkSet;
struct __asl_object_s;
struct __msqid_ds_new;
struct __semid_ds_new;
struct __shmid_ds_new;
struct _malloc_zone_t;
struct _printf_domain;
struct _xmlParserCtxt;
struct _xmlSAXHandler;
struct _xmlSAXLocator;
struct _xmlSchemaType;
struct _xmlSchematron;
struct _xmlStreamCtxt;
struct _xmlTextReader;
struct _xmlTextWriter;
struct _xmlValidState;
struct _xmlXPathFunct;
struct accepted_reply;
struct au_evclass_map;
struct auditinfo_addr;
struct authunix_parms;
struct axr_property_t;
struct bp_getfile_arg;
struct bp_getfile_res;
struct dns_question_t;
struct dwarf_eh_bases;
struct dyld_uuid_info;
struct fts5_tokenizer;
struct fvmlib_command;
struct host_load_info;
struct icmp6_nodeinfo;
struct icmp__ih_idseq;
struct internal_state;
struct ip6_opt_router;
struct ip6_opt_tunnel;
struct ip_mreq_source;
struct ipc_info_space;
struct klm_unlockargs;
struct kmod_reference;
struct lockgroup_info;
struct mach_header_64;
struct mach_zone_name;
struct net_event_data;
struct nlm4_shareargs;
struct nlm_unlockargs;
struct policy_rr_base;
struct policy_rr_info;
struct rejected_reply;
struct rusage_info_v0;
struct rusage_info_v1;
struct rusage_info_v2;
struct rusage_info_v3;
struct rusage_info_v4;
struct sadb_supported;
struct sfntCMapHeader;
struct sfntNameHeader;
struct sfntNameRecord;
struct simd__float2x2;
struct simd__float2x3;
struct simd__float2x4;
struct simd__float3x2;
struct simd__float3x3;
struct simd__float3x4;
struct simd__float4x2;
struct simd__float4x3;
struct simd__float4x4;
struct simd_double2x2;
struct simd_double2x3;
struct simd_double2x4;
struct simd_double3x2;
struct simd_double3x3;
struct simd_double3x4;
struct simd_double4x2;
struct simd_double4x3;
struct simd_double4x4;
struct sparse_m_float;
struct sqlite3_backup;
struct sqlite3_module;
struct sqlite3_pcache;
struct std__bad_alloc;
struct std__exception;
struct std__nothrow_t;
struct std__type_info;
struct symseg_command;
struct symtab_command;
struct task_dyld_info;
struct thread_command;
struct tlv_descriptor;
struct unw_addr_space;
struct vm_info_object;
struct vm_info_region;
struct ypbind_binding;
struct yppushresp_xfr;
struct ypresp_key_val;
struct ypresp_maplist;
struct AAHeader_impl;
struct ACAccountType;
struct ALAssetsGroup;
struct ARImageAnchor;
struct ARPlaneAnchor;
struct ARVideoFormat;
struct AUChannelInfo;
struct AUPresetEvent;
union AURenderEvent;
struct AVAssetReader;
struct AVAssetWriter;
struct AVAudioBuffer;
struct AVAudioEngine;
struct AVAudioFormat;
struct AVAudioIONode;
struct AVAudioPlayer;
struct AVAudioUnitEQ;
struct AVComposition;
struct AVPlayerLayer;
struct AVQueuePlayer;
struct BGTaskRequest;
struct BNNSLayerData;
struct BigEndianLong;
struct Block_byref_2;
struct Block_byref_3;
struct CABarBeatTime;
struct CADisplayLink;
struct CAEmitterCell;
struct CAFFileHeader;
struct CAScrollLayer;
struct CATransaction;
struct CATransform3D;
struct CCHmacContext;
struct CFStreamError;
struct CFTreeContext;
struct CGImageSource;
struct CGPDFDocument;
struct CGPathElement;
struct CHHapticEvent;
struct CIBlendKernel;
struct CIColorKernel;
struct CIFaceFeature;
struct CIFilterShape;
struct CITextFeature;
struct CKQueryCursor;
struct CLSBinaryItem;
struct CMStepCounter;
struct CMTimeMapping;
struct CNFetchResult;
struct CNPhoneNumber;
struct CNSaveRequest;
struct CPAlertAction;
struct CPListSection;
struct CPMapTemplate;
struct CPRouteChoice;
struct CSSearchQuery;
struct CXTransaction;
struct EKParticipant;
struct FontVariation;
struct Fts5Tokenizer;
struct GCDeviceLight;
struct GCEulerAngles;
struct GCXboxGamepad;
struct GKAccessPoint;
struct GKAchievement;
struct GKCloudPlayer;
struct GKGameSession;
struct GKGraphNode2D;
struct GKGraphNode3D;
struct GKLeaderboard;
struct GKLocalPlayer;
struct GKNoiseSource;
struct GLKBaseEffect;
struct GLKMeshBuffer;
struct HKCDADocument;
struct HKCorrelation;
struct HKFHIRVersion;
struct HKHealthStore;
struct HKQueryAnchor;
struct HKSampleQuery;
struct HKSourceQuery;
struct HKWorkoutType;
struct HMHomeManager;
struct HMNumberRange;
struct INAirportGate;
struct INBillDetails;
struct INInteraction;
struct INMediaSearch;
struct INNoteContent;
struct INPreferences;
struct INReservation;
struct INRideVehicle;
struct INUserContext;
struct IUnknown_vtbl;
struct JSStaticValue;
struct MDLLightProbe;
struct MDLURLTexture;
struct MDLVoxelArray;
struct MIDICIProfile;
struct MIDICISession;
struct MIDIEventList;
struct MIDIMetaEvent;
struct MIDITransform;
struct MKETAResponse;
struct MKLocalSearch;
struct MKMapSnapshot;
struct MKOverlayView;
struct MKPolygonView;
struct MKTileOverlay;
struct MKZoomControl;
struct MLCSliceLayer;
struct MLCSplitLayer;
struct MLCTensorData;
struct MPContentItem;
struct MPMediaEntity;
struct MPSCNNDropout;
struct MPSCNNPooling;
struct MPSCNNSoftMax;
struct MPSImageCanny;
struct MPSImageErode;
struct MPSImageScale;
struct MPSImageSobel;
struct MPSMatrixCopy;
struct MPSTemporalAA;
struct MSStickerView;
struct MTKMeshBuffer;
struct MTLClearColor;
struct MTLStructType;
struct NEDNSSettings;
struct NENetworkRule;
struct NEProxyServer;
struct NEVPNProtocol;
struct NSAtomicStore;
struct NSFileManager;
struct NSFileVersion;
struct NSFileWrapper;
struct NSInputStream;
struct NSMeasurement;
struct NSMergePolicy;
struct NSMessagePort;
struct NSMutableData;
struct NSOrthography;
struct NSPortMessage;
struct NSProcessInfo;
struct NSTextStorage;
struct NSURLProtocol;
struct NSURLResponse;
struct NSUndoManager;
struct NSXPCListener;
struct OSLogEntryLog;
struct OSLogPosition;
struct OpaqueAUGraph;
struct OpaqueCMClock;
struct OpaqueJSClass;
struct OpaqueJSValue;
struct PDFActionGoTo;
struct PDFAnnotation;
struct PHFetchResult;
struct PKPassLibrary;
struct PKPaymentPass;
struct PKPushPayload;
struct PKStrokePoint;
struct SCNConstraint;
struct SKEmitterNode;
struct SKPhysicsBody;
struct SKTileMapNode;
struct SRFetchResult;
struct SSReadingList;
struct TKTokenDriver;
struct TrakTableData;
struct UCharIterator;
struct UIActionSheet;
struct UIAlertAction;
struct UIApplication;
struct UIDragPreview;
struct UIFocusSystem;
struct UIFontMetrics;
struct UILayoutGuide;
struct UIMenuElement;
struct UIPageControl;
struct UISearchToken;
struct UITextChecker;
struct UIWindowScene;
struct VNCoreMLModel;
struct VNObservation;
struct WCSessionFile;
struct WKPreferences;
struct WKProcessPool;
struct _CALayerIvars;
struct __CFAllocator;
struct __CFBitVector;
struct __CTGlyphInfo;
struct __SecIdentity;
struct __SecKeychain;
struct __SecPassword;
struct __msfilterreq;
struct __objc2_class;
struct __objc_method;
struct __res_9_state;
union __sigaction_u;
struct _htmlElemDesc;
struct _xlinkHandler;
struct _xmlAttribute;
struct _xmlHashTable;
struct _xmlSchemaVal;
struct _xmlShellCtxt;
struct _xmlValidCtxt;
struct _xmlXPathAxis;
struct _xmlXPathType;
struct arm_amx_state;
struct arm_state_hdr;
struct attribute_set;
struct attrreference;
struct audit_token_t;
struct bp_whoami_arg;
struct bp_whoami_res;
struct dylib_command;
struct float16x4x2_t;
struct float16x4x3_t;
struct float16x4x4_t;
struct float16x8x2_t;
struct float16x8x3_t;
struct float16x8x4_t;
struct float32x2x2_t;
struct float32x2x3_t;
struct float32x2x4_t;
struct float32x4x2_t;
struct float32x4x3_t;
struct float32x4x4_t;
struct float64x1x2_t;
struct float64x1x3_t;
struct float64x1x4_t;
struct float64x2x2_t;
struct float64x2x3_t;
struct float64x2x4_t;
struct fssearchblock;
struct getquota_args;
struct getquota_rslt;
struct icmp__ih_pmtu;
struct ident_command;
struct io_stat_entry;
struct ip6_opt_jumbo;
struct ipc_info_name;
struct kauth_filesec;
struct mach_port_qos;
struct mach_timespec;
struct mig_subsystem;
struct nd_opt_rd_hdr;
struct ni_reply_fqdn;
struct nlm4_cancargs;
struct nlm4_lockargs;
struct nlm4_shareres;
struct nlm4_testargs;
struct nlm4_testrply;
struct nlm_shareargs;
struct nlm_sm_status;
struct objc_category;
struct objc_property;
struct objc_selector;
struct os_activity_s;
struct persona_token;
struct policy_limits;
struct rb_tree_ops_t;
struct rpath_command;
struct rpc_createerr;
struct rpc_signature;
struct rpc_subsystem;
struct rslvmulti_req;
struct rstat_timeval;
struct sadb_lifetime;
struct sadb_spirange;
struct sadb_x_policy;
struct sfntDirectory;
struct simd_float2x2;
struct simd_float2x3;
struct simd_float2x4;
struct simd_float3x2;
struct simd_float3x3;
struct simd_float3x4;
struct simd_float4x2;
struct simd_float4x3;
struct simd_float4x4;
union simd_ushort16;
union simd_ushort32;
struct sqlite3_mutex;
struct sqlite3_value;
struct std__bad_cast;
union swift_double2;
union swift_double3;
union swift_double4;
struct tcpstat_local;
struct twolevel_hint;
struct unw_context_t;
struct vImage_Buffer;
union vector_float3;
struct vm_read_entry;
struct vm_statistics;
struct ypbind_setdom;
struct ypresp_master;
struct zone_btrecord;
struct ADBannerView;
struct ARBodyAnchor;
struct ARFaceAnchor;
struct ARMeshAnchor;
struct ARPointCloud;
struct ARSkeleton2D;
struct ARSkeleton3D;
struct AVAssetCache;
struct AVAssetTrack;
struct AVEdgeWidths;
struct AVMIDIPlayer;
struct AVMovieTrack;
struct AVMusicTrack;
struct AVPlayerItem;
struct BCChatAction;
struct BCChatButton;
struct Block_layout;
struct CAFDataChunk;
struct CAFPeakChunk;
struct CAFUMIDChunk;
struct CALayerArray;
struct CAMetalLayer;
struct CAShapeLayer;
struct CATiledLayer;
struct CATransition;
struct CBATTRequest;
struct CBDescriptor;
struct CBPeripheral;
struct CGColorSpace;
struct CGPDFScanner;
struct CIRenderInfo;
struct CIRenderTask;
struct CIWarpKernel;
struct CKRecordZone;
struct CLSDataStore;
struct CLSScoreItem;
struct CMQuaternion;
struct CPGridButton;
struct CPTextButton;
struct CTCallCenter;
struct CTSubscriber;
struct CXCallAction;
struct CXCallUpdate;
struct EKEventStore;
struct Float32Point;
struct GCController;
struct GCMouseInput;
struct GCQuaternion;
struct GKBasePlayer;
struct GKMatchmaker;
struct GKOctreeNode;
struct GKRuleSystem;
struct HKObjectType;
struct HKSampleType;
struct HKSeriesType;
struct HKStatistics;
struct HMCameraView;
struct ICCameraFile;
struct ICCameraItem;
struct INCallRecord;
struct INPriceRange;
struct INRestaurant;
struct INRideDriver;
struct INRideOption;
struct INRideStatus;
struct INVocabulary;
struct IUnknownVTbl;
struct JustPCAction;
struct MDLAreaLight;
struct MDLColorSpec;
struct MDLTransform;
struct MIDIValueMap;
struct MKCircleView;
struct MKDirections;
struct MKMultiPoint;
struct MLCLSTMLayer;
struct MLCLossLayer;
struct MLCOptimizer;
struct MLMultiArray;
struct MLUpdateTask;
struct MPMediaQuery;
struct MPSCNNDivide;
struct MPSCNNKernel;
struct MPSCNNNeuron;
struct MPSImageTent;
struct MPSMatrixSum;
struct MPSNNCompare;
struct MPSNNPadNode;
struct MPSNNReshape;
struct MPSPredicate;
struct MPVolumeView;
struct MTLArrayType;
struct MTLAttribute;
struct MXDiagnostic;
struct MortSubtable;
struct MorxSubtable;
struct NDR_record_t;
struct NEFilterFlow;
struct NEFilterRule;
struct NEPacketFlow;
struct NEVPNManager;
struct NSConnection;
struct NSCountedSet;
struct NSDictionary;
struct NSEnumerator;
struct NSExpression;
struct NSFileHandle;
struct NSHTTPCookie;
struct NSInvocation;
struct NSMutableSet;
struct NSNetService;
struct NSOrderedSet;
struct NSURLRequest;
struct NSURLSession;
struct NSUnitEnergy;
struct NSUnitLength;
struct NSUnitVolume;
struct NWUDPSession;
struct PDFActionURL;
struct PDFSelection;
struct PHCollection;
struct PKCanvasView;
struct PKEraserTool;
struct PKFloatRange;
struct PKInkingTool;
struct PKStrokePath;
struct PKToolPicker;
struct SCNAnimation;
struct SCNTechnique;
struct SKCameraNode;
struct SKConstraint;
struct SKEffectNode;
struct SKSpriteNode;
struct SKStorefront;
struct SKTransition;
struct STClassTable;
struct STWebHistory;
struct STXEntryZero;
struct UIBezierPath;
struct UIBlurEffect;
struct UIDatePicker;
struct UIEdgeInsets;
struct UIFloatRange;
struct UIFocusGuide;
struct UIImageAsset;
struct UIKeyCommand;
struct UIMenuSystem;
struct UIPasteboard;
struct UIPickerView;
struct UIPrintPaper;
struct UIScreenMode;
struct UIScrollView;
struct UIStoryboard;
struct UITabBarItem;
struct UnsignedWide;
struct VTInt32Point;
struct WKFindResult;
struct WKNavigation;
struct WKUserScript;
struct XML_Encoding;
struct _AVBeatRange;
struct __CFCalendar;
struct __CFMachPort;
struct __CFTimeZone;
struct __objc2_ivar;
struct __objc2_meth;
struct __objc2_prop;
struct __objc2_prot;
struct _acl_flagset;
struct _acl_permset;
struct _xmlAutomata;
struct _xmlChLRange;
struct _xmlChSRange;
struct _xmlNotation;
struct _xmlSaveCtxt;
struct axr_origin_t;
struct dns_header_t;
struct dylib_module;
struct ether_header;
struct fgetsigsinfo;
struct flocktimeout;
struct icmp6_filter;
struct icmp6errstat;
struct icmp_ra_addr;
struct if_nameindex;
struct ifma_msghdr2;
struct image_offset;
struct in_addr_4in6;
struct io_stat_info;
struct ip6_moptions;
struct ip6_opt_nsap;
struct ip_timestamp;
struct klm_lockargs;
struct klm_testargs;
struct klm_testrply;
struct load_command;
struct msg_labels_t;
struct nd_opt_dnssl;
struct nd_opt_nonce;
struct nd_opt_rdnss;
struct netfs_status;
struct nlm4_testres;
struct nlm_cancargs;
struct nlm_lockargs;
struct nlm_shareres;
struct nlm_testargs;
struct nlm_testrply;
struct note_command;
struct policy_bases;
struct policy_infos;
struct poly16x4x2_t;
struct poly16x4x3_t;
struct poly16x4x4_t;
struct poly16x8x2_t;
struct poly16x8x3_t;
struct poly16x8x4_t;
struct poly64x1x2_t;
struct poly64x1x3_t;
struct poly64x1x4_t;
struct poly64x2x2_t;
struct poly64x2x3_t;
struct poly64x2x4_t;
struct poly8x16x2_t;
struct poly8x16x3_t;
struct poly8x16x4_t;
struct rr_pco_match;
struct sa_endpoints;
struct sadb_address;
struct sfntInstance;
union simd_double2;
union simd_double3;
union simd_double4;
union simd_double8;
union simd_float16;
union simd_short16;
union simd_short32;
union simd_uchar16;
union simd_uchar32;
union simd_uchar64;
union simd_ushort2;
union simd_ushort3;
union simd_ushort4;
union simd_ushort8;
struct sockaddr_in6;
struct spraytimeval;
struct sqlite3_blob;
struct sqlite3_file;
struct sqlite3_stmt;
struct sqlite3_vtab;
union swift_float2;
union swift_float3;
union swift_float4;
struct task_vm_info;
struct uint16x4x2_t;
struct uint16x4x3_t;
struct uint16x4x4_t;
struct uint16x8x2_t;
struct uint16x8x3_t;
struct uint16x8x4_t;
struct uint32x2x2_t;
struct uint32x2x3_t;
struct uint32x2x4_t;
struct uint32x4x2_t;
struct uint32x4x3_t;
struct uint32x4x4_t;
struct uint64x1x2_t;
struct uint64x1x3_t;
struct uint64x1x4_t;
struct uint64x2x2_t;
struct uint64x2x3_t;
struct uint64x2x4_t;
struct uint8x16x2_t;
struct uint8x16x3_t;
struct uint8x16x4_t;
struct unw_cursor_t;
struct uuid_command;
struct ypresp_order;
struct ARDepthData;
struct ARGeoAnchor;
struct AUAudioUnit;
struct AUMIDIEvent;
struct AUParameter;
struct AVAudioFile;
struct AVAudioNode;
struct AVAudioTime;
struct AVAudioUnit;
struct AVDepthData;
struct AnchorPoint;
struct AudioBuffer;
struct Block_byref;
struct CAAnimation;
struct CAEAGLLayer;
struct CAFStringID;
struct CATextLayer;
struct CBAttribute;
struct CFUUIDBytes;
struct CGPDFObject;
struct CGPDFStream;
struct CGPDFString;
struct CKContainer;
struct CKOperation;
struct CKReference;
struct CLPlacemark;
struct CLSActivity;
struct CMAltimeter;
struct CMPedometer;
struct CMTimeRange;
struct CNContainer;
struct CPBarButton;
struct CPMapButton;
struct CVSMPTETime;
struct CVTimeStamp;
struct EAAccessory;
struct EAGLContext;
struct Fts5Context;
struct GKChallenge;
struct GKComponent;
struct GKGraphNode;
struct GKGridGraph;
struct GKMeshGraph;
struct GKSavedGame;
struct GKVoiceChat;
struct HMAccessory;
struct HMActionSet;
struct HMTimeEvent;
struct INBillPayee;
struct INExtension;
struct INMediaItem;
struct INParameter;
struct INRentalCar;
struct INTrainTrip;
struct MDLMaterial;
struct MDLSkeleton;
struct MIDIRawData;
struct MKMapCamera;
struct MKPlacemark;
struct MKRouteStep;
struct MKScaleView;
struct MLImageSize;
struct MLMetricKey;
struct MPMediaItem;
struct MPOOL___hqh;
struct MPOOL___lqh;
struct MPSImageAdd;
struct MPSImageBox;
struct MTLArgument;
struct MTLViewport;
struct MXCPUMetric;
struct MXGPUMetric;
struct MXHistogram;
struct NEIPv4Route;
struct NEIPv6Route;
struct NLEmbedding;
struct NLGazetteer;
struct NLTokenizer;
struct NSCondition;
struct NSDataAsset;
struct NSDimension;
struct NSException;
struct NSFormatter;
struct NSHashTable;
struct NSIndexPath;
struct NSOperation;
struct NSPredicate;
struct NSUnitAngle;
struct NSUnitPower;
struct NSUnitSpeed;
struct NSXMLParser;
struct PDFDocument;
struct PHLivePhoto;
struct PKLassoTool;
struct SCNCylinder;
struct SCNGeometry;
struct SCNMaterial;
struct SCNRenderer;
struct SKAdNetwork;
struct SKAttribute;
struct SKAudioNode;
struct SKFieldNode;
struct SKLabelNode;
struct SKLightNode;
struct SKShapeNode;
struct SKTileGroup;
struct SKVideoNode;
struct STEntryZero;
struct STXEntryOne;
struct STXEntryTwo;
struct TKSmartCard;
struct TKTLVRecord;
struct UIAlertView;
struct UIColorWell;
struct UIImageView;
struct UIInputView;
struct UIPrintInfo;
struct UIResponder;
struct UISearchBar;
struct UIStackView;
struct UITableView;
struct UITextField;
struct UITextRange;
struct UParseError;
struct VTInt32Size;
struct WKFrameInfo;
struct XML_Feature;
union _GLKMatrix2;
union _GLKMatrix3;
union _GLKMatrix4;
union _GLKVector2;
union _GLKVector3;
union _GLKVector4;
struct _RuneLocale;
struct __CFBoolean;
struct __CFRunLoop;
struct __CTTextTab;
struct __IOSurface;
struct __SecAccess;
struct __SecPolicy;
struct __SecRandom;
union __mbstate_t;
struct __sigaction;
struct _stringlist;
struct _xmlCatalog;
struct _xmlElement;
struct _xmlExpCtxt;
struct _xmlExpNode;
struct _xmlNodeSet;
struct _xmlPattern;
struct _xmlRelaxNG;
struct au_tid_addr;
struct audit_fstat;
struct dns_reply_t;
struct extern_proc;
struct fat_arch_64;
union float16x4_t;
union float16x8_t;
union float32x2_t;
union float32x4_t;
union float64x1_t;
union float64x2_t;
struct fsignatures;
struct fsupplement;
struct gz_header_s;
struct icmp__id_ip;
struct icmp__id_ts;
struct iconv_hooks;
struct if_clonereq;
struct ifma_msghdr;
struct in6_pktinfo;
struct inpcbpolicy;
struct int16x4x2_t;
struct int16x4x3_t;
struct int16x4x4_t;
struct int16x8x2_t;
struct int16x8x3_t;
struct int16x8x4_t;
struct int32x2x2_t;
struct int32x2x3_t;
struct int32x2x4_t;
struct int32x4x2_t;
struct int32x4x3_t;
struct int32x4x4_t;
struct int64x1x2_t;
struct int64x1x3_t;
struct int64x1x4_t;
struct int64x2x2_t;
struct int64x2x3_t;
struct int64x2x4_t;
struct int8x16x2_t;
struct int8x16x3_t;
struct int8x16x4_t;
struct ip6_mtuinfo;
struct ip6_pktopts;
struct mach_header;
struct nd_redirect;
struct nlm4_holder;
struct nlm4_notify;
struct nlm_testres;
struct objc_method;
struct objc_object;
struct opaque_auth;
struct poly8x8x2_t;
struct poly8x8x3_t;
struct poly8x8x4_t;
struct printf_info;
struct rusers_utmp;
struct sadb_sastat;
struct sched_param;
struct searchstate;
struct simd__quatd;
struct simd__quatf;
union simd_char16;
union simd_char32;
union simd_char64;
union simd_float2;
union simd_float3;
union simd_float4;
union simd_float8;
union simd_short2;
union simd_short3;
union simd_short4;
union simd_short8;
union simd_uchar2;
union simd_uchar3;
union simd_uchar4;
union simd_uchar8;
union simd_uint16;
union simd_ulong2;
union simd_ulong3;
union simd_ulong4;
union simd_ulong8;
struct sm_stat_res;
struct sockaddr_dl;
struct sockaddr_in;
struct sockaddr_un;
struct sockaddr_vm;
struct sqlite3_str;
struct sqlite3_vfs;
union swift_uint2;
union swift_uint3;
union swift_uint4;
struct tsegqe_head;
struct uint8x8x2_t;
struct uint8x8x3_t;
struct uint8x8x4_t;
struct utmpidlearr;
struct vDSP_uint24;
struct xdr_discrim;
struct ypbind_resp;
struct ypmap_parms;
struct ypreq_nokey;
union AAFieldKey;
struct ALMXHeader;
struct ARSkeleton;
struct ARWorldMap;
struct AVAudioMix;
struct AVURLAsset;
struct CAFStrings;
struct CGFunction;
struct CGGradient;
struct CGPDFArray;
struct CIDetector;
struct CKDatabase;
struct CKRecordID;
struct CLGeocoder;
struct CLLocation;
struct CLSContext;
struct CMAttitude;
struct CMGyroData;
struct CPImageSet;
struct CPListItem;
struct CPManeuver;
struct CPTemplate;
struct CXProvider;
struct DSPComplex;
struct EKCalendar;
struct EKReminder;
struct FixedPoint;
struct GCKeyboard;
struct GKBehavior;
struct GKNoiseMap;
struct GKObstacle;
struct GKQuadtree;
struct GKTriangle;
struct GLKSubmesh;
struct HKQuantity;
struct INBoatTrip;
struct INHeadUnit;
struct INShortcut;
struct INTaskList;
struct LPLinkView;
struct MDLSubmesh;
struct MDLTexture;
struct MIDIPacket;
struct MKMapPoint;
struct MKPolyline;
struct MLSequence;
struct MPSCNNLoss;
struct MPSNDArray;
struct MPSNNGraph;
struct MPSNNSlice;
struct MTKSubmesh;
struct MXMetaData;
struct NEProvider;
struct NSCalendar;
struct NSIndexSet;
struct NSMachPort;
struct NSMapTable;
struct NSProgress;
struct NSTimeZone;
struct NSURLCache;
struct NSUnitArea;
struct NSUnitMass;
struct NSXPCCoder;
struct NWEndpoint;
struct NXArchInfo;
struct NumVersion;
struct OSLogEntry;
struct OSLogStore;
struct PDFOutline;
struct ROTAHeader;
struct SCNCapsule;
struct SCNMatrix4;
struct SCNMorpher;
struct SCNProgram;
struct SCNPyramid;
struct SCNSkinner;
struct SCNVector3;
struct SCNVector4;
struct SKCropNode;
struct SKDownload;
struct SKRenderer;
struct SRWebUsage;
struct SSLContext;
struct STEntryOne;
struct STEntryTwo;
struct TimeRecord;
struct UConverter;
struct UIActivity;
struct UIDocument;
struct UIDragItem;
struct UIMenuItem;
struct UITextView;
struct UTextFuncs;
struct _CCCryptor;
struct _RuneEntry;
struct _RuneRange;
struct __CFBundle;
struct __CFLocale;
struct __CFNumber;
struct __CFSocket;
struct __CFString;
struct __CVBuffer;
struct __NSModule;
struct __NSSymbol;
struct __SecTrust;
struct __nl_cat_d;
struct _acl_entry;
struct _xmlBuffer;
struct _xmlEntity;
struct _xmlModule;
struct _xmlRMutex;
struct _xmlRegexp;
struct _xmlSchema;
struct au_session;
struct audit_stat;
struct auditpinfo;
struct axr_rect_t;
struct axr_size_t;
struct bp_address;
struct diskextent;
struct ether_addr;
struct exportnode;
struct fat_header;
struct fpunchhole;
struct if_msghdr2;
struct ifa_msghdr;
struct ifaliasreq;
struct ifmediareq;
struct in_pktinfo;
struct int8x8x2_t;
struct int8x8x3_t;
struct int8x8x4_t;
struct ip6_rthdr0;
struct kevent64_s;
struct kinfo_proc;
struct klm_holder;
struct mig_symtab;
struct nd_opt_hdr;
struct nd_opt_mtu;
struct nlm4_share;
struct nlm_holder;
struct nlm_notify;
struct ntptimeval;
struct objc_cache;
struct objc_class;
struct objc_super;
union poly16x4_t;
union poly16x8_t;
union poly64x1_t;
union poly64x2_t;
union poly8x16_t;
struct posix_cred;
struct proc_ident;
struct regmatch_t;
struct reply_body;
struct rr_pco_use;
struct sadb_ident;
struct sadb_x_sa2;
struct section_64;
union simd_char2;
union simd_char3;
union simd_char4;
union simd_char8;
union simd_int16;
union simd_long2;
union simd_long3;
union simd_long4;
union simd_long8;
struct simd_quatd;
struct simd_quatf;
union simd_uint2;
union simd_uint3;
union simd_uint4;
union simd_uint8;
struct spraycumul;
struct statsswtch;
union swift_int2;
union swift_int3;
union swift_int4;
struct time_value;
union uint16x4_t;
union uint16x8_t;
union uint32x2_t;
union uint32x4_t;
union uint64x1_t;
union uint64x2_t;
union uint8x16_t;
struct utmp_array;
struct vDSP_int24;
struct vfs_server;
struct vm_range_t;
struct xvsockpgen;
struct ypresp_all;
struct ypresp_val;
struct ypresp_xfr;
struct ypresponse;
struct z_stream_s;
struct ACAccount;
struct ARSCNView;
struct ARSession;
struct AnkrTable;
struct BTREEINFO;
struct BslnTable;
struct CAFMarker;
struct CAFRegion;
struct CBCentral;
struct CBManager;
struct CBService;
struct CGContext;
struct CGPDFPage;
struct CGPattern;
struct CGShading;
struct CIContext;
struct CIFeature;
struct CISampler;
struct CLHeading;
struct CLSObject;
struct CMLogItem;
struct CNContact;
struct CPContact;
struct CTCarrier;
struct EASession;
struct ENManager;
struct FixedRect;
struct GCGamepad;
struct GKAgent2D;
struct GKAgent3D;
struct GKSession;
struct HKWorkout;
struct HMService;
struct HMTrigger;
struct INAirline;
struct INAirport;
struct INBusTrip;
struct INMessage;
struct IOSurface;
struct JSContext;
struct JustTable;
struct LAContext;
struct LtagTable;
struct MCSession;
struct MDLCamera;
struct MDLObject;
struct MKMapItem;
struct MKMapRect;
struct MKMapSize;
struct MKMapView;
struct MKPolygon;
struct MLCDevice;
struct MLCTensor;
struct MPSCNNAdd;
struct MPSKernel;
struct MPSMatrix;
struct MPSOffset;
struct MPSOrigin;
struct MPSRegion;
struct MPSVector;
struct MSMessage;
struct MSSession;
struct MSSticker;
struct MTLOrigin;
struct MTLRegion;
struct MXAverage;
struct MortChain;
struct MortTable;
struct MorxChain;
struct MorxTable;
struct NEAppRule;
struct NISession;
struct NKLibrary;
struct NSDecimal;
struct NSRunLoop;
struct NSScanner;
struct NSTextTab;
struct OS_object;
struct OpbdTable;
struct PDFAction;
struct PDFBorder;
struct PHProject;
struct PKContact;
struct PKDrawing;
struct PKPayment;
struct PropTable;
struct RECNOINFO;
struct SCNAction;
struct SCNCamera;
struct SCNSphere;
struct SKOverlay;
struct SKPayment;
struct SKProduct;
struct SKRequest;
struct SKTexture;
struct SKTileSet;
struct SKUniform;
struct SLRequest;
struct SMPTETime;
struct STXHeader;
struct TWRequest;
struct TrakTable;
struct UIBarItem;
struct UICommand;
struct UIControl;
struct UILexicon;
struct UIPrinter;
struct UIStepper;
struct UIToolbar;
struct UIWebView;
struct VNContour;
struct VNRequest;
struct WCSession;
struct WKWebView;
struct __CFArray;
struct __CFError;
struct __CTFrame;
struct __double2;
struct __rpc_xdr;
struct __siginfo;
struct _xmlError;
struct _xmlMutex;
struct at_size_t;
struct auditinfo;
struct axr_box2i;
struct bz_stream;
struct call_body;
struct clockinfo;
union des_block;
struct dqfilehdr;
struct fspecread;
struct group_req;
struct groupnode;
struct icmp6_hdr;
struct icmp6stat;
struct if_data64;
struct if_msghdr;
struct imaxdiv_t;
struct inpcbinfo;
struct inpcbport;
union int16x4_t;
union int16x8_t;
union int32x2_t;
union int32x4_t;
union int64x1_t;
union int64x2_t;
union int8x16_t;
struct ip6_rthdr;
struct ip_addr_t;
struct ipsecstat;
struct ipv6_mreq;
struct itimerval;
struct kauth_ace;
struct kauth_acl;
struct kmod_info;
struct mountbody;
struct nlm4_lock;
struct nlm4_stat;
struct nlm_share;
struct objc_ivar;
union poly8x8_t;
struct radvisory;
struct ranlib_64;
struct res_9_sym;
struct rr_result;
struct sadb_comb;
struct sadb_prop;
struct sadb_sens;
struct sigaction;
union simd_int2;
union simd_int3;
union simd_int4;
union simd_int8;
struct sm_status;
struct sockproto;
struct stat_chge;
struct statstime;
struct timeval32;
struct timeval64;
struct tseg_qent;
union uint8x8_t;
struct vfsstatfs;
struct wordexp_t;
struct xsw_usage;
struct xvsockpcb;
struct ypmaplist;
struct ypreq_key;
struct ypreq_xfr;
struct yprequest;
struct zone_info;
struct zone_name;
struct ADClient;
struct ARAnchor;
struct ARBody2D;
struct ARCamera;
struct ARSKView;
struct AUPreset;
struct AVPlayer;
struct CGVector;
struct CIFilter;
struct CIKernel;
struct CIVector;
struct CKRecord;
struct CLBeacon;
struct CLRegion;
struct CPButton;
struct CPEntity;
struct CPWindow;
struct CSPerson;
struct CXAction;
struct CXHandle;
struct DCDevice;
struct EKObject;
struct EKSource;
struct GCMotion;
struct GKEntity;
struct GKInvite;
struct GKOctree;
struct GKPlayer;
struct HASHINFO;
struct HKDevice;
struct HKObject;
struct HKSample;
struct HKSource;
struct HMAction;
struct ICDevice;
struct INFlight;
struct INIntent;
struct INObject;
struct INPerson;
struct IUnknown;
struct JSScript;
struct MCPeerID;
struct MDLAsset;
struct MDLLight;
struct MKCircle;
struct MLCGraph;
struct MLCLayer;
struct MPSGraph;
struct MPSImage;
struct MPSNNPad;
struct MPSState;
struct MXMetric;
struct NEPacket;
struct NLTagger;
struct NSBundle;
struct NSLocale;
struct NSNumber;
struct NSObject;
struct NSShadow;
struct NSStream;
struct NSThread;
struct PHChange;
struct PHObject;
struct PKObject;
struct PKStroke;
struct Protocol;
struct SCNFloor;
struct SCNLight;
struct SCNPlane;
struct SCNScene;
struct SCNShape;
struct SCNTorus;
struct SK3DNode;
struct SKAction;
struct SKRegion;
struct SKShader;
struct SRDevice;
struct STHeader;
struct UIAction;
struct UIButton;
struct UIDevice;
struct UIOffset;
struct UIRegion;
struct UIScreen;
struct UISlider;
struct UISwitch;
struct UITabBar;
struct UIWindow;
struct VNCircle;
struct VNVector;
struct _NSRange;
struct __CFData;
struct __CFDate;
struct __CFHost;
struct __CFNull;
struct __CFTree;
struct __CFUUID;
struct __CTFont;
struct __CTLine;
struct __GLsync;
struct __SecACL;
struct __SecKey;
struct __float2;
struct __ns_msg;
struct __sFILEX;
struct _filesec;
struct _telldir;
struct _uconv_t;
struct _xlocale;
struct _xmlAttr;
struct _xmlDict;
struct _xmlLink;
struct _xmlList;
struct _xmlNode;
struct addrinfo;
struct attrlist;
struct au_qctrl;
struct au_token;
struct axr_data;
struct fat_arch;
struct fchecklv;
struct fhstatus;
struct fsobj_id;
struct fts5_api;
struct gzFile_s;
struct ifdevmtu;
struct ifmaddrs;
struct in6_addr;
union int8x8_t;
struct ip6_dest;
struct ip6_frag;
struct ip_mreqn;
struct ipc_perm;
struct klm_lock;
struct klm_stat;
struct lastlogx;
struct log2phys;
struct nlist_64;
struct nlm4_res;
struct nlm_lock;
struct nlm_stat;
struct nt_sid_t;
struct os_log_s;
struct protoent;
struct sadb_alg;
struct sadb_ext;
struct sadb_key;
struct sadb_msg;
struct sigevent;
struct sigstack;
struct sockaddr;
struct sprayarr;
struct timespec;
struct timezone;
struct utmpidle;
struct vfsidctl;
struct vfsquery;
struct x_passwd;
struct xsockbuf;
struct yppasswd;
struct ALAsset;
struct ARFrame;
struct AVAsset;
struct AVMovie;
struct CALayer;
struct CFRange;
struct CGColor;
struct CGImage;
struct CGLayer;
struct CGPoint;
struct CIColor;
struct CIImage;
struct CKAsset;
struct CKQuery;
struct CKShare;
struct CLFloor;
struct CLVisit;
struct CNGroup;
struct CTError;
struct DERItem;
struct EKAlarm;
struct EKEvent;
struct Float80;
struct Float96;
struct GCColor;
struct GCMouse;
struct GKAgent;
struct GKGraph;
struct GKMatch;
struct GKNoise;
struct GKRTree;
struct GKScene;
struct GKScore;
struct GKState;
struct GLKMesh;
struct GLKView;
struct HKQuery;
struct HMEvent;
struct INColor;
struct INImage;
struct JSValue;
struct MDLMesh;
struct MKRoute;
struct MKShape;
struct MLModel;
struct MPSSVGF;
struct MPSSize;
struct MTKMesh;
struct MTKView;
struct MTLSize;
struct MTLType;
struct NKIssue;
struct NLModel;
struct NSArray;
struct NSCache;
struct NSCoder;
struct NSError;
struct NSImage;
struct NSProxy;
struct NSTimer;
struct NSValue;
struct PDFPage;
struct PDFView;
struct PHAsset;
struct SCNCone;
struct SCNNode;
struct SCNText;
struct SCNTube;
struct SCNView;
struct SKRange;
struct SKScene;
struct SRVisit;
struct SVCXPRT;
struct TKToken;
struct UIColor;
struct UIEvent;
struct UIImage;
struct UILabel;
struct UIPress;
struct UIScene;
struct UITouch;
struct VNPoint;
struct VersRec;
struct _NSZone;
struct __CFBag;
struct __CFSet;
struct __CFURL;
struct __CTRun;
struct __ns_rr;
struct __sFILE;
struct _ftsent;
struct _xmlBuf;
struct _xmlDoc;
struct _xmlDtd;
struct _xmlRef;
struct _xmlURI;
struct au_mask;
struct cache_s;
struct cmsghdr;
struct ctlname;
struct dl_info;
struct dst_key;
struct fhandle;
struct hostent;
struct if_data;
struct ifaddrs;
struct ifqueue;
struct in_addr;
struct ip6_ext;
struct ip6_hbh;
struct ip6_hdr;
struct ip6_opt;
struct ip_mreq;
struct ip_opts;
struct lldiv_t;
struct loadavg;
struct mld_hdr;
struct msginfo;
struct nlm_res;
struct ntsid_t;
struct rb_node;
struct rb_tree;
struct re_guts;
struct regex_t;
struct rpc_err;
struct rpc_msg;
struct ru_utmp;
struct sadb_sa;
struct section;
struct servent;
struct session;
struct sf_hdtr;
struct sigacts;
struct sm_name;
struct sm_stat;
struct sqlite3;
struct statvfs;
struct svc_req;
struct tcpstat;
struct termios;
struct timeval;
struct ttysize;
struct utimbuf;
struct utmparr;
struct utsname;
union vBool32;
union vDouble;
union vSInt16;
union vSInt32;
union vSInt64;
union vUInt16;
union vUInt32;
union vUInt64;
struct vfsconf;
struct vmspace;
struct winsize;
struct xinpgen;
struct xsocket;
struct BGTask;
struct CBPeer;
struct CBUUID;
struct CGFont;
struct CGPath;
struct CGRect;
struct CGSize;
struct CLIENT;
struct CMTime;
struct CPTrip;
struct CTCall;
struct CVTime;
struct CXCall;
struct GKGame;
struct GKGoal;
struct GKPath;
struct GKQuad;
struct GKRule;
struct HEADER;
struct HKUnit;
struct HMHome;
struct HMRoom;
struct HMUser;
struct HMZone;
struct INFile;
struct INNote;
struct INSeat;
struct INTask;
struct MLTask;
struct NSData;
struct NSDate;
struct NSHost;
struct NSLock;
struct NSNull;
struct NSPipe;
struct NSPort;
struct NSUUID;
struct NSUnit;
struct NWPath;
struct PKPass;
struct PKTool;
struct SCNBox;
struct SKNode;
struct SKView;
struct UCPMap;
struct UIFont;
struct UIMenu;
struct UIView;
struct UTType;
struct XML_cp;
struct __sbuf;
struct _pcred;
struct _ucred;
struct _xmlID;
struct _xmlNs;
struct au_tid;
struct dirent;
struct fd_set;
struct fenv_t;
struct fstore;
struct fvmlib;
struct glob_t;
union guid_t;
struct ifconf;
struct ifstat;
struct kevent;
struct keydat;
union lc_str;
struct ldiv_t;
struct linger;
struct mon_id;
struct msghdr;
struct mstats;
struct netent;
struct netobj;
struct option;
struct passwd;
struct pollfd;
struct ranlib;
struct rlimit;
struct rpcent;
struct rquota;
struct rusage;
struct sastat;
struct sembuf;
union sigval;
struct sigvec;
struct statfs;
struct tcphdr;
struct ttyent;
struct udphdr;
union vFloat;
union vSInt8;
union vUInt8;
struct valdat;
struct xinpcb;
struct xtcpcb;
struct xucred;
struct ARRay;
struct FSRef;
struct GKBox;
struct INCar;
struct MLKey;
struct MPOOL;
struct NSSet;
struct NSURL;
struct PKInk;
struct Point;
struct UIKey;
struct UINib;
struct UText;
struct aiocb;
struct datum;
struct div_t;
struct dqblk;
struct dylib;
struct entry;
struct flock;
struct fstab;
struct group;
struct ifdrv;
struct ifkpi;
struct ifreq;
struct inpcb;
struct iovec;
struct klist;
struct knote;
struct label;
struct lconv;
struct mount;
struct my_id;
struct mymsg;
struct nlist;
struct ostat;
union semun;
struct stats;
struct tcpcb;
struct timeb;
struct timex;
struct ucred;
struct utmpx;
struct vnode;
struct AUTH;
struct Rect;
struct USet;
struct __db;
struct _acl;
struct _bkt;
struct fsid;
struct icmp;
struct mbuf;
struct pgrp;
struct proc;
struct stat;
struct user;
struct utmp;
union wait;
struct wide;
struct DBM;
struct DBT;
struct DIR;
struct FTS;
struct FTW;
struct mon;
struct msg;
struct sem;
struct tms;
struct ip;
struct tm;

struct std____1____type_list_std____align_type_unsigned_char___std____type_list_std____align_type_unsigned_short___std____type_list_std____align_type_unsigned_int___std____type_list_std____align_type_unsigned_long___std____type_list_std____align_type_unsigned_long_long___std____type_list_std____align_type_double___std____type_list_std____align_type_long_double___std____type_list_std____align_type_std____struct_double___std____type_list_std____align_type_std____struct_double4___std____type_list_std____align_type_int__P___std____nat__________ {};
struct std____1____type_list_unsigned_char__std____type_list_unsigned_short__std____type_list_unsigned_int__std____type_list_unsigned_long__std____type_list_unsigned_long_long__std____type_list_unsigned___int128__std____nat______ {};
struct std____1____type_list_signed_char__std____type_list_short__std____type_list_int__std____type_list_long__std____type_list_long_long__std____type_list___int128__std____nat______ {};
typedef std____1__chrono__duration_long_double__std__ratio_1__1000000000__ std____1__common_type_std__chrono__duration_long_double__std__ratio_1__1000000000____std__chrono__duration_long_double__std__ratio_1__1000000000_____type;
typedef std____1__chrono__duration_long_long__std__ratio_1__1000000000__ std____1__common_type_std__chrono__duration_long_long__std__ratio_1__1000000000____std__chrono__duration_long_long__std__ratio_1__1000000000_____type;
typedef std____1__chrono__duration_long_double__std__ratio_1__1000000__ std____1__common_type_std__chrono__duration_long_double__std__ratio_1__1000000____std__chrono__duration_long_double__std__ratio_1__1000000_____type;
typedef std____1__chrono__duration_long_long__std__ratio_1__1000000__ std____1__common_type_std__chrono__duration_long_long__std__ratio_1__1000000____std__chrono__duration_long_long__std__ratio_1__1000000_____type;
typedef std____1__chrono__duration_long_double__std__ratio_1__1000__ std____1__common_type_std__chrono__duration_long_double__std__ratio_1__1000____std__chrono__duration_long_double__std__ratio_1__1000_____type;
typedef std____1__chrono__duration_long_double__std__ratio_3600__1__ std____1__common_type_std__chrono__duration_long_double__std__ratio_3600__1____std__chrono__duration_long_double__std__ratio_3600__1_____type;
typedef std____1__chrono__duration_long_double__std__ratio_60__1__ std____1__common_type_std__chrono__duration_long_double__std__ratio_60__1____std__chrono__duration_long_double__std__ratio_60__1_____type;
typedef std____1__chrono__duration_long_long__std__ratio_1__1000__ std____1__common_type_std__chrono__duration_long_long__std__ratio_1__1000____std__chrono__duration_long_long__std__ratio_1__1000_____type;
typedef std____1____bit_reference_std____bitset_0__0___true_ std____1__conditional_false__std____bit_const_reference_std____bitset_0__0____std____bit_reference_std____bitset_0__0___true____type;
typedef std____1____bit_const_reference_std____bitset_0__0__ std____1__conditional_true__std____bit_const_reference_std____bitset_0__0____std____bit_reference_std____bitset_0__0___true____type;
typedef std____1__chrono__duration_long__std__ratio_3600__1__ std____1__common_type_std__chrono__duration_long__std__ratio_3600__1____std__chrono__duration_long__std__ratio_3600__1_____type;
typedef std____1__chrono__duration_long_long__std__ratio_1__1000000000__ std____1__chrono__time_point_std__chrono__steady_clock__std__chrono__duration_long_long__std__ratio_1__1000000000_____duration;
typedef std____1__chrono__duration_long_long__std__ratio_1__1000000000__ std____1__chrono__time_point_std__chrono__system_clock__std__chrono__duration_long_long__std__ratio_1__1000000000_____duration;
typedef std____1__chrono__duration_long_long__std__ratio_1__1000000__ std____1__chrono__time_point_std__chrono__system_clock__std__chrono__duration_long_long__std__ratio_1__1000000_____duration;
typedef std____1__chrono__duration_long__std__ratio_60__1__ std____1__common_type_std__chrono__duration_long__std__ratio_60__1____std__chrono__duration_long__std__ratio_60__1_____type;
struct std____1__iterator_std__random_access_iterator_tag__char16_t__long__const_char16_t__P__const_char16_t__R_ {};
struct std____1__iterator_std__random_access_iterator_tag__char32_t__long__const_char32_t__P__const_char32_t__R_ {};
struct std____1__iterator_std__random_access_iterator_tag__wchar_t__long__const_wchar_t__P__const_wchar_t__R_ {};
typedef std____1__chrono__duration_long_double_ std____1__common_type_std__chrono__duration_long_double___std__chrono__duration_long_double____type;
typedef std____1__basic_string_char16_t_____rep *std____1____compressed_pair_elem_std__basic_string_char16_t_____rep__0__false___const_reference;
typedef std____1__basic_string_char32_t_____rep *std____1____compressed_pair_elem_std__basic_string_char32_t_____rep__0__false___const_reference;
typedef std____1__chrono__duration_long_long_ std____1__common_type_std__chrono__duration_long_long___std__chrono__duration_long_long____type;
typedef std____1__basic_string_wchar_t_____rep *std____1____compressed_pair_elem_std__basic_string_wchar_t_____rep__0__false___const_reference;
struct std____1__iterator_std__random_access_iterator_tag__char__long__const_char__P__const_char__R_ {};
typedef std____1__basic_string_char_____rep *std____1____compressed_pair_elem_std__basic_string_char_____rep__0__false___const_reference;
typedef std____1__basic_string_char16_t_____rep *std____1____compressed_pair_elem_std__basic_string_char16_t_____rep__0__false___reference;
typedef std____1__basic_string_char32_t_____rep *std____1____compressed_pair_elem_std__basic_string_char32_t_____rep__0__false___reference;
typedef std____1__basic_string_wchar_t_____rep *std____1____compressed_pair_elem_std__basic_string_wchar_t_____rep__0__false___reference;
typedef std____1__basic_string_char_____rep *std____1____compressed_pair_elem_std__basic_string_char_____rep__0__false___reference;
typedef std____1__allocator_char16_t_ *std____1____compressed_pair_elem_std__allocator_char16_t___1__true___const_reference;
typedef std____1__allocator_char32_t_ *std____1____compressed_pair_elem_std__allocator_char32_t___1__true___const_reference;
struct std____1__iterator_std__input_iterator_tag__wchar_t__long_long__wchar_t__P__wchar_t_ {};
typedef std____1__allocator_wchar_t_ *std____1____compressed_pair_elem_std__allocator_wchar_t___1__true___const_reference;
typedef std____1__allocator_char_ *std____1____compressed_pair_elem_std__allocator_char___1__true___const_reference;
typedef std____1__allocator_char16_t_ *std____1____compressed_pair_elem_std__allocator_char16_t___1__true___reference;
typedef std____1__allocator_char32_t_ *std____1____compressed_pair_elem_std__allocator_char32_t___1__true___reference;
typedef std____1__allocator_wchar_t_ *std____1____compressed_pair_elem_std__allocator_wchar_t___1__true___reference;
typedef unsigned long long *std____1__conditional_false__const_unsigned_long__P__unsigned_long__P___type;
typedef  unsigned long long *std____1__conditional_true__const_unsigned_long__P__unsigned_long__P___type;
struct std____1__iterator_std__input_iterator_tag__char__long_long__char__P__char_ {};
typedef std____1__allocator_char_ *std____1____compressed_pair_elem_std__allocator_char___1__true___reference;
typedef long double std____1__chrono__duration_long_double__std__ratio_1__1000000000____rep;
typedef long long std____1__chrono__duration_long_long__std__ratio_1__1000000000____rep;
enum INGetAvailableRestaurantReservationBookingDefaultsIntentResponseCode {INGetAvailableRestaurantReservationBookingDefaultsIntentResponseCodeSuccess = 0x0,INGetAvailableRestaurantReservationBookingDefaultsIntentResponseCodeFailure = 0x1,INGetAvailableRestaurantReservationBookingDefaultsIntentResponseCodeUnspecified = 0x2,};
typedef long double std____1__chrono__duration_long_double__std__ratio_1__1000000____rep;
struct std____1__iterator_std__output_iterator_tag__void__void__void__void_ {};
struct std____1__allocator_std____shared_ptr_dummy_rebind_allocator_type_ {};
typedef long long std____1__chrono__duration_long_long__std__ratio_1__1000000____rep;
typedef long double std____1__chrono__duration_long_double__std__ratio_1__1000____rep;
typedef long double std____1__chrono__duration_long_double__std__ratio_3600__1____rep;
enum INGetUserCurrentRestaurantReservationBookingsIntentResponseCode {INGetUserCurrentRestaurantReservationBookingsIntentResponseCodeSuccess = 0x0,INGetUserCurrentRestaurantReservationBookingsIntentResponseCodeFailure = 0x1,INGetUserCurrentRestaurantReservationBookingsIntentResponseCodeFailureRequestUnsatisfiable = 0x2,INGetUserCurrentRestaurantReservationBookingsIntentResponseCodeUnspecified = 0x3,};
typedef long double std____1__chrono__duration_long_double__std__ratio_60__1____rep;
typedef long long std____1__chrono__duration_long_long__std__ratio_1__1000____rep;
typedef void *UICollectionViewSupplementaryRegistrationConfigurationHandler;
typedef std____1__reverse_iterator_const_char16_t__P_ std____1__basic_string_view_char16_t___const_reverse_iterator;
typedef std____1__reverse_iterator_const_char32_t__P_ std____1__basic_string_view_char32_t___const_reverse_iterator;
struct std____1__iterator_std__random_access_iterator_tag__char16_t_ {};
struct std____1__iterator_std__random_access_iterator_tag__char32_t_ {};
struct std____1__unary_function_std__error_condition__unsigned_long_ {};
typedef std____1__reverse_iterator_const_wchar_t__P_ std____1__basic_string_view_wchar_t___const_reverse_iterator;
typedef std____1__money_base__pattern std____1__moneypunct_byname__CharT___International___pattern;
enum MACRO_NSFoundationVersionWithFileManagerResourceForkSupport {NSFoundationVersionWithFileManagerResourceForkSupport = 412,};
typedef void *UICollectionViewDiffableDataSourceSupplementaryViewProvider;
struct std____1__unary_function_unsigned_long_long__unsigned_long_ {};
typedef long double std____1____libcpp_numeric_limits_long_double__true___type;
typedef long long std____1__chrono__duration_long__std__ratio_3600__1____rep;
struct std____1__unary_function_unsigned___int128__unsigned_long_ {};
typedef void *MTLNewComputePipelineStateWithReflectionCompletionHandler;
typedef std____1__reverse_iterator_const_char__P_ std____1__basic_string_view_char___const_reverse_iterator;
typedef char std____1__codecvt_char16_t__char__mbstate_t___extern_type;
typedef short std____1__codecvt_char16_t__char__mbstate_t___intern_type;
typedef char std____1__codecvt_char32_t__char__mbstate_t___extern_type;
typedef int std____1__codecvt_char32_t__char__mbstate_t___intern_type;
typedef void *MTLNewRenderPipelineStateWithReflectionCompletionHandler;
typedef void *NSCollectionLayoutSectionVisibleItemsInvalidationHandler;
union dns_resource_record_t___ACCCA089A96433C3C2E2A191C0A26330 {dns_address_record_t *A;dns_domain_name_record_t *NS;dns_domain_name_record_t *MD;dns_domain_name_record_t *MF;dns_domain_name_record_t *CNAME;dns_SOA_record_t *SOA;dns_domain_name_record_t *MB;dns_domain_name_record_t *MG;dns_domain_name_record_t *MR;dns_raw_resource_record_t *DNSNULL;dns_WKS_record_t *WKS;dns_domain_name_record_t *PTR;dns_HINFO_record_t *HINFO;dns_MINFO_record_t *MINFO;dns_MX_record_t *MX;dns_TXT_record_t *TXT;dns_RP_record_t *RP;dns_AFSDB_record_t *AFSDB;dns_X25_record_t *X25;dns_ISDN_record_t *ISDN;dns_RT_record_t *RT;dns_in6_address_record_t *AAAA;dns_LOC_record_t *LOC;dns_SRV_record_t *SRV;};
typedef std____1__reverse_iterator_std____wrap_iter_const_char16_t__P__ std____1__basic_string_char16_t___const_reverse_iterator;
typedef std____1__reverse_iterator_std____wrap_iter_const_char32_t__P__ std____1__basic_string_char32_t___const_reverse_iterator;
typedef long long std____1__chrono__duration_long__std__ratio_60__1____rep;
typedef char std____1__codecvt_wchar_t__char__mbstate_t___extern_type;
typedef int std____1__codecvt_wchar_t__char__mbstate_t___intern_type;
typedef std____1__basic_string_wchar_t_ std____1__moneypunct_byname_wchar_t__false___string_type;
struct std____1__unary_function_std__error_code__unsigned_long_ {};
struct AVAssetResourceLoadingContentInformationRequestInternal;
enum HMCharacteristicValueCurrentHumidifierDehumidifierState {HMCharacteristicValueCurrentHumidifierDehumidifierStateInactive = 0x0,HMCharacteristicValueCurrentHumidifierDehumidifierStateIdle = 0x1,HMCharacteristicValueCurrentHumidifierDehumidifierStateHumidifying = 0x2,HMCharacteristicValueCurrentHumidifierDehumidifierStateDehumidifying = 0x3,};
enum INSetTaskAttributeTemporalEventTriggerUnsupportedReason {INSetTaskAttributeTemporalEventTriggerUnsupportedReasonTimeInPast = 0x1,INSetTaskAttributeTemporalEventTriggerUnsupportedReasonInvalidRecurrence = 0x2,};
typedef void *NSPersistentStoreAsynchronousFetchResultCompletionBlock;
typedef void *UICollectionLayoutListSwipeActionsConfigurationProvider;
typedef  short *std____1____wrap_iter_const_char16_t__P___iterator_type;
typedef  int *std____1____wrap_iter_const_char32_t__P___iterator_type;
typedef  short *std____1__iterator_traits_const_char16_t__P___reference;
typedef  int *std____1__iterator_traits_const_char32_t__P___reference;
typedef std____1__basic_string_wchar_t_ std____1__moneypunct_byname_wchar_t__true___string_type;
struct std____1__unary_function_unsigned_short__unsigned_long_ {};
enum HMCharacteristicValueTargetHumidifierDehumidifierState {HMCharacteristicValueTargetHumidifierDehumidifierStateAutomatic = 0x0,HMCharacteristicValueTargetHumidifierDehumidifierStateHumidify = 0x1,HMCharacteristicValueTargetHumidifierDehumidifierStateDehumidify = 0x2,};
enum MACRO_kLAPolicyDeviceOwnerAuthenticationWithBiometrics {kLAPolicyDeviceOwnerAuthenticationWithBiometrics = 1,kLAPolicyDeviceOwnerAuthentication = 2,};
enum UNNotificationContentExtensionMediaPlayPauseButtonType {UNNotificationContentExtensionMediaPlayPauseButtonTypeNone = 0x0,UNNotificationContentExtensionMediaPlayPauseButtonTypeDefault = 0x1,UNNotificationContentExtensionMediaPlayPauseButtonTypeOverlay = 0x2,};
struct at_block_features_t___95F68058DEB3F3BE2E9E414B0815CF1B {unsigned long long numColorChannels : 5;unsigned long long log2BlockBytes : 5;unsigned long long blockWidth : 12;unsigned long long blockHeight : 12;unsigned long long isHDR : 1;unsigned long long hasAlpha : 1;unsigned long long _reserved : 28;};
typedef short *std____1__basic_string_view_char16_t___const_reference;
typedef int *std____1__basic_string_view_char32_t___const_reference;
typedef std____1__basic_streambuf_wchar_t_ std____1__istreambuf_iterator_wchar_t___streambuf_type;
typedef  int *std____1__iterator_traits_const_wchar_t__P___reference;
typedef int std____1__moneypunct_byname_wchar_t__false___char_type;
typedef std____1__basic_streambuf_wchar_t_ std____1__ostreambuf_iterator_wchar_t___streambuf_type;
struct std____1__unary_function_unsigned_char__unsigned_long_ {};
struct std____1__unary_function_unsigned_long__unsigned_long_ {};
enum INGetAvailableRestaurantReservationBookingsIntentCode {INGetAvailableRestaurantReservationBookingsIntentCodeSuccess = 0x0,INGetAvailableRestaurantReservationBookingsIntentCodeFailure = 0x1,INGetAvailableRestaurantReservationBookingsIntentCodeFailureRequestUnsatisfiable = 0x2,INGetAvailableRestaurantReservationBookingsIntentCodeFailureRequestUnspecified = 0x3,};
typedef void *UICollectionViewLayoutInteractiveTransitionCompletion;
typedef double std____1____libcpp_numeric_limits_double__true___type;
typedef int *std____1__basic_string_view_wchar_t___const_reference;
typedef char std____1__codecvt_char__char__mbstate_t___extern_type;
typedef char std____1__codecvt_char__char__mbstate_t___intern_type;
typedef  short *std____1__iterator_traits_const_char16_t__P___pointer;
typedef  int *std____1__iterator_traits_const_char32_t__P___pointer;
typedef std____1__basic_string_char_ std____1__moneypunct_byname_char__false___string_type;
typedef int std____1__moneypunct_byname_wchar_t__true___char_type;
struct std____1__unary_function_unsigned_int__unsigned_long_ {};
enum UICollectionLayoutSectionOrthogonalScrollingBehavior {UICollectionLayoutSectionOrthogonalScrollingBehaviorNone = 0x0,UICollectionLayoutSectionOrthogonalScrollingBehaviorContinuous = 0x1,UICollectionLayoutSectionOrthogonalScrollingBehaviorContinuousGroupLeadingBoundary = 0x2,UICollectionLayoutSectionOrthogonalScrollingBehaviorPaging = 0x3,UICollectionLayoutSectionOrthogonalScrollingBehaviorGroupPaging = 0x4,UICollectionLayoutSectionOrthogonalScrollingBehaviorGroupPagingCentered = 0x5,};
typedef void *UICollectionViewCellRegistrationConfigurationHandler;
typedef float std____1____libcpp_numeric_limits_float__true___type;
struct std____1____libcpp_numeric_limits_long_double__true_ {};
typedef std____1__basic_string_wchar_t_ std____1____time_get_c_storage_wchar_t___string_type;
typedef short *std____1__basic_string_view_char16_t___const_pointer;
typedef int *std____1__basic_string_view_char32_t___const_pointer;
typedef char std____1__integral_constant_bool__false___value_type;
typedef std____1__basic_istream_wchar_t_ std____1__istreambuf_iterator_wchar_t___istream_type;
typedef  int *std____1__iterator_traits_const_wchar_t__P___pointer;
typedef std____1__basic_string_char_ std____1__moneypunct_byname_char__true___string_type;
typedef std____1__basic_ostream_wchar_t_ std____1__ostreambuf_iterator_wchar_t___ostream_type;
struct std____1__unary_function_long_double__unsigned_long_ {};
struct std____1__unary_function_signed_char__unsigned_long_ {};
typedef char std____1____libcpp_numeric_limits_bool__true___type;
struct std____1____make_unsigned_unsigned_long_long__true_ {};
typedef std____1__basic_string_wchar_t_ std____1__basic_istringstream_wchar_t___string_type;
typedef std____1__basic_string_wchar_t_ std____1__basic_ostringstream_wchar_t___string_type;
typedef int *std____1__basic_string_view_wchar_t___const_pointer;
struct std____1__codecvt_byname_char16_t__char__mbstate_t_ {};
struct std____1__codecvt_byname_char32_t__char__mbstate_t_ {};
typedef char std____1__integral_constant_bool__true___value_type;
typedef std____1__basic_streambuf_char_ std____1__istreambuf_iterator_char___streambuf_type;
typedef  char *std____1__iterator_traits_const_char__P___reference;
typedef char std____1__moneypunct_byname_char__false___char_type;
typedef std____1__basic_streambuf_char_ std____1__ostreambuf_iterator_char___streambuf_type;
enum HMCharacteristicValueCarbonMonoxideDetectionStatus {HMCharacteristicValueCarbonMonoxideDetectionStatusNotDetected = 0x0,HMCharacteristicValueCarbonMonoxideDetectionStatusDetected = 0x1,};
struct MPSIntersectionDistancePrimitiveIndexInstanceIndex {float distance;unsigned int primitiveIndex;unsigned int instanceIndex;};
typedef void *UIActivityViewControllerCompletionWithItemsHandler;
typedef void *UICollectionViewCompositionalLayoutSectionProvider;
struct axr_part_info_t___38C3DEC81229B66F67FB6D350D75FF5A {float x;float y;};
struct sqlite3_index_info__sqlite3_index_constraint_usage {int argvIndex;unsigned char omit;};
struct std____1____atomic_base_unsigned_long_long__false_ {long long __a_;};
struct std____1____shared_ptr_dummy_rebind_allocator_type;
struct std____1__basic_istringstream_wchar_t__vtbl_layout; 
struct std____1__basic_ostringstream_wchar_t__vtbl_layout; 
typedef std____1__reverse_iterator_std____wrap_iter_char16_t__P__ std____1__basic_string_char16_t___reverse_iterator;
typedef std____1__reverse_iterator_std____wrap_iter_char32_t__P__ std____1__basic_string_char32_t___reverse_iterator;
typedef char *std____1__basic_string_view_char___const_reference;
typedef std____1__basic_string_wchar_t_ std____1__basic_stringstream_wchar_t___string_type;
struct std____1__codecvt_byname_wchar_t__char__mbstate_t_ {};
typedef char std____1__moneypunct_byname_char__true___char_type;
struct std____1__unary_function_long_long__unsigned_long_ {};
struct AVMutableVideoCompositionLayerInstructionInternal;
enum HMCharacteristicValueCarbonDioxideDetectionStatus {HMCharacteristicValueCarbonDioxideDetectionStatusNotDetected = 0x0,HMCharacteristicValueCarbonDioxideDetectionStatusDetected = 0x1,};
enum HMCharacteristicValueLockMechanismLastKnownAction {HMCharacteristicValueLockMechanismLastKnownActionSecuredUsingPhysicalMovementInterior = 0x0,HMCharacteristicValueLockMechanismLastKnownActionUnsecuredUsingPhysicalMovementInterior = 0x1,HMCharacteristicValueLockMechanismLastKnownActionSecuredUsingPhysicalMovementExterior = 0x2,HMCharacteristicValueLockMechanismLastKnownActionUnsecuredUsingPhysicalMovementExterior = 0x3,HMCharacteristicValueLockMechanismLastKnownActionSecuredWithKeypad = 0x4,HMCharacteristicValueLockMechanismLastKnownActionUnsecuredWithKeypad = 0x5,HMCharacteristicValueLockMechanismLastKnownActionSecuredRemotely = 0x6,HMCharacteristicValueLockMechanismLastKnownActionUnsecuredRemotely = 0x7,HMCharacteristicValueLockMechanismLastKnownActionSecuredWithAutomaticSecureTimeout = 0x8,HMCharacteristicValueLockMechanismLastKnownActionSecuredUsingPhysicalMovement = 0x9,HMCharacteristicValueLockMechanismLastKnownActionUnsecuredUsingPhysicalMovement = 0xA,};
enum MACRO_kLAPolicyDeviceOwnerAuthenticationWithWatch {kLAPolicyDeviceOwnerAuthenticationWithWatch = 3,kLAPolicyDeviceOwnerAuthenticationWithBiometricsOrWatch = 4,};
enum NEHotspotConfigurationTTLSInnerAuthenticationType {NEHotspotConfigurationEAPTTLSInnerAuthenticationPAP = 0x0,NEHotspotConfigurationEAPTTLSInnerAuthenticationCHAP = 0x1,NEHotspotConfigurationEAPTTLSInnerAuthenticationMSCHAP = 0x2,NEHotspotConfigurationEAPTTLSInnerAuthenticationMSCHAPv2 = 0x3,NEHotspotConfigurationEAPTTLSInnerAuthenticationEAP = 0x4,};
struct _GLKQuaternion___91D1B2149FAC90180ECB9AC277F76009 {float x;float y;float z;float w;};
typedef void *nw_listener_advertised_endpoint_changed_handler_t;
struct std____1____make_signed_unsigned_long_long__true_ {};
typedef std____1__basic_string_char_ std____1____time_get_c_storage_char___string_type;
typedef short *std____1____wrap_iter_char16_t__P___iterator_type;
typedef int *std____1____wrap_iter_char32_t__P___iterator_type;
typedef short std____1__basic_string_view_char16_t___value_type;
typedef int std____1__basic_string_view_char32_t___value_type;
struct std____1__basic_stringstream_wchar_t__vtbl_layout; 
typedef std____1__basic_istream_char_ std____1__istreambuf_iterator_char___istream_type;
typedef int std____1__istreambuf_iterator_wchar_t___char_type;
typedef short *std____1__iterator_traits_char16_t__P___reference;
typedef int *std____1__iterator_traits_char32_t__P___reference;
typedef  char *std____1__iterator_traits_const_char__P___pointer;
typedef std____1__basic_string_wchar_t_ std____1__moneypunct_wchar_t__false___string_type;
typedef std____1__basic_ostream_char_ std____1__ostreambuf_iterator_char___ostream_type;
struct std____1__unary_function___int128__unsigned_long_ {};
struct std____1__unary_function_char16_t__unsigned_long_ {};
struct std____1__unary_function_char32_t__unsigned_long_ {};
enum INStartCallCallRecordToCallBackUnsupportedReason {INStartCallCallRecordToCallBackUnsupportedReasonNoMatchingCall = 0x1,};
enum PKIssuerProvisioningExtensionAuthorizationResult {PKIssuerProvisioningExtensionAuthorizationResultCanceled = 0x0,PKIssuerProvisioningExtensionAuthorizationResultAuthorized = 0x1,};
typedef void *sec_protocol_pre_shared_key_selection_complete_t;
struct std____1____libcpp_is_function_imp____dummy_type {};
typedef std____1__basic_string_char_ std____1__basic_istringstream_char___string_type;
typedef std____1__basic_string_char_ std____1__basic_ostringstream_char___string_type;
typedef std____1__allocator_char16_t_ std____1__basic_string_char16_t___allocator_type;
typedef std____1____wrap_iter_const_char16_t__P_ std____1__basic_string_char16_t___const_iterator;
typedef std____1__allocator_char32_t_ std____1__basic_string_char32_t___allocator_type;
typedef std____1____wrap_iter_const_char32_t__P_ std____1__basic_string_char32_t___const_iterator;
typedef char *std____1__basic_string_view_char___const_pointer;
typedef int std____1__basic_string_view_wchar_t___value_type;
typedef std____1__basic_string_wchar_t_ std____1__moneypunct_wchar_t__true___string_type;
struct std____1__unary_function_wchar_t__unsigned_long_ {};
struct AVCaptureSynchronizedMetadataObjectDataInternal;
enum HMCharacteristicValueCurrentSecuritySystemState {HMCharacteristicValueCurrentSecuritySystemStateStayArm = 0x0,HMCharacteristicValueCurrentSecuritySystemStateAwayArm = 0x1,HMCharacteristicValueCurrentSecuritySystemStateNightArm = 0x2,HMCharacteristicValueCurrentSecuritySystemStateDisarmed = 0x3,HMCharacteristicValueCurrentSecuritySystemStateTriggered = 0x4,};
enum INAddTasksTemporalEventTriggerUnsupportedReason {INAddTasksTemporalEventTriggerUnsupportedReasonTimeInPast = 0x1,INAddTasksTemporalEventTriggerUnsupportedReasonInvalidRecurrence = 0x2,};
enum INRequestPaymentCurrencyAmountUnsupportedReason {INRequestPaymentCurrencyAmountUnsupportedReasonPaymentsAmountBelowMinimum = 0x1,INRequestPaymentCurrencyAmountUnsupportedReasonPaymentsAmountAboveMaximum = 0x2,INRequestPaymentCurrencyAmountUnsupportedReasonPaymentsCurrencyUnsupported = 0x3,};
enum INUpdateMediaAffinityMediaItemUnsupportedReason {INUpdateMediaAffinityMediaItemUnsupportedReasonLoginRequired = 0x1,INUpdateMediaAffinityMediaItemUnsupportedReasonSubscriptionRequired = 0x2,INUpdateMediaAffinityMediaItemUnsupportedReasonUnsupportedMediaType = 0x3,INUpdateMediaAffinityMediaItemUnsupportedReasonExplicitContentSettings = 0x4,INUpdateMediaAffinityMediaItemUnsupportedReasonCellularDataSettings = 0x5,INUpdateMediaAffinityMediaItemUnsupportedReasonRestrictedContent = 0x6,INUpdateMediaAffinityMediaItemUnsupportedReasonServiceUnavailable = 0x7,INUpdateMediaAffinityMediaItemUnsupportedReasonRegionRestriction = 0x8,};
enum UICollectionViewFlowLayoutSectionInsetReference {UICollectionViewFlowLayoutSectionInsetFromContentInset = 0x0,UICollectionViewFlowLayoutSectionInsetFromSafeArea = 0x1,UICollectionViewFlowLayoutSectionInsetFromLayoutMargins = 0x2,};
typedef void *nw_group_descriptor_enumerate_endpoints_block_t;
struct std____1____libcpp_numeric_limits_double__true_ {};
struct std____1____make_unsigned_unsigned_short__true_ {};
struct std____1__basic_istringstream_char__vtbl_layout; 
struct std____1__basic_ostringstream_char__vtbl_layout; 
typedef std____1__basic_string_wchar_t_ std____1__basic_stringbuf_wchar_t___string_type;
typedef std____1__basic_string_char_ std____1__basic_stringstream_char___string_type;
struct std____1__codecvt_byname_char__char__mbstate_t_ {};
struct std____1__istreambuf_iterator_wchar_t_____proxy;
typedef short *std____1__iterator_traits_char16_t__P___pointer;
typedef int *std____1__iterator_traits_char32_t__P___pointer;
typedef int std____1__moneypunct_wchar_t__false___char_type;
typedef std____1__basic_string_wchar_t_ std____1__time_get_byname_wchar_t___string_type;
struct std____1__unary_function_double__unsigned_long_ {};
struct AVAssetDownloadStorageManagementPolicyInternal;
typedef void (*CFPlugInInstanceDeallocateInstanceDataFunction)(void *);
typedef void *CHHapticAdvancedPatternPlayerCompletionHandler;
enum EAWiFiUnconfiguredAccessoryConfigurationStatus {EAWiFiUnconfiguredAccessoryConfigurationStatusSuccess = 0x0,EAWiFiUnconfiguredAccessoryConfigurationStatusUserCancelledConfiguration = 0x1,EAWiFiUnconfiguredAccessoryConfigurationStatusFailed = 0x2,};
enum HKCategoryValueEnvironmentalAudioExposureEvent {HKCategoryValueEnvironmentalAudioExposureEventMomentaryLimit = 0x1,};
enum HMCharacteristicValueLockPhysicalControlsState {HMCharacteristicValueLockPhysicalControlsStateNotLocked = 0x0,HMCharacteristicValueLockPhysicalControlsStateLocked = 0x1,};
enum HMCharacteristicValueTargetSecuritySystemState {HMCharacteristicValueTargetSecuritySystemStateStayArm = 0x0,HMCharacteristicValueTargetSecuritySystemStateAwayArm = 0x1,HMCharacteristicValueTargetSecuritySystemStateNightArm = 0x2,HMCharacteristicValueTargetSecuritySystemStateDisarm = 0x3,};
typedef void *UICollectionViewDiffableDataSourceCellProvider;
struct _GLKMatrix2___9B57ABAB53129359FC278B413DD04FEA {float m00;float m01;float m10;float m11;};
struct _GLKMatrix3___BB947FF03F7651DA078F6D1ECDA4F9F6 {float m00;float m01;float m02;float m10;float m11;float m12;float m20;float m21;float m22;};
struct _GLKMatrix4___149E04C8607449E2E7257C0CA95EBF69 {float m00;float m01;float m02;float m03;float m10;float m11;float m12;float m13;float m20;float m21;float m22;float m23;float m30;float m31;float m32;float m33;};
struct _GLKVector2___38C3DEC81229B66F67FB6D350D75FF5A {float x;float y;};
struct _GLKVector2___EA2C0D501FE1607857099885D8D2A78D {float s;float t;};
struct _GLKVector3___13ED18E8C21063FF516926CE05468478 {float s;float t;float p;};
struct _GLKVector3___393C16A032292777F0C3725FFB2C0008 {float x;float y;float z;};
struct _GLKVector3___7B7AD9436E53DE341D9DDF6F0536A99B {float r;float g;float b;};
struct _GLKVector4___43F634250C0E94E2A09AB0840E4770D1 {float r;float g;float b;float a;};
struct _GLKVector4___8049FD4CE32D3F768A2FD438003016CA {float s;float t;float p;float q;};
struct _GLKVector4___91D1B2149FAC90180ECB9AC277F76009 {float x;float y;float z;float w;};
struct std____1____atomic_base_unsigned_short__false_ {short __a_;};
struct std____1____libcpp_numeric_limits_float__true_ {};
struct std____1____make_unsigned_unsigned_long__true_ {};
typedef short *std____1__allocator_char16_t___const_reference;
typedef int *std____1__allocator_char32_t___const_reference;
struct std____1__basic_stringstream_char__vtbl_layout; 
typedef std____1__basic_string_wchar_t_ std____1__collate_byname_wchar_t___string_type;
typedef char std____1__istreambuf_iterator_char___char_type;
typedef std____1__basic_string_char_ std____1__moneypunct_char__false___string_type;
typedef int std____1__moneypunct_wchar_t__true___char_type;
struct std____1__unary_function_float__unsigned_long_ {};
struct std____1__unary_function_short__unsigned_long_ {};
enum ASAuthorizationAppleIDProviderCredentialState {ASAuthorizationAppleIDProviderCredentialRevoked = 0x0,ASAuthorizationAppleIDProviderCredentialAuthorized = 0x1,ASAuthorizationAppleIDProviderCredentialNotFound = 0x2,ASAuthorizationAppleIDProviderCredentialTransferred = 0x3,};
struct AVAsynchronousCIImageFilteringRequestInternal;
struct AVAsynchronousVideoCompositionRequestInternal;
struct AVCaptureSynchronizedSampleBufferDataInternal;
struct AVCaptureWhiteBalanceTemperatureAndTintValues {float temperature;float tint;};
enum HMCharacteristicValueCurrentHeaterCoolerState {HMCharacteristicValueCurrentHeaterCoolerStateInactive = 0x0,HMCharacteristicValueCurrentHeaterCoolerStateIdle = 0x1,HMCharacteristicValueCurrentHeaterCoolerStateHeating = 0x2,HMCharacteristicValueCurrentHeaterCoolerStateCooling = 0x3,};
enum HMCharacteristicValueTargetLockMechanismState {HMCharacteristicValueTargetLockMechanismStateUnsecured = 0x0,HMCharacteristicValueTargetLockMechanismStateSecured = 0x1,};
enum INSetDefrosterSettingsInCarIntentResponseCode {INSetDefrosterSettingsInCarIntentResponseCodeUnspecified = 0x0,INSetDefrosterSettingsInCarIntentResponseCodeReady = 0x1,INSetDefrosterSettingsInCarIntentResponseCodeInProgress = 0x2,INSetDefrosterSettingsInCarIntentResponseCodeSuccess = 0x3,INSetDefrosterSettingsInCarIntentResponseCodeFailure = 0x4,INSetDefrosterSettingsInCarIntentResponseCodeFailureRequiringAppLaunch = 0x5,};
typedef NSArray MPSCNNInstanceNormalizationGradientStateBatch;
typedef void *nw_parameters_iterate_interface_types_block_t;
struct std____1____atomic_base_unsigned_char__false_ {char __a_;};
struct std____1____atomic_base_unsigned_long__false_ {long long __a_;};
struct std____1____libcpp_numeric_limits_bool__true_ {};
struct std____1____make_signed_unsigned_short__true_ {};
struct std____1____make_unsigned_unsigned_int__true_ {};
typedef int *std____1__allocator_wchar_t___const_reference;
struct std____1__basic_iostream_wchar_t__vtbl_layout; 
typedef int std____1__basic_streambuf_wchar_t___char_type;
typedef std____1__basic_string_view_char16_t_ std____1__basic_string_char16_t_____self_view;
typedef std____1__basic_string_view_char32_t_ std____1__basic_string_char32_t_____self_view;
typedef char std____1__basic_string_view_char___value_type;
typedef int std____1__basic_stringbuf_wchar_t___char_type;
typedef std____1__basic_string_char_ std____1__moneypunct_char__true___string_type;
struct std____1__unary_function_bool__unsigned_long_ {};
struct std____1__unary_function_char__unsigned_long_ {};
struct std____1__unary_function_long__unsigned_long_ {};
typedef std____1__mutex std____1__unique_lock_std__mutex___mutex_type;
typedef void *ACAccountStoreRequestAccessCompletionHandler;
typedef void *ALAssetsLibraryGroupsEnumerationResultsBlock;
struct AVAssetWriterInputPixelBufferAdaptorInternal;
enum AVCaptureDeviceTransportControlsPlaybackMode {AVCaptureDeviceTransportControlsNotPlayingMode = 0x0,AVCaptureDeviceTransportControlsPlayingMode = 0x1,};
struct AVMutableVideoCompositionInstructionInternal;
enum HMCharacteristicValueCurrentAirPurifierState {HMCharacteristicValueCurrentAirPurifierStateInactive = 0x0,HMCharacteristicValueCurrentAirPurifierStateIdle = 0x1,HMCharacteristicValueCurrentAirPurifierStateActive = 0x2,};
enum HMCharacteristicValueSecuritySystemAlarmType {HMCharacteristicValueSecuritySystemAlarmTypeNoAlarm = 0x0,HMCharacteristicValueSecuritySystemAlarmTypeUnknown = 0x1,};
enum HMCharacteristicValueTargetHeaterCoolerState {HMCharacteristicValueTargetHeaterCoolerStateAutomatic = 0x0,HMCharacteristicValueTargetHeaterCoolerStateHeat = 0x1,HMCharacteristicValueTargetHeaterCoolerStateCool = 0x2,};
enum INSendPaymentCurrencyAmountUnsupportedReason {INSendPaymentCurrencyAmountUnsupportedReasonPaymentsAmountBelowMinimum = 0x1,INSendPaymentCurrencyAmountUnsupportedReasonPaymentsAmountAboveMaximum = 0x2,INSendPaymentCurrencyAmountUnsupportedReasonPaymentsCurrencyUnsupported = 0x3,};
typedef NSArray MPSCNNConvolutionTransposeGradientStateBatch;
enum NSPersistentCloudKitContainerEventResultType {NSPersistentCloudKitContainerEventResultTypeEvents = 0x0,NSPersistentCloudKitContainerEventResultTypeCountEvents = 0x1,};
enum PKAddShareablePassConfigurationPrimaryAction {PKAddShareablePassConfigurationPrimaryActionAdd = 0x0,PKAddShareablePassConfigurationPrimaryActionShare = 0x1,};
enum PKAutomaticPassPresentationSuppressionResult {PKAutomaticPassPresentationSuppressionResultNotSupported = 0x0,PKAutomaticPassPresentationSuppressionResultAlreadyPresenting = 0x1,PKAutomaticPassPresentationSuppressionResultDenied = 0x2,PKAutomaticPassPresentationSuppressionResultCancelled = 0x3,PKAutomaticPassPresentationSuppressionResultSuccess = 0x4,};
enum UNNotificationContentExtensionResponseOption {UNNotificationContentExtensionResponseOptionDoNotDismiss = 0x0,UNNotificationContentExtensionResponseOptionDismiss = 0x1,UNNotificationContentExtensionResponseOptionDismissAndForwardAction = 0x2,};
struct sqlite3_index_info__sqlite3_index_constraint {int iColumn;unsigned char op;unsigned char usable;int iTermOffset;};
struct std____1____apply_cv_mf_false__false__false_ {};
struct std____1____atomic_base_unsigned_int__false_ {int __a_;};
struct std____1____invoke_void_return_wrapper_void_ {};
struct std____1____make_signed_unsigned_long__true_ {};
struct std____1____make_unsigned___uint128_t__true_ {};
typedef short *std____1__allocator_char16_t___const_pointer;
typedef int *std____1__allocator_char32_t___const_pointer;
struct std____1__basic_istream_wchar_t__vtbl_layout; 
struct std____1__basic_ostream_wchar_t__vtbl_layout; 
typedef short std____1__basic_string_char16_t___value_type;
typedef int std____1__basic_string_char32_t___value_type;
typedef std____1__basic_string_char_ std____1__basic_stringbuf_char___string_type;
typedef long double std____1__chrono__duration_long_double___rep;
typedef int std____1__collate_byname_wchar_t___char_type;
struct std____1__istreambuf_iterator_char_____proxy;
typedef char std____1__moneypunct_char__false___char_type;
typedef std____1__basic_string_char_ std____1__time_get_byname_char___string_type;
struct std____1__unary_function_int__unsigned_long_ {};
typedef void *ABAddressBookRequestAccessCompletionHandler;
typedef void *ASWebAuthenticationSessionCompletionHandler;
struct AVAssetReaderVideoCompositionOutputInternal;
enum AVAudioSessionSilenceSecondaryAudioHintType {AVAudioSessionSilenceSecondaryAudioHintTypeBegin = 0x1,AVAudioSessionSilenceSecondaryAudioHintTypeEnd = 0x0,};
struct AVCaptureSynchronizedDataCollectionInternal;
struct AVMetadataMachineReadableCodeObjectInternal;
struct AVVideoCompositionCoreAnimationToolInternal;
typedef void *GCControllerDirectionPadValueChangedHandler;
enum HMCharacteristicValueTargetAirPurifierState {HMCharacteristicValueTargetAirPurifierStateManual = 0x0,HMCharacteristicValueTargetAirPurifierStateAutomatic = 0x1,};
enum INAddMediaMediaDestinationUnsupportedReason {INAddMediaMediaDestinationUnsupportedReasonPlaylistNameNotFound = 0x1,INAddMediaMediaDestinationUnsupportedReasonPlaylistNotEditable = 0x2,};
enum INSetClimateSettingsInCarIntentResponseCode {INSetClimateSettingsInCarIntentResponseCodeUnspecified = 0x0,INSetClimateSettingsInCarIntentResponseCodeReady = 0x1,INSetClimateSettingsInCarIntentResponseCodeInProgress = 0x2,INSetClimateSettingsInCarIntentResponseCodeSuccess = 0x3,INSetClimateSettingsInCarIntentResponseCodeFailure = 0x4,INSetClimateSettingsInCarIntentResponseCodeFailureRequiringAppLaunch = 0x5,};
typedef void *MTLNewComputePipelineStateCompletionHandler;
enum UIImagePickerControllerImageURLExportPreset {UIImagePickerControllerImageURLExportPresetCompatible = 0x0,UIImagePickerControllerImageURLExportPresetCurrent = 0x1,};
typedef void *nw_browser_browse_results_changed_handler_t;
typedef void *nw_connection_group_state_changed_handler_t;
typedef void *nw_ethernet_channel_state_changed_handler_t;
typedef void *nw_protocol_stack_iterate_protocols_block_t;
struct std____1____apply_cv_mf_false__false__true_ {};
struct std____1____apply_cv_mf_false__true__false_ {};
struct std____1____apply_cv_mf_true__false__false_ {};
struct std____1____atomic_base_signed_char__false_ {char __a_;};
struct std____1____make_signed_unsigned_int__true_ {};
struct std____1____make_unsigned___int128_t__true_ {};
typedef int *std____1__allocator_wchar_t___const_pointer;
struct std____1__basic_istringstream_wchar_t__vtbl; 
struct std____1__basic_ostringstream_wchar_t__vtbl; 
typedef int std____1__basic_string_wchar_t___value_type;
typedef std____1__basic_string_char_ std____1__collate_byname_char___string_type;
typedef char std____1__moneypunct_char__true___char_type;
typedef void *AUImplementorDisplayNameWithLengthCallback;
struct AVAssetReaderOutputMetadataAdaptorInternal;
struct AVAssetReaderSampleReferenceOutputInternal;
enum AVAudioEnvironmentDistanceAttenuationModel {AVAudioEnvironmentDistanceAttenuationModelExponential = 0x1,AVAudioEnvironmentDistanceAttenuationModelInverse = 0x2,AVAudioEnvironmentDistanceAttenuationModelLinear = 0x3,};
struct AVVideoCompositionLayerInstructionInternal;
typedef void *EKEventStoreRequestAccessCompletionHandler;
enum HMCharacteristicValueCurrentHeatingCooling {HMCharacteristicValueCurrentHeatingCoolingOff = 0x0,HMCharacteristicValueCurrentHeatingCoolingHeat = 0x1,HMCharacteristicValueCurrentHeatingCoolingCool = 0x2,};
enum INAddTasksTargetTaskListConfirmationReason {INAddTasksTargetTaskListConfirmationReasonListShouldBeCreated = 0x1,};
enum INGetCarPowerLevelStatusIntentResponseCode {INGetCarPowerLevelStatusIntentResponseCodeUnspecified = 0x0,INGetCarPowerLevelStatusIntentResponseCodeReady = 0x1,INGetCarPowerLevelStatusIntentResponseCodeInProgress = 0x2,INGetCarPowerLevelStatusIntentResponseCodeSuccess = 0x3,INGetCarPowerLevelStatusIntentResponseCodeFailure = 0x4,INGetCarPowerLevelStatusIntentResponseCodeFailureRequiringAppLaunch = 0x5,};
enum INSearchForMediaMediaItemUnsupportedReason {INSearchForMediaMediaItemUnsupportedReasonLoginRequired = 0x1,INSearchForMediaMediaItemUnsupportedReasonSubscriptionRequired = 0x2,INSearchForMediaMediaItemUnsupportedReasonUnsupportedMediaType = 0x3,INSearchForMediaMediaItemUnsupportedReasonExplicitContentSettings = 0x4,INSearchForMediaMediaItemUnsupportedReasonCellularDataSettings = 0x5,INSearchForMediaMediaItemUnsupportedReasonRestrictedContent = 0x6,INSearchForMediaMediaItemUnsupportedReasonServiceUnavailable = 0x7,INSearchForMediaMediaItemUnsupportedReasonRegionRestriction = 0x8,};
enum INSearchForNotebookItemsIntentResponseCode {INSearchForNotebookItemsIntentResponseCodeUnspecified = 0x0,INSearchForNotebookItemsIntentResponseCodeReady = 0x1,INSearchForNotebookItemsIntentResponseCodeInProgress = 0x2,INSearchForNotebookItemsIntentResponseCodeSuccess = 0x3,INSearchForNotebookItemsIntentResponseCodeFailure = 0x4,INSearchForNotebookItemsIntentResponseCodeFailureRequiringAppLaunch = 0x5,};
enum INStartCallCallCapabilityUnsupportedReason {INStartCallCallCapabilityUnsupportedReasonVideoCallUnsupported = 0x1,INStartCallCallCapabilityUnsupportedReasonMicrophoneNotAccessible = 0x2,INStartCallCallCapabilityUnsupportedReasonCameraNotAccessible = 0x3,};
enum MACRO_MTLMaxResourceStatePassSampleBuffers {MTLMaxResourceStatePassSampleBuffers = 4,};
enum MACRO_kLACredentialTypeApplicationPassword {kLACredentialTypeApplicationPassword = 0,kLACredentialSmartCardPIN = -3,};
typedef NSArray MPSCNNGroupNormalizationGradientStateBatch;
typedef void *MTLNewRenderPipelineStateCompletionHandler;
enum UIScrollViewContentInsetAdjustmentBehavior {UIScrollViewContentInsetAdjustmentAutomatic = 0x0,UIScrollViewContentInsetAdjustmentScrollableAxes = 0x1,UIScrollViewContentInsetAdjustmentNever = 0x2,UIScrollViewContentInsetAdjustmentAlways = 0x3,};
struct std____1____apply_cv_mf_false__true__true_ {};
struct std____1____apply_cv_mf_true__false__true_ {};
struct std____1____apply_cv_mf_true__true__false_ {};
struct std____1____make_signed___uint128_t__true_ {};
struct std____1____make_unsigned_long_long__true_ {};
typedef char *std____1__allocator_char___const_reference;
struct std____1__basic_iostream_char__vtbl_layout; 
typedef char std____1__basic_streambuf_char___char_type;
typedef std____1____wrap_iter_char16_t__P_ std____1__basic_string_char16_t___iterator;
typedef std____1____wrap_iter_char32_t__P_ std____1__basic_string_char32_t___iterator;
typedef char std____1__basic_stringbuf_char___char_type;
struct std____1__basic_stringstream_wchar_t__vtbl; 
typedef short std____1__char_traits_char16_t___char_type;
typedef int std____1__char_traits_char32_t___char_type;
typedef long long std____1__chrono__duration_long_long___rep;
typedef std____1__chrono__time_point_std__chrono__steady_clock__std__chrono__duration_long_long__std__ratio_1__1000000000___ std____1__chrono__steady_clock__time_point;
typedef std____1__chrono__time_point_std__chrono__system_clock__std__chrono__duration_long_long__std__ratio_1__1000000___ std____1__chrono__system_clock__time_point;
typedef long double std____1__complex_long_double___value_type;
struct AVAssetResourceLoadingDataRequestInternal;
struct AVAssetWriterInputMetadataAdaptorInternal;
struct AVAssetWriterInputPassDescriptionInternal;
enum HMCharacteristicValueSmokeDetectionStatus {HMCharacteristicValueSmokeDetectionStatusNone = 0x0,HMCharacteristicValueSmokeDetectionStatusDetected = 0x1,};
enum INGetReservationDetailsIntentResponseCode {INGetReservationDetailsIntentResponseCodeUnspecified = 0x0,INGetReservationDetailsIntentResponseCodeReady = 0x1,INGetReservationDetailsIntentResponseCodeInProgress = 0x2,INGetReservationDetailsIntentResponseCodeSuccess = 0x3,INGetReservationDetailsIntentResponseCodeFailure = 0x4,INGetReservationDetailsIntentResponseCodeFailureRequiringAppLaunch = 0x5,};
enum INPlayMediaPlaybackSpeedUnsupportedReason {INPlayMediaPlaybackSpeedUnsupportedReasonBelowMinimum = 0x1,INPlayMediaPlaybackSpeedUnsupportedReasonAboveMaximum = 0x2,};
typedef void *MPSAccelerationStructureCompletionHandler;
typedef void *NSCollectionLayoutGroupCustomItemProvider;
enum NSPersistentStoreUbiquitousTransitionType {NSPersistentStoreUbiquitousTransitionTypeAccountAdded = 0x1,NSPersistentStoreUbiquitousTransitionTypeAccountRemoved = 0x2,NSPersistentStoreUbiquitousTransitionTypeContentRemoved = 0x3,NSPersistentStoreUbiquitousTransitionTypeInitialImportCompleted = 0x4,};
typedef void *SLComposeSheetConfigurationItemTapHandler;
typedef void *UIActivityViewControllerCompletionHandler;
enum UIPageViewControllerNavigationOrientation {UIPageViewControllerNavigationOrientationHorizontal = 0x0,UIPageViewControllerNavigationOrientationVertical = 0x1,};
typedef void *UITableViewDiffableDataSourceCellProvider;
union glob_t___19FCDAD5B7B8F1E3E1965FC150EC2E21 {int (*gl_errfunc)( char *, int);void *gl_errblk;};
struct sqlite3_index_info__sqlite3_index_orderby {int iColumn;unsigned char desc;};
struct std____1____apply_cv_mf_true__true__true_ {};
struct std____1____atomic_base_long_long__false_ {long long __a_;};
typedef std____1____bit_const_reference_std____bitset_0__0__ std____1____bitset_0__0___const_reference;
struct std____1____make_signed___int128_t__true_ {};
struct std____1____shared_weak_count_vtbl_layout; 
struct std____1__basic_istream_char__vtbl_layout; 
struct std____1__basic_ostream_char__vtbl_layout; 
typedef int std____1__char_traits_wchar_t___char_type;
typedef char std____1__collate_byname_char___char_type;
typedef std____1__basic_string_wchar_t_ std____1__money_get_wchar_t___string_type;
typedef std____1__basic_string_wchar_t_ std____1__money_put_wchar_t___string_type;
typedef void *ALAssetsLibraryWriteImageCompletionBlock;
typedef void *ALAssetsLibraryWriteVideoCompletionBlock;
struct AVMutableAudioMixInputParametersInternal;
struct AVSampleBufferRenderSynchronizerInternal;
typedef void (*CGDataProviderReleaseBytePointerCallback)(void *,  void *);
enum CLKComplicationTimelineAnimationBehavior {CLKComplicationTimelineAnimationBehaviorNever = 0x0,CLKComplicationTimelineAnimationBehaviorGrouped = 0x1,CLKComplicationTimelineAnimationBehaviorAlways = 0x2,};
enum INRestaurantReservationUserBookingStatus {INRestaurantReservationUserBookingStatusPending = 0x0,INRestaurantReservationUserBookingStatusConfirmed = 0x1,INRestaurantReservationUserBookingStatusDenied = 0x2,};
enum INSetSeatSettingsInCarIntentResponseCode {INSetSeatSettingsInCarIntentResponseCodeUnspecified = 0x0,INSetSeatSettingsInCarIntentResponseCodeReady = 0x1,INSetSeatSettingsInCarIntentResponseCodeInProgress = 0x2,INSetSeatSettingsInCarIntentResponseCodeSuccess = 0x3,INSetSeatSettingsInCarIntentResponseCodeFailure = 0x4,INSetSeatSettingsInCarIntentResponseCodeFailureRequiringAppLaunch = 0x5,};
struct MTLTilePipelineColorAttachmentDescriptor;
enum NSURLSessionTaskMetricsResourceFetchType {NSURLSessionTaskMetricsResourceFetchTypeUnknown = 0x0,NSURLSessionTaskMetricsResourceFetchTypeNetworkLoad = 0x1,NSURLSessionTaskMetricsResourceFetchTypeServerPush = 0x2,NSURLSessionTaskMetricsResourceFetchTypeLocalCache = 0x3,};
enum NSXMLParserExternalEntityResolvingPolicy {NSXMLParserResolveExternalEntitiesNever = 0x0,NSXMLParserResolveExternalEntitiesNoNetwork = 0x1,NSXMLParserResolveExternalEntitiesSameOriginOnly = 0x2,NSXMLParserResolveExternalEntitiesAlways = 0x3,};
enum SFSafariViewControllerDismissButtonStyle {SFSafariViewControllerDismissButtonStyleDone = 0x0,SFSafariViewControllerDismissButtonStyleClose = 0x1,SFSafariViewControllerDismissButtonStyleCancel = 0x2,};
typedef void *SLComposeViewControllerCompletionHandler;
enum UIImagePickerControllerCameraCaptureMode {UIImagePickerControllerCameraCaptureModePhoto = 0x0,UIImagePickerControllerCameraCaptureModeVideo = 0x1,};
union ifkpi___41FCD958378792E4BAD3BFA006FE005B {void *ifk_ptr;int ifk_value;};
typedef void *nw_parameters_configure_protocol_block_t;
typedef void *nw_parameters_iterate_interfaces_block_t;
typedef void *nw_report_resolution_report_enumerator_t;
struct os_workgroup_max_parallel_threads_attr_s;
struct std____1____atomic_base_char16_t__false_ {short __a_;};
struct std____1____atomic_base_char32_t__false_ {int __a_;};
typedef std____1____bit_iterator_std____bitset_0__0___true__0_ std____1____bitset_0__0___const_iterator;
struct std____1____check_tuple_constructor_fail {};
struct std____1____make_signed_long_long__true_ {};
typedef short *std____1__allocator_char16_t___reference;
typedef int *std____1__allocator_char32_t___reference;
typedef char *std____1__allocator_char___const_pointer;
typedef  void *std____1__allocator_void___const_pointer;
struct std____1__basic_ios_wchar_t__vtbl_layout; 
struct std____1__basic_istringstream_char__vtbl; 
struct std____1__basic_ostringstream_char__vtbl; 
typedef char std____1__basic_string_char___value_type;
struct std____1__integral_constant_bool__false_ {};
typedef std____1__basic_string_wchar_t_ std____1__messages_wchar_t___string_type;
typedef std____1__basic_string_wchar_t_ std____1__numpunct_wchar_t___string_type;
struct AVAssetResourceLoadingRequestorInternal;
enum AVAudioPlayerNodeCompletionCallbackType {AVAudioPlayerNodeCompletionDataConsumed = 0x0,AVAudioPlayerNodeCompletionDataRendered = 0x1,AVAudioPlayerNodeCompletionDataPlayedBack = 0x2,};
struct AVCaptureDataOutputSynchronizerInternal;
struct AVCaptureWhiteBalanceChromaticityValues {float x;float y;};
struct AVVideoCompositionRenderContextInternal;
enum EAWiFiUnconfiguredAccessoryBrowserState {EAWiFiUnconfiguredAccessoryBrowserStateWiFiUnavailable = 0x0,EAWiFiUnconfiguredAccessoryBrowserStateStopped = 0x1,EAWiFiUnconfiguredAccessoryBrowserStateSearching = 0x2,EAWiFiUnconfiguredAccessoryBrowserStateConfiguring = 0x3,};
typedef void *GCControllerButtonTouchedChangedHandler;
enum HMCharacteristicValueAirParticulateSize {HMCharacteristicValueAirParticulateSize2_5 = 0x0,HMCharacteristicValueAirParticulateSize10 = 0x1,};
enum HMCharacteristicValueConfigurationState {HMCharacteristicValueConfigurationStateNotConfigured = 0x0,HMCharacteristicValueConfigurationStateConfigured = 0x1,};
enum HMCharacteristicValueLockMechanismState {HMCharacteristicValueLockMechanismStateUnsecured = 0x0,HMCharacteristicValueLockMechanismStateSecured = 0x1,HMCharacteristicValueLockMechanismStateJammed = 0x2,HMCharacteristicValueLockMechanismStateUnknown = 0x3,};
enum INSendMessageRecipientUnsupportedReason {INSendMessageRecipientUnsupportedReasonNoAccount = 0x1,INSendMessageRecipientUnsupportedReasonOffline = 0x2,INSendMessageRecipientUnsupportedReasonMessagingServiceNotEnabledForRecipient = 0x3,INSendMessageRecipientUnsupportedReasonNoValidHandle = 0x4,INSendMessageRecipientUnsupportedReasonRequestedHandleInvalid = 0x5,INSendMessageRecipientUnsupportedReasonNoHandleForLabel = 0x6,};
enum INSetAudioSourceInCarIntentResponseCode {INSetAudioSourceInCarIntentResponseCodeUnspecified = 0x0,INSetAudioSourceInCarIntentResponseCodeReady = 0x1,INSetAudioSourceInCarIntentResponseCodeInProgress = 0x2,INSetAudioSourceInCarIntentResponseCodeSuccess = 0x3,INSetAudioSourceInCarIntentResponseCodeFailure = 0x4,INSetAudioSourceInCarIntentResponseCodeFailureRequiringAppLaunch = 0x5,};
enum INSetMessageAttributeIntentResponseCode {INSetMessageAttributeIntentResponseCodeUnspecified = 0x0,INSetMessageAttributeIntentResponseCodeReady = 0x1,INSetMessageAttributeIntentResponseCodeInProgress = 0x2,INSetMessageAttributeIntentResponseCodeSuccess = 0x3,INSetMessageAttributeIntentResponseCodeFailure = 0x4,INSetMessageAttributeIntentResponseCodeFailureRequiringAppLaunch = 0x5,INSetMessageAttributeIntentResponseCodeFailureMessageNotFound = 0x6,INSetMessageAttributeIntentResponseCodeFailureMessageAttributeNotSet = 0x7,};
enum INUpdateMediaAffinityIntentResponseCode {INUpdateMediaAffinityIntentResponseCodeUnspecified = 0x0,INUpdateMediaAffinityIntentResponseCodeReady = 0x1,INUpdateMediaAffinityIntentResponseCodeInProgress = 0x2,INUpdateMediaAffinityIntentResponseCodeSuccess = 0x3,INUpdateMediaAffinityIntentResponseCodeFailure = 0x4,INUpdateMediaAffinityIntentResponseCodeFailureRequiringAppLaunch = 0x5,};
enum UIPageViewControllerNavigationDirection {UIPageViewControllerNavigationDirectionForward = 0x0,UIPageViewControllerNavigationDirectionReverse = 0x1,};
struct _bkt___880F21833111A601F09DBE5770BB9990 {_bkt *tqe_next;_bkt **tqe_prev;};
struct dyld_chained_ptr_64_kernel_cache_rebase {unsigned long long target : 30;unsigned long long cacheLevel : 2;unsigned long long diversity : 16;unsigned long long addrDiv : 1;unsigned long long key : 2;unsigned long long next : 12;unsigned long long isAuth : 1;};
typedef void *nw_data_transfer_report_collect_block_t;
typedef void *sec_protocol_pre_shared_key_selection_t;
struct std____1____atomic_base_wchar_t__false_ {int __a_;};
typedef int *std____1__allocator_wchar_t___reference;
struct std____1__bad_function_call_vtbl_layout; 
struct std____1__basic_stringstream_char__vtbl; 
typedef std____1__chrono__steady_clock std____1__chrono__high_resolution_clock;
typedef std____1__basic_string_wchar_t_ std____1__collate_wchar_t___string_type;
struct std____1__integral_constant_bool__true_ {};
struct std____1__ios_base__failure_vtbl_layout; 
typedef std____1__istreambuf_iterator_wchar_t_ std____1__money_get_wchar_t___iter_type;
typedef int std____1__money_put_wchar_t___char_type;
typedef std____1__ostreambuf_iterator_wchar_t_ std____1__money_put_wchar_t___iter_type;
struct std____1__ratio_1__1000000000000000000_ {};
struct std____1__ratio_1000000000000000000__1_ {};
struct wait___7577FAE843D32618A04985FDB883FD87 {unsigned int w_Termsig : 7;unsigned int w_Coredump : 1;unsigned int w_Retcode : 8;unsigned int w_Filler : 16;};
struct wait___D2BE3D1E9784782BB73F97C8AEDA900E {unsigned int w_Stopval : 8;unsigned int w_Stopsig : 8;unsigned int w_Filler : 16;};
typedef void *ACAccountStoreCredentialRenewalHandler;
typedef void *AVAssetImageGeneratorCompletionHandler;
struct AVCaptureResolvedPhotoSettingsInternal;
struct AVCaptureSynchronizedDepthDataInternal;
struct AVPlayerItemMediaDataCollectorInternal;
enum CBPeripheralManagerAuthorizationStatus {CBPeripheralManagerAuthorizationStatusNotDetermined = 0x0,CBPeripheralManagerAuthorizationStatusRestricted = 0x1,CBPeripheralManagerAuthorizationStatusDenied = 0x2,CBPeripheralManagerAuthorizationStatusAuthorized = 0x3,};
union FTS___0F1278270169A806A3DDB076936BA357 {int (*fts_compar)(void);void *fts_compar_b;};
enum HMCharacteristicValueRotationDirection {HMCharacteristicValueRotationDirectionClockwise = 0x0,HMCharacteristicValueRotationDirectionCounterClockwise = 0x1,};
enum INDeleteTasksTaskListUnsupportedReason {INDeleteTasksTaskListUnsupportedReasonNoTaskListFound = 0x1,};
enum INGetRestaurantGuestIntentResponseCode {INGetRestaurantGuestIntentResponseCodeSuccess = 0x0,INGetRestaurantGuestIntentResponseCodeFailure = 0x1,};
enum INRequestPaymentPayerUnsupportedReason {INRequestPaymentPayerUnsupportedReasonCredentialsUnverified = 0x1,INRequestPaymentPayerUnsupportedReasonNoAccount = 0x2,INRequestPaymentPayerUnsupportedReasonNoValidHandle = 0x3,};
enum INStartPhotoPlaybackIntentResponseCode {INStartPhotoPlaybackIntentResponseCodeUnspecified = 0x0,INStartPhotoPlaybackIntentResponseCodeReady = 0x1,INStartPhotoPlaybackIntentResponseCodeContinueInApp = 0x2,INStartPhotoPlaybackIntentResponseCodeFailure = 0x3,INStartPhotoPlaybackIntentResponseCodeFailureRequiringAppLaunch = 0x4,INStartPhotoPlaybackIntentResponseCodeFailureAppConfigurationRequired = 0x5,};
enum MACRO___COREFOUNDATION_CFURLENUMERATOR {__COREFOUNDATION_CFURLENUMERATOR__ = 1,__COREFOUNDATION_CFFILESECURITY__ = 1,};
enum MACRO_kCFCoreFoundationVersionNumber10 {kCFCoreFoundationVersionNumber10_10_2 = 1152,kCFCoreFoundationVersionNumber10_10_Max = 1199,kCFCoreFoundationVersionNumber10_11 = 1253,kCFCoreFoundationVersionNumber10_11_Max = 1299,};
enum MACRO_kDNSServiceInterfaceIndexUnicast {kDNSServiceInterfaceIndexUnicast = 4294967294,};
enum NSItemProviderRepresentationVisibility {NSItemProviderRepresentationVisibilityAll = 0x0,NSItemProviderRepresentationVisibilityTeam = 0x1,NSItemProviderRepresentationVisibilityGroup = 0x2,NSItemProviderRepresentationVisibilityOwnProcess = 0x3,};
enum NSPersistentCloudKitContainerEventType {NSPersistentCloudKitContainerEventTypeSetup = 0x0,NSPersistentCloudKitContainerEventTypeImport = 0x1,NSPersistentCloudKitContainerEventTypeExport = 0x2,};
enum UIImagePickerControllerCameraFlashMode {UIImagePickerControllerCameraFlashModeOff = 0xFFFFFFFFFFFFFFFF,UIImagePickerControllerCameraFlashModeAuto = 0x0,UIImagePickerControllerCameraFlashModeOn = 0x1,};
typedef unsigned long long dispatch_source_memorypressure_flags_t;
typedef void *nw_browse_result_enumerate_interface_t;
typedef void *nw_establishment_report_access_block_t;
typedef void (*std____1____libcpp_debug_function_type)( std____1____libcpp_debug_info *);
struct std____1____make_unsigned_short__true_ {};
typedef short *std____1__allocator_char16_t___pointer;
typedef int *std____1__allocator_char32_t___pointer;
struct std____1__basic_iostream_wchar_t__vtbl; 
typedef char std____1__char_traits_char___char_type;
typedef std____1__basic_string_char_ std____1__money_get_char___string_type;
typedef std____1__basic_string_char_ std____1__money_put_char___string_type;
typedef int std____1__numpunct_wchar_t___char_type;
typedef std____1__istreambuf_iterator_wchar_t_ std____1__time_get_wchar_t___iter_type;
typedef int std____1__time_put_wchar_t___char_type;
typedef std____1__ostreambuf_iterator_wchar_t_ std____1__time_put_wchar_t___iter_type;
typedef void *ACAccountStoreRemoveCompletionHandler;
typedef void *ALAssetsLibraryAssetForURLResultBlock;
struct AVAssetResourceLoadingRequestInternal;
typedef float AVCaptureDeviceTransportControlsSpeed;
struct AVCapturePhotoBracketSettingsInternal;
struct AVPlayerItemMetadataCollectorInternal;
struct AVVideoCompositionInstructionInternal;
typedef void *GCControllerButtonValueChangedHandler;
enum HMCharacteristicValueCurrentSlatState {HMCharacteristicValueCurrentSlatStateStationary = 0x0,HMCharacteristicValueCurrentSlatStateJammed = 0x1,HMCharacteristicValueCurrentSlatStateOscillating = 0x2,};
enum INActivateCarSignalIntentResponseCode {INActivateCarSignalIntentResponseCodeUnspecified = 0x0,INActivateCarSignalIntentResponseCodeReady = 0x1,INActivateCarSignalIntentResponseCodeInProgress = 0x2,INActivateCarSignalIntentResponseCodeSuccess = 0x3,INActivateCarSignalIntentResponseCodeFailure = 0x4,INActivateCarSignalIntentResponseCodeFailureRequiringAppLaunch = 0x5,};
enum INBookRestaurantReservationIntentCode {INBookRestaurantReservationIntentCodeSuccess = 0x0,INBookRestaurantReservationIntentCodeDenied = 0x1,INBookRestaurantReservationIntentCodeFailure = 0x2,INBookRestaurantReservationIntentCodeFailureRequiringAppLaunch = 0x3,INBookRestaurantReservationIntentCodeFailureRequiringAppLaunchMustVerifyCredentials = 0x4,INBookRestaurantReservationIntentCodeFailureRequiringAppLaunchServiceTemporarilyUnavailable = 0x5,};
enum INPlayMediaMediaItemUnsupportedReason {INPlayMediaMediaItemUnsupportedReasonLoginRequired = 0x1,INPlayMediaMediaItemUnsupportedReasonSubscriptionRequired = 0x2,INPlayMediaMediaItemUnsupportedReasonUnsupportedMediaType = 0x3,INPlayMediaMediaItemUnsupportedReasonExplicitContentSettings = 0x4,INPlayMediaMediaItemUnsupportedReasonCellularDataSettings = 0x5,INPlayMediaMediaItemUnsupportedReasonRestrictedContent = 0x6,INPlayMediaMediaItemUnsupportedReasonServiceUnavailable = 0x7,INPlayMediaMediaItemUnsupportedReasonRegionRestriction = 0x8,};
enum INSearchCallHistoryIntentResponseCode {INSearchCallHistoryIntentResponseCodeUnspecified = 0x0,INSearchCallHistoryIntentResponseCodeReady = 0x1,INSearchCallHistoryIntentResponseCodeContinueInApp = 0x2,INSearchCallHistoryIntentResponseCodeFailure = 0x3,INSearchCallHistoryIntentResponseCodeFailureRequiringAppLaunch = 0x4,INSearchCallHistoryIntentResponseCodeFailureAppConfigurationRequired = 0x5,INSearchCallHistoryIntentResponseCodeInProgress = 0x6,INSearchCallHistoryIntentResponseCodeSuccess = 0x7,};
enum INSearchForAccountsIntentResponseCode {INSearchForAccountsIntentResponseCodeUnspecified = 0x0,INSearchForAccountsIntentResponseCodeReady = 0x1,INSearchForAccountsIntentResponseCodeInProgress = 0x2,INSearchForAccountsIntentResponseCodeSuccess = 0x3,INSearchForAccountsIntentResponseCodeFailure = 0x4,INSearchForAccountsIntentResponseCodeFailureRequiringAppLaunch = 0x5,INSearchForAccountsIntentResponseCodeFailureCredentialsUnverified = 0x6,INSearchForAccountsIntentResponseCodeFailureAccountNotFound = 0x7,INSearchForAccountsIntentResponseCodeFailureTermsAndConditionsAcceptanceRequired = 0x8,INSearchForAccountsIntentResponseCodeFailureNotEligible = 0x9,};
enum INSearchForMessagesIntentResponseCode {INSearchForMessagesIntentResponseCodeUnspecified = 0x0,INSearchForMessagesIntentResponseCodeReady = 0x1,INSearchForMessagesIntentResponseCodeInProgress = 0x2,INSearchForMessagesIntentResponseCodeSuccess = 0x3,INSearchForMessagesIntentResponseCodeFailure = 0x4,INSearchForMessagesIntentResponseCodeFailureRequiringAppLaunch = 0x5,INSearchForMessagesIntentResponseCodeFailureMessageServiceNotAvailable = 0x6,INSearchForMessagesIntentResponseCodeFailureMessageTooManyResults = 0x7,};
struct MPSIntersectionDistancePrimitiveIndex {float distance;unsigned int primitiveIndex;};
enum NSManagedObjectContextConcurrencyType {NSConfinementConcurrencyType = 0x0,NSPrivateQueueConcurrencyType = 0x1,NSMainQueueConcurrencyType = 0x2,};
enum NSRelativeDateTimeFormatterUnitsStyle {NSRelativeDateTimeFormatterUnitsStyleFull = 0x0,NSRelativeDateTimeFormatterUnitsStyleSpellOut = 0x1,NSRelativeDateTimeFormatterUnitsStyleShort = 0x2,NSRelativeDateTimeFormatterUnitsStyleAbbreviated = 0x3,};
enum NSURLSessionDelayedRequestDisposition {NSURLSessionDelayedRequestContinueLoading = 0x0,NSURLSessionDelayedRequestUseNewRequest = 0x1,NSURLSessionDelayedRequestCancel = 0x2,};
enum OSLogMessageComponentArgumentCategory {OSLogMessageComponentArgumentCategoryUndefined = 0x0,OSLogMessageComponentArgumentCategoryData = 0x1,OSLogMessageComponentArgumentCategoryDouble = 0x2,OSLogMessageComponentArgumentCategoryInt64 = 0x3,OSLogMessageComponentArgumentCategoryString = 0x4,OSLogMessageComponentArgumentCategoryUInt64 = 0x5,};
enum SCNParticleImageSequenceAnimationMode {SCNParticleImageSequenceAnimationModeRepeat = 0x0,SCNParticleImageSequenceAnimationModeClamp = 0x1,SCNParticleImageSequenceAnimationModeAutoReverse = 0x2,};
enum SFSpeechRecognizerAuthorizationStatus {SFSpeechRecognizerAuthorizationStatusNotDetermined = 0x0,SFSpeechRecognizerAuthorizationStatusDenied = 0x1,SFSpeechRecognizerAuthorizationStatusRestricted = 0x2,SFSpeechRecognizerAuthorizationStatusAuthorized = 0x3,};
enum UICellAccessoryOutlineDisclosureStyle {UICellAccessoryOutlineDisclosureStyleAutomatic = 0x0,UICellAccessoryOutlineDisclosureStyleHeader = 0x1,UICellAccessoryOutlineDisclosureStyleCell = 0x2,};
enum UINavigationItemBackButtonDisplayMode {UINavigationItemBackButtonDisplayModeDefault = 0x0,UINavigationItemBackButtonDisplayModeGeneric = 0x1,UINavigationItemBackButtonDisplayModeMinimal = 0x2,};
enum UINavigationItemLargeTitleDisplayMode {UINavigationItemLargeTitleDisplayModeAutomatic = 0x0,UINavigationItemLargeTitleDisplayModeAlways = 0x1,UINavigationItemLargeTitleDisplayModeNever = 0x2,};
typedef void *nw_connection_boolean_event_handler_t;
typedef void *nw_connection_group_receive_handler_t;
typedef void *nw_connection_group_send_completion_t;
typedef void *nw_connection_state_changed_handler_t;
typedef void *nw_ethernet_channel_receive_handler_t;
typedef void *nw_ethernet_channel_send_completion_t;
struct std____1____atomic_base_short__false_ {short __a_;};
struct std____1____basic_string_common_true_ {};
struct std____1____make_unsigned_bool__true_ {};
struct std____1____make_unsigned_long__true_ {};
typedef int *std____1__allocator_wchar_t___pointer;
struct std____1__basic_ios_char__vtbl_layout; 
struct std____1__basic_istream_wchar_t__vtbl; 
struct std____1__basic_ostream_wchar_t__vtbl; 
typedef int std____1__char_traits_char___int_type;
typedef int std____1__collate_wchar_t___char_type;
typedef double std____1__complex_double___value_type;
typedef std____1__basic_string_char_ std____1__messages_char___string_type;
typedef std____1__istreambuf_iterator_wchar_t_ std____1__num_get_wchar_t___iter_type;
typedef int std____1__num_put_wchar_t___char_type;
typedef std____1__ostreambuf_iterator_wchar_t_ std____1__num_put_wchar_t___iter_type;
typedef std____1__basic_string_char_ std____1__numpunct_char___string_type;
struct std__bad_array_new_length_vtbl_layout; 
typedef vm_region_submap_short_info_64 vm_region_submap_short_info_data_64_t;
typedef void *ALAssetsGroupEnumerationResultsBlock;
enum ATTrackingManagerAuthorizationStatus {ATTrackingManagerAuthorizationStatusNotDetermined = 0x0,ATTrackingManagerAuthorizationStatusRestricted = 0x1,ATTrackingManagerAuthorizationStatusDenied = 0x2,ATTrackingManagerAuthorizationStatusAuthorized = 0x3,};
typedef void *AUImplementorStringFromValueCallback;
typedef void *AUImplementorValueFromStringCallback;
enum AVAudio3DMixingPointSourceInHeadMode {AVAudio3DMixingPointSourceInHeadModeMono = 0x0,AVAudio3DMixingPointSourceInHeadModeBypass = 0x1,};
struct AVCaptureSystemPressureStateInternal;
struct AVVideoCompositionRenderHintInternal;
enum CBPeripheralManagerConnectionLatency {CBPeripheralManagerConnectionLatencyLow = 0x0,CBPeripheralManagerConnectionLatencyMedium = 0x1,CBPeripheralManagerConnectionLatencyHigh = 0x2,};
typedef  void *(*CGDataProviderGetBytePointerCallback)(void *);
enum CXErrorCodeCallDirectoryManagerError {CXErrorCodeCallDirectoryManagerErrorUnknown = 0x0,CXErrorCodeCallDirectoryManagerErrorNoExtensionFound = 0x1,CXErrorCodeCallDirectoryManagerErrorLoadingInterrupted = 0x2,CXErrorCodeCallDirectoryManagerErrorEntriesOutOfOrder = 0x3,CXErrorCodeCallDirectoryManagerErrorDuplicateEntries = 0x4,CXErrorCodeCallDirectoryManagerErrorMaximumEntriesExceeded = 0x5,CXErrorCodeCallDirectoryManagerErrorExtensionDisabled = 0x6,CXErrorCodeCallDirectoryManagerErrorCurrentlyLoading = 0x7,CXErrorCodeCallDirectoryManagerErrorUnexpectedIncrementalRemoval = 0x8,};
typedef void *EABluetoothAccessoryPickerCompletion;
enum GCExtendedGamepadSnapshotDataVersion {GCExtendedGamepadSnapshotDataVersion1 = 0x100,GCExtendedGamepadSnapshotDataVersion2 = 0x101,};
typedef void *GCExtendedGamepadValueChangedHandler;
enum HMCharacteristicValueActivationState {HMCharacteristicValueActivationStateInactive = 0x0,HMCharacteristicValueActivationStateActive = 0x1,};
enum HMCharacteristicValueCurrentFanState {HMCharacteristicValueCurrentFanStateInactive = 0x0,HMCharacteristicValueCurrentFanStateIdle = 0x1,HMCharacteristicValueCurrentFanStateActive = 0x2,};
enum HMCharacteristicValueOccupancyStatus {HMCharacteristicValueOccupancyStatusNotOccupied = 0x0,HMCharacteristicValueOccupancyStatusOccupied = 0x1,};
enum HMCharacteristicValueTargetDoorState {HMCharacteristicValueTargetDoorStateOpen = 0x0,HMCharacteristicValueTargetDoorStateClosed = 0x1,};
enum HMCharacteristicValueTemperatureUnit {HMCharacteristicValueTemperatureUnitCelsius = 0x0,HMCharacteristicValueTemperatureUnitFahrenheit = 0x1,};
enum INAddMediaMediaItemUnsupportedReason {INAddMediaMediaItemUnsupportedReasonLoginRequired = 0x1,INAddMediaMediaItemUnsupportedReasonSubscriptionRequired = 0x2,INAddMediaMediaItemUnsupportedReasonUnsupportedMediaType = 0x3,INAddMediaMediaItemUnsupportedReasonExplicitContentSettings = 0x4,INAddMediaMediaItemUnsupportedReasonCellularDataSettings = 0x5,INAddMediaMediaItemUnsupportedReasonRestrictedContent = 0x6,INAddMediaMediaItemUnsupportedReasonServiceUnavailable = 0x7,INAddMediaMediaItemUnsupportedReasonRegionRestriction = 0x8,};
enum INGetCarLockStatusIntentResponseCode {INGetCarLockStatusIntentResponseCodeUnspecified = 0x0,INGetCarLockStatusIntentResponseCodeReady = 0x1,INGetCarLockStatusIntentResponseCodeInProgress = 0x2,INGetCarLockStatusIntentResponseCodeSuccess = 0x3,INGetCarLockStatusIntentResponseCodeFailure = 0x4,INGetCarLockStatusIntentResponseCodeFailureRequiringAppLaunch = 0x5,};
enum INMediaUserContextSubscriptionStatus {INMediaUserContextSubscriptionStatusUnknown = 0x0,INMediaUserContextSubscriptionStatusNotSubscribed = 0x1,INMediaUserContextSubscriptionStatusSubscribed = 0x2,};
enum INSaveProfileInCarIntentResponseCode {INSaveProfileInCarIntentResponseCodeUnspecified = 0x0,INSaveProfileInCarIntentResponseCodeReady = 0x1,INSaveProfileInCarIntentResponseCodeInProgress = 0x2,INSaveProfileInCarIntentResponseCodeSuccess = 0x3,INSaveProfileInCarIntentResponseCodeFailure = 0x4,INSaveProfileInCarIntentResponseCodeFailureRequiringAppLaunch = 0x5,};
enum INSendRideFeedbackIntentResponseCode {INSendRideFeedbackIntentResponseCodeUnspecified = 0x0,INSendRideFeedbackIntentResponseCodeReady = 0x1,INSendRideFeedbackIntentResponseCodeSuccess = 0x2,INSendRideFeedbackIntentResponseCodeFailure = 0x3,};
enum INSetCarLockStatusIntentResponseCode {INSetCarLockStatusIntentResponseCodeUnspecified = 0x0,INSetCarLockStatusIntentResponseCodeReady = 0x1,INSetCarLockStatusIntentResponseCodeInProgress = 0x2,INSetCarLockStatusIntentResponseCodeSuccess = 0x3,INSetCarLockStatusIntentResponseCodeFailure = 0x4,INSetCarLockStatusIntentResponseCodeFailureRequiringAppLaunch = 0x5,};
enum INSetTaskAttributeIntentResponseCode {INSetTaskAttributeIntentResponseCodeUnspecified = 0x0,INSetTaskAttributeIntentResponseCodeReady = 0x1,INSetTaskAttributeIntentResponseCodeInProgress = 0x2,INSetTaskAttributeIntentResponseCodeSuccess = 0x3,INSetTaskAttributeIntentResponseCodeFailure = 0x4,INSetTaskAttributeIntentResponseCodeFailureRequiringAppLaunch = 0x5,};
enum MACRO_MTLMaxComputePassSampleBuffers {MTLMaxComputePassSampleBuffers = 4,};
enum MACRO_kABMultiValueInvalidIdentifier {kABMultiValueInvalidIdentifier = -1,};
enum MACRO_kCFCoreFoundationVersionNumber {kCFCoreFoundationVersionNumber_iOS_8_x_Max = 1199,kCFCoreFoundationVersionNumber_iOS_9_x_Max = 1299,};
enum MTLTessellationControlPointIndexType {MTLTessellationControlPointIndexTypeNone = 0x0,MTLTessellationControlPointIndexTypeUInt16 = 0x1,MTLTessellationControlPointIndexTypeUInt32 = 0x2,};
enum NSPersonNameComponentsFormatterStyle {NSPersonNameComponentsFormatterStyleDefault = 0x0,NSPersonNameComponentsFormatterStyleShort = 0x1,NSPersonNameComponentsFormatterStyleMedium = 0x2,NSPersonNameComponentsFormatterStyleLong = 0x3,NSPersonNameComponentsFormatterStyleAbbreviated = 0x4,};
struct NSURLAuthenticationChallengeInternal;
enum NSURLSessionAuthChallengeDisposition {NSURLSessionAuthChallengeUseCredential = 0x0,NSURLSessionAuthChallengePerformDefaultHandling = 0x1,NSURLSessionAuthChallengeCancelAuthenticationChallenge = 0x2,NSURLSessionAuthChallengeRejectProtectionSpace = 0x3,};
enum UIAccessibilityCustomSystemRotorType {UIAccessibilityCustomSystemRotorTypeNone = 0x0,UIAccessibilityCustomSystemRotorTypeLink = 0x1,UIAccessibilityCustomSystemRotorTypeVisitedLink = 0x2,UIAccessibilityCustomSystemRotorTypeHeading = 0x3,UIAccessibilityCustomSystemRotorTypeHeadingLevel1 = 0x4,UIAccessibilityCustomSystemRotorTypeHeadingLevel2 = 0x5,UIAccessibilityCustomSystemRotorTypeHeadingLevel3 = 0x6,UIAccessibilityCustomSystemRotorTypeHeadingLevel4 = 0x7,UIAccessibilityCustomSystemRotorTypeHeadingLevel5 = 0x8,UIAccessibilityCustomSystemRotorTypeHeadingLevel6 = 0x9,UIAccessibilityCustomSystemRotorTypeBoldText = 0xA,UIAccessibilityCustomSystemRotorTypeItalicText = 0xB,UIAccessibilityCustomSystemRotorTypeUnderlineText = 0xC,UIAccessibilityCustomSystemRotorTypeMisspelledWord = 0xD,UIAccessibilityCustomSystemRotorTypeImage = 0xE,UIAccessibilityCustomSystemRotorTypeTextField = 0xF,UIAccessibilityCustomSystemRotorTypeTable = 0x10,UIAccessibilityCustomSystemRotorTypeList = 0x11,UIAccessibilityCustomSystemRotorTypeLandmark = 0x12,};
enum UISplitViewControllerBackgroundStyle {UISplitViewControllerBackgroundStyleNone = 0x0,UISplitViewControllerBackgroundStyleSidebar = 0x1,};
enum UISpringLoadedInteractionEffectState {UISpringLoadedInteractionEffectStateInactive = 0x0,UISpringLoadedInteractionEffectStatePossible = 0x1,UISpringLoadedInteractionEffectStateActivating = 0x2,UISpringLoadedInteractionEffectStateActivated = 0x3,};
typedef void *nw_listener_new_connection_handler_t;
enum nw_parameters_expired_dns_behavior_t {nw_parameters_expired_dns_behavior_default = 0x0,nw_parameters_expired_dns_behavior_allow = 0x1,nw_parameters_expired_dns_behavior_prohibit = 0x2,};
typedef void *nw_path_enumerate_interfaces_block_t;
typedef void *nw_ws_additional_header_enumerator_t;
struct std____1____atomic_base_bool__false_ {char __a_;};
struct std____1____atomic_base_char__false_ {char __a_;};
struct std____1____atomic_base_long__false_ {long long __a_;};
struct std____1____make_signed_short__true_ {};
struct std____1____make_unsigned_int__true_ {};
struct std____1____shared_count_vtbl_layout; 
typedef char *std____1__allocator_char___reference;
typedef std____1__basic_string_char_ std____1__collate_char___string_type;
typedef float std____1__complex_float___value_type;
typedef std____1__istreambuf_iterator_char_ std____1__money_get_char___iter_type;
typedef char std____1__money_put_char___char_type;
typedef std____1__ostreambuf_iterator_char_ std____1__money_put_char___iter_type;
struct std____1__moneypunct_wchar_t__false_ {};
struct std____1__ratio_1__1000000000000000_ {};
struct std____1__ratio_1000000000000000__1_ {};
typedef unsigned int sysdir_search_path_enumeration_state;
typedef thread_time_constraint_policy thread_time_constraint_policy_data_t;
enum virtual_memory_guard_exception_codes {kGUARD_EXC_DEALLOC_GAP = 0x1,};
typedef void *ACAccountStoreSaveCompletionHandler;
enum ASWebAuthenticationSessionErrorCode {ASWebAuthenticationSessionErrorCodeCanceledLogin = 0x1,ASWebAuthenticationSessionErrorCodePresentationContextNotProvided = 0x2,ASWebAuthenticationSessionErrorCodePresentationContextInvalid = 0x3,};
enum AUSpatialMixerPointSourceInHeadMode {kSpatialMixerPointSourceInHeadMode_Mono = 0x0,kSpatialMixerPointSourceInHeadMode_Bypass = 0x1,};
struct AVAssetReaderAudioMixOutputInternal;
struct AVCaptureAudioPreviewOutputInternal;
enum AVCapturePhotoQualityPrioritization {AVCapturePhotoQualityPrioritizationSpeed = 0x1,AVCapturePhotoQualityPrioritizationBalanced = 0x2,AVCapturePhotoQualityPrioritizationQuality = 0x3,};
enum AVQueuedSampleBufferRenderingStatus {AVQueuedSampleBufferRenderingStatusUnknown = 0x0,AVQueuedSampleBufferRenderingStatusRendering = 0x1,AVQueuedSampleBufferRenderingStatusFailed = 0x2,};
struct AVSampleBufferAudioRendererInternal;
typedef void *AudioUnitRemoteControlEventListener;
enum BNNSOptimizerRegularizationFunction {BNNSOptimizerRegularizationNone = 0x0,BNNSOptimizerRegularizationL1 = 0x1,BNNSOptimizerRegularizationL2 = 0x2,};
enum EABluetoothAccessoryPickerErrorCode {EABluetoothAccessoryPickerAlreadyConnected = 0x0,EABluetoothAccessoryPickerResultNotFound = 0x1,EABluetoothAccessoryPickerResultCancelled = 0x2,EABluetoothAccessoryPickerResultFailed = 0x3,};
typedef void *GCControllerAxisValueChangedHandler;
enum HKCategoryValueCervicalMucusQuality {HKCategoryValueCervicalMucusQualityDry = 0x1,HKCategoryValueCervicalMucusQualitySticky = 0x2,HKCategoryValueCervicalMucusQualityCreamy = 0x3,HKCategoryValueCervicalMucusQualityWatery = 0x4,HKCategoryValueCervicalMucusQualityEggWhite = 0x5,};
enum HMCharacteristicValueHeatingCooling {HMCharacteristicValueHeatingCoolingOff = 0x0,HMCharacteristicValueHeatingCoolingHeat = 0x1,HMCharacteristicValueHeatingCoolingCool = 0x2,HMCharacteristicValueHeatingCoolingAuto = 0x3,};
enum HMCharacteristicValueLabelNamespace {HMCharacteristicValueLabelNamespaceDot = 0x0,HMCharacteristicValueLabelNamespaceNumeral = 0x1,};
enum HMCharacteristicValueTamperedStatus {HMCharacteristicValueTamperedStatusNone = 0x0,HMCharacteristicValueTamperedStatusTampered = 0x1,};
enum HMCharacteristicValueTargetFanState {HMCharacteristicValueTargetFanStateManual = 0x0,HMCharacteristicValueTargetFanStateAutomatic = 0x1,};
enum INListRideOptionsIntentResponseCode {INListRideOptionsIntentResponseCodeUnspecified = 0x0,INListRideOptionsIntentResponseCodeReady = 0x1,INListRideOptionsIntentResponseCodeInProgress = 0x2,INListRideOptionsIntentResponseCodeSuccess = 0x3,INListRideOptionsIntentResponseCodeFailure = 0x4,INListRideOptionsIntentResponseCodeFailureRequiringAppLaunch = 0x5,INListRideOptionsIntentResponseCodeFailureRequiringAppLaunchMustVerifyCredentials = 0x6,INListRideOptionsIntentResponseCodeFailureRequiringAppLaunchNoServiceInArea = 0x7,INListRideOptionsIntentResponseCodeFailureRequiringAppLaunchServiceTemporarilyUnavailable = 0x8,INListRideOptionsIntentResponseCodeFailureRequiringAppLaunchPreviousRideNeedsCompletion = 0x9,INListRideOptionsIntentResponseCodeFailurePreviousRideNeedsFeedback = 0xA,};
enum INSearchForPhotosIntentResponseCode {INSearchForPhotosIntentResponseCodeUnspecified = 0x0,INSearchForPhotosIntentResponseCodeReady = 0x1,INSearchForPhotosIntentResponseCodeContinueInApp = 0x2,INSearchForPhotosIntentResponseCodeFailure = 0x3,INSearchForPhotosIntentResponseCodeFailureRequiringAppLaunch = 0x4,INSearchForPhotosIntentResponseCodeFailureAppConfigurationRequired = 0x5,};
enum INSendPaymentPayeeUnsupportedReason {INSendPaymentPayeeUnsupportedReasonCredentialsUnverified = 0x1,INSendPaymentPayeeUnsupportedReasonInsufficientFunds = 0x2,INSendPaymentPayeeUnsupportedReasonNoAccount = 0x3,INSendPaymentPayeeUnsupportedReasonNoValidHandle = 0x4,};
enum INSetProfileInCarIntentResponseCode {INSetProfileInCarIntentResponseCodeUnspecified = 0x0,INSetProfileInCarIntentResponseCodeReady = 0x1,INSetProfileInCarIntentResponseCodeInProgress = 0x2,INSetProfileInCarIntentResponseCodeSuccess = 0x3,INSetProfileInCarIntentResponseCodeFailure = 0x4,INSetProfileInCarIntentResponseCodeFailureRequiringAppLaunch = 0x5,};
enum INSetRadioStationIntentResponseCode {INSetRadioStationIntentResponseCodeUnspecified = 0x0,INSetRadioStationIntentResponseCodeReady = 0x1,INSetRadioStationIntentResponseCodeInProgress = 0x2,INSetRadioStationIntentResponseCodeSuccess = 0x3,INSetRadioStationIntentResponseCodeFailure = 0x4,INSetRadioStationIntentResponseCodeFailureRequiringAppLaunch = 0x5,INSetRadioStationIntentResponseCodeFailureNotSubscribed = 0x6,};
enum INStartCallContactUnsupportedReason {INStartCallContactUnsupportedReasonNoContactFound = 0x1,INStartCallContactUnsupportedReasonMultipleContactsUnsupported = 0x2,INStartCallContactUnsupportedReasonNoHandleForLabel = 0x3,INStartCallContactUnsupportedReasonInvalidHandle = 0x4,INStartCallContactUnsupportedReasonUnsupportedMmiUssd = 0x5,INStartCallContactUnsupportedReasonNoCallHistoryForRedial = 0x6,INStartCallContactUnsupportedReasonNoUsableHandleForRedial = 0x7,};
enum MACRO_HKAnchoredObjectQueryNoAnchor {HKAnchoredObjectQueryNoAnchor = 0,};
enum MACRO_MACH_VOUCHER_ATTR_PTHPRIORITY {MACH_VOUCHER_ATTR_PTHPRIORITY_NULL = 701,MACH_VOUCHER_ATTR_PTHPRIORITY_CREATE = 710,};
enum MACRO_MTLMaxRenderPassSampleBuffers {MTLMaxRenderPassSampleBuffers = 4,};
enum MACRO___kCFStringInlineBufferLength {__kCFStringInlineBufferLength = 64,};
typedef NSArray MPSCNNConvolutionGradientStateBatch;
enum MTLSparseTextureRegionAlignmentMode {MTLSparseTextureRegionAlignmentModeOutward = 0x0,MTLSparseTextureRegionAlignmentModeInward = 0x1,};
enum NEHotspotConfigurationEAPTLSVersion {NEHotspotConfigurationEAPTLSVersion_1_0 = 0x0,NEHotspotConfigurationEAPTLSVersion_1_1 = 0x1,NEHotspotConfigurationEAPTLSVersion_1_2 = 0x2,};
typedef void *NSAttributedStringCompletionHandler;
enum NSDateComponentsFormatterUnitsStyle {NSDateComponentsFormatterUnitsStylePositional = 0x0,NSDateComponentsFormatterUnitsStyleAbbreviated = 0x1,NSDateComponentsFormatterUnitsStyleShort = 0x2,NSDateComponentsFormatterUnitsStyleFull = 0x3,NSDateComponentsFormatterUnitsStyleSpellOut = 0x4,NSDateComponentsFormatterUnitsStyleBrief = 0x5,};
struct PDFAppearanceCharacteristicsPrivate;
enum PKBarcodeEventConfigurationDataType {PKBarcodeEventConfigurationDataTypeUnknown = 0x0,PKBarcodeEventConfigurationDataTypeSigningKeyMaterial = 0x1,PKBarcodeEventConfigurationDataTypeSigningCertificate = 0x2,};
typedef void *PKInformationRequestCompletionBlock;
enum UIAccessibilityCustomRotorDirection {UIAccessibilityCustomRotorDirectionPrevious = 0x0,UIAccessibilityCustomRotorDirectionNext = 0x1,};
typedef void *UIContextMenuContentPreviewProvider;
enum UIContextMenuInteractionCommitStyle {UIContextMenuInteractionCommitStyleDismiss = 0x0,UIContextMenuInteractionCommitStylePop = 0x1,};
enum UIControlContentHorizontalAlignment {UIControlContentHorizontalAlignmentCenter = 0x0,UIControlContentHorizontalAlignmentLeft = 0x1,UIControlContentHorizontalAlignmentRight = 0x2,UIControlContentHorizontalAlignmentFill = 0x3,UIControlContentHorizontalAlignmentLeading = 0x4,UIControlContentHorizontalAlignmentTrailing = 0x5,};
enum UIDocumentBrowserUserInterfaceStyle {UIDocumentBrowserUserInterfaceStyleWhite = 0x0,UIDocumentBrowserUserInterfaceStyleLight = 0x1,UIDocumentBrowserUserInterfaceStyleDark = 0x2,};
enum UIDropSessionProgressIndicatorStyle {UIDropSessionProgressIndicatorStyleNone = 0x0,UIDropSessionProgressIndicatorStyleDefault = 0x1,};
enum UIImagePickerControllerCameraDevice {UIImagePickerControllerCameraDeviceRear = 0x0,UIImagePickerControllerCameraDeviceFront = 0x1,};
enum UIPageViewControllerTransitionStyle {UIPageViewControllerTransitionStylePageCurl = 0x0,UIPageViewControllerTransitionStyleScroll = 0x1,};
typedef void *UIPrintInteractionCompletionHandler;
enum VNRequestFaceLandmarksConstellation {VNRequestFaceLandmarksConstellationNotDefined = 0x0,VNRequestFaceLandmarksConstellation65Points = 0x1,VNRequestFaceLandmarksConstellation76Points = 0x2,};
struct dyld_chained_ptr_32_firmware_rebase {unsigned int target : 26;unsigned int next : 6;};
struct dyld_chained_ptr_arm64e_auth_bind24 {unsigned long long ordinal : 24;unsigned long long zero : 8;unsigned long long diversity : 16;unsigned long long addrDiv : 1;unsigned long long key : 2;unsigned long long next : 11;unsigned long long bind : 1;unsigned long long auth : 1;};
struct dyld_chained_ptr_arm64e_auth_rebase {unsigned long long target : 32;unsigned long long diversity : 16;unsigned long long addrDiv : 1;unsigned long long key : 2;unsigned long long next : 11;unsigned long long bind : 1;unsigned long long auth : 1;};
typedef void *nw_listener_state_changed_handler_t;
struct std____1____atomic_base_int__false_ {int __a_;};
typedef std____1____bit_reference_std____bitset_0__0___true_ std____1____bitset_0__0___reference;
struct std____1____make_signed_bool__true_ {};
struct std____1____make_signed_long__true_ {};
struct std____1____return_temporary_buffer {};
struct std____1__basic_iostream_char__vtbl; 
typedef int std____1__ctype_wchar_t___char_type;
struct std____1__locale__facet_vtbl_layout; 
struct std____1__moneypunct_wchar_t__true_ {};
typedef char std____1__numpunct_char___char_type;
typedef std____1__istreambuf_iterator_char_ std____1__time_get_char___iter_type;
typedef char std____1__time_put_char___char_type;
typedef std____1__ostreambuf_iterator_char_ std____1__time_put_char___iter_type;
typedef thread_throughput_qos_policy thread_throughput_qos_policy_data_t;
enum ASCredentialIdentityStoreErrorCode {ASCredentialIdentityStoreErrorCodeInternalError = 0x0,ASCredentialIdentityStoreErrorCodeStoreDisabled = 0x1,ASCredentialIdentityStoreErrorCodeStoreBusy = 0x2,};
enum AVAudioEngineManualRenderingStatus {AVAudioEngineManualRenderingStatusError = 0xFFFFFFFFFFFFFFFF,AVAudioEngineManualRenderingStatusSuccess = 0x0,AVAudioEngineManualRenderingStatusInsufficientDataFromInputNode = 0x1,AVAudioEngineManualRenderingStatusCannotDoInCurrentContext = 0x2,};
typedef void *AVAudioPlayerNodeCompletionHandler;
enum AVCaptureAutoFocusRangeRestriction {AVCaptureAutoFocusRangeRestrictionNone = 0x0,AVCaptureAutoFocusRangeRestrictionNear = 0x1,AVCaptureAutoFocusRangeRestrictionFar = 0x2,};
struct AVCaptureDeviceInputSourceInternal;
enum AVCaptureSessionInterruptionReason {AVCaptureSessionInterruptionReasonVideoDeviceNotAvailableInBackground = 0x1,AVCaptureSessionInterruptionReasonAudioDeviceInUseByAnotherClient = 0x2,AVCaptureSessionInterruptionReasonVideoDeviceInUseByAnotherClient = 0x3,AVCaptureSessionInterruptionReasonVideoDeviceNotAvailableWithMultipleForegroundApps = 0x4,AVCaptureSessionInterruptionReasonVideoDeviceNotAvailableDueToSystemPressure = 0x5,};
struct AVCaptureVideoPreviewLayerInternal;
struct AVMetadataItemValueRequestInternal;
struct AVPlayerItemAccessLogEventInternal;
struct AVPlayerItemMetadataOutputInternal;
struct AVSampleBufferDisplayLayerInternal;
typedef void (*CGBitmapContextReleaseDataCallback)(void *, void *);
enum CGColorConversionInfoTransformType {kCGColorConversionTransformFromSpace = 0x0,kCGColorConversionTransformToSpace = 0x1,kCGColorConversionTransformApplySpace = 0x2,};
enum CKShareParticipantAcceptanceStatus {CKShareParticipantAcceptanceStatusUnknown = 0x0,CKShareParticipantAcceptanceStatusPending = 0x1,CKShareParticipantAcceptanceStatusAccepted = 0x2,CKShareParticipantAcceptanceStatusRemoved = 0x3,};
enum CLSProgressReportingCapabilityKind {CLSProgressReportingCapabilityKindDuration = 0x0,CLSProgressReportingCapabilityKindPercent = 0x1,CLSProgressReportingCapabilityKindBinary = 0x2,CLSProgressReportingCapabilityKindQuantity = 0x3,CLSProgressReportingCapabilityKindScore = 0x4,};
enum CMMagneticFieldCalibrationAccuracy {CMMagneticFieldCalibrationAccuracyUncalibrated = 0xFFFFFFFF,CMMagneticFieldCalibrationAccuracyLow = 0x0,CMMagneticFieldCalibrationAccuracyMedium = 0x1,CMMagneticFieldCalibrationAccuracyHigh = 0x2,};
typedef void *CMSampleBufferMakeDataReadyHandler;
enum CPListItemPlayingIndicatorLocation {CPListItemPlayingIndicatorLocationLeading = 0x0,CPListItemPlayingIndicatorLocationTrailing = 0x1,};
enum CTFontManagerAutoActivationSetting {kCTFontManagerAutoActivationDefault = 0x0,kCTFontManagerAutoActivationDisabled = 0x1,kCTFontManagerAutoActivationEnabled = 0x2,kCTFontManagerAutoActivationPromptUser = 0x3,};
enum CXErrorCodeRequestTransactionError {CXErrorCodeRequestTransactionErrorUnknown = 0x0,CXErrorCodeRequestTransactionErrorUnentitled = 0x1,CXErrorCodeRequestTransactionErrorUnknownCallProvider = 0x2,CXErrorCodeRequestTransactionErrorEmptyTransaction = 0x3,CXErrorCodeRequestTransactionErrorUnknownCallUUID = 0x4,CXErrorCodeRequestTransactionErrorCallUUIDAlreadyExists = 0x5,CXErrorCodeRequestTransactionErrorInvalidAction = 0x6,CXErrorCodeRequestTransactionErrorMaximumCallGroupsReached = 0x7,};
enum HKCategoryValueOvulationTestResult {HKCategoryValueOvulationTestResultNegative = 0x1,HKCategoryValueOvulationTestResultLuteinizingHormoneSurge = 0x2,HKCategoryValueOvulationTestResultPositive = 0x2,HKCategoryValueOvulationTestResultIndeterminate = 0x3,HKCategoryValueOvulationTestResultEstrogenSurge = 0x4,};
enum HMCharacteristicValueBatteryStatus {HMCharacteristicValueBatteryStatusNormal = 0x0,HMCharacteristicValueBatteryStatusLow = 0x1,};
enum HMCharacteristicValueChargingState {HMCharacteristicValueChargingStateNone = 0x0,HMCharacteristicValueChargingStateInProgress = 0x1,HMCharacteristicValueChargingStateNotChargeable = 0x2,};
enum HMCharacteristicValuePositionState {HMCharacteristicValuePositionStateClosing = 0x0,HMCharacteristicValuePositionStateOpening = 0x1,HMCharacteristicValuePositionStateStopped = 0x2,};
enum INCreateTaskListIntentResponseCode {INCreateTaskListIntentResponseCodeUnspecified = 0x0,INCreateTaskListIntentResponseCodeReady = 0x1,INCreateTaskListIntentResponseCodeInProgress = 0x2,INCreateTaskListIntentResponseCodeSuccess = 0x3,INCreateTaskListIntentResponseCodeFailure = 0x4,INCreateTaskListIntentResponseCodeFailureRequiringAppLaunch = 0x5,};
enum INDeleteTasksTaskUnsupportedReason {INDeleteTasksTaskUnsupportedReasonNoTasksFound = 0x1,INDeleteTasksTaskUnsupportedReasonNoTasksInApp = 0x2,};
enum INRequestPaymentIntentResponseCode {INRequestPaymentIntentResponseCodeUnspecified = 0x0,INRequestPaymentIntentResponseCodeReady = 0x1,INRequestPaymentIntentResponseCodeInProgress = 0x2,INRequestPaymentIntentResponseCodeSuccess = 0x3,INRequestPaymentIntentResponseCodeFailure = 0x4,INRequestPaymentIntentResponseCodeFailureRequiringAppLaunch = 0x5,INRequestPaymentIntentResponseCodeFailureCredentialsUnverified = 0x6,INRequestPaymentIntentResponseCodeFailurePaymentsAmountBelowMinimum = 0x7,INRequestPaymentIntentResponseCodeFailurePaymentsAmountAboveMaximum = 0x8,INRequestPaymentIntentResponseCodeFailurePaymentsCurrencyUnsupported = 0x9,INRequestPaymentIntentResponseCodeFailureNoBankAccount = 0xA,INRequestPaymentIntentResponseCodeFailureNotEligible = 0xB,INRequestPaymentIntentResponseCodeFailureTermsAndConditionsAcceptanceRequired = 0xC,};
enum INSearchForBillsIntentResponseCode {INSearchForBillsIntentResponseCodeUnspecified = 0x0,INSearchForBillsIntentResponseCodeReady = 0x1,INSearchForBillsIntentResponseCodeInProgress = 0x2,INSearchForBillsIntentResponseCodeSuccess = 0x3,INSearchForBillsIntentResponseCodeFailure = 0x4,INSearchForBillsIntentResponseCodeFailureRequiringAppLaunch = 0x5,INSearchForBillsIntentResponseCodeFailureCredentialsUnverified = 0x6,INSearchForBillsIntentResponseCodeFailureBillNotFound = 0x7,};
enum INSearchForMediaIntentResponseCode {INSearchForMediaIntentResponseCodeUnspecified = 0x0,INSearchForMediaIntentResponseCodeReady = 0x1,INSearchForMediaIntentResponseCodeContinueInApp = 0x2,INSearchForMediaIntentResponseCodeInProgress = 0x3,INSearchForMediaIntentResponseCodeSuccess = 0x4,INSearchForMediaIntentResponseCodeFailure = 0x5,INSearchForMediaIntentResponseCodeFailureRequiringAppLaunch = 0x6,};
enum INSnoozeTasksTaskUnsupportedReason {INSnoozeTasksTaskUnsupportedReasonNoTasksFound = 0x1,};
enum INStartAudioCallIntentResponseCode {INStartAudioCallIntentResponseCodeUnspecified = 0x0,INStartAudioCallIntentResponseCodeReady = 0x1,INStartAudioCallIntentResponseCodeContinueInApp = 0x2,INStartAudioCallIntentResponseCodeFailure = 0x3,INStartAudioCallIntentResponseCodeFailureRequiringAppLaunch = 0x4,INStartAudioCallIntentResponseCodeFailureAppConfigurationRequired = 0x5,INStartAudioCallIntentResponseCodeFailureCallingServiceNotAvailable = 0x6,INStartAudioCallIntentResponseCodeFailureContactNotSupportedByApp = 0x7,INStartAudioCallIntentResponseCodeFailureNoValidNumber = 0x8,};
enum INStartVideoCallIntentResponseCode {INStartVideoCallIntentResponseCodeUnspecified = 0x0,INStartVideoCallIntentResponseCodeReady = 0x1,INStartVideoCallIntentResponseCodeContinueInApp = 0x2,INStartVideoCallIntentResponseCodeFailure = 0x3,INStartVideoCallIntentResponseCodeFailureRequiringAppLaunch = 0x4,INStartVideoCallIntentResponseCodeFailureAppConfigurationRequired = 0x5,INStartVideoCallIntentResponseCodeFailureCallingServiceNotAvailable = 0x6,INStartVideoCallIntentResponseCodeFailureContactNotSupportedByApp = 0x7,INStartVideoCallIntentResponseCodeFailureInvalidNumber = 0x8,};
enum MACRO_MTLResourceCPUCacheModeShift {MTLResourceCPUCacheModeShift = 0,MTLResourceStorageModeShift = 4,MTLResourceHazardTrackingModeShift = 8,};
enum MACRO_kAudioUnitSampleFractionBits {kAudioUnitSampleFractionBits = 24,};
enum MACRO_kDNSServiceInterfaceIndexAny {kDNSServiceInterfaceIndexAny = 0,kDNSServiceInterfaceIndexLocalOnly = 4294967295,};
enum MACRO_kDNSServiceInterfaceIndexBLE {kDNSServiceInterfaceIndexBLE = 4294967292,};
enum MACRO_kDNSServiceInterfaceIndexP2P {kDNSServiceInterfaceIndexP2P = 4294967293,};
enum MACRO_kLAErrorAuthenticationFailed {kLAErrorAuthenticationFailed = -1,};
enum MPNowPlayingInfoLanguageOptionType {MPNowPlayingInfoLanguageOptionTypeAudible = 0x0,MPNowPlayingInfoLanguageOptionTypeLegible = 0x1,};
enum MPSBoundingBoxIntersectionTestType {MPSBoundingBoxIntersectionTestTypeDefault = 0x0,MPSBoundingBoxIntersectionTestTypeAxisAligned = 0x1,MPSBoundingBoxIntersectionTestTypeFast = 0x2,};
typedef NSArray MPSCNNArithmeticGradientStateBatch;
typedef NSDictionary MPSGraphTensorShapedTypeDictionary;
enum MTLMultisampleStencilResolveFilter {MTLMultisampleStencilResolveFilterSample0 = 0x0,MTLMultisampleStencilResolveFilterDepthResolvedSample = 0x1,};
enum NSURLErrorNetworkUnavailableReason {NSURLErrorNetworkUnavailableReasonCellular = 0x0,NSURLErrorNetworkUnavailableReasonExpensive = 0x1,NSURLErrorNetworkUnavailableReasonConstrained = 0x2,};
enum PKSecureElementPassActivationState {PKSecureElementPassActivationStateActivated = 0x0,PKSecureElementPassActivationStateRequiresActivation = 0x1,PKSecureElementPassActivationStateActivating = 0x2,PKSecureElementPassActivationStateSuspended = 0x3,PKSecureElementPassActivationStateDeactivated = 0x4,};
typedef void *UIAccessibilityCustomActionHandler;
enum UIContextMenuInteractionAppearance {UIContextMenuInteractionAppearanceUnknown = 0x0,UIContextMenuInteractionAppearanceRich = 0x1,UIContextMenuInteractionAppearanceCompact = 0x2,};
enum UIGraphicsImageRendererFormatRange {UIGraphicsImageRendererFormatRangeUnspecified = 0xFFFFFFFFFFFFFFFF,UIGraphicsImageRendererFormatRangeAutomatic = 0x0,UIGraphicsImageRendererFormatRangeExtended = 0x1,UIGraphicsImageRendererFormatRangeStandard = 0x2,};
enum UIImagePickerControllerQualityType {UIImagePickerControllerQualityTypeHigh = 0x0,UIImagePickerControllerQualityTypeMedium = 0x1,UIImagePickerControllerQualityTypeLow = 0x2,UIImagePickerControllerQualityType640x480 = 0x3,UIImagePickerControllerQualityTypeIFrame1280x720 = 0x4,UIImagePickerControllerQualityTypeIFrame960x540 = 0x5,};
enum UISplitViewControllerSplitBehavior {UISplitViewControllerSplitBehaviorAutomatic = 0x0,UISplitViewControllerSplitBehaviorTile = 0x1,UISplitViewControllerSplitBehaviorOverlay = 0x2,UISplitViewControllerSplitBehaviorDisplace = 0x3,};
enum UITableViewSeparatorInsetReference {UITableViewSeparatorInsetFromCellEdges = 0x0,UITableViewSeparatorInsetFromAutomaticInsets = 0x1,};
typedef char (*cache_value_make_nonpurgeable_cb_t)(void *, void *);
typedef void *nw_browser_state_changed_handler_t;
typedef void *nw_connection_path_event_handler_t;
typedef void *nw_connection_receive_completion_t;
typedef void *nw_path_enumerate_gateways_block_t;
typedef void *sec_protocol_key_update_complete_t;
typedef std____1____bit_iterator_std____bitset_0__0___false__0_ std____1____bitset_0__0___iterator;
struct std____1____make_signed_int__true_ {};
struct std____1____shared_weak_count_vtbl; 
typedef char *std____1__allocator_char___pointer;
struct std____1__bad_weak_ptr_vtbl_layout; 
struct std____1__basic_istream_char__vtbl; 
struct std____1__basic_ostream_char__vtbl; 
typedef char std____1__collate_char___char_type;
struct std____1__messages_byname_wchar_t_ {};
typedef std____1__istreambuf_iterator_char_ std____1__num_get_char___iter_type;
typedef char std____1__num_put_char___char_type;
typedef std____1__ostreambuf_iterator_char_ std____1__num_put_char___iter_type;
struct std____1__system_error_vtbl_layout; 
struct std____1__time_get_byname_wchar_t_ {};
struct std____1__time_put_byname_wchar_t_ {};
enum _00046189D00BB3C2773BAB81B3155509 {kCTFontCollectionCopyDefaultOptions = 0x0,kCTFontCollectionCopyUnique = 0x1,kCTFontCollectionCopyStandardSort = 0x2,};
enum _0071138652F156B545095334AF8EBA9A {kNoAlternatesSelector = 0x0,};
enum _00B1AC2225A67FB55743FFD5F70537AB {kMIDIThruConnection_MaxEndpoints = 0x8,};
enum _01224FA4C789FB84E31E3CE8DC533EC4 {kCMMetadataFormatType_ICY = 0x69637920,kCMMetadataFormatType_ID3 = 0x69643320,kCMMetadataFormatType_Boxed = 0x6D656278,kCMMetadataFormatType_EMSG = 0x656D7367,};
enum _01685E9B51F77270F9A082E60F5D239C {kBandpassParam_CenterFrequency = 0x0,kBandpassParam_Bandwidth = 0x1,};
enum _01B34A0C9FEB9948E507CC540A146196 {UNNotificationCategoryOptionCustomDismissAction = 0x1,UNNotificationCategoryOptionAllowInCarPlay = 0x2,UNNotificationCategoryOptionHiddenPreviewsShowTitle = 0x4,UNNotificationCategoryOptionHiddenPreviewsShowSubtitle = 0x8,UNNotificationCategoryOptionAllowAnnouncement = 0x10,};
enum _01F88F814F23538E0FC56FC9A5F42ACC {kCFURLEnumeratorDefaultBehavior = 0x0,kCFURLEnumeratorDescendRecursively = 0x1,kCFURLEnumeratorSkipInvisibles = 0x2,kCFURLEnumeratorGenerateFileReferenceURLs = 0x4,kCFURLEnumeratorSkipPackageContents = 0x8,kCFURLEnumeratorIncludeDirectoriesPreOrder = 0x10,kCFURLEnumeratorIncludeDirectoriesPostOrder = 0x20,kCFURLEnumeratorGenerateRelativePathURLs = 0x40,};
enum _02080E693F58AA074EF49C8BE37F0815 {sizeof_sfntInstance = 0x4,};
enum _02D0FDED5E8004E46AF39CE780851357 {CPPanDirectionNone = 0x0,CPPanDirectionLeft = 0x1,CPPanDirectionRight = 0x2,CPPanDirectionUp = 0x4,CPPanDirectionDown = 0x8,};
enum _02F9A81243FB4C3098AEBA937834DE24 {kCFUserNotificationNoDefaultButtonFlag = 0x20,kCFUserNotificationUseRadioButtonsFlag = 0x40,};
enum _0307A64101CD8C8CA6997A778D121850 {k3DMixerParam_Azimuth = 0x0,k3DMixerParam_Elevation = 0x1,k3DMixerParam_Distance = 0x2,k3DMixerParam_Gain = 0x3,k3DMixerParam_PlaybackRate = 0x4,k3DMixerParam_BusEnable = 0x14,k3DMixerParam_MinGainInDecibels = 0x15,k3DMixerParam_MaxGainInDecibels = 0x16,k3DMixerParam_DryWetReverbBlend = 0x17,k3DMixerParam_GlobalReverbGainInDecibels = 0x18,k3DMixerParam_OcclusionAttenuationInDecibels = 0x19,k3DMixerParam_ObstructionAttenuationInDecibels = 0x1A,k3DMixerParam_Enable = 0x5,k3DMixerParam_MinGain = 0x6,k3DMixerParam_MaxGain = 0x7,k3DMixerParam_ReverbBlend = 0x8,k3DMixerParam_GlobalReverbGain = 0x9,k3DMixerParam_OcclusionAttenuation = 0xA,k3DMixerParam_ObstructionAttenuation = 0xB,k3DMixerParam_PreAveragePower = 0x3E8,k3DMixerParam_PrePeakHoldLevel = 0x7D0,k3DMixerParam_PostAveragePower = 0xBB8,k3DMixerParam_PostPeakHoldLevel = 0xFA0,};
enum _037FA208169C07DD5E46737F89E96D1B {NFCISO15693ResponseFlagError = 0x1,NFCISO15693ResponseFlagResponseBufferValid = 0x2,NFCISO15693ResponseFlagFinalResponse = 0x4,NFCISO15693ResponseFlagProtocolExtension = 0x8,NFCISO15693ResponseFlagBlockSecurityStatusBit5 = 0x10,NFCISO15693ResponseFlagBlockSecurityStatusBit6 = 0x20,NFCISO15693ResponseFlagWaitTimeExtension = 0x40,};
enum _03EDDD5501DE9869175F49A9B6126E97 {kCFNumberFormatterParseIntegersOnly = 0x1,};
enum _0481D8E51CF92C149F01FFCFBEB4E3E1 {UIAxisNeither = 0x0,UIAxisHorizontal = 0x1,UIAxisVertical = 0x2,UIAxisBoth = 0x3,};
enum _0483087240E909983ABE46B47A9AECA5 {kTimePitchParam_Rate = 0x0,};
enum _0487286D1CF2D11E4EE166404CF9305B {noErr = 0x0,};
enum _0501DFCF356149214F1F63560BA1752B {kvImageConvert_DitherNone = 0x0,kvImageConvert_DitherOrdered = 0x1,kvImageConvert_DitherOrderedReproducible = 0x2,kvImageConvert_DitherFloydSteinberg = 0x3,kvImageConvert_DitherAtkinson = 0x4,kvImageConvert_OrderedGaussianBlue = 0x0,kvImageConvert_OrderedUniformBlue = 0x10000000,kvImageConvert_OrderedNoiseShapeMask = 0xF0000000,};
enum _0525D30714F065664708DC1314DDFDC6 {SCNConsistencyInvalidURIError = 0x3E8,SCNConsistencyInvalidCountError = 0x3E9,SCNConsistencyInvalidArgumentError = 0x3EA,SCNConsistencyMissingElementError = 0x3EB,SCNConsistencyMissingAttributeError = 0x3EC,SCNConsistencyXMLSchemaValidationError = 0x3ED,};
enum _0572C6FEF086AA8BD3CC0609F3423488 {kAUNBandEQFilterType_Parametric = 0x0,kAUNBandEQFilterType_2ndOrderButterworthLowPass = 0x1,kAUNBandEQFilterType_2ndOrderButterworthHighPass = 0x2,kAUNBandEQFilterType_ResonantLowPass = 0x3,kAUNBandEQFilterType_ResonantHighPass = 0x4,kAUNBandEQFilterType_BandPass = 0x5,kAUNBandEQFilterType_BandStop = 0x6,kAUNBandEQFilterType_LowShelf = 0x7,kAUNBandEQFilterType_HighShelf = 0x8,kAUNBandEQFilterType_ResonantLowShelf = 0x9,kAUNBandEQFilterType_ResonantHighShelf = 0xA,kNumAUNBandEQFilterTypes = 0xB,};
enum _05C83325664718B84672573D1D1286F7 {kNoFractionsSelector = 0x0,kVerticalFractionsSelector = 0x1,kDiagonalFractionsSelector = 0x2,};
enum _05F7F4E6188388B81519705E9FD86851 {PTHREAD_INTROSPECTION_THREAD_CREATE = 0x1,PTHREAD_INTROSPECTION_THREAD_START = 0x2,PTHREAD_INTROSPECTION_THREAD_TERMINATE = 0x3,PTHREAD_INTROSPECTION_THREAD_DESTROY = 0x4,};
enum _062BDDE393ED1623F86EDF9363248846 {descriptorFontTableTag = 0x66647363,};
enum _065C81C6DC981D13E5A98A980813E1D1 {sizeof_sfntVariationHeader = 0x10,};
enum _0679A65111BAE236AA9338B467AABDBA {TKSmartCardPINConfirmationNone = 0x0,TKSmartCardPINConfirmationNew = 0x1,TKSmartCardPINConfirmationCurrent = 0x2,};
enum _06B4A667AE5451FDE94E6860E776A0C6 {SSL_NULL_WITH_NULL_NULL = 0x0,SSL_RSA_WITH_NULL_MD5 = 0x1,SSL_RSA_WITH_NULL_SHA = 0x2,SSL_RSA_EXPORT_WITH_RC4_40_MD5 = 0x3,SSL_RSA_WITH_RC4_128_MD5 = 0x4,SSL_RSA_WITH_RC4_128_SHA = 0x5,SSL_RSA_EXPORT_WITH_RC2_CBC_40_MD5 = 0x6,SSL_RSA_WITH_IDEA_CBC_SHA = 0x7,SSL_RSA_EXPORT_WITH_DES40_CBC_SHA = 0x8,SSL_RSA_WITH_DES_CBC_SHA = 0x9,SSL_RSA_WITH_3DES_EDE_CBC_SHA = 0xA,SSL_DH_DSS_EXPORT_WITH_DES40_CBC_SHA = 0xB,SSL_DH_DSS_WITH_DES_CBC_SHA = 0xC,SSL_DH_DSS_WITH_3DES_EDE_CBC_SHA = 0xD,SSL_DH_RSA_EXPORT_WITH_DES40_CBC_SHA = 0xE,SSL_DH_RSA_WITH_DES_CBC_SHA = 0xF,SSL_DH_RSA_WITH_3DES_EDE_CBC_SHA = 0x10,SSL_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA = 0x11,SSL_DHE_DSS_WITH_DES_CBC_SHA = 0x12,SSL_DHE_DSS_WITH_3DES_EDE_CBC_SHA = 0x13,SSL_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA = 0x14,SSL_DHE_RSA_WITH_DES_CBC_SHA = 0x15,SSL_DHE_RSA_WITH_3DES_EDE_CBC_SHA = 0x16,SSL_DH_anon_EXPORT_WITH_RC4_40_MD5 = 0x17,SSL_DH_anon_WITH_RC4_128_MD5 = 0x18,SSL_DH_anon_EXPORT_WITH_DES40_CBC_SHA = 0x19,SSL_DH_anon_WITH_DES_CBC_SHA = 0x1A,SSL_DH_anon_WITH_3DES_EDE_CBC_SHA = 0x1B,SSL_FORTEZZA_DMS_WITH_NULL_SHA = 0x1C,SSL_FORTEZZA_DMS_WITH_FORTEZZA_CBC_SHA = 0x1D,TLS_RSA_WITH_AES_128_CBC_SHA = 0x2F,TLS_DH_DSS_WITH_AES_128_CBC_SHA = 0x30,TLS_DH_RSA_WITH_AES_128_CBC_SHA = 0x31,TLS_DHE_DSS_WITH_AES_128_CBC_SHA = 0x32,TLS_DHE_RSA_WITH_AES_128_CBC_SHA = 0x33,TLS_DH_anon_WITH_AES_128_CBC_SHA = 0x34,TLS_RSA_WITH_AES_256_CBC_SHA = 0x35,TLS_DH_DSS_WITH_AES_256_CBC_SHA = 0x36,TLS_DH_RSA_WITH_AES_256_CBC_SHA = 0x37,TLS_DHE_DSS_WITH_AES_256_CBC_SHA = 0x38,TLS_DHE_RSA_WITH_AES_256_CBC_SHA = 0x39,TLS_DH_anon_WITH_AES_256_CBC_SHA = 0x3A,TLS_ECDH_ECDSA_WITH_NULL_SHA = 0xC001,TLS_ECDH_ECDSA_WITH_RC4_128_SHA = 0xC002,TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA = 0xC003,TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA = 0xC004,TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA = 0xC005,TLS_ECDHE_ECDSA_WITH_NULL_SHA = 0xC006,TLS_ECDHE_ECDSA_WITH_RC4_128_SHA = 0xC007,TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA = 0xC008,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA = 0xC009,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA = 0xC00A,TLS_ECDH_RSA_WITH_NULL_SHA = 0xC00B,TLS_ECDH_RSA_WITH_RC4_128_SHA = 0xC00C,TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA = 0xC00D,TLS_ECDH_RSA_WITH_AES_128_CBC_SHA = 0xC00E,TLS_ECDH_RSA_WITH_AES_256_CBC_SHA = 0xC00F,TLS_ECDHE_RSA_WITH_NULL_SHA = 0xC010,TLS_ECDHE_RSA_WITH_RC4_128_SHA = 0xC011,TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA = 0xC012,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA = 0xC013,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA = 0xC014,TLS_ECDH_anon_WITH_NULL_SHA = 0xC015,TLS_ECDH_anon_WITH_RC4_128_SHA = 0xC016,TLS_ECDH_anon_WITH_3DES_EDE_CBC_SHA = 0xC017,TLS_ECDH_anon_WITH_AES_128_CBC_SHA = 0xC018,TLS_ECDH_anon_WITH_AES_256_CBC_SHA = 0xC019,TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA = 0xC035,TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA = 0xC036,TLS_PSK_WITH_CHACHA20_POLY1305_SHA256 = 0xCCAB,TLS_NULL_WITH_NULL_NULL = 0x0,TLS_RSA_WITH_NULL_MD5 = 0x1,TLS_RSA_WITH_NULL_SHA = 0x2,TLS_RSA_WITH_RC4_128_MD5 = 0x4,TLS_RSA_WITH_RC4_128_SHA = 0x5,TLS_RSA_WITH_3DES_EDE_CBC_SHA = 0xA,TLS_RSA_WITH_NULL_SHA256 = 0x3B,TLS_RSA_WITH_AES_128_CBC_SHA256 = 0x3C,TLS_RSA_WITH_AES_256_CBC_SHA256 = 0x3D,TLS_DH_DSS_WITH_3DES_EDE_CBC_SHA = 0xD,TLS_DH_RSA_WITH_3DES_EDE_CBC_SHA = 0x10,TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA = 0x13,TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA = 0x16,TLS_DH_DSS_WITH_AES_128_CBC_SHA256 = 0x3E,TLS_DH_RSA_WITH_AES_128_CBC_SHA256 = 0x3F,TLS_DHE_DSS_WITH_AES_128_CBC_SHA256 = 0x40,TLS_DHE_RSA_WITH_AES_128_CBC_SHA256 = 0x67,TLS_DH_DSS_WITH_AES_256_CBC_SHA256 = 0x68,TLS_DH_RSA_WITH_AES_256_CBC_SHA256 = 0x69,TLS_DHE_DSS_WITH_AES_256_CBC_SHA256 = 0x6A,TLS_DHE_RSA_WITH_AES_256_CBC_SHA256 = 0x6B,TLS_DH_anon_WITH_RC4_128_MD5 = 0x18,TLS_DH_anon_WITH_3DES_EDE_CBC_SHA = 0x1B,TLS_DH_anon_WITH_AES_128_CBC_SHA256 = 0x6C,TLS_DH_anon_WITH_AES_256_CBC_SHA256 = 0x6D,TLS_PSK_WITH_RC4_128_SHA = 0x8A,TLS_PSK_WITH_3DES_EDE_CBC_SHA = 0x8B,TLS_PSK_WITH_AES_128_CBC_SHA = 0x8C,TLS_PSK_WITH_AES_256_CBC_SHA = 0x8D,TLS_DHE_PSK_WITH_RC4_128_SHA = 0x8E,TLS_DHE_PSK_WITH_3DES_EDE_CBC_SHA = 0x8F,TLS_DHE_PSK_WITH_AES_128_CBC_SHA = 0x90,TLS_DHE_PSK_WITH_AES_256_CBC_SHA = 0x91,TLS_RSA_PSK_WITH_RC4_128_SHA = 0x92,TLS_RSA_PSK_WITH_3DES_EDE_CBC_SHA = 0x93,TLS_RSA_PSK_WITH_AES_128_CBC_SHA = 0x94,TLS_RSA_PSK_WITH_AES_256_CBC_SHA = 0x95,TLS_PSK_WITH_NULL_SHA = 0x2C,TLS_DHE_PSK_WITH_NULL_SHA = 0x2D,TLS_RSA_PSK_WITH_NULL_SHA = 0x2E,TLS_RSA_WITH_AES_128_GCM_SHA256 = 0x9C,TLS_RSA_WITH_AES_256_GCM_SHA384 = 0x9D,TLS_DHE_RSA_WITH_AES_128_GCM_SHA256 = 0x9E,TLS_DHE_RSA_WITH_AES_256_GCM_SHA384 = 0x9F,TLS_DH_RSA_WITH_AES_128_GCM_SHA256 = 0xA0,TLS_DH_RSA_WITH_AES_256_GCM_SHA384 = 0xA1,TLS_DHE_DSS_WITH_AES_128_GCM_SHA256 = 0xA2,TLS_DHE_DSS_WITH_AES_256_GCM_SHA384 = 0xA3,TLS_DH_DSS_WITH_AES_128_GCM_SHA256 = 0xA4,TLS_DH_DSS_WITH_AES_256_GCM_SHA384 = 0xA5,TLS_DH_anon_WITH_AES_128_GCM_SHA256 = 0xA6,TLS_DH_anon_WITH_AES_256_GCM_SHA384 = 0xA7,TLS_PSK_WITH_AES_128_GCM_SHA256 = 0xA8,TLS_PSK_WITH_AES_256_GCM_SHA384 = 0xA9,TLS_DHE_PSK_WITH_AES_128_GCM_SHA256 = 0xAA,TLS_DHE_PSK_WITH_AES_256_GCM_SHA384 = 0xAB,TLS_RSA_PSK_WITH_AES_128_GCM_SHA256 = 0xAC,TLS_RSA_PSK_WITH_AES_256_GCM_SHA384 = 0xAD,TLS_PSK_WITH_AES_128_CBC_SHA256 = 0xAE,TLS_PSK_WITH_AES_256_CBC_SHA384 = 0xAF,TLS_PSK_WITH_NULL_SHA256 = 0xB0,TLS_PSK_WITH_NULL_SHA384 = 0xB1,TLS_DHE_PSK_WITH_AES_128_CBC_SHA256 = 0xB2,TLS_DHE_PSK_WITH_AES_256_CBC_SHA384 = 0xB3,TLS_DHE_PSK_WITH_NULL_SHA256 = 0xB4,TLS_DHE_PSK_WITH_NULL_SHA384 = 0xB5,TLS_RSA_PSK_WITH_AES_128_CBC_SHA256 = 0xB6,TLS_RSA_PSK_WITH_AES_256_CBC_SHA384 = 0xB7,TLS_RSA_PSK_WITH_NULL_SHA256 = 0xB8,TLS_RSA_PSK_WITH_NULL_SHA384 = 0xB9,TLS_AES_128_GCM_SHA256 = 0x1301,TLS_AES_256_GCM_SHA384 = 0x1302,TLS_CHACHA20_POLY1305_SHA256 = 0x1303,TLS_AES_128_CCM_SHA256 = 0x1304,TLS_AES_128_CCM_8_SHA256 = 0x1305,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256 = 0xC023,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384 = 0xC024,TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256 = 0xC025,TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384 = 0xC026,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256 = 0xC027,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384 = 0xC028,TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256 = 0xC029,TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384 = 0xC02A,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256 = 0xC02B,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384 = 0xC02C,TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256 = 0xC02D,TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384 = 0xC02E,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 = 0xC02F,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384 = 0xC030,TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256 = 0xC031,TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384 = 0xC032,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256 = 0xCCA8,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256 = 0xCCA9,TLS_EMPTY_RENEGOTIATION_INFO_SCSV = 0xFF,SSL_RSA_WITH_RC2_CBC_MD5 = 0xFF80,SSL_RSA_WITH_IDEA_CBC_MD5 = 0xFF81,SSL_RSA_WITH_DES_CBC_MD5 = 0xFF82,SSL_RSA_WITH_3DES_EDE_CBC_MD5 = 0xFF83,SSL_NO_SUCH_CIPHERSUITE = 0xFFFF,};
enum _06F52A372520C51D91AFBF72501AF31A {kFullWidthIdeographsSelector = 0x0,kProportionalIdeographsSelector = 0x1,kHalfWidthIdeographsSelector = 0x2,};
enum _0741F337BC09F2D69A8974B0C1F4CA88 {errSSLProtocol = 0xFFFFD9B8,errSSLNegotiation = 0xFFFFD9B7,errSSLFatalAlert = 0xFFFFD9B6,errSSLWouldBlock = 0xFFFFD9B5,errSSLSessionNotFound = 0xFFFFD9B4,errSSLClosedGraceful = 0xFFFFD9B3,errSSLClosedAbort = 0xFFFFD9B2,errSSLXCertChainInvalid = 0xFFFFD9B1,errSSLBadCert = 0xFFFFD9B0,errSSLCrypto = 0xFFFFD9AF,errSSLInternal = 0xFFFFD9AE,errSSLModuleAttach = 0xFFFFD9AD,errSSLUnknownRootCert = 0xFFFFD9AC,errSSLNoRootCert = 0xFFFFD9AB,errSSLCertExpired = 0xFFFFD9AA,errSSLCertNotYetValid = 0xFFFFD9A9,errSSLClosedNoNotify = 0xFFFFD9A8,errSSLBufferOverflow = 0xFFFFD9A7,errSSLBadCipherSuite = 0xFFFFD9A6,errSSLPeerUnexpectedMsg = 0xFFFFD9A5,errSSLPeerBadRecordMac = 0xFFFFD9A4,errSSLPeerDecryptionFail = 0xFFFFD9A3,errSSLPeerRecordOverflow = 0xFFFFD9A2,errSSLPeerDecompressFail = 0xFFFFD9A1,errSSLPeerHandshakeFail = 0xFFFFD9A0,errSSLPeerBadCert = 0xFFFFD99F,errSSLPeerUnsupportedCert = 0xFFFFD99E,errSSLPeerCertRevoked = 0xFFFFD99D,errSSLPeerCertExpired = 0xFFFFD99C,errSSLPeerCertUnknown = 0xFFFFD99B,errSSLIllegalParam = 0xFFFFD99A,errSSLPeerUnknownCA = 0xFFFFD999,errSSLPeerAccessDenied = 0xFFFFD998,errSSLPeerDecodeError = 0xFFFFD997,errSSLPeerDecryptError = 0xFFFFD996,errSSLPeerExportRestriction = 0xFFFFD995,errSSLPeerProtocolVersion = 0xFFFFD994,errSSLPeerInsufficientSecurity = 0xFFFFD993,errSSLPeerInternalError = 0xFFFFD992,errSSLPeerUserCancelled = 0xFFFFD991,errSSLPeerNoRenegotiation = 0xFFFFD990,errSSLPeerAuthCompleted = 0xFFFFD98F,errSSLClientCertRequested = 0xFFFFD98E,errSSLHostNameMismatch = 0xFFFFD98D,errSSLConnectionRefused = 0xFFFFD98C,errSSLDecryptionFail = 0xFFFFD98B,errSSLBadRecordMac = 0xFFFFD98A,errSSLRecordOverflow = 0xFFFFD989,errSSLBadConfiguration = 0xFFFFD988,errSSLUnexpectedRecord = 0xFFFFD987,errSSLWeakPeerEphemeralDHKey = 0xFFFFD986,errSSLClientHelloReceived = 0xFFFFD985,errSSLTransportReset = 0xFFFFD984,errSSLNetworkTimeout = 0xFFFFD983,errSSLConfigurationFailed = 0xFFFFD982,errSSLUnsupportedExtension = 0xFFFFD981,errSSLUnexpectedMessage = 0xFFFFD980,errSSLDecompressFail = 0xFFFFD97F,errSSLHandshakeFail = 0xFFFFD97E,errSSLDecodeError = 0xFFFFD97D,errSSLInappropriateFallback = 0xFFFFD97C,errSSLMissingExtension = 0xFFFFD97B,errSSLBadCertificateStatusResponse = 0xFFFFD97A,errSSLCertificateRequired = 0xFFFFD979,errSSLUnknownPSKIdentity = 0xFFFFD978,errSSLUnrecognizedName = 0xFFFFD977,errSSLATSViolation = 0xFFFFD968,errSSLATSMinimumVersionViolation = 0xFFFFD967,errSSLATSCiphersuiteViolation = 0xFFFFD966,errSSLATSMinimumKeySizeViolation = 0xFFFFD965,errSSLATSLeafCertificateHashAlgorithmViolation = 0xFFFFD964,errSSLATSCertificateHashAlgorithmViolation = 0xFFFFD963,errSSLATSCertificateTrustViolation = 0xFFFFD962,errSSLEarlyDataRejected = 0xFFFFD95E,};
enum _0756E3701F8E4D71C9BFDF7AEBA72260 {kDefaultLowerCaseSelector = 0x0,kLowerCaseSmallCapsSelector = 0x1,kLowerCasePetiteCapsSelector = 0x2,};
enum _081D5C4BD3450819504C70B627197B69 {kIOSurfaceLockReadOnly = 0x1,kIOSurfaceLockAvoidSync = 0x2,};
enum _084B36671D4A3DC29FAC0C02B2D74D3B {kHyphenToMinusOnSelector = 0x0,kHyphenToMinusOffSelector = 0x1,kAsteriskToMultiplyOnSelector = 0x2,kAsteriskToMultiplyOffSelector = 0x3,kSlashToDivideOnSelector = 0x4,kSlashToDivideOffSelector = 0x5,kInequalityLigaturesOnSelector = 0x6,kInequalityLigaturesOffSelector = 0x7,kExponentsOnSelector = 0x8,kExponentsOffSelector = 0x9,kMathematicalGreekOnSelector = 0xA,kMathematicalGreekOffSelector = 0xB,};
enum _08EA7BD2F69E9390F38961701330F57C {MPSDeviceOptionsDefault = 0x0,MPSDeviceOptionsLowPower = 0x1,MPSDeviceOptionsSkipRemovable = 0x2,};
enum _097FC55BA72F278B5A9C7312F7A63EE3 {HV_VM_SPACE_DEFAULT = 0x0,HV_VM_SPACE_CURRENT = 0xFFFFFFFFFFFFFFFF,};
enum _0A4B0A3CF30C1F92F60A7532C12568ED {sizeof_sfntVariationAxis = 0x14,};
enum _0A5E01EED61795FD0F36155BADAD290E {kAudioUnitProperty_SampleRateConverterComplexity = 0xBC6,};
enum _0AA5C8AB4DF5505A3C2FC10FA8E79EFC {UNWIND_X86_REG_NONE = 0x0,UNWIND_X86_REG_EBX = 0x1,UNWIND_X86_REG_ECX = 0x2,UNWIND_X86_REG_EDX = 0x3,UNWIND_X86_REG_EDI = 0x4,UNWIND_X86_REG_ESI = 0x5,UNWIND_X86_REG_EBP = 0x6,};
enum _0AD5928B6D60B030952549AF3C54CC62 {kAudioUnitSubType_AUiPodTime = 0x6970746D,};
enum _0B195BE7234BFCA014A4DEBA14BF94C7 {kAudioCodecNoError = 0x0,kAudioCodecUnspecifiedError = 0x77686174,kAudioCodecUnknownPropertyError = 0x77686F3F,kAudioCodecBadPropertySizeError = 0x2173697A,kAudioCodecIllegalOperationError = 0x6E6F7065,kAudioCodecUnsupportedFormatError = 0x21646174,kAudioCodecStateError = 0x21737474,kAudioCodecNotEnoughBufferSpaceError = 0x21627566,kAudioCodecBadDataError = 0x62616461,};
enum _0B689B5DCCBE1177858E533B5255F39E {NSFileVersionAddingByMoving = 0x1,};
enum _0B89F0AF81B3606338C22BD8C6ABD8DD {kCALayerMinXMinYCorner = 0x1,kCALayerMaxXMinYCorner = 0x2,kCALayerMinXMaxYCorner = 0x4,kCALayerMaxXMaxYCorner = 0x8,};
enum _0BD279C6D0E6EF7D82526A7B5109E1D0 {PKMerchantCapability3DS = 0x1,PKMerchantCapabilityEMV = 0x2,PKMerchantCapabilityCredit = 0x4,PKMerchantCapabilityDebit = 0x8,};
enum _0BDB82D4B55AF3F9FBC513EC35A933D1 {kExtAudioFilePacketTableInfoOverride_UseFileValue = 0xFFFFFFFF,kExtAudioFilePacketTableInfoOverride_UseFileValueIfValid = 0xFFFFFFFE,};
enum _0BF663BCEE0260FF9205B0BCC9DBA6FF {kAudioServicesPropertyIsUISound = 0x69737569,kAudioServicesPropertyCompletePlaybackIfAppDies = 0x69666469,};
enum _0CB70078376B11AB2BB6F14037BBE7A9 {kCTRunDelegateVersion1 = 0x1,kCTRunDelegateCurrentVersion = 0x1,};
enum _0D1A65DA1AD4051ED1E245E24018638A {kAudioUnitErr_InvalidProperty = 0xFFFFD581,kAudioUnitErr_InvalidParameter = 0xFFFFD582,kAudioUnitErr_InvalidElement = 0xFFFFD583,kAudioUnitErr_NoConnection = 0xFFFFD584,kAudioUnitErr_FailedInitialization = 0xFFFFD585,kAudioUnitErr_TooManyFramesToProcess = 0xFFFFD586,kAudioUnitErr_InvalidFile = 0xFFFFD589,kAudioUnitErr_UnknownFileType = 0xFFFFD58A,kAudioUnitErr_FileNotSpecified = 0xFFFFD58B,kAudioUnitErr_FormatNotSupported = 0xFFFFD58C,kAudioUnitErr_Uninitialized = 0xFFFFD58D,kAudioUnitErr_InvalidScope = 0xFFFFD58E,kAudioUnitErr_PropertyNotWritable = 0xFFFFD58F,kAudioUnitErr_CannotDoInCurrentContext = 0xFFFFD591,kAudioUnitErr_InvalidPropertyValue = 0xFFFFD59D,kAudioUnitErr_PropertyNotInUse = 0xFFFFD59E,kAudioUnitErr_Initialized = 0xFFFFD59F,kAudioUnitErr_InvalidOfflineRender = 0xFFFFD5A0,kAudioUnitErr_Unauthorized = 0xFFFFD5A1,kAudioUnitErr_MIDIOutputBufferFull = 0xFFFEFB3F,kAudioComponentErr_InstanceTimedOut = 0xFFFEFB3E,kAudioComponentErr_InstanceInvalidated = 0xFFFEFB43,kAudioUnitErr_RenderTimeout = 0xFFFEFB47,kAudioUnitErr_ExtensionNotFound = 0xFFFEFB48,kAudioUnitErr_InvalidParameterValue = 0xFFFEFB49,kAudioUnitErr_InvalidFilePath = 0xFFFEFB4A,kAudioUnitErr_MissingKey = 0xFFFEFB4B,};
enum _0D57A36AAFF01804B82F23697589EB16 {kAudioFileStreamError_UnsupportedFileType = 0x7479703F,kAudioFileStreamError_UnsupportedDataFormat = 0x666D743F,kAudioFileStreamError_UnsupportedProperty = 0x7074793F,kAudioFileStreamError_BadPropertySize = 0x2173697A,kAudioFileStreamError_NotOptimized = 0x6F70746D,kAudioFileStreamError_InvalidPacketOffset = 0x70636B3F,kAudioFileStreamError_InvalidFile = 0x6474613F,kAudioFileStreamError_ValueUnknown = 0x756E6B3F,kAudioFileStreamError_DataUnavailable = 0x6D6F7265,kAudioFileStreamError_IllegalOperation = 0x6E6F7065,kAudioFileStreamError_UnspecifiedError = 0x7768743F,kAudioFileStreamError_DiscontinuityCantRecover = 0x64736321,};
enum _0D738DC58D042524657A6B14962C799D {MTLFunctionOptionNone = 0x0,MTLFunctionOptionCompileToBinary = 0x1,};
enum _0D758463C64303005664D184A53FCAF3 {kFontUnicodeDefaultSemantics = 0x0,kFontUnicodeV1_1Semantics = 0x1,kFontISO10646_1993Semantics = 0x2,kFontUnicodeV2_0BMPOnlySemantics = 0x3,kFontUnicodeV2_0FullCoverageSemantics = 0x4,kFontUnicodeV4_0VariationSequenceSemantics = 0x5,kFontUnicode_FullRepertoire = 0x6,};
enum _0DA9FCD7F69DDDE5E056A386D91090DF {kMIDIInvalidClient = 0xFFFFD5B2,kMIDIInvalidPort = 0xFFFFD5B1,kMIDIWrongEndpointType = 0xFFFFD5B0,kMIDINoConnection = 0xFFFFD5AF,kMIDIUnknownEndpoint = 0xFFFFD5AE,kMIDIUnknownProperty = 0xFFFFD5AD,kMIDIWrongPropertyType = 0xFFFFD5AC,kMIDINoCurrentSetup = 0xFFFFD5AB,kMIDIMessageSendErr = 0xFFFFD5AA,kMIDIServerStartErr = 0xFFFFD5A9,kMIDISetupFormatErr = 0xFFFFD5A8,kMIDIWrongThread = 0xFFFFD5A7,kMIDIObjectNotFound = 0xFFFFD5A6,kMIDIIDNotUnique = 0xFFFFD5A5,kMIDINotPermitted = 0xFFFFD5A4,kMIDIUnknownError = 0xFFFFD5A3,};
enum _0E66E6D39BDD57667D4C527762C2C4E7 {NSBinarySearchingFirstEqual = 0x100,NSBinarySearchingLastEqual = 0x200,NSBinarySearchingInsertionIndex = 0x400,};
enum _0F2DE6628D8349062915B2DA292A0A16 {UNW_PPC64_R0 = 0x0,UNW_PPC64_R1 = 0x1,UNW_PPC64_R2 = 0x2,UNW_PPC64_R3 = 0x3,UNW_PPC64_R4 = 0x4,UNW_PPC64_R5 = 0x5,UNW_PPC64_R6 = 0x6,UNW_PPC64_R7 = 0x7,UNW_PPC64_R8 = 0x8,UNW_PPC64_R9 = 0x9,UNW_PPC64_R10 = 0xA,UNW_PPC64_R11 = 0xB,UNW_PPC64_R12 = 0xC,UNW_PPC64_R13 = 0xD,UNW_PPC64_R14 = 0xE,UNW_PPC64_R15 = 0xF,UNW_PPC64_R16 = 0x10,UNW_PPC64_R17 = 0x11,UNW_PPC64_R18 = 0x12,UNW_PPC64_R19 = 0x13,UNW_PPC64_R20 = 0x14,UNW_PPC64_R21 = 0x15,UNW_PPC64_R22 = 0x16,UNW_PPC64_R23 = 0x17,UNW_PPC64_R24 = 0x18,UNW_PPC64_R25 = 0x19,UNW_PPC64_R26 = 0x1A,UNW_PPC64_R27 = 0x1B,UNW_PPC64_R28 = 0x1C,UNW_PPC64_R29 = 0x1D,UNW_PPC64_R30 = 0x1E,UNW_PPC64_R31 = 0x1F,UNW_PPC64_F0 = 0x20,UNW_PPC64_F1 = 0x21,UNW_PPC64_F2 = 0x22,UNW_PPC64_F3 = 0x23,UNW_PPC64_F4 = 0x24,UNW_PPC64_F5 = 0x25,UNW_PPC64_F6 = 0x26,UNW_PPC64_F7 = 0x27,UNW_PPC64_F8 = 0x28,UNW_PPC64_F9 = 0x29,UNW_PPC64_F10 = 0x2A,UNW_PPC64_F11 = 0x2B,UNW_PPC64_F12 = 0x2C,UNW_PPC64_F13 = 0x2D,UNW_PPC64_F14 = 0x2E,UNW_PPC64_F15 = 0x2F,UNW_PPC64_F16 = 0x30,UNW_PPC64_F17 = 0x31,UNW_PPC64_F18 = 0x32,UNW_PPC64_F19 = 0x33,UNW_PPC64_F20 = 0x34,UNW_PPC64_F21 = 0x35,UNW_PPC64_F22 = 0x36,UNW_PPC64_F23 = 0x37,UNW_PPC64_F24 = 0x38,UNW_PPC64_F25 = 0x39,UNW_PPC64_F26 = 0x3A,UNW_PPC64_F27 = 0x3B,UNW_PPC64_F28 = 0x3C,UNW_PPC64_F29 = 0x3D,UNW_PPC64_F30 = 0x3E,UNW_PPC64_F31 = 0x3F,UNW_PPC64_LR = 0x41,UNW_PPC64_CTR = 0x42,UNW_PPC64_CR0 = 0x44,UNW_PPC64_CR1 = 0x45,UNW_PPC64_CR2 = 0x46,UNW_PPC64_CR3 = 0x47,UNW_PPC64_CR4 = 0x48,UNW_PPC64_CR5 = 0x49,UNW_PPC64_CR6 = 0x4A,UNW_PPC64_CR7 = 0x4B,UNW_PPC64_XER = 0x4C,UNW_PPC64_V0 = 0x4D,UNW_PPC64_V1 = 0x4E,UNW_PPC64_V2 = 0x4F,UNW_PPC64_V3 = 0x50,UNW_PPC64_V4 = 0x51,UNW_PPC64_V5 = 0x52,UNW_PPC64_V6 = 0x53,UNW_PPC64_V7 = 0x54,UNW_PPC64_V8 = 0x55,UNW_PPC64_V9 = 0x56,UNW_PPC64_V10 = 0x57,UNW_PPC64_V11 = 0x58,UNW_PPC64_V12 = 0x59,UNW_PPC64_V13 = 0x5A,UNW_PPC64_V14 = 0x5B,UNW_PPC64_V15 = 0x5C,UNW_PPC64_V16 = 0x5D,UNW_PPC64_V17 = 0x5E,UNW_PPC64_V18 = 0x5F,UNW_PPC64_V19 = 0x60,UNW_PPC64_V20 = 0x61,UNW_PPC64_V21 = 0x62,UNW_PPC64_V22 = 0x63,UNW_PPC64_V23 = 0x64,UNW_PPC64_V24 = 0x65,UNW_PPC64_V25 = 0x66,UNW_PPC64_V26 = 0x67,UNW_PPC64_V27 = 0x68,UNW_PPC64_V28 = 0x69,UNW_PPC64_V29 = 0x6A,UNW_PPC64_V30 = 0x6B,UNW_PPC64_V31 = 0x6C,UNW_PPC64_VRSAVE = 0x6D,UNW_PPC64_VSCR = 0x6E,UNW_PPC64_TFHAR = 0x72,UNW_PPC64_TFIAR = 0x73,UNW_PPC64_TEXASR = 0x74,UNW_PPC64_VS0 = 0x20,UNW_PPC64_VS1 = 0x21,UNW_PPC64_VS2 = 0x22,UNW_PPC64_VS3 = 0x23,UNW_PPC64_VS4 = 0x24,UNW_PPC64_VS5 = 0x25,UNW_PPC64_VS6 = 0x26,UNW_PPC64_VS7 = 0x27,UNW_PPC64_VS8 = 0x28,UNW_PPC64_VS9 = 0x29,UNW_PPC64_VS10 = 0x2A,UNW_PPC64_VS11 = 0x2B,UNW_PPC64_VS12 = 0x2C,UNW_PPC64_VS13 = 0x2D,UNW_PPC64_VS14 = 0x2E,UNW_PPC64_VS15 = 0x2F,UNW_PPC64_VS16 = 0x30,UNW_PPC64_VS17 = 0x31,UNW_PPC64_VS18 = 0x32,UNW_PPC64_VS19 = 0x33,UNW_PPC64_VS20 = 0x34,UNW_PPC64_VS21 = 0x35,UNW_PPC64_VS22 = 0x36,UNW_PPC64_VS23 = 0x37,UNW_PPC64_VS24 = 0x38,UNW_PPC64_VS25 = 0x39,UNW_PPC64_VS26 = 0x3A,UNW_PPC64_VS27 = 0x3B,UNW_PPC64_VS28 = 0x3C,UNW_PPC64_VS29 = 0x3D,UNW_PPC64_VS30 = 0x3E,UNW_PPC64_VS31 = 0x3F,UNW_PPC64_VS32 = 0x4D,UNW_PPC64_VS33 = 0x4E,UNW_PPC64_VS34 = 0x4F,UNW_PPC64_VS35 = 0x50,UNW_PPC64_VS36 = 0x51,UNW_PPC64_VS37 = 0x52,UNW_PPC64_VS38 = 0x53,UNW_PPC64_VS39 = 0x54,UNW_PPC64_VS40 = 0x55,UNW_PPC64_VS41 = 0x56,UNW_PPC64_VS42 = 0x57,UNW_PPC64_VS43 = 0x58,UNW_PPC64_VS44 = 0x59,UNW_PPC64_VS45 = 0x5A,UNW_PPC64_VS46 = 0x5B,UNW_PPC64_VS47 = 0x5C,UNW_PPC64_VS48 = 0x5D,UNW_PPC64_VS49 = 0x5E,UNW_PPC64_VS50 = 0x5F,UNW_PPC64_VS51 = 0x60,UNW_PPC64_VS52 = 0x61,UNW_PPC64_VS53 = 0x62,UNW_PPC64_VS54 = 0x63,UNW_PPC64_VS55 = 0x64,UNW_PPC64_VS56 = 0x65,UNW_PPC64_VS57 = 0x66,UNW_PPC64_VS58 = 0x67,UNW_PPC64_VS59 = 0x68,UNW_PPC64_VS60 = 0x69,UNW_PPC64_VS61 = 0x6A,UNW_PPC64_VS62 = 0x6B,UNW_PPC64_VS63 = 0x6C,};
struct _0F86A902432A6AC29AEC495AB2D22C1F {float red;float green;float blue;float white;};
enum _11300931AEA6F61F45BCB61D53CEF911 {kAudioFileAIFFType = 0x41494646,kAudioFileAIFCType = 0x41494643,kAudioFileWAVEType = 0x57415645,kAudioFileRF64Type = 0x52463634,kAudioFileBW64Type = 0x42573634,kAudioFileWave64Type = 0x57363466,kAudioFileSoundDesigner2Type = 0x53643266,kAudioFileNextType = 0x4E655854,kAudioFileMP3Type = 0x4D504733,kAudioFileMP2Type = 0x4D504732,kAudioFileMP1Type = 0x4D504731,kAudioFileAC3Type = 0x61632D33,kAudioFileAAC_ADTSType = 0x61647473,kAudioFileMPEG4Type = 0x6D703466,kAudioFileM4AType = 0x6D346166,kAudioFileM4BType = 0x6D346266,kAudioFileCAFType = 0x63616666,kAudioFile3GPType = 0x33677070,kAudioFile3GP2Type = 0x33677032,kAudioFileAMRType = 0x616D7266,kAudioFileFLACType = 0x666C6163,kAudioFileLATMInLOASType = 0x6C6F6173,};
enum _11AD27D9FD6AD53C0BABFE9FC8A30AD0 {kCMTimebaseError_MissingRequiredParameter = 0xFFFFCE34,kCMTimebaseError_InvalidParameter = 0xFFFFCE33,kCMTimebaseError_AllocationFailed = 0xFFFFCE32,kCMTimebaseError_TimerIntervalTooShort = 0xFFFFCE31,kCMTimebaseError_ReadOnly = 0xFFFFCE2B,};
enum _11F5F9932BEECE9F91A45842EB66F84D {kAudioComponentInstantiation_LoadOutOfProcess = 0x1,kAudioComponentInstantiation_LoadInProcess = 0x2,};
enum _12294FB8E9BAFAE0569C6E006BCD2666 {kCVPixelFormatType_1Monochrome = 0x1,kCVPixelFormatType_2Indexed = 0x2,kCVPixelFormatType_4Indexed = 0x4,kCVPixelFormatType_8Indexed = 0x8,kCVPixelFormatType_1IndexedGray_WhiteIsZero = 0x21,kCVPixelFormatType_2IndexedGray_WhiteIsZero = 0x22,kCVPixelFormatType_4IndexedGray_WhiteIsZero = 0x24,kCVPixelFormatType_8IndexedGray_WhiteIsZero = 0x28,kCVPixelFormatType_16BE555 = 0x10,kCVPixelFormatType_16LE555 = 0x4C353535,kCVPixelFormatType_16LE5551 = 0x35353531,kCVPixelFormatType_16BE565 = 0x42353635,kCVPixelFormatType_16LE565 = 0x4C353635,kCVPixelFormatType_24RGB = 0x18,kCVPixelFormatType_24BGR = 0x32344247,kCVPixelFormatType_32ARGB = 0x20,kCVPixelFormatType_32BGRA = 0x42475241,kCVPixelFormatType_32ABGR = 0x41424752,kCVPixelFormatType_32RGBA = 0x52474241,kCVPixelFormatType_64ARGB = 0x62363461,kCVPixelFormatType_48RGB = 0x62343872,kCVPixelFormatType_32AlphaGray = 0x62333261,kCVPixelFormatType_16Gray = 0x62313667,kCVPixelFormatType_30RGB = 0x5231306B,kCVPixelFormatType_422YpCbCr8 = 0x32767579,kCVPixelFormatType_4444YpCbCrA8 = 0x76343038,kCVPixelFormatType_4444YpCbCrA8R = 0x72343038,kCVPixelFormatType_4444AYpCbCr8 = 0x79343038,kCVPixelFormatType_4444AYpCbCr16 = 0x79343136,kCVPixelFormatType_444YpCbCr8 = 0x76333038,kCVPixelFormatType_422YpCbCr16 = 0x76323136,kCVPixelFormatType_422YpCbCr10 = 0x76323130,kCVPixelFormatType_444YpCbCr10 = 0x76343130,kCVPixelFormatType_420YpCbCr8Planar = 0x79343230,kCVPixelFormatType_420YpCbCr8PlanarFullRange = 0x66343230,kCVPixelFormatType_422YpCbCr_4A_8BiPlanar = 0x61327679,kCVPixelFormatType_420YpCbCr8BiPlanarVideoRange = 0x34323076,kCVPixelFormatType_420YpCbCr8BiPlanarFullRange = 0x34323066,kCVPixelFormatType_422YpCbCr8BiPlanarVideoRange = 0x34323276,kCVPixelFormatType_422YpCbCr8BiPlanarFullRange = 0x34323266,kCVPixelFormatType_444YpCbCr8BiPlanarVideoRange = 0x34343476,kCVPixelFormatType_444YpCbCr8BiPlanarFullRange = 0x34343466,kCVPixelFormatType_422YpCbCr8_yuvs = 0x79757673,kCVPixelFormatType_422YpCbCr8FullRange = 0x79757666,kCVPixelFormatType_OneComponent8 = 0x4C303038,kCVPixelFormatType_TwoComponent8 = 0x32433038,kCVPixelFormatType_30RGBLEPackedWideGamut = 0x77333072,kCVPixelFormatType_ARGB2101010LEPacked = 0x6C313072,kCVPixelFormatType_OneComponent10 = 0x4C303130,kCVPixelFormatType_OneComponent12 = 0x4C303132,kCVPixelFormatType_OneComponent16 = 0x4C303136,kCVPixelFormatType_TwoComponent16 = 0x32433136,kCVPixelFormatType_OneComponent16Half = 0x4C303068,kCVPixelFormatType_OneComponent32Float = 0x4C303066,kCVPixelFormatType_TwoComponent16Half = 0x32433068,kCVPixelFormatType_TwoComponent32Float = 0x32433066,kCVPixelFormatType_64RGBAHalf = 0x52476841,kCVPixelFormatType_128RGBAFloat = 0x52476641,kCVPixelFormatType_14Bayer_GRBG = 0x67726234,kCVPixelFormatType_14Bayer_RGGB = 0x72676734,kCVPixelFormatType_14Bayer_BGGR = 0x62676734,kCVPixelFormatType_14Bayer_GBRG = 0x67627234,kCVPixelFormatType_DisparityFloat16 = 0x68646973,kCVPixelFormatType_DisparityFloat32 = 0x66646973,kCVPixelFormatType_DepthFloat16 = 0x68646570,kCVPixelFormatType_DepthFloat32 = 0x66646570,kCVPixelFormatType_420YpCbCr10BiPlanarVideoRange = 0x78343230,kCVPixelFormatType_422YpCbCr10BiPlanarVideoRange = 0x78343232,kCVPixelFormatType_444YpCbCr10BiPlanarVideoRange = 0x78343434,kCVPixelFormatType_420YpCbCr10BiPlanarFullRange = 0x78663230,kCVPixelFormatType_422YpCbCr10BiPlanarFullRange = 0x78663232,kCVPixelFormatType_444YpCbCr10BiPlanarFullRange = 0x78663434,kCVPixelFormatType_420YpCbCr8VideoRange_8A_TriPlanar = 0x76306138,kCVPixelFormatType_16VersatileBayer = 0x62703136,kCVPixelFormatType_64RGBA_DownscaledProResRAW = 0x62703634,};
enum _122D16F90CEC350CFCE0F7E832B03B7D {MTLRenderStageVertex = 0x1,MTLRenderStageFragment = 0x2,};
enum _124DB4502011D1D526A751B30E593D34 {NSDataReadingMappedIfSafe = 0x1,NSDataReadingUncached = 0x2,NSDataReadingMappedAlways = 0x8,NSDataReadingMapped = 0x1,NSMappedRead = 0x1,NSUncachedRead = 0x2,};
enum _129CC13B9550B48E8D031C3FB85E272C {NSControlCharacterZeroAdvancementAction = 0x1,NSControlCharacterWhitespaceAction = 0x2,NSControlCharacterHorizontalTabAction = 0x4,NSControlCharacterLineBreakAction = 0x8,NSControlCharacterParagraphBreakAction = 0x10,NSControlCharacterContainerBreakAction = 0x20,};
enum _12B23BFAC2F28CDDAEE72C0F7AD66441 {kCMFormatDescriptionBridgeError_InvalidParameter = 0xFFFFCE58,kCMFormatDescriptionBridgeError_AllocationFailed = 0xFFFFCE57,kCMFormatDescriptionBridgeError_InvalidSerializedSampleDescription = 0xFFFFCE56,kCMFormatDescriptionBridgeError_InvalidFormatDescription = 0xFFFFCE55,kCMFormatDescriptionBridgeError_IncompatibleFormatDescription = 0xFFFFCE54,kCMFormatDescriptionBridgeError_UnsupportedSampleDescriptionFlavor = 0xFFFFCE53,kCMFormatDescriptionBridgeError_InvalidSlice = 0xFFFFCE51,};
enum _12D0064599294FB5980EDD67D039697B {NSFileCoordinatorReadingWithoutChanges = 0x1,NSFileCoordinatorReadingResolvesSymbolicLink = 0x2,NSFileCoordinatorReadingImmediatelyAvailableMetadataOnly = 0x4,NSFileCoordinatorReadingForUploading = 0x8,};
enum _12DE4F0D2EDC1F223490CE23CF181C79 {UNWIND_ARM64_MODE_MASK = 0xF000000,UNWIND_ARM64_MODE_FRAMELESS = 0x2000000,UNWIND_ARM64_MODE_DWARF = 0x3000000,UNWIND_ARM64_MODE_FRAME = 0x4000000,UNWIND_ARM64_FRAME_X19_X20_PAIR = 0x1,UNWIND_ARM64_FRAME_X21_X22_PAIR = 0x2,UNWIND_ARM64_FRAME_X23_X24_PAIR = 0x4,UNWIND_ARM64_FRAME_X25_X26_PAIR = 0x8,UNWIND_ARM64_FRAME_X27_X28_PAIR = 0x10,UNWIND_ARM64_FRAME_D8_D9_PAIR = 0x100,UNWIND_ARM64_FRAME_D10_D11_PAIR = 0x200,UNWIND_ARM64_FRAME_D12_D13_PAIR = 0x400,UNWIND_ARM64_FRAME_D14_D15_PAIR = 0x800,UNWIND_ARM64_FRAMELESS_STACK_SIZE_MASK = 0xFFF000,UNWIND_ARM64_DWARF_SECTION_OFFSET = 0xFFFFFF,};
enum _144A7563BCA2A4144EE259175C63C459 {kCAF_StreamDescriptionChunkID = 0x64657363,kCAF_AudioDataChunkID = 0x64617461,kCAF_ChannelLayoutChunkID = 0x6368616E,kCAF_FillerChunkID = 0x66726565,kCAF_MarkerChunkID = 0x6D61726B,kCAF_RegionChunkID = 0x7265676E,kCAF_InstrumentChunkID = 0x696E7374,kCAF_MagicCookieID = 0x6B756B69,kCAF_InfoStringsChunkID = 0x696E666F,kCAF_EditCommentsChunkID = 0x65646374,kCAF_PacketTableChunkID = 0x70616B74,kCAF_StringsChunkID = 0x73747267,kCAF_UUIDChunkID = 0x75756964,kCAF_PeakChunkID = 0x7065616B,kCAF_OverviewChunkID = 0x6F767677,kCAF_MIDIChunkID = 0x6D696469,kCAF_UMIDChunkID = 0x756D6964,kCAF_FormatListID = 0x6C647363,kCAF_iXMLChunkID = 0x69584D4C,};
enum _14DD41F95F3ACC82F5759C2660F519A7 {kKERXLineStart = 0x1,kKERXLineEndKerning = 0x2,kKERXNoCrossKerning = 0x4,kKERXNotesRequested = 0x8,kKERXNoStakeNote = 0x1,kKERXCrossStreamResetNote = 0x2,kKERXNotApplied = 0x1,};
enum _14ED3DDA4F17D571ED8B2B3F250E200E {kIOSurfacePurgeableNonVolatile = 0x0,kIOSurfacePurgeableVolatile = 0x1,kIOSurfacePurgeableEmpty = 0x2,kIOSurfacePurgeableKeepCurrent = 0x3,};
enum _171D03A492238226680E171CD89F07CE {kReverb2Param_DryWetMix = 0x0,kReverb2Param_Gain = 0x1,kReverb2Param_MinDelayTime = 0x2,kReverb2Param_MaxDelayTime = 0x3,kReverb2Param_DecayTimeAt0Hz = 0x4,kReverb2Param_DecayTimeAtNyquist = 0x5,kReverb2Param_RandomizeReflections = 0x6,};
enum _177C34BFC9F3584565D7F7DE8B918272 {NSWrapCalendarComponents = 0x1,};
enum _1789E16052CF7D2514B40DEFE8F769D8 {kAudioUnitType_Output = 0x61756F75,kAudioUnitType_MusicDevice = 0x61756D75,kAudioUnitType_MusicEffect = 0x61756D66,kAudioUnitType_FormatConverter = 0x61756663,kAudioUnitType_Effect = 0x61756678,kAudioUnitType_Mixer = 0x61756D78,kAudioUnitType_Panner = 0x6175706E,kAudioUnitType_Generator = 0x6175676E,kAudioUnitType_OfflineEffect = 0x61756F6C,kAudioUnitType_MIDIProcessor = 0x61756D69,};
enum _17F4514B16FB6C834E68FFFE67AE5EDF {AVPlayerHDRModeHLG = 0x1,AVPlayerHDRModeHDR10 = 0x2,AVPlayerHDRModeDolbyVision = 0x4,};
enum _18251D9FA62BB5BCF57CA71D267C7F1B {NSActivityIdleDisplaySleepDisabled = 0x10000000000,NSActivityIdleSystemSleepDisabled = 0x100000,NSActivitySuddenTerminationDisabled = 0x4000,NSActivityAutomaticTerminationDisabled = 0x8000,NSActivityUserInitiated = 0xFFFFFF,NSActivityUserInitiatedAllowingIdleSystemSleep = 0xEFFFFF,NSActivityBackground = 0xFF,NSActivityLatencyCritical = 0xFF00000000,};
enum _184160A7AA656C64DD24A7FB1D6F4153 {MTLColorWriteMaskNone = 0x0,MTLColorWriteMaskRed = 0x8,MTLColorWriteMaskGreen = 0x4,MTLColorWriteMaskBlue = 0x2,MTLColorWriteMaskAlpha = 0x1,MTLColorWriteMaskAll = 0xF,};
enum _18D18755E90BC8348AB3A66DDAAEF234 {NSAttributedStringEnumerationReverse = 0x2,NSAttributedStringEnumerationLongestEffectiveRangeNotRequired = 0x100000,};
enum _190B1C78EA500FF59CE8F11C7EEECC30 {kAudioUnitProperty_ClassInfo = 0x0,kAudioUnitProperty_MakeConnection = 0x1,kAudioUnitProperty_SampleRate = 0x2,kAudioUnitProperty_ParameterList = 0x3,kAudioUnitProperty_ParameterInfo = 0x4,kAudioUnitProperty_CPULoad = 0x6,kAudioUnitProperty_StreamFormat = 0x8,kAudioUnitProperty_ElementCount = 0xB,kAudioUnitProperty_Latency = 0xC,kAudioUnitProperty_SupportedNumChannels = 0xD,kAudioUnitProperty_MaximumFramesPerSlice = 0xE,kAudioUnitProperty_ParameterValueStrings = 0x10,kAudioUnitProperty_AudioChannelLayout = 0x13,kAudioUnitProperty_TailTime = 0x14,kAudioUnitProperty_BypassEffect = 0x15,kAudioUnitProperty_LastRenderError = 0x16,kAudioUnitProperty_SetRenderCallback = 0x17,kAudioUnitProperty_FactoryPresets = 0x18,kAudioUnitProperty_RenderQuality = 0x1A,kAudioUnitProperty_HostCallbacks = 0x1B,kAudioUnitProperty_InPlaceProcessing = 0x1D,kAudioUnitProperty_ElementName = 0x1E,kAudioUnitProperty_SupportedChannelLayoutTags = 0x20,kAudioUnitProperty_PresentPreset = 0x24,kAudioUnitProperty_DependentParameters = 0x2D,kAudioUnitProperty_InputSamplesInOutput = 0x31,kAudioUnitProperty_ShouldAllocateBuffer = 0x33,kAudioUnitProperty_FrequencyResponse = 0x34,kAudioUnitProperty_ParameterHistoryInfo = 0x35,kAudioUnitProperty_NickName = 0x36,kAudioUnitProperty_OfflineRender = 0x25,kAudioUnitProperty_ParameterIDName = 0x22,kAudioUnitProperty_ParameterStringFromValue = 0x21,kAudioUnitProperty_ParameterClumpName = 0x23,kAudioUnitProperty_ParameterValueFromString = 0x26,kAudioUnitProperty_ContextName = 0x19,kAudioUnitProperty_PresentationLatency = 0x28,kAudioUnitProperty_ClassInfoFromDocument = 0x32,kAudioUnitProperty_RequestViewController = 0x38,kAudioUnitProperty_ParametersForOverview = 0x39,kAudioUnitProperty_SupportsMPE = 0x3A,kAudioUnitProperty_RenderContextObserver = 0x3C,kAudioUnitProperty_MIDIOutputCallbackInfo = 0x2F,kAudioUnitProperty_MIDIOutputCallback = 0x30,};
enum _191834EB2723E90A501BCA872424D863 {INShortcutAvailabilityOptionSleepMindfulness = 0x1,INShortcutAvailabilityOptionSleepJournaling = 0x2,INShortcutAvailabilityOptionSleepMusic = 0x4,INShortcutAvailabilityOptionSleepPodcasts = 0x8,INShortcutAvailabilityOptionSleepReading = 0x10,INShortcutAvailabilityOptionSleepPrepareForTomorrow = 0x20,INShortcutAvailabilityOptionSleepYogaAndStretching = 0x40,};
enum _1928EAE6D1444AC32E9EFCE8F431D3D7 {BLOCK_DEALLOCATING = 0x1,BLOCK_REFCOUNT_MASK = 0xFFFE,BLOCK_NEEDS_FREE = 0x1000000,BLOCK_HAS_COPY_DISPOSE = 0x2000000,BLOCK_HAS_CTOR = 0x4000000,BLOCK_IS_GC = 0x8000000,BLOCK_IS_GLOBAL = 0x10000000,BLOCK_USE_STRET = 0x20000000,BLOCK_HAS_SIGNATURE = 0x40000000,BLOCK_HAS_EXTENDED_LAYOUT = 0x80000000,};
enum _193F6B472ED063835D1E956D064D4A54 {kMusicSequenceLoadSMF_PreserveTracks = 0x0,kMusicSequenceLoadSMF_ChannelsToTracks = 0x1,};
enum _1963FB5E1CBEDB58DA91A94C2F227967 {CKRecordZoneCapabilityFetchChanges = 0x1,CKRecordZoneCapabilityAtomic = 0x2,CKRecordZoneCapabilitySharing = 0x4,};
enum _19A7C089C89DB07B0F48C01B49E43B27 {kCMBlockBufferCustomBlockSourceVersion = 0x0,};
enum _1A19DF2F1B964E5DB48DFC2DD769B7E4 {kSTKCrossStreamReset = 0x2000,};
enum _1A41895E4ED75AA20FAEAB744D80522B {AVAudioSessionInterruptionFlags_ShouldResume = 0x1,};
enum _1A55CF62037DB0B87002B7428C23DD52 {ARFrameSemanticNone = 0x0,ARFrameSemanticPersonSegmentation = 0x1,ARFrameSemanticPersonSegmentationWithDepth = 0x3,ARFrameSemanticBodyDetection = 0x4,ARFrameSemanticSceneDepth = 0x8,};
enum _1ADDE7829DABAFAFCBAF46A74C4C84F6 {MKLocalSearchCompleterResultTypeAddress = 0x1,MKLocalSearchCompleterResultTypePointOfInterest = 0x2,MKLocalSearchCompleterResultTypeQuery = 0x4,};
enum _1B056C7BD047144BA62260737BF14E4A {MTLCommandBufferErrorOptionNone = 0x0,MTLCommandBufferErrorOptionEncoderExecutionStatus = 0x1,};
enum _1B7FEA58191E90EA075A0CDB8FCF1662 {kCMMetadataIdentifierError_AllocationFailed = 0xFFFFC054,kCMMetadataIdentifierError_RequiredParameterMissing = 0xFFFFC053,kCMMetadataIdentifierError_BadKey = 0xFFFFC052,kCMMetadataIdentifierError_BadKeyLength = 0xFFFFC051,kCMMetadataIdentifierError_BadKeyType = 0xFFFFC050,kCMMetadataIdentifierError_BadNumberKey = 0xFFFFC04F,kCMMetadataIdentifierError_BadKeySpace = 0xFFFFC04E,kCMMetadataIdentifierError_BadIdentifier = 0xFFFFC04D,kCMMetadataIdentifierError_NoKeyValueAvailable = 0xFFFFC04C,};
enum _1BBF2FE41727204DF51457E635B0DD76 {variationFontTableTag = 0x66766172,};
enum _1C2E9390D673863590F3ABA5C96F5CD8 {NSDateComponentsFormatterZeroFormattingBehaviorNone = 0x0,NSDateComponentsFormatterZeroFormattingBehaviorDefault = 0x1,NSDateComponentsFormatterZeroFormattingBehaviorDropLeading = 0x2,NSDateComponentsFormatterZeroFormattingBehaviorDropMiddle = 0x4,NSDateComponentsFormatterZeroFormattingBehaviorDropTrailing = 0x8,NSDateComponentsFormatterZeroFormattingBehaviorDropAll = 0xE,NSDateComponentsFormatterZeroFormattingBehaviorPad = 0x10000,};
enum _1C382E41F7C8DC29A37D1475F9525B43 {UIRemoteNotificationTypeNone = 0x0,UIRemoteNotificationTypeBadge = 0x1,UIRemoteNotificationTypeSound = 0x2,UIRemoteNotificationTypeAlert = 0x4,UIRemoteNotificationTypeNewsstandContentAvailability = 0x8,};
typedef void *_1C570C147E8FD4E17AEC961E98942760;
enum _1CF106B9E6FE63D1091420854DD35808 {DYLD_CHAINED_PTR_ARM64E = 0x1,DYLD_CHAINED_PTR_64 = 0x2,DYLD_CHAINED_PTR_32 = 0x3,DYLD_CHAINED_PTR_32_CACHE = 0x4,DYLD_CHAINED_PTR_32_FIRMWARE = 0x5,DYLD_CHAINED_PTR_64_OFFSET = 0x6,DYLD_CHAINED_PTR_ARM64E_OFFSET = 0x7,DYLD_CHAINED_PTR_ARM64E_KERNEL = 0x7,DYLD_CHAINED_PTR_64_KERNEL_CACHE = 0x8,DYLD_CHAINED_PTR_ARM64E_USERLAND = 0x9,DYLD_CHAINED_PTR_ARM64E_FIRMWARE = 0xA,DYLD_CHAINED_PTR_X86_64_KERNEL_CACHE = 0xB,DYLD_CHAINED_PTR_ARM64E_USERLAND24 = 0xC,};
enum _1E0682B6E43FF6E435350693CB2D6A75 {kCVVersatileBayer_BayerPattern_RGGB = 0x0,kCVVersatileBayer_BayerPattern_GRBG = 0x1,kCVVersatileBayer_BayerPattern_GBRG = 0x2,kCVVersatileBayer_BayerPattern_BGGR = 0x3,};
enum _1E0D889DA82B5E0FBB44DEF968B1807F {MPSKernelOptionsNone = 0x0,MPSKernelOptionsSkipAPIValidation = 0x1,MPSKernelOptionsAllowReducedPrecision = 0x2,MPSKernelOptionsDisableInternalTiling = 0x4,MPSKernelOptionsInsertDebugGroups = 0x8,MPSKernelOptionsVerbose = 0x10,};
enum _1E2568CBD2E1E60F00FA357350A8FC44 {UNW_REG_IP = 0xFFFFFFFF,UNW_REG_SP = 0xFFFFFFFE,};
enum _1E54F31DF67C3075830F7780368CB480 {UNW_ARM64_X0 = 0x0,UNW_ARM64_X1 = 0x1,UNW_ARM64_X2 = 0x2,UNW_ARM64_X3 = 0x3,UNW_ARM64_X4 = 0x4,UNW_ARM64_X5 = 0x5,UNW_ARM64_X6 = 0x6,UNW_ARM64_X7 = 0x7,UNW_ARM64_X8 = 0x8,UNW_ARM64_X9 = 0x9,UNW_ARM64_X10 = 0xA,UNW_ARM64_X11 = 0xB,UNW_ARM64_X12 = 0xC,UNW_ARM64_X13 = 0xD,UNW_ARM64_X14 = 0xE,UNW_ARM64_X15 = 0xF,UNW_ARM64_X16 = 0x10,UNW_ARM64_X17 = 0x11,UNW_ARM64_X18 = 0x12,UNW_ARM64_X19 = 0x13,UNW_ARM64_X20 = 0x14,UNW_ARM64_X21 = 0x15,UNW_ARM64_X22 = 0x16,UNW_ARM64_X23 = 0x17,UNW_ARM64_X24 = 0x18,UNW_ARM64_X25 = 0x19,UNW_ARM64_X26 = 0x1A,UNW_ARM64_X27 = 0x1B,UNW_ARM64_X28 = 0x1C,UNW_ARM64_X29 = 0x1D,UNW_ARM64_FP = 0x1D,UNW_ARM64_X30 = 0x1E,UNW_ARM64_LR = 0x1E,UNW_ARM64_X31 = 0x1F,UNW_ARM64_SP = 0x1F,UNW_ARM64_RA_SIGN_STATE = 0x22,UNW_ARM64_D0 = 0x40,UNW_ARM64_D1 = 0x41,UNW_ARM64_D2 = 0x42,UNW_ARM64_D3 = 0x43,UNW_ARM64_D4 = 0x44,UNW_ARM64_D5 = 0x45,UNW_ARM64_D6 = 0x46,UNW_ARM64_D7 = 0x47,UNW_ARM64_D8 = 0x48,UNW_ARM64_D9 = 0x49,UNW_ARM64_D10 = 0x4A,UNW_ARM64_D11 = 0x4B,UNW_ARM64_D12 = 0x4C,UNW_ARM64_D13 = 0x4D,UNW_ARM64_D14 = 0x4E,UNW_ARM64_D15 = 0x4F,UNW_ARM64_D16 = 0x50,UNW_ARM64_D17 = 0x51,UNW_ARM64_D18 = 0x52,UNW_ARM64_D19 = 0x53,UNW_ARM64_D20 = 0x54,UNW_ARM64_D21 = 0x55,UNW_ARM64_D22 = 0x56,UNW_ARM64_D23 = 0x57,UNW_ARM64_D24 = 0x58,UNW_ARM64_D25 = 0x59,UNW_ARM64_D26 = 0x5A,UNW_ARM64_D27 = 0x5B,UNW_ARM64_D28 = 0x5C,UNW_ARM64_D29 = 0x5D,UNW_ARM64_D30 = 0x5E,UNW_ARM64_D31 = 0x5F,};
enum _1E82411DB417777D5612BD1AA75EB0F4 {kCFNetServiceFlagMoreComing = 0x1,kCFNetServiceFlagIsDomain = 0x2,kCFNetServiceFlagIsDefault = 0x4,kCFNetServiceFlagIsRegistrationDomain = 0x4,kCFNetServiceFlagRemove = 0x8,};
enum _1E89806EE4BB33B494D67515524ACF3C {kCFFileSecurityClearOwner = 0x1,kCFFileSecurityClearGroup = 0x2,kCFFileSecurityClearMode = 0x4,kCFFileSecurityClearOwnerUUID = 0x8,kCFFileSecurityClearGroupUUID = 0x10,kCFFileSecurityClearAccessControlList = 0x20,};
enum _1EAD5A71BA2771141D26E6182F65F3EC {kCMSyncError_MissingRequiredParameter = 0xFFFFCE30,kCMSyncError_InvalidParameter = 0xFFFFCE2F,kCMSyncError_AllocationFailed = 0xFFFFCE2E,kCMSyncError_RateMustBeNonZero = 0xFFFFCE2D,};
enum _1ED68F7CE608C4548472DD8210E553B0 {kDNSServiceErr_NoError = 0x0,kDNSServiceErr_Unknown = 0xFFFEFFFF,kDNSServiceErr_NoSuchName = 0xFFFEFFFE,kDNSServiceErr_NoMemory = 0xFFFEFFFD,kDNSServiceErr_BadParam = 0xFFFEFFFC,kDNSServiceErr_BadReference = 0xFFFEFFFB,kDNSServiceErr_BadState = 0xFFFEFFFA,kDNSServiceErr_BadFlags = 0xFFFEFFF9,kDNSServiceErr_Unsupported = 0xFFFEFFF8,kDNSServiceErr_NotInitialized = 0xFFFEFFF7,kDNSServiceErr_AlreadyRegistered = 0xFFFEFFF5,kDNSServiceErr_NameConflict = 0xFFFEFFF4,kDNSServiceErr_Invalid = 0xFFFEFFF3,kDNSServiceErr_Firewall = 0xFFFEFFF2,kDNSServiceErr_Incompatible = 0xFFFEFFF1,kDNSServiceErr_BadInterfaceIndex = 0xFFFEFFF0,kDNSServiceErr_Refused = 0xFFFEFFEF,kDNSServiceErr_NoSuchRecord = 0xFFFEFFEE,kDNSServiceErr_NoAuth = 0xFFFEFFED,kDNSServiceErr_NoSuchKey = 0xFFFEFFEC,kDNSServiceErr_NATTraversal = 0xFFFEFFEB,kDNSServiceErr_DoubleNAT = 0xFFFEFFEA,kDNSServiceErr_BadTime = 0xFFFEFFE9,kDNSServiceErr_BadSig = 0xFFFEFFE8,kDNSServiceErr_BadKey = 0xFFFEFFE7,kDNSServiceErr_Transient = 0xFFFEFFE6,kDNSServiceErr_ServiceNotRunning = 0xFFFEFFE5,kDNSServiceErr_NATPortMappingUnsupported = 0xFFFEFFE4,kDNSServiceErr_NATPortMappingDisabled = 0xFFFEFFE3,kDNSServiceErr_NoRouter = 0xFFFEFFE2,kDNSServiceErr_PollingMode = 0xFFFEFFE1,kDNSServiceErr_Timeout = 0xFFFEFFE0,kDNSServiceErr_DefunctConnection = 0xFFFEFFDF,kDNSServiceErr_PolicyDenied = 0xFFFEFFDE,};
enum _1F1BF5FB7529F18358EA20A45ABC8183 {kNilOptions = 0x0,};
enum _1F21A8E67211B02D41709C49CBF92153 {kAudioUnitSubType_GenericOutput = 0x67656E72,kAudioUnitSubType_VoiceProcessingIO = 0x7670696F,};
enum _1F77559EE05316B8BAA980E6DE75F054 {kAudioFormatProperty_HardwareCodecCapabilities = 0x68776363,};
enum _1F849FEF730BC2B31D2604835A888CD5 {kMultiChannelMixerParam_Volume = 0x0,kMultiChannelMixerParam_Enable = 0x1,kMultiChannelMixerParam_Pan = 0x2,kMultiChannelMixerParam_PreAveragePower = 0x3E8,kMultiChannelMixerParam_PrePeakHoldLevel = 0x7D0,kMultiChannelMixerParam_PostAveragePower = 0xBB8,kMultiChannelMixerParam_PostPeakHoldLevel = 0xFA0,};
enum _1FE3094173FA53ABD8F12A8E65EAFAD6 {kCTRunStatusNoStatus = 0x0,kCTRunStatusRightToLeft = 0x1,kCTRunStatusNonMonotonic = 0x2,kCTRunStatusHasNonIdentityMatrix = 0x4,};
enum _20967DF2D4D5C47567172A5018197EB2 {NFCISO15693RequestFlagDualSubCarriers = 0x1,NFCISO15693RequestFlagHighDataRate = 0x2,NFCISO15693RequestFlagProtocolExtension = 0x8,NFCISO15693RequestFlagSelect = 0x10,NFCISO15693RequestFlagAddress = 0x20,NFCISO15693RequestFlagOption = 0x40,NFCISO15693RequestFlagCommandSpecificBit8 = 0x80,RequestFlagDualSubCarriers = 0x1,RequestFlagHighDataRate = 0x2,RequestFlagProtocolExtension = 0x8,RequestFlagSelect = 0x10,RequestFlagAddress = 0x20,RequestFlagOption = 0x40,};
enum _20A4A98C48DBEA0AEDA1EC021A0A111B {kABPersonCompositeNameFormatFirstNameFirst = 0x0,kABPersonCompositeNameFormatLastNameFirst = 0x1,};
enum _20FA0646A7FC6370AADD14E813E37383 {kDNSServiceType_A = 0x1,kDNSServiceType_NS = 0x2,kDNSServiceType_MD = 0x3,kDNSServiceType_MF = 0x4,kDNSServiceType_CNAME = 0x5,kDNSServiceType_SOA = 0x6,kDNSServiceType_MB = 0x7,kDNSServiceType_MG = 0x8,kDNSServiceType_MR = 0x9,kDNSServiceType_NULL = 0xA,kDNSServiceType_WKS = 0xB,kDNSServiceType_PTR = 0xC,kDNSServiceType_HINFO = 0xD,kDNSServiceType_MINFO = 0xE,kDNSServiceType_MX = 0xF,kDNSServiceType_TXT = 0x10,kDNSServiceType_RP = 0x11,kDNSServiceType_AFSDB = 0x12,kDNSServiceType_X25 = 0x13,kDNSServiceType_ISDN = 0x14,kDNSServiceType_RT = 0x15,kDNSServiceType_NSAP = 0x16,kDNSServiceType_NSAP_PTR = 0x17,kDNSServiceType_SIG = 0x18,kDNSServiceType_KEY = 0x19,kDNSServiceType_PX = 0x1A,kDNSServiceType_GPOS = 0x1B,kDNSServiceType_AAAA = 0x1C,kDNSServiceType_LOC = 0x1D,kDNSServiceType_NXT = 0x1E,kDNSServiceType_EID = 0x1F,kDNSServiceType_NIMLOC = 0x20,kDNSServiceType_SRV = 0x21,kDNSServiceType_ATMA = 0x22,kDNSServiceType_NAPTR = 0x23,kDNSServiceType_KX = 0x24,kDNSServiceType_CERT = 0x25,kDNSServiceType_A6 = 0x26,kDNSServiceType_DNAME = 0x27,kDNSServiceType_SINK = 0x28,kDNSServiceType_OPT = 0x29,kDNSServiceType_APL = 0x2A,kDNSServiceType_DS = 0x2B,kDNSServiceType_SSHFP = 0x2C,kDNSServiceType_IPSECKEY = 0x2D,kDNSServiceType_RRSIG = 0x2E,kDNSServiceType_NSEC = 0x2F,kDNSServiceType_DNSKEY = 0x30,kDNSServiceType_DHCID = 0x31,kDNSServiceType_NSEC3 = 0x32,kDNSServiceType_NSEC3PARAM = 0x33,kDNSServiceType_HIP = 0x37,kDNSServiceType_SPF = 0x63,kDNSServiceType_UINFO = 0x64,kDNSServiceType_UID = 0x65,kDNSServiceType_GID = 0x66,kDNSServiceType_UNSPEC = 0x67,kDNSServiceType_TKEY = 0xF9,kDNSServiceType_TSIG = 0xFA,kDNSServiceType_IXFR = 0xFB,kDNSServiceType_AXFR = 0xFC,kDNSServiceType_MAILB = 0xFD,kDNSServiceType_MAILA = 0xFE,kDNSServiceType_ANY = 0xFF,kDNSServiceType_HTTPSSVC = 0xFFC7,kDNSServiceType_SVCB = 0xFFC8,};
struct _213D9A961E8B493221875F078C74556F {unsigned long long _isEmpty : 1;unsigned long long _hasSingleRange : 1;unsigned long long _cacheValid : 1;unsigned long long _reservedArrayBinderController : 29;};
enum _219DCAF4E5E0EEC7850F828B07E99E3A {NSBundleExecutableArchitectureI386 = 0x7,NSBundleExecutableArchitecturePPC = 0x12,NSBundleExecutableArchitectureX86_64 = 0x1000007,NSBundleExecutableArchitecturePPC64 = 0x1000012,NSBundleExecutableArchitectureARM64 = 0x100000C,};
enum _21CB272ADF819391EF82E578453A19C0 {nameFontTableTag = 0x6E616D65,};
enum _21DDC27E4EB6665349417D7D68465DC7 {kNoStylisticAlternatesSelector = 0x0,kStylisticAltOneOnSelector = 0x2,kStylisticAltOneOffSelector = 0x3,kStylisticAltTwoOnSelector = 0x4,kStylisticAltTwoOffSelector = 0x5,kStylisticAltThreeOnSelector = 0x6,kStylisticAltThreeOffSelector = 0x7,kStylisticAltFourOnSelector = 0x8,kStylisticAltFourOffSelector = 0x9,kStylisticAltFiveOnSelector = 0xA,kStylisticAltFiveOffSelector = 0xB,kStylisticAltSixOnSelector = 0xC,kStylisticAltSixOffSelector = 0xD,kStylisticAltSevenOnSelector = 0xE,kStylisticAltSevenOffSelector = 0xF,kStylisticAltEightOnSelector = 0x10,kStylisticAltEightOffSelector = 0x11,kStylisticAltNineOnSelector = 0x12,kStylisticAltNineOffSelector = 0x13,kStylisticAltTenOnSelector = 0x14,kStylisticAltTenOffSelector = 0x15,kStylisticAltElevenOnSelector = 0x16,kStylisticAltElevenOffSelector = 0x17,kStylisticAltTwelveOnSelector = 0x18,kStylisticAltTwelveOffSelector = 0x19,kStylisticAltThirteenOnSelector = 0x1A,kStylisticAltThirteenOffSelector = 0x1B,kStylisticAltFourteenOnSelector = 0x1C,kStylisticAltFourteenOffSelector = 0x1D,kStylisticAltFifteenOnSelector = 0x1E,kStylisticAltFifteenOffSelector = 0x1F,kStylisticAltSixteenOnSelector = 0x20,kStylisticAltSixteenOffSelector = 0x21,kStylisticAltSeventeenOnSelector = 0x22,kStylisticAltSeventeenOffSelector = 0x23,kStylisticAltEighteenOnSelector = 0x24,kStylisticAltEighteenOffSelector = 0x25,kStylisticAltNineteenOnSelector = 0x26,kStylisticAltNineteenOffSelector = 0x27,kStylisticAltTwentyOnSelector = 0x28,kStylisticAltTwentyOffSelector = 0x29,};
enum _21E193373569E2B6208C39E9AFEC441C {kCCOptionPKCS7Padding = 0x1,kCCOptionECBMode = 0x2,};
enum _2203690896F972A9D3CC0EE9B8B6A97B {BLOCK_BYREF_LAYOUT_MASK = 0xF0000000,BLOCK_BYREF_LAYOUT_EXTENDED = 0x10000000,BLOCK_BYREF_LAYOUT_NON_OBJECT = 0x20000000,BLOCK_BYREF_LAYOUT_STRONG = 0x30000000,BLOCK_BYREF_LAYOUT_WEAK = 0x40000000,BLOCK_BYREF_LAYOUT_UNRETAINED = 0x50000000,BLOCK_BYREF_IS_GC = 0x8000000,BLOCK_BYREF_HAS_COPY_DISPOSE = 0x2000000,BLOCK_BYREF_NEEDS_FREE = 0x1000000,};
enum _22146F1F06FC7BB25BADFF9718B096D1 {kAudioComponentFlag_Unsearchable = 0x1,kAudioComponentFlag_SandboxSafe = 0x2,kAudioComponentFlag_IsV3AudioUnit = 0x4,kAudioComponentFlag_RequiresAsyncInstantiation = 0x8,kAudioComponentFlag_CanLoadInProcess = 0x10,};
enum _23A0BE5DE2DCD62C84AD0A06020814E3 {AVMovieWritingAddMovieHeaderToDestination = 0x0,AVMovieWritingTruncateDestinationToMovieHeaderOnly = 0x1,};
enum _23E17572AD27EE371AD2C98084E44C72 {ENActivityFlagsExposureDetected = 0x1,ENActivityFlagsStatusChanged = 0x2,};
enum _24408986E05F6D227EB7ADCC37DFC85A {kAudioUnitProperty_3DMixerDistanceParams = 0xBC2,kAudioUnitProperty_3DMixerAttenuationCurve = 0xBC5,kAudioUnitProperty_DopplerShift = 0xBBA,kAudioUnitProperty_3DMixerRenderingFlags = 0xBBB,kAudioUnitProperty_3DMixerDistanceAtten = 0xBBC,kAudioUnitProperty_ReverbPreset = 0xBC4,};
enum _250F343F4EE8D09AA349E64EDF974DE9 {kSCBondStatusOK = 0x0,kSCBondStatusLinkInvalid = 0x1,kSCBondStatusNoPartner = 0x2,kSCBondStatusNotInActiveGroup = 0x3,kSCBondStatusUnknown = 0x3E7,};
enum _259600348C9AAE2C51ED3D408A0B5B0C {kAudioSessionMode_Default = 0x64666C74,kAudioSessionMode_VoiceChat = 0x76636374,kAudioSessionMode_VideoRecording = 0x76726364,kAudioSessionMode_Measurement = 0x6D736D74,kAudioSessionMode_GameChat = 0x676D6374,};
enum _25D6D661218FEB4F9CA39964DBA9B52C {kDNSServiceClass_IN = 0x1,};
enum _260EE7313E69253823D2FDD318AF3F79 {HMHomeManagerAuthorizationStatusDetermined = 0x1,HMHomeManagerAuthorizationStatusRestricted = 0x2,HMHomeManagerAuthorizationStatusAuthorized = 0x4,};
enum _2622907E37AF65B3447F3DF4DCA1D233 {kSampleDelayParam_DelayFrames = 0x0,};
enum _267BB558910BF9E024D7078F3F45F17F {UIScrollTypeMaskDiscrete = 0x1,UIScrollTypeMaskContinuous = 0x2,UIScrollTypeMaskAll = 0x3,};
enum _26A170EA4D4E6B757FFB538891796E16 {kAudioCodecDelayMode_Compatibility = 0x0,kAudioCodecDelayMode_Minimum = 0x1,kAudioCodecDelayMode_Optimal = 0x2,};
enum _270ABA92048223056034C19C1DDE8340 {kCCBlockSizeAES128 = 0x10,kCCBlockSizeDES = 0x8,kCCBlockSize3DES = 0x8,kCCBlockSizeCAST = 0x8,kCCBlockSizeRC2 = 0x8,kCCBlockSizeBlowfish = 0x8,};
enum _2756CF2707F31191BE155DFA617EC5AC {nonGlyphID = 0xFFFF,};
enum _27D4CDDD4ED5A07EB211E9F4FE80514D {FFT_RADIX2 = 0x0,FFT_RADIX3 = 0x1,FFT_RADIX5 = 0x2,};
enum _284A84ACF381E436F428588762DD3A4F {MTLPipelineOptionNone = 0x0,MTLPipelineOptionArgumentInfo = 0x1,MTLPipelineOptionBufferTypeInfo = 0x2,MTLPipelineOptionFailOnBinaryArchiveMiss = 0x4,};
enum _286BCAC3DAFA8611B708C060C6A0AA29 {kExtAudioFileError_InvalidProperty = 0xFFFEFBFF,kExtAudioFileError_InvalidPropertySize = 0xFFFEFBFE,kExtAudioFileError_NonPCMClientFormat = 0xFFFEFBFD,kExtAudioFileError_InvalidChannelMap = 0xFFFEFBFC,kExtAudioFileError_InvalidOperationOrder = 0xFFFEFBFB,kExtAudioFileError_InvalidDataFormat = 0xFFFEFBFA,kExtAudioFileError_MaxPacketSizeUnknown = 0xFFFEFBF9,kExtAudioFileError_InvalidSeek = 0xFFFEFBF8,kExtAudioFileError_AsyncWriteTooLarge = 0xFFFEFBF7,kExtAudioFileError_AsyncWriteBufferOverflow = 0xFFFEFBF6,};
enum _28988C7F810943B0E1DF67F1F690AE9B {kFontNoPlatformCode = 0xFFFFFFFF,kFontNoScriptCode = 0xFFFFFFFF,kFontNoLanguageCode = 0xFFFFFFFF,};
enum _28ED72ED0D626DD5F077B7B8694E37E7 {kSpatialMixerRenderingFlags_InterAuralDelay = 0x1,kSpatialMixerRenderingFlags_DistanceAttenuation = 0x4,};
enum _290F2CB0B95E101F6F498884E8238FB0 {kAudioSessionRouteChangeReason_Unknown = 0x0,kAudioSessionRouteChangeReason_NewDeviceAvailable = 0x1,kAudioSessionRouteChangeReason_OldDeviceUnavailable = 0x2,kAudioSessionRouteChangeReason_CategoryChange = 0x3,kAudioSessionRouteChangeReason_Override = 0x4,kAudioSessionRouteChangeReason_WakeFromSleep = 0x6,kAudioSessionRouteChangeReason_NoSuitableRouteForCategory = 0x7,kAudioSessionRouteChangeReason_RouteConfigurationChange = 0x8,};
enum _292E98FC9121FEF4D121AD3720546D21 {kNumberOfResponseFrequencies = 0x400,};
enum _2A4C5D8EC9557683FDD33469ABCBBFED {INCarSignalOptionAudible = 0x1,INCarSignalOptionVisible = 0x2,};
enum _2AB902102D4B76981E99295B59299CF5 {kPDFNoArea = 0x0,kPDFPageArea = 0x1,kPDFTextArea = 0x2,kPDFAnnotationArea = 0x4,kPDFLinkArea = 0x8,kPDFControlArea = 0x10,kPDFTextFieldArea = 0x20,kPDFIconArea = 0x40,kPDFPopupArea = 0x80,kPDFImageArea = 0x100,};
enum _2AC830EABEDDFC4F1FEA5ADD5B42749D {kCTWritingDirectionEmbedding = 0x0,kCTWritingDirectionOverride = 0x2,};
enum _2B8517D55A8E51D32DCF444911A08425 {NSManagedObjectResultType = 0x0,NSManagedObjectIDResultType = 0x1,NSDictionaryResultType = 0x2,NSCountResultType = 0x4,};
enum _2BB1C35BF158120765AB533C619937CD {AUEventSampleTimeImmediate = 0xFFFFFFFF00000000,};
enum _2BFE29F3E252D459C4647C9842894D95 {kAUSampler_DefaultPercussionBankMSB = 0x78,kAUSampler_DefaultMelodicBankMSB = 0x79,kAUSampler_DefaultBankLSB = 0x0,};
enum _2C60DF20385C9481D6D8D1A3D5A6B7E5 {UIPopoverArrowDirectionUp = 0x1,UIPopoverArrowDirectionDown = 0x2,UIPopoverArrowDirectionLeft = 0x4,UIPopoverArrowDirectionRight = 0x8,UIPopoverArrowDirectionAny = 0xF,UIPopoverArrowDirectionUnknown = 0xFFFFFFFFFFFFFFFF,};
enum _2CB1CEB69FDF22235A86E3AF266AA94D {kCTFontTableOptionNoOptions = 0x0,kCTFontTableOptionExcludeSynthetic = 0x1,};
enum _2CF3ABC5ADB0A14A035660BBB5AB7152 {__fpsr_saturation = 0x8000000,};
enum _2D014DF1F50E2248CBD63A58EA5FFB1F {kCFURLBookmarkResolutionWithoutUIMask = 0x100,kCFURLBookmarkResolutionWithoutMountingMask = 0x200,kCFURLBookmarkResolutionWithSecurityScope = 0x400,kCFBookmarkResolutionWithoutUIMask = 0x100,kCFBookmarkResolutionWithoutMountingMask = 0x200,};
enum _2D895219339DF9B937866208141EB9E3 {kvImageNoError = 0x0,kvImageRoiLargerThanInputBuffer = 0xFFFFAAFA,kvImageInvalidKernelSize = 0xFFFFAAF9,kvImageInvalidEdgeStyle = 0xFFFFAAF8,kvImageInvalidOffset_X = 0xFFFFAAF7,kvImageInvalidOffset_Y = 0xFFFFAAF6,kvImageMemoryAllocationError = 0xFFFFAAF5,kvImageNullPointerArgument = 0xFFFFAAF4,kvImageInvalidParameter = 0xFFFFAAF3,kvImageBufferSizeMismatch = 0xFFFFAAF2,kvImageUnknownFlagsBit = 0xFFFFAAF1,kvImageInternalError = 0xFFFFAAF0,kvImageInvalidRowBytes = 0xFFFFAAEF,kvImageInvalidImageFormat = 0xFFFFAAEE,kvImageColorSyncIsAbsent = 0xFFFFAAED,kvImageOutOfPlaceOperationRequired = 0xFFFFAAEC,kvImageInvalidImageObject = 0xFFFFAAEB,kvImageInvalidCVImageFormat = 0xFFFFAAEA,kvImageUnsupportedConversion = 0xFFFFAAE9,kvImageCoreVideoIsAbsent = 0xFFFFAAE8,};
enum _2DF538C444026A13AF8511D7B752A12D {CKApplicationPermissionUserDiscoverability = 0x1,};
enum _2E74BE6BE9EB9F4116DDDDBD552BEBF3 {PHLivePhotoBadgeOptionsOverContent = 0x1,PHLivePhotoBadgeOptionsLiveOff = 0x2,};
enum _2FB14CC01ECBDCCC8729C717C7E12A13 {MPSNNConvolutionAccumulatorPrecisionOptionHalf = 0x0,MPSNNConvolutionAccumulatorPrecisionOptionFloat = 0x1,};
enum _2FD62604BEF7CB0C83C7B176BF69F1A2 {kCMFormatDescriptionError_InvalidParameter = 0xFFFFCE5A,kCMFormatDescriptionError_AllocationFailed = 0xFFFFCE59,kCMFormatDescriptionError_ValueNotAvailable = 0xFFFFCE52,};
enum _3025A81E50CFF170981A122E063C9BB8 {kBSLNTag = 0x62736C6E,kBSLNCurrentVersion = 0x10000,kBSLNDistanceFormatNoMap = 0x0,kBSLNDistanceFormatWithMap = 0x1,kBSLNControlPointFormatNoMap = 0x2,kBSLNControlPointFormatWithMap = 0x3,};
enum _3075B0258112FF1BCF44AC91023190E5 {kNoAnnotationSelector = 0x0,kBoxAnnotationSelector = 0x1,kRoundedBoxAnnotationSelector = 0x2,kCircleAnnotationSelector = 0x3,kInvertedCircleAnnotationSelector = 0x4,kParenthesisAnnotationSelector = 0x5,kPeriodAnnotationSelector = 0x6,kRomanNumeralAnnotationSelector = 0x7,kDiamondAnnotationSelector = 0x8,kInvertedBoxAnnotationSelector = 0x9,kInvertedRoundedBoxAnnotationSelector = 0xA,};
enum _314671DF7E58ECF672BC4D08DFCB463C {kCFSocketNoCallBack = 0x0,kCFSocketReadCallBack = 0x1,kCFSocketAcceptCallBack = 0x2,kCFSocketDataCallBack = 0x3,kCFSocketConnectCallBack = 0x4,kCFSocketWriteCallBack = 0x8,};
enum _317072B9A95E70383A6EB3A948B16DC9 {NSCalendarWrapComponents = 0x1,NSCalendarMatchStrictly = 0x2,NSCalendarSearchBackwards = 0x4,NSCalendarMatchPreviousTimePreservingSmallerUnits = 0x100,NSCalendarMatchNextTimePreservingSmallerUnits = 0x200,NSCalendarMatchNextTime = 0x400,NSCalendarMatchFirst = 0x1000,NSCalendarMatchLast = 0x2000,};
enum _31902AAAC385373E56A53A6ADF54AE64 {NSFileManagerItemReplacementUsingNewMetadataOnly = 0x1,NSFileManagerItemReplacementWithoutDeletingBackupItem = 0x2,};
enum _3246670F085F63425B2241BE7C49D317 {kMTAudioProcessingTapCreationFlag_PreEffects = 0x1,kMTAudioProcessingTapCreationFlag_PostEffects = 0x2,};
enum _328EF5B408B0AA67A88ADB28F59E6C12 {NSCalendarUnitEra = 0x2,NSCalendarUnitYear = 0x4,NSCalendarUnitMonth = 0x8,NSCalendarUnitDay = 0x10,NSCalendarUnitHour = 0x20,NSCalendarUnitMinute = 0x40,NSCalendarUnitSecond = 0x80,NSCalendarUnitWeekday = 0x200,NSCalendarUnitWeekdayOrdinal = 0x400,NSCalendarUnitQuarter = 0x800,NSCalendarUnitWeekOfMonth = 0x1000,NSCalendarUnitWeekOfYear = 0x2000,NSCalendarUnitYearForWeekOfYear = 0x4000,NSCalendarUnitNanosecond = 0x8000,NSCalendarUnitCalendar = 0x100000,NSCalendarUnitTimeZone = 0x200000,NSEraCalendarUnit = 0x2,NSYearCalendarUnit = 0x4,NSMonthCalendarUnit = 0x8,NSDayCalendarUnit = 0x10,NSHourCalendarUnit = 0x20,NSMinuteCalendarUnit = 0x40,NSSecondCalendarUnit = 0x80,NSWeekCalendarUnit = 0x100,NSWeekdayCalendarUnit = 0x200,NSWeekdayOrdinalCalendarUnit = 0x400,NSQuarterCalendarUnit = 0x800,NSWeekOfMonthCalendarUnit = 0x1000,NSWeekOfYearCalendarUnit = 0x2000,NSYearForWeekOfYearCalendarUnit = 0x4000,NSCalendarCalendarUnit = 0x100000,NSTimeZoneCalendarUnit = 0x200000,};
enum _339B10C8F69FEE0843E220164C60F23F {MPMovieLoadStateUnknown = 0x0,MPMovieLoadStatePlayable = 0x1,MPMovieLoadStatePlaythroughOK = 0x2,MPMovieLoadStateStalled = 0x4,};
enum _33A6A04F3D06F4392A44AFA8F3F5966A {WKAudiovisualMediaTypeNone = 0x0,WKAudiovisualMediaTypeAudio = 0x1,WKAudiovisualMediaTypeVideo = 0x2,WKAudiovisualMediaTypeAll = 0xFFFFFFFFFFFFFFFF,};
enum _3542682EDFA035DC46161C2D492A207F {kPROPLDirectionClass = 0x0,kPROPRDirectionClass = 0x1,kPROPALDirectionClass = 0x2,kPROPENDirectionClass = 0x3,kPROPESDirectionClass = 0x4,kPROPETDirectionClass = 0x5,kPROPANDirectionClass = 0x6,kPROPCSDirectionClass = 0x7,kPROPPSDirectionClass = 0x8,kPROPSDirectionClass = 0x9,kPROPWSDirectionClass = 0xA,kPROPONDirectionClass = 0xB,kPROPSENDirectionClass = 0xC,kPROPLREDirectionClass = 0xD,kPROPLRODirectionClass = 0xE,kPROPRLEDirectionClass = 0xF,kPROPRLODirectionClass = 0x10,kPROPPDFDirectionClass = 0x11,kPROPNSMDirectionClass = 0x12,kPROPBNDirectionClass = 0x13,kPROPNumDirectionClasses = 0x14,};
enum _355CE0574FE57D91F962C4F0A7D8B19F {kCTFontClassMaskShift = 0x1C,};
enum _3598C57B793534ACE7A32592FCB6D516 {kAudioFileRegionFlag_LoopEnable = 0x1,kAudioFileRegionFlag_PlayForward = 0x2,kAudioFileRegionFlag_PlayBackward = 0x4,};
enum _35AD1344ED6BCFDCF8EDC0E48FD72273 {MTLAccelerationStructureUsageNone = 0x0,MTLAccelerationStructureUsageRefit = 0x1,MTLAccelerationStructureUsagePreferFastBuild = 0x2,};
enum _35C5405A3F75D7CADFA084E2A64633E6 {kCMAudioFormatDescriptionMask_StreamBasicDescription = 0x1,kCMAudioFormatDescriptionMask_MagicCookie = 0x2,kCMAudioFormatDescriptionMask_ChannelLayout = 0x4,kCMAudioFormatDescriptionMask_Extensions = 0x8,kCMAudioFormatDescriptionMask_All = 0xF,};
enum _35EDCABE90BD5A8D0FB6C20712F50DAF {kAUVoiceIOProperty_DuckNonVoiceAudio = 0x836,};
enum _36533790189FEBC19F3ABBACC5B2C9A3 {kAudioFileUnspecifiedError = 0x7768743F,kAudioFileUnsupportedFileTypeError = 0x7479703F,kAudioFileUnsupportedDataFormatError = 0x666D743F,kAudioFileUnsupportedPropertyError = 0x7074793F,kAudioFileBadPropertySizeError = 0x2173697A,kAudioFilePermissionsError = 0x70726D3F,kAudioFileNotOptimizedError = 0x6F70746D,kAudioFileInvalidChunkError = 0x63686B3F,kAudioFileDoesNotAllow64BitDataSizeError = 0x6F66663F,kAudioFileInvalidPacketOffsetError = 0x70636B3F,kAudioFileInvalidPacketDependencyError = 0x6465703F,kAudioFileInvalidFileError = 0x6474613F,kAudioFileOperationNotSupportedError = 0x6F703F3F,kAudioFileNotOpenError = 0xFFFFFFDA,kAudioFileEndOfFileError = 0xFFFFFFD9,kAudioFilePositionError = 0xFFFFFFD8,kAudioFileFileNotFoundError = 0xFFFFFFD5,};
enum _37207818AD8950485A40A542D8F4AFAE {kCCPRFHmacAlgSHA1 = 0x1,kCCPRFHmacAlgSHA224 = 0x2,kCCPRFHmacAlgSHA256 = 0x3,kCCPRFHmacAlgSHA384 = 0x4,kCCPRFHmacAlgSHA512 = 0x5,};
enum _37754868B5BC53CBCA7A423C52D9DB9B {MPMovieMediaTypeMaskNone = 0x0,MPMovieMediaTypeMaskVideo = 0x1,MPMovieMediaTypeMaskAudio = 0x2,};
enum _37F186F85AFAD67750894B80243078FA {kAudioChannelLabel_Unknown = 0xFFFFFFFF,kAudioChannelLabel_Unused = 0x0,kAudioChannelLabel_UseCoordinates = 0x64,kAudioChannelLabel_Left = 0x1,kAudioChannelLabel_Right = 0x2,kAudioChannelLabel_Center = 0x3,kAudioChannelLabel_LFEScreen = 0x4,kAudioChannelLabel_LeftSurround = 0x5,kAudioChannelLabel_RightSurround = 0x6,kAudioChannelLabel_LeftCenter = 0x7,kAudioChannelLabel_RightCenter = 0x8,kAudioChannelLabel_CenterSurround = 0x9,kAudioChannelLabel_LeftSurroundDirect = 0xA,kAudioChannelLabel_RightSurroundDirect = 0xB,kAudioChannelLabel_TopCenterSurround = 0xC,kAudioChannelLabel_VerticalHeightLeft = 0xD,kAudioChannelLabel_VerticalHeightCenter = 0xE,kAudioChannelLabel_VerticalHeightRight = 0xF,kAudioChannelLabel_TopBackLeft = 0x10,kAudioChannelLabel_TopBackCenter = 0x11,kAudioChannelLabel_TopBackRight = 0x12,kAudioChannelLabel_RearSurroundLeft = 0x21,kAudioChannelLabel_RearSurroundRight = 0x22,kAudioChannelLabel_LeftWide = 0x23,kAudioChannelLabel_RightWide = 0x24,kAudioChannelLabel_LFE2 = 0x25,kAudioChannelLabel_LeftTotal = 0x26,kAudioChannelLabel_RightTotal = 0x27,kAudioChannelLabel_HearingImpaired = 0x28,kAudioChannelLabel_Narration = 0x29,kAudioChannelLabel_Mono = 0x2A,kAudioChannelLabel_DialogCentricMix = 0x2B,kAudioChannelLabel_CenterSurroundDirect = 0x2C,kAudioChannelLabel_Haptic = 0x2D,kAudioChannelLabel_LeftTopFront = 0xD,kAudioChannelLabel_CenterTopFront = 0xE,kAudioChannelLabel_RightTopFront = 0xF,kAudioChannelLabel_LeftTopMiddle = 0x31,kAudioChannelLabel_CenterTopMiddle = 0xC,kAudioChannelLabel_RightTopMiddle = 0x33,kAudioChannelLabel_LeftTopRear = 0x34,kAudioChannelLabel_CenterTopRear = 0x35,kAudioChannelLabel_RightTopRear = 0x36,kAudioChannelLabel_Ambisonic_W = 0xC8,kAudioChannelLabel_Ambisonic_X = 0xC9,kAudioChannelLabel_Ambisonic_Y = 0xCA,kAudioChannelLabel_Ambisonic_Z = 0xCB,kAudioChannelLabel_MS_Mid = 0xCC,kAudioChannelLabel_MS_Side = 0xCD,kAudioChannelLabel_XY_X = 0xCE,kAudioChannelLabel_XY_Y = 0xCF,kAudioChannelLabel_BinauralLeft = 0xD0,kAudioChannelLabel_BinauralRight = 0xD1,kAudioChannelLabel_HeadphonesLeft = 0x12D,kAudioChannelLabel_HeadphonesRight = 0x12E,kAudioChannelLabel_ClickTrack = 0x130,kAudioChannelLabel_ForeignLanguage = 0x131,kAudioChannelLabel_Discrete = 0x190,kAudioChannelLabel_Discrete_0 = 0x10000,kAudioChannelLabel_Discrete_1 = 0x10001,kAudioChannelLabel_Discrete_2 = 0x10002,kAudioChannelLabel_Discrete_3 = 0x10003,kAudioChannelLabel_Discrete_4 = 0x10004,kAudioChannelLabel_Discrete_5 = 0x10005,kAudioChannelLabel_Discrete_6 = 0x10006,kAudioChannelLabel_Discrete_7 = 0x10007,kAudioChannelLabel_Discrete_8 = 0x10008,kAudioChannelLabel_Discrete_9 = 0x10009,kAudioChannelLabel_Discrete_10 = 0x1000A,kAudioChannelLabel_Discrete_11 = 0x1000B,kAudioChannelLabel_Discrete_12 = 0x1000C,kAudioChannelLabel_Discrete_13 = 0x1000D,kAudioChannelLabel_Discrete_14 = 0x1000E,kAudioChannelLabel_Discrete_15 = 0x1000F,kAudioChannelLabel_Discrete_65535 = 0x1FFFF,kAudioChannelLabel_HOA_ACN = 0x1F4,kAudioChannelLabel_HOA_ACN_0 = 0x20000,kAudioChannelLabel_HOA_ACN_1 = 0x20001,kAudioChannelLabel_HOA_ACN_2 = 0x20002,kAudioChannelLabel_HOA_ACN_3 = 0x20003,kAudioChannelLabel_HOA_ACN_4 = 0x20004,kAudioChannelLabel_HOA_ACN_5 = 0x20005,kAudioChannelLabel_HOA_ACN_6 = 0x20006,kAudioChannelLabel_HOA_ACN_7 = 0x20007,kAudioChannelLabel_HOA_ACN_8 = 0x20008,kAudioChannelLabel_HOA_ACN_9 = 0x20009,kAudioChannelLabel_HOA_ACN_10 = 0x2000A,kAudioChannelLabel_HOA_ACN_11 = 0x2000B,kAudioChannelLabel_HOA_ACN_12 = 0x2000C,kAudioChannelLabel_HOA_ACN_13 = 0x2000D,kAudioChannelLabel_HOA_ACN_14 = 0x2000E,kAudioChannelLabel_HOA_ACN_15 = 0x2000F,kAudioChannelLabel_HOA_ACN_65024 = 0x2FE00,kAudioChannelLabel_BeginReserved = 0xF0000000,kAudioChannelLabel_EndReserved = 0xFFFFFFFE,};
enum _3805236653D36BA91616A21CF3ACF582 {NSDataWritingAtomic = 0x1,NSDataWritingWithoutOverwriting = 0x2,NSDataWritingFileProtectionNone = 0x10000000,NSDataWritingFileProtectionComplete = 0x20000000,NSDataWritingFileProtectionCompleteUnlessOpen = 0x30000000,NSDataWritingFileProtectionCompleteUntilFirstUserAuthentication = 0x40000000,NSDataWritingFileProtectionMask = 0xF0000000,NSAtomicWrite = 0x1,};
enum _3815420ED13C9D29A0A0F4511690BBFB {NSWindowsNTOperatingSystem = 0x1,NSWindows95OperatingSystem = 0x2,NSSolarisOperatingSystem = 0x3,NSHPUXOperatingSystem = 0x4,NSMACHOperatingSystem = 0x5,NSSunOSOperatingSystem = 0x6,NSOSF1OperatingSystem = 0x7,};
enum _384C7D64CEB56EB710C89663799A028E {kCFMessagePortSuccess = 0x0,kCFMessagePortSendTimeout = 0xFFFFFFFF,kCFMessagePortReceiveTimeout = 0xFFFFFFFE,kCFMessagePortIsInvalid = 0xFFFFFFFD,kCFMessagePortTransportError = 0xFFFFFFFC,kCFMessagePortBecameInvalidError = 0xFFFFFFFB,};
enum _38840A1B6862C131223C6782463661B3 {kCMTimeFlags_Valid = 0x1,kCMTimeFlags_HasBeenRounded = 0x2,kCMTimeFlags_PositiveInfinity = 0x4,kCMTimeFlags_NegativeInfinity = 0x8,kCMTimeFlags_Indefinite = 0x10,kCMTimeFlags_ImpliedValueFlagsMask = 0x1C,};
enum _38BD36DF671926FEE191780597EAD8CE {INDayOfWeekOptionMonday = 0x1,INDayOfWeekOptionTuesday = 0x2,INDayOfWeekOptionWednesday = 0x4,INDayOfWeekOptionThursday = 0x8,INDayOfWeekOptionFriday = 0x10,INDayOfWeekOptionSaturday = 0x20,INDayOfWeekOptionSunday = 0x40,};
struct _393C16A032292777F0C3725FFB2C0008 {float x;float y;float z;};
enum _395B2277B91E186E67691A58184E7D42 {INCallCapabilityOptionAudioCall = 0x1,INCallCapabilityOptionVideoCall = 0x2,};
enum _39DDA95DD9DF6458EAEF5590FE705091 {UIInterfaceOrientationMaskPortrait = 0x2,UIInterfaceOrientationMaskLandscapeLeft = 0x10,UIInterfaceOrientationMaskLandscapeRight = 0x8,UIInterfaceOrientationMaskPortraitUpsideDown = 0x4,UIInterfaceOrientationMaskLandscape = 0x18,UIInterfaceOrientationMaskAll = 0x1E,UIInterfaceOrientationMaskAllButUpsideDown = 0x1A,};
enum _3A102631DBB1B738E2799711951958AA {kAULowShelfParam_CutoffFrequency = 0x0,kAULowShelfParam_Gain = 0x1,};
enum _3A89C330E87B46C7FC562E97614E9FC6 {kBSLNRomanBaseline = 0x0,kBSLNIdeographicCenterBaseline = 0x1,kBSLNIdeographicLowBaseline = 0x2,kBSLNHangingBaseline = 0x3,kBSLNMathBaseline = 0x4,kBSLNIdeographicHighBaseline = 0x5,kBSLNLastBaseline = 0x1F,kBSLNNumBaselineClasses = 0x20,kBSLNNoBaseline = 0xFF,kBSLNNoBaselineOverride = 0xFF,};
enum _3AD9E15F8D02E9672CD9A9AF885119A3 {kSCNetworkReachabilityFlagsTransientConnection = 0x1,kSCNetworkReachabilityFlagsReachable = 0x2,kSCNetworkReachabilityFlagsConnectionRequired = 0x4,kSCNetworkReachabilityFlagsConnectionOnTraffic = 0x8,kSCNetworkReachabilityFlagsInterventionRequired = 0x10,kSCNetworkReachabilityFlagsConnectionOnDemand = 0x20,kSCNetworkReachabilityFlagsIsLocalAddress = 0x10000,kSCNetworkReachabilityFlagsIsDirect = 0x20000,kSCNetworkReachabilityFlagsIsWWAN = 0x40000,kSCNetworkReachabilityFlagsConnectionAutomatic = 0x8,};
enum _3B3BF8A1F60DCBA4A6CBF01641B73F73 {NSPersistentCloudKitContainerSchemaInitializationOptionsNone = 0x0,NSPersistentCloudKitContainerSchemaInitializationOptionsDryRun = 0x2,NSPersistentCloudKitContainerSchemaInitializationOptionsPrintSchema = 0x4,};
enum _3BFF4CC82DDB3397406937A544A0A895 {NSTextStorageEditedAttributes = 0x1,NSTextStorageEditedCharacters = 0x2,};
enum _3C1DAC976776C57482464E239B2F935E {kCTFontTableBASE = 0x42415345,kCTFontTableCBDT = 0x43424454,kCTFontTableCBLC = 0x43424C43,kCTFontTableCFF = 0x43464620,kCTFontTableCFF2 = 0x43464632,kCTFontTableCOLR = 0x434F4C52,kCTFontTableCPAL = 0x4350414C,kCTFontTableDSIG = 0x44534947,kCTFontTableEBDT = 0x45424454,kCTFontTableEBLC = 0x45424C43,kCTFontTableEBSC = 0x45425343,kCTFontTableGDEF = 0x47444546,kCTFontTableGPOS = 0x47504F53,kCTFontTableGSUB = 0x47535542,kCTFontTableHVAR = 0x48564152,kCTFontTableJSTF = 0x4A535446,kCTFontTableLTSH = 0x4C545348,kCTFontTableMATH = 0x4D415448,kCTFontTableMERG = 0x4D455247,kCTFontTableMVAR = 0x4D564152,kCTFontTableOS2 = 0x4F532F32,kCTFontTablePCLT = 0x50434C54,kCTFontTableSTAT = 0x53544154,kCTFontTableSVG = 0x53564720,kCTFontTableVDMX = 0x56444D58,kCTFontTableVORG = 0x564F5247,kCTFontTableVVAR = 0x56564152,kCTFontTableZapf = 0x5A617066,kCTFontTableAcnt = 0x61636E74,kCTFontTableAnkr = 0x616E6B72,kCTFontTableAvar = 0x61766172,kCTFontTableBdat = 0x62646174,kCTFontTableBhed = 0x62686564,kCTFontTableBloc = 0x626C6F63,kCTFontTableBsln = 0x62736C6E,kCTFontTableCidg = 0x63696467,kCTFontTableCmap = 0x636D6170,kCTFontTableCvar = 0x63766172,kCTFontTableCvt = 0x63767420,kCTFontTableFdsc = 0x66647363,kCTFontTableFeat = 0x66656174,kCTFontTableFmtx = 0x666D7478,kCTFontTableFond = 0x666F6E64,kCTFontTableFpgm = 0x6670676D,kCTFontTableFvar = 0x66766172,kCTFontTableGasp = 0x67617370,kCTFontTableGlyf = 0x676C7966,kCTFontTableGvar = 0x67766172,kCTFontTableHdmx = 0x68646D78,kCTFontTableHead = 0x68656164,kCTFontTableHhea = 0x68686561,kCTFontTableHmtx = 0x686D7478,kCTFontTableHsty = 0x68737479,kCTFontTableJust = 0x6A757374,kCTFontTableKern = 0x6B65726E,kCTFontTableKerx = 0x6B657278,kCTFontTableLcar = 0x6C636172,kCTFontTableLoca = 0x6C6F6361,kCTFontTableLtag = 0x6C746167,kCTFontTableMaxp = 0x6D617870,kCTFontTableMeta = 0x6D657461,kCTFontTableMort = 0x6D6F7274,kCTFontTableMorx = 0x6D6F7278,kCTFontTableName = 0x6E616D65,kCTFontTableOpbd = 0x6F706264,kCTFontTablePost = 0x706F7374,kCTFontTablePrep = 0x70726570,kCTFontTableProp = 0x70726F70,kCTFontTableSbit = 0x73626974,kCTFontTableSbix = 0x73626978,kCTFontTableTrak = 0x7472616B,kCTFontTableVhea = 0x76686561,kCTFontTableVmtx = 0x766D7478,kCTFontTableXref = 0x78726566,};
enum _3CD4CB8E30DCC4F90CFA9D39F9AA063A {AVAudioSpatializationFormatNone = 0x0,AVAudioSpatializationFormatMonoAndStereo = 0x3,AVAudioSpatializationFormatMultichannel = 0x4,AVAudioSpatializationFormatMonoStereoAndMultichannel = 0x7,};
enum _3D555D0FE0BDCF2753939A2D36BE4B12 {kMusicNoteEvent_UseGroupInstrument = 0xFFFFFFFF,kMusicNoteEvent_Unused = 0xFFFFFFFF,};
enum _3DCAE5250158E7FFEB1150CBCE7608B6 {NSKeyValueObservingOptionNew = 0x1,NSKeyValueObservingOptionOld = 0x2,NSKeyValueObservingOptionInitial = 0x4,NSKeyValueObservingOptionPrior = 0x8,};
typedef MTLRenderPipelineReflection *_40454745E22CC84D17464BA70FDEB29B;
enum _408D4D5137D590A1DCE352B9064E649F {sizeof_sfntNameRecord = 0xC,};
enum _40A19DA751050C6C4F825842FEFB9656 {NSJSONReadingMutableContainers = 0x1,NSJSONReadingMutableLeaves = 0x2,NSJSONReadingFragmentsAllowed = 0x4,NSJSONReadingAllowFragments = 0x4,};
enum _40B8B22CA7BF92B23F8965323060D76F {eNoteReapDeprecated = 0x10000000,};
enum _40FCB3CFCA80003DD03DDFB1555633F2 {NSNotificationNoCoalescing = 0x0,NSNotificationCoalescingOnName = 0x1,NSNotificationCoalescingOnSender = 0x2,};
enum _41AA3D25AAC98EA8C708B4259F0268B4 {UICollectionViewScrollPositionNone = 0x0,UICollectionViewScrollPositionTop = 0x1,UICollectionViewScrollPositionCenteredVertically = 0x2,UICollectionViewScrollPositionBottom = 0x4,UICollectionViewScrollPositionLeft = 0x8,UICollectionViewScrollPositionCenteredHorizontally = 0x10,UICollectionViewScrollPositionRight = 0x20,};
enum _4202795BF0CC5130048C78BF005343A7 {kAudioDecoderComponentType = 0x61646563,kAudioEncoderComponentType = 0x61656E63,};
enum _42176CD0C3DAA08F25DDB9412B3830F2 {NSURLErrorUnknown = 0xFFFFFFFFFFFFFFFF,NSURLErrorCancelled = 0xFFFFFFFFFFFFFC19,NSURLErrorBadURL = 0xFFFFFFFFFFFFFC18,NSURLErrorTimedOut = 0xFFFFFFFFFFFFFC17,NSURLErrorUnsupportedURL = 0xFFFFFFFFFFFFFC16,NSURLErrorCannotFindHost = 0xFFFFFFFFFFFFFC15,NSURLErrorCannotConnectToHost = 0xFFFFFFFFFFFFFC14,NSURLErrorNetworkConnectionLost = 0xFFFFFFFFFFFFFC13,NSURLErrorDNSLookupFailed = 0xFFFFFFFFFFFFFC12,NSURLErrorHTTPTooManyRedirects = 0xFFFFFFFFFFFFFC11,NSURLErrorResourceUnavailable = 0xFFFFFFFFFFFFFC10,NSURLErrorNotConnectedToInternet = 0xFFFFFFFFFFFFFC0F,NSURLErrorRedirectToNonExistentLocation = 0xFFFFFFFFFFFFFC0E,NSURLErrorBadServerResponse = 0xFFFFFFFFFFFFFC0D,NSURLErrorUserCancelledAuthentication = 0xFFFFFFFFFFFFFC0C,NSURLErrorUserAuthenticationRequired = 0xFFFFFFFFFFFFFC0B,NSURLErrorZeroByteResource = 0xFFFFFFFFFFFFFC0A,NSURLErrorCannotDecodeRawData = 0xFFFFFFFFFFFFFC09,NSURLErrorCannotDecodeContentData = 0xFFFFFFFFFFFFFC08,NSURLErrorCannotParseResponse = 0xFFFFFFFFFFFFFC07,NSURLErrorAppTransportSecurityRequiresSecureConnection = 0xFFFFFFFFFFFFFC02,NSURLErrorFileDoesNotExist = 0xFFFFFFFFFFFFFBB4,NSURLErrorFileIsDirectory = 0xFFFFFFFFFFFFFBB3,NSURLErrorNoPermissionsToReadFile = 0xFFFFFFFFFFFFFBB2,NSURLErrorDataLengthExceedsMaximum = 0xFFFFFFFFFFFFFBB1,NSURLErrorFileOutsideSafeArea = 0xFFFFFFFFFFFFFBB0,NSURLErrorSecureConnectionFailed = 0xFFFFFFFFFFFFFB50,NSURLErrorServerCertificateHasBadDate = 0xFFFFFFFFFFFFFB4F,NSURLErrorServerCertificateUntrusted = 0xFFFFFFFFFFFFFB4E,NSURLErrorServerCertificateHasUnknownRoot = 0xFFFFFFFFFFFFFB4D,NSURLErrorServerCertificateNotYetValid = 0xFFFFFFFFFFFFFB4C,NSURLErrorClientCertificateRejected = 0xFFFFFFFFFFFFFB4B,NSURLErrorClientCertificateRequired = 0xFFFFFFFFFFFFFB4A,NSURLErrorCannotLoadFromNetwork = 0xFFFFFFFFFFFFF830,NSURLErrorCannotCreateFile = 0xFFFFFFFFFFFFF448,NSURLErrorCannotOpenFile = 0xFFFFFFFFFFFFF447,NSURLErrorCannotCloseFile = 0xFFFFFFFFFFFFF446,NSURLErrorCannotWriteToFile = 0xFFFFFFFFFFFFF445,NSURLErrorCannotRemoveFile = 0xFFFFFFFFFFFFF444,NSURLErrorCannotMoveFile = 0xFFFFFFFFFFFFF443,NSURLErrorDownloadDecodingFailedMidStream = 0xFFFFFFFFFFFFF442,NSURLErrorDownloadDecodingFailedToComplete = 0xFFFFFFFFFFFFF441,NSURLErrorInternationalRoamingOff = 0xFFFFFFFFFFFFFC06,NSURLErrorCallIsActive = 0xFFFFFFFFFFFFFC05,NSURLErrorDataNotAllowed = 0xFFFFFFFFFFFFFC04,NSURLErrorRequestBodyStreamExhausted = 0xFFFFFFFFFFFFFC03,NSURLErrorBackgroundSessionRequiresSharedContainer = 0xFFFFFFFFFFFFFC1D,NSURLErrorBackgroundSessionInUseByAnotherProcess = 0xFFFFFFFFFFFFFC1C,NSURLErrorBackgroundSessionWasDisconnected = 0xFFFFFFFFFFFFFC1B,};
enum _4257D5C941038B6170725062B6D231BE {kNoCJKItalicRomanSelector = 0x0,kCJKItalicRomanSelector = 0x1,kCJKItalicRomanOnSelector = 0x2,kCJKItalicRomanOffSelector = 0x3,};
enum _42A9BD073EE7232CB40417B05A4D2272 {MTLResourceUsageRead = 0x1,MTLResourceUsageWrite = 0x2,MTLResourceUsageSample = 0x4,};
enum _437662F5BECD70C45988CEF3170AE0FF {UIAccessibilityHearingDeviceEarNone = 0x0,UIAccessibilityHearingDeviceEarLeft = 0x2,UIAccessibilityHearingDeviceEarRight = 0x4,UIAccessibilityHearingDeviceEarBoth = 0x6,};
enum _43C6E5B11B75D56E859D877DAB0DFCBB {kLimiterParam_AttackTime = 0x0,kLimiterParam_DecayTime = 0x1,kLimiterParam_PreGain = 0x2,};
enum _43CFA6B7D8A1AC4AEBB0EB0116CEE91D {kAudioCodecProduceOutputPacketFailure = 0x1,kAudioCodecProduceOutputPacketSuccess = 0x2,kAudioCodecProduceOutputPacketSuccessHasMore = 0x3,kAudioCodecProduceOutputPacketNeedsMoreInputData = 0x4,kAudioCodecProduceOutputPacketAtEOF = 0x5,};
enum _4428E409BB9418A20A2804326B57BF66 {kScheduledAudioSliceFlag_Complete = 0x1,kScheduledAudioSliceFlag_BeganToRender = 0x2,kScheduledAudioSliceFlag_BeganToRenderLate = 0x4,kScheduledAudioSliceFlag_Loop = 0x8,kScheduledAudioSliceFlag_Interrupt = 0x10,kScheduledAudioSliceFlag_InterruptAtLoop = 0x20,};
enum _446A6359B8ACAE47D3A6BE16C395F309 {INChargingConnectorTypeOptionNone = 0x1,INChargingConnectorTypeOptionJ1772 = 0x2,INChargingConnectorTypeOptionCCS1 = 0x4,INChargingConnectorTypeOptionCCS2 = 0x8,INChargingConnectorTypeOptionCHAdeMO = 0x10,INChargingConnectorTypeOptionGBTAC = 0x20,INChargingConnectorTypeOptionGBTDC = 0x40,INChargingConnectorTypeOptionTesla = 0x80,INChargingConnectorTypeOptionMennekes = 0x100,};
enum _44E31A5658E8095967ED6127BD1413C5 {kCVPixelBufferPoolFlushExcessBuffers = 0x1,};
enum _44F6AC621CAADCC05593FC89EA5FE26B {CPManeuverDisplayStyleDefault = 0x0,CPManeuverDisplayStyleLeadingSymbol = 0x1,CPManeuverDisplayStyleTrailingSymbol = 0x2,CPManeuverDisplayStyleSymbolOnly = 0x3,CPManeuverDisplayStyleInstructionOnly = 0x4,};
enum _4534AB3F163A42C8732B7CC9FD29C488 {MTLIndirectCommandTypeDraw = 0x1,MTLIndirectCommandTypeDrawIndexed = 0x2,MTLIndirectCommandTypeDrawPatches = 0x4,MTLIndirectCommandTypeDrawIndexedPatches = 0x8,MTLIndirectCommandTypeConcurrentDispatch = 0x20,MTLIndirectCommandTypeConcurrentDispatchThreads = 0x40,};
enum _453A1E4AAB14267C8A164B07B184C392 {kHyphensToEmDashOnSelector = 0x0,kHyphensToEmDashOffSelector = 0x1,kHyphenToEnDashOnSelector = 0x2,kHyphenToEnDashOffSelector = 0x3,kSlashedZeroOnSelector = 0x4,kSlashedZeroOffSelector = 0x5,kFormInterrobangOnSelector = 0x6,kFormInterrobangOffSelector = 0x7,kSmartQuotesOnSelector = 0x8,kSmartQuotesOffSelector = 0x9,kPeriodsToEllipsisOnSelector = 0xA,kPeriodsToEllipsisOffSelector = 0xB,};
enum _45459B2F0748991C0F138EE87181683F {kAUSamplerProperty_LoadPresetFromBank = 0x1004,kAUSamplerProperty_BankAndPreset = 0x1004,};
enum _454B9DE727189BC82EAE1C965948BAD8 {kNoCJKSymbolAlternativesSelector = 0x0,kCJKSymbolAltOneSelector = 0x1,kCJKSymbolAltTwoSelector = 0x2,kCJKSymbolAltThreeSelector = 0x3,kCJKSymbolAltFourSelector = 0x4,kCJKSymbolAltFiveSelector = 0x5,};
enum _457DC9F68CC7EBCBF92F56CB338F52CF {kAudioUnitManufacturer_Apple = 0x6170706C,};
enum _46CBA6C0B595C262663E6215E58087E7 {kAudioCodecPropertyMinimumDelayMode = 0x6D64656C,};
enum _47B71E2D7CA01B0F862E5A29B6DA0D7D {NSStringDrawingUsesLineFragmentOrigin = 0x1,NSStringDrawingUsesFontLeading = 0x2,NSStringDrawingUsesDeviceMetrics = 0x8,NSStringDrawingTruncatesLastVisibleLine = 0x20,};
enum _4832D2A2AE1A1F3E11955C12301687F2 {MLUpdateProgressEventTrainingBegin = 0x1,MLUpdateProgressEventEpochEnd = 0x2,MLUpdateProgressEventMiniBatchEnd = 0x4,};
enum _4867E1A308DD4F9C70F1432347957EA8 {kAudioFileMarkerType_Generic = 0x0,};
enum _486F380CEC34CE9E604A438F6E9C6699 {kCCModeECB = 0x1,kCCModeCBC = 0x2,kCCModeCFB = 0x3,kCCModeCTR = 0x4,kCCModeOFB = 0x7,kCCModeRC4 = 0x9,kCCModeCFB8 = 0xA,};
enum _48B60630BDA886CCF8F1114AFE383954 {MTLBlitOptionNone = 0x0,MTLBlitOptionDepthFromDepthStencil = 0x1,MTLBlitOptionStencilFromDepthStencil = 0x2,MTLBlitOptionRowLinearPVRTC = 0x4,};
enum _48ECC66095D43FBC60EAD82DA3DBB75F {NSURLBookmarkResolutionWithoutUI = 0x100,NSURLBookmarkResolutionWithoutMounting = 0x200,NSURLBookmarkResolutionWithSecurityScope = 0x400,};
enum _490A6102B61916395501006424082D7A {AVCaptureSystemPressureFactorNone = 0x0,AVCaptureSystemPressureFactorSystemTemperature = 0x1,AVCaptureSystemPressureFactorPeakPower = 0x2,AVCaptureSystemPressureFactorDepthModuleTemperature = 0x4,};
enum _491F1E0CA3DA70B0F79D2A2653E02A6B {kABInvalidPropertyType = 0x0,kABStringPropertyType = 0x1,kABIntegerPropertyType = 0x2,kABRealPropertyType = 0x3,kABDateTimePropertyType = 0x4,kABDictionaryPropertyType = 0x5,kABMultiStringPropertyType = 0x101,kABMultiIntegerPropertyType = 0x102,kABMultiRealPropertyType = 0x103,kABMultiDateTimePropertyType = 0x104,kABMultiDictionaryPropertyType = 0x105,};
enum _496919EEA75A1685F1BE5B9CFEECF2A9 {kMusicDeviceRange = 0x100,kMusicDeviceMIDIEventSelect = 0x101,kMusicDeviceSysExSelect = 0x102,kMusicDevicePrepareInstrumentSelect = 0x103,kMusicDeviceReleaseInstrumentSelect = 0x104,kMusicDeviceStartNoteSelect = 0x105,kMusicDeviceStopNoteSelect = 0x106,};
enum _49717405531E9BFE8F30F8732B4B99CB {NLTaggerOmitWords = 0x1,NLTaggerOmitPunctuation = 0x2,NLTaggerOmitWhitespace = 0x4,NLTaggerOmitOther = 0x8,NLTaggerJoinNames = 0x10,NLTaggerJoinContractions = 0x20,};
enum _497701F4F6A45EE9F8D49A3B470D873B {TKSmartCardProtocolNone = 0x0,TKSmartCardProtocolT0 = 0x1,TKSmartCardProtocolT1 = 0x2,TKSmartCardProtocolT15 = 0x8000,TKSmartCardProtocolAny = 0xFFFF,};
enum _4979F2606E9FFB3A4ACA37D81F4E98EB {kCMTextFormatType_QTText = 0x74657874,kCMTextFormatType_3GText = 0x74783367,};
enum _4A1A8A309A02B71EB5025776E28AEDA9 {kAudioUnitClumpID_System = 0x0,};
enum _4AA4A5674F7153C8C50673AF7F1E665C {kCTFontClassUnknown = 0x0,kCTFontClassOldStyleSerifs = 0x10000000,kCTFontClassTransitionalSerifs = 0x20000000,kCTFontClassModernSerifs = 0x30000000,kCTFontClassClarendonSerifs = 0x40000000,kCTFontClassSlabSerifs = 0x50000000,kCTFontClassFreeformSerifs = 0x70000000,kCTFontClassSansSerif = 0x80000000,kCTFontClassOrnamentals = 0x90000000,kCTFontClassScripts = 0xA0000000,kCTFontClassSymbolic = 0xC0000000,kCTFontUnknownClass = 0x0,kCTFontOldStyleSerifsClass = 0x10000000,kCTFontTransitionalSerifsClass = 0x20000000,kCTFontModernSerifsClass = 0x30000000,kCTFontClarendonSerifsClass = 0x40000000,kCTFontSlabSerifsClass = 0x50000000,kCTFontFreeformSerifsClass = 0x70000000,kCTFontSansSerifClass = 0x80000000,kCTFontOrnamentalsClass = 0x90000000,kCTFontScriptsClass = 0xA0000000,kCTFontSymbolicClass = 0xC0000000,};
enum _4BE6E921417747294EA196AE7B28E8F9 {kTRAKTag = 0x7472616B,kTRAKCurrentVersion = 0x10000,kTRAKUniformFormat = 0x0,};
enum _4C5DC46ABC9320BBBE7C69DC09705031 {NSStreamEventNone = 0x0,NSStreamEventOpenCompleted = 0x1,NSStreamEventHasBytesAvailable = 0x2,NSStreamEventHasSpaceAvailable = 0x4,NSStreamEventErrorOccurred = 0x8,NSStreamEventEndEncountered = 0x10,};
enum _4C86E033AC4285D434C12494CB28D789 {NSDataSearchBackwards = 0x1,NSDataSearchAnchored = 0x2,};
enum _4CB76977A9B34AB412F6DDB7FDB7DB78 {NSItemProviderFileOptionOpenInPlace = 0x1,};
enum _4CE33547CA73552BED82B69A0AE4D32D {kAUNBandEQProperty_NumberOfBands = 0x898,kAUNBandEQProperty_MaxNumberOfBands = 0x899,kAUNBandEQProperty_BiquadCoefficients = 0x89B,};
enum _4D99C67ABF8C4C2494006BAC21C9594B {UIViewKeyframeAnimationOptionLayoutSubviews = 0x1,UIViewKeyframeAnimationOptionAllowUserInteraction = 0x2,UIViewKeyframeAnimationOptionBeginFromCurrentState = 0x4,UIViewKeyframeAnimationOptionRepeat = 0x8,UIViewKeyframeAnimationOptionAutoreverse = 0x10,UIViewKeyframeAnimationOptionOverrideInheritedDuration = 0x20,UIViewKeyframeAnimationOptionOverrideInheritedOptions = 0x200,UIViewKeyframeAnimationOptionCalculationModeLinear = 0x0,UIViewKeyframeAnimationOptionCalculationModeDiscrete = 0x400,UIViewKeyframeAnimationOptionCalculationModePaced = 0x800,UIViewKeyframeAnimationOptionCalculationModeCubic = 0xC00,UIViewKeyframeAnimationOptionCalculationModeCubicPaced = 0x1000,};
enum _4DFF34AEE2F418FD0A57A2DFF8F6B334 {QLThumbnailGenerationRequestRepresentationTypeIcon = 0x1,QLThumbnailGenerationRequestRepresentationTypeLowQualityThumbnail = 0x2,QLThumbnailGenerationRequestRepresentationTypeThumbnail = 0x4,QLThumbnailGenerationRequestRepresentationTypeAll = 0xFFFFFFFFFFFFFFFF,};
enum _4EA2813BF1642C82A1A4C59EF0180CFA {NSFileManagerUnmountAllPartitionsAndEjectDisk = 0x1,NSFileManagerUnmountWithoutUI = 0x2,};
enum _4FCDE7B44CD7973F24CDC1852CE827BC {kvImageCVImageFormat_NoError = 0x0,kvImageCVImageFormat_ConversionMatrix = 0xFFFFABA0,kvImageCVImageFormat_ChromaSiting = 0xFFFFAB9F,kvImageCVImageFormat_ColorSpace = 0xFFFFAB9E,kvImageCVImageFormat_VideoChannelDescription = 0xFFFFAB9D,kvImageCVImageFormat_AlphaIsOneHint = 0xFFFFAB9C,};
enum _503FB47613D5CFDB23AF34B44EC60D29 {kAUGroupParameterID_Volume = 0x7,kAUGroupParameterID_Sustain = 0x40,kAUGroupParameterID_Sostenuto = 0x42,kAUGroupParameterID_AllNotesOff = 0x7B,kAUGroupParameterID_ModWheel = 0x1,kAUGroupParameterID_PitchBend = 0xE0,kAUGroupParameterID_AllSoundOff = 0x78,kAUGroupParameterID_ResetAllControllers = 0x79,kAUGroupParameterID_Pan = 0xA,kAUGroupParameterID_Foot = 0x4,kAUGroupParameterID_ChannelPressure = 0xD0,kAUGroupParameterID_KeyPressure = 0xA0,kAUGroupParameterID_Expression = 0xB,kAUGroupParameterID_DataEntry = 0x6,kAUGroupParameterID_Volume_LSB = 0x27,kAUGroupParameterID_ModWheel_LSB = 0x21,kAUGroupParameterID_Pan_LSB = 0x2A,kAUGroupParameterID_Foot_LSB = 0x24,kAUGroupParameterID_Expression_LSB = 0x2B,kAUGroupParameterID_DataEntry_LSB = 0x26,kAUGroupParameterID_KeyPressure_FirstKey = 0x100,kAUGroupParameterID_KeyPressure_LastKey = 0x17F,};
enum _50614286BB9D5C89204FA4CEDDA47CF8 {kAudioQueueHardwareCodecPolicy_Default = 0x0,kAudioQueueHardwareCodecPolicy_UseSoftwareOnly = 0x1,kAudioQueueHardwareCodecPolicy_UseHardwareOnly = 0x2,kAudioQueueHardwareCodecPolicy_PreferSoftware = 0x3,kAudioQueueHardwareCodecPolicy_PreferHardware = 0x4,};
enum _50DDD439253A1B9B2B5A1E2709C8AF26 {PKAddressFieldNone = 0x0,PKAddressFieldPostalAddress = 0x1,PKAddressFieldPhone = 0x2,PKAddressFieldEmail = 0x4,PKAddressFieldName = 0x8,PKAddressFieldAll = 0xF,};
enum _50E5447F231862158884499FDBCBFE2D {kAudioUnitType_RemoteEffect = 0x61757278,kAudioUnitType_RemoteGenerator = 0x61757267,kAudioUnitType_RemoteInstrument = 0x61757269,kAudioUnitType_RemoteMusicEffect = 0x6175726D,};
enum _51BF22BE43820ED676CAA6D2A55C2D8F {kCJKVerticalRomanCenteredSelector = 0x0,kCJKVerticalRomanHBaselineSelector = 0x1,};
enum _51ECA4402D7820396D92C764875C302E {OBJC_CLEAR_RESIDENT_STACK = 0x1,};
enum _52014CFC4CE8D201627CB1E85B9B8F1F {NSLayoutFormatAlignAllLeft = 0x2,NSLayoutFormatAlignAllRight = 0x4,NSLayoutFormatAlignAllTop = 0x8,NSLayoutFormatAlignAllBottom = 0x10,NSLayoutFormatAlignAllLeading = 0x20,NSLayoutFormatAlignAllTrailing = 0x40,NSLayoutFormatAlignAllCenterX = 0x200,NSLayoutFormatAlignAllCenterY = 0x400,NSLayoutFormatAlignAllLastBaseline = 0x800,NSLayoutFormatAlignAllFirstBaseline = 0x1000,NSLayoutFormatAlignAllBaseline = 0x800,NSLayoutFormatAlignmentMask = 0xFFFF,NSLayoutFormatDirectionLeadingToTrailing = 0x0,NSLayoutFormatDirectionLeftToRight = 0x10000,NSLayoutFormatDirectionRightToLeft = 0x20000,NSLayoutFormatDirectionMask = 0x30000,NSLayoutFormatSpacingEdgeToEdge = 0x0,NSLayoutFormatSpacingBaselineToBaseline = 0x80000,NSLayoutFormatSpacingMask = 0x80000,};
enum _52A44AD95D1DD476ACD4D681FDA8BF95 {kMIDIInvalidUniqueID = 0x0,};
enum _52DE0E5FCDAFBBBD633B93AC7BEE2853 {NSNetServiceNoAutoRename = 0x1,NSNetServiceListenForConnections = 0x2,};
enum _53B574C9E46E58C779DEF4AE1E22CBF2 {kCTErrorDomainNoError = 0x0,kCTErrorDomainPOSIX = 0x1,kCTErrorDomainMach = 0x2,};
enum _545014A33A5FCB2A124A7AA73D1DAC86 {kCMClockError_MissingRequiredParameter = 0xFFFFCE37,kCMClockError_InvalidParameter = 0xFFFFCE36,kCMClockError_AllocationFailed = 0xFFFFCE35,kCMClockError_UnsupportedOperation = 0xFFFFCE2C,};
enum _54E2E97C60AA3307C982AE34CEE67A26 {NSProprietaryStringEncoding = 0x10000,};
enum _550BDF00AC41FB01777B588AF69BF54B {kAudioUnitProperty_ScheduledFileIDs = 0xCEE,kAudioUnitProperty_ScheduledFileRegion = 0xCEF,kAudioUnitProperty_ScheduledFilePrime = 0xCF0,kAudioUnitProperty_ScheduledFileBufferSizeFrames = 0xCF1,kAudioUnitProperty_ScheduledFileNumberBuffers = 0xCF2,};
enum _55BBD4DDC4E7863160BF197C573FECFF {kAudioUnitErr_IllegalInstrument = 0xFFFFD587,kAudioUnitErr_InstrumentTypeNotFound = 0xFFFFD588,};
enum _55FE3369D8A5AD0999F6D81174AFD0DA {UNW_ARM_R0 = 0x0,UNW_ARM_R1 = 0x1,UNW_ARM_R2 = 0x2,UNW_ARM_R3 = 0x3,UNW_ARM_R4 = 0x4,UNW_ARM_R5 = 0x5,UNW_ARM_R6 = 0x6,UNW_ARM_R7 = 0x7,UNW_ARM_R8 = 0x8,UNW_ARM_R9 = 0x9,UNW_ARM_R10 = 0xA,UNW_ARM_R11 = 0xB,UNW_ARM_R12 = 0xC,UNW_ARM_SP = 0xD,UNW_ARM_R13 = 0xD,UNW_ARM_LR = 0xE,UNW_ARM_R14 = 0xE,UNW_ARM_IP = 0xF,UNW_ARM_R15 = 0xF,UNW_ARM_S0 = 0x40,UNW_ARM_S1 = 0x41,UNW_ARM_S2 = 0x42,UNW_ARM_S3 = 0x43,UNW_ARM_S4 = 0x44,UNW_ARM_S5 = 0x45,UNW_ARM_S6 = 0x46,UNW_ARM_S7 = 0x47,UNW_ARM_S8 = 0x48,UNW_ARM_S9 = 0x49,UNW_ARM_S10 = 0x4A,UNW_ARM_S11 = 0x4B,UNW_ARM_S12 = 0x4C,UNW_ARM_S13 = 0x4D,UNW_ARM_S14 = 0x4E,UNW_ARM_S15 = 0x4F,UNW_ARM_S16 = 0x50,UNW_ARM_S17 = 0x51,UNW_ARM_S18 = 0x52,UNW_ARM_S19 = 0x53,UNW_ARM_S20 = 0x54,UNW_ARM_S21 = 0x55,UNW_ARM_S22 = 0x56,UNW_ARM_S23 = 0x57,UNW_ARM_S24 = 0x58,UNW_ARM_S25 = 0x59,UNW_ARM_S26 = 0x5A,UNW_ARM_S27 = 0x5B,UNW_ARM_S28 = 0x5C,UNW_ARM_S29 = 0x5D,UNW_ARM_S30 = 0x5E,UNW_ARM_S31 = 0x5F,UNW_ARM_WR0 = 0x70,UNW_ARM_WR1 = 0x71,UNW_ARM_WR2 = 0x72,UNW_ARM_WR3 = 0x73,UNW_ARM_WR4 = 0x74,UNW_ARM_WR5 = 0x75,UNW_ARM_WR6 = 0x76,UNW_ARM_WR7 = 0x77,UNW_ARM_WR8 = 0x78,UNW_ARM_WR9 = 0x79,UNW_ARM_WR10 = 0x7A,UNW_ARM_WR11 = 0x7B,UNW_ARM_WR12 = 0x7C,UNW_ARM_WR13 = 0x7D,UNW_ARM_WR14 = 0x7E,UNW_ARM_WR15 = 0x7F,UNW_ARM_WC0 = 0xC0,UNW_ARM_WC1 = 0xC1,UNW_ARM_WC2 = 0xC2,UNW_ARM_WC3 = 0xC3,UNW_ARM_D0 = 0x100,UNW_ARM_D1 = 0x101,UNW_ARM_D2 = 0x102,UNW_ARM_D3 = 0x103,UNW_ARM_D4 = 0x104,UNW_ARM_D5 = 0x105,UNW_ARM_D6 = 0x106,UNW_ARM_D7 = 0x107,UNW_ARM_D8 = 0x108,UNW_ARM_D9 = 0x109,UNW_ARM_D10 = 0x10A,UNW_ARM_D11 = 0x10B,UNW_ARM_D12 = 0x10C,UNW_ARM_D13 = 0x10D,UNW_ARM_D14 = 0x10E,UNW_ARM_D15 = 0x10F,UNW_ARM_D16 = 0x110,UNW_ARM_D17 = 0x111,UNW_ARM_D18 = 0x112,UNW_ARM_D19 = 0x113,UNW_ARM_D20 = 0x114,UNW_ARM_D21 = 0x115,UNW_ARM_D22 = 0x116,UNW_ARM_D23 = 0x117,UNW_ARM_D24 = 0x118,UNW_ARM_D25 = 0x119,UNW_ARM_D26 = 0x11A,UNW_ARM_D27 = 0x11B,UNW_ARM_D28 = 0x11C,UNW_ARM_D29 = 0x11D,UNW_ARM_D30 = 0x11E,UNW_ARM_D31 = 0x11F,};
enum _565F1797546EC3963152131D2AC9E626 {MPSCNNBatchNormalizationFlagsDefault = 0x0,MPSCNNBatchNormalizationFlagsCalculateStatisticsAutomatic = 0x0,MPSCNNBatchNormalizationFlagsCalculateStatisticsAlways = 0x1,MPSCNNBatchNormalizationFlagsCalculateStatisticsNever = 0x2,MPSCNNBatchNormalizationFlagsCalculateStatisticsMask = 0x3,};
enum _56C9FA8EC06F2DC5CDD042297C38F92E {kCCPBKDF2 = 0x2,};
enum _56CAFB7CE7C1863618E296DF03E18338 {kAudioQueueTimePitchAlgorithm_Spectral = 0x73706563,kAudioQueueTimePitchAlgorithm_TimeDomain = 0x7469646F,kAudioQueueTimePitchAlgorithm_Varispeed = 0x76737064,};
enum _56FA038A3082F8A31489C4F639AEB416 {kFontUnicodePlatform = 0x0,kFontMacintoshPlatform = 0x1,kFontReservedPlatform = 0x2,kFontMicrosoftPlatform = 0x3,kFontCustomPlatform = 0x4,};
enum _57268275113061CE106F90BCEE7D3475 {kCAFRegionFlag_LoopEnable = 0x1,kCAFRegionFlag_PlayForward = 0x2,kCAFRegionFlag_PlayBackward = 0x4,};
enum _57335F2D7C864DE1685644B6386A163E {kAudioCodecPropertyRequiresPacketDescription = 0x70616B64,kAudioCodecPropertyAvailableBitRates = 0x62727423,kAudioCodecExtendFrequencies = 0x61636566,kAudioCodecUseRecommendedSampleRate = 0x75727372,kAudioCodecOutputPrecedence = 0x6F707072,kAudioCodecBitRateFormat = 0x61636266,kAudioCodecDoesSampleRateConversion = 0x6C6D7263,kAudioCodecInputFormatsForOutputFormat = 0x6966346F,kAudioCodecOutputFormatsForInputFormat = 0x6F663469,kAudioCodecPropertyInputChannelLayout = 0x69636C20,kAudioCodecPropertyOutputChannelLayout = 0x6F636C20,kAudioCodecPropertyAvailableInputChannelLayouts = 0x6169636C,kAudioCodecPropertyAvailableOutputChannelLayouts = 0x616F636C,kAudioCodecPropertyZeroFramesPadded = 0x70616430,};
enum _579C946E61A5470700B7AAD26B186EF4 {kvImageGamma_UseGammaValue = 0x0,kvImageGamma_UseGammaValue_half_precision = 0x1,kvImageGamma_5_over_9_half_precision = 0x2,kvImageGamma_9_over_5_half_precision = 0x3,kvImageGamma_5_over_11_half_precision = 0x4,kvImageGamma_11_over_5_half_precision = 0x5,kvImageGamma_sRGB_forward_half_precision = 0x6,kvImageGamma_sRGB_reverse_half_precision = 0x7,kvImageGamma_11_over_9_half_precision = 0x8,kvImageGamma_9_over_11_half_precision = 0x9,kvImageGamma_BT709_forward_half_precision = 0xA,kvImageGamma_BT709_reverse_half_precision = 0xB,};
enum _588DA82BCFFBEF50FEB6656E8C1B750F {kAudioFilePropertyFileFormat = 0x66666D74,kAudioFilePropertyDataFormat = 0x64666D74,kAudioFilePropertyIsOptimized = 0x6F70746D,kAudioFilePropertyMagicCookieData = 0x6D676963,kAudioFilePropertyAudioDataByteCount = 0x62636E74,kAudioFilePropertyAudioDataPacketCount = 0x70636E74,kAudioFilePropertyMaximumPacketSize = 0x70737A65,kAudioFilePropertyDataOffset = 0x646F6666,kAudioFilePropertyChannelLayout = 0x636D6170,kAudioFilePropertyDeferSizeUpdates = 0x64737A75,kAudioFilePropertyDataFormatName = 0x666E6D65,kAudioFilePropertyMarkerList = 0x6D6B6C73,kAudioFilePropertyRegionList = 0x72676C73,kAudioFilePropertyPacketToFrame = 0x706B6672,kAudioFilePropertyFrameToPacket = 0x6672706B,kAudioFilePropertyRestrictsRandomAccess = 0x72726170,kAudioFilePropertyPacketToRollDistance = 0x706B726C,kAudioFilePropertyPreviousIndependentPacket = 0x70696E64,kAudioFilePropertyNextIndependentPacket = 0x6E696E64,kAudioFilePropertyPacketToDependencyInfo = 0x706B6470,kAudioFilePropertyPacketToByte = 0x706B6279,kAudioFilePropertyByteToPacket = 0x6279706B,kAudioFilePropertyChunkIDs = 0x63686964,kAudioFilePropertyInfoDictionary = 0x696E666F,kAudioFilePropertyPacketTableInfo = 0x706E666F,kAudioFilePropertyFormatList = 0x666C7374,kAudioFilePropertyPacketSizeUpperBound = 0x706B7562,kAudioFilePropertyPacketRangeByteCountUpperBound = 0x70727562,kAudioFilePropertyReserveDuration = 0x72737276,kAudioFilePropertyEstimatedDuration = 0x65647572,kAudioFilePropertyBitRate = 0x62726174,kAudioFilePropertyID3Tag = 0x69643374,kAudioFilePropertyID3TagOffset = 0x6964336F,kAudioFilePropertySourceBitDepth = 0x73627464,kAudioFilePropertyAlbumArtwork = 0x61617274,kAudioFilePropertyAudioTrackCount = 0x61746374,kAudioFilePropertyUseAudioTrack = 0x7561746B,};
enum _58D3D09030192164802BD24BB95263CC {EKCalendarEventAvailabilityNone = 0x0,EKCalendarEventAvailabilityBusy = 0x1,EKCalendarEventAvailabilityFree = 0x2,EKCalendarEventAvailabilityTentative = 0x4,EKCalendarEventAvailabilityUnavailable = 0x8,};
enum _58E0A0FA4998900E5D2287362100ECB5 {UTEXT_PROVIDER_LENGTH_IS_EXPENSIVE = 0x1,UTEXT_PROVIDER_STABLE_CHUNKS = 0x2,UTEXT_PROVIDER_WRITABLE = 0x3,UTEXT_PROVIDER_HAS_META_DATA = 0x4,UTEXT_PROVIDER_OWNS_TEXT = 0x5,};
enum _599A03EC66DEC46E6292CE7C3964D5D8 {NSURLBookmarkCreationPreferFileIDResolution = 0x100,NSURLBookmarkCreationMinimalBookmark = 0x200,NSURLBookmarkCreationSuitableForBookmarkFile = 0x400,NSURLBookmarkCreationWithSecurityScope = 0x800,NSURLBookmarkCreationSecurityScopeAllowOnlyReadAccess = 0x1000,};
enum _5A15C5339E21CB94D7FF4D3854C82449 {UIDocumentBrowserActionAvailabilityMenu = 0x1,UIDocumentBrowserActionAvailabilityNavigationBar = 0x2,};
enum _5B43FC22E9C058BB0F0FEE8B29E66C23 {kCTFontTraitItalic = 0x1,kCTFontTraitBold = 0x2,kCTFontTraitExpanded = 0x20,kCTFontTraitCondensed = 0x40,kCTFontTraitMonoSpace = 0x400,kCTFontTraitVertical = 0x800,kCTFontTraitUIOptimized = 0x1000,kCTFontTraitColorGlyphs = 0x2000,kCTFontTraitComposite = 0x4000,kCTFontTraitClassMask = 0xF0000000,kCTFontItalicTrait = 0x1,kCTFontBoldTrait = 0x2,kCTFontExpandedTrait = 0x20,kCTFontCondensedTrait = 0x40,kCTFontMonoSpaceTrait = 0x400,kCTFontVerticalTrait = 0x800,kCTFontUIOptimizedTrait = 0x1000,kCTFontColorGlyphsTrait = 0x2000,kCTFontCompositeTrait = 0x4000,kCTFontClassMaskTrait = 0xF0000000,};
enum _5B4C5E30548FD8F1B6A9AF9211FF9BE1 {sizeof_sfntCMapSubHeader = 0x6,};
enum _5B7BB36739ED6C9F85A708B3FADD35C2 {kFontCopyrightName = 0x0,kFontFamilyName = 0x1,kFontStyleName = 0x2,kFontUniqueName = 0x3,kFontFullName = 0x4,kFontVersionName = 0x5,kFontPostscriptName = 0x6,kFontTrademarkName = 0x7,kFontManufacturerName = 0x8,kFontDesignerName = 0x9,kFontDescriptionName = 0xA,kFontVendorURLName = 0xB,kFontDesignerURLName = 0xC,kFontLicenseDescriptionName = 0xD,kFontLicenseInfoURLName = 0xE,kFontPreferredFamilyName = 0x10,kFontPreferredSubfamilyName = 0x11,kFontMacCompatibleFullName = 0x12,kFontSampleTextName = 0x13,kFontPostScriptCIDName = 0x14,kFontLastReservedName = 0xFF,};
typedef NSError **_5B7C173BD233E574571538AABB6805AB;
enum _5C6B99FC784B14CC4456ECD339F05720 {kNoRubyKanaSelector = 0x0,kRubyKanaSelector = 0x1,kRubyKanaOnSelector = 0x2,kRubyKanaOffSelector = 0x3,};
enum _5C71A07326761E2EABA08A715BE94FB8 {UNW_X86_64_RAX = 0x0,UNW_X86_64_RDX = 0x1,UNW_X86_64_RCX = 0x2,UNW_X86_64_RBX = 0x3,UNW_X86_64_RSI = 0x4,UNW_X86_64_RDI = 0x5,UNW_X86_64_RBP = 0x6,UNW_X86_64_RSP = 0x7,UNW_X86_64_R8 = 0x8,UNW_X86_64_R9 = 0x9,UNW_X86_64_R10 = 0xA,UNW_X86_64_R11 = 0xB,UNW_X86_64_R12 = 0xC,UNW_X86_64_R13 = 0xD,UNW_X86_64_R14 = 0xE,UNW_X86_64_R15 = 0xF,UNW_X86_64_RIP = 0x10,UNW_X86_64_XMM0 = 0x11,UNW_X86_64_XMM1 = 0x12,UNW_X86_64_XMM2 = 0x13,UNW_X86_64_XMM3 = 0x14,UNW_X86_64_XMM4 = 0x15,UNW_X86_64_XMM5 = 0x16,UNW_X86_64_XMM6 = 0x17,UNW_X86_64_XMM7 = 0x18,UNW_X86_64_XMM8 = 0x19,UNW_X86_64_XMM9 = 0x1A,UNW_X86_64_XMM10 = 0x1B,UNW_X86_64_XMM11 = 0x1C,UNW_X86_64_XMM12 = 0x1D,UNW_X86_64_XMM13 = 0x1E,UNW_X86_64_XMM14 = 0x1F,UNW_X86_64_XMM15 = 0x20,};
enum _5C99FA3EE623FB45F47D38B900692769 {kDefaultUpperCaseSelector = 0x0,kUpperCaseSmallCapsSelector = 0x1,kUpperCasePetiteCapsSelector = 0x2,};
enum _5CD7EC19AD72B256C91DEE0C7F0E337C {MTLAccelerationStructureGeometryFlagNone = 0x0,MTLAccelerationStructureGeometryFlagOpaque = 0x1,MTLAccelerationStructureGeometryFlagNoDuplicateIntersectionFunctionInvocation = 0x2,};
enum _5CF850EE96BECA4354B8F6C7A6E9F3AB {kRotate0DegreesClockwise = 0x0,kRotate90DegreesClockwise = 0x3,kRotate180DegreesClockwise = 0x2,kRotate270DegreesClockwise = 0x1,kRotate0DegreesCounterClockwise = 0x0,kRotate90DegreesCounterClockwise = 0x1,kRotate180DegreesCounterClockwise = 0x2,kRotate270DegreesCounterClockwise = 0x3,};
enum _5D33BE5D826A9F32F4CC1BEDC208AA8E {MPMediaTypeMusic = 0x1,MPMediaTypePodcast = 0x2,MPMediaTypeAudioBook = 0x4,MPMediaTypeAudioITunesU = 0x8,MPMediaTypeAnyAudio = 0xFF,MPMediaTypeMovie = 0x100,MPMediaTypeTVShow = 0x200,MPMediaTypeVideoPodcast = 0x400,MPMediaTypeMusicVideo = 0x800,MPMediaTypeVideoITunesU = 0x1000,MPMediaTypeHomeVideo = 0x2000,MPMediaTypeAnyVideo = 0xFF00,MPMediaTypeAny = 0xFFFFFFFFFFFFFFFF,};
enum _5DDC6732FA4F0447438F6C41035459F5 {MKLocalSearchResultTypeAddress = 0x1,MKLocalSearchResultTypePointOfInterest = 0x2,};
enum _5E1600FB79BC4E0F9ECF815203E40416 {kAudioFileLoopDirection_NoLooping = 0x0,kAudioFileLoopDirection_Forward = 0x1,kAudioFileLoopDirection_ForwardAndBackward = 0x2,kAudioFileLoopDirection_Backward = 0x3,};
enum _5E5B143C06A36749ECF1248B09BFA113 {kAudioCodecBitRateControlMode_Constant = 0x0,kAudioCodecBitRateControlMode_LongTermAverage = 0x1,kAudioCodecBitRateControlMode_VariableConstrained = 0x2,kAudioCodecBitRateControlMode_Variable = 0x3,};
enum _5E77F07BD80A12A7C079C0EBC7316B12 {kDynamicRangeControlMode_None = 0x0,kDynamicRangeControlMode_Light = 0x1,kDynamicRangeControlMode_Heavy = 0x2,};
enum _5E7968A7B5E8B0BEF3571FFA2BC3AC6A {kUpperAndLowerCaseSelector = 0x0,kAllCapsSelector = 0x1,kAllLowerCaseSelector = 0x2,kSmallCapsSelector = 0x3,kInitialCapsSelector = 0x4,kInitialCapsAndSmallCapsSelector = 0x5,};
enum _5FA46E4A68F55CEEABA678E3DF4D95BD {kJUSTOverridePriority = 0x8000,kJUSTOverrideLimits = 0x4000,kJUSTOverrideUnlimited = 0x2000,kJUSTUnlimited = 0x1000,kJUSTPriorityMask = 0x3,};
enum _5FD1529D3F1C5176FD21172E572A9F5E {U_PARSE_CONTEXT_LEN = 0x10,};
enum _6078A08C08614A4C7FD927F70737BFAF {kAudioFileFlags_EraseFile = 0x1,kAudioFileFlags_DontPageAlignAudioData = 0x2,};
enum _60B7844BF4509A92193B0F61C0B7F0D9 {GKMeshGraphTriangulationModeVertices = 0x1,GKMeshGraphTriangulationModeCenters = 0x2,GKMeshGraphTriangulationModeEdgeMidpoints = 0x4,};
enum _60BD829101601603481F889413CD4BE0 {kAudioToolboxErr_InvalidSequenceType = 0xFFFFD5A2,kAudioToolboxErr_TrackIndexError = 0xFFFFD595,kAudioToolboxErr_TrackNotFound = 0xFFFFD596,kAudioToolboxErr_EndOfTrack = 0xFFFFD597,kAudioToolboxErr_StartOfTrack = 0xFFFFD598,kAudioToolboxErr_IllegalTrackDestination = 0xFFFFD599,kAudioToolboxErr_NoSequence = 0xFFFFD59A,kAudioToolboxErr_InvalidEventType = 0xFFFFD59B,kAudioToolboxErr_InvalidPlayerState = 0xFFFFD59C,kAudioToolboxErr_CannotDoInCurrentContext = 0xFFFFD591,kAudioToolboxError_NoTrackDestination = 0xFFFEFB60,};
enum _61420FF66288CB15C375123E66EA5C2A {REMOVEFILE_PROCEED = 0x0,REMOVEFILE_SKIP = 0x1,REMOVEFILE_STOP = 0x2,};
enum _6164A85111750B00217D792FE5170620 {sizeof_sfntDescriptorHeader = 0x8,};
enum _62FC01ED4FF3E2A2942C5592F9DCD8BE {kCGBitmapAlphaInfoMask = 0x1F,kCGBitmapFloatInfoMask = 0xF00,kCGBitmapFloatComponents = 0x100,kCGBitmapByteOrderMask = 0x7000,kCGBitmapByteOrderDefault = 0x0,kCGBitmapByteOrder16Little = 0x1000,kCGBitmapByteOrder32Little = 0x2000,kCGBitmapByteOrder16Big = 0x3000,kCGBitmapByteOrder32Big = 0x4000,};
enum _632105E17997421424BE429A3BFC05D2 {ARPlaneDetectionNone = 0x0,ARPlaneDetectionHorizontal = 0x1,ARPlaneDetectionVertical = 0x2,};
enum _632D54A6EE583F5BA531F6EF773E39EF {UIViewAutoresizingNone = 0x0,UIViewAutoresizingFlexibleLeftMargin = 0x1,UIViewAutoresizingFlexibleWidth = 0x2,UIViewAutoresizingFlexibleRightMargin = 0x4,UIViewAutoresizingFlexibleTopMargin = 0x8,UIViewAutoresizingFlexibleHeight = 0x10,UIViewAutoresizingFlexibleBottomMargin = 0x20,};
enum _6374E74750844DB1045E6C5CF911F97A {vDSP_HALF_WINDOW = 0x1,vDSP_HANN_DENORM = 0x0,vDSP_HANN_NORM = 0x2,};
enum _64BFA70270C2BCCAD4A059D304BE57F8 {UNW_OR1K_R0 = 0x0,UNW_OR1K_R1 = 0x1,UNW_OR1K_R2 = 0x2,UNW_OR1K_R3 = 0x3,UNW_OR1K_R4 = 0x4,UNW_OR1K_R5 = 0x5,UNW_OR1K_R6 = 0x6,UNW_OR1K_R7 = 0x7,UNW_OR1K_R8 = 0x8,UNW_OR1K_R9 = 0x9,UNW_OR1K_R10 = 0xA,UNW_OR1K_R11 = 0xB,UNW_OR1K_R12 = 0xC,UNW_OR1K_R13 = 0xD,UNW_OR1K_R14 = 0xE,UNW_OR1K_R15 = 0xF,UNW_OR1K_R16 = 0x10,UNW_OR1K_R17 = 0x11,UNW_OR1K_R18 = 0x12,UNW_OR1K_R19 = 0x13,UNW_OR1K_R20 = 0x14,UNW_OR1K_R21 = 0x15,UNW_OR1K_R22 = 0x16,UNW_OR1K_R23 = 0x17,UNW_OR1K_R24 = 0x18,UNW_OR1K_R25 = 0x19,UNW_OR1K_R26 = 0x1A,UNW_OR1K_R27 = 0x1B,UNW_OR1K_R28 = 0x1C,UNW_OR1K_R29 = 0x1D,UNW_OR1K_R30 = 0x1E,UNW_OR1K_R31 = 0x1F,UNW_OR1K_EPCR = 0x20,};
enum _6532248ED5400E5F70E31B49326DC405 {kSpatialMixerParam_Azimuth = 0x0,kSpatialMixerParam_Elevation = 0x1,kSpatialMixerParam_Distance = 0x2,kSpatialMixerParam_Gain = 0x3,kSpatialMixerParam_PlaybackRate = 0x4,kSpatialMixerParam_Enable = 0x5,kSpatialMixerParam_MinGain = 0x6,kSpatialMixerParam_MaxGain = 0x7,kSpatialMixerParam_ReverbBlend = 0x8,kSpatialMixerParam_GlobalReverbGain = 0x9,kSpatialMixerParam_OcclusionAttenuation = 0xA,kSpatialMixerParam_ObstructionAttenuation = 0xB,kSpatialMixerParam_HeadYaw = 0x13,kSpatialMixerParam_HeadPitch = 0x14,kSpatialMixerParam_HeadRoll = 0x15,};
enum _65ABF4226BEE2C8315C2B3A01D95A520 {kAUNBandEQParam_GlobalGain = 0x0,kAUNBandEQParam_BypassBand = 0x3E8,kAUNBandEQParam_FilterType = 0x7D0,kAUNBandEQParam_Frequency = 0xBB8,kAUNBandEQParam_Gain = 0xFA0,kAUNBandEQParam_Bandwidth = 0x1388,};
enum _66090EF083A3E5AA4F1787535A7FB102 {kLinguisticRearrangementOnSelector = 0x0,kLinguisticRearrangementOffSelector = 0x1,};
enum _665FB5356FEA85237EC677DF69A872E1 {kCFStreamErrorSOCKS5BadResponseAddr = 0x1,kCFStreamErrorSOCKS5BadState = 0x2,kCFStreamErrorSOCKSUnknownClientVersion = 0x3,};
enum _666D154A3A78B5E987901B3ABDDFFC5A {ENRiskWeightDefault = 0x1,ENRiskWeightDefaultV2 = 0x64,ENRiskWeightMin = 0x0,ENRiskWeightMax = 0x64,ENRiskWeightMaxV2 = 0xFA,};
enum _67626E008D4B9416C45233DE54CAFA67 {HV_MEMORY_READ = 0x1,HV_MEMORY_WRITE = 0x2,HV_MEMORY_EXEC = 0x4,};
struct _678A87172BFFCBF6A0FE0078F3A89BFB {unsigned int UID : 1;unsigned int GID : 1;unsigned int FLG : 1;unsigned int MOD : 1;unsigned int BTM : 1;unsigned int CTM : 1;unsigned int MTM : 1;};
enum _67CCAF786B1CF45FAD1771959CD8FB06 {CBCharacteristicPropertyBroadcast = 0x1,CBCharacteristicPropertyRead = 0x2,CBCharacteristicPropertyWriteWithoutResponse = 0x4,CBCharacteristicPropertyWrite = 0x8,CBCharacteristicPropertyNotify = 0x10,CBCharacteristicPropertyIndicate = 0x20,CBCharacteristicPropertyAuthenticatedSignedWrites = 0x40,CBCharacteristicPropertyExtendedProperties = 0x80,CBCharacteristicPropertyNotifyEncryptionRequired = 0x100,CBCharacteristicPropertyIndicateEncryptionRequired = 0x200,};
enum _68233F25D6A008C4ED75897E01019B74 {kLCARTag = 0x6C636172,kLCARCurrentVersion = 0x10000,kLCARLinearFormat = 0x0,kLCARCtlPointFormat = 0x1,};
enum _682EBA25ECE21D972BDBE6B7063AF484 {kAudioOutputUnitProperty_CurrentDevice = 0x7D0,kAudioOutputUnitProperty_IsRunning = 0x7D1,kAudioOutputUnitProperty_ChannelMap = 0x7D2,kAudioOutputUnitProperty_EnableIO = 0x7D3,kAudioOutputUnitProperty_StartTime = 0x7D4,kAudioOutputUnitProperty_SetInputCallback = 0x7D5,kAudioOutputUnitProperty_HasIO = 0x7D6,kAudioOutputUnitProperty_StartTimestampsAtZero = 0x7D7,kAudioOutputUnitProperty_OSWorkgroup = 0x7DF,};
enum _689A08C3710CF0F4B321672019DD474D {kAudioCodecGetPropertyInfoSelect = 0x1,kAudioCodecGetPropertySelect = 0x2,kAudioCodecSetPropertySelect = 0x3,kAudioCodecInitializeSelect = 0x4,kAudioCodecUninitializeSelect = 0x5,kAudioCodecAppendInputDataSelect = 0x6,kAudioCodecProduceOutputDataSelect = 0x7,kAudioCodecResetSelect = 0x8,kAudioCodecAppendInputBufferListSelect = 0x9,kAudioCodecProduceOutputBufferListSelect = 0xA,};
enum _68CC357211A1BCE96FD521B2C82B8661 {TWTweetComposeViewControllerResultCancelled = 0x0,TWTweetComposeViewControllerResultDone = 0x1,};
enum _69468FD8D4B27B99CBE75E0E301F1757 {kMORTTag = 0x6D6F7274,kMORTCurrentVersion = 0x10000,kMORTCoverVertical = 0x8000,kMORTCoverDescending = 0x4000,kMORTCoverIgnoreVertical = 0x2000,kMORTCoverTypeMask = 0xF,kMORTRearrangementType = 0x0,kMORTContextualType = 0x1,kMORTLigatureType = 0x2,kMORTSwashType = 0x4,kMORTInsertionType = 0x5,kMORTLigLastAction = 0x80000000,kMORTLigStoreLigature = 0x40000000,kMORTLigFormOffsetMask = 0x3FFFFFFF,kMORTLigFormOffsetShift = 0x2,kMORTraNoAction = 0x0,kMORTraxA = 0x1,kMORTraDx = 0x2,kMORTraDxA = 0x3,kMORTraxAB = 0x4,kMORTraxBA = 0x5,kMORTraCDx = 0x6,kMORTraDCx = 0x7,kMORTraCDxA = 0x8,kMORTraDCxA = 0x9,kMORTraDxAB = 0xA,kMORTraDxBA = 0xB,kMORTraCDxAB = 0xC,kMORTraCDxBA = 0xD,kMORTraDCxAB = 0xE,kMORTraDCxBA = 0xF,kMORTDoInsertionsBefore = 0x80,kMORTIsSplitVowelPiece = 0x40,kMORTInsertionsCountMask = 0x3F,kMORTCurrInsertKashidaLike = 0x2000,kMORTMarkInsertKashidaLike = 0x1000,kMORTCurrInsertBefore = 0x800,kMORTMarkInsertBefore = 0x400,kMORTMarkJustTableCountMask = 0x3F80,kMORTMarkJustTableCountShift = 0x7,kMORTCurrJustTableCountMask = 0x7F,kMORTCurrJustTableCountShift = 0x0,kMORTCurrInsertCountMask = 0x3E0,kMORTCurrInsertCountShift = 0x5,kMORTMarkInsertCountMask = 0x1F,kMORTMarkInsertCountShift = 0x0,};
enum _69DC68BF714BA586345672C61675AEFF {kVariableLengthArray = 0x1,};
enum _6A485D76E6537922F8654A91385716B9 {kSCPreferencesNotificationCommit = 0x1,kSCPreferencesNotificationApply = 0x2,};
enum _6A5176D5F1B819DE4623A9800C010F92 {AVMusicSequenceLoadSMF_PreserveTracks = 0x0,AVMusicSequenceLoadSMF_ChannelsToTracks = 0x1,};
enum _6A78B92D9C2F02EA6049E98546E734B2 {kAudioUnitProperty_RemoteControlEventListener = 0x64,kAudioUnitProperty_IsInterAppConnected = 0x65,kAudioUnitProperty_PeerURL = 0x66,};
enum _6A88FD70860208C7FB9623568F7CE87C {kSystemSoundID_Vibrate = 0xFFF,};
enum _6A9C4BAD06A5A53D59A6DFFA2B09F7D4 {ENRiskScoreMin = 0x0,ENRiskScoreMax = 0xFF,};
enum _6B355E6F277036734717180853A57479 {kMusicDeviceProperty_InstrumentCount = 0x3E8,kMusicDeviceProperty_BankName = 0x3EF,kMusicDeviceProperty_SoundBankURL = 0x44C,};
enum _6B90019BDBC6F8962C6FC5C8F6CE1878 {UITextDragOptionsNone = 0x0,UITextDragOptionStripTextColorFromPreviews = 0x1,};
enum _6BB9D07C5756CB9C1E15DA1756989A17 {kCFISO8601DateFormatWithYear = 0x1,kCFISO8601DateFormatWithMonth = 0x2,kCFISO8601DateFormatWithWeekOfYear = 0x4,kCFISO8601DateFormatWithDay = 0x10,kCFISO8601DateFormatWithTime = 0x20,kCFISO8601DateFormatWithTimeZone = 0x40,kCFISO8601DateFormatWithSpaceBetweenDateAndTime = 0x80,kCFISO8601DateFormatWithDashSeparatorInDate = 0x100,kCFISO8601DateFormatWithColonSeparatorInTime = 0x200,kCFISO8601DateFormatWithColonSeparatorInTimeZone = 0x400,kCFISO8601DateFormatWithFractionalSeconds = 0x800,kCFISO8601DateFormatWithFullDate = 0x113,kCFISO8601DateFormatWithFullTime = 0x660,kCFISO8601DateFormatWithInternetDateTime = 0x773,};
enum _6BCD1ED27D17AD20289ECCC1E73F191A {kMusicSequenceFileFlags_Default = 0x0,kMusicSequenceFileFlags_EraseFile = 0x1,};
enum _6BDF7D39005B1EA7F5C70A63EE0EA950 {NSUnderlineStyleNone = 0x0,NSUnderlineStyleSingle = 0x1,NSUnderlineStyleThick = 0x2,NSUnderlineStyleDouble = 0x9,NSUnderlineStylePatternSolid = 0x0,NSUnderlineStylePatternDot = 0x100,NSUnderlineStylePatternDash = 0x200,NSUnderlineStylePatternDashDot = 0x300,NSUnderlineStylePatternDashDotDot = 0x400,NSUnderlineStyleByWord = 0x8000,};
enum _6C0385C1BADBFA699DC8A44E2AF4693E {MLCGraphCompilationOptionsNone = 0x0,MLCGraphCompilationOptionsDebugLayers = 0x1,MLCGraphCompilationOptionsDisableLayerFusion = 0x2,MLCGraphCompilationOptionsLinkGraphs = 0x4,MLCGraphCompilationOptionsComputeAllGradients = 0x8,};
enum _6C23A707DF6CDEF61DFC161969C5AF73 {OBJC_RATIO_COLLECTION = 0x0,OBJC_GENERATIONAL_COLLECTION = 0x1,OBJC_FULL_COLLECTION = 0x2,OBJC_EXHAUSTIVE_COLLECTION = 0x3,OBJC_COLLECT_IF_NEEDED = 0x8,OBJC_WAIT_UNTIL_DONE = 0x10,};
enum _6C3096F2DAF1FB858AA82BE1C1E226E7 {kCAF_FileType = 0x63616666,kCAF_FileVersion_Initial = 0x1,};
enum _6C9145A0B71F4466CA58A6EA5DA266FD {kCMMetadataDataTypeRegistryError_AllocationFailed = 0xFFFFC04A,kCMMetadataDataTypeRegistryError_RequiredParameterMissing = 0xFFFFC049,kCMMetadataDataTypeRegistryError_BadDataTypeIdentifier = 0xFFFFC048,kCMMetadataDataTypeRegistryError_DataTypeAlreadyRegistered = 0xFFFFC047,kCMMetadataDataTypeRegistryError_RequiresConformingBaseType = 0xFFFFC046,kCMMetadataDataTypeRegistryError_MultipleConformingBaseTypes = 0xFFFFC045,};
enum _6CE2AB0494D3958A2D190FC9D896FFB2 {kAudioFormatProperty_FormatInfo = 0x666D7469,kAudioFormatProperty_FormatName = 0x666E616D,kAudioFormatProperty_EncodeFormatIDs = 0x61636F66,kAudioFormatProperty_DecodeFormatIDs = 0x61636966,kAudioFormatProperty_FormatList = 0x666C7374,kAudioFormatProperty_ASBDFromESDS = 0x65737364,kAudioFormatProperty_ChannelLayoutFromESDS = 0x6573636C,kAudioFormatProperty_OutputFormatList = 0x6F666C73,kAudioFormatProperty_FirstPlayableFormatFromList = 0x6670666C,kAudioFormatProperty_FormatIsVBR = 0x66766272,kAudioFormatProperty_FormatIsExternallyFramed = 0x66657866,kAudioFormatProperty_FormatEmploysDependentPackets = 0x66646570,kAudioFormatProperty_FormatIsEncrypted = 0x63727970,kAudioFormatProperty_Encoders = 0x6176656E,kAudioFormatProperty_Decoders = 0x61766465,kAudioFormatProperty_AvailableEncodeBitRates = 0x61656272,kAudioFormatProperty_AvailableEncodeSampleRates = 0x61657372,kAudioFormatProperty_AvailableEncodeChannelLayoutTags = 0x6165636C,kAudioFormatProperty_AvailableEncodeNumberChannels = 0x61766E63,kAudioFormatProperty_AvailableDecodeNumberChannels = 0x61646E63,kAudioFormatProperty_ASBDFromMPEGPacket = 0x61646D70,kAudioFormatProperty_BitmapForLayoutTag = 0x626D7467,kAudioFormatProperty_MatrixMixMap = 0x6D6D6170,kAudioFormatProperty_ChannelMap = 0x63686D70,kAudioFormatProperty_NumberOfChannelsForLayout = 0x6E63686D,kAudioFormatProperty_AreChannelLayoutsEquivalent = 0x63686571,kAudioFormatProperty_ChannelLayoutHash = 0x63686861,kAudioFormatProperty_ValidateChannelLayout = 0x7661636C,kAudioFormatProperty_ChannelLayoutForTag = 0x636D706C,kAudioFormatProperty_TagForChannelLayout = 0x636D7074,kAudioFormatProperty_ChannelLayoutName = 0x6C6F6E6D,kAudioFormatProperty_ChannelLayoutSimpleName = 0x6C736E6D,kAudioFormatProperty_ChannelLayoutForBitmap = 0x636D7062,kAudioFormatProperty_ChannelName = 0x636E616D,kAudioFormatProperty_ChannelShortName = 0x63736E6D,kAudioFormatProperty_TagsForNumberOfChannels = 0x74616763,kAudioFormatProperty_PanningMatrix = 0x70616E6D,kAudioFormatProperty_BalanceFade = 0x62616C66,kAudioFormatProperty_ID3TagSize = 0x69643373,kAudioFormatProperty_ID3TagToDictionary = 0x69643364,};
enum _6D5B6783F06307A0D07542C367E8B8ED {kHALOutputParam_Volume = 0xE,};
enum _6DCE2C77DC933A8922A20AE19701B4AA {REMOVEFILE_RECURSIVE = 0x1,REMOVEFILE_KEEP_PARENT = 0x2,REMOVEFILE_SECURE_7_PASS = 0x4,REMOVEFILE_SECURE_35_PASS = 0x8,REMOVEFILE_SECURE_1_PASS = 0x10,REMOVEFILE_SECURE_3_PASS = 0x20,REMOVEFILE_SECURE_1_PASS_ZERO = 0x40,REMOVEFILE_CROSS_MOUNT = 0x80,};
enum _6DF9BA837E64C284B8F97D185E80996B {NSSortConcurrent = 0x1,NSSortStable = 0x10,};
enum _6ECFA3E1F92A1E5F8D9699830A35D2F4 {kCMAudioCodecType_AAC_LCProtected = 0x70616163,kCMAudioCodecType_AAC_AudibleProtected = 0x61616163,};
enum _6EDD7A73B7DA71F928A72EDF0545550A {kInstrumentType_DLSPreset = 0x1,kInstrumentType_SF2Preset = 0x1,kInstrumentType_AUPreset = 0x2,kInstrumentType_Audiofile = 0x3,kInstrumentType_EXS24 = 0x4,};
enum _6EE8468393C138148A95F6B7AFBF377D {NLTokenizerAttributeNumeric = 0x1,NLTokenizerAttributeSymbolic = 0x2,NLTokenizerAttributeEmoji = 0x4,};
enum _6EF0069075039A44BB4DDDA480231F08 {UNNotificationPresentationOptionBadge = 0x1,UNNotificationPresentationOptionSound = 0x2,UNNotificationPresentationOptionAlert = 0x4,UNNotificationPresentationOptionList = 0x8,UNNotificationPresentationOptionBanner = 0x10,};
enum _6F37B0B1DF16C4ECA2C65027BA0BC9B7 {kKERNOrderedList = 0x0,kKERNStateTable = 0x1,kKERNSimpleArray = 0x2,kKERNIndexArray = 0x3,};
enum _6F9FA8C392E5FEF81FC72A518B70FE75 {kAudioQueueProperty_HardwareCodecPolicy = 0x61716370,};
enum _6FB617977C058E7C89790574A973B9C0 {kAudioQueueProperty_IsRunning = 0x6171726E,kAudioQueueDeviceProperty_SampleRate = 0x61717372,kAudioQueueDeviceProperty_NumberChannels = 0x61716463,kAudioQueueProperty_CurrentDevice = 0x61716364,kAudioQueueProperty_MagicCookie = 0x61716D63,kAudioQueueProperty_MaximumOutputPacketSize = 0x786F7073,kAudioQueueProperty_StreamDescription = 0x61716674,kAudioQueueProperty_ChannelLayout = 0x6171636C,kAudioQueueProperty_EnableLevelMetering = 0x61716D65,kAudioQueueProperty_CurrentLevelMeter = 0x61716D76,kAudioQueueProperty_CurrentLevelMeterDB = 0x61716D64,kAudioQueueProperty_DecodeBufferSizeFrames = 0x64636266,kAudioQueueProperty_ConverterError = 0x71637665,kAudioQueueProperty_EnableTimePitch = 0x715F7470,kAudioQueueProperty_TimePitchAlgorithm = 0x71747061,kAudioQueueProperty_TimePitchBypass = 0x71747062,};
enum _6FFA9510F97DD23CEA2B5DD78B5F3A79 {ARSceneReconstructionNone = 0x0,ARSceneReconstructionMesh = 0x1,ARSceneReconstructionMeshWithClassification = 0x3,};
enum _71301FB3BB8D96EC648F72C326718F2F {MLCExecutionOptionsNone = 0x0,MLCExecutionOptionsSkipWritingInputDataToDevice = 0x1,MLCExecutionOptionsSynchronous = 0x2,MLCExecutionOptionsProfiling = 0x4,MLCExecutionOptionsForwardForInference = 0x8,};
enum _716167B89E434AAB104FCB5F4A56997E {kCMSubtitleFormatType_3GText = 0x74783367,kCMSubtitleFormatType_WebVTT = 0x77767474,};
enum _71849B4760B7E7C15E22059AED63FD03 {kCMBufferQueueError_AllocationFailed = 0xFFFFCE28,kCMBufferQueueError_RequiredParameterMissing = 0xFFFFCE27,kCMBufferQueueError_InvalidCMBufferCallbacksStruct = 0xFFFFCE26,kCMBufferQueueError_EnqueueAfterEndOfData = 0xFFFFCE25,kCMBufferQueueError_QueueIsFull = 0xFFFFCE24,kCMBufferQueueError_BadTriggerDuration = 0xFFFFCE23,kCMBufferQueueError_CannotModifyQueueFromTriggerCallback = 0xFFFFCE22,kCMBufferQueueError_InvalidTriggerCondition = 0xFFFFCE21,kCMBufferQueueError_InvalidTriggerToken = 0xFFFFCE20,kCMBufferQueueError_InvalidBuffer = 0xFFFFCE1F,};
enum _718AF5D94D6CB9F96662E3DC20EA32D6 {AVAudioPlayerNodeBufferLoops = 0x1,AVAudioPlayerNodeBufferInterrupts = 0x2,AVAudioPlayerNodeBufferInterruptsAtLoop = 0x4,};
enum _727AFADFF8A41AF92396D6ACB64D0D29 {kFFTDirection_Forward = 0x1,kFFTDirection_Inverse = 0xFFFFFFFF,};
enum _72BCB16DBD4E7C7EA712A6A8879ED182 {kCVTimeIsIndefinite = 0x1,};
enum _732578CB364AA03EF9DAB234A5AEA2F7 {kAUNodeInteraction_Connection = 0x1,kAUNodeInteraction_InputCallback = 0x2,};
enum _732D4B204D1DF584747621A64F4FEDE2 {NSUserDomainMask = 0x1,NSLocalDomainMask = 0x2,NSNetworkDomainMask = 0x4,NSSystemDomainMask = 0x8,NSAllDomainsMask = 0xFFFF,};
enum _73580C652A341FF263E5E532B7384424 {kCFDataSearchBackwards = 0x1,kCFDataSearchAnchored = 0x2,};
enum _74680570F73AA2D0D10545348FDBCC6F {kAudioOutputUnitProperty_MIDICallbacks = 0x7DA,kAudioOutputUnitProperty_HostReceivesRemoteControlEvents = 0x7DB,kAudioOutputUnitProperty_RemoteControlToHost = 0x7DC,kAudioOutputUnitProperty_HostTransportState = 0x7DD,kAudioOutputUnitProperty_NodeComponentDescription = 0x7DE,};
enum _74932BC75FAD7E319FB4F4D3D8976F28 {AVAudioSessionSetActiveFlags_NotifyOthersOnDeactivation = 0x1,};
enum _74C9F60ADE56DD1D18B5469B24293AFC {kAudioConverterPropertyMinimumInputBufferSize = 0x6D696273,kAudioConverterPropertyMinimumOutputBufferSize = 0x6D6F6273,kAudioConverterPropertyMaximumInputPacketSize = 0x78697073,kAudioConverterPropertyMaximumOutputPacketSize = 0x786F7073,kAudioConverterPropertyCalculateInputBufferSize = 0x63696273,kAudioConverterPropertyCalculateOutputBufferSize = 0x636F6273,kAudioConverterPropertyInputCodecParameters = 0x69636470,kAudioConverterPropertyOutputCodecParameters = 0x6F636470,kAudioConverterSampleRateConverterComplexity = 0x73726361,kAudioConverterSampleRateConverterQuality = 0x73726371,kAudioConverterSampleRateConverterInitialPhase = 0x73726370,kAudioConverterCodecQuality = 0x63647175,kAudioConverterPrimeMethod = 0x70726D6D,kAudioConverterPrimeInfo = 0x7072696D,kAudioConverterChannelMap = 0x63686D70,kAudioConverterDecompressionMagicCookie = 0x646D6763,kAudioConverterCompressionMagicCookie = 0x636D6763,kAudioConverterEncodeBitRate = 0x62726174,kAudioConverterEncodeAdjustableSampleRate = 0x616A7372,kAudioConverterInputChannelLayout = 0x69636C20,kAudioConverterOutputChannelLayout = 0x6F636C20,kAudioConverterApplicableEncodeBitRates = 0x61656272,kAudioConverterAvailableEncodeBitRates = 0x76656272,kAudioConverterApplicableEncodeSampleRates = 0x61657372,kAudioConverterAvailableEncodeSampleRates = 0x76657372,kAudioConverterAvailableEncodeChannelLayoutTags = 0x6165636C,kAudioConverterCurrentOutputStreamDescription = 0x61636F64,kAudioConverterCurrentInputStreamDescription = 0x61636964,kAudioConverterPropertySettings = 0x61637073,kAudioConverterPropertyBitDepthHint = 0x61636264,kAudioConverterPropertyFormatList = 0x666C7374,};
enum _75601FFAAC862EBF22ED46A54947EDCC {kExtAudioFileError_CodecUnavailableInputConsumed = 0xFFFEFC01,kExtAudioFileError_CodecUnavailableInputNotConsumed = 0xFFFEFC00,};
enum _760287C95EA9289CCC6CB626C8801F94 {kCFCalendarComponentsWrap = 0x1,};
enum _769351167FC0D43220891B4822276F2D {kCMMemoryPoolError_AllocationFailed = 0xFFFFC37E,kCMMemoryPoolError_InvalidParameter = 0xFFFFC37D,};
enum _76C6EC38FD09D50CC174A73CC320C739 {kCMPersistentTrackID_Invalid = 0x0,};
enum _76EC49FBD5C33FEED93E20D8F39B82F6 {UIMenuOptionsDisplayInline = 0x1,UIMenuOptionsDestructive = 0x2,};
enum _77594461462965A3C86D8954729A9601 {kFontCustom8BitScript = 0x0,kFontCustom816BitScript = 0x1,kFontCustom16BitScript = 0x2,};
enum _779480E7246E0932FA7DD1D478FB0A7A {UNW_MIPS_R0 = 0x0,UNW_MIPS_R1 = 0x1,UNW_MIPS_R2 = 0x2,UNW_MIPS_R3 = 0x3,UNW_MIPS_R4 = 0x4,UNW_MIPS_R5 = 0x5,UNW_MIPS_R6 = 0x6,UNW_MIPS_R7 = 0x7,UNW_MIPS_R8 = 0x8,UNW_MIPS_R9 = 0x9,UNW_MIPS_R10 = 0xA,UNW_MIPS_R11 = 0xB,UNW_MIPS_R12 = 0xC,UNW_MIPS_R13 = 0xD,UNW_MIPS_R14 = 0xE,UNW_MIPS_R15 = 0xF,UNW_MIPS_R16 = 0x10,UNW_MIPS_R17 = 0x11,UNW_MIPS_R18 = 0x12,UNW_MIPS_R19 = 0x13,UNW_MIPS_R20 = 0x14,UNW_MIPS_R21 = 0x15,UNW_MIPS_R22 = 0x16,UNW_MIPS_R23 = 0x17,UNW_MIPS_R24 = 0x18,UNW_MIPS_R25 = 0x19,UNW_MIPS_R26 = 0x1A,UNW_MIPS_R27 = 0x1B,UNW_MIPS_R28 = 0x1C,UNW_MIPS_R29 = 0x1D,UNW_MIPS_R30 = 0x1E,UNW_MIPS_R31 = 0x1F,UNW_MIPS_F0 = 0x20,UNW_MIPS_F1 = 0x21,UNW_MIPS_F2 = 0x22,UNW_MIPS_F3 = 0x23,UNW_MIPS_F4 = 0x24,UNW_MIPS_F5 = 0x25,UNW_MIPS_F6 = 0x26,UNW_MIPS_F7 = 0x27,UNW_MIPS_F8 = 0x28,UNW_MIPS_F9 = 0x29,UNW_MIPS_F10 = 0x2A,UNW_MIPS_F11 = 0x2B,UNW_MIPS_F12 = 0x2C,UNW_MIPS_F13 = 0x2D,UNW_MIPS_F14 = 0x2E,UNW_MIPS_F15 = 0x2F,UNW_MIPS_F16 = 0x30,UNW_MIPS_F17 = 0x31,UNW_MIPS_F18 = 0x32,UNW_MIPS_F19 = 0x33,UNW_MIPS_F20 = 0x34,UNW_MIPS_F21 = 0x35,UNW_MIPS_F22 = 0x36,UNW_MIPS_F23 = 0x37,UNW_MIPS_F24 = 0x38,UNW_MIPS_F25 = 0x39,UNW_MIPS_F26 = 0x3A,UNW_MIPS_F27 = 0x3B,UNW_MIPS_F28 = 0x3C,UNW_MIPS_F29 = 0x3D,UNW_MIPS_F30 = 0x3E,UNW_MIPS_F31 = 0x3F,UNW_MIPS_HI = 0x40,UNW_MIPS_LO = 0x41,};
enum _779A6285FFEB2190FEF06C931E261400 {kCFStreamEventNone = 0x0,kCFStreamEventOpenCompleted = 0x1,kCFStreamEventHasBytesAvailable = 0x2,kCFStreamEventCanAcceptBytes = 0x4,kCFStreamEventErrorOccurred = 0x8,kCFStreamEventEndEncountered = 0x10,};
enum _77A5A9FE1E071BBB7518A3494F525117 {NSPersonNameComponentsFormatterPhonetic = 0x2,};
enum _77AD8B9B4DC194C002B67DDCD6F85854 {kReverbParam_FilterFrequency = 0xE,kReverbParam_FilterBandwidth = 0xF,kReverbParam_FilterGain = 0x10,kReverbParam_FilterType = 0x11,kReverbParam_FilterEnable = 0x12,};
enum _77E548DD28C99F0151A8AC90179E64B5 {MPSNNComparisonTypeEqual = 0x0,MPSNNComparisonTypeNotEqual = 0x1,MPSNNComparisonTypeLess = 0x2,MPSNNComparisonTypeLessOrEqual = 0x3,MPSNNComparisonTypeGreater = 0x4,MPSNNComparisonTypeGreaterOrEqual = 0x5,};
enum _78BFF774565BE9A8E92F9EA49D9AC399 {kCFUserNotificationDefaultResponse = 0x0,kCFUserNotificationAlternateResponse = 0x1,kCFUserNotificationOtherResponse = 0x2,kCFUserNotificationCancelResponse = 0x3,};
enum _794D7C0AC61D374A82187EF0822C2044 {kDelayParam_WetDryMix = 0x0,kDelayParam_DelayTime = 0x1,kDelayParam_Feedback = 0x2,kDelayParam_LopassCutoff = 0x3,};
enum _796F436BD29DC58E6323FFD23CA04745 {kAudioCodecPropertyInputBufferSize = 0x74627566,kAudioCodecPropertyPacketFrameSize = 0x70616B66,kAudioCodecPropertyHasVariablePacketByteSizes = 0x76706B3F,kAudioCodecPropertyEmploysDependentPackets = 0x64706B3F,kAudioCodecPropertyMaximumPacketByteSize = 0x70616B62,kAudioCodecPropertyPacketSizeLimitForVBR = 0x70616B6C,kAudioCodecPropertyCurrentInputFormat = 0x69666D74,kAudioCodecPropertyCurrentOutputFormat = 0x6F666D74,kAudioCodecPropertyMagicCookie = 0x6B756B69,kAudioCodecPropertyUsedInputBufferSize = 0x75627566,kAudioCodecPropertyIsInitialized = 0x696E6974,kAudioCodecPropertyCurrentTargetBitRate = 0x62726174,kAudioCodecPropertyCurrentInputSampleRate = 0x63697372,kAudioCodecPropertyCurrentOutputSampleRate = 0x636F7372,kAudioCodecPropertyQualitySetting = 0x73726371,kAudioCodecPropertyApplicableBitRateRange = 0x62727461,kAudioCodecPropertyRecommendedBitRateRange = 0x62727472,kAudioCodecPropertyApplicableInputSampleRates = 0x69737261,kAudioCodecPropertyApplicableOutputSampleRates = 0x6F737261,kAudioCodecPropertyPaddedZeros = 0x70616430,kAudioCodecPropertyPrimeMethod = 0x70726D6D,kAudioCodecPropertyPrimeInfo = 0x7072696D,kAudioCodecPropertyCurrentInputChannelLayout = 0x69636C20,kAudioCodecPropertyCurrentOutputChannelLayout = 0x6F636C20,kAudioCodecPropertySettings = 0x61637320,kAudioCodecPropertyFormatList = 0x6163666C,kAudioCodecPropertyBitRateControlMode = 0x61636266,kAudioCodecPropertySoundQualityForVBR = 0x76627271,kAudioCodecPropertyBitRateForVBR = 0x76627262,kAudioCodecPropertyDelayMode = 0x646D6F64,kAudioCodecPropertyAdjustLocalQuality = 0x5E71616C,kAudioCodecPropertyProgramTargetLevel = 0x7070746C,kAudioCodecPropertyDynamicRangeControlMode = 0x6D647263,kAudioCodecPropertyProgramTargetLevelConstant = 0x70746C63,};
enum _797C0031656B603397FE79AEEAD5FFD3 {EAConnectionIDNone = 0x0,};
enum _7A9CB4A1109AE59FAA62374390204C39 {kABPersonType = 0x0,kABGroupType = 0x1,kABSourceType = 0x2,};
enum _7A9E6127E3133B9CB52D38BF80820F49 {UIViewAnimationOptionLayoutSubviews = 0x1,UIViewAnimationOptionAllowUserInteraction = 0x2,UIViewAnimationOptionBeginFromCurrentState = 0x4,UIViewAnimationOptionRepeat = 0x8,UIViewAnimationOptionAutoreverse = 0x10,UIViewAnimationOptionOverrideInheritedDuration = 0x20,UIViewAnimationOptionOverrideInheritedCurve = 0x40,UIViewAnimationOptionAllowAnimatedContent = 0x80,UIViewAnimationOptionShowHideTransitionViews = 0x100,UIViewAnimationOptionOverrideInheritedOptions = 0x200,UIViewAnimationOptionCurveEaseInOut = 0x0,UIViewAnimationOptionCurveEaseIn = 0x10000,UIViewAnimationOptionCurveEaseOut = 0x20000,UIViewAnimationOptionCurveLinear = 0x30000,UIViewAnimationOptionTransitionNone = 0x0,UIViewAnimationOptionTransitionFlipFromLeft = 0x100000,UIViewAnimationOptionTransitionFlipFromRight = 0x200000,UIViewAnimationOptionTransitionCurlUp = 0x300000,UIViewAnimationOptionTransitionCurlDown = 0x400000,UIViewAnimationOptionTransitionCrossDissolve = 0x500000,UIViewAnimationOptionTransitionFlipFromTop = 0x600000,UIViewAnimationOptionTransitionFlipFromBottom = 0x700000,UIViewAnimationOptionPreferredFramesPerSecondDefault = 0x0,UIViewAnimationOptionPreferredFramesPerSecond60 = 0x3000000,UIViewAnimationOptionPreferredFramesPerSecond30 = 0x7000000,};
enum _7B5C2B584506994B5241FA5069E143D5 {kAudioUnitSubType_AUiPodEQ = 0x69706571,};
enum _7BA3E8B33C5F8C5AC3B9C92E3F6C3CB5 {sizeof_sfntNameHeader = 0x6,};
enum _7BD320BC3F02901845EAA936F0E58D76 {MKDirectionsTransportTypeAutomobile = 0x1,MKDirectionsTransportTypeWalking = 0x2,MKDirectionsTransportTypeTransit = 0x4,MKDirectionsTransportTypeAny = 0xFFFFFFF,};
enum _7BE2B5E0A9B469E81BC662ED273B9606 {NSPointerFunctionsStrongMemory = 0x0,NSPointerFunctionsZeroingWeakMemory = 0x1,NSPointerFunctionsOpaqueMemory = 0x2,NSPointerFunctionsMallocMemory = 0x3,NSPointerFunctionsMachVirtualMemory = 0x4,NSPointerFunctionsWeakMemory = 0x5,NSPointerFunctionsObjectPersonality = 0x0,NSPointerFunctionsOpaquePersonality = 0x100,NSPointerFunctionsObjectPointerPersonality = 0x200,NSPointerFunctionsCStringPersonality = 0x300,NSPointerFunctionsStructPersonality = 0x400,NSPointerFunctionsIntegerPersonality = 0x500,NSPointerFunctionsCopyIn = 0x10000,};
enum _7C2D0002D6A9471AC1A4756358A4A3F8 {NSFileCoordinatorWritingForDeleting = 0x1,NSFileCoordinatorWritingForMoving = 0x2,NSFileCoordinatorWritingForMerging = 0x4,NSFileCoordinatorWritingForReplacing = 0x8,NSFileCoordinatorWritingContentIndependentMetadataOnly = 0x10,};
enum _7C67476E73700906608ECB0EE6B00F8F {INPhotoAttributeOptionPhoto = 0x1,INPhotoAttributeOptionVideo = 0x2,INPhotoAttributeOptionGIF = 0x4,INPhotoAttributeOptionFlash = 0x8,INPhotoAttributeOptionLandscapeOrientation = 0x10,INPhotoAttributeOptionPortraitOrientation = 0x20,INPhotoAttributeOptionFavorite = 0x40,INPhotoAttributeOptionSelfie = 0x80,INPhotoAttributeOptionFrontFacingCamera = 0x100,INPhotoAttributeOptionScreenshot = 0x200,INPhotoAttributeOptionBurstPhoto = 0x400,INPhotoAttributeOptionHDRPhoto = 0x800,INPhotoAttributeOptionSquarePhoto = 0x1000,INPhotoAttributeOptionPanoramaPhoto = 0x2000,INPhotoAttributeOptionTimeLapseVideo = 0x4000,INPhotoAttributeOptionSlowMotionVideo = 0x8000,INPhotoAttributeOptionNoirFilter = 0x10000,INPhotoAttributeOptionChromeFilter = 0x20000,INPhotoAttributeOptionInstantFilter = 0x40000,INPhotoAttributeOptionTonalFilter = 0x80000,INPhotoAttributeOptionTransferFilter = 0x100000,INPhotoAttributeOptionMonoFilter = 0x200000,INPhotoAttributeOptionFadeFilter = 0x400000,INPhotoAttributeOptionProcessFilter = 0x800000,INPhotoAttributeOptionPortraitPhoto = 0x1000000,INPhotoAttributeOptionLivePhoto = 0x2000000,INPhotoAttributeOptionLoopPhoto = 0x4000000,INPhotoAttributeOptionBouncePhoto = 0x8000000,INPhotoAttributeOptionLongExposurePhoto = 0x10000000,};
enum _7CB577097EBB21F1E28C12F25844EC7A {kAudioUnitSubType_PeakLimiter = 0x6C6D7472,kAudioUnitSubType_DynamicsProcessor = 0x64636D70,kAudioUnitSubType_LowPassFilter = 0x6C706173,kAudioUnitSubType_HighPassFilter = 0x68706173,kAudioUnitSubType_BandPassFilter = 0x62706173,kAudioUnitSubType_HighShelfFilter = 0x68736866,kAudioUnitSubType_LowShelfFilter = 0x6C736866,kAudioUnitSubType_ParametricEQ = 0x706D6571,kAudioUnitSubType_Distortion = 0x64697374,kAudioUnitSubType_Delay = 0x64656C79,kAudioUnitSubType_SampleDelay = 0x73646C79,kAudioUnitSubType_NBandEQ = 0x6E626571,kAudioUnitSubType_Reverb2 = 0x72766232,};
enum _7D3BBC9AD0B5958E6C45E49913A27E7C {kPROPTag = 0x70726F70,kPROPCurrentVersion = 0x30000,kPROPPairOffsetShift = 0x8,kPROPPairOffsetSign = 0x7,kPROPIsFloaterMask = 0x8000,kPROPCanHangLTMask = 0x4000,kPROPCanHangRBMask = 0x2000,kPROPUseRLPairMask = 0x1000,kPROPPairOffsetMask = 0xF00,kPROPRightConnectMask = 0x80,kPROPZeroReserved = 0x60,kPROPDirectionMask = 0x1F,};
enum _7D62C8F403659C865AE02C62462E6BE8 {NSISO8601DateFormatWithYear = 0x1,NSISO8601DateFormatWithMonth = 0x2,NSISO8601DateFormatWithWeekOfYear = 0x4,NSISO8601DateFormatWithDay = 0x10,NSISO8601DateFormatWithTime = 0x20,NSISO8601DateFormatWithTimeZone = 0x40,NSISO8601DateFormatWithSpaceBetweenDateAndTime = 0x80,NSISO8601DateFormatWithDashSeparatorInDate = 0x100,NSISO8601DateFormatWithColonSeparatorInTime = 0x200,NSISO8601DateFormatWithColonSeparatorInTimeZone = 0x400,NSISO8601DateFormatWithFractionalSeconds = 0x800,NSISO8601DateFormatWithFullDate = 0x113,NSISO8601DateFormatWithFullTime = 0x660,NSISO8601DateFormatWithInternetDateTime = 0x773,};
enum _7D8BF8F84B480E4D369231001A3A68A8 {ARSessionRunOptionResetTracking = 0x1,ARSessionRunOptionRemoveExistingAnchors = 0x2,ARSessionRunOptionStopTrackedRaycasts = 0x4,ARSessionRunOptionResetSceneReconstruction = 0x8,};
enum _7DBF6B2674B13DF339F96D6C793845C9 {kDNSServiceFlagsMoreComing = 0x1,kDNSServiceFlagsAutoTrigger = 0x1,kDNSServiceFlagsAdd = 0x2,kDNSServiceFlagsDefault = 0x4,kDNSServiceFlagsNoAutoRename = 0x8,kDNSServiceFlagsShared = 0x10,kDNSServiceFlagsUnique = 0x20,kDNSServiceFlagsBrowseDomains = 0x40,kDNSServiceFlagsRegistrationDomains = 0x80,kDNSServiceFlagsLongLivedQuery = 0x100,kDNSServiceFlagsAllowRemoteQuery = 0x200,kDNSServiceFlagsForceMulticast = 0x400,kDNSServiceFlagsForce = 0x800,kDNSServiceFlagsKnownUnique = 0x800,kDNSServiceFlagsReturnIntermediates = 0x1000,kDNSServiceFlagsShareConnection = 0x4000,kDNSServiceFlagsSuppressUnusable = 0x8000,kDNSServiceFlagsTimeout = 0x10000,kDNSServiceFlagsIncludeP2P = 0x20000,kDNSServiceFlagsWakeOnResolve = 0x40000,kDNSServiceFlagsBackgroundTrafficClass = 0x80000,kDNSServiceFlagsIncludeAWDL = 0x100000,kDNSServiceFlagsEnableDNSSEC = 0x200000,kDNSServiceFlagsValidate = 0x200000,kDNSServiceFlagsSecure = 0x200010,kDNSServiceFlagsInsecure = 0x200020,kDNSServiceFlagsBogus = 0x200040,kDNSServiceFlagsIndeterminate = 0x200080,kDNSServiceFlagsUnicastResponse = 0x400000,kDNSServiceFlagsValidateOptional = 0x800000,kDNSServiceFlagsWakeOnlyService = 0x1000000,kDNSServiceFlagsThresholdOne = 0x2000000,kDNSServiceFlagsThresholdFinder = 0x4000000,kDNSServiceFlagsThresholdReached = 0x2000000,kDNSServiceFlagsPrivateOne = 0x2000,kDNSServiceFlagsPrivateTwo = 0x8000000,kDNSServiceFlagsPrivateThree = 0x10000000,kDNSServiceFlagsPrivateFour = 0x20000000,kDNSServiceFlagsPrivateFive = 0x40000000,kDNSServiceFlagAnsweredFromCache = 0x40000000,kDNSServiceFlagsAllowExpiredAnswers = 0x80000000,kDNSServiceFlagsExpiredAnswer = 0x80000000,};
enum _7E5A78B1E5E359A0EC067E3B7CC0E82D {UICollisionBehaviorModeItems = 0x1,UICollisionBehaviorModeBoundaries = 0x2,UICollisionBehaviorModeEverything = 0xFFFFFFFFFFFFFFFF,};
enum _7E808DE168BDF3021BDC631EC93E6264 {kAudioUnitRenderAction_PreRender = 0x4,kAudioUnitRenderAction_PostRender = 0x8,kAudioUnitRenderAction_OutputIsSilence = 0x10,kAudioOfflineUnitRenderAction_Preflight = 0x20,kAudioOfflineUnitRenderAction_Render = 0x40,kAudioOfflineUnitRenderAction_Complete = 0x80,kAudioUnitRenderAction_PostRenderError = 0x100,kAudioUnitRenderAction_DoNotCheckRenderArgs = 0x200,};
enum _7E866D41C2F240C3CCDF02BCBC50BD45 {UIDocumentStateNormal = 0x0,UIDocumentStateClosed = 0x1,UIDocumentStateInConflict = 0x2,UIDocumentStateSavingError = 0x4,UIDocumentStateEditingDisabled = 0x8,UIDocumentStateProgressAvailable = 0x10,};
enum _7F2A43648062A15ECE3F38503A165261 {kCMTextDisplayFlag_scrollIn = 0x20,kCMTextDisplayFlag_scrollOut = 0x40,kCMTextDisplayFlag_scrollDirectionMask = 0x180,kCMTextDisplayFlag_scrollDirection_bottomToTop = 0x0,kCMTextDisplayFlag_scrollDirection_rightToLeft = 0x80,kCMTextDisplayFlag_scrollDirection_topToBottom = 0x100,kCMTextDisplayFlag_scrollDirection_leftToRight = 0x180,kCMTextDisplayFlag_continuousKaraoke = 0x800,kCMTextDisplayFlag_writeTextVertically = 0x20000,kCMTextDisplayFlag_fillTextRegion = 0x40000,kCMTextDisplayFlag_obeySubtitleFormatting = 0x20000000,kCMTextDisplayFlag_forcedSubtitlesPresent = 0x40000000,kCMTextDisplayFlag_allSubtitlesForced = 0x80000000,};
enum _7FD1BA51D3D9351447B52FBD57FC740F {kAudioQueueProcessingTap_PreEffects = 0x1,kAudioQueueProcessingTap_PostEffects = 0x2,kAudioQueueProcessingTap_Siphon = 0x4,kAudioQueueProcessingTap_StartOfStream = 0x100,kAudioQueueProcessingTap_EndOfStream = 0x200,};
enum _801D8658ADF12B8CD6B6261EF65FDA6E {CBCentralManagerFeatureExtendedScanAndConnect = 0x1,};
enum _807CAAA49CAC0EC8F0BC22D59A5E84A1 {kSubstituteVerticalFormsOnSelector = 0x0,kSubstituteVerticalFormsOffSelector = 0x1,};
enum _8101D17D593640AF2FA2669D6305C2B9 {CMAttitudeReferenceFrameXArbitraryZVertical = 0x1,CMAttitudeReferenceFrameXArbitraryCorrectedZVertical = 0x2,CMAttitudeReferenceFrameXMagneticNorthZVertical = 0x4,CMAttitudeReferenceFrameXTrueNorthZVertical = 0x8,};
enum _81708B888F8CAF7E7F7C9C07FE93831A {CPLimitableUserInterfaceKeyboard = 0x1,CPLimitableUserInterfaceLists = 0x2,};
enum _81C657814AE270FF9CEEF99D754E937D {kKERXActionTypeMask = 0xC0000000,kKERXActionTypeControlPoints = 0x0,kKERXActionTypeAnchorPoints = 0x40000000,kKERXActionTypeCoordinates = 0x80000000,kKERXUnusedFlags = 0x3F000000,kKERXActionOffsetMask = 0xFFFFFF,};
enum _83246569D3CDB561FE8E954AF51E4792 {kOPBDTag = 0x6F706264,kOPBDCurrentVersion = 0x10000,kOPBDDistanceFormat = 0x0,kOPBDControlPointFormat = 0x1,};
enum _8337B6BA29EE1EE07AAE40D711051835 {MPSRayMaskOptionNone = 0x0,MPSRayMaskOptionPrimitive = 0x1,MPSRayMaskOptionInstance = 0x2,};
enum _8398D612B56AC92EDE08C40757C5472D {NSAttachmentCharacter = 0xFFFC,};
enum _85081542CC6F3BF9CD9451E7F7EF1BEA {kAudioCodecPropertyNameCFString = 0x6C6E616D,kAudioCodecPropertyManufacturerCFString = 0x6C6D616B,kAudioCodecPropertyFormatCFString = 0x6C666F72,};
enum _85313870F36F1EB95BCD025640909770 {kDesignLevel1Selector = 0x0,kDesignLevel2Selector = 0x1,kDesignLevel3Selector = 0x2,kDesignLevel4Selector = 0x3,kDesignLevel5Selector = 0x4,};
enum _85361F255EA72BBF03AA1E6CF161243C {kDyldSharedCacheTypeDevelopment = 0x0,kDyldSharedCacheTypeProduction = 0x1,};
enum _85715E6A08EDDA5F3082E51C1C18BD3D {NSByteCountFormatterUseDefault = 0x0,NSByteCountFormatterUseBytes = 0x1,NSByteCountFormatterUseKB = 0x2,NSByteCountFormatterUseMB = 0x4,NSByteCountFormatterUseGB = 0x8,NSByteCountFormatterUseTB = 0x10,NSByteCountFormatterUsePB = 0x20,NSByteCountFormatterUseEB = 0x40,NSByteCountFormatterUseZB = 0x80,NSByteCountFormatterUseYBOrHigher = 0xFF00,NSByteCountFormatterUseAll = 0xFFFF,};
enum _861E932B103AEE60D161F56AD9F6859F {kCALayerLeftEdge = 0x1,kCALayerRightEdge = 0x2,kCALayerBottomEdge = 0x4,kCALayerTopEdge = 0x8,};
enum _865C16B4B2DCEC5510E6ABB5D67B6AB0 {kProgramTargetLevel_None = 0x0,kProgramTargetLevel_Minus31dB = 0x1,kProgramTargetLevel_Minus23dB = 0x2,kProgramTargetLevel_Minus20dB = 0x3,};
enum _86E9730C926A970DE0AFCF7AB0CCE01C {kSCNetworkFlagsTransientConnection = 0x1,kSCNetworkFlagsReachable = 0x2,kSCNetworkFlagsConnectionRequired = 0x4,kSCNetworkFlagsConnectionAutomatic = 0x8,kSCNetworkFlagsInterventionRequired = 0x10,kSCNetworkFlagsIsLocalAddress = 0x10000,kSCNetworkFlagsIsDirect = 0x20000,};
enum _879A7403409029CD00D135526D168B41 {kCCKeySizeAES128 = 0x10,kCCKeySizeAES192 = 0x18,kCCKeySizeAES256 = 0x20,kCCKeySizeDES = 0x8,kCCKeySize3DES = 0x18,kCCKeySizeMinCAST = 0x5,kCCKeySizeMaxCAST = 0x10,kCCKeySizeMinRC4 = 0x1,kCCKeySizeMaxRC4 = 0x200,kCCKeySizeMinRC2 = 0x1,kCCKeySizeMaxRC2 = 0x80,kCCKeySizeMinBlowfish = 0x8,kCCKeySizeMaxBlowfish = 0x38,};
enum _87B0AEB181A7A862F86A59519EA98C92 {kContextualAlternatesOnSelector = 0x0,kContextualAlternatesOffSelector = 0x1,kSwashAlternatesOnSelector = 0x2,kSwashAlternatesOffSelector = 0x3,kContextualSwashAlternatesOnSelector = 0x4,kContextualSwashAlternatesOffSelector = 0x5,};
enum _87CDC1B10A1FA0224B1EC356801B4ADE {kJSClassAttributeNone = 0x0,kJSClassAttributeNoAutomaticPrototype = 0x2,};
enum _8800E38BA1F9A23CBBDA899C8A82356F {UNWIND_X86_64_REG_NONE = 0x0,UNWIND_X86_64_REG_RBX = 0x1,UNWIND_X86_64_REG_R12 = 0x2,UNWIND_X86_64_REG_R13 = 0x3,UNWIND_X86_64_REG_R14 = 0x4,UNWIND_X86_64_REG_R15 = 0x5,UNWIND_X86_64_REG_RBP = 0x6,};
enum _88019893C7798107BAEEFA4B3F8C944B {UIDirectionalRectEdgeNone = 0x0,UIDirectionalRectEdgeTop = 0x1,UIDirectionalRectEdgeLeading = 0x2,UIDirectionalRectEdgeBottom = 0x4,UIDirectionalRectEdgeTrailing = 0x8,UIDirectionalRectEdgeAll = 0xF,};
enum _882284A03F1B44CEE79074A52075F740 {NSDirectoryEnumerationSkipsSubdirectoryDescendants = 0x1,NSDirectoryEnumerationSkipsPackageDescendants = 0x2,NSDirectoryEnumerationSkipsHiddenFiles = 0x4,NSDirectoryEnumerationIncludesDirectoriesPostOrder = 0x8,NSDirectoryEnumerationProducesRelativePathURLs = 0x10,};
struct _883DE74D7D01918C60D70A31734D633A {proc *__p_forw;proc *__p_back;};
enum _88668CC4DD981CBB8474A0A619B1D90D {UIFocusHeadingNone = 0x0,UIFocusHeadingUp = 0x1,UIFocusHeadingDown = 0x2,UIFocusHeadingLeft = 0x4,UIFocusHeadingRight = 0x8,UIFocusHeadingNext = 0x10,UIFocusHeadingPrevious = 0x20,};
enum _89533639E381EB849F61DC98F37A76FA {kCFCompareCaseInsensitive = 0x1,kCFCompareBackwards = 0x4,kCFCompareAnchored = 0x8,kCFCompareNonliteral = 0x10,kCFCompareLocalized = 0x20,kCFCompareNumerically = 0x40,kCFCompareDiacriticInsensitive = 0x80,kCFCompareWidthInsensitive = 0x100,kCFCompareForcedOrdering = 0x200,};
enum _89B1AB7D99C762AF67782F5E490F4353 {UNW_X86_EAX = 0x0,UNW_X86_ECX = 0x1,UNW_X86_EDX = 0x2,UNW_X86_EBX = 0x3,UNW_X86_EBP = 0x4,UNW_X86_ESP = 0x5,UNW_X86_ESI = 0x6,UNW_X86_EDI = 0x7,};
enum _89B1C9900FDCE7A1B4F54F308FD9CAB8 {kCMMPEG2VideoProfile_HDV_720p30 = 0x68647631,kCMMPEG2VideoProfile_HDV_1080i60 = 0x68647632,kCMMPEG2VideoProfile_HDV_1080i50 = 0x68647633,kCMMPEG2VideoProfile_HDV_720p24 = 0x68647634,kCMMPEG2VideoProfile_HDV_720p25 = 0x68647635,kCMMPEG2VideoProfile_HDV_1080p24 = 0x68647636,kCMMPEG2VideoProfile_HDV_1080p25 = 0x68647637,kCMMPEG2VideoProfile_HDV_1080p30 = 0x68647638,kCMMPEG2VideoProfile_HDV_720p60 = 0x68647639,kCMMPEG2VideoProfile_HDV_720p50 = 0x68647661,kCMMPEG2VideoProfile_XDCAM_HD_1080i60_VBR35 = 0x78647632,kCMMPEG2VideoProfile_XDCAM_HD_1080i50_VBR35 = 0x78647633,kCMMPEG2VideoProfile_XDCAM_HD_1080p24_VBR35 = 0x78647636,kCMMPEG2VideoProfile_XDCAM_HD_1080p25_VBR35 = 0x78647637,kCMMPEG2VideoProfile_XDCAM_HD_1080p30_VBR35 = 0x78647638,kCMMPEG2VideoProfile_XDCAM_EX_720p24_VBR35 = 0x78647634,kCMMPEG2VideoProfile_XDCAM_EX_720p25_VBR35 = 0x78647635,kCMMPEG2VideoProfile_XDCAM_EX_720p30_VBR35 = 0x78647631,kCMMPEG2VideoProfile_XDCAM_EX_720p50_VBR35 = 0x78647661,kCMMPEG2VideoProfile_XDCAM_EX_720p60_VBR35 = 0x78647639,kCMMPEG2VideoProfile_XDCAM_EX_1080i60_VBR35 = 0x78647662,kCMMPEG2VideoProfile_XDCAM_EX_1080i50_VBR35 = 0x78647663,kCMMPEG2VideoProfile_XDCAM_EX_1080p24_VBR35 = 0x78647664,kCMMPEG2VideoProfile_XDCAM_EX_1080p25_VBR35 = 0x78647665,kCMMPEG2VideoProfile_XDCAM_EX_1080p30_VBR35 = 0x78647666,kCMMPEG2VideoProfile_XDCAM_HD422_720p50_CBR50 = 0x78643561,kCMMPEG2VideoProfile_XDCAM_HD422_720p60_CBR50 = 0x78643539,kCMMPEG2VideoProfile_XDCAM_HD422_1080i60_CBR50 = 0x78643562,kCMMPEG2VideoProfile_XDCAM_HD422_1080i50_CBR50 = 0x78643563,kCMMPEG2VideoProfile_XDCAM_HD422_1080p24_CBR50 = 0x78643564,kCMMPEG2VideoProfile_XDCAM_HD422_1080p25_CBR50 = 0x78643565,kCMMPEG2VideoProfile_XDCAM_HD422_1080p30_CBR50 = 0x78643566,kCMMPEG2VideoProfile_XDCAM_HD_540p = 0x78646864,kCMMPEG2VideoProfile_XDCAM_HD422_540p = 0x78646832,kCMMPEG2VideoProfile_XDCAM_HD422_720p24_CBR50 = 0x78643534,kCMMPEG2VideoProfile_XDCAM_HD422_720p25_CBR50 = 0x78643535,kCMMPEG2VideoProfile_XDCAM_HD422_720p30_CBR50 = 0x78643531,kCMMPEG2VideoProfile_XF = 0x78667A31,};
enum _8A050CB3089113DBB11FC817710A5195 {dyld_error_kind_none = 0x0,dyld_error_kind_dylib_missing = 0x1,dyld_error_kind_dylib_wrong_arch = 0x2,dyld_error_kind_dylib_version = 0x3,dyld_error_kind_symbol_missing = 0x4,};
enum _8A27911458B0ACD32240E9A2ED96FFEB {kMonospacedNumbersSelector = 0x0,kProportionalNumbersSelector = 0x1,kThirdWidthNumbersSelector = 0x2,kQuarterWidthNumbersSelector = 0x3,};
enum _8A657F0598B4FF172AB6232E1D9E231F {NS_UnknownByteOrder = 0x0,NS_LittleEndian = 0x1,NS_BigEndian = 0x2,};
enum _8A71D0CB2D7F1507A48639A7619263C0 {kAudioUnitProperty_DeferredRendererPullSize = 0xCF8,kAudioUnitProperty_DeferredRendererExtraLatency = 0xCF9,kAudioUnitProperty_DeferredRendererWaitFrames = 0xCFA,};
enum _8B4537E92CBBD0C139C8D64DD57573E9 {kCanonicalCompositionOnSelector = 0x0,kCanonicalCompositionOffSelector = 0x1,kCompatibilityCompositionOnSelector = 0x2,kCompatibilityCompositionOffSelector = 0x3,kTranscodingCompositionOnSelector = 0x4,kTranscodingCompositionOffSelector = 0x5,};
enum _8BE8DC0647CE65F68CE1DEC09CE73CB5 {kCVReturnSuccess = 0x0,kCVReturnFirst = 0xFFFFE5FC,kCVReturnError = 0xFFFFE5FC,kCVReturnInvalidArgument = 0xFFFFE5FB,kCVReturnAllocationFailed = 0xFFFFE5FA,kCVReturnUnsupported = 0xFFFFE5F9,kCVReturnInvalidDisplay = 0xFFFFE5F2,kCVReturnDisplayLinkAlreadyRunning = 0xFFFFE5F1,kCVReturnDisplayLinkNotRunning = 0xFFFFE5F0,kCVReturnDisplayLinkCallbacksNotSet = 0xFFFFE5EF,kCVReturnInvalidPixelFormat = 0xFFFFE5E8,kCVReturnInvalidSize = 0xFFFFE5E7,kCVReturnInvalidPixelBufferAttributes = 0xFFFFE5E6,kCVReturnPixelBufferNotOpenGLCompatible = 0xFFFFE5E5,kCVReturnPixelBufferNotMetalCompatible = 0xFFFFE5E4,kCVReturnWouldExceedAllocationThreshold = 0xFFFFE5DF,kCVReturnPoolAllocationFailed = 0xFFFFE5DE,kCVReturnInvalidPoolAttributes = 0xFFFFE5DD,kCVReturnRetry = 0xFFFFE5DC,kCVReturnLast = 0xFFFFE5D5,};
enum _8C695817C5DCC709677D47BAD0BF741E {kCTFontOptionsDefault = 0x0,kCTFontOptionsPreventAutoActivation = 0x1,kCTFontOptionsPreferSystemFont = 0x4,};
enum _8CEADDCDCE42C585C8B3461F520C6783 {MPSAccelerationStructureUsageNone = 0x0,MPSAccelerationStructureUsageRefit = 0x1,MPSAccelerationStructureUsageFrequentRebuild = 0x2,MPSAccelerationStructureUsagePreferGPUBuild = 0x4,MPSAccelerationStructureUsagePreferCPUBuild = 0x8,};
enum _8D587DA809A011D3964986FFAB2B5DCE {kHintBasic = 0x0,kHintAdvanced = 0x1,kHintHidden = 0x2,};
enum _8DB1A93C6208574FDA77A46986D04AFA {kCMSimpleQueueError_AllocationFailed = 0xFFFFCE1E,kCMSimpleQueueError_RequiredParameterMissing = 0xFFFFCE1D,kCMSimpleQueueError_ParameterOutOfRange = 0xFFFFCE1C,kCMSimpleQueueError_QueueIsFull = 0xFFFFCE1B,};
enum _8DD3D0522307EFAF71924B4349224E63 {kCFNotificationDeliverImmediately = 0x1,kCFNotificationPostToAllSessions = 0x2,};
enum _8EB8814B6D4E875EBAA7B89BC726CD47 {kANKRCurrentVersion = 0x0,};
enum _8EDB518BFA2B6EC92BD543711271A84B {kAUVoiceIOProperty_BypassVoiceProcessing = 0x834,kAUVoiceIOProperty_VoiceProcessingEnableAGC = 0x835,kAUVoiceIOProperty_MuteOutput = 0x838,};
enum _8F54F1F38931C5A2E694D9755A55FB55 {NSSnapshotEventUndoInsertion = 0x2,NSSnapshotEventUndoDeletion = 0x4,NSSnapshotEventUndoUpdate = 0x8,NSSnapshotEventRollback = 0x10,NSSnapshotEventRefresh = 0x20,NSSnapshotEventMergePolicy = 0x40,};
enum _8F5DFF31F24F5860C21C95E95D462B97 {kABSourceTypeLocal = 0x0,kABSourceTypeExchange = 0x1,kABSourceTypeExchangeGAL = 0x1000001,kABSourceTypeMobileMe = 0x2,kABSourceTypeLDAP = 0x1000003,kABSourceTypeCardDAV = 0x4,kABSourceTypeCardDAVSearch = 0x1000004,};
enum _8F6B8A7F59EC71732493B97250A9F7A2 {normal = 0x0,bold = 0x1,italic = 0x2,underline = 0x4,outline = 0x8,shadow = 0x10,condense = 0x20,extend = 0x40,};
enum _8F7507AC992FC75B4CFAD64F85C3774A {kWordInitialSwashesOnSelector = 0x0,kWordInitialSwashesOffSelector = 0x1,kWordFinalSwashesOnSelector = 0x2,kWordFinalSwashesOffSelector = 0x3,kLineInitialSwashesOnSelector = 0x4,kLineInitialSwashesOffSelector = 0x5,kLineFinalSwashesOnSelector = 0x6,kLineFinalSwashesOffSelector = 0x7,kNonFinalSwashesOnSelector = 0x8,kNonFinalSwashesOffSelector = 0x9,};
enum _8FF1568188C2B22EFB1E5D26776C703A {UIDataDetectorTypePhoneNumber = 0x1,UIDataDetectorTypeLink = 0x2,UIDataDetectorTypeAddress = 0x4,UIDataDetectorTypeCalendarEvent = 0x8,UIDataDetectorTypeShipmentTrackingNumber = 0x10,UIDataDetectorTypeFlightNumber = 0x20,UIDataDetectorTypeLookupSuggestion = 0x40,UIDataDetectorTypeNone = 0x0,UIDataDetectorTypeAll = 0xFFFFFFFFFFFFFFFF,};
enum _90068B7806C6534A604C62FA2393DB80 {kAudioUnitSampleRateConverterComplexity_Linear = 0x6C696E65,kAudioUnitSampleRateConverterComplexity_Normal = 0x6E6F726D,kAudioUnitSampleRateConverterComplexity_Mastering = 0x62617473,};
enum _905414F7932D4A33E8CA11FF447A4793 {kAudioSessionInterruptionType_ShouldResume = 0x6972736D,kAudioSessionInterruptionType_ShouldNotResume = 0x2172736D,};
enum _906FE1E91012188BFFCB59B897B26614 {NSTextCheckingTypeOrthography = 0x1,NSTextCheckingTypeSpelling = 0x2,NSTextCheckingTypeGrammar = 0x4,NSTextCheckingTypeDate = 0x8,NSTextCheckingTypeAddress = 0x10,NSTextCheckingTypeLink = 0x20,NSTextCheckingTypeQuote = 0x40,NSTextCheckingTypeDash = 0x80,NSTextCheckingTypeReplacement = 0x100,NSTextCheckingTypeCorrection = 0x200,NSTextCheckingTypeRegularExpression = 0x400,NSTextCheckingTypePhoneNumber = 0x800,NSTextCheckingTypeTransitInformation = 0x1000,};
enum _91090B1AEA9710E8C9546753B2FA6210 {BLOCK_ALL_COPY_DISPOSE_FLAGS = 0x9F,};
enum _9132664FADABFD371A8E57EFF161960E {kCFStringTokenizerTokenNone = 0x0,kCFStringTokenizerTokenNormal = 0x1,kCFStringTokenizerTokenHasSubTokensMask = 0x2,kCFStringTokenizerTokenHasDerivedSubTokensMask = 0x4,kCFStringTokenizerTokenHasHasNumbersMask = 0x8,kCFStringTokenizerTokenHasNonLettersMask = 0x10,kCFStringTokenizerTokenIsCJWordMask = 0x20,};
enum _91591284A48048777564ADBA7CBBF7C3 {kNormalPositionSelector = 0x0,kSuperiorsSelector = 0x1,kInferiorsSelector = 0x2,kOrdinalsSelector = 0x3,kScientificInferiorsSelector = 0x4,};
enum _9164271D69705A33DFBFF5C7F75B7EE0 {kCGPDFAllowsLowQualityPrinting = 0x1,kCGPDFAllowsHighQualityPrinting = 0x2,kCGPDFAllowsDocumentChanges = 0x4,kCGPDFAllowsDocumentAssembly = 0x8,kCGPDFAllowsContentCopying = 0x10,kCGPDFAllowsContentAccessibility = 0x20,kCGPDFAllowsCommenting = 0x40,kCGPDFAllowsFormFieldEntry = 0x80,};
enum _916EF963C0EB737FCFD2BEBFE4B31482 {kCoreEndianResourceManagerDomain = 0x72737263,kCoreEndianAppleEventManagerDomain = 0x61657674,};
enum _91B254BBB9F987FEB7C7E7F857597819 {UNW_SPARC_G0 = 0x0,UNW_SPARC_G1 = 0x1,UNW_SPARC_G2 = 0x2,UNW_SPARC_G3 = 0x3,UNW_SPARC_G4 = 0x4,UNW_SPARC_G5 = 0x5,UNW_SPARC_G6 = 0x6,UNW_SPARC_G7 = 0x7,UNW_SPARC_O0 = 0x8,UNW_SPARC_O1 = 0x9,UNW_SPARC_O2 = 0xA,UNW_SPARC_O3 = 0xB,UNW_SPARC_O4 = 0xC,UNW_SPARC_O5 = 0xD,UNW_SPARC_O6 = 0xE,UNW_SPARC_O7 = 0xF,UNW_SPARC_L0 = 0x10,UNW_SPARC_L1 = 0x11,UNW_SPARC_L2 = 0x12,UNW_SPARC_L3 = 0x13,UNW_SPARC_L4 = 0x14,UNW_SPARC_L5 = 0x15,UNW_SPARC_L6 = 0x16,UNW_SPARC_L7 = 0x17,UNW_SPARC_I0 = 0x18,UNW_SPARC_I1 = 0x19,UNW_SPARC_I2 = 0x1A,UNW_SPARC_I3 = 0x1B,UNW_SPARC_I4 = 0x1C,UNW_SPARC_I5 = 0x1D,UNW_SPARC_I6 = 0x1E,UNW_SPARC_I7 = 0x1F,};
enum _927914C140B2A6430969859CC9725529 {ENRiskLevelMin = 0x0,ENRiskLevelMax = 0x7,};
enum _9296971547056466BA5CFC5A4C40AB40 {kAudioQueueErr_InvalidBuffer = 0xFFFEFB81,kAudioQueueErr_BufferEmpty = 0xFFFEFB82,kAudioQueueErr_DisposalPending = 0xFFFEFB83,kAudioQueueErr_InvalidProperty = 0xFFFEFB84,kAudioQueueErr_InvalidPropertySize = 0xFFFEFB85,kAudioQueueErr_InvalidParameter = 0xFFFEFB86,kAudioQueueErr_CannotStart = 0xFFFEFB87,kAudioQueueErr_InvalidDevice = 0xFFFEFB88,kAudioQueueErr_BufferInQueue = 0xFFFEFB89,kAudioQueueErr_InvalidRunState = 0xFFFEFB8A,kAudioQueueErr_InvalidQueueType = 0xFFFEFB8B,kAudioQueueErr_Permissions = 0xFFFEFB8C,kAudioQueueErr_InvalidPropertyValue = 0xFFFEFB8D,kAudioQueueErr_PrimeTimedOut = 0xFFFEFB8E,kAudioQueueErr_CodecNotFound = 0xFFFEFB8F,kAudioQueueErr_InvalidCodecAccess = 0xFFFEFB90,kAudioQueueErr_QueueInvalidated = 0xFFFEFB91,kAudioQueueErr_TooManyTaps = 0xFFFEFB92,kAudioQueueErr_InvalidTapContext = 0xFFFEFB93,kAudioQueueErr_RecordUnderrun = 0xFFFEFB94,kAudioQueueErr_InvalidTapType = 0xFFFEFB95,kAudioQueueErr_BufferEnqueuedTwice = 0xFFFEFB96,kAudioQueueErr_CannotStartYet = 0xFFFEFB97,kAudioQueueErr_EnqueueDuringReset = 0xFFFEFBB8,kAudioQueueErr_InvalidOfflineMode = 0xFFFEFBBE,};
enum _931727AEE1E868915021BEE85EBA1B64 {kAudioUnitParameterName_Full = 0xFFFFFFFF,};
enum _937447F02BFC35C025874FE47EDF8DBF {UIMenuElementAttributesDisabled = 0x1,UIMenuElementAttributesDestructive = 0x2,UIMenuElementAttributesHidden = 0x4,};
enum _9394276A309271F2890DB668A1F31A15 {NSCaseInsensitivePredicateOption = 0x1,NSDiacriticInsensitivePredicateOption = 0x2,NSNormalizedPredicateOption = 0x4,};
enum _93F13E849B67AA48A40670034A9D47E8 {NSEnumerationConcurrent = 0x1,NSEnumerationReverse = 0x2,};
enum _940B80853D6D743B89F3873075784366 {kAudioUnitProperty_ScheduleAudioSlice = 0xCE4,kAudioUnitProperty_ScheduleStartTimeStamp = 0xCE5,kAudioUnitProperty_CurrentPlayTime = 0xCE6,};
enum _9441C47FA175405C9290E6EF2DBB9A52 {kKERXValuesAreLong = 0x1,};
enum _9466127B9946C736DE1CFC2BBD0590BC {kAudioUnitSubType_RemoteIO = 0x72696F63,};
enum _956DCC16AD47798EA361B436CC01EFB3 {kMatrixMixerParam_Volume = 0x0,kMatrixMixerParam_Enable = 0x1,kMatrixMixerParam_PreAveragePower = 0x3E8,kMatrixMixerParam_PrePeakHoldLevel = 0x7D0,kMatrixMixerParam_PostAveragePower = 0xBB8,kMatrixMixerParam_PostPeakHoldLevel = 0xFA0,kMatrixMixerParam_PreAveragePowerLinear = 0x1388,kMatrixMixerParam_PrePeakHoldLevelLinear = 0x1770,kMatrixMixerParam_PostAveragePowerLinear = 0x1B58,kMatrixMixerParam_PostPeakHoldLevelLinear = 0x1F40,};
enum _9677B778CDD174014902C06EC8159194 {kSecRevocationOCSPMethod = 0x1,kSecRevocationCRLMethod = 0x2,kSecRevocationPreferCRL = 0x4,kSecRevocationRequirePositiveResponse = 0x8,kSecRevocationNetworkAccessDisabled = 0x10,kSecRevocationUseAnyAvailableMethod = 0x3,};
enum _96D406D63090602341CC80FD31A03C6C {kDistortionParam_Delay = 0x0,kDistortionParam_Decay = 0x1,kDistortionParam_DelayMix = 0x2,kDistortionParam_Decimation = 0x3,kDistortionParam_Rounding = 0x4,kDistortionParam_DecimationMix = 0x5,kDistortionParam_LinearTerm = 0x6,kDistortionParam_SquaredTerm = 0x7,kDistortionParam_CubicTerm = 0x8,kDistortionParam_PolynomialMix = 0x9,kDistortionParam_RingModFreq1 = 0xA,kDistortionParam_RingModFreq2 = 0xB,kDistortionParam_RingModBalance = 0xC,kDistortionParam_RingModMix = 0xD,kDistortionParam_SoftClipGain = 0xE,kDistortionParam_FinalMix = 0xF,};
enum _9766CD39F164F96498E9E12094778488 {kSFNTLookupSimpleArray = 0x0,kSFNTLookupSegmentSingle = 0x2,kSFNTLookupSegmentArray = 0x4,kSFNTLookupSingleTable = 0x6,kSFNTLookupTrimmedArray = 0x8,kSFNTLookupVector = 0xA,};
enum _977394EF89F00B10CE72AC4AB31D4261 {NSFileWrapperWritingAtomic = 0x1,NSFileWrapperWritingWithNameUpdating = 0x2,};
enum _97745659FAE4FB87DD776D6501477E97 {NSDataBase64Encoding64CharacterLineLength = 0x1,NSDataBase64Encoding76CharacterLineLength = 0x2,NSDataBase64EncodingEndLineWithCarriageReturn = 0x10,NSDataBase64EncodingEndLineWithLineFeed = 0x20,};
enum _978FFDF96423ACBD8259DC2F36BC265F {kVTPropertyNotSupportedErr = 0xFFFFCD9C,kVTPropertyReadOnlyErr = 0xFFFFCD9B,kVTParameterErr = 0xFFFFCD9A,kVTInvalidSessionErr = 0xFFFFCD99,kVTAllocationFailedErr = 0xFFFFCD98,kVTPixelTransferNotSupportedErr = 0xFFFFCD97,kVTCouldNotFindVideoDecoderErr = 0xFFFFCD96,kVTCouldNotCreateInstanceErr = 0xFFFFCD95,kVTCouldNotFindVideoEncoderErr = 0xFFFFCD94,kVTVideoDecoderBadDataErr = 0xFFFFCD93,kVTVideoDecoderUnsupportedDataFormatErr = 0xFFFFCD92,kVTVideoDecoderMalfunctionErr = 0xFFFFCD91,kVTVideoEncoderMalfunctionErr = 0xFFFFCD90,kVTVideoDecoderNotAvailableNowErr = 0xFFFFCD8F,kVTImageRotationNotSupportedErr = 0xFFFFCD8E,kVTVideoEncoderNotAvailableNowErr = 0xFFFFCD8D,kVTFormatDescriptionChangeNotSupportedErr = 0xFFFFCD8C,kVTInsufficientSourceColorDataErr = 0xFFFFCD8B,kVTCouldNotCreateColorCorrectionDataErr = 0xFFFFCD8A,kVTColorSyncTransformConvertFailedErr = 0xFFFFCD89,kVTVideoDecoderAuthorizationErr = 0xFFFFD04E,kVTVideoEncoderAuthorizationErr = 0xFFFFD04D,kVTColorCorrectionPixelTransferFailedErr = 0xFFFFD04C,kVTMultiPassStorageIdentifierMismatchErr = 0xFFFFD04B,kVTMultiPassStorageInvalidErr = 0xFFFFD04A,kVTFrameSiloInvalidTimeStampErr = 0xFFFFD049,kVTFrameSiloInvalidTimeRangeErr = 0xFFFFD048,kVTCouldNotFindTemporalFilterErr = 0xFFFFD047,kVTPixelTransferNotPermittedErr = 0xFFFFD046,kVTColorCorrectionImageRotationFailedErr = 0xFFFFD045,kVTVideoDecoderRemovedErr = 0xFFFFBAE6,kVTSessionMalfunctionErr = 0xFFFFBAE5,};
enum _98AA9A7E303F70300B262BCCB6E15761 {kCAFMarkerType_Generic = 0x0,kCAFMarkerType_ProgramStart = 0x70626567,kCAFMarkerType_ProgramEnd = 0x70656E64,kCAFMarkerType_TrackStart = 0x74626567,kCAFMarkerType_TrackEnd = 0x74656E64,kCAFMarkerType_Index = 0x696E6478,kCAFMarkerType_RegionStart = 0x72626567,kCAFMarkerType_RegionEnd = 0x72656E64,kCAFMarkerType_RegionSyncPoint = 0x72737963,kCAFMarkerType_SelectionStart = 0x73626567,kCAFMarkerType_SelectionEnd = 0x73656E64,kCAFMarkerType_EditSourceBegin = 0x63626567,kCAFMarkerType_EditSourceEnd = 0x63656E64,kCAFMarkerType_EditDestinationBegin = 0x64626567,kCAFMarkerType_EditDestinationEnd = 0x64656E64,kCAFMarkerType_SustainLoopStart = 0x736C6267,kCAFMarkerType_SustainLoopEnd = 0x736C656E,kCAFMarkerType_ReleaseLoopStart = 0x726C6267,kCAFMarkerType_ReleaseLoopEnd = 0x726C656E,kCAFMarkerType_SavedPlayPosition = 0x73706C79,kCAFMarkerType_Tempo = 0x746D706F,kCAFMarkerType_TimeSignature = 0x74736967,kCAFMarkerType_KeySignature = 0x6B736967,};
enum _995BD25366111D627EB2C5699EA447D8 {UIFontDescriptorTraitItalic = 0x1,UIFontDescriptorTraitBold = 0x2,UIFontDescriptorTraitExpanded = 0x20,UIFontDescriptorTraitCondensed = 0x40,UIFontDescriptorTraitMonoSpace = 0x400,UIFontDescriptorTraitVertical = 0x800,UIFontDescriptorTraitUIOptimized = 0x1000,UIFontDescriptorTraitTightLeading = 0x8000,UIFontDescriptorTraitLooseLeading = 0x10000,UIFontDescriptorClassMask = 0xF0000000,UIFontDescriptorClassUnknown = 0x0,UIFontDescriptorClassOldStyleSerifs = 0x10000000,UIFontDescriptorClassTransitionalSerifs = 0x20000000,UIFontDescriptorClassModernSerifs = 0x30000000,UIFontDescriptorClassClarendonSerifs = 0x40000000,UIFontDescriptorClassSlabSerifs = 0x50000000,UIFontDescriptorClassFreeformSerifs = 0x70000000,UIFontDescriptorClassSansSerif = 0x80000000,UIFontDescriptorClassOrnamentals = 0x90000000,UIFontDescriptorClassScripts = 0xA0000000,UIFontDescriptorClassSymbolic = 0xC0000000,};
enum _9ACD78BA7F53C20FDF71EA3A73EE8DF3 {UNWIND_ARM_MODE_MASK = 0xF000000,UNWIND_ARM_MODE_FRAME = 0x1000000,UNWIND_ARM_MODE_FRAME_D = 0x2000000,UNWIND_ARM_MODE_DWARF = 0x4000000,UNWIND_ARM_FRAME_STACK_ADJUST_MASK = 0xC00000,UNWIND_ARM_FRAME_FIRST_PUSH_R4 = 0x1,UNWIND_ARM_FRAME_FIRST_PUSH_R5 = 0x2,UNWIND_ARM_FRAME_FIRST_PUSH_R6 = 0x4,UNWIND_ARM_FRAME_SECOND_PUSH_R8 = 0x8,UNWIND_ARM_FRAME_SECOND_PUSH_R9 = 0x10,UNWIND_ARM_FRAME_SECOND_PUSH_R10 = 0x20,UNWIND_ARM_FRAME_SECOND_PUSH_R11 = 0x40,UNWIND_ARM_FRAME_SECOND_PUSH_R12 = 0x80,UNWIND_ARM_FRAME_D_REG_COUNT_MASK = 0x700,UNWIND_ARM_DWARF_SECTION_OFFSET = 0xFFFFFF,};
enum _9AD76CED300D32D827430FE69E96240F {kCMSampleBufferFlag_AudioBufferList_Assure16ByteAlignment = 0x1,};
enum _9B061A6887195967B61B8F4893E15E74 {kvImageMatrixType_None = 0x0,kvImageMatrixType_ARGBToYpCbCrMatrix = 0x1,};
enum _9B6E7447B5122AF9786E963AC11551A1 {kvImage_PNG_FILTER_VALUE_NONE = 0x0,kvImage_PNG_FILTER_VALUE_SUB = 0x1,kvImage_PNG_FILTER_VALUE_UP = 0x2,kvImage_PNG_FILTER_VALUE_AVG = 0x3,kvImage_PNG_FILTER_VALUE_PAETH = 0x4,};
enum _9BEFDD878B9E6085E1EF4384E0FFE933 {kSTClassEndOfText = 0x0,kSTClassOutOfBounds = 0x1,kSTClassDeletedGlyph = 0x2,kSTClassEndOfLine = 0x3,kSTSetMark = 0x8000,kSTNoAdvance = 0x4000,kSTMarkEnd = 0x2000,kSTLigActionMask = 0x3FFF,kSTRearrVerbMask = 0xF,};
enum _9C0094C98DE0E57CCB569C818A9077A6 {OBJC_SYNC_SUCCESS = 0x0,OBJC_SYNC_NOT_OWNING_THREAD_ERROR = 0xFFFFFFFF,};
enum _9C12581EA2687972639E8139DE587976 {kCMClosedCaptionFormatType_CEA608 = 0x63363038,kCMClosedCaptionFormatType_CEA708 = 0x63373038,kCMClosedCaptionFormatType_ATSC = 0x61746363,};
enum _9C490D052FF3EBAA056591469BD1EDD0 {kAUVoiceIOProperty_VoiceProcessingQuality = 0x837,};
enum _9D165F746D3895E841A125886DD4A5CD {AEAutocorrectModeNone = 0x0,AEAutocorrectModeSpelling = 0x1,AEAutocorrectModePunctuation = 0x2,};
enum _9D42C6BB9F00F2E86626E69C9AD0D1D1 {kCTFontPrioritySystem = 0x2710,kCTFontPriorityNetwork = 0x4E20,kCTFontPriorityComputer = 0x7530,kCTFontPriorityUser = 0x9C40,kCTFontPriorityDynamic = 0xC350,kCTFontPriorityProcess = 0xEA60,};
enum _9D6B731FFA3BB9DD6449A5302224A2AF {errSecSuccess = 0x0,errSecUnimplemented = 0xFFFFFFFC,errSecDiskFull = 0xFFFFFFDE,errSecDskFull = 0xFFFFFFDE,errSecIO = 0xFFFFFFDC,errSecOpWr = 0xFFFFFFCF,errSecParam = 0xFFFFFFCE,errSecWrPerm = 0xFFFFFFC3,errSecAllocate = 0xFFFFFF94,errSecUserCanceled = 0xFFFFFF80,errSecBadReq = 0xFFFFFC73,errSecInternalComponent = 0xFFFFF7EA,errSecCoreFoundationUnknown = 0xFFFFECA0,errSecMissingEntitlement = 0xFFFF7B1E,errSecRestrictedAPI = 0xFFFF7B1C,errSecNotAvailable = 0xFFFF9D35,errSecReadOnly = 0xFFFF9D34,errSecAuthFailed = 0xFFFF9D33,errSecNoSuchKeychain = 0xFFFF9D32,errSecInvalidKeychain = 0xFFFF9D31,errSecDuplicateKeychain = 0xFFFF9D30,errSecDuplicateCallback = 0xFFFF9D2F,errSecInvalidCallback = 0xFFFF9D2E,errSecDuplicateItem = 0xFFFF9D2D,errSecItemNotFound = 0xFFFF9D2C,errSecBufferTooSmall = 0xFFFF9D2B,errSecDataTooLarge = 0xFFFF9D2A,errSecNoSuchAttr = 0xFFFF9D29,errSecInvalidItemRef = 0xFFFF9D28,errSecInvalidSearchRef = 0xFFFF9D27,errSecNoSuchClass = 0xFFFF9D26,errSecNoDefaultKeychain = 0xFFFF9D25,errSecInteractionNotAllowed = 0xFFFF9D24,errSecReadOnlyAttr = 0xFFFF9D23,errSecWrongSecVersion = 0xFFFF9D22,errSecKeySizeNotAllowed = 0xFFFF9D21,errSecNoStorageModule = 0xFFFF9D20,errSecNoCertificateModule = 0xFFFF9D1F,errSecNoPolicyModule = 0xFFFF9D1E,errSecInteractionRequired = 0xFFFF9D1D,errSecDataNotAvailable = 0xFFFF9D1C,errSecDataNotModifiable = 0xFFFF9D1B,errSecCreateChainFailed = 0xFFFF9D1A,errSecInvalidPrefsDomain = 0xFFFF9D19,errSecInDarkWake = 0xFFFF9D18,errSecACLNotSimple = 0xFFFF9D68,errSecPolicyNotFound = 0xFFFF9D67,errSecInvalidTrustSetting = 0xFFFF9D66,errSecNoAccessForItem = 0xFFFF9D65,errSecInvalidOwnerEdit = 0xFFFF9D64,errSecTrustNotAvailable = 0xFFFF9D63,errSecUnsupportedFormat = 0xFFFF9D58,errSecUnknownFormat = 0xFFFF9D57,errSecKeyIsSensitive = 0xFFFF9D56,errSecMultiplePrivKeys = 0xFFFF9D55,errSecPassphraseRequired = 0xFFFF9D54,errSecInvalidPasswordRef = 0xFFFF9D53,errSecInvalidTrustSettings = 0xFFFF9D52,errSecNoTrustSettings = 0xFFFF9D51,errSecPkcs12VerifyFailure = 0xFFFF9D50,errSecNotSigner = 0xFFFF9965,errSecDecode = 0xFFFF995D,errSecServiceNotAvailable = 0xFFFEF7FF,errSecInsufficientClientID = 0xFFFEF7FE,errSecDeviceReset = 0xFFFEF7FD,errSecDeviceFailed = 0xFFFEF7FC,errSecAppleAddAppACLSubject = 0xFFFEF7FB,errSecApplePublicKeyIncomplete = 0xFFFEF7FA,errSecAppleSignatureMismatch = 0xFFFEF7F9,errSecAppleInvalidKeyStartDate = 0xFFFEF7F8,errSecAppleInvalidKeyEndDate = 0xFFFEF7F7,errSecConversionError = 0xFFFEF7F6,errSecAppleSSLv2Rollback = 0xFFFEF7F5,errSecQuotaExceeded = 0xFFFEF7F4,errSecFileTooBig = 0xFFFEF7F3,errSecInvalidDatabaseBlob = 0xFFFEF7F2,errSecInvalidKeyBlob = 0xFFFEF7F1,errSecIncompatibleDatabaseBlob = 0xFFFEF7F0,errSecIncompatibleKeyBlob = 0xFFFEF7EF,errSecHostNameMismatch = 0xFFFEF7EE,errSecUnknownCriticalExtensionFlag = 0xFFFEF7ED,errSecNoBasicConstraints = 0xFFFEF7EC,errSecNoBasicConstraintsCA = 0xFFFEF7EB,errSecInvalidAuthorityKeyID = 0xFFFEF7EA,errSecInvalidSubjectKeyID = 0xFFFEF7E9,errSecInvalidKeyUsageForPolicy = 0xFFFEF7E8,errSecInvalidExtendedKeyUsage = 0xFFFEF7E7,errSecInvalidIDLinkage = 0xFFFEF7E6,errSecPathLengthConstraintExceeded = 0xFFFEF7E5,errSecInvalidRoot = 0xFFFEF7E4,errSecCRLExpired = 0xFFFEF7E3,errSecCRLNotValidYet = 0xFFFEF7E2,errSecCRLNotFound = 0xFFFEF7E1,errSecCRLServerDown = 0xFFFEF7E0,errSecCRLBadURI = 0xFFFEF7DF,errSecUnknownCertExtension = 0xFFFEF7DE,errSecUnknownCRLExtension = 0xFFFEF7DD,errSecCRLNotTrusted = 0xFFFEF7DC,errSecCRLPolicyFailed = 0xFFFEF7DB,errSecIDPFailure = 0xFFFEF7DA,errSecSMIMEEmailAddressesNotFound = 0xFFFEF7D9,errSecSMIMEBadExtendedKeyUsage = 0xFFFEF7D8,errSecSMIMEBadKeyUsage = 0xFFFEF7D7,errSecSMIMEKeyUsageNotCritical = 0xFFFEF7D6,errSecSMIMENoEmailAddress = 0xFFFEF7D5,errSecSMIMESubjAltNameNotCritical = 0xFFFEF7D4,errSecSSLBadExtendedKeyUsage = 0xFFFEF7D3,errSecOCSPBadResponse = 0xFFFEF7D2,errSecOCSPBadRequest = 0xFFFEF7D1,errSecOCSPUnavailable = 0xFFFEF7D0,errSecOCSPStatusUnrecognized = 0xFFFEF7CF,errSecEndOfData = 0xFFFEF7CE,errSecIncompleteCertRevocationCheck = 0xFFFEF7CD,errSecNetworkFailure = 0xFFFEF7CC,errSecOCSPNotTrustedToAnchor = 0xFFFEF7CB,errSecRecordModified = 0xFFFEF7CA,errSecOCSPSignatureError = 0xFFFEF7C9,errSecOCSPNoSigner = 0xFFFEF7C8,errSecOCSPResponderMalformedReq = 0xFFFEF7C7,errSecOCSPResponderInternalError = 0xFFFEF7C6,errSecOCSPResponderTryLater = 0xFFFEF7C5,errSecOCSPResponderSignatureRequired = 0xFFFEF7C4,errSecOCSPResponderUnauthorized = 0xFFFEF7C3,errSecOCSPResponseNonceMismatch = 0xFFFEF7C2,errSecCodeSigningBadCertChainLength = 0xFFFEF7C1,errSecCodeSigningNoBasicConstraints = 0xFFFEF7C0,errSecCodeSigningBadPathLengthConstraint = 0xFFFEF7BF,errSecCodeSigningNoExtendedKeyUsage = 0xFFFEF7BE,errSecCodeSigningDevelopment = 0xFFFEF7BD,errSecResourceSignBadCertChainLength = 0xFFFEF7BC,errSecResourceSignBadExtKeyUsage = 0xFFFEF7BB,errSecTrustSettingDeny = 0xFFFEF7BA,errSecInvalidSubjectName = 0xFFFEF7B9,errSecUnknownQualifiedCertStatement = 0xFFFEF7B8,errSecMobileMeRequestQueued = 0xFFFEF7B7,errSecMobileMeRequestRedirected = 0xFFFEF7B6,errSecMobileMeServerError = 0xFFFEF7B5,errSecMobileMeServerNotAvailable = 0xFFFEF7B4,errSecMobileMeServerAlreadyExists = 0xFFFEF7B3,errSecMobileMeServerServiceErr = 0xFFFEF7B2,errSecMobileMeRequestAlreadyPending = 0xFFFEF7B1,errSecMobileMeNoRequestPending = 0xFFFEF7B0,errSecMobileMeCSRVerifyFailure = 0xFFFEF7AF,errSecMobileMeFailedConsistencyCheck = 0xFFFEF7AE,errSecNotInitialized = 0xFFFEF7AD,errSecInvalidHandleUsage = 0xFFFEF7AC,errSecPVCReferentNotFound = 0xFFFEF7AB,errSecFunctionIntegrityFail = 0xFFFEF7AA,errSecInternalError = 0xFFFEF7A9,errSecMemoryError = 0xFFFEF7A8,errSecInvalidData = 0xFFFEF7A7,errSecMDSError = 0xFFFEF7A6,errSecInvalidPointer = 0xFFFEF7A5,errSecSelfCheckFailed = 0xFFFEF7A4,errSecFunctionFailed = 0xFFFEF7A3,errSecModuleManifestVerifyFailed = 0xFFFEF7A2,errSecInvalidGUID = 0xFFFEF7A1,errSecInvalidHandle = 0xFFFEF7A0,errSecInvalidDBList = 0xFFFEF79F,errSecInvalidPassthroughID = 0xFFFEF79E,errSecInvalidNetworkAddress = 0xFFFEF79D,errSecCRLAlreadySigned = 0xFFFEF79C,errSecInvalidNumberOfFields = 0xFFFEF79B,errSecVerificationFailure = 0xFFFEF79A,errSecUnknownTag = 0xFFFEF799,errSecInvalidSignature = 0xFFFEF798,errSecInvalidName = 0xFFFEF797,errSecInvalidCertificateRef = 0xFFFEF796,errSecInvalidCertificateGroup = 0xFFFEF795,errSecTagNotFound = 0xFFFEF794,errSecInvalidQuery = 0xFFFEF793,errSecInvalidValue = 0xFFFEF792,errSecCallbackFailed = 0xFFFEF791,errSecACLDeleteFailed = 0xFFFEF790,errSecACLReplaceFailed = 0xFFFEF78F,errSecACLAddFailed = 0xFFFEF78E,errSecACLChangeFailed = 0xFFFEF78D,errSecInvalidAccessCredentials = 0xFFFEF78C,errSecInvalidRecord = 0xFFFEF78B,errSecInvalidACL = 0xFFFEF78A,errSecInvalidSampleValue = 0xFFFEF789,errSecIncompatibleVersion = 0xFFFEF788,errSecPrivilegeNotGranted = 0xFFFEF787,errSecInvalidScope = 0xFFFEF786,errSecPVCAlreadyConfigured = 0xFFFEF785,errSecInvalidPVC = 0xFFFEF784,errSecEMMLoadFailed = 0xFFFEF783,errSecEMMUnloadFailed = 0xFFFEF782,errSecAddinLoadFailed = 0xFFFEF781,errSecInvalidKeyRef = 0xFFFEF780,errSecInvalidKeyHierarchy = 0xFFFEF77F,errSecAddinUnloadFailed = 0xFFFEF77E,errSecLibraryReferenceNotFound = 0xFFFEF77D,errSecInvalidAddinFunctionTable = 0xFFFEF77C,errSecInvalidServiceMask = 0xFFFEF77B,errSecModuleNotLoaded = 0xFFFEF77A,errSecInvalidSubServiceID = 0xFFFEF779,errSecAttributeNotInContext = 0xFFFEF778,errSecModuleManagerInitializeFailed = 0xFFFEF777,errSecModuleManagerNotFound = 0xFFFEF776,errSecEventNotificationCallbackNotFound = 0xFFFEF775,errSecInputLengthError = 0xFFFEF774,errSecOutputLengthError = 0xFFFEF773,errSecPrivilegeNotSupported = 0xFFFEF772,errSecDeviceError = 0xFFFEF771,errSecAttachHandleBusy = 0xFFFEF770,errSecNotLoggedIn = 0xFFFEF76F,errSecAlgorithmMismatch = 0xFFFEF76E,errSecKeyUsageIncorrect = 0xFFFEF76D,errSecKeyBlobTypeIncorrect = 0xFFFEF76C,errSecKeyHeaderInconsistent = 0xFFFEF76B,errSecUnsupportedKeyFormat = 0xFFFEF76A,errSecUnsupportedKeySize = 0xFFFEF769,errSecInvalidKeyUsageMask = 0xFFFEF768,errSecUnsupportedKeyUsageMask = 0xFFFEF767,errSecInvalidKeyAttributeMask = 0xFFFEF766,errSecUnsupportedKeyAttributeMask = 0xFFFEF765,errSecInvalidKeyLabel = 0xFFFEF764,errSecUnsupportedKeyLabel = 0xFFFEF763,errSecInvalidKeyFormat = 0xFFFEF762,errSecUnsupportedVectorOfBuffers = 0xFFFEF761,errSecInvalidInputVector = 0xFFFEF760,errSecInvalidOutputVector = 0xFFFEF75F,errSecInvalidContext = 0xFFFEF75E,errSecInvalidAlgorithm = 0xFFFEF75D,errSecInvalidAttributeKey = 0xFFFEF75C,errSecMissingAttributeKey = 0xFFFEF75B,errSecInvalidAttributeInitVector = 0xFFFEF75A,errSecMissingAttributeInitVector = 0xFFFEF759,errSecInvalidAttributeSalt = 0xFFFEF758,errSecMissingAttributeSalt = 0xFFFEF757,errSecInvalidAttributePadding = 0xFFFEF756,errSecMissingAttributePadding = 0xFFFEF755,errSecInvalidAttributeRandom = 0xFFFEF754,errSecMissingAttributeRandom = 0xFFFEF753,errSecInvalidAttributeSeed = 0xFFFEF752,errSecMissingAttributeSeed = 0xFFFEF751,errSecInvalidAttributePassphrase = 0xFFFEF750,errSecMissingAttributePassphrase = 0xFFFEF74F,errSecInvalidAttributeKeyLength = 0xFFFEF74E,errSecMissingAttributeKeyLength = 0xFFFEF74D,errSecInvalidAttributeBlockSize = 0xFFFEF74C,errSecMissingAttributeBlockSize = 0xFFFEF74B,errSecInvalidAttributeOutputSize = 0xFFFEF74A,errSecMissingAttributeOutputSize = 0xFFFEF749,errSecInvalidAttributeRounds = 0xFFFEF748,errSecMissingAttributeRounds = 0xFFFEF747,errSecInvalidAlgorithmParms = 0xFFFEF746,errSecMissingAlgorithmParms = 0xFFFEF745,errSecInvalidAttributeLabel = 0xFFFEF744,errSecMissingAttributeLabel = 0xFFFEF743,errSecInvalidAttributeKeyType = 0xFFFEF742,errSecMissingAttributeKeyType = 0xFFFEF741,errSecInvalidAttributeMode = 0xFFFEF740,errSecMissingAttributeMode = 0xFFFEF73F,errSecInvalidAttributeEffectiveBits = 0xFFFEF73E,errSecMissingAttributeEffectiveBits = 0xFFFEF73D,errSecInvalidAttributeStartDate = 0xFFFEF73C,errSecMissingAttributeStartDate = 0xFFFEF73B,errSecInvalidAttributeEndDate = 0xFFFEF73A,errSecMissingAttributeEndDate = 0xFFFEF739,errSecInvalidAttributeVersion = 0xFFFEF738,errSecMissingAttributeVersion = 0xFFFEF737,errSecInvalidAttributePrime = 0xFFFEF736,errSecMissingAttributePrime = 0xFFFEF735,errSecInvalidAttributeBase = 0xFFFEF734,errSecMissingAttributeBase = 0xFFFEF733,errSecInvalidAttributeSubprime = 0xFFFEF732,errSecMissingAttributeSubprime = 0xFFFEF731,errSecInvalidAttributeIterationCount = 0xFFFEF730,errSecMissingAttributeIterationCount = 0xFFFEF72F,errSecInvalidAttributeDLDBHandle = 0xFFFEF72E,errSecMissingAttributeDLDBHandle = 0xFFFEF72D,errSecInvalidAttributeAccessCredentials = 0xFFFEF72C,errSecMissingAttributeAccessCredentials = 0xFFFEF72B,errSecInvalidAttributePublicKeyFormat = 0xFFFEF72A,errSecMissingAttributePublicKeyFormat = 0xFFFEF729,errSecInvalidAttributePrivateKeyFormat = 0xFFFEF728,errSecMissingAttributePrivateKeyFormat = 0xFFFEF727,errSecInvalidAttributeSymmetricKeyFormat = 0xFFFEF726,errSecMissingAttributeSymmetricKeyFormat = 0xFFFEF725,errSecInvalidAttributeWrappedKeyFormat = 0xFFFEF724,errSecMissingAttributeWrappedKeyFormat = 0xFFFEF723,errSecStagedOperationInProgress = 0xFFFEF722,errSecStagedOperationNotStarted = 0xFFFEF721,errSecVerifyFailed = 0xFFFEF720,errSecQuerySizeUnknown = 0xFFFEF71F,errSecBlockSizeMismatch = 0xFFFEF71E,errSecPublicKeyInconsistent = 0xFFFEF71D,errSecDeviceVerifyFailed = 0xFFFEF71C,errSecInvalidLoginName = 0xFFFEF71B,errSecAlreadyLoggedIn = 0xFFFEF71A,errSecInvalidDigestAlgorithm = 0xFFFEF719,errSecInvalidCRLGroup = 0xFFFEF718,errSecCertificateCannotOperate = 0xFFFEF717,errSecCertificateExpired = 0xFFFEF716,errSecCertificateNotValidYet = 0xFFFEF715,errSecCertificateRevoked = 0xFFFEF714,errSecCertificateSuspended = 0xFFFEF713,errSecInsufficientCredentials = 0xFFFEF712,errSecInvalidAction = 0xFFFEF711,errSecInvalidAuthority = 0xFFFEF710,errSecVerifyActionFailed = 0xFFFEF70F,errSecInvalidCertAuthority = 0xFFFEF70E,errSecInvaldCRLAuthority = 0xFFFEF70D,errSecInvalidCRLEncoding = 0xFFFEF70C,errSecInvalidCRLType = 0xFFFEF70B,errSecInvalidCRL = 0xFFFEF70A,errSecInvalidFormType = 0xFFFEF709,errSecInvalidID = 0xFFFEF708,errSecInvalidIdentifier = 0xFFFEF707,errSecInvalidIndex = 0xFFFEF706,errSecInvalidPolicyIdentifiers = 0xFFFEF705,errSecInvalidTimeString = 0xFFFEF704,errSecInvalidReason = 0xFFFEF703,errSecInvalidRequestInputs = 0xFFFEF702,errSecInvalidResponseVector = 0xFFFEF701,errSecInvalidStopOnPolicy = 0xFFFEF700,errSecInvalidTuple = 0xFFFEF6FF,errSecMultipleValuesUnsupported = 0xFFFEF6FE,errSecNotTrusted = 0xFFFEF6FD,errSecNoDefaultAuthority = 0xFFFEF6FC,errSecRejectedForm = 0xFFFEF6FB,errSecRequestLost = 0xFFFEF6FA,errSecRequestRejected = 0xFFFEF6F9,errSecUnsupportedAddressType = 0xFFFEF6F8,errSecUnsupportedService = 0xFFFEF6F7,errSecInvalidTupleGroup = 0xFFFEF6F6,errSecInvalidBaseACLs = 0xFFFEF6F5,errSecInvalidTupleCredendtials = 0xFFFEF6F4,errSecInvalidEncoding = 0xFFFEF6F3,errSecInvalidValidityPeriod = 0xFFFEF6F2,errSecInvalidRequestor = 0xFFFEF6F1,errSecRequestDescriptor = 0xFFFEF6F0,errSecInvalidBundleInfo = 0xFFFEF6EF,errSecInvalidCRLIndex = 0xFFFEF6EE,errSecNoFieldValues = 0xFFFEF6ED,errSecUnsupportedFieldFormat = 0xFFFEF6EC,errSecUnsupportedIndexInfo = 0xFFFEF6EB,errSecUnsupportedLocality = 0xFFFEF6EA,errSecUnsupportedNumAttributes = 0xFFFEF6E9,errSecUnsupportedNumIndexes = 0xFFFEF6E8,errSecUnsupportedNumRecordTypes = 0xFFFEF6E7,errSecFieldSpecifiedMultiple = 0xFFFEF6E6,errSecIncompatibleFieldFormat = 0xFFFEF6E5,errSecInvalidParsingModule = 0xFFFEF6E4,errSecDatabaseLocked = 0xFFFEF6E3,errSecDatastoreIsOpen = 0xFFFEF6E2,errSecMissingValue = 0xFFFEF6E1,errSecUnsupportedQueryLimits = 0xFFFEF6E0,errSecUnsupportedNumSelectionPreds = 0xFFFEF6DF,errSecUnsupportedOperator = 0xFFFEF6DE,errSecInvalidDBLocation = 0xFFFEF6DD,errSecInvalidAccessRequest = 0xFFFEF6DC,errSecInvalidIndexInfo = 0xFFFEF6DB,errSecInvalidNewOwner = 0xFFFEF6DA,errSecInvalidModifyMode = 0xFFFEF6D9,errSecMissingRequiredExtension = 0xFFFEF6D8,errSecExtendedKeyUsageNotCritical = 0xFFFEF6D7,errSecTimestampMissing = 0xFFFEF6D6,errSecTimestampInvalid = 0xFFFEF6D5,errSecTimestampNotTrusted = 0xFFFEF6D4,errSecTimestampServiceNotAvailable = 0xFFFEF6D3,errSecTimestampBadAlg = 0xFFFEF6D2,errSecTimestampBadRequest = 0xFFFEF6D1,errSecTimestampBadDataFormat = 0xFFFEF6D0,errSecTimestampTimeNotAvailable = 0xFFFEF6CF,errSecTimestampUnacceptedPolicy = 0xFFFEF6CE,errSecTimestampUnacceptedExtension = 0xFFFEF6CD,errSecTimestampAddInfoNotAvailable = 0xFFFEF6CC,errSecTimestampSystemFailure = 0xFFFEF6CB,errSecSigningTimeMissing = 0xFFFEF6CA,errSecTimestampRejection = 0xFFFEF6C9,errSecTimestampWaiting = 0xFFFEF6C8,errSecTimestampRevocationWarning = 0xFFFEF6C7,errSecTimestampRevocationNotification = 0xFFFEF6C6,errSecCertificatePolicyNotAllowed = 0xFFFEF6C5,errSecCertificateNameNotAllowed = 0xFFFEF6C4,errSecCertificateValidityPeriodTooLong = 0xFFFEF6C3,};
enum _9D87B5C9F60A8A8644B9DCD16AB425B9 {sizeof_sfntCMapExtendedSubHeader = 0xC,};
enum _9DDBBDCDBC630A60D22A2F33D2D1A3F5 {NSLinguisticTaggerOmitWords = 0x1,NSLinguisticTaggerOmitPunctuation = 0x2,NSLinguisticTaggerOmitWhitespace = 0x4,NSLinguisticTaggerOmitOther = 0x8,NSLinguisticTaggerJoinNames = 0x10,};
enum _9E442E20C839061A812AEDD6E3B18E5B {kHighShelfParam_CutOffFrequency = 0x0,kHighShelfParam_Gain = 0x1,};
enum _9EED45FB187F24A3CDE2FEE74C799BEC {DISPATCH_WALLTIME_NOW = 0xFFFFFFFFFFFFFFFE,};
enum _9F4F2C392C840C0BD10F151D53369E8B {NSOpenStepUnicodeReservedBase = 0xF400,};
enum _9FA419C0A307A3DFDEF188A0890B7F3B {NSJSONWritingPrettyPrinted = 0x1,NSJSONWritingSortedKeys = 0x2,NSJSONWritingFragmentsAllowed = 0x4,NSJSONWritingWithoutEscapingSlashes = 0x8,};
enum _A07C03EE8887CAC1A87AD1F37C8CD290 {kCMTextJustification_left_top = 0x0,kCMTextJustification_centered = 0x1,kCMTextJustification_bottom_right = 0xFF,};
enum _A0BBF20527952BE7A880B3DE2AF332F0 {DYLD_CHAINED_PTR_START_NONE = 0xFFFF,DYLD_CHAINED_PTR_START_MULTI = 0x8000,DYLD_CHAINED_PTR_START_LAST = 0x8000,};
enum _A0D2E72A6A284A93257C5F09051FBB41 {developStage = 0x20,alphaStage = 0x40,betaStage = 0x60,finalStage = 0x80,};
enum _A0D837931D68178850E1DFBB630AF0BC {__fpcr_trap_invalid = 0x100,__fpcr_trap_divbyzero = 0x200,__fpcr_trap_overflow = 0x400,__fpcr_trap_underflow = 0x800,__fpcr_trap_inexact = 0x1000,__fpcr_trap_denormal = 0x8000,__fpcr_flush_to_zero = 0x1000000,};
enum _A24BC4206F82C582565A443A7DD5075D {kCFPropertyListImmutable = 0x0,kCFPropertyListMutableContainers = 0x1,kCFPropertyListMutableContainersAndLeaves = 0x2,};
enum _A2D3BCB252C4642BC43C8D05B4EB07CD {INMessageAttributeOptionRead = 0x1,INMessageAttributeOptionUnread = 0x2,INMessageAttributeOptionFlagged = 0x4,INMessageAttributeOptionUnflagged = 0x8,INMessageAttributeOptionPlayed = 0x10,};
enum _A35BA210A4A86D597EC67A1939A7D761 {kAudioUnitRange = 0x0,kAudioUnitInitializeSelect = 0x1,kAudioUnitUninitializeSelect = 0x2,kAudioUnitGetPropertyInfoSelect = 0x3,kAudioUnitGetPropertySelect = 0x4,kAudioUnitSetPropertySelect = 0x5,kAudioUnitAddPropertyListenerSelect = 0xA,kAudioUnitRemovePropertyListenerSelect = 0xB,kAudioUnitRemovePropertyListenerWithUserDataSelect = 0x12,kAudioUnitAddRenderNotifySelect = 0xF,kAudioUnitRemoveRenderNotifySelect = 0x10,kAudioUnitGetParameterSelect = 0x6,kAudioUnitSetParameterSelect = 0x7,kAudioUnitScheduleParametersSelect = 0x11,kAudioUnitRenderSelect = 0xE,kAudioUnitResetSelect = 0x9,kAudioUnitComplexRenderSelect = 0x13,kAudioUnitProcessSelect = 0x14,kAudioUnitProcessMultipleSelect = 0x15,};
enum _A35DB0B9C0628CAC5C0269944174A558 {HKQueryOptionNone = 0x0,HKQueryOptionStrictStartDate = 0x1,HKQueryOptionStrictEndDate = 0x2,};
enum _A3A07509DAC87B219BF233CFCB24A310 {kCCWRAPAES = 0x1,};
enum _A4585204BAB590B8621AE320FE183F47 {AVAudioSessionActivationOptionNone = 0x0,};
enum _A4C5A626847FAB8386CB7BBD308689D0 {kNoOrnamentsSelector = 0x0,kDingbatsSelector = 0x1,kPiCharactersSelector = 0x2,kFleuronsSelector = 0x3,kDecorativeBordersSelector = 0x4,kInternationalSymbolsSelector = 0x5,kMathSymbolsSelector = 0x6,};
enum _A53AA6176F5C921C903C773D082C5F56 {kAudioQueueTimePitchAlgorithm_LowQualityZeroLatency = 0x6C717A6C,};
enum _A5EC4C6AC88283E80F637C2049D171E0 {kAudioUnitProperty_MeteringMode = 0xBBF,kAudioUnitProperty_MatrixLevels = 0xBBE,kAudioUnitProperty_MatrixDimensions = 0xBC1,kAudioUnitProperty_MeterClipping = 0xBC3,kAudioUnitProperty_InputAnchorTimeStamp = 0xBC8,};
enum _A6711153201F9A3A7BC1E18E4F8F4EBC {PHAssetSourceTypeNone = 0x0,PHAssetSourceTypeUserLibrary = 0x1,PHAssetSourceTypeCloudShared = 0x2,PHAssetSourceTypeiTunesSynced = 0x4,};
enum _A700C4FD4DF2595C36170018FAE9CEF3 {kConverterPrimeMethod_Pre = 0x0,kConverterPrimeMethod_Normal = 0x1,kConverterPrimeMethod_None = 0x2,};
enum _A76B2049F4F8E3988AE456BD849D6E3F {kCFSocketAutomaticallyReenableReadCallBack = 0x1,kCFSocketAutomaticallyReenableAcceptCallBack = 0x2,kCFSocketAutomaticallyReenableDataCallBack = 0x3,kCFSocketAutomaticallyReenableWriteCallBack = 0x8,kCFSocketLeaveErrors = 0x40,kCFSocketCloseOnInvalidate = 0x80,};
enum _A7C063DB356455F7BF734E2B44EFF834 {OSLogEnumeratorReverse = 0x1,};
enum _A8DD2131D9396DBA161AFAFD55B4AC14 {NSMatchingProgress = 0x1,NSMatchingCompleted = 0x2,NSMatchingHitEnd = 0x4,NSMatchingRequiredEnd = 0x8,NSMatchingInternalError = 0x10,};
enum _A8FE66EEC75956594FF19FAAB41FB8BD {NSMatchingReportProgress = 0x1,NSMatchingReportCompletion = 0x2,NSMatchingAnchored = 0x4,NSMatchingWithTransparentBounds = 0x8,NSMatchingWithoutAnchoringBounds = 0x10,};
enum _A91F78BC570363FEBF33486BC3EC71BA {kAudioComponentErr_DuplicateDescription = 0xFFFEFB40,kAudioComponentErr_UnsupportedType = 0xFFFEFB41,kAudioComponentErr_TooManyInstances = 0xFFFEFB42,kAudioComponentErr_NotPermitted = 0xFFFEFB44,kAudioComponentErr_InitializationTimedOut = 0xFFFEFB45,kAudioComponentErr_InvalidFormat = 0xFFFEFB46,};
enum _A9D9B4496B21619AC70C5EB4414CBE5B {kMORXTag = 0x6D6F7278,kMORXCurrentVersion = 0x20000,kMORXCoverVertical = 0x80000000,kMORXCoverDescending = 0x40000000,kMORXCoverIgnoreVertical = 0x20000000,kMORXCoverLogicalOrder = 0x10000000,kMORXCoverTypeMask = 0xFF,};
enum _A9EBFE1A101C3454BBC2DCB286A119BC {kAlternateHorizKanaOnSelector = 0x0,kAlternateHorizKanaOffSelector = 0x1,kAlternateVertKanaOnSelector = 0x2,kAlternateVertKanaOffSelector = 0x3,};
enum _AA0E16381E938C76189B1C60F00550D6 {AVAudioSessionSetActiveOptionNotifyOthersOnDeactivation = 0x1,};
enum _AAAAB72325C54F6AE15DFB7FED3F0C44 {FFT_FORWARD = 0x1,FFT_INVERSE = 0xFFFFFFFF,};
enum _AADB2A22531B1218D64B8A38D14018B4 {kAudioFormatFlagsNativeEndian = 0x0,kAudioFormatFlagsCanonical = 0xC,kAudioFormatFlagsAudioUnitCanonical = 0xC2C,kAudioFormatFlagsNativeFloatPacked = 0x9,};
enum _AB5F989BB9C790721D6D4E22885FB657 {MTLStoreActionOptionNone = 0x0,MTLStoreActionOptionCustomSamplePositions = 0x1,};
struct _AC186CABF9007C2DA87CD3BECABD7D45 {unsigned int low;unsigned int high;};
enum _AC5FFC67D757E0867032E787B0A9917E {kAudio_UnimplementedError = 0xFFFFFFFC,kAudio_FileNotFoundError = 0xFFFFFFD5,kAudio_FilePermissionError = 0xFFFFFFCA,kAudio_TooManyFilesOpenError = 0xFFFFFFD6,kAudio_BadFilePathError = 0x21707468,kAudio_ParamError = 0xFFFFFFCE,kAudio_MemFullError = 0xFFFFFF94,};
enum _AC9EB40FAF367D268FDF14888DB8C179 {kCTUnderlinePatternSolid = 0x0,kCTUnderlinePatternDot = 0x100,kCTUnderlinePatternDash = 0x200,kCTUnderlinePatternDashDot = 0x300,kCTUnderlinePatternDashDotDot = 0x400,};
enum _ACD00AD97CE0DCB5E5AC8EDD5D6C81E0 {kCFStreamErrorSOCKSSubDomainNone = 0x0,kCFStreamErrorSOCKSSubDomainVersionCode = 0x1,kCFStreamErrorSOCKS4SubDomainResponse = 0x2,kCFStreamErrorSOCKS5SubDomainUserPass = 0x3,kCFStreamErrorSOCKS5SubDomainMethod = 0x4,kCFStreamErrorSOCKS5SubDomainResponse = 0x5,};
enum _ACE185922A5CF483A3E1159C1E5A74A9 {kVTEncodeInfo_Asynchronous = 0x1,kVTEncodeInfo_FrameDropped = 0x2,};
enum _ACE4C23BE641104DBACC680AABE7449F {NSASCIIStringEncoding = 0x1,NSNEXTSTEPStringEncoding = 0x2,NSJapaneseEUCStringEncoding = 0x3,NSUTF8StringEncoding = 0x4,NSISOLatin1StringEncoding = 0x5,NSSymbolStringEncoding = 0x6,NSNonLossyASCIIStringEncoding = 0x7,NSShiftJISStringEncoding = 0x8,NSISOLatin2StringEncoding = 0x9,NSUnicodeStringEncoding = 0xA,NSWindowsCP1251StringEncoding = 0xB,NSWindowsCP1252StringEncoding = 0xC,NSWindowsCP1253StringEncoding = 0xD,NSWindowsCP1254StringEncoding = 0xE,NSWindowsCP1250StringEncoding = 0xF,NSISO2022JPStringEncoding = 0x15,NSMacOSRomanStringEncoding = 0x1E,NSUTF16StringEncoding = 0xA,NSUTF16BigEndianStringEncoding = 0x90000100,NSUTF16LittleEndianStringEncoding = 0x94000100,NSUTF32StringEncoding = 0x8C000100,NSUTF32BigEndianStringEncoding = 0x98000100,NSUTF32LittleEndianStringEncoding = 0x9C000100,};
enum _AD9775A64DB7B993B7C2A29A36919661 {kAudioTimeStampNothingValid = 0x0,kAudioTimeStampSampleTimeValid = 0x1,kAudioTimeStampHostTimeValid = 0x2,kAudioTimeStampRateScalarValid = 0x4,kAudioTimeStampWordClockTimeValid = 0x8,kAudioTimeStampSMPTETimeValid = 0x10,kAudioTimeStampSampleHostTimeValid = 0x3,};
enum _AE3CDC02EFBFBB83CD63405E9D505C79 {kPreventOverlapOnSelector = 0x0,kPreventOverlapOffSelector = 0x1,};
enum _AE91B276006BFE8F522003DDC7887A41 {NSGlyphPropertyNull = 0x1,NSGlyphPropertyControlCharacter = 0x2,NSGlyphPropertyElastic = 0x4,NSGlyphPropertyNonBaseCharacter = 0x8,};
enum _AEDF4E5A842D5DD4C18711EAE5627818 {DYLD_CHAINED_IMPORT = 0x1,DYLD_CHAINED_IMPORT_ADDEND = 0x2,DYLD_CHAINED_IMPORT_ADDEND64 = 0x3,};
enum _AF87AAD826EF9183BB2873C5D29206FE {kAudioFileStreamProperty_ReadyToProducePackets = 0x72656479,kAudioFileStreamProperty_FileFormat = 0x66666D74,kAudioFileStreamProperty_DataFormat = 0x64666D74,kAudioFileStreamProperty_FormatList = 0x666C7374,kAudioFileStreamProperty_MagicCookieData = 0x6D676963,kAudioFileStreamProperty_AudioDataByteCount = 0x62636E74,kAudioFileStreamProperty_AudioDataPacketCount = 0x70636E74,kAudioFileStreamProperty_MaximumPacketSize = 0x70737A65,kAudioFileStreamProperty_DataOffset = 0x646F6666,kAudioFileStreamProperty_ChannelLayout = 0x636D6170,kAudioFileStreamProperty_PacketToFrame = 0x706B6672,kAudioFileStreamProperty_FrameToPacket = 0x6672706B,kAudioFileStreamProperty_RestrictsRandomAccess = 0x72726170,kAudioFileStreamProperty_PacketToRollDistance = 0x706B726C,kAudioFileStreamProperty_PreviousIndependentPacket = 0x70696E64,kAudioFileStreamProperty_NextIndependentPacket = 0x6E696E64,kAudioFileStreamProperty_PacketToDependencyInfo = 0x706B6470,kAudioFileStreamProperty_PacketToByte = 0x706B6279,kAudioFileStreamProperty_ByteToPacket = 0x6279706B,kAudioFileStreamProperty_PacketTableInfo = 0x706E666F,kAudioFileStreamProperty_PacketSizeUpperBound = 0x706B7562,kAudioFileStreamProperty_AverageBytesPerPacket = 0x61627070,kAudioFileStreamProperty_BitRate = 0x62726174,kAudioFileStreamProperty_InfoDictionary = 0x696E666F,};
enum _AF8BEA8CDFCBD7729004AC2897668F6E {kVTCompressionSessionBeginFinalPass = 0x1,};
enum _AFAA17DE17D64D64F5BD681F18ACEDD0 {NSManagedObjectValidationError = 0x60E,NSManagedObjectConstraintValidationError = 0x60F,NSValidationMultipleErrorsError = 0x618,NSValidationMissingMandatoryPropertyError = 0x622,NSValidationRelationshipLacksMinimumCountError = 0x62C,NSValidationRelationshipExceedsMaximumCountError = 0x636,NSValidationRelationshipDeniedDeleteError = 0x640,NSValidationNumberTooLargeError = 0x64A,NSValidationNumberTooSmallError = 0x654,NSValidationDateTooLateError = 0x65E,NSValidationDateTooSoonError = 0x668,NSValidationInvalidDateError = 0x672,NSValidationStringTooLongError = 0x67C,NSValidationStringTooShortError = 0x686,NSValidationStringPatternMatchingError = 0x690,NSValidationInvalidURIError = 0x69A,NSManagedObjectContextLockingError = 0x203A0,NSPersistentStoreCoordinatorLockingError = 0x203AA,NSManagedObjectReferentialIntegrityError = 0x20788,NSManagedObjectExternalRelationshipError = 0x20792,NSManagedObjectMergeError = 0x2079C,NSManagedObjectConstraintMergeError = 0x2079D,NSPersistentStoreInvalidTypeError = 0x20B70,NSPersistentStoreTypeMismatchError = 0x20B7A,NSPersistentStoreIncompatibleSchemaError = 0x20B84,NSPersistentStoreSaveError = 0x20B8E,NSPersistentStoreIncompleteSaveError = 0x20B98,NSPersistentStoreSaveConflictsError = 0x20BA2,NSCoreDataError = 0x20BAC,NSPersistentStoreOperationError = 0x20BB6,NSPersistentStoreOpenError = 0x20BC0,NSPersistentStoreTimeoutError = 0x20BCA,NSPersistentStoreUnsupportedRequestTypeError = 0x20BCB,NSPersistentStoreIncompatibleVersionHashError = 0x20BD4,NSMigrationError = 0x20BDE,NSMigrationConstraintViolationError = 0x20BDF,NSMigrationCancelledError = 0x20BE8,NSMigrationMissingSourceModelError = 0x20BF2,NSMigrationMissingMappingModelError = 0x20BFC,NSMigrationManagerSourceStoreError = 0x20C06,NSMigrationManagerDestinationStoreError = 0x20C10,NSEntityMigrationPolicyError = 0x20C1A,NSSQLiteError = 0x20C24,NSInferredMappingModelError = 0x20C2E,NSExternalRecordImportError = 0x20C38,NSPersistentHistoryTokenExpiredError = 0x20C9D,};
enum _AFCE5A00CF8767E1643D2A61B81D3495 {UIGuidedAccessAccessibilityFeatureVoiceOver = 0x1,UIGuidedAccessAccessibilityFeatureZoom = 0x2,UIGuidedAccessAccessibilityFeatureAssistiveTouch = 0x4,UIGuidedAccessAccessibilityFeatureInvertColors = 0x8,UIGuidedAccessAccessibilityFeatureGrayscaleDisplay = 0x10,};
enum _B009A6D0E5212CD5F6E9F331CE979292 {kCVSMPTETimeValid = 0x1,kCVSMPTETimeRunning = 0x2,};
enum _B048532DC22016F3AD8B18F10796F695 {kABPersonSortByFirstName = 0x0,kABPersonSortByLastName = 0x1,};
typedef MTLComputePipelineReflection *_B09D4488B2E2E084E7C02D71FD995D1A;
enum _B2DA6E8137EE101D835B6727B4B09F6C {NSControlCharacterActionZeroAdvancement = 0x1,NSControlCharacterActionWhitespace = 0x2,NSControlCharacterActionHorizontalTab = 0x4,NSControlCharacterActionLineBreak = 0x8,NSControlCharacterActionParagraphBreak = 0x10,NSControlCharacterActionContainerBreak = 0x20,};
enum _B3EC297B2D0DE2F55831CA9F594C3C11 {NSMeasurementFormatterUnitOptionsProvidedUnit = 0x1,NSMeasurementFormatterUnitOptionsNaturalScale = 0x2,NSMeasurementFormatterUnitOptionsTemperatureWithoutUnit = 0x4,};
enum _B492D490EFF12137AB12649733416A04 {SCNBillboardAxisX = 0x1,SCNBillboardAxisY = 0x2,SCNBillboardAxisZ = 0x4,SCNBillboardAxisAll = 0x7,};
enum _B4934E19EABA7E6E011F5D5D1FF0180B {kKERNTag = 0x6B65726E,kKERNCurrentVersion = 0x10000,kKERNVertical = 0x8000,kKERNResetCrossStream = 0x8000,kKERNCrossStream = 0x4000,kKERNVariation = 0x2000,kKERNUnusedBits = 0x1F00,kKERNFormatMask = 0xFF,};
enum _B4A9ED7260F2D84F2F4690806CA578C1 {AVAudioSessionErrorInsufficientPriority = 0x21707269,};
enum _B4C93480844F24E209D3ECFAF0976A73 {UIRectCornerTopLeft = 0x1,UIRectCornerTopRight = 0x2,UIRectCornerBottomLeft = 0x4,UIRectCornerBottomRight = 0x8,UIRectCornerAllCorners = 0xFFFFFFFFFFFFFFFF,};
enum _B4DDCA770368D6C65689308B1B8B8537 {kCFGregorianUnitsYears = 0x1,kCFGregorianUnitsMonths = 0x2,kCFGregorianUnitsDays = 0x4,kCFGregorianUnitsHours = 0x8,kCFGregorianUnitsMinutes = 0x10,kCFGregorianUnitsSeconds = 0x20,kCFGregorianAllUnits = 0xFFFFFF,};
enum _B52F9740A88F217BB0CEE5CA470DFBD5 {kAudioFormatFlagIsFloat = 0x1,kAudioFormatFlagIsBigEndian = 0x2,kAudioFormatFlagIsSignedInteger = 0x4,kAudioFormatFlagIsPacked = 0x8,kAudioFormatFlagIsAlignedHigh = 0x10,kAudioFormatFlagIsNonInterleaved = 0x20,kAudioFormatFlagIsNonMixable = 0x40,kAudioFormatFlagsAreAllClear = 0x80000000,kLinearPCMFormatFlagIsFloat = 0x1,kLinearPCMFormatFlagIsBigEndian = 0x2,kLinearPCMFormatFlagIsSignedInteger = 0x4,kLinearPCMFormatFlagIsPacked = 0x8,kLinearPCMFormatFlagIsAlignedHigh = 0x10,kLinearPCMFormatFlagIsNonInterleaved = 0x20,kLinearPCMFormatFlagIsNonMixable = 0x40,kLinearPCMFormatFlagsSampleFractionShift = 0x7,kLinearPCMFormatFlagsSampleFractionMask = 0x1F80,kLinearPCMFormatFlagsAreAllClear = 0x80000000,kAppleLosslessFormatFlag_16BitSourceData = 0x1,kAppleLosslessFormatFlag_20BitSourceData = 0x2,kAppleLosslessFormatFlag_24BitSourceData = 0x3,kAppleLosslessFormatFlag_32BitSourceData = 0x4,};
enum _B553213167B3BEEFE6ADF9B83393A0E9 {kAudioUnitSubType_AU3DMixerEmbedded = 0x3364656D,};
enum _B58CA949B7EBE43C289B77D59E70A0FE {NSTextCheckingAllSystemTypes = 0xFFFFFFFF,NSTextCheckingAllCustomTypes = 0xFFFFFFFF00000000,NSTextCheckingAllTypes = 0xFFFFFFFFFFFFFFFF,};
enum _B5BBB8FEDA171193F5630011D6258131 {kNewTimePitchParam_Rate = 0x0,kNewTimePitchParam_Pitch = 0x1,kNewTimePitchParam_Overlap = 0x4,kNewTimePitchParam_EnablePeakLocking = 0x6,};
enum _B70AB27A0B857C1D444F20D7AC1A38F6 {kCMBlockBufferNoErr = 0x0,kCMBlockBufferStructureAllocationFailedErr = 0xFFFFCE64,kCMBlockBufferBlockAllocationFailedErr = 0xFFFFCE63,kCMBlockBufferBadCustomBlockSourceErr = 0xFFFFCE62,kCMBlockBufferBadOffsetParameterErr = 0xFFFFCE61,kCMBlockBufferBadLengthParameterErr = 0xFFFFCE60,kCMBlockBufferBadPointerParameterErr = 0xFFFFCE5F,kCMBlockBufferEmptyBBufErr = 0xFFFFCE5E,kCMBlockBufferUnallocatedBlockErr = 0xFFFFCE5D,kCMBlockBufferInsufficientSpaceErr = 0xFFFFCE5C,};
enum _B710429303802C27CC7FE816C8BCFE1D {kCFNetServiceFlagNoAutoRename = 0x1,};
enum _B76E615B839DA9A8BDF2BFD5D7783844 {kAudioCodecQuality_Max = 0x7F,kAudioCodecQuality_High = 0x60,kAudioCodecQuality_Medium = 0x40,kAudioCodecQuality_Low = 0x20,kAudioCodecQuality_Min = 0x0,};
enum _B78558E81EFADBDD0F01C2888B969F13 {NSFileNoSuchFileError = 0x4,NSFileLockingError = 0xFF,NSFileReadUnknownError = 0x100,NSFileReadNoPermissionError = 0x101,NSFileReadInvalidFileNameError = 0x102,NSFileReadCorruptFileError = 0x103,NSFileReadNoSuchFileError = 0x104,NSFileReadInapplicableStringEncodingError = 0x105,NSFileReadUnsupportedSchemeError = 0x106,NSFileReadTooLargeError = 0x107,NSFileReadUnknownStringEncodingError = 0x108,NSFileWriteUnknownError = 0x200,NSFileWriteNoPermissionError = 0x201,NSFileWriteInvalidFileNameError = 0x202,NSFileWriteFileExistsError = 0x204,NSFileWriteInapplicableStringEncodingError = 0x205,NSFileWriteUnsupportedSchemeError = 0x206,NSFileWriteOutOfSpaceError = 0x280,NSFileWriteVolumeReadOnlyError = 0x282,NSFileManagerUnmountUnknownError = 0x300,NSFileManagerUnmountBusyError = 0x301,NSKeyValueValidationError = 0x400,NSFormattingError = 0x800,NSUserCancelledError = 0xC00,NSFeatureUnsupportedError = 0xD00,NSExecutableNotLoadableError = 0xE00,NSExecutableArchitectureMismatchError = 0xE01,NSExecutableRuntimeMismatchError = 0xE02,NSExecutableLoadError = 0xE03,NSExecutableLinkError = 0xE04,NSFileErrorMinimum = 0x0,NSFileErrorMaximum = 0x3FF,NSValidationErrorMinimum = 0x400,NSValidationErrorMaximum = 0x7FF,NSExecutableErrorMinimum = 0xE00,NSExecutableErrorMaximum = 0xEFF,NSFormattingErrorMinimum = 0x800,NSFormattingErrorMaximum = 0x9FF,NSPropertyListReadCorruptError = 0xF00,NSPropertyListReadUnknownVersionError = 0xF01,NSPropertyListReadStreamError = 0xF02,NSPropertyListWriteStreamError = 0xF0B,NSPropertyListWriteInvalidError = 0xF0C,NSPropertyListErrorMinimum = 0xF00,NSPropertyListErrorMaximum = 0xFFF,NSXPCConnectionInterrupted = 0x1001,NSXPCConnectionInvalid = 0x1003,NSXPCConnectionReplyInvalid = 0x1005,NSXPCConnectionErrorMinimum = 0x1000,NSXPCConnectionErrorMaximum = 0x1080,NSUbiquitousFileUnavailableError = 0x1101,NSUbiquitousFileNotUploadedDueToQuotaError = 0x1102,NSUbiquitousFileUbiquityServerNotAvailable = 0x1103,NSUbiquitousFileErrorMinimum = 0x1100,NSUbiquitousFileErrorMaximum = 0x11FF,NSUserActivityHandoffFailedError = 0x1200,NSUserActivityConnectionUnavailableError = 0x1201,NSUserActivityRemoteApplicationTimedOutError = 0x1202,NSUserActivityHandoffUserInfoTooLargeError = 0x1203,NSUserActivityErrorMinimum = 0x1200,NSUserActivityErrorMaximum = 0x12FF,NSCoderReadCorruptError = 0x1300,NSCoderValueNotFoundError = 0x1301,NSCoderInvalidValueError = 0x1302,NSCoderErrorMinimum = 0x1300,NSCoderErrorMaximum = 0x137F,NSBundleErrorMinimum = 0x1380,NSBundleErrorMaximum = 0x13FF,NSBundleOnDemandResourceOutOfSpaceError = 0x1380,NSBundleOnDemandResourceExceededMaximumSizeError = 0x1381,NSBundleOnDemandResourceInvalidTagError = 0x1382,NSCloudSharingNetworkFailureError = 0x1400,NSCloudSharingQuotaExceededError = 0x1401,NSCloudSharingTooManyParticipantsError = 0x1402,NSCloudSharingConflictError = 0x1403,NSCloudSharingNoPermissionError = 0x1404,NSCloudSharingOtherError = 0x14FF,NSCloudSharingErrorMinimum = 0x1400,NSCloudSharingErrorMaximum = 0x14FF,NSCompressionFailedError = 0x1500,NSDecompressionFailedError = 0x1501,NSCompressionErrorMinimum = 0x1500,NSCompressionErrorMaximum = 0x157F,};
enum _B7BE89847DF572CAE8084BE0017A468E {kAudioOutputUnitRange = 0x200,kAudioOutputUnitStartSelect = 0x201,kAudioOutputUnitStopSelect = 0x202,};
enum _B7C57FE59E9A6AB730E9A32353EC0DEB {EKEntityMaskEvent = 0x1,EKEntityMaskReminder = 0x2,};
enum _B7F23095B526402909CE2BF33C9CF3AA {OSUnknownByteOrder = 0x0,OSLittleEndian = 0x1,OSBigEndian = 0x2,};
enum _B7FAF416BA3057B80A9D0CF23BBFD6B6 {NFCPollingISO14443 = 0x1,NFCPollingISO15693 = 0x2,NFCPollingISO18092 = 0x4,};
enum _B83C3E6BC47EB6EBF8610AE2EE0F23BF {kDynamicsProcessorParam_Threshold = 0x0,kDynamicsProcessorParam_HeadRoom = 0x1,kDynamicsProcessorParam_ExpansionRatio = 0x2,kDynamicsProcessorParam_ExpansionThreshold = 0x3,kDynamicsProcessorParam_AttackTime = 0x4,kDynamicsProcessorParam_ReleaseTime = 0x5,kDynamicsProcessorParam_MasterGain = 0x6,kDynamicsProcessorParam_CompressionAmount = 0x3E8,kDynamicsProcessorParam_InputAmplitude = 0x7D0,kDynamicsProcessorParam_OutputAmplitude = 0xBB8,};
enum _B841142629BC709DDD9480108BAE5487 {BLOCK_FIELD_IS_OBJECT = 0x3,BLOCK_FIELD_IS_BLOCK = 0x7,BLOCK_FIELD_IS_BYREF = 0x8,BLOCK_FIELD_IS_WEAK = 0x10,BLOCK_BYREF_CALLER = 0x80,};
enum _B8441F6584ADB4FD5F216B1FDE707CB1 {kCVPixelBufferLock_ReadOnly = 0x1,};
enum _B8FCE46CDADDB123F80A8C6C4DAF7707 {UNWIND_X86_64_MODE_MASK = 0xF000000,UNWIND_X86_64_MODE_RBP_FRAME = 0x1000000,UNWIND_X86_64_MODE_STACK_IMMD = 0x2000000,UNWIND_X86_64_MODE_STACK_IND = 0x3000000,UNWIND_X86_64_MODE_DWARF = 0x4000000,UNWIND_X86_64_RBP_FRAME_REGISTERS = 0x7FFF,UNWIND_X86_64_RBP_FRAME_OFFSET = 0xFF0000,UNWIND_X86_64_FRAMELESS_STACK_SIZE = 0xFF0000,UNWIND_X86_64_FRAMELESS_STACK_ADJUST = 0xE000,UNWIND_X86_64_FRAMELESS_STACK_REG_COUNT = 0x1C00,UNWIND_X86_64_FRAMELESS_STACK_REG_PERMUTATION = 0x3FF,UNWIND_X86_64_DWARF_SECTION_OFFSET = 0xFFFFFF,};
enum _B92B7468DE3D44C7E2218C1B34CF20CA {UIRectEdgeNone = 0x0,UIRectEdgeTop = 0x1,UIRectEdgeLeft = 0x2,UIRectEdgeBottom = 0x4,UIRectEdgeRight = 0x8,UIRectEdgeAll = 0xF,};
enum _B969C72EC639BA68504942EC4D53C102 {NSDateComponentUndefined = 0x7FFFFFFFFFFFFFFF,NSUndefinedDateComponent = 0x7FFFFFFFFFFFFFFF,};
enum _B996284C897A246BA6E745380626AE05 {NSFileProviderItemCapabilitiesAllowsReading = 0x1,NSFileProviderItemCapabilitiesAllowsWriting = 0x2,NSFileProviderItemCapabilitiesAllowsReparenting = 0x4,NSFileProviderItemCapabilitiesAllowsRenaming = 0x8,NSFileProviderItemCapabilitiesAllowsTrashing = 0x10,NSFileProviderItemCapabilitiesAllowsDeleting = 0x20,NSFileProviderItemCapabilitiesAllowsAddingSubItems = 0x2,NSFileProviderItemCapabilitiesAllowsContentEnumerating = 0x1,NSFileProviderItemCapabilitiesAllowsAll = 0x3F,};
enum _B9F9C2377A8A162CE04F5F31F3CBF3A0 {INCallRecordTypeOptionOutgoing = 0x1,INCallRecordTypeOptionMissed = 0x2,INCallRecordTypeOptionReceived = 0x4,INCallRecordTypeOptionLatest = 0x8,INCallRecordTypeOptionVoicemail = 0x10,INCallRecordTypeOptionRinging = 0x20,INCallRecordTypeOptionInProgress = 0x40,INCallRecordTypeOptionOnHold = 0x80,};
enum _B9FBE39B7D4F5B3F6BE7DE8D9EABF9D3 {kAudioSettingsFlags_ExpertParameter = 0x1,kAudioSettingsFlags_InvisibleParameter = 0x2,kAudioSettingsFlags_MetaParameter = 0x4,kAudioSettingsFlags_UserInterfaceParameter = 0x8,};
enum _BA010D21FB6ED7CF9CE4E115A4F6CC22 {NSFileWrapperReadingImmediate = 0x1,NSFileWrapperReadingWithoutMapping = 0x2,};
enum _BA101ED641B57FCF63C76F5ED5CD9B4A {kCFPropertyListReadCorruptError = 0xF00,kCFPropertyListReadUnknownVersionError = 0xF01,kCFPropertyListReadStreamError = 0xF02,kCFPropertyListWriteStreamError = 0xF0B,};
struct __attribute__((aligned(16))) _BA13FB9ECCDB043D951462000929904B {void *opaque1;long long opaque2;};
enum _BA18744B9A72168D0CEB98B5337C3284 {kLTAGCurrentVersion = 0x1,};
enum _BA50F96151BD547964F6602810E2BCC9 {UNWIND_IS_NOT_FUNCTION_START = 0x80000000,UNWIND_HAS_LSDA = 0x40000000,UNWIND_PERSONALITY_MASK = 0x30000000,};
enum _BA92B93D4F9191480613D5D31FE3F0F5 {kAudioSessionNoError = 0x0,kAudioSessionNotInitialized = 0x21696E69,kAudioSessionAlreadyInitialized = 0x696E6974,kAudioSessionInitializationError = 0x696E693F,kAudioSessionUnsupportedPropertyError = 0x7074793F,kAudioSessionBadPropertySizeError = 0x2173697A,kAudioSessionNotActiveError = 0x21616374,kAudioServicesNoHardwareError = 0x6E6F6877,kAudioSessionNoCategorySet = 0x3F636174,kAudioSessionIncompatibleCategory = 0x21636174,kAudioSessionUnspecifiedError = 0x77686174,};
enum _BB7FBBA14FC4E40B0C3E11C5A2086B6D {kvImageNoFlags = 0x0,kvImageLeaveAlphaUnchanged = 0x1,kvImageCopyInPlace = 0x2,kvImageBackgroundColorFill = 0x4,kvImageEdgeExtend = 0x8,kvImageDoNotTile = 0x10,kvImageHighQualityResampling = 0x20,kvImageTruncateKernel = 0x40,kvImageGetTempBufferSize = 0x80,kvImagePrintDiagnosticsToConsole = 0x100,kvImageNoAllocate = 0x200,kvImageHDRContent = 0x400,kvImageDoNotClamp = 0x800,};
enum _BB96585FDFA6116DAD6859EC00B64661 {UNW_PPC_R0 = 0x0,UNW_PPC_R1 = 0x1,UNW_PPC_R2 = 0x2,UNW_PPC_R3 = 0x3,UNW_PPC_R4 = 0x4,UNW_PPC_R5 = 0x5,UNW_PPC_R6 = 0x6,UNW_PPC_R7 = 0x7,UNW_PPC_R8 = 0x8,UNW_PPC_R9 = 0x9,UNW_PPC_R10 = 0xA,UNW_PPC_R11 = 0xB,UNW_PPC_R12 = 0xC,UNW_PPC_R13 = 0xD,UNW_PPC_R14 = 0xE,UNW_PPC_R15 = 0xF,UNW_PPC_R16 = 0x10,UNW_PPC_R17 = 0x11,UNW_PPC_R18 = 0x12,UNW_PPC_R19 = 0x13,UNW_PPC_R20 = 0x14,UNW_PPC_R21 = 0x15,UNW_PPC_R22 = 0x16,UNW_PPC_R23 = 0x17,UNW_PPC_R24 = 0x18,UNW_PPC_R25 = 0x19,UNW_PPC_R26 = 0x1A,UNW_PPC_R27 = 0x1B,UNW_PPC_R28 = 0x1C,UNW_PPC_R29 = 0x1D,UNW_PPC_R30 = 0x1E,UNW_PPC_R31 = 0x1F,UNW_PPC_F0 = 0x20,UNW_PPC_F1 = 0x21,UNW_PPC_F2 = 0x22,UNW_PPC_F3 = 0x23,UNW_PPC_F4 = 0x24,UNW_PPC_F5 = 0x25,UNW_PPC_F6 = 0x26,UNW_PPC_F7 = 0x27,UNW_PPC_F8 = 0x28,UNW_PPC_F9 = 0x29,UNW_PPC_F10 = 0x2A,UNW_PPC_F11 = 0x2B,UNW_PPC_F12 = 0x2C,UNW_PPC_F13 = 0x2D,UNW_PPC_F14 = 0x2E,UNW_PPC_F15 = 0x2F,UNW_PPC_F16 = 0x30,UNW_PPC_F17 = 0x31,UNW_PPC_F18 = 0x32,UNW_PPC_F19 = 0x33,UNW_PPC_F20 = 0x34,UNW_PPC_F21 = 0x35,UNW_PPC_F22 = 0x36,UNW_PPC_F23 = 0x37,UNW_PPC_F24 = 0x38,UNW_PPC_F25 = 0x39,UNW_PPC_F26 = 0x3A,UNW_PPC_F27 = 0x3B,UNW_PPC_F28 = 0x3C,UNW_PPC_F29 = 0x3D,UNW_PPC_F30 = 0x3E,UNW_PPC_F31 = 0x3F,UNW_PPC_MQ = 0x40,UNW_PPC_LR = 0x41,UNW_PPC_CTR = 0x42,UNW_PPC_AP = 0x43,UNW_PPC_CR0 = 0x44,UNW_PPC_CR1 = 0x45,UNW_PPC_CR2 = 0x46,UNW_PPC_CR3 = 0x47,UNW_PPC_CR4 = 0x48,UNW_PPC_CR5 = 0x49,UNW_PPC_CR6 = 0x4A,UNW_PPC_CR7 = 0x4B,UNW_PPC_XER = 0x4C,UNW_PPC_V0 = 0x4D,UNW_PPC_V1 = 0x4E,UNW_PPC_V2 = 0x4F,UNW_PPC_V3 = 0x50,UNW_PPC_V4 = 0x51,UNW_PPC_V5 = 0x52,UNW_PPC_V6 = 0x53,UNW_PPC_V7 = 0x54,UNW_PPC_V8 = 0x55,UNW_PPC_V9 = 0x56,UNW_PPC_V10 = 0x57,UNW_PPC_V11 = 0x58,UNW_PPC_V12 = 0x59,UNW_PPC_V13 = 0x5A,UNW_PPC_V14 = 0x5B,UNW_PPC_V15 = 0x5C,UNW_PPC_V16 = 0x5D,UNW_PPC_V17 = 0x5E,UNW_PPC_V18 = 0x5F,UNW_PPC_V19 = 0x60,UNW_PPC_V20 = 0x61,UNW_PPC_V21 = 0x62,UNW_PPC_V22 = 0x63,UNW_PPC_V23 = 0x64,UNW_PPC_V24 = 0x65,UNW_PPC_V25 = 0x66,UNW_PPC_V26 = 0x67,UNW_PPC_V27 = 0x68,UNW_PPC_V28 = 0x69,UNW_PPC_V29 = 0x6A,UNW_PPC_V30 = 0x6B,UNW_PPC_V31 = 0x6C,UNW_PPC_VRSAVE = 0x6D,UNW_PPC_VSCR = 0x6E,UNW_PPC_SPE_ACC = 0x6F,UNW_PPC_SPEFSCR = 0x70,};
enum _BBA28FAC948E35F5DCE341A8032E40C2 {AVAudioSessionCategoryOptionMixWithOthers = 0x1,AVAudioSessionCategoryOptionDuckOthers = 0x2,AVAudioSessionCategoryOptionAllowBluetooth = 0x4,AVAudioSessionCategoryOptionDefaultToSpeaker = 0x8,AVAudioSessionCategoryOptionInterruptSpokenAudioAndMixWithOthers = 0x11,AVAudioSessionCategoryOptionAllowBluetoothA2DP = 0x20,AVAudioSessionCategoryOptionAllowAirPlay = 0x40,};
enum _BBF13E794347691EBD8EAB8872CB7FB1 {kAudioConverterSampleRateConverterComplexity_Linear = 0x6C696E65,kAudioConverterSampleRateConverterComplexity_Normal = 0x6E6F726D,kAudioConverterSampleRateConverterComplexity_Mastering = 0x62617473,kAudioConverterSampleRateConverterComplexity_MinimumPhase = 0x6D696E70,};
enum _BBF68C6169E3FB94B6C1CBF9B45CDA31 {UIUserNotificationTypeNone = 0x0,UIUserNotificationTypeBadge = 0x1,UIUserNotificationTypeSound = 0x2,UIUserNotificationTypeAlert = 0x4,};
enum _BC27817FFC70904AC0DFD41F6033DF5B {NSStringEncodingConversionAllowLossy = 0x1,NSStringEncodingConversionExternalRepresentation = 0x2,};
enum _BD31FC5C1DAA0B5ABC4F0FB52F57E2A4 {kAudioUnitSubType_AUConverter = 0x636F6E76,kAudioUnitSubType_Varispeed = 0x76617269,kAudioUnitSubType_DeferredRenderer = 0x64656672,kAudioUnitSubType_Splitter = 0x73706C74,kAudioUnitSubType_MultiSplitter = 0x6D73706C,kAudioUnitSubType_Merger = 0x6D657267,kAudioUnitSubType_NewTimePitch = 0x6E757470,kAudioUnitSubType_AUiPodTimeOther = 0x6970746F,kAudioUnitSubType_RoundTripAAC = 0x72616163,};
enum _BDC4EAA2DEE10129CD9B0BB21675095A {kFontRomanScript = 0x0,kFontJapaneseScript = 0x1,kFontTraditionalChineseScript = 0x2,kFontChineseScript = 0x2,kFontKoreanScript = 0x3,kFontArabicScript = 0x4,kFontHebrewScript = 0x5,kFontGreekScript = 0x6,kFontCyrillicScript = 0x7,kFontRussian = 0x7,kFontRSymbolScript = 0x8,kFontDevanagariScript = 0x9,kFontGurmukhiScript = 0xA,kFontGujaratiScript = 0xB,kFontOriyaScript = 0xC,kFontBengaliScript = 0xD,kFontTamilScript = 0xE,kFontTeluguScript = 0xF,kFontKannadaScript = 0x10,kFontMalayalamScript = 0x11,kFontSinhaleseScript = 0x12,kFontBurmeseScript = 0x13,kFontKhmerScript = 0x14,kFontThaiScript = 0x15,kFontLaotianScript = 0x16,kFontGeorgianScript = 0x17,kFontArmenianScript = 0x18,kFontSimpleChineseScript = 0x19,kFontTibetanScript = 0x1A,kFontMongolianScript = 0x1B,kFontGeezScript = 0x1C,kFontEthiopicScript = 0x1C,kFontAmharicScript = 0x1C,kFontSlavicScript = 0x1D,kFontEastEuropeanRomanScript = 0x1D,kFontVietnameseScript = 0x1E,kFontExtendedArabicScript = 0x1F,kFontSindhiScript = 0x1F,kFontUninterpretedScript = 0x20,};
enum _BDDF7F68814078A03221B875C4265D26 {kAudioChannelBit_Left = 0x1,kAudioChannelBit_Right = 0x2,kAudioChannelBit_Center = 0x4,kAudioChannelBit_LFEScreen = 0x8,kAudioChannelBit_LeftSurround = 0x10,kAudioChannelBit_RightSurround = 0x20,kAudioChannelBit_LeftCenter = 0x40,kAudioChannelBit_RightCenter = 0x80,kAudioChannelBit_CenterSurround = 0x100,kAudioChannelBit_LeftSurroundDirect = 0x200,kAudioChannelBit_RightSurroundDirect = 0x400,kAudioChannelBit_TopCenterSurround = 0x800,kAudioChannelBit_VerticalHeightLeft = 0x1000,kAudioChannelBit_VerticalHeightCenter = 0x2000,kAudioChannelBit_VerticalHeightRight = 0x4000,kAudioChannelBit_TopBackLeft = 0x8000,kAudioChannelBit_TopBackCenter = 0x10000,kAudioChannelBit_TopBackRight = 0x20000,kAudioChannelBit_LeftTopFront = 0x1000,kAudioChannelBit_CenterTopFront = 0x2000,kAudioChannelBit_RightTopFront = 0x4000,kAudioChannelBit_LeftTopMiddle = 0x200000,kAudioChannelBit_CenterTopMiddle = 0x800,kAudioChannelBit_RightTopMiddle = 0x800000,kAudioChannelBit_LeftTopRear = 0x1000000,kAudioChannelBit_CenterTopRear = 0x2000000,kAudioChannelBit_RightTopRear = 0x4000000,};
enum _BDE16939882C613BF36D3A55E32F32F1 {UIControlEventTouchDown = 0x1,UIControlEventTouchDownRepeat = 0x2,UIControlEventTouchDragInside = 0x4,UIControlEventTouchDragOutside = 0x8,UIControlEventTouchDragEnter = 0x10,UIControlEventTouchDragExit = 0x20,UIControlEventTouchUpInside = 0x40,UIControlEventTouchUpOutside = 0x80,UIControlEventTouchCancel = 0x100,UIControlEventValueChanged = 0x1000,UIControlEventPrimaryActionTriggered = 0x2000,UIControlEventMenuActionTriggered = 0x4000,UIControlEventEditingDidBegin = 0x10000,UIControlEventEditingChanged = 0x20000,UIControlEventEditingDidEnd = 0x40000,UIControlEventEditingDidEndOnExit = 0x80000,UIControlEventAllTouchEvents = 0xFFF,UIControlEventAllEditingEvents = 0xF0000,UIControlEventApplicationReserved = 0xF000000,UIControlEventSystemReserved = 0xF0000000,UIControlEventAllEvents = 0xFFFFFFFF,};
enum _BDF5D95B5E98A5F10CB2391B28C2AF01 {UISegmentedControlNoSegment = 0xFFFFFFFF,};
enum _BE2D715C434EA19E403B8F53D3521E63 {SKCloudServiceCapabilityNone = 0x0,SKCloudServiceCapabilityMusicCatalogPlayback = 0x1,SKCloudServiceCapabilityMusicCatalogSubscriptionEligible = 0x2,SKCloudServiceCapabilityAddToCloudMusicLibrary = 0x100,};
enum _BE3053540F863D381B7C96AF8B616620 {kFontNoNameCode = 0xFFFFFFFF,};
enum _BEF0FEE338D8C2075C08918B98690641 {MTLBarrierScopeBuffers = 0x1,MTLBarrierScopeTextures = 0x2,MTLBarrierScopeRenderTargets = 0x4,};
enum _BF5B08D02CF5E6F9782BDE032B162D89 {kIOSurfaceMapCacheShift = 0x8,kIOSurfaceMapDefaultCache = 0x0,kIOSurfaceMapInhibitCache = 0x100,kIOSurfaceMapWriteThruCache = 0x200,kIOSurfaceMapCopybackCache = 0x300,kIOSurfaceMapWriteCombineCache = 0x400,kIOSurfaceMapCopybackInnerCache = 0x500,};
enum _BF5D1678FD37A46F568AF6B46B42F6EF {kCMVideoCodecType_422YpCbCr8 = 0x32767579,kCMVideoCodecType_Animation = 0x726C6520,kCMVideoCodecType_Cinepak = 0x63766964,kCMVideoCodecType_JPEG = 0x6A706567,kCMVideoCodecType_JPEG_OpenDML = 0x646D6231,kCMVideoCodecType_SorensonVideo = 0x53565131,kCMVideoCodecType_SorensonVideo3 = 0x53565133,kCMVideoCodecType_H263 = 0x68323633,kCMVideoCodecType_H264 = 0x61766331,kCMVideoCodecType_HEVC = 0x68766331,kCMVideoCodecType_HEVCWithAlpha = 0x6D757861,kCMVideoCodecType_MPEG4Video = 0x6D703476,kCMVideoCodecType_MPEG2Video = 0x6D703276,kCMVideoCodecType_MPEG1Video = 0x6D703176,kCMVideoCodecType_DVCNTSC = 0x64766320,kCMVideoCodecType_DVCPAL = 0x64766370,kCMVideoCodecType_DVCProPAL = 0x64767070,kCMVideoCodecType_DVCPro50NTSC = 0x6476356E,kCMVideoCodecType_DVCPro50PAL = 0x64763570,kCMVideoCodecType_DVCPROHD720p60 = 0x64766870,kCMVideoCodecType_DVCPROHD720p50 = 0x64766871,kCMVideoCodecType_DVCPROHD1080i60 = 0x64766836,kCMVideoCodecType_DVCPROHD1080i50 = 0x64766835,kCMVideoCodecType_DVCPROHD1080p30 = 0x64766833,kCMVideoCodecType_DVCPROHD1080p25 = 0x64766832,kCMVideoCodecType_AppleProRes4444XQ = 0x61703478,kCMVideoCodecType_AppleProRes4444 = 0x61703468,kCMVideoCodecType_AppleProRes422HQ = 0x61706368,kCMVideoCodecType_AppleProRes422 = 0x6170636E,kCMVideoCodecType_AppleProRes422LT = 0x61706373,kCMVideoCodecType_AppleProRes422Proxy = 0x6170636F,kCMVideoCodecType_AppleProResRAW = 0x6170726E,kCMVideoCodecType_AppleProResRAWHQ = 0x61707268,};
struct _BF7AC7AAFAE2A9D4F26CD1E6B816F6B2 {int s1;int s2;};
enum _BFF3924BB079154768F40DC8B09FF92B {kCFRunLoopEntry = 0x1,kCFRunLoopBeforeTimers = 0x2,kCFRunLoopBeforeSources = 0x4,kCFRunLoopBeforeWaiting = 0x20,kCFRunLoopAfterWaiting = 0x40,kCFRunLoopExit = 0x80,kCFRunLoopAllActivities = 0xFFFFFFF,};
enum _BFF45663C076824B6420D28750576055 {NSURLErrorCancelledReasonUserForceQuitApplication = 0x0,NSURLErrorCancelledReasonBackgroundUpdatesDisabled = 0x1,NSURLErrorCancelledReasonInsufficientSystemResources = 0x2,};
enum _BFFA002D6320F40CC26E98E085C56EAD {kNoTransliterationSelector = 0x0,kHanjaToHangulSelector = 0x1,kHiraganaToKatakanaSelector = 0x2,kKatakanaToHiraganaSelector = 0x3,kKanaToRomanizationSelector = 0x4,kRomanizationToHiraganaSelector = 0x5,kRomanizationToKatakanaSelector = 0x6,kHanjaToHangulAltOneSelector = 0x7,kHanjaToHangulAltTwoSelector = 0x8,kHanjaToHangulAltThreeSelector = 0x9,};
enum _C02EDD7D1E07654FF39DFEB6EB3D41D1 {SKTileAdjacencyUp = 0x1,SKTileAdjacencyUpperRight = 0x2,SKTileAdjacencyRight = 0x4,SKTileAdjacencyLowerRight = 0x8,SKTileAdjacencyDown = 0x10,SKTileAdjacencyLowerLeft = 0x20,SKTileAdjacencyLeft = 0x40,SKTileAdjacencyUpperLeft = 0x80,SKTileAdjacencyAll = 0xFF,SKTileHexFlatAdjacencyUp = 0x1,SKTileHexFlatAdjacencyUpperRight = 0x2,SKTileHexFlatAdjacencyLowerRight = 0x4,SKTileHexFlatAdjacencyDown = 0x8,SKTileHexFlatAdjacencyLowerLeft = 0x10,SKTileHexFlatAdjacencyUpperLeft = 0x20,SKTileHexFlatAdjacencyAll = 0x3F,SKTileHexPointyAdjacencyUpperLeft = 0x1,SKTileHexPointyAdjacencyUpperRight = 0x2,SKTileHexPointyAdjacencyRight = 0x4,SKTileHexPointyAdjacencyLowerRight = 0x8,SKTileHexPointyAdjacencyLowerLeft = 0x10,SKTileHexPointyAdjacencyLeft = 0x20,SKTileHexPointyAdjacencyAdd = 0x3F,SKTileAdjacencyUpEdge = 0x7C,SKTileAdjacencyUpperRightEdge = 0x70,SKTileAdjacencyRightEdge = 0xF1,SKTileAdjacencyLowerRightEdge = 0xC1,SKTileAdjacencyDownEdge = 0xC7,SKTileAdjacencyLowerLeftEdge = 0x7,SKTileAdjacencyLeftEdge = 0x1F,SKTileAdjacencyUpperLeftEdge = 0x1C,SKTileAdjacencyUpperRightCorner = 0xDF,SKTileAdjacencyLowerRightCorner = 0x7F,SKTileAdjacencyLowerLeftCorner = 0xFD,SKTileAdjacencyUpperLeftCorner = 0xF7,};
enum _C04B823BC1104BFF62A093F7D0D3339D {kJUSTTag = 0x6A757374,kJUSTCurrentVersion = 0x10000,kJUSTStandardFormat = 0x0,kJUSTnoGlyphcode = 0xFFFF,kJUSTpcDecompositionAction = 0x0,kJUSTpcUnconditionalAddAction = 0x1,kJUSTpcConditionalAddAction = 0x2,kJUSTpcGlyphStretchAction = 0x3,kJUSTpcDuctilityAction = 0x4,kJUSTpcGlyphRepeatAddAction = 0x5,};
enum _C118E022580A117238961EB11E7BE2B9 {kAudioUnitSubType_Sampler = 0x73616D70,kAudioUnitSubType_MIDISynth = 0x6D73796E,};
enum _C126C4B27E28F9D96A4DEF68B978152D {UITableViewCellStateDefaultMask = 0x0,UITableViewCellStateShowingEditControlMask = 0x1,UITableViewCellStateShowingDeleteConfirmationMask = 0x2,};
enum _C19576C26F3E7406196552AB2C00ECF7 {featureFontTableTag = 0x66656174,};
enum _C218BC050ABB8A20DD8CEFFA3F1D5C9D {kCMBlockBufferAssureMemoryNowFlag = 0x1,kCMBlockBufferAlwaysCopyDataFlag = 0x2,kCMBlockBufferDontOptimizeDepthFlag = 0x4,kCMBlockBufferPermitEmptyReferenceFlag = 0x8,};
enum _C239664F47778D5F0D607EFBD6A6C52E {SCNPhysicsCollisionCategoryDefault = 0x1,SCNPhysicsCollisionCategoryStatic = 0x2,SCNPhysicsCollisionCategoryAll = 0xFFFFFFFFFFFFFFFF,};
enum _C2C19CD9532270821AFE2DBB9F16A2BC {kExtAudioFileProperty_FileDataFormat = 0x66666D74,kExtAudioFileProperty_FileChannelLayout = 0x66636C6F,kExtAudioFileProperty_ClientDataFormat = 0x63666D74,kExtAudioFileProperty_ClientChannelLayout = 0x63636C6F,kExtAudioFileProperty_CodecManufacturer = 0x636D616E,kExtAudioFileProperty_AudioConverter = 0x61636E76,kExtAudioFileProperty_AudioFile = 0x6166696C,kExtAudioFileProperty_FileMaxPacketSize = 0x666D7073,kExtAudioFileProperty_ClientMaxPacketSize = 0x636D7073,kExtAudioFileProperty_FileLengthFrames = 0x2366726D,kExtAudioFileProperty_ConverterConfig = 0x61636366,kExtAudioFileProperty_IOBufferSizeBytes = 0x696F6273,kExtAudioFileProperty_IOBuffer = 0x696F6266,kExtAudioFileProperty_PacketTable = 0x78707469,};
enum _C2F0D6A3788C6948372E8DFD2A197662 {kCMMuxedStreamType_MPEG1System = 0x6D703173,kCMMuxedStreamType_MPEG2Transport = 0x6D703274,kCMMuxedStreamType_MPEG2Program = 0x6D703270,kCMMuxedStreamType_DV = 0x64762020,};
enum _C2F9353B9A68F5D2E88833BE97650027 {MTLAccelerationStructureInstanceFlagNone = 0x0,MTLAccelerationStructureInstanceFlagDisableTriangleCulling = 0x1,MTLAccelerationStructureInstanceFlagTriangleFrontFacingWindingCounterClockwise = 0x2,MTLAccelerationStructureInstanceFlagOpaque = 0x4,MTLAccelerationStructureInstanceFlagNonOpaque = 0x8,};
enum _C3560540691560C7AE6978931774AF58 {ALAssetsLibraryUnknownError = 0xFFFFFFFF,ALAssetsLibraryWriteFailedError = 0xFFFFF31C,ALAssetsLibraryWriteBusyError = 0xFFFFF31B,ALAssetsLibraryWriteInvalidDataError = 0xFFFFF31A,ALAssetsLibraryWriteIncompatibleDataError = 0xFFFFF319,ALAssetsLibraryWriteDataEncodingError = 0xFFFFF318,ALAssetsLibraryWriteDiskSpaceError = 0xFFFFF317,ALAssetsLibraryDataUnavailableError = 0xFFFFF312,ALAssetsLibraryAccessUserDeniedError = 0xFFFFF311,ALAssetsLibraryAccessGloballyDeniedError = 0xFFFFF310,};
enum _C370642698A18980CCACE263B5DDEA18 {kRandomParam_BoundA = 0x0,kRandomParam_BoundB = 0x1,kRandomParam_Curve = 0x2,};
enum _C3AB69B1D3FBD002BBF57940741F1394 {kAUSamplerParam_Gain = 0x384,kAUSamplerParam_CoarseTuning = 0x385,kAUSamplerParam_FineTuning = 0x386,kAUSamplerParam_Pan = 0x387,};
enum _C3B0C4E061167380AF4C40E62E107BF3 {kAudioQueueProperty_ChannelAssignments = 0x61716361,};
enum _C4147401E2BCB9171660F66EAD410907 {MTLResourceCPUCacheModeDefaultCache = 0x0,MTLResourceCPUCacheModeWriteCombined = 0x1,MTLResourceStorageModeShared = 0x0,MTLResourceStorageModeManaged = 0x10,MTLResourceStorageModePrivate = 0x20,MTLResourceStorageModeMemoryless = 0x30,MTLResourceHazardTrackingModeDefault = 0x0,MTLResourceHazardTrackingModeUntracked = 0x100,MTLResourceHazardTrackingModeTracked = 0x200,MTLResourceOptionCPUCacheModeDefault = 0x0,MTLResourceOptionCPUCacheModeWriteCombined = 0x1,};
enum _C46CF23EF49AB172E9F4E8DF388FB330 {SCNDebugOptionNone = 0x0,SCNDebugOptionShowPhysicsShapes = 0x1,SCNDebugOptionShowBoundingBoxes = 0x2,SCNDebugOptionShowLightInfluences = 0x4,SCNDebugOptionShowLightExtents = 0x8,SCNDebugOptionShowPhysicsFields = 0x10,SCNDebugOptionShowWireframe = 0x20,SCNDebugOptionRenderAsWireframe = 0x40,SCNDebugOptionShowSkeletons = 0x80,SCNDebugOptionShowCreases = 0x100,SCNDebugOptionShowConstraints = 0x200,SCNDebugOptionShowCameras = 0x400,};
enum _C4AAEE525FB291CA6A33664A36BC0CE5 {kSecPaddingNone = 0x0,kSecPaddingPKCS1 = 0x1,kSecPaddingOAEP = 0x2,kSecPaddingSigRaw = 0x4000,kSecPaddingPKCS1MD2 = 0x8000,kSecPaddingPKCS1MD5 = 0x8001,kSecPaddingPKCS1SHA1 = 0x8002,kSecPaddingPKCS1SHA224 = 0x8003,kSecPaddingPKCS1SHA256 = 0x8004,kSecPaddingPKCS1SHA384 = 0x8005,kSecPaddingPKCS1SHA512 = 0x8006,};
enum _C572CFD1A022B80F7E8901666537C798 {kAudioSessionBeginInterruption = 0x1,kAudioSessionEndInterruption = 0x0,};
enum _C5DCDDDDB6E3D18819A7AFB15434726D {AVAssetReferenceRestrictionForbidNone = 0x0,AVAssetReferenceRestrictionForbidRemoteReferenceToLocal = 0x1,AVAssetReferenceRestrictionForbidLocalReferenceToRemote = 0x2,AVAssetReferenceRestrictionForbidCrossSiteReference = 0x4,AVAssetReferenceRestrictionForbidLocalReferenceToLocal = 0x8,AVAssetReferenceRestrictionForbidAll = 0xFFFF,AVAssetReferenceRestrictionDefaultPolicy = 0x2,};
enum _C671786C67A263814CB9605391FC1BAB {kCFUserNotificationStopAlertLevel = 0x0,kCFUserNotificationNoteAlertLevel = 0x1,kCFUserNotificationCautionAlertLevel = 0x2,kCFUserNotificationPlainAlertLevel = 0x3,};
enum _C683D0F4D3FA39C3998C6787D2856454 {kUnknownType = 0x3F3F3F3F,};
enum _C6D365DBA7DEE5B61BACB19D0609593F {kAudioChannelFlags_AllOff = 0x0,kAudioChannelFlags_RectangularCoordinates = 0x1,kAudioChannelFlags_SphericalCoordinates = 0x2,kAudioChannelFlags_Meters = 0x4,};
enum _C6E92059114648C79DD2192DE7816A71 {kVTDecodeFrame_EnableAsynchronousDecompression = 0x1,kVTDecodeFrame_DoNotOutputFrame = 0x2,kVTDecodeFrame_1xRealTimePlayback = 0x4,kVTDecodeFrame_EnableTemporalProcessing = 0x8,};
enum _C7C245B602392C34E387A8F111DE6F59 {kKERXOrderedList = 0x0,kKERXStateTable = 0x1,kKERXSimpleArray = 0x2,kKERXControlPoint = 0x4,kKERXIndexArray = 0x6,};
enum _C81ADEA34F57A38D2BC56497D0BDCDF2 {kCFCalendarUnitEra = 0x2,kCFCalendarUnitYear = 0x4,kCFCalendarUnitMonth = 0x8,kCFCalendarUnitDay = 0x10,kCFCalendarUnitHour = 0x20,kCFCalendarUnitMinute = 0x40,kCFCalendarUnitSecond = 0x80,kCFCalendarUnitWeek = 0x100,kCFCalendarUnitWeekday = 0x200,kCFCalendarUnitWeekdayOrdinal = 0x400,kCFCalendarUnitQuarter = 0x800,kCFCalendarUnitWeekOfMonth = 0x1000,kCFCalendarUnitWeekOfYear = 0x2000,kCFCalendarUnitYearForWeekOfYear = 0x4000,};
enum _C8615DCF4FABDE6D4D8C309CC9B37005 {kAppleSoftwareAudioCodecManufacturer = 0x6170706C,kAppleHardwareAudioCodecManufacturer = 0x61706877,};
enum _C8B218B375578C5275C0A37068269254 {nw_browse_result_change_invalid = 0x0,nw_browse_result_change_identical = 0x1,nw_browse_result_change_result_added = 0x2,nw_browse_result_change_result_removed = 0x4,nw_browse_result_change_interface_added = 0x8,nw_browse_result_change_interface_removed = 0x10,nw_browse_result_change_txt_record_changed = 0x20,};
enum _C900E52A8BF0F81099D95162B59EE74B {CBAttributePermissionsReadable = 0x1,CBAttributePermissionsWriteable = 0x2,CBAttributePermissionsReadEncryptionRequired = 0x4,CBAttributePermissionsWriteEncryptionRequired = 0x8,};
enum _C90E008D5C21788226153B5337B80D33 {kAudioSessionCategory_AmbientSound = 0x616D6269,kAudioSessionCategory_SoloAmbientSound = 0x736F6C6F,kAudioSessionCategory_MediaPlayback = 0x6D656469,kAudioSessionCategory_RecordAudio = 0x72656361,kAudioSessionCategory_PlayAndRecord = 0x706C6172,kAudioSessionCategory_AudioProcessing = 0x70726F63,};
enum _C9727765017742CA458A6A6037E25EA5 {kCGGradientDrawsBeforeStartLocation = 0x1,kCGGradientDrawsAfterEndLocation = 0x2,};
enum _C9DA20B5A85B219D9B54B3F16018FB3C {kJSPropertyAttributeNone = 0x0,kJSPropertyAttributeReadOnly = 0x2,kJSPropertyAttributeDontEnum = 0x4,kJSPropertyAttributeDontDelete = 0x8,};
struct _C9F83CCA9902694B07BD70569193FE6A {void *_data;void *_reserved;};
enum _CA3289329D46B8851BF49A5EF2E7C80E {kJUSTKashidaPriority = 0x0,kJUSTSpacePriority = 0x1,kJUSTLetterPriority = 0x2,kJUSTNullPriority = 0x3,kJUSTPriorityCount = 0x4,};
enum _CA80C3A6969809B38C3982F0DEE533A3 {kAudioUnitSubType_MultiChannelMixer = 0x6D636D78,kAudioUnitSubType_MatrixMixer = 0x6D786D78,kAudioUnitSubType_SpatialMixer = 0x3364656D,};
enum _CAB6EC034F054A46A70900E4438E5D89 {kAudioUnitProperty_ReverbRoomType = 0xA,kAudioUnitProperty_UsesInternalReverb = 0x3ED,kAudioUnitProperty_SpatializationAlgorithm = 0xBB8,kAudioUnitProperty_SpatialMixerRenderingFlags = 0xBBB,kAudioUnitProperty_SpatialMixerSourceMode = 0xBBD,kAudioUnitProperty_SpatialMixerDistanceParams = 0xBC2,kAudioUnitProperty_SpatialMixerAttenuationCurve = 0xBC5,kAudioUnitProperty_SpatialMixerOutputType = 0xC1C,kAudioUnitProperty_SpatialMixerPointSourceInHeadMode = 0xC1F,};
enum _CB065E5D5DE5B43431A74B76112B713E {UIControlStateNormal = 0x0,UIControlStateHighlighted = 0x1,UIControlStateDisabled = 0x2,UIControlStateSelected = 0x4,UIControlStateFocused = 0x8,UIControlStateApplication = 0xFF0000,UIControlStateReserved = 0xFF000000,};
enum _CC7F032945654EEA48B403B807475DEC {INRideFeedbackTypeOptionRate = 0x1,INRideFeedbackTypeOptionTip = 0x2,};
enum _CDED4CBF4628AC58E59BC1BD48051108 {k3DMixerRenderingFlags_InterAuralDelay = 0x1,k3DMixerRenderingFlags_DopplerShift = 0x2,k3DMixerRenderingFlags_DistanceAttenuation = 0x4,k3DMixerRenderingFlags_DistanceFilter = 0x8,k3DMixerRenderingFlags_DistanceDiffusion = 0x10,k3DMixerRenderingFlags_LinearDistanceAttenuation = 0x20,k3DMixerRenderingFlags_ConstantReverbBlend = 0x40,};
enum _CE3D5D9D248705C5B927626EF7A29C1C {PA_INT = 0x1,PA_CHAR = 0x2,PA_WCHAR = 0x4,PA_STRING = 0x8,PA_WSTRING = 0x10,PA_POINTER = 0x20,PA_FLOAT = 0x40,PA_DOUBLE = 0x80,PA_VECTOR = 0x100,};
enum _CE6F5B831CB5C4BB726A627CBDF39069 {kCAF_SMPTE_TimeTypeNone = 0x0,kCAF_SMPTE_TimeType24 = 0x1,kCAF_SMPTE_TimeType25 = 0x2,kCAF_SMPTE_TimeType30Drop = 0x3,kCAF_SMPTE_TimeType30 = 0x4,kCAF_SMPTE_TimeType2997 = 0x5,kCAF_SMPTE_TimeType2997Drop = 0x6,kCAF_SMPTE_TimeType60 = 0x7,kCAF_SMPTE_TimeType5994 = 0x8,kCAF_SMPTE_TimeType60Drop = 0x9,kCAF_SMPTE_TimeType5994Drop = 0xA,kCAF_SMPTE_TimeType50 = 0xB,kCAF_SMPTE_TimeType2398 = 0xC,};
enum _CE8931C3FB2415E91D1F1DB7C5D2E1D7 {NSCaseInsensitiveSearch = 0x1,NSLiteralSearch = 0x2,NSBackwardsSearch = 0x4,NSAnchoredSearch = 0x8,NSNumericSearch = 0x40,NSDiacriticInsensitiveSearch = 0x80,NSWidthInsensitiveSearch = 0x100,NSForcedOrderingSearch = 0x200,NSRegularExpressionSearch = 0x400,};
enum _CEDC741D2F8A374775716CFD5D3889D1 {kCCModeOptionCTR_BE = 0x2,};
enum _CEE3AAD1A1333C022A8B90B409B592AE {kDNSServiceProtocol_IPv4 = 0x1,kDNSServiceProtocol_IPv6 = 0x2,kDNSServiceProtocol_UDP = 0x10,kDNSServiceProtocol_TCP = 0x20,};
enum _CEEA10F90899B11F634A472C96E8B7D2 {MPSNNPaddingMethodAlignCentered = 0x0,MPSNNPaddingMethodAlignTopLeft = 0x1,MPSNNPaddingMethodAlignBottomRight = 0x2,MPSNNPaddingMethodAlign_reserved = 0x3,MPSNNPaddingMethodAlignMask = 0x3,MPSNNPaddingMethodAddRemainderToTopLeft = 0x0,MPSNNPaddingMethodAddRemainderToTopRight = 0x4,MPSNNPaddingMethodAddRemainderToBottomLeft = 0x8,MPSNNPaddingMethodAddRemainderToBottomRight = 0xC,MPSNNPaddingMethodAddRemainderToMask = 0xC,MPSNNPaddingMethodSizeValidOnly = 0x0,MPSNNPaddingMethodSizeSame = 0x10,MPSNNPaddingMethodSizeFull = 0x20,MPSNNPaddingMethodSize_reserved = 0x30,MPSNNPaddingMethodCustomWhitelistForNodeFusion = 0x2000,MPSNNPaddingMethodCustom = 0x4000,MPSNNPaddingMethodSizeMask = 0x7F0,MPSNNPaddingMethodExcludeEdges = 0x8000,};
enum _CFE5ADD53DBC89C3855623AE98EC7D01 {kCCSuccess = 0x0,kCCParamError = 0xFFFFEF34,kCCBufferTooSmall = 0xFFFFEF33,kCCMemoryFailure = 0xFFFFEF32,kCCAlignmentError = 0xFFFFEF31,kCCDecodeError = 0xFFFFEF30,kCCUnimplemented = 0xFFFFEF2F,kCCOverflow = 0xFFFFEF2E,kCCRNGFailure = 0xFFFFEF2D,kCCUnspecifiedError = 0xFFFFEF2C,kCCCallSequenceError = 0xFFFFEF2B,kCCKeySizeError = 0xFFFFEF2A,kCCInvalidKey = 0xFFFFEF29,};
typedef MTLArgument *_D11621DCFF1B4C780DA92ABF4A0512AD;
enum _D13CB6B0524E0935632622CFF814C94A {kFullWidthKanaSelector = 0x0,kProportionalKanaSelector = 0x1,};
enum _D19CDE9AEDE38C6C782AA0B32C4B8E22 {kAudioFileGlobalInfo_ReadableTypes = 0x61667266,kAudioFileGlobalInfo_WritableTypes = 0x61667766,kAudioFileGlobalInfo_FileTypeName = 0x66746E6D,kAudioFileGlobalInfo_AvailableStreamDescriptionsForFormat = 0x73646964,kAudioFileGlobalInfo_AvailableFormatIDs = 0x666D6964,kAudioFileGlobalInfo_AllExtensions = 0x616C7874,kAudioFileGlobalInfo_AllHFSTypeCodes = 0x61686673,kAudioFileGlobalInfo_AllUTIs = 0x61757469,kAudioFileGlobalInfo_AllMIMETypes = 0x616D696D,kAudioFileGlobalInfo_ExtensionsForType = 0x66657874,kAudioFileGlobalInfo_HFSTypeCodesForType = 0x66686673,kAudioFileGlobalInfo_UTIsForType = 0x66757469,kAudioFileGlobalInfo_MIMETypesForType = 0x666D696D,kAudioFileGlobalInfo_TypesForMIMEType = 0x746D696D,kAudioFileGlobalInfo_TypesForUTI = 0x74757469,kAudioFileGlobalInfo_TypesForHFSTypeCode = 0x74686673,kAudioFileGlobalInfo_TypesForExtension = 0x74657874,};
enum _D2BCF7626A4F3B200C0F5A73797E0B4B {kKERXTag = 0x6B657278,kKERXCurrentVersion = 0x20000,kKERXVertical = 0x80000000,kKERXResetCrossStream = 0x8000,kKERXCrossStream = 0x40000000,kKERXVariation = 0x20000000,kKERXDescending = 0x10000000,kKERXUnusedBits = 0xFFFFF00,kKERXFormatMask = 0xFF,};
enum _D2DF3E8709859436918883FBE5BBB8A8 {SCNColorMaskNone = 0x0,SCNColorMaskRed = 0x8,SCNColorMaskGreen = 0x4,SCNColorMaskBlue = 0x2,SCNColorMaskAlpha = 0x1,SCNColorMaskAll = 0xF,};
enum _D36249F166BB941DFEFB221DDE39CBC6 {kAudioFormatLinearPCM = 0x6C70636D,kAudioFormatAC3 = 0x61632D33,kAudioFormat60958AC3 = 0x63616333,kAudioFormatAppleIMA4 = 0x696D6134,kAudioFormatMPEG4AAC = 0x61616320,kAudioFormatMPEG4CELP = 0x63656C70,kAudioFormatMPEG4HVXC = 0x68767863,kAudioFormatMPEG4TwinVQ = 0x74777671,kAudioFormatMACE3 = 0x4D414333,kAudioFormatMACE6 = 0x4D414336,kAudioFormatULaw = 0x756C6177,kAudioFormatALaw = 0x616C6177,kAudioFormatQDesign = 0x51444D43,kAudioFormatQDesign2 = 0x51444D32,kAudioFormatQUALCOMM = 0x51636C70,kAudioFormatMPEGLayer1 = 0x2E6D7031,kAudioFormatMPEGLayer2 = 0x2E6D7032,kAudioFormatMPEGLayer3 = 0x2E6D7033,kAudioFormatTimeCode = 0x74696D65,kAudioFormatMIDIStream = 0x6D696469,kAudioFormatParameterValueStream = 0x61707673,kAudioFormatAppleLossless = 0x616C6163,kAudioFormatMPEG4AAC_HE = 0x61616368,kAudioFormatMPEG4AAC_LD = 0x6161636C,kAudioFormatMPEG4AAC_ELD = 0x61616365,kAudioFormatMPEG4AAC_ELD_SBR = 0x61616366,kAudioFormatMPEG4AAC_ELD_V2 = 0x61616367,kAudioFormatMPEG4AAC_HE_V2 = 0x61616370,kAudioFormatMPEG4AAC_Spatial = 0x61616373,kAudioFormatMPEGD_USAC = 0x75736163,kAudioFormatAMR = 0x73616D72,kAudioFormatAMR_WB = 0x73617762,kAudioFormatAudible = 0x41554442,kAudioFormatiLBC = 0x696C6263,kAudioFormatDVIIntelIMA = 0x6D730011,kAudioFormatMicrosoftGSM = 0x6D730031,kAudioFormatAES3 = 0x61657333,kAudioFormatEnhancedAC3 = 0x65632D33,kAudioFormatFLAC = 0x666C6163,kAudioFormatOpus = 0x6F707573,};
enum _D4513A8DFD67E244D000A48FE8E20B1F {kAudioSessionCategory_UserInterfaceSoundEffects = 0x75696678,kAudioSessionCategory_LiveAudio = 0x6C697665,};
enum _D478E03FC235A6493B6F000EF11C2F81 {kAudioConverterErr_FormatNotSupported = 0x666D743F,kAudioConverterErr_OperationNotSupported = 0x6F703F3F,kAudioConverterErr_PropertyNotSupported = 0x70726F70,kAudioConverterErr_InvalidInputSize = 0x696E737A,kAudioConverterErr_InvalidOutputSize = 0x6F74737A,kAudioConverterErr_UnspecifiedError = 0x77686174,kAudioConverterErr_BadPropertySizeError = 0x2173697A,kAudioConverterErr_RequiresPacketDescriptionsError = 0x21706B64,kAudioConverterErr_InputSampleRateOutOfRange = 0x21697372,kAudioConverterErr_OutputSampleRateOutOfRange = 0x216F7372,};
enum _D49AC66471C7D415D7036220D59E3269 {kCMMediaType_Video = 0x76696465,kCMMediaType_Audio = 0x736F756E,kCMMediaType_Muxed = 0x6D757878,kCMMediaType_Text = 0x74657874,kCMMediaType_ClosedCaption = 0x636C6370,kCMMediaType_Subtitle = 0x7362746C,kCMMediaType_TimeCode = 0x746D6364,kCMMediaType_Metadata = 0x6D657461,};
enum _D4B25C2429E5A3D9CA34D9EC54535A0A {NSPropertyListImmutable = 0x0,NSPropertyListMutableContainers = 0x1,NSPropertyListMutableContainersAndLeaves = 0x2,};
enum _D541928BDFA02022DF83D0D1FBB869AD {kParametricEQParam_CenterFreq = 0x0,kParametricEQParam_Q = 0x1,kParametricEQParam_Gain = 0x2,};
enum _D5AF57626CDC240FD719FAF0304C7835 {kAudioUnitParameterFlag_CFNameRelease = 0x10,kAudioUnitParameterFlag_OmitFromPresets = 0x2000,kAudioUnitParameterFlag_PlotHistory = 0x4000,kAudioUnitParameterFlag_MeterReadOnly = 0x8000,kAudioUnitParameterFlag_DisplayMask = 0x470000,kAudioUnitParameterFlag_DisplaySquareRoot = 0x10000,kAudioUnitParameterFlag_DisplaySquared = 0x20000,kAudioUnitParameterFlag_DisplayCubed = 0x30000,kAudioUnitParameterFlag_DisplayCubeRoot = 0x40000,kAudioUnitParameterFlag_DisplayExponential = 0x50000,kAudioUnitParameterFlag_HasClump = 0x100000,kAudioUnitParameterFlag_ValuesHaveStrings = 0x200000,kAudioUnitParameterFlag_DisplayLogarithmic = 0x400000,kAudioUnitParameterFlag_IsHighResolution = 0x800000,kAudioUnitParameterFlag_NonRealTime = 0x1000000,kAudioUnitParameterFlag_CanRamp = 0x2000000,kAudioUnitParameterFlag_ExpertMode = 0x4000000,kAudioUnitParameterFlag_HasCFNameString = 0x8000000,kAudioUnitParameterFlag_IsGlobalMeta = 0x10000000,kAudioUnitParameterFlag_IsElementMeta = 0x20000000,kAudioUnitParameterFlag_IsReadable = 0x40000000,kAudioUnitParameterFlag_IsWritable = 0x80000000,};
enum _D5BE98FA66D1801FC4DF7EBDE51A854C {PHAssetMediaSubtypeNone = 0x0,PHAssetMediaSubtypePhotoPanorama = 0x1,PHAssetMediaSubtypePhotoHDR = 0x2,PHAssetMediaSubtypePhotoScreenshot = 0x4,PHAssetMediaSubtypePhotoLive = 0x8,PHAssetMediaSubtypePhotoDepthEffect = 0x10,PHAssetMediaSubtypeVideoStreamed = 0x10000,PHAssetMediaSubtypeVideoHighFrameRate = 0x20000,PHAssetMediaSubtypeVideoTimelapse = 0x40000,};
enum _D5C115D5174C086F5E17E3D570B3AB3F {NSFileVersionReplacingByMoving = 0x1,};
enum _D6D2A97A65188245B43AB80032BD594F {kAudioFileStreamParseFlag_Discontinuity = 0x1,};
enum _D70D2CD68DA4EEF8304C3722B4E583D8 {kFontEnglishLanguage = 0x0,kFontFrenchLanguage = 0x1,kFontGermanLanguage = 0x2,kFontItalianLanguage = 0x3,kFontDutchLanguage = 0x4,kFontSwedishLanguage = 0x5,kFontSpanishLanguage = 0x6,kFontDanishLanguage = 0x7,kFontPortugueseLanguage = 0x8,kFontNorwegianLanguage = 0x9,kFontHebrewLanguage = 0xA,kFontJapaneseLanguage = 0xB,kFontArabicLanguage = 0xC,kFontFinnishLanguage = 0xD,kFontGreekLanguage = 0xE,kFontIcelandicLanguage = 0xF,kFontMalteseLanguage = 0x10,kFontTurkishLanguage = 0x11,kFontCroatianLanguage = 0x12,kFontTradChineseLanguage = 0x13,kFontUrduLanguage = 0x14,kFontHindiLanguage = 0x15,kFontThaiLanguage = 0x16,kFontKoreanLanguage = 0x17,kFontLithuanianLanguage = 0x18,kFontPolishLanguage = 0x19,kFontHungarianLanguage = 0x1A,kFontEstonianLanguage = 0x1B,kFontLettishLanguage = 0x1C,kFontLatvianLanguage = 0x1C,kFontSaamiskLanguage = 0x1D,kFontLappishLanguage = 0x1D,kFontFaeroeseLanguage = 0x1E,kFontFarsiLanguage = 0x1F,kFontPersianLanguage = 0x1F,kFontRussianLanguage = 0x20,kFontSimpChineseLanguage = 0x21,kFontFlemishLanguage = 0x22,kFontIrishLanguage = 0x23,kFontAlbanianLanguage = 0x24,kFontRomanianLanguage = 0x25,kFontCzechLanguage = 0x26,kFontSlovakLanguage = 0x27,kFontSlovenianLanguage = 0x28,kFontYiddishLanguage = 0x29,kFontSerbianLanguage = 0x2A,kFontMacedonianLanguage = 0x2B,kFontBulgarianLanguage = 0x2C,kFontUkrainianLanguage = 0x2D,kFontByelorussianLanguage = 0x2E,kFontUzbekLanguage = 0x2F,kFontKazakhLanguage = 0x30,kFontAzerbaijaniLanguage = 0x31,kFontAzerbaijanArLanguage = 0x32,kFontArmenianLanguage = 0x33,kFontGeorgianLanguage = 0x34,kFontMoldavianLanguage = 0x35,kFontKirghizLanguage = 0x36,kFontTajikiLanguage = 0x37,kFontTurkmenLanguage = 0x38,kFontMongolianLanguage = 0x39,kFontMongolianCyrLanguage = 0x3A,kFontPashtoLanguage = 0x3B,kFontKurdishLanguage = 0x3C,kFontKashmiriLanguage = 0x3D,kFontSindhiLanguage = 0x3E,kFontTibetanLanguage = 0x3F,kFontNepaliLanguage = 0x40,kFontSanskritLanguage = 0x41,kFontMarathiLanguage = 0x42,kFontBengaliLanguage = 0x43,kFontAssameseLanguage = 0x44,kFontGujaratiLanguage = 0x45,kFontPunjabiLanguage = 0x46,kFontOriyaLanguage = 0x47,kFontMalayalamLanguage = 0x48,kFontKannadaLanguage = 0x49,kFontTamilLanguage = 0x4A,kFontTeluguLanguage = 0x4B,kFontSinhaleseLanguage = 0x4C,kFontBurmeseLanguage = 0x4D,kFontKhmerLanguage = 0x4E,kFontLaoLanguage = 0x4F,kFontVietnameseLanguage = 0x50,kFontIndonesianLanguage = 0x51,kFontTagalogLanguage = 0x52,kFontMalayRomanLanguage = 0x53,kFontMalayArabicLanguage = 0x54,kFontAmharicLanguage = 0x55,kFontTigrinyaLanguage = 0x56,kFontGallaLanguage = 0x57,kFontOromoLanguage = 0x57,kFontSomaliLanguage = 0x58,kFontSwahiliLanguage = 0x59,kFontRuandaLanguage = 0x5A,kFontRundiLanguage = 0x5B,kFontChewaLanguage = 0x5C,kFontMalagasyLanguage = 0x5D,kFontEsperantoLanguage = 0x5E,kFontWelshLanguage = 0x80,kFontBasqueLanguage = 0x81,kFontCatalanLanguage = 0x82,kFontLatinLanguage = 0x83,kFontQuechuaLanguage = 0x84,kFontGuaraniLanguage = 0x85,kFontAymaraLanguage = 0x86,kFontTatarLanguage = 0x87,kFontUighurLanguage = 0x88,kFontDzongkhaLanguage = 0x89,kFontJavaneseRomLanguage = 0x8A,kFontSundaneseRomLanguage = 0x8B,};
enum _D7268BEE4B761125EB2D333C29D782DB {UICloudSharingPermissionStandard = 0x0,UICloudSharingPermissionAllowPublic = 0x1,UICloudSharingPermissionAllowPrivate = 0x2,UICloudSharingPermissionAllowReadOnly = 0x4,UICloudSharingPermissionAllowReadWrite = 0x8,};
enum _D7289F4C83AEB2468692511DFCFCACCD {UNAuthorizationOptionBadge = 0x1,UNAuthorizationOptionSound = 0x2,UNAuthorizationOptionAlert = 0x4,UNAuthorizationOptionCarPlay = 0x8,UNAuthorizationOptionCriticalAlert = 0x10,UNAuthorizationOptionProvidesAppNotificationSettings = 0x20,UNAuthorizationOptionProvisional = 0x40,UNAuthorizationOptionAnnouncement = 0x80,};
enum _D80DF03722DC76A3B0A0D7401BDA36D4 {kAllTypographicFeaturesType = 0x0,kLigaturesType = 0x1,kCursiveConnectionType = 0x2,kLetterCaseType = 0x3,kVerticalSubstitutionType = 0x4,kLinguisticRearrangementType = 0x5,kNumberSpacingType = 0x6,kSmartSwashType = 0x8,kDiacriticsType = 0x9,kVerticalPositionType = 0xA,kFractionsType = 0xB,kOverlappingCharactersType = 0xD,kTypographicExtrasType = 0xE,kMathematicalExtrasType = 0xF,kOrnamentSetsType = 0x10,kCharacterAlternativesType = 0x11,kDesignComplexityType = 0x12,kStyleOptionsType = 0x13,kCharacterShapeType = 0x14,kNumberCaseType = 0x15,kTextSpacingType = 0x16,kTransliterationType = 0x17,kAnnotationType = 0x18,kKanaSpacingType = 0x19,kIdeographicSpacingType = 0x1A,kUnicodeDecompositionType = 0x1B,kRubyKanaType = 0x1C,kCJKSymbolAlternativesType = 0x1D,kIdeographicAlternativesType = 0x1E,kCJKVerticalRomanPlacementType = 0x1F,kItalicCJKRomanType = 0x20,kCaseSensitiveLayoutType = 0x21,kAlternateKanaType = 0x22,kStylisticAlternativesType = 0x23,kContextualAlternatesType = 0x24,kLowerCaseType = 0x25,kUpperCaseType = 0x26,kLanguageTagType = 0x27,kCJKRomanSpacingType = 0x67,kLastFeatureType = 0xFFFFFFFF,};
enum _D87F2444AEBE713928F83825C9EFAE27 {kSCStatusOK = 0x0,kSCStatusFailed = 0x3E9,kSCStatusInvalidArgument = 0x3EA,kSCStatusAccessError = 0x3EB,kSCStatusNoKey = 0x3EC,kSCStatusKeyExists = 0x3ED,kSCStatusLocked = 0x3EE,kSCStatusNeedLock = 0x3EF,kSCStatusNoStoreSession = 0x7D1,kSCStatusNoStoreServer = 0x7D2,kSCStatusNotifierActive = 0x7D3,kSCStatusNoPrefsSession = 0xBB9,kSCStatusPrefsBusy = 0xBBA,kSCStatusNoConfigFile = 0xBBB,kSCStatusNoLink = 0xBBC,kSCStatusStale = 0xBBD,kSCStatusMaxLink = 0xBBE,kSCStatusReachabilityUnknown = 0xFA1,kSCStatusConnectionNoService = 0x1389,kSCStatusConnectionIgnore = 0x138A,};
enum _D896129C383C122FFE32E905FD78216D {NSXPCConnectionPrivileged = 0x1000,};
enum _D8BAF3C3BE3D2FA2035C64A0FDD5F3AE {NSRegularExpressionCaseInsensitive = 0x1,NSRegularExpressionAllowCommentsAndWhitespace = 0x2,NSRegularExpressionIgnoreMetacharacters = 0x4,NSRegularExpressionDotMatchesLineSeparators = 0x8,NSRegularExpressionAnchorsMatchLines = 0x10,NSRegularExpressionUseUnixLineSeparators = 0x20,NSRegularExpressionUseUnicodeWordBoundaries = 0x40,};
enum _D8FEFD3B2522F58302B38AF5DE236C59 {kAUGraphErr_NodeNotFound = 0xFFFFD594,kAUGraphErr_InvalidConnection = 0xFFFFD593,kAUGraphErr_OutputNodeErr = 0xFFFFD592,kAUGraphErr_CannotDoInCurrentContext = 0xFFFFD591,kAUGraphErr_InvalidAudioUnit = 0xFFFFD590,};
enum _D9083CDF71E6EF7B8A1BA177D25FA2EB {kCFURLBookmarkCreationMinimalBookmarkMask = 0x200,kCFURLBookmarkCreationSuitableForBookmarkFile = 0x400,kCFURLBookmarkCreationWithSecurityScope = 0x800,kCFURLBookmarkCreationSecurityScopeAllowOnlyReadAccess = 0x1000,kCFURLBookmarkCreationPreferFileIDResolutionMask = 0x100,};
enum _D96A95AE7B4538CFE292A75DFE860149 {kRequiredLigaturesOnSelector = 0x0,kRequiredLigaturesOffSelector = 0x1,kCommonLigaturesOnSelector = 0x2,kCommonLigaturesOffSelector = 0x3,kRareLigaturesOnSelector = 0x4,kRareLigaturesOffSelector = 0x5,kLogosOnSelector = 0x6,kLogosOffSelector = 0x7,kRebusPicturesOnSelector = 0x8,kRebusPicturesOffSelector = 0x9,kDiphthongLigaturesOnSelector = 0xA,kDiphthongLigaturesOffSelector = 0xB,kSquaredLigaturesOnSelector = 0xC,kSquaredLigaturesOffSelector = 0xD,kAbbrevSquaredLigaturesOnSelector = 0xE,kAbbrevSquaredLigaturesOffSelector = 0xF,kSymbolLigaturesOnSelector = 0x10,kSymbolLigaturesOffSelector = 0x11,kContextualLigaturesOnSelector = 0x12,kContextualLigaturesOffSelector = 0x13,kHistoricalLigaturesOnSelector = 0x14,kHistoricalLigaturesOffSelector = 0x15,};
enum _DA086A76E41BDFFE0D58B5C5C96FBF9F {kAudioChannelLayoutTag_UseChannelDescriptions = 0x0,kAudioChannelLayoutTag_UseChannelBitmap = 0x10000,kAudioChannelLayoutTag_Mono = 0x640001,kAudioChannelLayoutTag_Stereo = 0x650002,kAudioChannelLayoutTag_StereoHeadphones = 0x660002,kAudioChannelLayoutTag_MatrixStereo = 0x670002,kAudioChannelLayoutTag_MidSide = 0x680002,kAudioChannelLayoutTag_XY = 0x690002,kAudioChannelLayoutTag_Binaural = 0x6A0002,kAudioChannelLayoutTag_Ambisonic_B_Format = 0x6B0004,kAudioChannelLayoutTag_Quadraphonic = 0x6C0004,kAudioChannelLayoutTag_Pentagonal = 0x6D0005,kAudioChannelLayoutTag_Hexagonal = 0x6E0006,kAudioChannelLayoutTag_Octagonal = 0x6F0008,kAudioChannelLayoutTag_Cube = 0x700008,kAudioChannelLayoutTag_MPEG_1_0 = 0x640001,kAudioChannelLayoutTag_MPEG_2_0 = 0x650002,kAudioChannelLayoutTag_MPEG_3_0_A = 0x710003,kAudioChannelLayoutTag_MPEG_3_0_B = 0x720003,kAudioChannelLayoutTag_MPEG_4_0_A = 0x730004,kAudioChannelLayoutTag_MPEG_4_0_B = 0x740004,kAudioChannelLayoutTag_MPEG_5_0_A = 0x750005,kAudioChannelLayoutTag_MPEG_5_0_B = 0x760005,kAudioChannelLayoutTag_MPEG_5_0_C = 0x770005,kAudioChannelLayoutTag_MPEG_5_0_D = 0x780005,kAudioChannelLayoutTag_MPEG_5_1_A = 0x790006,kAudioChannelLayoutTag_MPEG_5_1_B = 0x7A0006,kAudioChannelLayoutTag_MPEG_5_1_C = 0x7B0006,kAudioChannelLayoutTag_MPEG_5_1_D = 0x7C0006,kAudioChannelLayoutTag_MPEG_6_1_A = 0x7D0007,kAudioChannelLayoutTag_MPEG_7_1_A = 0x7E0008,kAudioChannelLayoutTag_MPEG_7_1_B = 0x7F0008,kAudioChannelLayoutTag_MPEG_7_1_C = 0x800008,kAudioChannelLayoutTag_Emagic_Default_7_1 = 0x810008,kAudioChannelLayoutTag_SMPTE_DTV = 0x820008,kAudioChannelLayoutTag_ITU_1_0 = 0x640001,kAudioChannelLayoutTag_ITU_2_0 = 0x650002,kAudioChannelLayoutTag_ITU_2_1 = 0x830003,kAudioChannelLayoutTag_ITU_2_2 = 0x840004,kAudioChannelLayoutTag_ITU_3_0 = 0x710003,kAudioChannelLayoutTag_ITU_3_1 = 0x730004,kAudioChannelLayoutTag_ITU_3_2 = 0x750005,kAudioChannelLayoutTag_ITU_3_2_1 = 0x790006,kAudioChannelLayoutTag_ITU_3_4_1 = 0x800008,kAudioChannelLayoutTag_DVD_0 = 0x640001,kAudioChannelLayoutTag_DVD_1 = 0x650002,kAudioChannelLayoutTag_DVD_2 = 0x830003,kAudioChannelLayoutTag_DVD_3 = 0x840004,kAudioChannelLayoutTag_DVD_4 = 0x850003,kAudioChannelLayoutTag_DVD_5 = 0x860004,kAudioChannelLayoutTag_DVD_6 = 0x870005,kAudioChannelLayoutTag_DVD_7 = 0x710003,kAudioChannelLayoutTag_DVD_8 = 0x730004,kAudioChannelLayoutTag_DVD_9 = 0x750005,kAudioChannelLayoutTag_DVD_10 = 0x880004,kAudioChannelLayoutTag_DVD_11 = 0x890005,kAudioChannelLayoutTag_DVD_12 = 0x790006,kAudioChannelLayoutTag_DVD_13 = 0x730004,kAudioChannelLayoutTag_DVD_14 = 0x750005,kAudioChannelLayoutTag_DVD_15 = 0x880004,kAudioChannelLayoutTag_DVD_16 = 0x890005,kAudioChannelLayoutTag_DVD_17 = 0x790006,kAudioChannelLayoutTag_DVD_18 = 0x8A0005,kAudioChannelLayoutTag_DVD_19 = 0x760005,kAudioChannelLayoutTag_DVD_20 = 0x7A0006,kAudioChannelLayoutTag_AudioUnit_4 = 0x6C0004,kAudioChannelLayoutTag_AudioUnit_5 = 0x6D0005,kAudioChannelLayoutTag_AudioUnit_6 = 0x6E0006,kAudioChannelLayoutTag_AudioUnit_8 = 0x6F0008,kAudioChannelLayoutTag_AudioUnit_5_0 = 0x760005,kAudioChannelLayoutTag_AudioUnit_6_0 = 0x8B0006,kAudioChannelLayoutTag_AudioUnit_7_0 = 0x8C0007,kAudioChannelLayoutTag_AudioUnit_7_0_Front = 0x940007,kAudioChannelLayoutTag_AudioUnit_5_1 = 0x790006,kAudioChannelLayoutTag_AudioUnit_6_1 = 0x7D0007,kAudioChannelLayoutTag_AudioUnit_7_1 = 0x800008,kAudioChannelLayoutTag_AudioUnit_7_1_Front = 0x7E0008,kAudioChannelLayoutTag_AAC_3_0 = 0x720003,kAudioChannelLayoutTag_AAC_Quadraphonic = 0x6C0004,kAudioChannelLayoutTag_AAC_4_0 = 0x740004,kAudioChannelLayoutTag_AAC_5_0 = 0x780005,kAudioChannelLayoutTag_AAC_5_1 = 0x7C0006,kAudioChannelLayoutTag_AAC_6_0 = 0x8D0006,kAudioChannelLayoutTag_AAC_6_1 = 0x8E0007,kAudioChannelLayoutTag_AAC_7_0 = 0x8F0007,kAudioChannelLayoutTag_AAC_7_1 = 0x7F0008,kAudioChannelLayoutTag_AAC_7_1_B = 0xB70008,kAudioChannelLayoutTag_AAC_7_1_C = 0xB80008,kAudioChannelLayoutTag_AAC_Octagonal = 0x900008,kAudioChannelLayoutTag_TMH_10_2_std = 0x910010,kAudioChannelLayoutTag_TMH_10_2_full = 0x920015,kAudioChannelLayoutTag_AC3_1_0_1 = 0x950002,kAudioChannelLayoutTag_AC3_3_0 = 0x960003,kAudioChannelLayoutTag_AC3_3_1 = 0x970004,kAudioChannelLayoutTag_AC3_3_0_1 = 0x980004,kAudioChannelLayoutTag_AC3_2_1_1 = 0x990004,kAudioChannelLayoutTag_AC3_3_1_1 = 0x9A0005,kAudioChannelLayoutTag_EAC_6_0_A = 0x9B0006,kAudioChannelLayoutTag_EAC_7_0_A = 0x9C0007,kAudioChannelLayoutTag_EAC3_6_1_A = 0x9D0007,kAudioChannelLayoutTag_EAC3_6_1_B = 0x9E0007,kAudioChannelLayoutTag_EAC3_6_1_C = 0x9F0007,kAudioChannelLayoutTag_EAC3_7_1_A = 0xA00008,kAudioChannelLayoutTag_EAC3_7_1_B = 0xA10008,kAudioChannelLayoutTag_EAC3_7_1_C = 0xA20008,kAudioChannelLayoutTag_EAC3_7_1_D = 0xA30008,kAudioChannelLayoutTag_EAC3_7_1_E = 0xA40008,kAudioChannelLayoutTag_EAC3_7_1_F = 0xA50008,kAudioChannelLayoutTag_EAC3_7_1_G = 0xA60008,kAudioChannelLayoutTag_EAC3_7_1_H = 0xA70008,kAudioChannelLayoutTag_DTS_3_1 = 0xA80004,kAudioChannelLayoutTag_DTS_4_1 = 0xA90005,kAudioChannelLayoutTag_DTS_6_0_A = 0xAA0006,kAudioChannelLayoutTag_DTS_6_0_B = 0xAB0006,kAudioChannelLayoutTag_DTS_6_0_C = 0xAC0006,kAudioChannelLayoutTag_DTS_6_1_A = 0xAD0007,kAudioChannelLayoutTag_DTS_6_1_B = 0xAE0007,kAudioChannelLayoutTag_DTS_6_1_C = 0xAF0007,kAudioChannelLayoutTag_DTS_7_0 = 0xB00007,kAudioChannelLayoutTag_DTS_7_1 = 0xB10008,kAudioChannelLayoutTag_DTS_8_0_A = 0xB20008,kAudioChannelLayoutTag_DTS_8_0_B = 0xB30008,kAudioChannelLayoutTag_DTS_8_1_A = 0xB40009,kAudioChannelLayoutTag_DTS_8_1_B = 0xB50009,kAudioChannelLayoutTag_DTS_6_1_D = 0xB60007,kAudioChannelLayoutTag_WAVE_2_1 = 0x850003,kAudioChannelLayoutTag_WAVE_3_0 = 0x710003,kAudioChannelLayoutTag_WAVE_4_0_A = 0x840004,kAudioChannelLayoutTag_WAVE_4_0_B = 0xB90004,kAudioChannelLayoutTag_WAVE_5_0_A = 0x750005,kAudioChannelLayoutTag_WAVE_5_0_B = 0xBA0005,kAudioChannelLayoutTag_WAVE_5_1_A = 0x790006,kAudioChannelLayoutTag_WAVE_5_1_B = 0xBB0006,kAudioChannelLayoutTag_WAVE_6_1 = 0xBC0007,kAudioChannelLayoutTag_WAVE_7_1 = 0xBD0008,kAudioChannelLayoutTag_HOA_ACN_SN3D = 0xBE0000,kAudioChannelLayoutTag_HOA_ACN_N3D = 0xBF0000,kAudioChannelLayoutTag_Atmos_5_1_2 = 0xC20008,kAudioChannelLayoutTag_Atmos_5_1_4 = 0xC3000A,kAudioChannelLayoutTag_Atmos_7_1_2 = 0xC4000A,kAudioChannelLayoutTag_Atmos_7_1_4 = 0xC0000C,kAudioChannelLayoutTag_Atmos_9_1_6 = 0xC10010,kAudioChannelLayoutTag_DiscreteInOrder = 0x930000,kAudioChannelLayoutTag_BeginReserved = 0xF0000000,kAudioChannelLayoutTag_EndReserved = 0xFFFEFFFF,kAudioChannelLayoutTag_Unknown = 0xFFFF0000,};
enum _DA0A8C2044197B32D7165E73BA3723CC {UITER_UNKNOWN_INDEX = 0xFFFFFFFE,};
enum _DA14F8C98FCBACCA94F5714FCC596B1A {NSOrderedCollectionDifferenceCalculationOmitInsertedObjects = 0x1,NSOrderedCollectionDifferenceCalculationOmitRemovedObjects = 0x2,NSOrderedCollectionDifferenceCalculationInferMoves = 0x4,};
enum _DA38837AEBB366169A530C7A15C9EEFF {kAudioUnitSubType_ScheduledSoundPlayer = 0x7373706C,kAudioUnitSubType_AudioFilePlayer = 0x6166706C,};
enum _DA93236FE52799053BEC317CA22F8E17 {CKQuerySubscriptionOptionsFiresOnRecordCreation = 0x1,CKQuerySubscriptionOptionsFiresOnRecordUpdate = 0x2,CKQuerySubscriptionOptionsFiresOnRecordDeletion = 0x4,CKQuerySubscriptionOptionsFiresOnce = 0x8,};
enum _DABC384D96F2B9D3ABBD5A6A43B3E088 {BLOCK_LAYOUT_ESCAPE = 0x0,BLOCK_LAYOUT_NON_OBJECT_BYTES = 0x1,BLOCK_LAYOUT_NON_OBJECT_WORDS = 0x2,BLOCK_LAYOUT_STRONG = 0x3,BLOCK_LAYOUT_BYREF = 0x4,BLOCK_LAYOUT_WEAK = 0x5,BLOCK_LAYOUT_UNRETAINED = 0x6,BLOCK_LAYOUT_UNKNOWN_WORDS_7 = 0x7,BLOCK_LAYOUT_UNKNOWN_WORDS_8 = 0x8,BLOCK_LAYOUT_UNKNOWN_WORDS_9 = 0x9,BLOCK_LAYOUT_UNKNOWN_WORDS_A = 0xA,BLOCK_LAYOUT_UNUSED_B = 0xB,BLOCK_LAYOUT_UNUSED_C = 0xC,BLOCK_LAYOUT_UNUSED_D = 0xD,BLOCK_LAYOUT_UNUSED_E = 0xE,BLOCK_LAYOUT_UNUSED_F = 0xF,};
enum _DACA50B2B9A08CBAA82BC601BA977EAB {kKERNLineStart = 0x1,kKERNLineEndKerning = 0x2,kKERNNoCrossKerning = 0x4,kKERNNotesRequested = 0x8,kKERNNoStakeNote = 0x1,kKERNCrossStreamResetNote = 0x2,kKERNNotApplied = 0x1,};
enum _DAF5D991B8AD6B9A78F32501716799C4 {kAudioCodecPropertySupportedInputFormats = 0x69666D23,kAudioCodecPropertySupportedOutputFormats = 0x6F666D23,kAudioCodecPropertyAvailableInputSampleRates = 0x61697372,kAudioCodecPropertyAvailableOutputSampleRates = 0x616F7372,kAudioCodecPropertyAvailableBitRateRange = 0x61627274,kAudioCodecPropertyMinimumNumberInputPackets = 0x6D6E6970,kAudioCodecPropertyMinimumNumberOutputPackets = 0x6D6E6F70,kAudioCodecPropertyAvailableNumberChannels = 0x636D6E63,kAudioCodecPropertyDoesSampleRateConversion = 0x6C6D7263,kAudioCodecPropertyAvailableInputChannelLayoutTags = 0x6169636C,kAudioCodecPropertyAvailableOutputChannelLayoutTags = 0x616F636C,kAudioCodecPropertyInputFormatsForOutputFormat = 0x6966346F,kAudioCodecPropertyOutputFormatsForInputFormat = 0x6F663469,kAudioCodecPropertyFormatInfo = 0x61636669,};
enum _DAFE4419DF9DFC48D3BB135CBBA91320 {kAudioFileStreamPropertyFlag_PropertyIsCached = 0x1,kAudioFileStreamPropertyFlag_CacheProperty = 0x2,};
enum _DCA1D7A4E4DDC20AD42A3C15E1AFBB8C {kAudioQueueParam_Volume = 0x1,kAudioQueueParam_PlayRate = 0x2,kAudioQueueParam_Pitch = 0x3,kAudioQueueParam_VolumeRampTime = 0x4,kAudioQueueParam_Pan = 0xD,};
enum _DD9B7A43A162F6F114B200A7CF6DF748 {kCVTimeStampVideoTimeValid = 0x1,kCVTimeStampHostTimeValid = 0x2,kCVTimeStampSMPTETimeValid = 0x4,kCVTimeStampVideoRefreshPeriodValid = 0x8,kCVTimeStampRateScalarValid = 0x10,kCVTimeStampTopField = 0x10000,kCVTimeStampBottomField = 0x20000,kCVTimeStampVideoHostTimeValid = 0x3,kCVTimeStampIsInterlaced = 0x30000,};
enum _DEA830DBE67273E83E6CF90BA6BCF2EA {MPSAliasingStrategyDefault = 0x0,MPSAliasingStrategyDontCare = 0x0,MPSAliasingStrategyShallAlias = 0x1,MPSAliasingStrategyShallNotAlias = 0x2,MPSAliasingStrategyAliasingReserved = 0x3,MPSAliasingStrategyPreferTemporaryMemory = 0x4,MPSAliasingStrategyPreferNonTemporaryMemory = 0x8,};
enum _DEF865D79E022CCC7989BA968A4F5BB7 {SCNProgramCompilationError = 0x1,};
enum _DF35CEF0BB711BC2061A1A943AEE063C {NSUbiquitousKeyValueStoreServerChange = 0x0,NSUbiquitousKeyValueStoreInitialSyncChange = 0x1,NSUbiquitousKeyValueStoreQuotaViolationChange = 0x2,NSUbiquitousKeyValueStoreAccountChange = 0x3,};
enum _DF943A4D90784D46B0771DA15602311E {kCTUnderlineStyleNone = 0x0,kCTUnderlineStyleSingle = 0x1,kCTUnderlineStyleThick = 0x2,kCTUnderlineStyleDouble = 0x9,};
enum _E00A506BFA7219E7B255F954ABEED96B {EAWiFiUnconfiguredAccessoryPropertySupportsAirPlay = 0x1,EAWiFiUnconfiguredAccessoryPropertySupportsAirPrint = 0x2,EAWiFiUnconfiguredAccessoryPropertySupportsHomeKit = 0x4,};
enum _E11B28D091874B1B3DAA0DC1526C3576 {UISwipeGestureRecognizerDirectionRight = 0x1,UISwipeGestureRecognizerDirectionLeft = 0x2,UISwipeGestureRecognizerDirectionUp = 0x4,UISwipeGestureRecognizerDirectionDown = 0x8,};
enum _E13CB518A8B0BDF8E458AF383A989F51 {CLKComplicationTimeTravelDirectionNone = 0x0,CLKComplicationTimeTravelDirectionForward = 0x1,CLKComplicationTimeTravelDirectionBackward = 0x2,};
enum _E1441490FBF03D98AA1E2F3A89F7BA24 {kAudioConverterPropertyCanResumeFromInterruption = 0x63726669,};
enum _E1FC16427A45B3FD87F763826AABE60E {kAudioSessionProperty_AudioRoute = 0x726F7574,};
enum _E207803CED4E21A0A9472C1CFD43A9B1 {UIEventButtonMaskPrimary = 0x1,UIEventButtonMaskSecondary = 0x2,};
enum _E258A5AA8E93CD4F1DC6719CD73F37CD {kRenderQuality_Max = 0x7F,kRenderQuality_High = 0x60,kRenderQuality_Medium = 0x40,kRenderQuality_Low = 0x20,kRenderQuality_Min = 0x0,};
enum _E272ABAF9A5F3283CBFF14475052B161 {kLowPassParam_CutoffFrequency = 0x0,kLowPassParam_Resonance = 0x1,};
enum _E2C377E292A82139EB28779B6AA328D6 {kBytePacketTranslationFlag_IsEstimate = 0x1,};
enum _E36E6926B5B7F7BFC4077CFB145215F6 {kAudioSessionProperty_PreferredHardwareSampleRate = 0x68777372,kAudioSessionProperty_PreferredHardwareIOBufferDuration = 0x696F6264,kAudioSessionProperty_AudioCategory = 0x61636174,kAudioSessionProperty_AudioRouteChange = 0x726F6368,kAudioSessionProperty_CurrentHardwareSampleRate = 0x63687372,kAudioSessionProperty_CurrentHardwareInputNumberChannels = 0x63686963,kAudioSessionProperty_CurrentHardwareOutputNumberChannels = 0x63686F63,kAudioSessionProperty_CurrentHardwareOutputVolume = 0x63686F76,kAudioSessionProperty_CurrentHardwareInputLatency = 0x63696C74,kAudioSessionProperty_CurrentHardwareOutputLatency = 0x636F6C74,kAudioSessionProperty_CurrentHardwareIOBufferDuration = 0x63686264,kAudioSessionProperty_OtherAudioIsPlaying = 0x6F746872,kAudioSessionProperty_OverrideAudioRoute = 0x6F767264,kAudioSessionProperty_AudioInputAvailable = 0x61696176,kAudioSessionProperty_ServerDied = 0x64696564,kAudioSessionProperty_OtherMixableAudioShouldDuck = 0x6475636B,kAudioSessionProperty_OverrideCategoryMixWithOthers = 0x636D6978,kAudioSessionProperty_OverrideCategoryDefaultToSpeaker = 0x6373706B,kAudioSessionProperty_OverrideCategoryEnableBluetoothInput = 0x63626C75,kAudioSessionProperty_InterruptionType = 0x74797065,kAudioSessionProperty_Mode = 0x6D6F6465,kAudioSessionProperty_InputSources = 0x73726373,kAudioSessionProperty_OutputDestinations = 0x64737473,kAudioSessionProperty_InputSource = 0x69737263,kAudioSessionProperty_OutputDestination = 0x6F647374,kAudioSessionProperty_InputGainAvailable = 0x69676176,kAudioSessionProperty_InputGainScalar = 0x69677363,kAudioSessionProperty_AudioRouteDescription = 0x63726172,};
enum _E3CC30C3FC7A417FB17E25C76D9825A3 {NSDirectionalRectEdgeNone = 0x0,NSDirectionalRectEdgeTop = 0x1,NSDirectionalRectEdgeLeading = 0x2,NSDirectionalRectEdgeBottom = 0x4,NSDirectionalRectEdgeTrailing = 0x8,NSDirectionalRectEdgeAll = 0xF,};
enum _E3E0B1B08F31B47A3D992C7A5B6C6F9B {kCCEncrypt = 0x0,kCCDecrypt = 0x1,};
enum _E45051721F065582468D5EC3087B3FFA {UITouchPropertyForce = 0x1,UITouchPropertyAzimuth = 0x2,UITouchPropertyAltitude = 0x4,UITouchPropertyLocation = 0x8,};
enum _E471F61D7226C06F243A289B7051480B {UNNotificationActionOptionAuthenticationRequired = 0x1,UNNotificationActionOptionDestructive = 0x2,UNNotificationActionOptionForeground = 0x4,};
enum _E48A191F71E448E0D0B56731EB987D32 {kNoIdeographicAlternativesSelector = 0x0,kIdeographicAltOneSelector = 0x1,kIdeographicAltTwoSelector = 0x2,kIdeographicAltThreeSelector = 0x3,kIdeographicAltFourSelector = 0x4,kIdeographicAltFiveSelector = 0x5,};
enum _E4CAE26747B48AC53CDA2F4432ED5EE9 {UIPrinterJobTypeUnknown = 0x0,UIPrinterJobTypeDocument = 0x1,UIPrinterJobTypeEnvelope = 0x2,UIPrinterJobTypeLabel = 0x4,UIPrinterJobTypePhoto = 0x8,UIPrinterJobTypeReceipt = 0x10,UIPrinterJobTypeRoll = 0x20,UIPrinterJobTypeLargeFormat = 0x40,UIPrinterJobTypePostcard = 0x80,};
enum _E50D1670202C319E2CECD5341E007341 {MTLTextureUsageUnknown = 0x0,MTLTextureUsageShaderRead = 0x1,MTLTextureUsageShaderWrite = 0x2,MTLTextureUsageRenderTarget = 0x4,MTLTextureUsagePixelFormatView = 0x10,};
enum _E5CF2FC399586E1BB0EF1AF1ED66A816 {ALAssetsGroupLibrary = 0x1,ALAssetsGroupAlbum = 0x2,ALAssetsGroupEvent = 0x4,ALAssetsGroupFaces = 0x8,ALAssetsGroupSavedPhotos = 0x10,ALAssetsGroupPhotoStream = 0x20,ALAssetsGroupAll = 0xFFFFFFFF,};
enum _E612863475BBC142012E11C825D714BC {kAudioConverterErr_HardwareInUse = 0x68776975,kAudioConverterErr_NoHardwarePermission = 0x7065726D,};
enum _E69858DC5F0DADD15BB4E6762C8CFC7A {kVTUnlimitedFrameDelayCount = 0xFFFFFFFF,};
enum _E6B7935F675D2980A5610C5E7CF108B1 {kCMAttachmentMode_ShouldNotPropagate = 0x0,kCMAttachmentMode_ShouldPropagate = 0x1,};
enum _E6F7A486016D3889636650CA61037F09 {UIKeyModifierAlphaShift = 0x10000,UIKeyModifierShift = 0x20000,UIKeyModifierControl = 0x40000,UIKeyModifierAlternate = 0x80000,UIKeyModifierCommand = 0x100000,UIKeyModifierNumericPad = 0x200000,};
enum _E725719FB641C8760E352C71DEC029D9 {kIOSurfaceDefaultCache = 0x0,kIOSurfaceInhibitCache = 0x1,kIOSurfaceWriteThruCache = 0x2,kIOSurfaceCopybackCache = 0x3,kIOSurfaceWriteCombineCache = 0x4,kIOSurfaceCopybackInnerCache = 0x5,};
enum _E79A40BEC23C0F1C6D426159F953B3F8 {kAudioCodecPrimeMethod_Pre = 0x0,kAudioCodecPrimeMethod_Normal = 0x1,kAudioCodecPrimeMethod_None = 0x2,};
enum _E7FD203A6302E38E91F67C0C6F2ADFFB {kCMSampleBufferError_AllocationFailed = 0xFFFFCE46,kCMSampleBufferError_RequiredParameterMissing = 0xFFFFCE45,kCMSampleBufferError_AlreadyHasDataBuffer = 0xFFFFCE44,kCMSampleBufferError_BufferNotReady = 0xFFFFCE43,kCMSampleBufferError_SampleIndexOutOfRange = 0xFFFFCE42,kCMSampleBufferError_BufferHasNoSampleSizes = 0xFFFFCE41,kCMSampleBufferError_BufferHasNoSampleTimingInfo = 0xFFFFCE40,kCMSampleBufferError_ArrayTooSmall = 0xFFFFCE3F,kCMSampleBufferError_InvalidEntryCount = 0xFFFFCE3E,kCMSampleBufferError_CannotSubdivide = 0xFFFFCE3D,kCMSampleBufferError_SampleTimingInfoInvalid = 0xFFFFCE3C,kCMSampleBufferError_InvalidMediaTypeForOperation = 0xFFFFCE3B,kCMSampleBufferError_InvalidSampleData = 0xFFFFCE3A,kCMSampleBufferError_InvalidMediaFormat = 0xFFFFCE39,kCMSampleBufferError_Invalidated = 0xFFFFCE38,kCMSampleBufferError_DataFailed = 0xFFFFBE92,kCMSampleBufferError_DataCanceled = 0xFFFFBE91,};
enum _E9434340993CEA659D2349B76F4A14A4 {eNoteExitReparentedDeprecated = 0x80000,};
enum _E99A4744E859F621BC1FB6794201D3BB {REMOVEFILE_STATE_CONFIRM_CALLBACK = 0x1,REMOVEFILE_STATE_CONFIRM_CONTEXT = 0x2,REMOVEFILE_STATE_ERROR_CALLBACK = 0x3,REMOVEFILE_STATE_ERROR_CONTEXT = 0x4,REMOVEFILE_STATE_ERRNO = 0x5,REMOVEFILE_STATE_STATUS_CALLBACK = 0x6,REMOVEFILE_STATE_STATUS_CONTEXT = 0x7,};
enum _E9C394A8F65B87D2EADE2C151EF6D5C5 {kRoundTripAACParam_Format = 0x0,kRoundTripAACParam_EncodingStrategy = 0x1,kRoundTripAACParam_RateOrQuality = 0x2,};
enum _E9D19F6CE93F7614A221DF522C481F6C {kAudioFileStreamSeekFlag_OffsetIsEstimated = 0x1,};
enum _EA4BAD0DAD2C65E35BF9E19BB345F237 {kSecAccessControlUserPresence = 0x1,kSecAccessControlBiometryAny = 0x2,kSecAccessControlTouchIDAny = 0x2,kSecAccessControlBiometryCurrentSet = 0x8,kSecAccessControlTouchIDCurrentSet = 0x8,kSecAccessControlDevicePasscode = 0x10,kSecAccessControlWatch = 0x20,kSecAccessControlOr = 0x4000,kSecAccessControlAnd = 0x8000,kSecAccessControlPrivateKeyUsage = 0x40000000,kSecAccessControlApplicationPassword = 0x80000000,};
enum _EA4C16B5F3CA35E9C2D90A1B4F4360B9 {kAudioFormatUnspecifiedError = 0x77686174,kAudioFormatUnsupportedPropertyError = 0x70726F70,kAudioFormatBadPropertySizeError = 0x2173697A,kAudioFormatBadSpecifierSizeError = 0x21737063,kAudioFormatUnsupportedDataFormatError = 0x666D743F,kAudioFormatUnknownFormatError = 0x21666D74,};
enum _EB07CA8F8666AD7A2581132B1889E738 {kSequenceTrackProperty_LoopInfo = 0x0,kSequenceTrackProperty_OffsetTime = 0x1,kSequenceTrackProperty_MuteStatus = 0x2,kSequenceTrackProperty_SoloStatus = 0x3,kSequenceTrackProperty_AutomatedParameters = 0x4,kSequenceTrackProperty_TrackLength = 0x5,kSequenceTrackProperty_TimeResolution = 0x6,};
enum _EB3F46C7B3C4630D316597B2E84056B7 {kCFFileDescriptorReadCallBack = 0x1,kCFFileDescriptorWriteCallBack = 0x2,};
enum _EB625A94AAA825D7C0CF2E569AB7EB71 {kAudioUnitScope_Global = 0x0,kAudioUnitScope_Input = 0x1,kAudioUnitScope_Output = 0x2,kAudioUnitScope_Group = 0x3,kAudioUnitScope_Part = 0x4,kAudioUnitScope_Note = 0x5,kAudioUnitScope_Layer = 0x6,kAudioUnitScope_LayerItem = 0x7,};
enum _EB801EBC897A0C04D9E6B9A80B60E012 {INTemporalEventTriggerTypeOptionNotScheduled = 0x1,INTemporalEventTriggerTypeOptionScheduledNonRecurring = 0x2,INTemporalEventTriggerTypeOptionScheduledRecurring = 0x4,};
enum _EBDCFA70B4B84C6128582E0ECD1BFD06 {ARHitTestResultTypeFeaturePoint = 0x1,ARHitTestResultTypeEstimatedHorizontalPlane = 0x2,ARHitTestResultTypeEstimatedVerticalPlane = 0x4,ARHitTestResultTypeExistingPlane = 0x8,ARHitTestResultTypeExistingPlaneUsingExtent = 0x10,ARHitTestResultTypeExistingPlaneUsingGeometry = 0x20,};
enum _ED1EA795226B1F9032EA65232ABA1B02 {kShowDiacriticsSelector = 0x0,kHideDiacriticsSelector = 0x1,kDecomposeDiacriticsSelector = 0x2,};
enum _ED85D477B50CD4DB0715E20114DD68E7 {kCMPixelFormat_32ARGB = 0x20,kCMPixelFormat_32BGRA = 0x42475241,kCMPixelFormat_24RGB = 0x18,kCMPixelFormat_16BE555 = 0x10,kCMPixelFormat_16BE565 = 0x42353635,kCMPixelFormat_16LE555 = 0x4C353535,kCMPixelFormat_16LE565 = 0x4C353635,kCMPixelFormat_16LE5551 = 0x35353531,kCMPixelFormat_422YpCbCr8 = 0x32767579,kCMPixelFormat_422YpCbCr8_yuvs = 0x79757673,kCMPixelFormat_444YpCbCr8 = 0x76333038,kCMPixelFormat_4444YpCbCrA8 = 0x76343038,kCMPixelFormat_422YpCbCr16 = 0x76323136,kCMPixelFormat_422YpCbCr10 = 0x76323130,kCMPixelFormat_444YpCbCr10 = 0x76343130,kCMPixelFormat_8IndexedGray_WhiteIsZero = 0x28,};
enum _EDE47B5CBECDE0224F40DB447EDE456B {CPContentStyleLight = 0x1,CPContentStyleDark = 0x2,};
enum _EE4F11A20D80995994F9147CB3163FC1 {kFontMicrosoftSymbolScript = 0x0,kFontMicrosoftStandardScript = 0x1,kFontMicrosoftUCS4Script = 0xA,};
enum _EE544F98136E3CBF8EE6F4A8C328DA8A {kAudioServicesNoError = 0x0,kAudioServicesUnsupportedPropertyError = 0x7074793F,kAudioServicesBadPropertySizeError = 0x2173697A,kAudioServicesBadSpecifierSizeError = 0x21737063,kAudioServicesSystemSoundUnspecifiedError = 0xFFFFFA24,kAudioServicesSystemSoundClientTimedOutError = 0xFFFFFA23,kAudioServicesSystemSoundExceededMaximumDurationError = 0xFFFFFA22,};
enum _EE6C40817E054624CE6B26241577A3FD {MPMediaPlaylistAttributeNone = 0x0,MPMediaPlaylistAttributeOnTheGo = 0x1,MPMediaPlaylistAttributeSmart = 0x2,MPMediaPlaylistAttributeGenius = 0x4,};
enum _EEC0286DDD3AE8DA14DC32B43638D17C {AVAudioSessionInterruptionOptionShouldResume = 0x1,};
enum _EEDB24DB5DDE81D34D1FF391D1105213 {kCFStringTokenizerUnitWord = 0x0,kCFStringTokenizerUnitSentence = 0x1,kCFStringTokenizerUnitParagraph = 0x2,kCFStringTokenizerUnitLineBreak = 0x3,kCFStringTokenizerUnitWordBoundary = 0x4,kCFStringTokenizerAttributeLatinTranscription = 0x10000,kCFStringTokenizerAttributeLanguage = 0x20000,};
enum _EEEDE36849B28387ACFC44CA8BD00A24 {kHalfWidthCJKRomanSelector = 0x0,kProportionalCJKRomanSelector = 0x1,kDefaultCJKRomanSelector = 0x2,kFullWidthCJKRomanSelector = 0x3,};
enum _EF4BFC71F3A7ACE44A1B8EC2291EE32A {kSOCKS5NoAcceptableMethod = 0xFF,};
enum _EF9A180721142D3C80DBF37E571903FE {NSMachPortDeallocateNone = 0x0,NSMachPortDeallocateSendRight = 0x1,NSMachPortDeallocateReceiveRight = 0x2,};
enum _EFA732B9D4F9F04B4D1108D5A01AC1D6 {NSVolumeEnumerationSkipHiddenVolumes = 0x2,NSVolumeEnumerationProduceFileReferenceURLs = 0x4,};
enum _EFA8F7FCBF599FE551401C4062F93563 {UNW_ESUCCESS = 0x0,UNW_EUNSPEC = 0xFFFFE674,UNW_ENOMEM = 0xFFFFE673,UNW_EBADREG = 0xFFFFE672,UNW_EREADONLYREG = 0xFFFFE671,UNW_ESTOPUNWIND = 0xFFFFE670,UNW_EINVALIDIP = 0xFFFFE66F,UNW_EBADFRAME = 0xFFFFE66E,UNW_EINVAL = 0xFFFFE66D,UNW_EBADVERSION = 0xFFFFE66C,UNW_ENOINFO = 0xFFFFE66B,UNW_ECROSSRASIGNING = 0xFFFFE66A,};
enum _EFECF2D08D52000035C032FC06730768 {kvImageBufferTypeCode_EndOfList = 0x0,kvImageBufferTypeCode_ColorSpaceChannel1 = 0x1,kvImageBufferTypeCode_ColorSpaceChannel2 = 0x2,kvImageBufferTypeCode_ColorSpaceChannel3 = 0x3,kvImageBufferTypeCode_ColorSpaceChannel4 = 0x4,kvImageBufferTypeCode_ColorSpaceChannel5 = 0x5,kvImageBufferTypeCode_ColorSpaceChannel6 = 0x6,kvImageBufferTypeCode_ColorSpaceChannel7 = 0x7,kvImageBufferTypeCode_ColorSpaceChannel8 = 0x8,kvImageBufferTypeCode_ColorSpaceChannel9 = 0x9,kvImageBufferTypeCode_ColorSpaceChannel10 = 0xA,kvImageBufferTypeCode_ColorSpaceChannel11 = 0xB,kvImageBufferTypeCode_ColorSpaceChannel12 = 0xC,kvImageBufferTypeCode_ColorSpaceChannel13 = 0xD,kvImageBufferTypeCode_ColorSpaceChannel14 = 0xE,kvImageBufferTypeCode_ColorSpaceChannel15 = 0xF,kvImageBufferTypeCode_ColorSpaceChannel16 = 0x10,kvImageBufferTypeCode_Alpha = 0x11,kvImageBufferTypeCode_Indexed = 0x12,kvImageBufferTypeCode_CVPixelBuffer_YCbCr = 0x13,kvImageBufferTypeCode_Luminance = 0x14,kvImageBufferTypeCode_Chroma = 0x15,kvImageBufferTypeCode_Cb = 0x16,kvImageBufferTypeCode_Cr = 0x17,kvImageBufferTypeCode_CGFormat = 0x18,kvImageBufferTypeCode_Chunky = 0x19,kvImageBufferTypeCode_UniqueFormatCount = 0x1A,kvImageBufferTypeCode_Monochrome = 0x1,kvImageBufferTypeCode_RGB_Red = 0x1,kvImageBufferTypeCode_RGB_Green = 0x2,kvImageBufferTypeCode_RGB_Blue = 0x3,kvImageBufferTypeCode_CMYK_Cyan = 0x1,kvImageBufferTypeCode_CMYK_Magenta = 0x2,kvImageBufferTypeCode_CMYK_Yellow = 0x3,kvImageBufferTypeCode_CMYK_Black = 0x4,kvImageBufferTypeCode_XYZ_X = 0x1,kvImageBufferTypeCode_XYZ_Y = 0x2,kvImageBufferTypeCode_XYZ_Z = 0x3,kvImageBufferTypeCode_LAB_L = 0x1,kvImageBufferTypeCode_LAB_A = 0x2,kvImageBufferTypeCode_LAB_B = 0x3,};
enum _F034960CDA2DC533CFE4EE2BBDB32E04 {MPSCNNConvolutionGradientOptionGradientWithData = 0x1,MPSCNNConvolutionGradientOptionGradientWithWeightsAndBias = 0x2,MPSCNNConvolutionGradientOptionAll = 0x3,};
enum _F07446320AA98D55765F9794BBDA13D1 {kAllTypeFeaturesOnSelector = 0x0,kAllTypeFeaturesOffSelector = 0x1,};
enum _F08110683916212A833E892F8A6C9350 {kAudioSessionOverrideAudioRoute_None = 0x0,kAudioSessionOverrideAudioRoute_Speaker = 0x73706B72,};
enum _F1459EFEC4060E577E21EB8C077192F0 {NSDataBase64DecodingIgnoreUnknownCharacters = 0x1,};
enum _F16303993848280E2B71FA450D9A43F9 {kCCAlgorithmAES128 = 0x0,kCCAlgorithmAES = 0x0,kCCAlgorithmDES = 0x1,kCCAlgorithm3DES = 0x2,kCCAlgorithmCAST = 0x3,kCCAlgorithmRC4 = 0x4,kCCAlgorithmRC2 = 0x5,kCCAlgorithmBlowfish = 0x6,};
enum _F20A45E74914D96C1A63E0307445375B {kMTAudioProcessingTapFlag_StartOfStream = 0x100,kMTAudioProcessingTapFlag_EndOfStream = 0x200,};
enum _F2AF688172B7F66725F3D5A96F03FED1 {kTraditionalCharactersSelector = 0x0,kSimplifiedCharactersSelector = 0x1,kJIS1978CharactersSelector = 0x2,kJIS1983CharactersSelector = 0x3,kJIS1990CharactersSelector = 0x4,kTraditionalAltOneSelector = 0x5,kTraditionalAltTwoSelector = 0x6,kTraditionalAltThreeSelector = 0x7,kTraditionalAltFourSelector = 0x8,kTraditionalAltFiveSelector = 0x9,kExpertCharactersSelector = 0xA,kJIS2004CharactersSelector = 0xB,kHojoCharactersSelector = 0xC,kNLCCharactersSelector = 0xD,kTraditionalNamesCharactersSelector = 0xE,};
enum _F2EAB3E4312C9DC31C84F790287E7716 {kUnconnectedSelector = 0x0,kPartiallyConnectedSelector = 0x1,kCursiveSelector = 0x2,};
enum _F322770822E3D5E1D4ABEA9FA1406A9C {kCCContextSizeAES128 = 0x194,kCCContextSizeDES = 0xF0,kCCContextSize3DES = 0x1F0,kCCContextSizeCAST = 0xF0,kCCContextSizeRC4 = 0x430,};
enum _F323B6AFACAE3F6A99BB869DECB06197 {kMTAudioProcessingTapCallbacksVersion_0 = 0x0,};
enum _F3803C831282150210E66BA9D686D8DD {kABOperationNotPermittedByStoreError = 0x0,kABOperationNotPermittedByUserError = 0x1,};
enum _F38FC12859B843F92CC6CE123E17145E {UNWIND_X86_MODE_MASK = 0xF000000,UNWIND_X86_MODE_EBP_FRAME = 0x1000000,UNWIND_X86_MODE_STACK_IMMD = 0x2000000,UNWIND_X86_MODE_STACK_IND = 0x3000000,UNWIND_X86_MODE_DWARF = 0x4000000,UNWIND_X86_EBP_FRAME_REGISTERS = 0x7FFF,UNWIND_X86_EBP_FRAME_OFFSET = 0xFF0000,UNWIND_X86_FRAMELESS_STACK_SIZE = 0xFF0000,UNWIND_X86_FRAMELESS_STACK_ADJUST = 0xE000,UNWIND_X86_FRAMELESS_STACK_REG_COUNT = 0x1C00,UNWIND_X86_FRAMELESS_STACK_REG_PERMUTATION = 0x3FF,UNWIND_X86_DWARF_SECTION_OFFSET = 0xFFFFFF,};
enum _F3E3F20A2D972E7DEAC16A5B9B87E563 {WKDataDetectorTypeNone = 0x0,WKDataDetectorTypePhoneNumber = 0x1,WKDataDetectorTypeLink = 0x2,WKDataDetectorTypeAddress = 0x4,WKDataDetectorTypeCalendarEvent = 0x8,WKDataDetectorTypeTrackingNumber = 0x10,WKDataDetectorTypeFlightNumber = 0x20,WKDataDetectorTypeLookupSuggestion = 0x40,WKDataDetectorTypeAll = 0xFFFFFFFFFFFFFFFF,WKDataDetectorTypeSpotlightSuggestion = 0x40,};
enum _F3F1E7FBFE8D8D45951FD0C3D997515B {NSStringEnumerationByLines = 0x0,NSStringEnumerationByParagraphs = 0x1,NSStringEnumerationByComposedCharacterSequences = 0x2,NSStringEnumerationByWords = 0x3,NSStringEnumerationBySentences = 0x4,NSStringEnumerationByCaretPositions = 0x5,NSStringEnumerationByDeletionClusters = 0x6,NSStringEnumerationReverse = 0x100,NSStringEnumerationSubstringNotRequired = 0x200,NSStringEnumerationLocalized = 0x400,};
enum _F422B8EAA31897E2F1D1EF7AB75BCB9C {kCFBundleExecutableArchitectureI386 = 0x7,kCFBundleExecutableArchitecturePPC = 0x12,kCFBundleExecutableArchitectureX86_64 = 0x1000007,kCFBundleExecutableArchitecturePPC64 = 0x1000012,kCFBundleExecutableArchitectureARM64 = 0x100000C,};
enum _F4B5B77B632B82689D3A49D2C6D74C01 {kSTXHasLigAction = 0x2000,};
enum _F4D783280C266C4492396B1ADAF3F411 {MPSNNTrainingStyleUpdateDeviceNone = 0x0,MPSNNTrainingStyleUpdateDeviceCPU = 0x1,MPSNNTrainingStyleUpdateDeviceGPU = 0x2,};
enum _F4E460267B9D9015E95FF846876B0338 {HKStatisticsOptionNone = 0x0,HKStatisticsOptionSeparateBySource = 0x1,HKStatisticsOptionDiscreteAverage = 0x2,HKStatisticsOptionDiscreteMin = 0x4,HKStatisticsOptionDiscreteMax = 0x8,HKStatisticsOptionCumulativeSum = 0x10,HKStatisticsOptionMostRecent = 0x20,HKStatisticsOptionDiscreteMostRecent = 0x20,HKStatisticsOptionDuration = 0x40,};
enum _F50FBA98163344450C04E79768BB4F09 {kAudioSessionSetActiveFlag_NotifyOthersOnDeactivation = 0x1,};
enum _F512AC8F1926E657A0F087337A8876D6 {kCFStreamErrorSOCKS4RequestFailed = 0x5B,kCFStreamErrorSOCKS4IdentdFailed = 0x5C,kCFStreamErrorSOCKS4IdConflict = 0x5D,};
enum _F527B9D612D3E47B4B582FBD6A577417 {kCCHmacAlgSHA1 = 0x0,kCCHmacAlgMD5 = 0x1,kCCHmacAlgSHA256 = 0x2,kCCHmacAlgSHA384 = 0x3,kCCHmacAlgSHA512 = 0x4,kCCHmacAlgSHA224 = 0x5,};
enum _F58FB0C2AD8A25CB3FDC0015FCCB2E0C {ccNoPadding = 0x0,ccPKCS7Padding = 0x1,};
enum _F6280D51938A456C43A0CD4AC5F94E72 {kAudioConverterPropertyMaximumInputBufferSize = 0x78696273,kAudioConverterSampleRateConverterAlgorithm = 0x73726369,};
enum _F6397B408EBE36EF8F7E3CDFB2F8B957 {TWRequestMethodGET = 0x0,TWRequestMethodPOST = 0x1,TWRequestMethodDELETE = 0x2,};
enum _F6399C6B721BF43A2F1962826DFA48A6 {kAUSamplerProperty_LoadInstrument = 0x1006,kAUSamplerProperty_LoadAudioFiles = 0x1005,};
enum _F640840D2506055427DD9436746E2CD0 {cmapFontTableTag = 0x636D6170,};
enum _F64D36D283EC8CCBA66C48F63B0CFE28 {kCaseSensitiveLayoutOnSelector = 0x0,kCaseSensitiveLayoutOffSelector = 0x1,kCaseSensitiveSpacingOnSelector = 0x2,kCaseSensitiveSpacingOffSelector = 0x3,};
enum _F67B590D98964EC36E9E182B8105C4EC {kCMTimeCodeFlag_DropFrame = 0x1,kCMTimeCodeFlag_24HourMax = 0x2,kCMTimeCodeFlag_NegTimesOK = 0x4,};
enum _F6A90B671DF1C5489AAFD7E5D59E1862 {kMusicEventType_NULL = 0x0,kMusicEventType_ExtendedNote = 0x1,kMusicEventType_ExtendedTempo = 0x3,kMusicEventType_User = 0x4,kMusicEventType_Meta = 0x5,kMusicEventType_MIDINoteMessage = 0x6,kMusicEventType_MIDIChannelMessage = 0x7,kMusicEventType_MIDIRawData = 0x8,kMusicEventType_Parameter = 0x9,kMusicEventType_AUPreset = 0xA,};
enum _F6D6FBBC531839443EBD8921B6B6455E {UTEXT_MAGIC = 0x345AD82C,};
enum _F6E253AFF5E3A639E340A77B2F3D9CEC {kVarispeedParam_PlaybackRate = 0x0,kVarispeedParam_PlaybackCents = 0x1,};
enum _F71F0E4365FB319BBC93ABA6961DD953 {PHAssetBurstSelectionTypeNone = 0x0,PHAssetBurstSelectionTypeAutoPick = 0x1,PHAssetBurstSelectionTypeUserPick = 0x2,};
enum _F78D6ACC65ADA40CC5957FB1EF60FED8 {MPSMatrixRandomDistributionDefault = 0x1,MPSMatrixRandomDistributionUniform = 0x2,MPSMatrixRandomDistributionNormal = 0x3,};
enum _F7D1C2911AFE21665876824577A08CD5 {kCAFLinearPCMFormatFlagIsFloat = 0x1,kCAFLinearPCMFormatFlagIsLittleEndian = 0x2,};
enum _F7EC840A2DDAD23E4CCF5CF6D91D9F78 {kCMBufferQueueTrigger_WhenDurationBecomesLessThan = 0x1,kCMBufferQueueTrigger_WhenDurationBecomesLessThanOrEqualTo = 0x2,kCMBufferQueueTrigger_WhenDurationBecomesGreaterThan = 0x3,kCMBufferQueueTrigger_WhenDurationBecomesGreaterThanOrEqualTo = 0x4,kCMBufferQueueTrigger_WhenMinPresentationTimeStampChanges = 0x5,kCMBufferQueueTrigger_WhenMaxPresentationTimeStampChanges = 0x6,kCMBufferQueueTrigger_WhenDataBecomesReady = 0x7,kCMBufferQueueTrigger_WhenEndOfDataReached = 0x8,kCMBufferQueueTrigger_WhenReset = 0x9,kCMBufferQueueTrigger_WhenBufferCountBecomesLessThan = 0xA,kCMBufferQueueTrigger_WhenBufferCountBecomesGreaterThan = 0xB,kCMBufferQueueTrigger_WhenDurationBecomesGreaterThanOrEqualToAndBufferCountBecomesGreaterThan = 0xC,};
enum _F813F8B8B0D60DD4A42C887BD1DC8453 {kProportionalTextSelector = 0x0,kMonospacedTextSelector = 0x1,kHalfWidthTextSelector = 0x2,kThirdWidthTextSelector = 0x3,kQuarterWidthTextSelector = 0x4,kAltProportionalTextSelector = 0x5,kAltHalfWidthTextSelector = 0x6,};
enum _F87776A282F0A79178B5281BE4B7945D {kCMTimeCodeFormatType_TimeCode32 = 0x746D6364,kCMTimeCodeFormatType_TimeCode64 = 0x74633634,kCMTimeCodeFormatType_Counter32 = 0x636E3332,kCMTimeCodeFormatType_Counter64 = 0x636E3634,};
enum _F88099E32FAB71A7F4C083329C362C1D {kCTLineBoundsExcludeTypographicLeading = 0x1,kCTLineBoundsExcludeTypographicShifts = 0x2,kCTLineBoundsUseHangingPunctuation = 0x4,kCTLineBoundsUseGlyphPathBounds = 0x8,kCTLineBoundsUseOpticalBounds = 0x10,kCTLineBoundsIncludeLanguageExtents = 0x20,};
enum _F8B4284C151A87EB7B927F7DCBBB8A21 {sizeof_sfntCMapEncoding = 0x8,};
enum _F8C485DD182DC5BCECCCA96E1066154E {kAudioCodecOutputPrecedenceNone = 0x0,kAudioCodecOutputPrecedenceBitRate = 0x1,kAudioCodecOutputPrecedenceSampleRate = 0x2,};
enum _F92404EF0FD1C3B1D68CC07C1FA95223 {TKSmartCardPINCompletionMaxLength = 0x1,TKSmartCardPINCompletionKey = 0x2,TKSmartCardPINCompletionTimeout = 0x4,};
enum _F9F7C0A569D8FC5561BA6D99846BE26C {kMusicDeviceProperty_InstrumentName = 0x3E9,kMusicDeviceProperty_InstrumentNumber = 0x3EC,};
enum _FA36183E7D7F0B5FA8385D83D4FCA74C {os2FontTableTag = 0x4F532F32,};
enum _FAC06FA29E8C330FDDD62526306E10B1 {kHipassParam_CutoffFrequency = 0x0,kHipassParam_Resonance = 0x1,};
enum _FAD007B28801922DF7032EB2B53AC72B {ENRiskLevelValueMin = 0x0,ENRiskLevelValueMax = 0x8,};
enum _FB1F5BF1BCDB75D751DE27C592A11F3A {kAUMIDISynthProperty_EnablePreload = 0x1017,};
enum _FB66F2B49B88551179E0A4D62A1AE5D7 {sizeof_sfntDirectory = 0xC,};
enum _FB8272726A2C35A604A93BFB55FF41D5 {kFFTRadix2 = 0x0,kFFTRadix3 = 0x1,kFFTRadix5 = 0x2,};
enum _FB955131F492FE24BD23F648F0653EC8 {kAudioConverterQuality_Max = 0x7F,kAudioConverterQuality_High = 0x60,kAudioConverterQuality_Medium = 0x40,kAudioConverterQuality_Low = 0x20,kAudioConverterQuality_Min = 0x0,};
enum _FBB950EAB1CECDFB98D03C49291E7F17 {kVTDecodeInfo_Asynchronous = 0x1,kVTDecodeInfo_FrameDropped = 0x2,kVTDecodeInfo_ImageBufferModifiable = 0x4,};
enum _FC992FA9AB1438589A6F33FB448EEB8E {kAudioCodecBitRateFormat_CBR = 0x0,kAudioCodecBitRateFormat_ABR = 0x1,kAudioCodecBitRateFormat_VBR = 0x2,};
enum _FCED3B9C52BE2C5C472B245A5BBD74DF {sizeof_sfntCMapHeader = 0x4,};
enum _FD328F618E2B4EF63A1BC54D96FEFA99 {kSMPTETimeUnknown = 0x0,kSMPTETimeValid = 0x1,kSMPTETimeRunning = 0x2,};
enum _FD6CBAAC3D328164D753641128D2C844 {kNoStyleOptionsSelector = 0x0,kDisplayTextSelector = 0x1,kEngravedTextSelector = 0x2,kIlluminatedCapsSelector = 0x3,kTitlingCapsSelector = 0x4,kTallCapsSelector = 0x5,};
enum _FD9DA17C364D08FD30B670B4DA291526 {ENAttenuationMin = 0x0,ENAttenuationMax = 0xFF,};
enum _FDBBA22E0B1D0FD51420C64EB96DFD68 {AUHostTransportStateChanged = 0x1,AUHostTransportStateMoving = 0x2,AUHostTransportStateRecording = 0x4,AUHostTransportStateCycling = 0x8,};
enum _FE0696A386E387A88A94BF0BD5FE3D57 {HV_SUCCESS = 0x0,HV_ERROR = 0xFAE94001,HV_BUSY = 0xFAE94002,HV_BAD_ARGUMENT = 0xFAE94003,HV_NO_RESOURCES = 0xFAE94005,HV_NO_DEVICE = 0xFAE94006,HV_UNSUPPORTED = 0xFAE9400F,HV_ILLEGAL_GUEST_STATE = 0xFAE94004,};
enum _FFC5637CF8F1065A2E4524A24515F37A {kLowerCaseNumbersSelector = 0x0,kUpperCaseNumbersSelector = 0x1,};
typedef void *ALAssetsLibraryAccessFailureBlock;
enum ASAuthorizationAppleIDButtonStyle {ASAuthorizationAppleIDButtonStyleWhite = 0x0,ASAuthorizationAppleIDButtonStyleWhiteOutline = 0x1,ASAuthorizationAppleIDButtonStyleBlack = 0x2,};
enum ASCredentialServiceIdentifierType {ASCredentialServiceIdentifierTypeDomain = 0x0,ASCredentialServiceIdentifierTypeURL = 0x1,};
enum AVAudio3DMixingRenderingAlgorithm {AVAudio3DMixingRenderingAlgorithmEqualPowerPanning = 0x0,AVAudio3DMixingRenderingAlgorithmSphericalHead = 0x1,AVAudio3DMixingRenderingAlgorithmHRTF = 0x2,AVAudio3DMixingRenderingAlgorithmSoundField = 0x3,AVAudio3DMixingRenderingAlgorithmStereoPassThrough = 0x5,AVAudio3DMixingRenderingAlgorithmHRTFHQ = 0x6,AVAudio3DMixingRenderingAlgorithmAuto = 0x7,};
typedef void *AVAudioEngineManualRenderingBlock;
enum AVAudioEngineManualRenderingError {AVAudioEngineManualRenderingErrorInvalidMode = 0xFFFEC460,AVAudioEngineManualRenderingErrorInitialized = 0xFFFEC45F,AVAudioEngineManualRenderingErrorNotRunning = 0xFFFEC45E,};
struct AVAudioMixInputParametersInternal;
struct AVCaptureStillImageOutputInternal;
struct AVCaptureSynchronizedDataInternal;
struct AVCompositionTrackSegmentInternal;
struct AVMutableCompositionTrackInternal;
struct AVMutableVideoCompositionInternal;
struct AVOutputSettingsAssistantInternal;
struct AVPlayerItemErrorLogEventInternal;
struct AVPlayerItemLegibleOutputInternal;
typedef void *AVSpeechSynthesizerBufferCallback;
typedef void (*CGDataConsumerReleaseInfoCallback)(void *);
typedef void (*CGDataProviderReleaseInfoCallback)(void *);
enum CPNavigationAlertDismissalContext {CPNavigationAlertDismissalContextTimeout = 0x0,CPNavigationAlertDismissalContextUserDismissed = 0x1,CPNavigationAlertDismissalContextSystemDismissed = 0x2,};
typedef void (*CVPixelBufferReleaseBytesCallback)(void *,  void *);
struct CompileTimeAssertionChecks_DNS_SD {char assert0[1];};
enum GCMicroGamepadSnapshotDataVersion {GCMicroGamepadSnapshotDataVersion1 = 0x100,};
typedef void *GCMicroGamepadValueChangedHandler;
typedef void *GKChallengeComposeCompletionBlock;
enum HKCategoryValueAudioExposureEvent {HKCategoryValueAudioExposureEventLoudEnvironment = 0x1,};
enum HKElectrocardiogramClassification {HKElectrocardiogramClassificationNotSet = 0x0,HKElectrocardiogramClassificationSinusRhythm = 0x1,HKElectrocardiogramClassificationAtrialFibrillation = 0x2,HKElectrocardiogramClassificationInconclusiveLowHeartRate = 0x3,HKElectrocardiogramClassificationInconclusiveHighHeartRate = 0x4,HKElectrocardiogramClassificationInconclusivePoorReading = 0x5,HKElectrocardiogramClassificationInconclusiveOther = 0x6,HKElectrocardiogramClassificationUnrecognized = 0x64,};
enum HKElectrocardiogramSymptomsStatus {HKElectrocardiogramSymptomsStatusNotSet = 0x0,HKElectrocardiogramSymptomsStatusNone = 0x1,HKElectrocardiogramSymptomsStatusPresent = 0x2,};
enum HMCharacteristicValueContactState {HMCharacteristicValueContactStateDetected = 0x0,HMCharacteristicValueContactStateNone = 0x1,};
enum HMCharacteristicValueFilterChange {HMCharacteristicValueFilterChangeNotNeeded = 0x0,HMCharacteristicValueFilterChangeNeeded = 0x1,};
enum HMCharacteristicValueJammedStatus {HMCharacteristicValueJammedStatusNone = 0x0,HMCharacteristicValueJammedStatusJammed = 0x1,};
enum INCancelWorkoutIntentResponseCode {INCancelWorkoutIntentResponseCodeUnspecified = 0x0,INCancelWorkoutIntentResponseCodeReady = 0x1,INCancelWorkoutIntentResponseCodeContinueInApp = 0x2,INCancelWorkoutIntentResponseCodeFailure = 0x3,INCancelWorkoutIntentResponseCodeFailureRequiringAppLaunch = 0x4,INCancelWorkoutIntentResponseCodeFailureNoMatchingWorkout = 0x5,INCancelWorkoutIntentResponseCodeHandleInApp = 0x6,INCancelWorkoutIntentResponseCodeSuccess = 0x7,};
enum INGetRideStatusIntentResponseCode {INGetRideStatusIntentResponseCodeUnspecified = 0x0,INGetRideStatusIntentResponseCodeReady = 0x1,INGetRideStatusIntentResponseCodeInProgress = 0x2,INGetRideStatusIntentResponseCodeSuccess = 0x3,INGetRideStatusIntentResponseCodeFailure = 0x4,INGetRideStatusIntentResponseCodeFailureRequiringAppLaunch = 0x5,INGetRideStatusIntentResponseCodeFailureRequiringAppLaunchMustVerifyCredentials = 0x6,INGetRideStatusIntentResponseCodeFailureRequiringAppLaunchServiceTemporarilyUnavailable = 0x7,};
enum INGetVisualCodeIntentResponseCode {INGetVisualCodeIntentResponseCodeUnspecified = 0x0,INGetVisualCodeIntentResponseCodeReady = 0x1,INGetVisualCodeIntentResponseCodeContinueInApp = 0x2,INGetVisualCodeIntentResponseCodeInProgress = 0x3,INGetVisualCodeIntentResponseCodeSuccess = 0x4,INGetVisualCodeIntentResponseCodeFailure = 0x5,INGetVisualCodeIntentResponseCodeFailureRequiringAppLaunch = 0x6,INGetVisualCodeIntentResponseCodeFailureAppConfigurationRequired = 0x7,};
enum INResumeWorkoutIntentResponseCode {INResumeWorkoutIntentResponseCodeUnspecified = 0x0,INResumeWorkoutIntentResponseCodeReady = 0x1,INResumeWorkoutIntentResponseCodeContinueInApp = 0x2,INResumeWorkoutIntentResponseCodeFailure = 0x3,INResumeWorkoutIntentResponseCodeFailureRequiringAppLaunch = 0x4,INResumeWorkoutIntentResponseCodeFailureNoMatchingWorkout = 0x5,INResumeWorkoutIntentResponseCodeHandleInApp = 0x6,INResumeWorkoutIntentResponseCodeSuccess = 0x7,};
enum INTransferMoneyIntentResponseCode {INTransferMoneyIntentResponseCodeUnspecified = 0x0,INTransferMoneyIntentResponseCodeReady = 0x1,INTransferMoneyIntentResponseCodeInProgress = 0x2,INTransferMoneyIntentResponseCodeSuccess = 0x3,INTransferMoneyIntentResponseCodeFailure = 0x4,INTransferMoneyIntentResponseCodeFailureRequiringAppLaunch = 0x5,INTransferMoneyIntentResponseCodeFailureCredentialsUnverified = 0x6,INTransferMoneyIntentResponseCodeFailureInsufficientFunds = 0x7,};
enum MACRO_MTLMaxBlitPassSampleBuffers {MTLMaxBlitPassSampleBuffers = 4,};
enum MACRO_NSFoundationVersionNumber10 {NSFoundationVersionNumber10_9 = 1056,NSFoundationVersionNumber10_9_1 = 1056,NSFoundationVersionNumber10_10_5 = 1154,NSFoundationVersionNumber10_10_Max = 1199,NSFoundationVersionNumber10_11 = 1252,NSFoundationVersionNumber10_11_4 = 1258,NSFoundationVersionNumber10_11_Max = 1299,};
enum MACRO_kABSourceTypeSearchableMask {kABSourceTypeSearchableMask = 0x1000000,};
enum MACRO_kLAErrorTouchIDNotAvailable {kLAErrorTouchIDNotAvailable = -6,};
enum MPMediaLibraryAuthorizationStatus {MPMediaLibraryAuthorizationStatusNotDetermined = 0x0,MPMediaLibraryAuthorizationStatusDenied = 0x1,MPMediaLibraryAuthorizationStatusRestricted = 0x2,MPMediaLibraryAuthorizationStatusAuthorized = 0x3,};
enum MTLTessellationFactorStepFunction {MTLTessellationFactorStepFunctionConstant = 0x0,MTLTessellationFactorStepFunctionPerPatch = 0x1,MTLTessellationFactorStepFunctionPerInstance = 0x2,MTLTessellationFactorStepFunctionPerPatchAndPerInstance = 0x3,};
enum PHImageRequestOptionsDeliveryMode {PHImageRequestOptionsDeliveryModeOpportunistic = 0x0,PHImageRequestOptionsDeliveryModeHighQualityFormat = 0x1,PHImageRequestOptionsDeliveryModeFastFormat = 0x2,};
enum PHVideoRequestOptionsDeliveryMode {PHVideoRequestOptionsDeliveryModeAutomatic = 0x0,PHVideoRequestOptionsDeliveryModeHighQualityFormat = 0x1,PHVideoRequestOptionsDeliveryModeMediumQualityFormat = 0x2,PHVideoRequestOptionsDeliveryModeFastFormat = 0x3,};
typedef void *PKSignatureRequestCompletionBlock;
typedef void *SFAuthenticationCompletionHandler;
enum SKCloudServiceAuthorizationStatus {SKCloudServiceAuthorizationStatusNotDetermined = 0x0,SKCloudServiceAuthorizationStatusDenied = 0x1,SKCloudServiceAuthorizationStatusRestricted = 0x2,SKCloudServiceAuthorizationStatusAuthorized = 0x3,};
enum SKProductStorePromotionVisibility {SKProductStorePromotionVisibilityDefault = 0x0,SKProductStorePromotionVisibilityShow = 0x1,SKProductStorePromotionVisibilityHide = 0x2,};
typedef void (*ScheduledAudioSliceCompletionProc)(void *, ScheduledAudioSlice *);
enum UICollectionViewReorderingCadence {UICollectionViewReorderingCadenceImmediate = 0x0,UICollectionViewReorderingCadenceFast = 0x1,UICollectionViewReorderingCadenceSlow = 0x2,};
enum UIControlContentVerticalAlignment {UIControlContentVerticalAlignmentCenter = 0x0,UIControlContentVerticalAlignmentTop = 0x1,UIControlContentVerticalAlignmentBottom = 0x2,UIControlContentVerticalAlignmentFill = 0x3,};
enum UIEditingInteractionConfiguration {UIEditingInteractionConfigurationNone = 0x0,UIEditingInteractionConfigurationDefault = 0x1,};
enum UIImagePickerControllerSourceType {UIImagePickerControllerSourceTypePhotoLibrary = 0x0,UIImagePickerControllerSourceTypeCamera = 0x1,UIImagePickerControllerSourceTypeSavedPhotosAlbum = 0x2,};
enum UIPageViewControllerSpineLocation {UIPageViewControllerSpineLocationNone = 0x0,UIPageViewControllerSpineLocationMin = 0x1,UIPageViewControllerSpineLocationMid = 0x2,UIPageViewControllerSpineLocationMax = 0x3,};
typedef void *UIStoryboardViewControllerCreator;
typedef void *UITextAttributesConversionHandler;
enum UITraitEnvironmentLayoutDirection {UITraitEnvironmentLayoutDirectionUnspecified = 0xFFFFFFFFFFFFFFFF,UITraitEnvironmentLayoutDirectionLeftToRight = 0x0,UITraitEnvironmentLayoutDirectionRightToLeft = 0x1,};
struct _SparseIterativeMethodBaseOptions {void (*reportError)( char *);};
enum axr_channel_info_struct_version_t {axr_channel_info_current = 0x1,};
enum axr_decoder_info_struct_version_t {axr_decoder_info_current = 0x1,};
typedef unsigned long long dispatch_source_mach_recv_flags_t;
typedef unsigned long long dispatch_source_mach_send_flags_t;
struct dyld_chained_ptr_arm64e_auth_bind {unsigned long long ordinal : 16;unsigned long long zero : 16;unsigned long long diversity : 16;unsigned long long addrDiv : 1;unsigned long long key : 2;unsigned long long next : 11;unsigned long long bind : 1;unsigned long long auth : 1;};
typedef host_can_has_debugger_info host_can_has_debugger_info_data_t;
typedef void *nw_framer_message_dispose_value_t;
typedef void *nw_report_resolution_enumerator_t;
typedef void *sec_protocol_challenge_complete_t;
struct std____1____extract_key_first_tag {};
struct std____1____is_referenceable_impl {};
struct std____1__basic_ifstream_wchar_t_;
struct std____1__basic_ios_wchar_t__vtbl; 
struct std____1__basic_ofstream_wchar_t_;
struct std____1__moneypunct_char__false_ {};
struct std____1__ratio_1__1000000000000_ {};
struct std____1__ratio_1000000000000__1_ {};
struct std__bad_array_length_vtbl_layout; 
struct std__invalid_argument_vtbl_layout; 
struct std__nested_exception_vtbl_layout; 
enum ADInterstitialPresentationPolicy {ADInterstitialPresentationPolicyNone = 0x0,ADInterstitialPresentationPolicyAutomatic = 0x1,ADInterstitialPresentationPolicyManual = 0x2,};
enum ASAuthorizationAppleIDButtonType {ASAuthorizationAppleIDButtonTypeSignIn = 0x0,ASAuthorizationAppleIDButtonTypeContinue = 0x1,ASAuthorizationAppleIDButtonTypeSignUp = 0x2,ASAuthorizationAppleIDButtonTypeDefault = 0x0,};
struct AVAssetReaderTrackOutputInternal;
enum AVAudioEngineManualRenderingMode {AVAudioEngineManualRenderingModeOffline = 0x0,AVAudioEngineManualRenderingModeRealtime = 0x1,};
enum AVAudioSessionRouteSharingPolicy {AVAudioSessionRouteSharingPolicyDefault = 0x0,AVAudioSessionRouteSharingPolicyLongFormAudio = 0x1,AVAudioSessionRouteSharingPolicyLongForm = 0x1,AVAudioSessionRouteSharingPolicyIndependent = 0x2,AVAudioSessionRouteSharingPolicyLongFormVideo = 0x3,};
struct AVCaptureAudioDataOutputInternal;
struct AVCaptureAudioFileOutputInternal;
struct AVCaptureDepthDataOutputInternal;
enum AVCaptureLensStabilizationStatus {AVCaptureLensStabilizationStatusUnsupported = 0x0,AVCaptureLensStabilizationStatusOff = 0x1,AVCaptureLensStabilizationStatusActive = 0x2,AVCaptureLensStabilizationStatusOutOfRange = 0x3,AVCaptureLensStabilizationStatusUnavailable = 0x4,};
struct AVCaptureMovieFileOutputInternal;
enum AVCaptureOutputDataDroppedReason {AVCaptureOutputDataDroppedReasonNone = 0x0,AVCaptureOutputDataDroppedReasonLateData = 0x1,AVCaptureOutputDataDroppedReasonOutOfBuffers = 0x2,AVCaptureOutputDataDroppedReasonDiscontinuity = 0x3,};
struct AVCaptureVideoDataOutputInternal;
struct AVDateRangeMetadataGroupInternal;
typedef int CFFileDescriptorNativeDescriptor;
enum CFNotificationSuspensionBehavior {CFNotificationSuspensionBehaviorDrop = 0x1,CFNotificationSuspensionBehaviorCoalesce = 0x2,CFNotificationSuspensionBehaviorHold = 0x3,CFNotificationSuspensionBehaviorDeliverImmediately = 0x4,};
typedef void *CMDyskineticSymptomResultHandler;
typedef void *HKObserverQueryCompletionHandler;
enum HMCharacteristicValueProgramMode {HMCharacteristicValueProgramModeNotScheduled = 0x0,HMCharacteristicValueProgramModeScheduled = 0x1,HMCharacteristicValueProgramModeScheduleOverriddenToManual = 0x2,};
enum HMCharacteristicValueStatusFault {HMCharacteristicValueStatusFaultNoFault = 0x0,HMCharacteristicValueStatusFaultGeneralFault = 0x1,};
enum INAppendToNoteIntentResponseCode {INAppendToNoteIntentResponseCodeUnspecified = 0x0,INAppendToNoteIntentResponseCodeReady = 0x1,INAppendToNoteIntentResponseCodeInProgress = 0x2,INAppendToNoteIntentResponseCodeSuccess = 0x3,INAppendToNoteIntentResponseCodeFailure = 0x4,INAppendToNoteIntentResponseCodeFailureRequiringAppLaunch = 0x5,INAppendToNoteIntentResponseCodeFailureCannotUpdatePasswordProtectedNote = 0x6,};
enum INPauseWorkoutIntentResponseCode {INPauseWorkoutIntentResponseCodeUnspecified = 0x0,INPauseWorkoutIntentResponseCodeReady = 0x1,INPauseWorkoutIntentResponseCodeContinueInApp = 0x2,INPauseWorkoutIntentResponseCodeFailure = 0x3,INPauseWorkoutIntentResponseCodeFailureRequiringAppLaunch = 0x4,INPauseWorkoutIntentResponseCodeFailureNoMatchingWorkout = 0x5,INPauseWorkoutIntentResponseCodeHandleInApp = 0x6,INPauseWorkoutIntentResponseCodeSuccess = 0x7,};
enum INStartWorkoutIntentResponseCode {INStartWorkoutIntentResponseCodeUnspecified = 0x0,INStartWorkoutIntentResponseCodeReady = 0x1,INStartWorkoutIntentResponseCodeContinueInApp = 0x2,INStartWorkoutIntentResponseCodeFailure = 0x3,INStartWorkoutIntentResponseCodeFailureRequiringAppLaunch = 0x4,INStartWorkoutIntentResponseCodeFailureOngoingWorkout = 0x5,INStartWorkoutIntentResponseCodeFailureNoMatchingWorkout = 0x6,INStartWorkoutIntentResponseCodeHandleInApp = 0x7,INStartWorkoutIntentResponseCodeSuccess = 0x8,};
enum MACRO_NSURLResponseUnknownLength {NSURLResponseUnknownLength = -1,};
enum MACRO_kCFStringEncodingInvalidId {kCFStringEncodingInvalidId = 0xFFFFFFFF,};
enum MACRO_kLAErrorTouchIDNotEnrolled {kLAErrorTouchIDNotEnrolled = -7,};
enum MACaptionAppearanceTextEdgeStyle {kMACaptionAppearanceTextEdgeStyleUndefined = 0x0,kMACaptionAppearanceTextEdgeStyleNone = 0x1,kMACaptionAppearanceTextEdgeStyleRaised = 0x2,kMACaptionAppearanceTextEdgeStyleDepressed = 0x3,kMACaptionAppearanceTextEdgeStyleUniform = 0x4,kMACaptionAppearanceTextEdgeStyleDropShadow = 0x5,};
enum MSMessagesAppPresentationContext {MSMessagesAppPresentationContextMessages = 0x0,MSMessagesAppPresentationContextMedia = 0x1,};
enum MTLMultisampleDepthResolveFilter {MTLMultisampleDepthResolveFilterSample0 = 0x0,MTLMultisampleDepthResolveFilterMin = 0x1,MTLMultisampleDepthResolveFilterMax = 0x2,};
enum NSRelativeDateTimeFormatterStyle {NSRelativeDateTimeFormatterStyleNumeric = 0x0,NSRelativeDateTimeFormatterStyleNamed = 0x1,};
enum NSURLSessionMultipathServiceType {NSURLSessionMultipathServiceTypeNone = 0x0,NSURLSessionMultipathServiceTypeHandover = 0x1,NSURLSessionMultipathServiceTypeInteractive = 0x2,NSURLSessionMultipathServiceTypeAggregate = 0x3,};
enum NSURLSessionWebSocketMessageType {NSURLSessionWebSocketMessageTypeData = 0x0,NSURLSessionWebSocketMessageTypeString = 0x1,};
typedef void *UIAccessibilityCustomRotorSearch;
enum UICollectionLayoutListAppearance {UICollectionLayoutListAppearancePlain = 0x0,UICollectionLayoutListAppearanceGrouped = 0x1,UICollectionLayoutListAppearanceInsetGrouped = 0x2,UICollectionLayoutListAppearanceSidebar = 0x3,UICollectionLayoutListAppearanceSidebarPlain = 0x4,};
enum UICollectionLayoutListFooterMode {UICollectionLayoutListFooterModeNone = 0x0,UICollectionLayoutListFooterModeSupplementary = 0x1,};
enum UICollectionLayoutListHeaderMode {UICollectionLayoutListHeaderModeNone = 0x0,UICollectionLayoutListHeaderModeSupplementary = 0x1,UICollectionLayoutListHeaderModeFirstItemInSection = 0x2,};
enum UIDynamicItemCollisionBoundsType {UIDynamicItemCollisionBoundsTypeRectangle = 0x0,UIDynamicItemCollisionBoundsTypeEllipse = 0x1,UIDynamicItemCollisionBoundsTypePath = 0x2,};
typedef void *UIPrinterPickerCompletionHandler;
enum UISplitViewControllerDisplayMode {UISplitViewControllerDisplayModeAutomatic = 0x0,UISplitViewControllerDisplayModeSecondaryOnly = 0x1,UISplitViewControllerDisplayModeOneBesideSecondary = 0x2,UISplitViewControllerDisplayModeOneOverSecondary = 0x3,UISplitViewControllerDisplayModeTwoBesideSecondary = 0x4,UISplitViewControllerDisplayModeTwoOverSecondary = 0x5,UISplitViewControllerDisplayModeTwoDisplaceSecondary = 0x6,UISplitViewControllerDisplayModePrimaryHidden = 0x1,UISplitViewControllerDisplayModeAllVisible = 0x2,UISplitViewControllerDisplayModePrimaryOverlay = 0x3,};
enum UISplitViewControllerPrimaryEdge {UISplitViewControllerPrimaryEdgeLeading = 0x0,UISplitViewControllerPrimaryEdgeTrailing = 0x1,};
enum UIUserNotificationActionBehavior {UIUserNotificationActionBehaviorDefault = 0x0,UIUserNotificationActionBehaviorTextInput = 0x1,};
enum UIUserNotificationActivationMode {UIUserNotificationActivationModeForeground = 0x0,UIUserNotificationActivationModeBackground = 0x1,};
enum dispatch_autorelease_frequency_t {DISPATCH_AUTORELEASE_FREQUENCY_INHERIT = 0x0,DISPATCH_AUTORELEASE_FREQUENCY_WORK_ITEM = 0x1,DISPATCH_AUTORELEASE_FREQUENCY_NEVER = 0x2,};
struct dyld_chained_ptr_32_cache_rebase {unsigned int target : 30;unsigned int next : 2;};
typedef gss_krb5_lucid_context_version gss_krb5_lucid_context_version_t;
typedef memory_object_behave_info memory_object_behave_info_data_t;
enum nw_ip_local_address_preference_t {nw_ip_local_address_preference_default = 0x0,nw_ip_local_address_preference_temporary = 0x1,nw_ip_local_address_preference_stable = 0x2,};
typedef void *nw_path_monitor_cancel_handler_t;
typedef void *nw_path_monitor_update_handler_t;
struct std____1____extract_key_fail_tag {};
struct std____1____extract_key_self_tag {};
struct std____1____padding_char16_t__2_ {unsigned char __xx[1];};
struct std____1____padding_char32_t__4_ {unsigned char __xx[3];};
struct std____1__bad_function_call_vtbl; 
struct std____1__basic_filebuf_wchar_t_;
struct std____1__basic_fstream_wchar_t_;
struct std____1__basic_ostream_wchar_t_ {std____1__basic_ostream_wchar_t__vtbl *__vftable ;};
typedef char std____1__ctype_char___char_type;
struct std____1__ios_base__failure_vtbl; 
struct std____1__moneypunct_char__true_ {};
struct std__underflow_error_vtbl_layout; 
enum sysdir_search_path_domain_mask_t {SYSDIR_DOMAIN_MASK_USER = 0x1,SYSDIR_DOMAIN_MASK_LOCAL = 0x2,SYSDIR_DOMAIN_MASK_NETWORK = 0x4,SYSDIR_DOMAIN_MASK_SYSTEM = 0x8,SYSDIR_DOMAIN_MASK_ALL = 0xFFFF,};
typedef task_inspect_basic_counts task_inspect_basic_counts_data_t;
typedef thread_latency_qos_policy thread_latency_qos_policy_data_t;
struct vImage_MultidimensionalTableData;
typedef vm_region_submap_short_info_64 *vm_region_submap_short_info_64_t;
typedef void (*xmlSchematronValidityWarningFunc)(void *,  char *, ...);
typedef void *ALAssetsLibraryGroupResultBlock;
struct AVAssetWriterInputGroupInternal;
enum AVAudioSessionRouteChangeReason {AVAudioSessionRouteChangeReasonUnknown = 0x0,AVAudioSessionRouteChangeReasonNewDeviceAvailable = 0x1,AVAudioSessionRouteChangeReasonOldDeviceUnavailable = 0x2,AVAudioSessionRouteChangeReasonCategoryChange = 0x3,AVAudioSessionRouteChangeReasonOverride = 0x4,AVAudioSessionRouteChangeReasonWakeFromSleep = 0x6,AVAudioSessionRouteChangeReasonNoSuitableRouteForCategory = 0x7,AVAudioSessionRouteChangeReasonRouteConfigurationChange = 0x8,};
struct AVCameraCalibrationDataInternal;
struct AVCaptureMetadataOutputInternal;
enum AVCaptureVideoStabilizationMode {AVCaptureVideoStabilizationModeOff = 0x0,AVCaptureVideoStabilizationModeStandard = 0x1,AVCaptureVideoStabilizationModeCinematic = 0x2,AVCaptureVideoStabilizationModeCinematicExtended = 0x3,AVCaptureVideoStabilizationModeAuto = 0xFFFFFFFFFFFFFFFF,};
struct AVFragmentedAssetMinderInternal;
struct AVMutableMediaSelectionInternal;
struct AVPlayerItemVideoOutputInternal;
enum BNNSOptimizerSGDMomentumVariant {BNNSSGDMomentumVariant0 = 0x0,BNNSSGDMomentumVariant1 = 0x1,BNNSSGDMomentumVariant2 = 0x2,};
enum CFStreamErrorHTTPAuthentication {kCFStreamErrorHTTPAuthenticationTypeUnsupported = 0xFFFFFC18,kCFStreamErrorHTTPAuthenticationBadUserName = 0xFFFFFC17,kCFStreamErrorHTTPAuthenticationBadPassword = 0xFFFFFC16,};
typedef void *CMSampleBufferInvalidateHandler;
typedef void *CTFontDescriptorProgressHandler;
typedef void (*CTRunDelegateDeallocateCallback)(void *);
enum EKCalendarChooserSelectionStyle {EKCalendarChooserSelectionStyleSingle = 0x0,EKCalendarChooserSelectionStyleMultiple = 0x1,};
typedef void *ENDiagnosisKeysAvailableHandler;
enum GKGameCenterViewControllerState {GKGameCenterViewControllerStateDefault = 0xFFFFFFFFFFFFFFFF,GKGameCenterViewControllerStateLeaderboards = 0x0,GKGameCenterViewControllerStateAchievements = 0x1,GKGameCenterViewControllerStateChallenges = 0x2,GKGameCenterViewControllerStateLocalPlayerProfile = 0x3,GKGameCenterViewControllerStateDashboard = 0x4,};
enum HKBodyTemperatureSensorLocation {HKBodyTemperatureSensorLocationOther = 0x0,HKBodyTemperatureSensorLocationArmpit = 0x1,HKBodyTemperatureSensorLocationBody = 0x2,HKBodyTemperatureSensorLocationEar = 0x3,HKBodyTemperatureSensorLocationFinger = 0x4,HKBodyTemperatureSensorLocationGastroIntestinal = 0x5,HKBodyTemperatureSensorLocationMouth = 0x6,HKBodyTemperatureSensorLocationRectum = 0x7,HKBodyTemperatureSensorLocationToe = 0x8,HKBodyTemperatureSensorLocationEarDrum = 0x9,HKBodyTemperatureSensorLocationTemporalArtery = 0xA,HKBodyTemperatureSensorLocationForehead = 0xB,};
enum HMCharacteristicValueAirQuality {HMCharacteristicValueAirQualityUnknown = 0x0,HMCharacteristicValueAirQualityExcellent = 0x1,HMCharacteristicValueAirQualityGood = 0x2,HMCharacteristicValueAirQualityFair = 0x3,HMCharacteristicValueAirQualityInferior = 0x4,HMCharacteristicValueAirQualityPoor = 0x5,};
enum HMCharacteristicValueInputEvent {HMCharacteristicValueInputEventSinglePress = 0x0,HMCharacteristicValueInputEventDoublePress = 0x1,HMCharacteristicValueInputEventLongPress = 0x2,};
enum HMCharacteristicValueLeakStatus {HMCharacteristicValueLeakStatusNone = 0x0,HMCharacteristicValueLeakStatusDetected = 0x1,};
enum HMCharacteristicValueUsageState {HMCharacteristicValueUsageStateNotInUse = 0x0,HMCharacteristicValueUsageStateInUse = 0x1,};
enum INDeleteTasksIntentResponseCode {INDeleteTasksIntentResponseCodeUnspecified = 0x0,INDeleteTasksIntentResponseCodeReady = 0x1,INDeleteTasksIntentResponseCodeInProgress = 0x2,INDeleteTasksIntentResponseCodeSuccess = 0x3,INDeleteTasksIntentResponseCodeFailure = 0x4,INDeleteTasksIntentResponseCodeFailureRequiringAppLaunch = 0x5,};
enum INRequestRideIntentResponseCode {INRequestRideIntentResponseCodeUnspecified = 0x0,INRequestRideIntentResponseCodeReady = 0x1,INRequestRideIntentResponseCodeInProgress = 0x2,INRequestRideIntentResponseCodeSuccess = 0x3,INRequestRideIntentResponseCodeFailure = 0x4,INRequestRideIntentResponseCodeFailureRequiringAppLaunch = 0x5,INRequestRideIntentResponseCodeFailureRequiringAppLaunchMustVerifyCredentials = 0x6,INRequestRideIntentResponseCodeFailureRequiringAppLaunchNoServiceInArea = 0x7,INRequestRideIntentResponseCodeFailureRequiringAppLaunchServiceTemporarilyUnavailable = 0x8,INRequestRideIntentResponseCodeFailureRequiringAppLaunchPreviousRideNeedsCompletion = 0x9,INRequestRideIntentResponseCodeFailureRequiringAppLaunchRideScheduledTooFar = 0xA,};
enum INSendMessageIntentResponseCode {INSendMessageIntentResponseCodeUnspecified = 0x0,INSendMessageIntentResponseCodeReady = 0x1,INSendMessageIntentResponseCodeInProgress = 0x2,INSendMessageIntentResponseCodeSuccess = 0x3,INSendMessageIntentResponseCodeFailure = 0x4,INSendMessageIntentResponseCodeFailureRequiringAppLaunch = 0x5,INSendMessageIntentResponseCodeFailureMessageServiceNotAvailable = 0x6,};
enum INSendPaymentIntentResponseCode {INSendPaymentIntentResponseCodeUnspecified = 0x0,INSendPaymentIntentResponseCodeReady = 0x1,INSendPaymentIntentResponseCodeInProgress = 0x2,INSendPaymentIntentResponseCodeSuccess = 0x3,INSendPaymentIntentResponseCodeFailure = 0x4,INSendPaymentIntentResponseCodeFailureRequiringAppLaunch = 0x5,INSendPaymentIntentResponseCodeFailureCredentialsUnverified = 0x6,INSendPaymentIntentResponseCodeFailurePaymentsAmountBelowMinimum = 0x7,INSendPaymentIntentResponseCodeFailurePaymentsAmountAboveMaximum = 0x8,INSendPaymentIntentResponseCodeFailurePaymentsCurrencyUnsupported = 0x9,INSendPaymentIntentResponseCodeFailureInsufficientFunds = 0xA,INSendPaymentIntentResponseCodeFailureNoBankAccount = 0xB,INSendPaymentIntentResponseCodeFailureNotEligible = 0xC,INSendPaymentIntentResponseCodeFailureTermsAndConditionsAcceptanceRequired = 0xD,};
enum INSnoozeTasksIntentResponseCode {INSnoozeTasksIntentResponseCodeUnspecified = 0x0,INSnoozeTasksIntentResponseCodeReady = 0x1,INSnoozeTasksIntentResponseCodeInProgress = 0x2,INSnoozeTasksIntentResponseCodeSuccess = 0x3,INSnoozeTasksIntentResponseCodeFailure = 0x4,INSnoozeTasksIntentResponseCodeFailureRequiringAppLaunch = 0x5,};
enum INUIAddVoiceShortcutButtonStyle {INUIAddVoiceShortcutButtonStyleWhite = 0x0,INUIAddVoiceShortcutButtonStyleWhiteOutline = 0x1,INUIAddVoiceShortcutButtonStyleBlack = 0x2,INUIAddVoiceShortcutButtonStyleBlackOutline = 0x3,INUIAddVoiceShortcutButtonStyleAutomatic = 0x4,INUIAddVoiceShortcutButtonStyleAutomaticOutline = 0x5,};
enum MACRO_NSFoundationVersionNumber {NSFoundationVersionNumber_iOS_8_x_Max = 1199,NSFoundationVersionNumber_iOS_9_x_Max = 1299,};
enum MACRO_kDNSServiceMaxServiceName {kDNSServiceMaxServiceName = 64,};
enum MACRO_kLAErrorWatchNotAvailable {kLAErrorWatchNotAvailable = -11,};
enum MLMultiArrayShapeConstraintType {MLMultiArrayShapeConstraintTypeUnspecified = 0x1,MLMultiArrayShapeConstraintTypeEnumerated = 0x2,MLMultiArrayShapeConstraintTypeRange = 0x3,};
typedef NSArray MPSCNNDropoutGradientStateBatch;
typedef NSArray MPSNNMultiaryGradientStateBatch;
enum MPSTriangleIntersectionTestType {MPSTriangleIntersectionTestTypeDefault = 0x0,MPSTriangleIntersectionTestTypeWatertight = 0x1,};
typedef void *MTLSharedEventNotificationBlock;
enum NEVPNIKEv2DeadPeerDetectionRate {NEVPNIKEv2DeadPeerDetectionRateNone = 0x0,NEVPNIKEv2DeadPeerDetectionRateLow = 0x1,NEVPNIKEv2DeadPeerDetectionRateMedium = 0x2,NEVPNIKEv2DeadPeerDetectionRateHigh = 0x3,};
typedef void *NSItemProviderCompletionHandler;
enum NSURLSessionResponseDisposition {NSURLSessionResponseCancel = 0x0,NSURLSessionResponseAllow = 0x1,NSURLSessionResponseBecomeDownload = 0x2,NSURLSessionResponseBecomeStream = 0x3,};
struct OpaqueJSPropertyNameAccumulator;
enum PHImageRequestOptionsResizeMode {PHImageRequestOptionsResizeModeNone = 0x0,PHImageRequestOptionsResizeModeFast = 0x1,PHImageRequestOptionsResizeModeExact = 0x2,};
typedef void *PHLivePhotoFrameProcessingBlock;
enum PKAddSecureElementPassErrorCode {PKAddSecureElementPassUnknownError = 0x0,PKAddSecureElementPassUserCanceledError = 0x1,PKAddSecureElementPassUnavailableError = 0x2,PKAddSecureElementPassInvalidConfigurationError = 0x3,PKAddSecureElementPassDeviceNotSupportedError = 0x4,PKAddSecureElementPassDeviceNotReadyError = 0x5,};
enum UICollectionViewScrollDirection {UICollectionViewScrollDirectionVertical = 0x0,UICollectionViewScrollDirectionHorizontal = 0x1,};
typedef void *UIConfigurationColorTransformer;
enum UIInterpolatingMotionEffectType {UIInterpolatingMotionEffectTypeTiltAlongHorizontalAxis = 0x0,UIInterpolatingMotionEffectTypeTiltAlongVerticalAxis = 0x1,};
enum UINavigationControllerOperation {UINavigationControllerOperationNone = 0x0,UINavigationControllerOperationPush = 0x1,UINavigationControllerOperationPop = 0x2,};
enum UIScrollViewKeyboardDismissMode {UIScrollViewKeyboardDismissModeNone = 0x0,UIScrollViewKeyboardDismissModeOnDrag = 0x1,UIScrollViewKeyboardDismissModeInteractive = 0x2,};
enum UIUserInterfaceActiveAppearance {UIUserInterfaceActiveAppearanceUnspecified = 0xFFFFFFFFFFFFFFFF,UIUserInterfaceActiveAppearanceInactive = 0x0,UIUserInterfaceActiveAppearanceActive = 0x1,};
enum UIUserNotificationActionContext {UIUserNotificationActionContextDefault = 0x0,UIUserNotificationActionContextMinimal = 0x1,};
enum UIWindowSceneDismissalAnimation {UIWindowSceneDismissalAnimationStandard = 0x1,UIWindowSceneDismissalAnimationCommit = 0x2,UIWindowSceneDismissalAnimationDecline = 0x3,};
enum axr_layer_info_struct_version_t {axr_layer_info_current = 0x1,};
enum axr_pixel_data_struct_version_t {axr_pixel_data_current = 0x0,};
typedef void (*cache_value_make_purgeable_cb_t)(void *, void *);
typedef host_preferred_user_arch host_preferred_user_arch_data_t;
enum mach_port_guard_exception_codes {kGUARD_EXC_DESTROY = 0x1,kGUARD_EXC_MOD_REFS = 0x2,kGUARD_EXC_SET_CONTEXT = 0x4,kGUARD_EXC_UNGUARDED = 0x8,kGUARD_EXC_INCORRECT_GUARD = 0x10,kGUARD_EXC_IMMOVABLE = 0x20,kGUARD_EXC_STRICT_REPLY = 0x40,kGUARD_EXC_MSG_FILTERED = 0x80,kGUARD_EXC_INVALID_RIGHT = 0x100,kGUARD_EXC_INVALID_NAME = 0x200,kGUARD_EXC_INVALID_VALUE = 0x400,kGUARD_EXC_INVALID_ARGUMENT = 0x800,kGUARD_EXC_RIGHT_EXISTS = 0x1000,kGUARD_EXC_KERN_NO_SPACE = 0x2000,kGUARD_EXC_KERN_FAILURE = 0x4000,kGUARD_EXC_KERN_RESOURCE = 0x8000,kGUARD_EXC_SEND_INVALID_REPLY = 0x10000,kGUARD_EXC_SEND_INVALID_VOUCHER = 0x20000,kGUARD_EXC_SEND_INVALID_RIGHT = 0x40000,kGUARD_EXC_RCV_INVALID_NAME = 0x80000,kGUARD_EXC_RCV_GUARDED_DESC = 0x100000,};
typedef mach_voucher_attr_recipe_data mach_voucher_attr_recipe_data_t;
typedef void *nw_connection_send_completion_t;
enum nw_data_transfer_report_state_t {nw_data_transfer_report_state_collecting = 0x1,nw_data_transfer_report_state_collected = 0x2,};
typedef void *nw_report_protocol_enumerator_t;
enum nw_report_resolution_protocol_t {nw_report_resolution_protocol_unknown = 0x0,nw_report_resolution_protocol_udp = 0x1,nw_report_resolution_protocol_tcp = 0x2,nw_report_resolution_protocol_tls = 0x3,nw_report_resolution_protocol_https = 0x4,};
struct opaqueCMBufferQueueTriggerToken;
typedef processor_set_basic_info processor_set_basic_info_data_t;
struct std____1____is_construct____nat {};
struct std____1____padding_wchar_t__4_ {unsigned char __xx[3];};
struct std____1__allocator_const_void_ {};
typedef std____1__atomic_unsigned_short_ std____1__atomic_uint_least16_t;
typedef std____1__atomic_unsigned_int_ std____1__atomic_uint_least32_t;
typedef std____1__atomic_unsigned_long_long_ std____1__atomic_uint_least64_t;
struct std____1__char_traits_char16_t_ {};
struct std____1__char_traits_char32_t_ {};
struct std____1__messages_byname_char_ {};
struct std____1__piecewise_construct_t {};
struct std____1__time_get_byname_char_ {};
struct std____1__time_put_byname_char_ {};
struct std__overflow_error_vtbl_layout; 
typedef thread_background_policy thread_background_policy_data_t;
typedef thread_precedence_policy thread_precedence_policy_data_t;
typedef thread_time_constraint_policy *thread_time_constraint_policy_t;
typedef vm_region_submap_info_64 vm_region_submap_info_data_64_t;
enum ACAccountCredentialRenewResult {ACAccountCredentialRenewResultRenewed = 0x0,ACAccountCredentialRenewResultRejected = 0x1,ACAccountCredentialRenewResultFailed = 0x2,};
enum AUParameterAutomationEventType {AUParameterAutomationEventTypeValue = 0x0,AUParameterAutomationEventTypeTouch = 0x1,AUParameterAutomationEventTypeRelease = 0x2,};
enum AUSpatialMixerAttenuationCurve {kSpatialMixerAttenuationCurve_Power = 0x0,kSpatialMixerAttenuationCurve_Exponential = 0x1,kSpatialMixerAttenuationCurve_Inverse = 0x2,kSpatialMixerAttenuationCurve_Linear = 0x3,};
enum AVAudioSessionInterruptionType {AVAudioSessionInterruptionTypeBegan = 0x1,AVAudioSessionInterruptionTypeEnded = 0x0,};
enum AVAudioSessionRecordPermission {AVAudioSessionRecordPermissionUndetermined = 0x756E6474,AVAudioSessionRecordPermissionDenied = 0x64656E79,AVAudioSessionRecordPermissionGranted = 0x67726E74,};
struct AVCaptureMetadataInputInternal;
struct AVCapturePhotoSettingsInternal;
struct AVFragmentedAssetTrackInternal;
struct AVFragmentedMovieTrackInternal;
struct AVMediaSelectionOptionInternal;
struct AVPortraitEffectsMatteInternal;
enum AudioComponentValidationResult {kAudioComponentValidationResult_Unknown = 0x0,kAudioComponentValidationResult_Passed = 0x1,kAudioComponentValidationResult_Failed = 0x2,kAudioComponentValidationResult_TimedOut = 0x3,kAudioComponentValidationResult_UnauthorizedError_Open = 0x4,kAudioComponentValidationResult_UnauthorizedError_Init = 0x5,};
enum CLKComplicationColumnAlignment {CLKComplicationColumnAlignmentLeading = 0x0,CLKComplicationColumnAlignmentTrailing = 0x1,CLKComplicationColumnAlignmentLeft = 0x0,CLKComplicationColumnAlignmentRight = 0x1,};
enum CLKComplicationPrivacyBehavior {CLKComplicationPrivacyBehaviorShowOnLockScreen = 0x0,CLKComplicationPrivacyBehaviorHideOnLockScreen = 0x1,};
typedef void *CMHeadphoneDeviceMotionHandler;
enum HKCategoryValueAppetiteChanges {HKCategoryValueAppetiteChangesUnspecified = 0x0,HKCategoryValueAppetiteChangesNoChange = 0x1,HKCategoryValueAppetiteChangesDecreased = 0x2,HKCategoryValueAppetiteChangesIncreased = 0x3,};
enum HMCharacteristicValueDoorState {HMCharacteristicValueDoorStateOpen = 0x0,HMCharacteristicValueDoorStateClosed = 0x1,HMCharacteristicValueDoorStateOpening = 0x2,HMCharacteristicValueDoorStateClosing = 0x3,HMCharacteristicValueDoorStateStopped = 0x4,};
enum HMCharacteristicValueSwingMode {HMCharacteristicValueSwingModeDisabled = 0x0,HMCharacteristicValueSwingModeEnabled = 0x1,};
enum HMCharacteristicValueValveType {HMCharacteristicValueValveTypeGenericValve = 0x0,HMCharacteristicValueValveTypeIrrigation = 0x1,HMCharacteristicValueValveTypeShowerHead = 0x2,HMCharacteristicValueValveTypeWaterFaucet = 0x3,};
enum INCancelRideIntentResponseCode {INCancelRideIntentResponseCodeUnspecified = 0x0,INCancelRideIntentResponseCodeReady = 0x1,INCancelRideIntentResponseCodeSuccess = 0x2,INCancelRideIntentResponseCodeFailure = 0x3,};
enum INCreateNoteIntentResponseCode {INCreateNoteIntentResponseCodeUnspecified = 0x0,INCreateNoteIntentResponseCodeReady = 0x1,INCreateNoteIntentResponseCodeInProgress = 0x2,INCreateNoteIntentResponseCodeSuccess = 0x3,INCreateNoteIntentResponseCodeFailure = 0x4,INCreateNoteIntentResponseCodeFailureRequiringAppLaunch = 0x5,};
enum INEndWorkoutIntentResponseCode {INEndWorkoutIntentResponseCodeUnspecified = 0x0,INEndWorkoutIntentResponseCodeReady = 0x1,INEndWorkoutIntentResponseCodeContinueInApp = 0x2,INEndWorkoutIntentResponseCodeFailure = 0x3,INEndWorkoutIntentResponseCodeFailureRequiringAppLaunch = 0x4,INEndWorkoutIntentResponseCodeFailureNoMatchingWorkout = 0x5,INEndWorkoutIntentResponseCodeHandleInApp = 0x6,INEndWorkoutIntentResponseCodeSuccess = 0x7,};
enum MACRO_kDNSServiceMaxDomainName {kDNSServiceMaxDomainName = 1009,};
enum MACaptionAppearanceDisplayType {kMACaptionAppearanceDisplayTypeForcedOnly = 0x0,kMACaptionAppearanceDisplayTypeAutomatic = 0x1,kMACaptionAppearanceDisplayTypeAlwaysOn = 0x2,};
typedef void *MIDICIProfileSpecificDataBlock;
typedef void *MKLocalSearchCompletionHandler;
typedef void *MKMapSnapshotCompletionHandler;
enum MPSAccelerationStructureStatus {MPSAccelerationStructureStatusUnbuilt = 0x0,MPSAccelerationStructureStatusBuilt = 0x1,};
enum MPSCNNConvolutionWeightsLayout {MPSCNNConvolutionWeightsLayoutOHWI = 0x0,};
enum MPSRNNBidirectionalCombineMode {MPSRNNBidirectionalCombineModeNone = 0x0,MPSRNNBidirectionalCombineModeAdd = 0x1,MPSRNNBidirectionalCombineModeConcatenate = 0x2,};
enum MSMessagesAppPresentationStyle {MSMessagesAppPresentationStyleCompact = 0x0,MSMessagesAppPresentationStyleExpanded = 0x1,MSMessagesAppPresentationStyleTranscript = 0x2,};
typedef void *MTLNewLibraryCompletionHandler;
enum NEEvaluateConnectionRuleAction {NEEvaluateConnectionRuleActionConnectIfNeeded = 0x1,NEEvaluateConnectionRuleActionNeverConnect = 0x2,};
enum NSBatchDeleteRequestResultType {NSBatchDeleteResultTypeStatusOnly = 0x0,NSBatchDeleteResultTypeObjectIDs = 0x1,NSBatchDeleteResultTypeCount = 0x2,};
enum NSBatchInsertRequestResultType {NSBatchInsertRequestResultTypeStatusOnly = 0x0,NSBatchInsertRequestResultTypeObjectIDs = 0x1,NSBatchInsertRequestResultTypeCount = 0x2,};
enum NSBatchUpdateRequestResultType {NSStatusOnlyResultType = 0x0,NSUpdatedObjectIDsResultType = 0x1,NSUpdatedObjectsCountResultType = 0x2,};
enum NSByteCountFormatterCountStyle {NSByteCountFormatterCountStyleFile = 0x0,NSByteCountFormatterCountStyleMemory = 0x1,NSByteCountFormatterCountStyleDecimal = 0x2,NSByteCountFormatterCountStyleBinary = 0x3,};
struct NSURLCredentialStorageInternal;
enum NSURLRequestNetworkServiceType {NSURLNetworkServiceTypeDefault = 0x0,NSURLNetworkServiceTypeVoIP = 0x1,NSURLNetworkServiceTypeVideo = 0x2,NSURLNetworkServiceTypeBackground = 0x3,NSURLNetworkServiceTypeVoice = 0x4,NSURLNetworkServiceTypeResponsiveData = 0x6,NSURLNetworkServiceTypeAVStreaming = 0x8,NSURLNetworkServiceTypeResponsiveAV = 0x9,NSURLNetworkServiceTypeCallSignaling = 0xB,};
enum NSURLSessionWebSocketCloseCode {NSURLSessionWebSocketCloseCodeInvalid = 0x0,NSURLSessionWebSocketCloseCodeNormalClosure = 0x3E8,NSURLSessionWebSocketCloseCodeGoingAway = 0x3E9,NSURLSessionWebSocketCloseCodeProtocolError = 0x3EA,NSURLSessionWebSocketCloseCodeUnsupportedData = 0x3EB,NSURLSessionWebSocketCloseCodeNoStatusReceived = 0x3ED,NSURLSessionWebSocketCloseCodeAbnormalClosure = 0x3EE,NSURLSessionWebSocketCloseCodeInvalidFramePayloadData = 0x3EF,NSURLSessionWebSocketCloseCodePolicyViolation = 0x3F0,NSURLSessionWebSocketCloseCodeMessageTooBig = 0x3F1,NSURLSessionWebSocketCloseCodeMandatoryExtensionMissing = 0x3F2,NSURLSessionWebSocketCloseCodeInternalServerError = 0x3F3,NSURLSessionWebSocketCloseCodeTLSHandshakeFailure = 0x3F7,};
struct PDFActionRemoteGoToPrivateVars;
typedef void *PHAssetResourceProgressHandler;
enum SKLabelHorizontalAlignmentMode {SKLabelHorizontalAlignmentModeCenter = 0x0,SKLabelHorizontalAlignmentModeLeft = 0x1,SKLabelHorizontalAlignmentModeRight = 0x2,};
enum UIAccessibilityNavigationStyle {UIAccessibilityNavigationStyleAutomatic = 0x0,UIAccessibilityNavigationStyleSeparate = 0x1,UIAccessibilityNavigationStyleCombined = 0x2,};
enum UIAccessibilityScrollDirection {UIAccessibilityScrollDirectionRight = 0x1,UIAccessibilityScrollDirectionLeft = 0x2,UIAccessibilityScrollDirectionUp = 0x3,UIAccessibilityScrollDirectionDown = 0x4,UIAccessibilityScrollDirectionNext = 0x5,UIAccessibilityScrollDirectionPrevious = 0x6,};
enum UIGuidedAccessRestrictionState {UIGuidedAccessRestrictionStateAllow = 0x0,UIGuidedAccessRestrictionStateDeny = 0x1,};
enum UIMenuControllerArrowDirection {UIMenuControllerArrowDefault = 0x0,UIMenuControllerArrowUp = 0x1,UIMenuControllerArrowDown = 0x2,UIMenuControllerArrowLeft = 0x3,UIMenuControllerArrowRight = 0x4,};
enum UITextFieldDidEndEditingReason {UITextFieldDidEndEditingReasonCommitted = 0x0,UITextFieldDidEndEditingReasonCancelled = 0x1,};
enum UIUserInterfaceLayoutDirection {UIUserInterfaceLayoutDirectionLeftToRight = 0x0,UIUserInterfaceLayoutDirectionRightToLeft = 0x1,};
enum axr_part_info_struct_version_t {axr_part_info_current = 0x1,};
struct dyld_chained_ptr_arm64e_bind24 {unsigned long long ordinal : 24;unsigned long long zero : 8;unsigned long long addend : 19;unsigned long long next : 11;unsigned long long bind : 1;unsigned long long auth : 1;};
struct dyld_chained_ptr_arm64e_rebase {unsigned long long target : 43;unsigned long long high8 : 8;unsigned long long next : 11;unsigned long long bind : 1;unsigned long long auth : 1;};
typedef memory_object_attr_info memory_object_attr_info_data_t;
typedef memory_object_perf_info memory_object_perf_info_data_t;
typedef void *nw_ws_client_request_handler_t;
typedef void *nw_ws_subprotocol_enumerator_t;
typedef processor_cpu_load_info processor_cpu_load_info_data_t;
typedef processor_set_load_info processor_set_load_info_data_t;
typedef void *sec_protocol_verify_complete_t;
struct std____1____money_get_wchar_t_ {};
struct std____1____money_put_wchar_t_ {};
struct std____1____numeric_type_void_ {};
struct std____1____tuple_cat_return__ {};
struct std____1____widen_from_utf8_8_ {};
typedef std____1__atomic_short_ std____1__atomic_int_least16_t;
typedef std____1__atomic_int_ std____1__atomic_int_least32_t;
typedef std____1__atomic_long_long_ std____1__atomic_int_least64_t;
typedef std____1__atomic_unsigned_short_ std____1__atomic_uint_fast16_t;
typedef std____1__atomic_unsigned_int_ std____1__atomic_uint_fast32_t;
typedef std____1__atomic_unsigned_long_long_ std____1__atomic_uint_fast64_t;
typedef std____1__atomic_unsigned_char_ std____1__atomic_uint_least8_t;
struct std____1__basic_ifstream_char_;
struct std____1__basic_ios_char__vtbl; 
struct std____1__basic_iostream_char_ {};
struct std____1__basic_ofstream_char_;
struct std____1__char_traits_wchar_t_ {};
typedef std____1__chrono__duration_long_long__std__ratio_1__1000000__ std____1__chrono__microseconds;
typedef std____1__chrono__duration_long_long__std__ratio_1__1000__ std____1__chrono__milliseconds;
struct std____1__chrono__steady_clock {};
struct std____1__chrono__system_clock {};
enum std____1__codecvt_base__result {ok = 0x0,partial = 0x1,error = 0x2,noconv = 0x3,};
struct std____1__complex_long_double_ {long double __re_;long double __im_;};
struct std____1__ios_base_vtbl_layout; 
enum std____1__pointer_safety____lx {relaxed = 0x0,preferred = 0x1,strict = 0x2,};
struct std____1__ratio_1__1000000000_ {};
struct std____1__ratio_1000000000__1_ {};
enum std____1__time_base__dateorder {no_order = 0x0,dmy = 0x1,mdy = 0x2,ymd = 0x3,ydm = 0x4,};
struct std__bad_array_new_length_vtbl; 
struct std__bad_exception_vtbl_layout; 
struct std__runtime_error_vtbl_layout; 
enum sysdir_search_path_directory_t {SYSDIR_DIRECTORY_APPLICATION = 0x1,SYSDIR_DIRECTORY_DEMO_APPLICATION = 0x2,SYSDIR_DIRECTORY_DEVELOPER_APPLICATION = 0x3,SYSDIR_DIRECTORY_ADMIN_APPLICATION = 0x4,SYSDIR_DIRECTORY_LIBRARY = 0x5,SYSDIR_DIRECTORY_DEVELOPER = 0x6,SYSDIR_DIRECTORY_USER = 0x7,SYSDIR_DIRECTORY_DOCUMENTATION = 0x8,SYSDIR_DIRECTORY_DOCUMENT = 0x9,SYSDIR_DIRECTORY_CORESERVICE = 0xA,SYSDIR_DIRECTORY_AUTOSAVED_INFORMATION = 0xB,SYSDIR_DIRECTORY_DESKTOP = 0xC,SYSDIR_DIRECTORY_CACHES = 0xD,SYSDIR_DIRECTORY_APPLICATION_SUPPORT = 0xE,SYSDIR_DIRECTORY_DOWNLOADS = 0xF,SYSDIR_DIRECTORY_INPUT_METHODS = 0x10,SYSDIR_DIRECTORY_MOVIES = 0x11,SYSDIR_DIRECTORY_MUSIC = 0x12,SYSDIR_DIRECTORY_PICTURES = 0x13,SYSDIR_DIRECTORY_PRINTER_DESCRIPTION = 0x14,SYSDIR_DIRECTORY_SHARED_PUBLIC = 0x15,SYSDIR_DIRECTORY_PREFERENCE_PANES = 0x16,SYSDIR_DIRECTORY_ALL_APPLICATIONS = 0x64,SYSDIR_DIRECTORY_ALL_LIBRARIES = 0x65,};
typedef thread_throughput_qos_policy *thread_throughput_qos_policy_t;
typedef vm_region_basic_info_64 vm_region_basic_info_data_64_t;
typedef vm_region_extended_info vm_region_extended_info_data_t;
typedef void (*xmlSchematronValidityErrorFunc)(void *,  char *, ...);
typedef void *AUParameterAutomationObserver;
struct AVAssetImageGeneratorInternal;
struct AVAssetResourceLoaderInternal;
struct AVCaptureAudioChannelInternal;
struct AVCaptureDeviceFormatInternal;
typedef void *AVMIDIPlayerCompletionHandler;
struct AVMediaSelectionGroupInternal;
struct AVMutableMetadataItemInternal;
struct AVPlayerItemAccessLogInternal;
enum AVSpeechSynthesisVoiceQuality {AVSpeechSynthesisVoiceQualityDefault = 0x1,AVSpeechSynthesisVoiceQualityEnhanced = 0x2,};
typedef AudioComponentPlugInInterface *(*AudioComponentFactoryFunction)( AudioComponentDescription *);
typedef void *AudioQueueOutputCallbackBlock;
typedef void (*CFAllocatorDeallocateCallBack)(void *, void *);
enum CFNumberFormatterRoundingMode {kCFNumberFormatterRoundCeiling = 0x0,kCFNumberFormatterRoundFloor = 0x1,kCFNumberFormatterRoundDown = 0x2,kCFNumberFormatterRoundUp = 0x3,kCFNumberFormatterRoundHalfEven = 0x4,kCFNumberFormatterRoundHalfDown = 0x5,kCFNumberFormatterRoundHalfUp = 0x6,};
typedef void (*CGFunctionReleaseInfoCallback)(void *);
typedef void *CHHapticEngineFinishedHandler;
enum CKApplicationPermissionStatus {CKApplicationPermissionStatusInitialState = 0x0,CKApplicationPermissionStatusCouldNotComplete = 0x1,CKApplicationPermissionStatusDenied = 0x2,CKApplicationPermissionStatusGranted = 0x3,};
enum CNPostalAddressFormatterStyle {CNPostalAddressFormatterStyleMailingAddress = 0x0,};
enum CTFontDescriptorMatchingState {kCTFontDescriptorMatchingDidBegin = 0x0,kCTFontDescriptorMatchingDidFinish = 0x1,kCTFontDescriptorMatchingWillBeginQuerying = 0x2,kCTFontDescriptorMatchingStalled = 0x3,kCTFontDescriptorMatchingWillBeginDownloading = 0x4,kCTFontDescriptorMatchingDownloading = 0x5,kCTFontDescriptorMatchingDidFinishDownloading = 0x6,kCTFontDescriptorMatchingDidMatch = 0x7,kCTFontDescriptorMatchingDidFailWithError = 0x8,};
enum EKCalendarChooserDisplayStyle {EKCalendarChooserDisplayAllCalendars = 0x0,EKCalendarChooserDisplayWritableCalendarsOnly = 0x1,};
typedef void *GCKeyboardValueChangedHandler;
enum HKCategoryValueAppleStandHour {HKCategoryValueAppleStandHourStood = 0x0,HKCategoryValueAppleStandHourIdle = 0x1,};
enum HKWorkoutSwimmingLocationType {HKWorkoutSwimmingLocationTypeUnknown = 0x0,HKWorkoutSwimmingLocationTypePool = 0x1,HKWorkoutSwimmingLocationTypeOpenWater = 0x2,};
enum HMCharacteristicValueSlatType {HMCharacteristicValueSlatTypeHorizontal = 0x0,HMCharacteristicValueSlatTypeVertical = 0x1,};
enum HMEventTriggerActivationState {HMEventTriggerActivationStateDisabled = 0x0,HMEventTriggerActivationStateDisabledNoHomeHub = 0x1,HMEventTriggerActivationStateDisabledNoCompatibleHomeHub = 0x2,HMEventTriggerActivationStateDisabledNoLocationServicesAuthorization = 0x3,HMEventTriggerActivationStateEnabled = 0x4,};
enum INPlayMediaIntentResponseCode {INPlayMediaIntentResponseCodeUnspecified = 0x0,INPlayMediaIntentResponseCodeReady = 0x1,INPlayMediaIntentResponseCodeContinueInApp = 0x2,INPlayMediaIntentResponseCodeInProgress = 0x3,INPlayMediaIntentResponseCodeSuccess = 0x4,INPlayMediaIntentResponseCodeHandleInApp = 0x5,INPlayMediaIntentResponseCodeFailure = 0x6,INPlayMediaIntentResponseCodeFailureRequiringAppLaunch = 0x7,INPlayMediaIntentResponseCodeFailureUnknownMediaType = 0x8,INPlayMediaIntentResponseCodeFailureNoUnplayedContent = 0x9,INPlayMediaIntentResponseCodeFailureRestrictedContent = 0xA,};
enum INStartCallIntentResponseCode {INStartCallIntentResponseCodeUnspecified = 0x0,INStartCallIntentResponseCodeReady = 0x1,INStartCallIntentResponseCodeContinueInApp = 0x2,INStartCallIntentResponseCodeUserConfirmationRequired = 0x3,INStartCallIntentResponseCodeFailure = 0x4,INStartCallIntentResponseCodeFailureRequiringAppLaunch = 0x5,INStartCallIntentResponseCodeFailureCallingServiceNotAvailable = 0x6,INStartCallIntentResponseCodeFailureContactNotSupportedByApp = 0x7,INStartCallIntentResponseCodeFailureAirplaneModeEnabled = 0x8,INStartCallIntentResponseCodeFailureUnableToHandOff = 0x9,INStartCallIntentResponseCodeFailureAppConfigurationRequired = 0xA,INStartCallIntentResponseCodeFailureCallInProgress = 0xB,INStartCallIntentResponseCodeFailureCallRinging = 0xC,};
enum INUpcomingMediaPredictionMode {INUpcomingMediaPredictionModeDefault = 0x0,INUpcomingMediaPredictionModeOnlyPredictSuggestedIntents = 0x1,};
enum MACRO_CoreSpotlightAPIVersion {CoreSpotlightAPIVersion = 40,};
enum MDLAnimatedValueInterpolation {MDLAnimatedValueInterpolationConstant = 0x0,MDLAnimatedValueInterpolationLinear = 0x1,};
enum MKAnnotationViewCollisionMode {MKAnnotationViewCollisionModeRectangle = 0x0,MKAnnotationViewCollisionModeCircle = 0x1,MKAnnotationViewCollisionModeNone = 0x2,};
enum MPChangeLanguageOptionSetting {MPChangeLanguageOptionSettingNone = 0x0,MPChangeLanguageOptionSettingNowPlayingItemOnly = 0x1,MPChangeLanguageOptionSettingPermanent = 0x2,};
enum MPSCNNWeightsQuantizationType {MPSCNNWeightsQuantizationTypeNone = 0x0,MPSCNNWeightsQuantizationTypeLinear = 0x1,MPSCNNWeightsQuantizationTypeLookupTable = 0x2,};
enum MPSGraphTensorNamedDataLayout {MPSGraphTensorNamedDataLayoutNCHW = 0x0,MPSGraphTensorNamedDataLayoutNHWC = 0x1,MPSGraphTensorNamedDataLayoutOIHW = 0x2,MPSGraphTensorNamedDataLayoutHWIO = 0x3,MPSGraphTensorNamedDataLayoutCHW = 0x4,MPSGraphTensorNamedDataLayoutHWC = 0x5,MPSGraphTensorNamedDataLayoutHW = 0x6,};
typedef NSArray MPSNNBinaryGradientStateBatch;
typedef void *MTKTextureLoaderArrayCallback;
struct MTLAccelerationStructureSizes {unsigned int accelerationStructureSize;unsigned int buildScratchBufferSize;unsigned int refitScratchBufferSize;};
struct MTLSharedTextureHandlePrivate;
enum NEFilterPacketProviderVerdict {NEFilterPacketProviderVerdictAllow = 0x0,NEFilterPacketProviderVerdictDrop = 0x1,NEFilterPacketProviderVerdictDelay = 0x2,};
enum NEHotspotConfigurationEAPType {NEHotspotConfigurationEAPTypeEAPTLS = 0xD,NEHotspotConfigurationEAPTypeEAPTTLS = 0x15,NEHotspotConfigurationEAPTypeEAPPEAP = 0x19,NEHotspotConfigurationEAPTypeEAPFAST = 0x2B,};
enum NETunnelProviderRoutingMethod {NETunnelProviderRoutingMethodDestinationIP = 0x1,NETunnelProviderRoutingMethodSourceApplication = 0x2,NETunnelProviderRoutingMethodNetworkRule = 0x3,};
enum NEVPNIKEv2EncryptionAlgorithm {NEVPNIKEv2EncryptionAlgorithmDES = 0x1,NEVPNIKEv2EncryptionAlgorithm3DES = 0x2,NEVPNIKEv2EncryptionAlgorithmAES128 = 0x3,NEVPNIKEv2EncryptionAlgorithmAES256 = 0x4,NEVPNIKEv2EncryptionAlgorithmAES128GCM = 0x5,NEVPNIKEv2EncryptionAlgorithmAES256GCM = 0x6,NEVPNIKEv2EncryptionAlgorithmChaCha20Poly1305 = 0x7,};
enum NSComparisonPredicateModifier {NSDirectPredicateModifier = 0x0,NSAllPredicateModifier = 0x1,NSAnyPredicateModifier = 0x2,};
enum NSNumberFormatterRoundingMode {NSNumberFormatterRoundCeiling = 0x0,NSNumberFormatterRoundFloor = 0x1,NSNumberFormatterRoundDown = 0x2,NSNumberFormatterRoundUp = 0x3,NSNumberFormatterRoundHalfEven = 0x4,NSNumberFormatterRoundHalfDown = 0x5,NSNumberFormatterRoundHalfUp = 0x6,};
enum NSPersistentHistoryChangeType {NSPersistentHistoryChangeTypeInsert = 0x0,NSPersistentHistoryChangeTypeUpdate = 0x1,NSPersistentHistoryChangeTypeDelete = 0x2,};
enum NSPersistentHistoryResultType {NSPersistentHistoryResultTypeStatusOnly = 0x0,NSPersistentHistoryResultTypeObjectIDs = 0x1,NSPersistentHistoryResultTypeCount = 0x2,NSPersistentHistoryResultTypeTransactionsOnly = 0x3,NSPersistentHistoryResultTypeChangesOnly = 0x4,NSPersistentHistoryResultTypeTransactionsAndChanges = 0x5,};
typedef void *NSProgressUnpublishingHandler;
struct OpaqueAudioQueueProcessingTap;
struct PDFActionResetFormPrivateVars;
enum PKDisbursementRequestSchedule {PKDisbursementRequestScheduleOneTime = 0x0,PKDisbursementRequestScheduleFuture = 0x1,};
enum QLThumbnailRepresentationType {QLThumbnailRepresentationTypeIcon = 0x0,QLThumbnailRepresentationTypeLowQualityThumbnail = 0x1,QLThumbnailRepresentationTypeThumbnail = 0x2,};
typedef void *SCNSceneExportProgressHandler;
enum SLComposeViewControllerResult {SLComposeViewControllerResultCancelled = 0x0,SLComposeViewControllerResultDone = 0x1,};
enum SRAmbientLightSensorPlacement {SRAmbientLightSensorPlacementUnknown = 0x0,SRAmbientLightSensorPlacementFrontTop = 0x1,SRAmbientLightSensorPlacementFrontBottom = 0x2,SRAmbientLightSensorPlacementFrontRight = 0x3,SRAmbientLightSensorPlacementFrontLeft = 0x4,SRAmbientLightSensorPlacementFrontTopRight = 0x5,SRAmbientLightSensorPlacementFrontTopLeft = 0x6,SRAmbientLightSensorPlacementFrontBottomRight = 0x7,SRAmbientLightSensorPlacementFrontBottomLeft = 0x8,};
enum UIApplicationShortcutIconType {UIApplicationShortcutIconTypeCompose = 0x0,UIApplicationShortcutIconTypePlay = 0x1,UIApplicationShortcutIconTypePause = 0x2,UIApplicationShortcutIconTypeAdd = 0x3,UIApplicationShortcutIconTypeLocation = 0x4,UIApplicationShortcutIconTypeSearch = 0x5,UIApplicationShortcutIconTypeShare = 0x6,UIApplicationShortcutIconTypeProhibit = 0x7,UIApplicationShortcutIconTypeContact = 0x8,UIApplicationShortcutIconTypeHome = 0x9,UIApplicationShortcutIconTypeMarkLocation = 0xA,UIApplicationShortcutIconTypeFavorite = 0xB,UIApplicationShortcutIconTypeLove = 0xC,UIApplicationShortcutIconTypeCloud = 0xD,UIApplicationShortcutIconTypeInvitation = 0xE,UIApplicationShortcutIconTypeConfirmation = 0xF,UIApplicationShortcutIconTypeMail = 0x10,UIApplicationShortcutIconTypeMessage = 0x11,UIApplicationShortcutIconTypeDate = 0x12,UIApplicationShortcutIconTypeTime = 0x13,UIApplicationShortcutIconTypeCapturePhoto = 0x14,UIApplicationShortcutIconTypeCaptureVideo = 0x15,UIApplicationShortcutIconTypeTask = 0x16,UIApplicationShortcutIconTypeTaskCompleted = 0x17,UIApplicationShortcutIconTypeAlarm = 0x18,UIApplicationShortcutIconTypeBookmark = 0x19,UIApplicationShortcutIconTypeShuffle = 0x1A,UIApplicationShortcutIconTypeAudio = 0x1B,UIApplicationShortcutIconTypeUpdate = 0x1C,};
enum UICellAccessoryDisplayedState {UICellAccessoryDisplayedAlways = 0x0,UICellAccessoryDisplayedWhenEditing = 0x1,UICellAccessoryDisplayedWhenNotEditing = 0x2,};
enum UICollectionViewCellDragState {UICollectionViewCellDragStateNone = 0x0,UICollectionViewCellDragStateLifting = 0x1,UICollectionViewCellDragStateDragging = 0x2,};
typedef void *UIGraphicsImageDrawingActions;
enum UIPageControlInteractionState {UIPageControlInteractionStateNone = 0x0,UIPageControlInteractionStateDiscrete = 0x1,UIPageControlInteractionStateContinuous = 0x2,};
enum UISceneCollectionJoinBehavior {UISceneCollectionJoinBehaviorAutomatic = 0x0,UISceneCollectionJoinBehaviorPreferred = 0x1,UISceneCollectionJoinBehaviorDisallowed = 0x2,UISceneCollectionJoinBehaviorPreferredWithoutActivating = 0x3,};
enum UITableViewCellSelectionStyle {UITableViewCellSelectionStyleNone = 0x0,UITableViewCellSelectionStyleBlue = 0x1,UITableViewCellSelectionStyleGray = 0x2,UITableViewCellSelectionStyleDefault = 0x3,};
enum UITableViewCellSeparatorStyle {UITableViewCellSeparatorStyleNone = 0x0,UITableViewCellSeparatorStyleSingleLine = 0x1,UITableViewCellSeparatorStyleSingleLineEtched = 0x2,};
enum VNRequestTextRecognitionLevel {VNRequestTextRecognitionLevelAccurate = 0x0,VNRequestTextRecognitionLevelFast = 0x1,};
typedef _opaque_pthread_rwlockattr_t __darwin_pthread_rwlockattr_t;
enum axr_property_struct_version_t {axr_property_current = 0x1,};
typedef unsigned long long dispatch_source_timer_flags_t;
typedef unsigned long long dispatch_source_vnode_flags_t;
typedef int memory_object_copy_strategy_t;
enum nw_report_resolution_source_t {nw_report_resolution_source_query = 0x1,nw_report_resolution_source_cache = 0x2,nw_report_resolution_source_expired_cache = 0x3,};
typedef policy_timeshare_limit policy_timeshare_limit_data_t;
struct std____1____libcpp_debug_info { char *__file_;int __line_; char *__pred_; char *__msg_;};
struct std____1____narrow_to_utf8_8_ {};
struct std____1____shared_count_vtbl; 
struct std____1____tuple_sfinae_base {};
struct std____1__allocator_char16_t_ {};
struct std____1__allocator_char32_t_ {};
typedef std____1__atomic_short_ std____1__atomic_int_fast16_t;
typedef std____1__atomic_int_ std____1__atomic_int_fast32_t;
typedef std____1__atomic_long_long_ std____1__atomic_int_fast64_t;
typedef std____1__atomic_signed_char_ std____1__atomic_int_least8_t;
typedef std____1__atomic_unsigned_char_ std____1__atomic_uint_fast8_t;
struct std____1__basic_filebuf_char_;
struct std____1__basic_fstream_char_;
struct std____1__basic_ostream_char_ {std____1__basic_ostream_char__vtbl *__vftable ;};
typedef std____1__chrono__duration_long_long__std__ratio_1__1000000000__ std____1__chrono__nanoseconds;
struct std____1__greater_equal_void_ {};
struct std____1__money_base__pattern {char field[4];};
struct std____1__output_iterator_tag {};
struct std__domain_error_vtbl_layout; 
struct std__length_error_vtbl_layout; 
struct std__out_of_range_vtbl_layout; 
typedef task_absolutetime_info task_absolutetime_info_data_t;
typedef task_affinity_tag_info task_affinity_tag_info_data_t;
typedef task_kernelmemory_info task_kernelmemory_info_data_t;
typedef task_thread_times_info task_thread_times_info_data_t;
typedef task_trace_memory_info task_trace_memory_info_data_t;
typedef thread_affinity_policy thread_affinity_policy_data_t;
typedef thread_extended_policy thread_extended_policy_data_t;
typedef thread_identifier_info thread_identifier_info_data_t;
typedef thread_standard_policy thread_standard_policy_data_t;
struct vImage_AffineTransform_Double {double a;double b;double c;double d;double tx;double ty;};
typedef void (*xmlRelaxNGValidityWarningFunc)(void *,  char *, ...);
typedef  __CFArray *(*AHTRestoreListDevicesFuncPtr)(void);
enum APActivationPayloadErrorCode {APActivationPayloadErrorCodeDisallowed = 0x1,APActivationPayloadErrorCodeDoesNotMatch = 0x2,};
typedef void *AUParameterRecordingObserver;
struct AVAssetExportSessionInternal;
enum AVAudioConverterOutputStatus {AVAudioConverterOutputStatus_HaveData = 0x0,AVAudioConverterOutputStatus_InputRanDry = 0x1,AVAudioConverterOutputStatus_EndOfStream = 0x2,AVAudioConverterOutputStatus_Error = 0x3,};
enum AVAudioEnvironmentOutputType {AVAudioEnvironmentOutputTypeAuto = 0x0,AVAudioEnvironmentOutputTypeHeadphones = 0x1,AVAudioEnvironmentOutputTypeBuiltInSpeakers = 0x2,AVAudioEnvironmentOutputTypeExternalSpeakers = 0x3,};
typedef void *AVAudioNodeCompletionHandler;
enum AVAudioSessionRouteSelection {AVAudioSessionRouteSelectionNone = 0x0,AVAudioSessionRouteSelectionLocal = 0x1,AVAudioSessionRouteSelectionExternal = 0x2,};
typedef void *AVAudioSinkNodeReceiverBlock;
typedef void *AVAudioSourceNodeRenderBlock;
struct AVCaptureDeviceInputInternal;
struct AVCapturePhotoOutputInternal;
struct AVCaptureScreenInputInternal;
struct AVContentKeyResponseInternal;
struct AVMetadataFaceObjectInternal;
struct AVMetadataItemFilterInternal;
struct AVMutableCompositionInternal;
struct AVPlayerItemErrorLogInternal;
enum AVRoutePickerViewButtonStyle {AVRoutePickerViewButtonStyleSystem = 0x0,AVRoutePickerViewButtonStylePlain = 0x1,AVRoutePickerViewButtonStyleCustom = 0x2,};
enum AVSpeechSynthesisVoiceGender {AVSpeechSynthesisVoiceGenderUnspecified = 0x0,AVSpeechSynthesisVoiceGenderMale = 0x1,AVSpeechSynthesisVoiceGenderFemale = 0x2,};
struct AVTimedMetadataGroupInternal;
typedef void *AudioQueueInputCallbackBlock;
struct CAMediaTimingFunctionPrivate;
typedef __CFAttributedString *CFMutableAttributedStringRef;
enum CFNumberFormatterPadPosition {kCFNumberFormatterPadBeforePrefix = 0x0,kCFNumberFormatterPadAfterPrefix = 0x1,kCFNumberFormatterPadBeforeSuffix = 0x2,kCFNumberFormatterPadAfterSuffix = 0x3,};
typedef void (*CGDataProviderRewindCallback)(void *);
typedef void (*CGPatternReleaseInfoCallback)(void *);
enum CHHapticEngineFinishedAction {CHHapticEngineFinishedActionStopEngine = 0x1,CHHapticEngineFinishedActionLeaveEngineRunning = 0x2,};
typedef void *CHHapticEngineStoppedHandler;
enum CIQRCodeErrorCorrectionLevel {CIQRCodeErrorCorrectionLevelL = 0x4C,CIQRCodeErrorCorrectionLevelM = 0x4D,CIQRCodeErrorCorrectionLevelQ = 0x51,CIQRCodeErrorCorrectionLevelH = 0x48,};
enum CIRenderDestinationAlphaMode {CIRenderDestinationAlphaNone = 0x0,CIRenderDestinationAlphaPremultiplied = 0x1,CIRenderDestinationAlphaUnpremultiplied = 0x2,};
typedef void *CKApplicationPermissionBlock;
enum CKOperationGroupTransferSize {CKOperationGroupTransferSizeUnknown = 0x0,CKOperationGroupTransferSizeKilobytes = 0x1,CKOperationGroupTransferSizeMegabytes = 0x2,CKOperationGroupTransferSizeTensOfMegabytes = 0x3,CKOperationGroupTransferSizeHundredsOfMegabytes = 0x4,CKOperationGroupTransferSizeGigabytes = 0x5,CKOperationGroupTransferSizeTensOfGigabytes = 0x6,CKOperationGroupTransferSizeHundredsOfGigabytes = 0x7,};
enum CKShareParticipantPermission {CKShareParticipantPermissionUnknown = 0x0,CKShareParticipantPermissionNone = 0x1,CKShareParticipantPermissionReadOnly = 0x2,CKShareParticipantPermissionReadWrite = 0x3,};
enum CLKWatchFaceLibraryErrorCode {CLKWatchFaceLibraryErrorCodeNotFileURL = 0x1,CLKWatchFaceLibraryErrorCodeInvalidFile = 0x2,CLKWatchFaceLibraryErrorCodePermissionDenied = 0x3,CLKWatchFaceLibraryErrorCodeFaceNotAvailable = 0x4,};
enum CMDeviceMotionSensorLocation {CMDeviceMotionSensorLocationDefault = 0x0,CMDeviceMotionSensorLocationHeadphoneLeft = 0x1,CMDeviceMotionSensorLocationHeadphoneRight = 0x2,};
typedef void *CMMotionActivityQueryHandler;
enum CXCallDirectoryEnabledStatus {CXCallDirectoryEnabledStatusUnknown = 0x0,CXCallDirectoryEnabledStatusDisabled = 0x1,CXCallDirectoryEnabledStatusEnabled = 0x2,};
enum CXErrorCodeIncomingCallError {CXErrorCodeIncomingCallErrorUnknown = 0x0,CXErrorCodeIncomingCallErrorUnentitled = 0x1,CXErrorCodeIncomingCallErrorCallUUIDAlreadyExists = 0x2,CXErrorCodeIncomingCallErrorFilteredByDoNotDisturb = 0x3,CXErrorCodeIncomingCallErrorFilteredByBlockList = 0x4,};
typedef void *GCGamepadValueChangedHandler;
enum GKTurnBasedParticipantStatus {GKTurnBasedParticipantStatusUnknown = 0x0,GKTurnBasedParticipantStatusInvited = 0x1,GKTurnBasedParticipantStatusDeclined = 0x2,GKTurnBasedParticipantStatusMatching = 0x3,GKTurnBasedParticipantStatusActive = 0x4,GKTurnBasedParticipantStatusDone = 0x5,};
typedef _GLKVertexAttributeParameters GLKVertexAttributeParameters;
enum GLKViewDrawableStencilFormat {GLKViewDrawableStencilFormatNone = 0x0,GLKViewDrawableStencilFormat8 = 0x1,};
enum HKAuthorizationRequestStatus {HKAuthorizationRequestStatusUnknown = 0x0,HKAuthorizationRequestStatusShouldRequest = 0x1,HKAuthorizationRequestStatusUnnecessary = 0x2,};
enum HKCategoryValueMenstrualFlow {HKCategoryValueMenstrualFlowUnspecified = 0x1,HKCategoryValueMenstrualFlowLight = 0x2,HKCategoryValueMenstrualFlowMedium = 0x3,HKCategoryValueMenstrualFlowHeavy = 0x4,HKCategoryValueMenstrualFlowNone = 0x5,};
enum HKCategoryValueSleepAnalysis {HKCategoryValueSleepAnalysisInBed = 0x0,HKCategoryValueSleepAnalysisAsleep = 0x1,HKCategoryValueSleepAnalysisAwake = 0x2,};
enum HKWorkoutSessionLocationType {HKWorkoutSessionLocationTypeUnknown = 0x1,HKWorkoutSessionLocationTypeIndoor = 0x2,HKWorkoutSessionLocationTypeOutdoor = 0x3,};
enum ICScannerColorDataFormatType {ICScannerColorDataFormatTypeChunky = 0x0,ICScannerColorDataFormatTypePlanar = 0x1,};
enum ICScannerFunctionalUnitState {ICScannerFunctionalUnitStateReady = 0x1,ICScannerFunctionalUnitStateScanInProgress = 0x2,ICScannerFunctionalUnitStateOverviewScanInProgress = 0x4,};
enum INAddMediaIntentResponseCode {INAddMediaIntentResponseCodeUnspecified = 0x0,INAddMediaIntentResponseCodeReady = 0x1,INAddMediaIntentResponseCodeInProgress = 0x2,INAddMediaIntentResponseCodeSuccess = 0x3,INAddMediaIntentResponseCodeHandleInApp = 0x4,INAddMediaIntentResponseCodeFailure = 0x5,INAddMediaIntentResponseCodeFailureRequiringAppLaunch = 0x6,};
enum INAddTasksIntentResponseCode {INAddTasksIntentResponseCodeUnspecified = 0x0,INAddTasksIntentResponseCodeReady = 0x1,INAddTasksIntentResponseCodeInProgress = 0x2,INAddTasksIntentResponseCodeSuccess = 0x3,INAddTasksIntentResponseCodeFailure = 0x4,INAddTasksIntentResponseCodeFailureRequiringAppLaunch = 0x5,};
enum INListCarsIntentResponseCode {INListCarsIntentResponseCodeUnspecified = 0x0,INListCarsIntentResponseCodeReady = 0x1,INListCarsIntentResponseCodeInProgress = 0x2,INListCarsIntentResponseCodeSuccess = 0x3,INListCarsIntentResponseCodeFailure = 0x4,INListCarsIntentResponseCodeFailureRequiringAppLaunch = 0x5,};
typedef OpaqueJSPropertyNameAccumulator *JSPropertyNameAccumulatorRef;
typedef void (*JSTypedArrayBytesDeallocator)(void *, void *);
enum MACRO_MACH_VOUCHER_ATTR_BANK {MACH_VOUCHER_ATTR_BANK_NULL = 601,MACH_VOUCHER_ATTR_BANK_CREATE = 610,MACH_VOUCHER_ATTR_BANK_MODIFY_PERSONA = 611,MACH_VOUCHER_BANK_CONTENT_SIZE = 500,};
enum MACRO_SECTION_ATTRIBUTES_SYS {SECTION_ATTRIBUTES_SYS = 0xFFFF00,};
enum MACRO_kLAErrorInvalidContext {kLAErrorInvalidContext = -10,};
enum MACRO_kLAErrorNotInteractive {kLAErrorNotInteractive = -1004,};
enum MACRO_kLAErrorPasscodeNotSet {kLAErrorPasscodeNotSet = -5,};
enum MACRO_kLAErrorTouchIDLockout {kLAErrorTouchIDLockout = -8,};
enum MACaptionAppearanceFontStyle {kMACaptionAppearanceFontStyleDefault = 0x0,kMACaptionAppearanceFontStyleMonospacedWithSerif = 0x1,kMACaptionAppearanceFontStyleProportionalWithSerif = 0x2,kMACaptionAppearanceFontStyleMonospacedWithoutSerif = 0x3,kMACaptionAppearanceFontStyleProportionalWithoutSerif = 0x4,kMACaptionAppearanceFontStyleCasual = 0x5,kMACaptionAppearanceFontStyleCursive = 0x6,kMACaptionAppearanceFontStyleSmallCapital = 0x7,};
enum MDLMaterialTextureFilterMode {MDLMaterialTextureFilterModeNearest = 0x0,MDLMaterialTextureFilterModeLinear = 0x1,};
typedef void *MIDICIDiscoveryResponseBlock;
typedef void *MIDICISessionDisconnectBlock;
enum MKDistanceFormatterUnitStyle {MKDistanceFormatterUnitStyleDefault = 0x0,MKDistanceFormatterUnitStyleAbbreviated = 0x1,MKDistanceFormatterUnitStyleFull = 0x2,};
enum MKSearchCompletionFilterType {MKSearchCompletionFilterTypeLocationsAndQueries = 0x0,MKSearchCompletionFilterTypeLocationsOnly = 0x1,};
struct MLCTensorOptimizerDeviceData;
enum MPRemoteCommandHandlerStatus {MPRemoteCommandHandlerStatusSuccess = 0x0,MPRemoteCommandHandlerStatusNoSuchContent = 0x64,MPRemoteCommandHandlerStatusNoActionableNowPlayingItem = 0x6E,MPRemoteCommandHandlerStatusDeviceNotFound = 0x78,MPRemoteCommandHandlerStatusCommandFailed = 0xC8,};
enum MPSCNNBinaryConvolutionFlags {MPSCNNBinaryConvolutionFlagsNone = 0x0,MPSCNNBinaryConvolutionFlagsUseBetaScaling = 0x1,};
struct MPSCustomKernelArgumentCount {unsigned long long destinationTextureCount;unsigned long long sourceTextureCount;unsigned long long broadcastTextureCount;};
typedef NSDictionary MPSGraphTensorDataDictionary;
enum MPSImageFeatureChannelFormat {MPSImageFeatureChannelFormatNone = 0x0,MPSImageFeatureChannelFormatUnorm8 = 0x1,MPSImageFeatureChannelFormatUnorm16 = 0x2,MPSImageFeatureChannelFormatFloat16 = 0x3,MPSImageFeatureChannelFormatFloat32 = 0x4,MPSImageFeatureChannelFormat_reserved0 = 0x5,MPSImageFeatureChannelFormatCount = 0x6,};
enum MPSMatrixDecompositionStatus {MPSMatrixDecompositionStatusSuccess = 0x0,MPSMatrixDecompositionStatusFailure = 0xFFFFFFFF,MPSMatrixDecompositionStatusSingular = 0xFFFFFFFE,MPSMatrixDecompositionStatusNonPositiveDefinite = 0xFFFFFFFD,};
enum MTLTessellationPartitionMode {MTLTessellationPartitionModePow2 = 0x0,MTLTessellationPartitionModeInteger = 0x1,MTLTessellationPartitionModeFractionalOdd = 0x2,MTLTessellationPartitionModeFractionalEven = 0x3,};
enum NEVPNIKEAuthenticationMethod {NEVPNIKEAuthenticationMethodNone = 0x0,NEVPNIKEAuthenticationMethodCertificate = 0x1,NEVPNIKEAuthenticationMethodSharedSecret = 0x2,};
enum NEVPNIKEv2DiffieHellmanGroup {NEVPNIKEv2DiffieHellmanGroupInvalid = 0x0,NEVPNIKEv2DiffieHellmanGroup1 = 0x1,NEVPNIKEv2DiffieHellmanGroup2 = 0x2,NEVPNIKEv2DiffieHellmanGroup5 = 0x5,NEVPNIKEv2DiffieHellmanGroup14 = 0xE,NEVPNIKEv2DiffieHellmanGroup15 = 0xF,NEVPNIKEv2DiffieHellmanGroup16 = 0x10,NEVPNIKEv2DiffieHellmanGroup17 = 0x11,NEVPNIKEv2DiffieHellmanGroup18 = 0x12,NEVPNIKEv2DiffieHellmanGroup19 = 0x13,NEVPNIKEv2DiffieHellmanGroup20 = 0x14,NEVPNIKEv2DiffieHellmanGroup21 = 0x15,NEVPNIKEv2DiffieHellmanGroup31 = 0x1F,};
enum NEVPNIKEv2IntegrityAlgorithm {NEVPNIKEv2IntegrityAlgorithmSHA96 = 0x1,NEVPNIKEv2IntegrityAlgorithmSHA160 = 0x2,NEVPNIKEv2IntegrityAlgorithmSHA256 = 0x3,NEVPNIKEv2IntegrityAlgorithmSHA384 = 0x4,NEVPNIKEv2IntegrityAlgorithmSHA512 = 0x5,};
enum NSDateIntervalFormatterStyle {NSDateIntervalFormatterNoStyle = 0x0,NSDateIntervalFormatterShortStyle = 0x1,NSDateIntervalFormatterMediumStyle = 0x2,NSDateIntervalFormatterLongStyle = 0x3,NSDateIntervalFormatterFullStyle = 0x4,};
enum NSNumberFormatterPadPosition {NSNumberFormatterPadBeforePrefix = 0x0,NSNumberFormatterPadAfterPrefix = 0x1,NSNumberFormatterPadBeforeSuffix = 0x2,NSNumberFormatterPadAfterSuffix = 0x3,};
enum NSPersistentStoreRequestType {NSFetchRequestType = 0x1,NSSaveRequestType = 0x2,NSBatchInsertRequestType = 0x5,NSBatchUpdateRequestType = 0x6,NSBatchDeleteRequestType = 0x7,};
struct NSURLProtectionSpaceInternal;
enum NSWritingDirectionFormatType {NSWritingDirectionEmbedding = 0x0,NSWritingDirectionOverride = 0x2,};
struct OpaqueAudioComponentInstance;
struct OpaqueVTDecompressionSession;
enum PHImageRequestOptionsVersion {PHImageRequestOptionsVersionCurrent = 0x0,PHImageRequestOptionsVersionUnadjusted = 0x1,PHImageRequestOptionsVersionOriginal = 0x2,};
enum PHLivePhotoViewPlaybackStyle {PHLivePhotoViewPlaybackStyleUndefined = 0x0,PHLivePhotoViewPlaybackStyleFull = 0x1,PHLivePhotoViewPlaybackStyleHint = 0x2,};
enum PHVideoRequestOptionsVersion {PHVideoRequestOptionsVersionCurrent = 0x0,PHVideoRequestOptionsVersionOriginal = 0x1,};
enum PKPassLibraryAddPassesStatus {PKPassLibraryDidAddPasses = 0x0,PKPassLibraryShouldReviewPasses = 0x1,PKPassLibraryDidCancelAddPasses = 0x2,};
enum PKPaymentAuthorizationStatus {PKPaymentAuthorizationStatusSuccess = 0x0,PKPaymentAuthorizationStatusFailure = 0x1,PKPaymentAuthorizationStatusInvalidBillingPostalAddress = 0x2,PKPaymentAuthorizationStatusInvalidShippingPostalAddress = 0x3,PKPaymentAuthorizationStatusInvalidShippingContact = 0x4,PKPaymentAuthorizationStatusPINRequired = 0x5,PKPaymentAuthorizationStatusPINIncorrect = 0x6,PKPaymentAuthorizationStatusPINLockout = 0x7,};
enum PKPaymentPassActivationState {PKPaymentPassActivationStateActivated = 0x0,PKPaymentPassActivationStateRequiresActivation = 0x1,PKPaymentPassActivationStateActivating = 0x2,PKPaymentPassActivationStateSuspended = 0x3,PKPaymentPassActivationStateDeactivated = 0x4,};
enum SCNCameraProjectionDirection {SCNCameraProjectionDirectionVertical = 0x0,SCNCameraProjectionDirectionHorizontal = 0x1,};
enum SCNTessellationSmoothingMode {SCNTessellationSmoothingModeNone = 0x0,SCNTessellationSmoothingModePNTriangles = 0x1,SCNTessellationSmoothingModePhong = 0x2,};
enum SCNetworkConnectionPPPStatus {kSCNetworkConnectionPPPDisconnected = 0x0,kSCNetworkConnectionPPPInitializing = 0x1,kSCNetworkConnectionPPPConnectingLink = 0x2,kSCNetworkConnectionPPPDialOnTraffic = 0x3,kSCNetworkConnectionPPPNegotiatingLink = 0x4,kSCNetworkConnectionPPPAuthenticating = 0x5,kSCNetworkConnectionPPPWaitingForCallBack = 0x6,kSCNetworkConnectionPPPNegotiatingNetwork = 0x7,kSCNetworkConnectionPPPConnected = 0x8,kSCNetworkConnectionPPPTerminating = 0x9,kSCNetworkConnectionPPPDisconnectingLink = 0xA,kSCNetworkConnectionPPPHoldingLinkOff = 0xB,kSCNetworkConnectionPPPSuspended = 0xC,kSCNetworkConnectionPPPWaitingForRedial = 0xD,};
enum SFSpeechRecognitionTaskState {SFSpeechRecognitionTaskStateStarting = 0x0,SFSpeechRecognitionTaskStateRunning = 0x1,SFSpeechRecognitionTaskStateFinishing = 0x2,SFSpeechRecognitionTaskStateCanceling = 0x3,SFSpeechRecognitionTaskStateCompleted = 0x4,};
enum SKLabelVerticalAlignmentMode {SKLabelVerticalAlignmentModeBaseline = 0x0,SKLabelVerticalAlignmentModeCenter = 0x1,SKLabelVerticalAlignmentModeTop = 0x2,SKLabelVerticalAlignmentModeBottom = 0x3,};
enum SKProductDiscountPaymentMode {SKProductDiscountPaymentModePayAsYouGo = 0x0,SKProductDiscountPaymentModePayUpFront = 0x1,SKProductDiscountPaymentModeFreeTrial = 0x2,};
enum UIAccessibilityContainerType {UIAccessibilityContainerTypeNone = 0x0,UIAccessibilityContainerTypeDataTable = 0x1,UIAccessibilityContainerTypeList = 0x2,UIAccessibilityContainerTypeLandmark = 0x3,UIAccessibilityContainerTypeSemanticGroup = 0x4,};
enum UIActivityIndicatorViewStyle {UIActivityIndicatorViewStyleMedium = 0x64,UIActivityIndicatorViewStyleLarge = 0x65,UIActivityIndicatorViewStyleWhiteLarge = 0x0,UIActivityIndicatorViewStyleWhite = 0x1,UIActivityIndicatorViewStyleGray = 0x2,};
typedef void *UIButtonPointerStyleProvider;
enum UICellConfigurationDragState {UICellConfigurationDragStateNone = 0x0,UICellConfigurationDragStateLifting = 0x1,UICellConfigurationDragStateDragging = 0x2,};
enum UICellConfigurationDropState {UICellConfigurationDropStateNone = 0x0,UICellConfigurationDropStateNotTargeted = 0x1,UICellConfigurationDropStateTargeted = 0x2,};
enum UIPageControlBackgroundStyle {UIPageControlBackgroundStyleAutomatic = 0x0,UIPageControlBackgroundStyleProminent = 0x1,UIPageControlBackgroundStyleMinimal = 0x2,};
enum UIPreferredPresentationStyle {UIPreferredPresentationStyleUnspecified = 0x0,UIPreferredPresentationStyleInline = 0x1,UIPreferredPresentationStyleAttachment = 0x2,};
enum UIScreenOverscanCompensation {UIScreenOverscanCompensationScale = 0x0,UIScreenOverscanCompensationInsetBounds = 0x1,UIScreenOverscanCompensationNone = 0x2,UIScreenOverscanCompensationInsetApplicationFrame = 0x2,};
enum UIScrollViewIndexDisplayMode {UIScrollViewIndexDisplayModeAutomatic = 0x0,UIScrollViewIndexDisplayModeAlwaysHidden = 0x1,};
enum UITableViewCellAccessoryType {UITableViewCellAccessoryNone = 0x0,UITableViewCellAccessoryDisclosureIndicator = 0x1,UITableViewCellAccessoryDetailDisclosureButton = 0x2,UITableViewCellAccessoryCheckmark = 0x3,UITableViewCellAccessoryDetailButton = 0x4,};
enum UITextAutocapitalizationType {UITextAutocapitalizationTypeNone = 0x0,UITextAutocapitalizationTypeWords = 0x1,UITextAutocapitalizationTypeSentences = 0x2,UITextAutocapitalizationTypeAllCharacters = 0x3,};
typedef void *VTDecompressionOutputHandler;
typedef void (*XML_StartCdataSectionHandler)(void *);
struct __darwin_pthread_handler_rec {void (*__routine)(void *);void *__arg;__darwin_pthread_handler_rec *__next;};
typedef _opaque_pthread_mutexattr_t __darwin_pthread_mutexattr_t;
struct _opaque_pthread_rwlockattr_t {long long __sig;char __opaque[16];};
enum compression_stream_operation {COMPRESSION_STREAM_ENCODE = 0x0,COMPRESSION_STREAM_DECODE = 0x1,};
typedef unsigned long long dispatch_io_interval_flags_t;
typedef unsigned long long dispatch_source_proc_flags_t;
struct dyld_chained_ptr_arm64e_bind {unsigned long long ordinal : 16;unsigned long long zero : 16;unsigned long long addend : 19;unsigned long long next : 11;unsigned long long bind : 1;unsigned long long auth : 1;};
typedef  gss_channel_bindings_struct *gss_const_channel_bindings_t;
typedef host_can_has_debugger_info *host_can_has_debugger_info_t;
typedef kernel_resource_sizes kernel_resource_sizes_data_t;
typedef mach_msg_type_descriptor_t *mig_routine_arg_descriptor_t;
typedef void *nw_framer_parse_completion_t;
typedef void *nw_txt_record_access_bytes_t;
typedef os_workgroup_interval_data_opaque_s os_workgroup_interval_data_s;
typedef os_workgroup_interval_data_opaque_s *os_workgroup_interval_data_t;
typedef policy_timeshare_base policy_timeshare_base_data_t;
typedef policy_timeshare_info policy_timeshare_info_data_t;
typedef rpc_routine_arg_descriptor *rpc_routine_arg_descriptor_t;
struct std____1____libcpp_refstring { char *__imp_;};
struct std____1____num_get_wchar_t_ {};
struct std____1____num_put_wchar_t_ {};
struct std____1____padding_char__1_ {};
struct std____1____static_gcd_0__0_ {};
struct std____1__allocator_wchar_t_ {};
typedef std____1__atomic_signed_char_ std____1__atomic_int_fast8_t;
enum std____1__float_denorm_style {denorm_indeterminate = 0xFFFFFFFF,denorm_absent = 0x0,denorm_present = 0x1,};
struct std____1__input_iterator_tag {};
typedef unsigned int std____1__ios_base__fmtflags;
typedef unsigned int std____1__ios_base__openmode;
struct std____1__locale__facet_vtbl; 
struct std____1__money_get_wchar_t_ {};
struct std____1__money_put_wchar_t_ {};
struct std____1__not_equal_to_void_ {};
struct std__logic_error_vtbl_layout; 
struct std__range_error_vtbl_layout; 
typedef vImage_MultidimensionalTableData *vImage_MultidimensionalTable;
typedef vm_region_submap_info vm_region_submap_info_data_t;
typedef int (*xmlSchemaValidityLocatorFunc)(void *,  char **, unsigned long long *);
typedef void (*xmlSchemaValidityWarningFunc)(void *,  char *, ...);
enum xmlSchemaWhitespaceValueType {XML_SCHEMA_WHITESPACE_UNKNOWN = 0x0,XML_SCHEMA_WHITESPACE_PRESERVE = 0x1,XML_SCHEMA_WHITESPACE_REPLACE = 0x2,XML_SCHEMA_WHITESPACE_COLLAPSE = 0x3,};
enum ARCollaborationDataPriority {ARCollaborationDataPriorityCritical = 0x0,ARCollaborationDataPriorityOptional = 0x1,};
enum ARPlaneClassificationStatus {ARPlaneClassificationStatusNotAvailable = 0x0,ARPlaneClassificationStatusUndetermined = 0x1,ARPlaneClassificationStatusUnknown = 0x2,ARPlaneClassificationStatusKnown = 0x3,};
typedef void *AUMIDICIProfileChangedBlock;
enum AVAssetImageGeneratorResult {AVAssetImageGeneratorSucceeded = 0x0,AVAssetImageGeneratorFailed = 0x1,AVAssetImageGeneratorCancelled = 0x2,};
struct AVAssetReaderOutputInternal;
struct AVAudio3DAngularOrientation {float yaw;float pitch;float roll;};
enum AVAudioConverterInputStatus {AVAudioConverterInputStatus_HaveData = 0x0,AVAudioConverterInputStatus_NoDataNow = 0x1,AVAudioConverterInputStatus_EndOfStream = 0x2,};
enum AVAudioConverterPrimeMethod {AVAudioConverterPrimeMethod_Pre = 0x0,AVAudioConverterPrimeMethod_Normal = 0x1,AVAudioConverterPrimeMethod_None = 0x2,};
enum AVAudioUnitDistortionPreset {AVAudioUnitDistortionPresetDrumsBitBrush = 0x0,AVAudioUnitDistortionPresetDrumsBufferBeats = 0x1,AVAudioUnitDistortionPresetDrumsLoFi = 0x2,AVAudioUnitDistortionPresetMultiBrokenSpeaker = 0x3,AVAudioUnitDistortionPresetMultiCellphoneConcert = 0x4,AVAudioUnitDistortionPresetMultiDecimated1 = 0x5,AVAudioUnitDistortionPresetMultiDecimated2 = 0x6,AVAudioUnitDistortionPresetMultiDecimated3 = 0x7,AVAudioUnitDistortionPresetMultiDecimated4 = 0x8,AVAudioUnitDistortionPresetMultiDistortedFunk = 0x9,AVAudioUnitDistortionPresetMultiDistortedCubed = 0xA,AVAudioUnitDistortionPresetMultiDistortedSquared = 0xB,AVAudioUnitDistortionPresetMultiEcho1 = 0xC,AVAudioUnitDistortionPresetMultiEcho2 = 0xD,AVAudioUnitDistortionPresetMultiEchoTight1 = 0xE,AVAudioUnitDistortionPresetMultiEchoTight2 = 0xF,AVAudioUnitDistortionPresetMultiEverythingIsBroken = 0x10,AVAudioUnitDistortionPresetSpeechAlienChatter = 0x11,AVAudioUnitDistortionPresetSpeechCosmicInterference = 0x12,AVAudioUnitDistortionPresetSpeechGoldenPi = 0x13,AVAudioUnitDistortionPresetSpeechRadioTower = 0x14,AVAudioUnitDistortionPresetSpeechWaves = 0x15,};
struct AVCaptureConnectionInternal;
struct AVCaptureFileOutputInternal;
struct AVContentKeyRequestInternal;
struct AVContentKeySessionInternal;
struct AVMutableMovieTrackInternal;
struct AVSynchronizedLayerInternal;
enum AudioChannelCoordinateIndex {kAudioChannelCoordinates_LeftRight = 0x0,kAudioChannelCoordinates_BackFront = 0x1,kAudioChannelCoordinates_DownUp = 0x2,kAudioChannelCoordinates_Azimuth = 0x0,kAudioChannelCoordinates_Elevation = 0x1,kAudioChannelCoordinates_Distance = 0x2,};
enum AudioUnitRemoteControlEvent {kAudioUnitRemoteControlEvent_TogglePlayPause = 0x1,kAudioUnitRemoteControlEvent_ToggleRecord = 0x2,kAudioUnitRemoteControlEvent_Rewind = 0x3,};
typedef void (*CFBinaryHeapApplierFunction)( void *, void *);
enum CFCharacterSetPredefinedSet {kCFCharacterSetControl = 0x1,kCFCharacterSetWhitespace = 0x2,kCFCharacterSetWhitespaceAndNewline = 0x3,kCFCharacterSetDecimalDigit = 0x4,kCFCharacterSetLetter = 0x5,kCFCharacterSetLowercaseLetter = 0x6,kCFCharacterSetUppercaseLetter = 0x7,kCFCharacterSetNonBase = 0x8,kCFCharacterSetDecomposable = 0x9,kCFCharacterSetAlphaNumeric = 0xA,kCFCharacterSetPunctuation = 0xB,kCFCharacterSetCapitalizedLetter = 0xD,kCFCharacterSetSymbol = 0xE,kCFCharacterSetNewline = 0xF,kCFCharacterSetIllegal = 0xC,};
typedef void (*CFDictionaryApplierFunction)( void *,  void *, void *);
enum CFNetDiagnosticStatusValues {kCFNetDiagnosticNoErr = 0x0,kCFNetDiagnosticErr = 0xFFFEFC00,kCFNetDiagnosticConnectionUp = 0xFFFEFC01,kCFNetDiagnosticConnectionIndeterminate = 0xFFFEFC02,kCFNetDiagnosticConnectionDown = 0xFFFEFC03,};
typedef void *CGImageSourceAnimationBlock;
typedef void *CGPDFDictionaryApplierBlock;
enum CHHapticEngineStoppedReason {CHHapticEngineStoppedReasonAudioSessionInterrupt = 0x1,CHHapticEngineStoppedReasonApplicationSuspended = 0x2,CHHapticEngineStoppedReasonIdleTimeout = 0x3,CHHapticEngineStoppedReasonNotifyWhenFinished = 0x4,CHHapticEngineStoppedReasonEngineDestroyed = 0x5,CHHapticEngineStoppedReasonGameControllerDisconnect = 0x6,CHHapticEngineStoppedReasonSystemError = 0xFFFFFFFFFFFFFFFF,};
struct CKFetchShareMetadataOptions;
typedef double CLLocationDirectionAccuracy;
typedef void *CMBufferQueueTriggerHandler;
enum CPInformationTemplateLayout {CPInformationTemplateLayoutLeading = 0x0,CPInformationTemplateLayoutTwoColumn = 0x1,};
enum EKParticipantScheduleStatus {EKParticipantScheduleStatusNone = 0x0,EKParticipantScheduleStatusPending = 0x1,EKParticipantScheduleStatusSent = 0x2,EKParticipantScheduleStatusDelivered = 0x3,EKParticipantScheduleStatusRecipientNotRecognized = 0x4,EKParticipantScheduleStatusNoPrivileges = 0x5,EKParticipantScheduleStatusDeliveryFailed = 0x6,EKParticipantScheduleStatusCannotDeliver = 0x7,EKParticipantScheduleStatusRecipientNotAllowed = 0x8,};
typedef void *ENGetExposureWindowsHandler;
typedef void *GCControllerTouchpadHandler;
typedef void *GCMotionValueChangedHandler;
enum ICReturnConnectionErrorCode {ICReturnConnectionDriverExited = 0xFFFFFFFFFFFFAC9A,ICReturnConnectionClosedSessionSuddenly = 0xFFFFFFFFFFFFAC9B,ICReturnConnectionEjectedSuddenly = 0xFFFFFFFFFFFFAC9C,ICReturnConnectionSessionAlreadyOpen = 0xFFFFFFFFFFFFAC9D,ICReturnConnectionEjectFailed = 0xFFFFFFFFFFFFAC9E,ICReturnConnectionFailedToOpen = 0xFFFFFFFFFFFFAC9F,ICReturnConnectionFailedToOpenDevice = 0xFFFFFFFFFFFFACA0,ICReturnConnectionNotAuthorizedToOpenDevice = 0xFFFFFFFFFFFFACA1,};
enum ICScannerFunctionalUnitType {ICScannerFunctionalUnitTypeFlatbed = 0x0,ICScannerFunctionalUnitTypePositiveTransparency = 0x1,ICScannerFunctionalUnitTypeNegativeTransparency = 0x2,ICScannerFunctionalUnitTypeDocumentFeeder = 0x3,};
enum INPayBillIntentResponseCode {INPayBillIntentResponseCodeUnspecified = 0x0,INPayBillIntentResponseCodeReady = 0x1,INPayBillIntentResponseCodeInProgress = 0x2,INPayBillIntentResponseCodeSuccess = 0x3,INPayBillIntentResponseCodeFailure = 0x4,INPayBillIntentResponseCodeFailureRequiringAppLaunch = 0x5,INPayBillIntentResponseCodeFailureCredentialsUnverified = 0x6,INPayBillIntentResponseCodeFailureInsufficientFunds = 0x7,};
enum MACRO_MACH_VOUCHER_SELECTOR {MACH_VOUCHER_SELECTOR_CURRENT = 0,MACH_VOUCHER_SELECTOR_EFFECTIVE = 1,MACH_VOUCHER_ATTR_KEY_ALL = 4294967295,MACH_VOUCHER_ATTR_KEY_NONE = 0,MACH_VOUCHER_ATTR_KEY_ATM = 1,MACH_VOUCHER_ATTR_KEY_IMPORTANCE = 2,MACH_VOUCHER_ATTR_KEY_BANK = 3,MACH_VOUCHER_ATTR_KEY_PTHPRIORITY = 4,MACH_VOUCHER_ATTR_KEY_USER_DATA = 7,MACH_VOUCHER_ATTR_KEY_TEST = 8,MACH_VOUCHER_ATTR_NOOP = 0,MACH_VOUCHER_ATTR_COPY = 1,MACH_VOUCHER_ATTR_REMOVE = 2,MACH_VOUCHER_ATTR_SET_VALUE_HANDLE = 3,MACH_VOUCHER_ATTR_AUTO_REDEEM = 4,MACH_VOUCHER_ATTR_SEND_PREPROCESS = 5,MACH_VOUCHER_ATTR_REDEEM = 10,MACH_VOUCHER_ATTR_IMPORTANCE_SELF = 200,MACH_VOUCHER_ATTR_USER_DATA_STORE = 211,MACH_VOUCHER_ATTR_MAX_RAW_RECIPE_ARRAY_SIZE = 5120,MACH_VOUCHER_TRAP_STACK_LIMIT = 256,MACH_VOUCHER_ATTR_MANAGER_NULL = 0,MACH_VOUCHER_ATTR_CONTROL_NULL = 0,};
enum MACRO_NSLOOKUPSYMBOLINIMAGE {NSLOOKUPSYMBOLINIMAGE_OPTION_BIND = 0x0,NSLOOKUPSYMBOLINIMAGE_OPTION_BIND_NOW = 0x1,NSLOOKUPSYMBOLINIMAGE_OPTION_BIND_FULLY = 0x2,NSLOOKUPSYMBOLINIMAGE_OPTION_RETURN_ON_ERROR = 0x4,};
enum MACaptionAppearanceBehavior {kMACaptionAppearanceBehaviorUseValue = 0x0,kMACaptionAppearanceBehaviorUseContentIfAvailable = 0x1,};
enum MDLMaterialMipMapFilterMode {MDLMaterialMipMapFilterModeNearest = 0x0,MDLMaterialMipMapFilterModeLinear = 0x1,};
enum MDLTransformOpRotationOrder {MDLTransformOpRotationOrderXYZ = 0x1,MDLTransformOpRotationOrderXZY = 0x2,MDLTransformOpRotationOrderYXZ = 0x3,MDLTransformOpRotationOrderYZX = 0x4,MDLTransformOpRotationOrderZXY = 0x5,MDLTransformOpRotationOrderZYX = 0x6,};
enum MIDINetworkConnectionPolicy {MIDINetworkConnectionPolicy_NoOne = 0x0,MIDINetworkConnectionPolicy_HostsInContactList = 0x1,MIDINetworkConnectionPolicy_Anyone = 0x2,};
enum MPSCNNBinaryConvolutionType {MPSCNNBinaryConvolutionTypeBinaryWeights = 0x0,MPSCNNBinaryConvolutionTypeXNOR = 0x1,MPSCNNBinaryConvolutionTypeAND = 0x2,};
typedef void *MPSNNGraphCompletionHandler;
enum MTLCommandEncoderErrorState {MTLCommandEncoderErrorStateUnknown = 0x0,MTLCommandEncoderErrorStateCompleted = 0x1,MTLCommandEncoderErrorStateAffected = 0x2,MTLCommandEncoderErrorStatePending = 0x3,MTLCommandEncoderErrorStateFaulted = 0x4,};
enum MTLCounterSampleBufferError {MTLCounterSampleBufferErrorOutOfMemory = 0x0,MTLCounterSampleBufferErrorInvalid = 0x1,MTLCounterSampleBufferErrorInternal = 0x2,};
typedef void *MTLDrawablePresentedHandler;
struct MTLSharedEventHandlePrivate;
enum MTLSparseTextureMappingMode {MTLSparseTextureMappingModeMap = 0x0,MTLSparseTextureMappingModeUnmap = 0x1,};
enum MTLTessellationFactorFormat {MTLTessellationFactorFormatHalf = 0x0,};
enum NEHotspotConfigurationError {NEHotspotConfigurationErrorInvalid = 0x0,NEHotspotConfigurationErrorInvalidSSID = 0x1,NEHotspotConfigurationErrorInvalidWPAPassphrase = 0x2,NEHotspotConfigurationErrorInvalidWEPPassphrase = 0x3,NEHotspotConfigurationErrorInvalidEAPSettings = 0x4,NEHotspotConfigurationErrorInvalidHS20Settings = 0x5,NEHotspotConfigurationErrorInvalidHS20DomainName = 0x6,NEHotspotConfigurationErrorUserDenied = 0x7,NEHotspotConfigurationErrorInternal = 0x8,NEHotspotConfigurationErrorPending = 0x9,NEHotspotConfigurationErrorSystemConfiguration = 0xA,NEHotspotConfigurationErrorUnknown = 0xB,NEHotspotConfigurationErrorJoinOnceNotSupported = 0xC,NEHotspotConfigurationErrorAlreadyAssociated = 0xD,NEHotspotConfigurationErrorApplicationIsNotInForeground = 0xE,NEHotspotConfigurationErrorInvalidSSIDPrefix = 0xF,};
enum NEOnDemandRuleInterfaceType {NEOnDemandRuleInterfaceTypeAny = 0x0,NEOnDemandRuleInterfaceTypeEthernet = 0x1,NEOnDemandRuleInterfaceTypeWiFi = 0x2,NEOnDemandRuleInterfaceTypeCellular = 0x3,};
enum NFCFeliCaPollingRequestCode {NFCFeliCaPollingRequestCodeNoRequest = 0x0,NFCFeliCaPollingRequestCodeSystemCode = 0x1,NFCFeliCaPollingRequestCodeCommunicationPerformance = 0x2,PollingRequestCodeNoRequest = 0x0,PollingRequestCodeSystemCode = 0x1,PollingRequestCodeCommunicationPerformance = 0x2,};
enum NINearbyObjectRemovalReason {NINearbyObjectRemovalReasonTimeout = 0x0,NINearbyObjectRemovalReasonPeerEnded = 0x1,};
struct NSCachedURLResponseInternal;
struct NSHTTPCookieStorageInternal;
enum NSObjectFileImageReturnCode {NSObjectFileImageFailure = 0x0,NSObjectFileImageSuccess = 0x1,NSObjectFileImageInappropriateFile = 0x2,NSObjectFileImageArch = 0x3,NSObjectFileImageFormat = 0x4,NSObjectFileImageAccess = 0x5,};
typedef void *NSProgressPublishingHandler;
typedef void *PHAssetImageProgressHandler;
typedef void *PHAssetVideoProgressHandler;
enum PHLivePhotoEditingErrorCode {PHLivePhotoEditingErrorCodeUnknown = 0x0,PHLivePhotoEditingErrorCodeAborted = 0x1,};
typedef void *SCNSceneSourceStatusHandler;
enum SFSpeechRecognitionTaskHint {SFSpeechRecognitionTaskHintUnspecified = 0x0,SFSpeechRecognitionTaskHintDictation = 0x1,SFSpeechRecognitionTaskHintSearch = 0x2,SFSpeechRecognitionTaskHintConfirmation = 0x3,};
enum SparseLSMRConvergenceTest_t {SparseLSMRCTDefault = 0x0,SparseLSMRCTFongSaunders = 0x1,};
enum TKSmartCardPINJustification {TKSmartCardPINJustificationLeft = 0x0,TKSmartCardPINJustificationRight = 0x1,};
enum UICollectionElementCategory {UICollectionElementCategoryCell = 0x0,UICollectionElementCategorySupplementaryView = 0x1,UICollectionElementCategoryDecorationView = 0x2,};
typedef void *UIContextMenuActionProvider;
enum UIDocumentBrowserImportMode {UIDocumentBrowserImportModeNone = 0x0,UIDocumentBrowserImportModeCopy = 0x1,UIDocumentBrowserImportModeMove = 0x2,};
typedef void *UIGraphicsPDFDrawingActions;
enum UISplitViewControllerColumn {UISplitViewControllerColumnPrimary = 0x0,UISplitViewControllerColumnSupplementary = 0x1,UISplitViewControllerColumnSecondary = 0x2,UISplitViewControllerColumnCompact = 0x3,};
enum UITabBarItemAppearanceStyle {UITabBarItemAppearanceStyleStacked = 0x0,UITabBarItemAppearanceStyleInline = 0x1,UITabBarItemAppearanceStyleCompactInline = 0x2,};
enum UITableViewCellEditingStyle {UITableViewCellEditingStyleNone = 0x0,UITableViewCellEditingStyleDelete = 0x1,UITableViewCellEditingStyleInsert = 0x2,};
enum UITextSmartInsertDeleteType {UITextSmartInsertDeleteTypeDefault = 0x0,UITextSmartInsertDeleteTypeNo = 0x1,UITextSmartInsertDeleteTypeYes = 0x2,};
enum UIWebPaginationBreakingMode {UIWebPaginationBreakingModePage = 0x0,UIWebPaginationBreakingModeColumn = 0x1,};
typedef _opaque_pthread_condattr_t __darwin_pthread_condattr_t;
struct __dns_handle_private_struct;
struct __objc_instance_vars_struct {char *name;char *type;long long offset;};
struct __objc_protocol_list_struct {void *next;long long count;};
struct _opaque_pthread_mutexattr_t {long long __sig;char __opaque[8];};
typedef NSObject *dispatch_queue_concurrent_t;
typedef gss_krb5_lucid_context_v1 gss_krb5_lucid_context_v1_t;
typedef mach_msg_security_trailer_t mach_msg_format_0_trailer_t;
typedef mach_task_basic_info mach_task_basic_info_data_t;
typedef memory_object_behave_info *memory_object_behave_info_t;
enum nw_connection_group_state_t {nw_connection_group_state_invalid = 0x0,nw_connection_group_state_waiting = 0x1,nw_connection_group_state_ready = 0x2,nw_connection_group_state_failed = 0x3,nw_connection_group_state_cancelled = 0x4,};
enum nw_ethernet_channel_state_t {nw_ethernet_channel_state_invalid = 0x0,nw_ethernet_channel_state_waiting = 0x1,nw_ethernet_channel_state_preparing = 0x2,nw_ethernet_channel_state_ready = 0x3,nw_ethernet_channel_state_failed = 0x4,nw_ethernet_channel_state_cancelled = 0x5,};
typedef void *nw_framer_cleanup_handler_t;
typedef processor_basic_info processor_basic_info_data_t;
typedef processor_cpu_stat64 processor_cpu_stat64_data_t;
struct std____1____money_get_char_ {};
struct std____1____money_put_char_ {};
struct std____1__bad_weak_ptr_vtbl; 
struct std____1__char_traits_char_ {};
enum std____1__float_round_style {round_indeterminate = 0xFFFFFFFF,round_toward_zero = 0x0,round_to_nearest = 0x1,round_toward_infinity = 0x2,round_toward_neg_infinity = 0x3,};
typedef unsigned int std____1__ios_base__iostate;
enum std____1__ios_base__seekdir {beg = 0x0,cur = 0x1,end = 0x2,};
struct std____1__logical_and_void_ {};
struct std____1__logical_not_void_ {};
struct std____1__messages_wchar_t_ {};
struct std____1__ratio_1__1000000_ {};
struct std____1__ratio_1000000__1_ {};
struct std____1__system_error_vtbl; 
struct std____1__time_get_wchar_t_ {};
struct std____1__time_put_wchar_t_ {};
struct std__bad_typeid_vtbl_layout; 
typedef task_basic_info_64_2 task_basic_info_64_2_data_t;
typedef task_category_policy task_category_policy_data_t;
typedef task_inspect_basic_counts *task_inspect_basic_counts_t;
typedef task_wait_state_info task_wait_state_info_data_t;
typedef thread_extended_info thread_extended_info_data_t;
typedef thread_latency_qos_policy *thread_latency_qos_policy_t;
typedef  vImageCVImageFormat *vImageConstCVImageFormatRef;
typedef vm_extmod_statistics vm_extmod_statistics_data_t;
typedef vm_region_basic_info vm_region_basic_info_data_t;
typedef int *vm_region_recurse_info_64_t;
typedef void (*xmlRelaxNGValidityErrorFunc)(void *,  char *, ...);
typedef void *AUImplementorValueObserver;
typedef void *AUImplementorValueProvider;
enum AVAssetExportSessionStatus {AVAssetExportSessionStatusUnknown = 0x0,AVAssetExportSessionStatusWaiting = 0x1,AVAssetExportSessionStatusExporting = 0x2,AVAssetExportSessionStatusCompleted = 0x3,AVAssetExportSessionStatusFailed = 0x4,AVAssetExportSessionStatusCancelled = 0x5,};
struct AVAssetWriterInputInternal;
typedef void *AVAudioConverterInputBlock;
enum AVAudioSessionPortOverride {AVAudioSessionPortOverrideNone = 0x0,AVAudioSessionPortOverrideSpeaker = 0x73706B72,};
struct AVCaptureInputPortInternal;
struct AVCaptureWhiteBalanceGains {float redGain;float greenGain;float blueGain;};
struct AVCompositionTrackInternal;
struct AVMediaDataStorageInternal;
struct AVPlayerItemOutputInternal;
struct AVVideoCompositionInternal;
typedef OpaqueAudioQueueProcessingTap *AudioQueueProcessingTapRef;
typedef void (*CFAllocatorReleaseCallBack)( void *);
enum CGImagePropertyOrientation {kCGImagePropertyOrientationUp = 0x1,kCGImagePropertyOrientationUpMirrored = 0x2,kCGImagePropertyOrientationDown = 0x3,kCGImagePropertyOrientationDownMirrored = 0x4,kCGImagePropertyOrientationLeftMirrored = 0x5,kCGImagePropertyOrientationRight = 0x6,kCGImagePropertyOrientationRightMirrored = 0x7,kCGImagePropertyOrientationLeft = 0x8,};
typedef void *CHHapticEngineResetHandler;
enum CIDataMatrixCodeECCVersion {CIDataMatrixCodeECCVersion000 = 0x0,CIDataMatrixCodeECCVersion050 = 0x32,CIDataMatrixCodeECCVersion080 = 0x50,CIDataMatrixCodeECCVersion100 = 0x64,CIDataMatrixCodeECCVersion140 = 0x8C,CIDataMatrixCodeECCVersion200 = 0xC8,};
typedef void *CLGeocodeCompletionHandler;
enum CMMotionActivityConfidence {CMMotionActivityConfidenceLow = 0x0,CMMotionActivityConfidenceMedium = 0x1,CMMotionActivityConfidenceHigh = 0x2,};
typedef __CTFontCollection *CTMutableFontCollectionRef;
enum GKPeerPickerConnectionType {GKPeerPickerConnectionTypeOnline = 0x1,GKPeerPickerConnectionTypeNearby = 0x2,};
enum GLKViewDrawableColorFormat {GLKViewDrawableColorFormatRGBA8888 = 0x0,GLKViewDrawableColorFormatRGB565 = 0x1,GLKViewDrawableColorFormatSRGBA8888 = 0x2,};
enum GLKViewDrawableDepthFormat {GLKViewDrawableDepthFormatNone = 0x0,GLKViewDrawableDepthFormat16 = 0x1,GLKViewDrawableDepthFormat24 = 0x2,};
enum GLKViewDrawableMultisample {GLKViewDrawableMultisampleNone = 0x0,GLKViewDrawableMultisample4X = 0x1,};
enum HKAppleECGAlgorithmVersion {HKAppleECGAlgorithmVersion1 = 0x1,};
enum HKQuantityAggregationStyle {HKQuantityAggregationStyleCumulative = 0x0,HKQuantityAggregationStyleDiscreteArithmetic = 0x1,HKQuantityAggregationStyleDiscrete = 0x1,HKQuantityAggregationStyleDiscreteTemporallyWeighted = 0x2,HKQuantityAggregationStyleDiscreteEquivalentContinuousLevel = 0x3,};
enum HMCameraAudioStreamSetting {HMCameraAudioStreamSettingMuted = 0x1,HMCameraAudioStreamSettingIncomingAudioAllowed = 0x2,HMCameraAudioStreamSettingBidirectionalAudioAllowed = 0x3,};
enum ICReturnPTPDeviceErrorCode {ICReturnPTPFailedToSendCommand = 0xFFFFFFFFFFFFACFE,ICReturnPTPNotAuthorizedToSendCommand = 0xFFFFFFFFFFFFACFF,};
enum ICReturnThumbnailErrorCode {ICReturnThumbnailNotAvailable = 0xFFFFFFFFFFFFADF8,ICReturnThumbnailAlreadyFetching = 0xFFFFFFFFFFFFADF9,ICReturnThumbnailCanceled = 0xFFFFFFFFFFFFB17E,ICReturnThumbnailInvalid = 0xFFFFFFFFFFFFB17F,};
enum MACRO_AVAUDIOUNITCOMPONENT {AVAUDIOUNITCOMPONENT_HAVE_AUDIOCOMPONENT = 1,};
enum MACRO_MTLCounterDontSample {MTLCounterDontSample = -1,};
enum MACRO_MTLCounterErrorValue {MTLCounterErrorValue = -1,};
enum MACRO_POSIX_SPAWN_PCONTROL {POSIX_SPAWN_PCONTROL_NONE = 0x0,POSIX_SPAWN_PCONTROL_THROTTLE = 0x1,POSIX_SPAWN_PCONTROL_SUSPEND = 0x2,POSIX_SPAWN_PCONTROL_KILL = 0x3,};
enum MACRO_kABPropertyInvalidID {kABPropertyInvalidID = -1,};
enum MACRO_kLAErrorSystemCancel {kLAErrorSystemCancel = -4,};
enum MACRO_kLAErrorUserFallback {kLAErrorUserFallback = -3,};
enum MDLMaterialTextureWrapMode {MDLMaterialTextureWrapModeClamp = 0x0,MDLMaterialTextureWrapModeRepeat = 0x1,MDLMaterialTextureWrapModeMirror = 0x2,};
enum MPMediaPredicateComparison {MPMediaPredicateComparisonEqualTo = 0x0,MPMediaPredicateComparisonContains = 0x1,};
enum NEHotspotHelperCommandType {kNEHotspotHelperCommandTypeNone = 0x0,kNEHotspotHelperCommandTypeFilterScanList = 0x1,kNEHotspotHelperCommandTypeEvaluate = 0x2,kNEHotspotHelperCommandTypeAuthenticate = 0x3,kNEHotspotHelperCommandTypePresentUI = 0x4,kNEHotspotHelperCommandTypeMaintain = 0x5,kNEHotspotHelperCommandTypeLogoff = 0x6,};
enum NSDataCompressionAlgorithm {NSDataCompressionAlgorithmLZFSE = 0x0,NSDataCompressionAlgorithmLZ4 = 0x1,NSDataCompressionAlgorithmLZMA = 0x2,NSDataCompressionAlgorithmZlib = 0x3,};
enum NSFetchedResultsChangeType {NSFetchedResultsChangeInsert = 0x1,NSFetchedResultsChangeDelete = 0x2,NSFetchedResultsChangeMove = 0x3,NSFetchedResultsChangeUpdate = 0x4,};
enum NSURLCredentialPersistence {NSURLCredentialPersistenceNone = 0x0,NSURLCredentialPersistenceForSession = 0x1,NSURLCredentialPersistencePermanent = 0x2,NSURLCredentialPersistenceSynchronizable = 0x3,};
typedef void NSUncaughtExceptionHandler(NSException *);
struct OpaqueVTCompressionSession;
enum SCNParticleOrientationMode {SCNParticleOrientationModeBillboardScreenAligned = 0x0,SCNParticleOrientationModeBillboardViewAligned = 0x1,SCNParticleOrientationModeFree = 0x2,SCNParticleOrientationModeBillboardYAligned = 0x3,};
enum UICollectionViewDropIntent {UICollectionViewDropIntentUnspecified = 0x0,UICollectionViewDropIntentInsertAtDestinationIndexPath = 0x1,UICollectionViewDropIntentInsertIntoDestinationIndexPath = 0x2,};
enum UIDocumentBrowserErrorCode {UIDocumentBrowserErrorGeneric = 0x1,UIDocumentBrowserErrorNoLocationAvailable = 0x2,};
enum UIListContentTextAlignment {UIListContentTextAlignmentNatural = 0x0,UIListContentTextAlignmentCenter = 0x1,UIListContentTextAlignmentJustified = 0x2,};
enum UIListContentTextTransform {UIListContentTextTransformNone = 0x0,UIListContentTextTransformUppercase = 0x1,UIListContentTextTransformLowercase = 0x2,UIListContentTextTransformCapitalized = 0x3,};
enum UINotificationFeedbackType {UINotificationFeedbackTypeSuccess = 0x0,UINotificationFeedbackTypeWarning = 0x1,UINotificationFeedbackTypeError = 0x2,};
enum UIScrollViewIndicatorStyle {UIScrollViewIndicatorStyleDefault = 0x0,UIScrollViewIndicatorStyleBlack = 0x1,UIScrollViewIndicatorStyleWhite = 0x2,};
enum UISemanticContentAttribute {UISemanticContentAttributeUnspecified = 0x0,UISemanticContentAttributePlayback = 0x1,UISemanticContentAttributeSpatial = 0x2,UISemanticContentAttributeForceLeftToRight = 0x3,UISemanticContentAttributeForceRightToLeft = 0x4,};
enum UISplitViewControllerStyle {UISplitViewControllerStyleUnspecified = 0x0,UISplitViewControllerStyleDoubleColumn = 0x1,UISplitViewControllerStyleTripleColumn = 0x2,};
struct UITextInteractionAssistant;
enum VNOpticalFlowGenerateLevel {VNOpticalFlowGenerateLevelLow = 0x0,VNOpticalFlowGenerateLevelMedium = 0x1,VNOpticalFlowGenerateLevelHigh = 0x2,VNOpticalFlowGenerateLevelVeryHigh = 0x3,};
typedef void *VNRequestCompletionHandler;
typedef void *VTCompressionOutputHandler;
enum WKNavigationResponsePolicy {WKNavigationResponsePolicyCancel = 0x0,WKNavigationResponsePolicyAllow = 0x1,};
typedef void (*XML_EndCdataSectionHandler)(void *);
struct _opaque_pthread_condattr_t {long long __sig;char __opaque[8];};
typedef arm_unified_thread_state arm_unified_thread_state_t;
struct dyld_chained_ptr_32_rebase {unsigned int target : 26;unsigned int next : 5;unsigned int bind : 1;};
struct dyld_chained_ptr_64_rebase {unsigned long long target : 36;unsigned long long high8 : 8;unsigned long long reserved : 7;unsigned long long next : 12;unsigned long long bind : 1;};
typedef dyld_kernel_process_info dyld_kernel_process_info_t;
typedef gss_krb5_rfc1964_keydata gss_krb5_rfc1964_keydata_t;
typedef host_preferred_user_arch *host_preferred_user_arch_t;
typedef unsigned int mach_msg_descriptor_type_t;
typedef void *nw_framer_output_handler_t;
typedef void *nw_framer_wakeup_handler_t;
typedef void *nw_txt_record_access_key_t;
struct opaqueMTAudioProcessingTap;
typedef void *posix_spawn_file_actions_t;
typedef processor_set_basic_info *processor_set_basic_info_t;
struct std____1____struct_double4 {double __lx[4];};
struct std____1____tuple_equal_0_ {};
typedef std____1____type_list_unsigned_char__std____type_list_unsigned_short__std____type_list_unsigned_int__std____type_list_unsigned_long__std____type_list_unsigned_long_long__std____type_list_unsigned___int128__std____nat______ std____1____unsigned_types;
typedef std____1__atomic_long_ std____1__atomic_ptrdiff_t;
typedef std____1__atomic_unsigned_long_ std____1__atomic_uintmax_t;
typedef std____1__atomic_unsigned_long_ std____1__atomic_uintptr_t;
struct std____1__collate_wchar_t_ {};
struct std____1__less_equal_void_ {};
typedef int std____1__locale__category;
struct std____1__logical_or_void_ {};
struct std____1__multiplies_void_ {};
struct std____1__num_get_wchar_t_ {};
struct std____1__num_put_wchar_t_ {};
struct std__bad_alloc_vtbl_layout; 
struct std__bad_array_length_vtbl; 
struct std__exception_vtbl_layout; 
struct std__invalid_argument_vtbl; 
struct std__nested_exception_vtbl; 
struct std__type_info_vtbl_layout; 
typedef thread_background_policy *thread_background_policy_t;
typedef thread_precedence_policy *thread_precedence_policy_t;
enum vImage_InterpolationMethod {kvImageNoInterpolation = 0x0,kvImageFullInterpolation = 0x1,kvImageHalfInterpolation = 0x2,};
typedef int vm_machine_attribute_val_t;
typedef vm_region_submap_info_64 *vm_region_submap_info_64_t;
typedef void (*xmlSchemaValidityErrorFunc)(void *,  char *, ...);
typedef void (*AAArchiveStreamCancelProc)(void *);
enum AU3DMixerAttenuationCurve {k3DMixerAttenuationCurve_Power = 0x0,k3DMixerAttenuationCurve_Exponential = 0x1,k3DMixerAttenuationCurve_Inverse = 0x2,k3DMixerAttenuationCurve_Linear = 0x3,};
typedef void *AUHostMusicalContextBlock;
typedef void *AUHostTransportStateBlock;
enum AUSpatializationAlgorithm {kSpatializationAlgorithm_EqualPowerPanning = 0x0,kSpatializationAlgorithm_SphericalHead = 0x1,kSpatializationAlgorithm_HRTF = 0x2,kSpatializationAlgorithm_SoundField = 0x3,kSpatializationAlgorithm_VectorBasedPanning = 0x4,kSpatializationAlgorithm_StereoPassThrough = 0x5,kSpatializationAlgorithm_HRTFHQ = 0x6,kSpatializationAlgorithm_UseOutputType = 0x7,};
struct AVAssetTrackGroupInternal;
enum AVAudio3DMixingSourceMode {AVAudio3DMixingSourceModeSpatializeIfMono = 0x0,AVAudio3DMixingSourceModeBypass = 0x1,AVAudio3DMixingSourceModePointSource = 0x2,AVAudio3DMixingSourceModeAmbienceBed = 0x3,};
enum AVAudioSessionPromptStyle {AVAudioSessionPromptStyleNone = 0x6E6F6E65,AVAudioSessionPromptStyleShort = 0x73687274,AVAudioSessionPromptStyleNormal = 0x6E726D6C,};
enum AVCaptureVideoOrientation {AVCaptureVideoOrientationPortrait = 0x1,AVCaptureVideoOrientationPortraitUpsideDown = 0x2,AVCaptureVideoOrientationLandscapeRight = 0x3,AVCaptureVideoOrientationLandscapeLeft = 0x4,};
enum AVCaptureWhiteBalanceMode {AVCaptureWhiteBalanceModeLocked = 0x0,AVCaptureWhiteBalanceModeAutoWhiteBalance = 0x1,AVCaptureWhiteBalanceModeContinuousAutoWhiteBalance = 0x2,};
enum AVContentKeyRequestStatus {AVContentKeyRequestStatusRequestingResponse = 0x0,AVContentKeyRequestStatusReceivedResponse = 0x1,AVContentKeyRequestStatusRenewed = 0x2,AVContentKeyRequestStatusRetried = 0x3,AVContentKeyRequestStatusCancelled = 0x4,AVContentKeyRequestStatusFailed = 0x5,};
struct AVDisplayCriteriaInternal;
struct AVFragmentedAssetInternal;
struct AVFragmentedMovieInternal;
struct AVMusicTrackEventIterator;
struct AVMutableAudioMixInternal;
struct AVPlayerItemTrackInternal;
enum AVPlayerTimeControlStatus {AVPlayerTimeControlStatusPaused = 0x0,AVPlayerTimeControlStatusWaitingToPlayAtSpecifiedRate = 0x1,AVPlayerTimeControlStatusPlaying = 0x2,};
enum AXCustomContentImportance {AXCustomContentImportanceDefault = 0x0,AXCustomContentImportanceHigh = 0x1,};
enum BNNSLossReductionFunction {BNNSLossReductionNone = 0x0,BNNSLossReductionSum = 0x1,BNNSLossReductionWeightedMean = 0x2,BNNSLossReductionMean = 0x3,BNNSLossReductionNonZeroWeightMean = 0x4,};
enum CBCharacteristicWriteType {CBCharacteristicWriteWithResponse = 0x0,CBCharacteristicWriteWithoutResponse = 0x1,};
typedef  void *(*CFAllocatorRetainCallBack)( void *);
enum CFLocaleLanguageDirection {kCFLocaleLanguageDirectionUnknown = 0x0,kCFLocaleLanguageDirectionLeftToRight = 0x1,kCFLocaleLanguageDirectionRightToLeft = 0x2,kCFLocaleLanguageDirectionTopToBottom = 0x3,kCFLocaleLanguageDirectionBottomToTop = 0x4,};
enum CFStringNormalizationForm {kCFStringNormalizationFormD = 0x0,kCFStringNormalizationFormKD = 0x1,kCFStringNormalizationFormC = 0x2,kCFStringNormalizationFormKC = 0x3,};
typedef CGImageMetadata *CGMutableImageMetadataRef;
typedef void *CHHapticCompletionHandler;
enum CKQueryNotificationReason {CKQueryNotificationReasonRecordCreated = 0x1,CKQueryNotificationReasonRecordUpdated = 0x2,CKQueryNotificationReasonRecordDeleted = 0x3,};
typedef void *CMBufferGetBooleanHandler;
typedef opaqueCMBufferQueueTriggerToken *CMBufferQueueTriggerToken;
typedef void *CMBufferValidationHandler;
enum CNContactDisplayNameOrder {CNContactDisplayNameOrderUserDefault = 0x0,CNContactDisplayNameOrderGivenNameFirst = 0x1,CNContactDisplayNameOrderFamilyNameFirst = 0x2,};
enum CTParagraphStyleSpecifier {kCTParagraphStyleSpecifierAlignment = 0x0,kCTParagraphStyleSpecifierFirstLineHeadIndent = 0x1,kCTParagraphStyleSpecifierHeadIndent = 0x2,kCTParagraphStyleSpecifierTailIndent = 0x3,kCTParagraphStyleSpecifierTabStops = 0x4,kCTParagraphStyleSpecifierDefaultTabInterval = 0x5,kCTParagraphStyleSpecifierLineBreakMode = 0x6,kCTParagraphStyleSpecifierLineHeightMultiple = 0x7,kCTParagraphStyleSpecifierMaximumLineHeight = 0x8,kCTParagraphStyleSpecifierMinimumLineHeight = 0x9,kCTParagraphStyleSpecifierLineSpacing = 0xA,kCTParagraphStyleSpecifierParagraphSpacing = 0xB,kCTParagraphStyleSpecifierParagraphSpacingBefore = 0xC,kCTParagraphStyleSpecifierBaseWritingDirection = 0xD,kCTParagraphStyleSpecifierMaximumLineSpacing = 0xE,kCTParagraphStyleSpecifierMinimumLineSpacing = 0xF,kCTParagraphStyleSpecifierLineSpacingAdjustment = 0x10,kCTParagraphStyleSpecifierLineBoundsOptions = 0x11,kCTParagraphStyleSpecifierCount = 0x12,};
typedef __CVOpenGLESTextureCache *CVOpenGLESTextureCacheRef;
typedef void *ENGetDiagnosisKeysHandler;
enum GKInviteRecipientResponse {GKInviteRecipientResponseAccepted = 0x0,GKInviteRecipientResponseDeclined = 0x1,GKInviteRecipientResponseFailed = 0x2,GKInviteRecipientResponseIncompatible = 0x3,GKInviteRecipientResponseUnableToConnect = 0x4,GKInviteRecipientResponseNoAnswer = 0x5,GKInviteeResponseAccepted = 0x0,GKInviteeResponseDeclined = 0x1,GKInviteeResponseFailed = 0x2,GKInviteeResponseIncompatible = 0x3,GKInviteeResponseUnableToConnect = 0x4,GKInviteeResponseNoAnswer = 0x5,};
enum GKTurnBasedExchangeStatus {GKTurnBasedExchangeStatusUnknown = 0x0,GKTurnBasedExchangeStatusActive = 0x1,GKTurnBasedExchangeStatusComplete = 0x2,GKTurnBasedExchangeStatusResolved = 0x3,GKTurnBasedExchangeStatusCanceled = 0x4,};
enum HKHeartRateSensorLocation {HKHeartRateSensorLocationOther = 0x0,HKHeartRateSensorLocationChest = 0x1,HKHeartRateSensorLocationWrist = 0x2,HKHeartRateSensorLocationFinger = 0x3,HKHeartRateSensorLocationHand = 0x4,HKHeartRateSensorLocationEarLobe = 0x5,HKHeartRateSensorLocationFoot = 0x6,};
enum ICReturnDownloadErrorCode {ICReturnDownloadPathInvalid = 0xFFFFFFFFFFFFAD94,ICReturnDownloadFileWritable = 0xFFFFFFFFFFFFAD95,};
enum ICReturnMetadataErrorCode {ICReturnMetadataNotAvailable = 0xFFFFFFFFFFFFB14A,ICReturnMetadataAlreadyFetching = 0xFFFFFFFFFFFFB14B,ICReturnMetadataCanceled = 0xFFFFFFFFFFFFB14C,ICReturnMetadataInvalid = 0xFFFFFFFFFFFFB14D,};
enum INSiriAuthorizationStatus {INSiriAuthorizationStatusNotDetermined = 0x0,INSiriAuthorizationStatusRestricted = 0x1,INSiriAuthorizationStatusDenied = 0x2,INSiriAuthorizationStatusAuthorized = 0x3,};
enum MACRO_kCMTimeMaxTimescale {kCMTimeMaxTimescale = 0x7FFFFFFF,};
enum MACaptionAppearanceDomain {kMACaptionAppearanceDomainDefault = 0x0,kMACaptionAppearanceDomainUser = 0x1,};
enum MDLTextureChannelEncoding {MDLTextureChannelEncodingUInt8 = 0x1,MDLTextureChannelEncodingUint8 = 0x1,MDLTextureChannelEncodingUInt16 = 0x2,MDLTextureChannelEncodingUint16 = 0x2,MDLTextureChannelEncodingUInt24 = 0x3,MDLTextureChannelEncodingUint24 = 0x3,MDLTextureChannelEncodingUInt32 = 0x4,MDLTextureChannelEncodingUint32 = 0x4,MDLTextureChannelEncodingFloat16 = 0x102,MDLTextureChannelEncodingFloat16SR = 0x302,MDLTextureChannelEncodingFloat32 = 0x104,};
typedef void *MIDICIProfileChangedBlock;
enum MIDINotificationMessageID {kMIDIMsgSetupChanged = 0x1,kMIDIMsgObjectAdded = 0x2,kMIDIMsgObjectRemoved = 0x3,kMIDIMsgPropertyChanged = 0x4,kMIDIMsgThruConnectionsChanged = 0x5,kMIDIMsgSerialPortOwnerChanged = 0x6,kMIDIMsgIOError = 0x7,};
enum MKAnnotationViewDragState {MKAnnotationViewDragStateNone = 0x0,MKAnnotationViewDragStateStarting = 0x1,MKAnnotationViewDragStateDragging = 0x2,MKAnnotationViewDragStateCanceling = 0x3,MKAnnotationViewDragStateEnding = 0x4,};
typedef float MKAnnotationViewZPriority;
typedef void *MLCGraphCompletionHandler;
enum MLImageSizeConstraintType {MLImageSizeConstraintTypeUnspecified = 0x0,MLImageSizeConstraintTypeEnumerated = 0x2,MLImageSizeConstraintTypeRange = 0x3,};
enum MPNowPlayingInfoMediaType {MPNowPlayingInfoMediaTypeNone = 0x0,MPNowPlayingInfoMediaTypeAudio = 0x1,MPNowPlayingInfoMediaTypeVideo = 0x2,};
enum MPNowPlayingPlaybackState {MPNowPlayingPlaybackStateUnknown = 0x0,MPNowPlayingPlaybackStatePlaying = 0x1,MPNowPlayingPlaybackStatePaused = 0x2,MPNowPlayingPlaybackStateStopped = 0x3,MPNowPlayingPlaybackStateInterrupted = 0x4,};
typedef _MPSAxisAlignedBoundingBox MPSAxisAlignedBoundingBox;
typedef void *MPSGraphCompletionHandler;
enum MPSGraphLossReductionType {MPSGraphLossReductionTypeAxis = 0x0,MPSGraphLossReductionTypeSum = 0x1,};
struct MTLCommandQueueDescriptor;
enum MTLPrimitiveTopologyClass {MTLPrimitiveTopologyClassUnspecified = 0x0,MTLPrimitiveTopologyClassPoint = 0x1,MTLPrimitiveTopologyClassLine = 0x2,MTLPrimitiveTopologyClassTriangle = 0x3,};
enum NEDNSSettingsManagerError {NEDNSSettingsManagerErrorConfigurationInvalid = 0x1,NEDNSSettingsManagerErrorConfigurationDisabled = 0x2,NEDNSSettingsManagerErrorConfigurationStale = 0x3,NEDNSSettingsManagerErrorConfigurationCannotBeRemoved = 0x4,};
enum NEHotspotHelperConfidence {kNEHotspotHelperConfidenceNone = 0x0,kNEHotspotHelperConfidenceLow = 0x1,kNEHotspotHelperConfidenceHigh = 0x2,};
enum NEVPNIKEv2CertificateType {NEVPNIKEv2CertificateTypeRSA = 0x1,NEVPNIKEv2CertificateTypeECDSA256 = 0x2,NEVPNIKEv2CertificateTypeECDSA384 = 0x3,NEVPNIKEv2CertificateTypeECDSA521 = 0x4,NEVPNIKEv2CertificateTypeEd25519 = 0x5,};
struct NSHTTPURLResponseInternal;
typedef void *NSItemProviderLoadHandler;
enum NSKeyValueSetMutationKind {NSKeyValueUnionSetMutation = 0x1,NSKeyValueMinusSetMutation = 0x2,NSKeyValueIntersectSetMutation = 0x3,NSKeyValueSetSetMutation = 0x4,};
enum NSLocaleLanguageDirection {NSLocaleLanguageDirectionUnknown = 0x0,NSLocaleLanguageDirectionLeftToRight = 0x1,NSLocaleLanguageDirectionRightToLeft = 0x2,NSLocaleLanguageDirectionTopToBottom = 0x3,NSLocaleLanguageDirectionBottomToTop = 0x4,};
enum NSNumberFormatterBehavior {NSNumberFormatterBehaviorDefault = 0x0,NSNumberFormatterBehavior10_4 = 0x410,};
enum NSProcessInfoThermalState {NSProcessInfoThermalStateNominal = 0x0,NSProcessInfoThermalStateFair = 0x1,NSProcessInfoThermalStateSerious = 0x2,NSProcessInfoThermalStateCritical = 0x3,};
struct OpaqueJSPropertyNameArray;
struct PDFActionNamedPrivateVars;
enum PDFTextAnnotationIconType {kPDFTextAnnotationIconComment = 0x0,kPDFTextAnnotationIconKey = 0x1,kPDFTextAnnotationIconNote = 0x2,kPDFTextAnnotationIconHelp = 0x3,kPDFTextAnnotationIconNewParagraph = 0x4,kPDFTextAnnotationIconParagraph = 0x5,kPDFTextAnnotationIconInsert = 0x6,};
enum PHCollectionEditOperation {PHCollectionEditOperationDeleteContent = 0x1,PHCollectionEditOperationRemoveContent = 0x2,PHCollectionEditOperationAddContent = 0x3,PHCollectionEditOperationCreateContent = 0x4,PHCollectionEditOperationRearrangeContent = 0x5,PHCollectionEditOperationDelete = 0x6,PHCollectionEditOperationRename = 0x7,};
enum PKCanvasViewDrawingPolicy {PKCanvasViewDrawingPolicyDefault = 0x0,PKCanvasViewDrawingPolicyAnyInput = 0x1,PKCanvasViewDrawingPolicyPencilOnly = 0x2,};
typedef void *SCNAnimationDidStartBlock;
enum SCNMorpherCalculationMode {SCNMorpherCalculationModeNormalized = 0x0,SCNMorpherCalculationModeAdditive = 0x1,};
enum SCNParticleBirthDirection {SCNParticleBirthDirectionConstant = 0x0,SCNParticleBirthDirectionSurfaceNormal = 0x1,SCNParticleBirthDirectionRandom = 0x2,};
enum SCNReferenceLoadingPolicy {SCNReferenceLoadingPolicyImmediate = 0x0,SCNReferenceLoadingPolicyOnDemand = 0x1,};
enum SCNetworkConnectionStatus {kSCNetworkConnectionInvalid = 0xFFFFFFFF,kSCNetworkConnectionDisconnected = 0x0,kSCNetworkConnectionConnecting = 0x1,kSCNetworkConnectionConnected = 0x2,kSCNetworkConnectionDisconnecting = 0x3,};
enum SFContentBlockerErrorCode {SFContentBlockerNoExtensionFound = 0x1,SFContentBlockerNoAttachmentFound = 0x2,SFContentBlockerLoadingInterrupted = 0x3,};
enum SKPaymentTransactionState {SKPaymentTransactionStatePurchasing = 0x0,SKPaymentTransactionStatePurchased = 0x1,SKPaymentTransactionStateFailed = 0x2,SKPaymentTransactionStateRestored = 0x3,SKPaymentTransactionStateDeferred = 0x4,};
enum SSLClientCertificateState {kSSLClientCertNone = 0x0,kSSLClientCertRequested = 0x1,kSSLClientCertSent = 0x2,kSSLClientCertRejected = 0x3,};
typedef void *SecTrustWithErrorCallback;
enum UIBackgroundRefreshStatus {UIBackgroundRefreshStatusRestricted = 0x0,UIBackgroundRefreshStatusDenied = 0x1,UIBackgroundRefreshStatusAvailable = 0x2,};
typedef void *UIContextualActionHandler;
enum UISegmentedControlSegment {UISegmentedControlSegmentAny = 0x0,UISegmentedControlSegmentLeft = 0x1,UISegmentedControlSegmentCenter = 0x2,UISegmentedControlSegmentRight = 0x3,UISegmentedControlSegmentAlone = 0x4,};
enum UITableViewCellFocusStyle {UITableViewCellFocusStyleDefault = 0x0,UITableViewCellFocusStyleCustom = 0x1,};
enum UITableViewRowActionStyle {UITableViewRowActionStyleDefault = 0x0,UITableViewRowActionStyleDestructive = 0x0,UITableViewRowActionStyleNormal = 0x1,};
enum UITableViewScrollPosition {UITableViewScrollPositionNone = 0x0,UITableViewScrollPositionTop = 0x1,UITableViewScrollPositionMiddle = 0x2,UITableViewScrollPositionBottom = 0x3,};
enum UIViewAnimationTransition {UIViewAnimationTransitionNone = 0x0,UIViewAnimationTransitionFlipFromLeft = 0x1,UIViewAnimationTransitionFlipFromRight = 0x2,UIViewAnimationTransitionCurlUp = 0x3,UIViewAnimationTransitionCurlDown = 0x4,};
enum VNImageCropAndScaleOption {VNImageCropAndScaleOptionCenterCrop = 0x0,VNImageCropAndScaleOptionScaleFit = 0x1,VNImageCropAndScaleOptionScaleFill = 0x2,};
enum VSSubscriptionAccessLevel {VSSubscriptionAccessLevelUnknown = 0x0,VSSubscriptionAccessLevelFreeWithAccount = 0x1,VSSubscriptionAccessLevelPaid = 0x2,};
typedef OpaqueVTDecompressionSession *VTDecompressionSessionRef;
enum WKUserScriptInjectionTime {WKUserScriptInjectionTimeAtDocumentStart = 0x0,WKUserScriptInjectionTimeAtDocumentEnd = 0x1,};
typedef void (*XML_EndDoctypeDeclHandler)(void *);
typedef _opaque_pthread_rwlock_t __darwin_pthread_rwlock_t;
struct __objc_module_info_struct {unsigned long long version;unsigned long long size;char *name;void *symbols;};
typedef unsigned long long dispatch_io_close_flags_t;
typedef long long dispatch_queue_priority_t;
struct gss_cred_id_t_desc_struct;
typedef host_cpu_load_info host_cpu_load_info_data_t;
typedef host_priority_info host_priority_info_data_t;
typedef vm_purgeable_info host_purgable_info_data_t;
typedef mach_timebase_info mach_timebase_info_data_t;
typedef memory_object_attr_info *memory_object_attr_info_t;
typedef int memory_object_info_data_t[1024];
typedef memory_object_perf_info *memory_object_perf_info_t;
typedef NSObject *nw_advertise_descriptor_t;
typedef NSObject *nw_data_transfer_report_t;
typedef NSObject *nw_establishment_report_t;
typedef void *nw_framer_input_handler_t;
typedef void *nw_framer_start_handler_t;
struct objc_property_attribute_t { char *name; char *value;};
struct opaqueCMFormatDescription;
typedef os_activity_scope_state_s *os_activity_scope_state_t;
typedef void *os_trace_payload_object_t;
typedef os_workgroup_join_token_opaque_s os_workgroup_join_token_s;
typedef os_workgroup_join_token_opaque_s *os_workgroup_join_token_t;
typedef processor_cpu_load_info *processor_cpu_load_info_t;
typedef processor_cpu_stat processor_cpu_stat_data_t;
typedef processor_set_load_info *processor_set_load_info_t;
typedef void *sec_protocol_key_update_t;
struct std____1____num_get_char_ {};
struct std____1____num_put_char_ {};
struct std____1____struct_double {long double __lx;};
struct std____1____tuple_less_0_ {};
struct std____1__allocator_char_ {};
struct std____1__allocator_void_ {};
struct std____1__allocator_arg_t {};
typedef std____1__atomic_char16_t_ std____1__atomic_char16_t;
typedef std____1__atomic_char32_t_ std____1__atomic_char32_t;
typedef std____1__atomic_long_ std____1__atomic_intmax_t;
typedef std____1__atomic_long_ std____1__atomic_intptr_t;
typedef std____1__atomic_unsigned_short_ std____1__atomic_uint16_t;
typedef std____1__atomic_unsigned_int_ std____1__atomic_uint32_t;
typedef std____1__atomic_unsigned_long_long_ std____1__atomic_uint64_t;
typedef std____1__chrono__duration_long__std__ratio_60__1__ std____1__chrono__minutes;
typedef std____1__chrono__duration_long_long_ std____1__chrono__seconds;
struct std____1__complex_double_ {double __re_;double __im_;};
struct std____1__error_condition {int __val_; std____1__error_category *__cat_;};
enum std____1__ios_base__event {erase_event = 0x0,imbue_event = 0x1,copyfmt_event = 0x2,};
struct std____1__money_get_char_ {};
struct std____1__money_put_char_ {};
struct std__bad_cast_vtbl_layout; 
struct std__underflow_error_vtbl; 
typedef task_basic_info_32 task_basic_info_32_data_t;
typedef task_basic_info_64 task_basic_info_64_data_t;
typedef task_power_info_v2 task_power_info_v2_data_t;
struct vDSP_biquadm_SetupStructD;
struct vImage_ARGBToYpCbCrMatrix {float R_Yp;float G_Yp;float B_Yp;float R_Cb;float G_Cb;float B_Cb_R_Cr;float G_Cr;float B_Cr;};
struct vImage_YpCbCrToARGBMatrix {float Yp;float Cr_R;float Cr_G;float Cb_G;float Cb_B;};
typedef vm_page_info_basic vm_page_info_basic_data_t;
typedef vm_region_basic_info_64 *vm_region_basic_info_64_t;
typedef vm_region_extended_info *vm_region_extended_info_t;
typedef vm_region_top_info vm_region_top_info_data_t;
enum xmlBufferAllocationScheme {XML_BUFFER_ALLOC_DOUBLEIT = 0x0,XML_BUFFER_ALLOC_EXACT = 0x1,XML_BUFFER_ALLOC_IMMUTABLE = 0x2,XML_BUFFER_ALLOC_IO = 0x3,XML_BUFFER_ALLOC_HYBRID = 0x4,XML_BUFFER_ALLOC_BOUNDED = 0x5,};
typedef int (*xmlCharEncodingOutputFunc)(unsigned char *, int *,  unsigned char *, int *);
enum xmlSchematronValidOptions {XML_SCHEMATRON_OUT_QUIET = 0x1,XML_SCHEMATRON_OUT_TEXT = 0x2,XML_SCHEMATRON_OUT_XML = 0x4,XML_SCHEMATRON_OUT_ERROR = 0x8,XML_SCHEMATRON_OUT_FILE = 0x100,XML_SCHEMATRON_OUT_BUFFER = 0x200,XML_SCHEMATRON_OUT_IO = 0x400,};
typedef int (*AAArchiveStreamCloseProc)(void *);
enum ARGeoTrackingStateReason {ARGeoTrackingStateReasonNone = 0x0,ARGeoTrackingStateReasonNotAvailableAtLocation = 0x1,ARGeoTrackingStateReasonNeedLocationPermissions = 0x2,ARGeoTrackingStateReasonWorldTrackingUnstable = 0x3,ARGeoTrackingStateReasonWaitingForLocation = 0x4,ARGeoTrackingStateReasonWaitingForAvailabilityCheck = 0x5,ARGeoTrackingStateReasonGeoDataNotLoaded = 0x6,ARGeoTrackingStateReasonDevicePointedTooLow = 0x7,ARGeoTrackingStateReasonVisualLocalizationFailed = 0x8,};
enum ARRaycastTargetAlignment {ARRaycastTargetAlignmentHorizontal = 0x0,ARRaycastTargetAlignmentVertical = 0x1,ARRaycastTargetAlignmentAny = 0x2,};
typedef void *AUParameterObserverToken;
typedef void *AUScheduleMIDIEventBlock;
typedef void *AUScheduleParameterBlock;
enum AUSpatialMixerOutputType {kSpatialMixerOutputType_Headphones = 0x1,kSpatialMixerOutputType_BuiltInSpeakers = 0x2,kSpatialMixerOutputType_ExternalSpeakers = 0x3,};
enum AUSpatialMixerSourceMode {kSpatialMixerSourceMode_SpatializeIfMono = 0x0,kSpatialMixerSourceMode_Bypass = 0x1,kSpatialMixerSourceMode_PointSource = 0x2,kSpatialMixerSourceMode_AmbienceBed = 0x3,};
enum AVAudioStereoOrientation {AVAudioStereoOrientationNone = 0x0,AVAudioStereoOrientationPortrait = 0x1,AVAudioStereoOrientationPortraitUpsideDown = 0x2,AVAudioStereoOrientationLandscapeRight = 0x3,AVAudioStereoOrientationLandscapeLeft = 0x4,};
enum AVCaptureAutoFocusSystem {AVCaptureAutoFocusSystemNone = 0x0,AVCaptureAutoFocusSystemContrastDetection = 0x1,AVCaptureAutoFocusSystemPhaseDetection = 0x2,};
struct AVCaptureSessionInternal;
struct AVFrameRateRangeInternal;
struct AVMediaSelectionInternal;
struct AVMetadataObjectInternal;
typedef AudioUnitParameterNameInfo AudioUnitParameterIDName;
enum BGTaskSchedulerErrorCode {BGTaskSchedulerErrorCodeUnavailable = 0x1,BGTaskSchedulerErrorCodeTooManyPendingTaskRequests = 0x2,BGTaskSchedulerErrorCodeNotPermitted = 0x3,};
enum CBPeripheralManagerState {CBPeripheralManagerStateUnknown = 0x0,CBPeripheralManagerStateResetting = 0x1,CBPeripheralManagerStateUnsupported = 0x2,CBPeripheralManagerStateUnauthorized = 0x3,CBPeripheralManagerStatePoweredOff = 0x4,CBPeripheralManagerStatePoweredOn = 0x5,};
typedef __CFCharacterSet *CFMutableCharacterSetRef;
enum CFStringBuiltInEncodings {kCFStringEncodingMacRoman = 0x0,kCFStringEncodingWindowsLatin1 = 0x500,kCFStringEncodingISOLatin1 = 0x201,kCFStringEncodingNextStepLatin = 0xB01,kCFStringEncodingASCII = 0x600,kCFStringEncodingUnicode = 0x100,kCFStringEncodingUTF8 = 0x8000100,kCFStringEncodingNonLossyASCII = 0xBFF,kCFStringEncodingUTF16 = 0x100,kCFStringEncodingUTF16BE = 0x10000100,kCFStringEncodingUTF16LE = 0x14000100,kCFStringEncodingUTF32 = 0xC000100,kCFStringEncodingUTF32BE = 0x18000100,kCFStringEncodingUTF32LE = 0x1C000100,};
typedef  CGColorConversionInfo *CGColorConversionInfoRef;
enum CLKComplicationRingStyle {CLKComplicationRingStyleClosed = 0x0,CLKComplicationRingStyleOpen = 0x1,};
enum CXPlayDTMFCallActionType {CXPlayDTMFCallActionTypeSingleTone = 0x1,CXPlayDTMFCallActionTypeSoftPause = 0x2,CXPlayDTMFCallActionTypeHardPause = 0x3,};
typedef void *ENDetectExposuresHandler;
typedef void *ENGetExposureInfoHandler;
typedef void *ENGetUserTraveledHandler;
enum GKLeaderboardPlayerScope {GKLeaderboardPlayerScopeGlobal = 0x0,GKLeaderboardPlayerScopeFriendsOnly = 0x1,};
enum GLKTextureInfoAlphaState {GLKTextureInfoAlphaStateNone = 0x0,GLKTextureInfoAlphaStateNonPremultiplied = 0x1,GLKTextureInfoAlphaStatePremultiplied = 0x2,};
typedef void *GLKTextureLoaderCallback;
enum HKHeartRateMotionContext {HKHeartRateMotionContextNotSet = 0x0,HKHeartRateMotionContextSedentary = 0x1,HKHeartRateMotionContextActive = 0x2,};
enum ICDeviceLocationTypeMask {ICDeviceLocationTypeMaskLocal = 0x100,ICDeviceLocationTypeMaskShared = 0x200,ICDeviceLocationTypeMaskBonjour = 0x400,ICDeviceLocationTypeMaskBluetooth = 0x800,ICDeviceLocationTypeMaskRemote = 0xFE00,};
enum ICScannerMeasurementUnit {ICScannerMeasurementUnitInches = 0x0,ICScannerMeasurementUnitCentimeters = 0x1,ICScannerMeasurementUnitPicas = 0x2,ICScannerMeasurementUnitPoints = 0x3,ICScannerMeasurementUnitTwips = 0x4,ICScannerMeasurementUnitPixels = 0x5,};
enum LAAccessControlOperation {LAAccessControlOperationCreateItem = 0x0,LAAccessControlOperationUseItem = 0x1,LAAccessControlOperationCreateKey = 0x2,LAAccessControlOperationUseKeySign = 0x3,LAAccessControlOperationUseKeyDecrypt = 0x4,LAAccessControlOperationUseKeyKeyExchange = 0x5,};
enum MACRO_IN_LINKLOCALNETNUM {IN_LINKLOCALNETNUM = 2851995648,IN_LOOPBACKNET = 127,};
enum MACRO_MPSDeviceCapsIndex {MPSDeviceCapsIndex = 127,};
enum MACRO_SECTION_ATTRIBUTES {SECTION_ATTRIBUTES_USR = 0xFF000000,};
enum MACRO_VM_REGION_EXTENDED {VM_REGION_EXTENDED_INFO = 13,VM_REGION_TOP_INFO = 12,VM_MAP_ENTRY_MAX = 256,VM_PAGE_INFO_BASIC = 1,};
enum MACRO___DARWIN_MAXNAMLEN {__DARWIN_MAXNAMLEN = 255,__DARWIN_MAXPATHLEN = 1024,};
enum MACRO_kABRecordInvalidID {kABRecordInvalidID = -1,};
enum MACRO_kCTVersionNumber10 {kCTVersionNumber10_5 = 0x20000,kCTVersionNumber10_5_2 = 0x20001,kCTVersionNumber10_5_3 = 0x20002,kCTVersionNumber10_5_5 = 0x20003,kCTVersionNumber10_6 = 0x30000,kCTVersionNumber10_7 = 0x40000,kCTVersionNumber10_8 = 0x50000,kCTVersionNumber10_9 = 0x60000,kCTVersionNumber10_10 = 0x70000,kCTVersionNumber10_11 = 0x80000,kCTVersionNumber10_12 = 0x90000,kCTVersionNumber10_13 = 0xA0000,kCTVersionNumber10_14 = 0xB0000,kCTVersionNumber10_15 = 0xC0000,};
enum MACRO_kCTVersionNumber11 {kCTVersionNumber11_0 = 0xD0000,};
enum MACRO_kLAErrorUserCancel {kLAErrorUserCancel = -2,};
enum MACRO_pseudo_AF_HDRCMPLT {pseudo_AF_HDRCMPLT = 35,};
enum MIDITransformControlType {kMIDIControlType_7Bit = 0x0,kMIDIControlType_14Bit = 0x1,kMIDIControlType_7BitRPN = 0x2,kMIDIControlType_14BitRPN = 0x3,kMIDIControlType_7BitNRPN = 0x4,kMIDIControlType_14BitNRPN = 0x5,};
enum MKDistanceFormatterUnits {MKDistanceFormatterUnitsDefault = 0x0,MKDistanceFormatterUnitsMetric = 0x1,MKDistanceFormatterUnitsImperial = 0x2,MKDistanceFormatterUnitsImperialWithYards = 0x3,};
typedef float MKFeatureDisplayPriority;
enum MLCRandomInitializerType {MLCRandomInitializerTypeInvalid = 0x0,MLCRandomInitializerTypeUniform = 0x1,MLCRandomInitializerTypeGlorotUniform = 0x2,MLCRandomInitializerTypeXavier = 0x3,MLCRandomInitializerTypeCount = 0x4,};
typedef void *MPSGraphScheduledHandler;
typedef void *MTKTextureLoaderCallback;
enum NFCFeliCaPollingTimeSlot {NFCFeliCaPollingTimeSlotMax1 = 0x0,NFCFeliCaPollingTimeSlotMax2 = 0x1,NFCFeliCaPollingTimeSlotMax4 = 0x3,NFCFeliCaPollingTimeSlotMax8 = 0x7,NFCFeliCaPollingTimeSlotMax16 = 0xF,PollingTimeSlotMax1 = 0x0,PollingTimeSlotMax2 = 0x1,PollingTimeSlotMax4 = 0x3,PollingTimeSlotMax8 = 0x7,PollingTimeSlotMax16 = 0xF,};
typedef NSData *NSFileProviderSyncAnchor;
enum NSHTTPCookieAcceptPolicy {NSHTTPCookieAcceptPolicyAlways = 0x0,NSHTTPCookieAcceptPolicyNever = 0x1,NSHTTPCookieAcceptPolicyOnlyFromMainDocumentDomain = 0x2,};
enum NSOperationQueuePriority {NSOperationQueuePriorityVeryLow = 0xFFFFFFFFFFFFFFF8,NSOperationQueuePriorityLow = 0xFFFFFFFFFFFFFFFC,NSOperationQueuePriorityNormal = 0x0,NSOperationQueuePriorityHigh = 0x4,NSOperationQueuePriorityVeryHigh = 0x8,};
struct OpaqueAudioQueueTimeline;
struct OpaqueMusicEventIterator;
struct OpaqueVTMultiPassStorage;
struct PDFActionGoToPrivateVars;
struct PDFAnnotationPrivateVars;
enum PHAssetCollectionSubtype {PHAssetCollectionSubtypeAlbumRegular = 0x2,PHAssetCollectionSubtypeAlbumSyncedEvent = 0x3,PHAssetCollectionSubtypeAlbumSyncedFaces = 0x4,PHAssetCollectionSubtypeAlbumSyncedAlbum = 0x5,PHAssetCollectionSubtypeAlbumImported = 0x6,PHAssetCollectionSubtypeAlbumMyPhotoStream = 0x64,PHAssetCollectionSubtypeAlbumCloudShared = 0x65,PHAssetCollectionSubtypeSmartAlbumGeneric = 0xC8,PHAssetCollectionSubtypeSmartAlbumPanoramas = 0xC9,PHAssetCollectionSubtypeSmartAlbumVideos = 0xCA,PHAssetCollectionSubtypeSmartAlbumFavorites = 0xCB,PHAssetCollectionSubtypeSmartAlbumTimelapses = 0xCC,PHAssetCollectionSubtypeSmartAlbumAllHidden = 0xCD,PHAssetCollectionSubtypeSmartAlbumRecentlyAdded = 0xCE,PHAssetCollectionSubtypeSmartAlbumBursts = 0xCF,PHAssetCollectionSubtypeSmartAlbumSlomoVideos = 0xD0,PHAssetCollectionSubtypeSmartAlbumUserLibrary = 0xD1,PHAssetCollectionSubtypeSmartAlbumSelfPortraits = 0xD2,PHAssetCollectionSubtypeSmartAlbumScreenshots = 0xD3,PHAssetCollectionSubtypeSmartAlbumDepthEffect = 0xD4,PHAssetCollectionSubtypeSmartAlbumLivePhotos = 0xD5,PHAssetCollectionSubtypeSmartAlbumAnimated = 0xD6,PHAssetCollectionSubtypeSmartAlbumLongExposures = 0xD7,PHAssetCollectionSubtypeSmartAlbumUnableToUpload = 0xD8,PHAssetCollectionSubtypeAny = 0x7FFFFFFFFFFFFFFF,};
enum PKPaymentSummaryItemType {PKPaymentSummaryItemTypeFinal = 0x0,PKPaymentSummaryItemTypePending = 0x1,};
enum QLPreviewItemEditingMode {QLPreviewItemEditingModeDisabled = 0x0,QLPreviewItemEditingModeUpdateContents = 0x1,QLPreviewItemEditingModeCreateCopy = 0x2,};
typedef void *SCNAnimationDidStopBlock;
enum SCNGeometryPrimitiveType {SCNGeometryPrimitiveTypeTriangles = 0x0,SCNGeometryPrimitiveTypeTriangleStrip = 0x1,SCNGeometryPrimitiveTypeLine = 0x2,SCNGeometryPrimitiveTypePoint = 0x3,SCNGeometryPrimitiveTypePolygon = 0x4,};
enum SCNParticleBirthLocation {SCNParticleBirthLocationSurface = 0x0,SCNParticleBirthLocationVolume = 0x1,SCNParticleBirthLocationVertex = 0x2,};
typedef void *SCNParticleModifierBlock;
enum SCNParticleModifierStage {SCNParticleModifierStagePreDynamics = 0x0,SCNParticleModifierStagePostDynamics = 0x1,SCNParticleModifierStagePreCollision = 0x2,SCNParticleModifierStagePostCollision = 0x3,};
typedef  __SCNetworkReachability *SCNetworkReachabilityRef;
enum SKTileDefinitionRotation {SKTileDefinitionRotation0 = 0x0,SKTileDefinitionRotation90 = 0x1,SKTileDefinitionRotation180 = 0x2,SKTileDefinitionRotation270 = 0x3,};
typedef __SecTrustedApplication *SecTrustedApplicationRef;
enum UIAttachmentBehaviorType {UIAttachmentBehaviorTypeItems = 0x0,UIAttachmentBehaviorTypeAnchor = 0x1,};
enum UICellAccessoryPlacement {UICellAccessoryPlacementLeading = 0x0,UICellAccessoryPlacementTrailing = 0x1,};
enum UICollectionUpdateAction {UICollectionUpdateActionInsert = 0x0,UICollectionUpdateActionDelete = 0x1,UICollectionUpdateActionReload = 0x2,UICollectionUpdateActionMove = 0x3,UICollectionUpdateActionNone = 0x4,};
enum UIContentInsetsReference {UIContentInsetsReferenceAutomatic = 0x0,UIContentInsetsReferenceNone = 0x1,UIContentInsetsReferenceSafeArea = 0x2,UIContentInsetsReferenceLayoutMargins = 0x3,UIContentInsetsReferenceReadableContent = 0x4,};
enum UIGestureRecognizerState {UIGestureRecognizerStatePossible = 0x0,UIGestureRecognizerStateBegan = 0x1,UIGestureRecognizerStateChanged = 0x2,UIGestureRecognizerStateEnded = 0x3,UIGestureRecognizerStateCancelled = 0x4,UIGestureRecognizerStateFailed = 0x5,UIGestureRecognizerStateRecognized = 0x3,};
typedef void *UIGraphicsDrawingActions;
enum UIModalPresentationStyle {UIModalPresentationFullScreen = 0x0,UIModalPresentationPageSheet = 0x1,UIModalPresentationFormSheet = 0x2,UIModalPresentationCurrentContext = 0x3,UIModalPresentationCustom = 0x4,UIModalPresentationOverFullScreen = 0x5,UIModalPresentationOverCurrentContext = 0x6,UIModalPresentationPopover = 0x7,UIModalPresentationBlurOverFullScreen = 0x8,UIModalPresentationNone = 0xFFFFFFFFFFFFFFFF,UIModalPresentationAutomatic = 0xFFFFFFFFFFFFFFFE,};
enum UITableViewCellDragState {UITableViewCellDragStateNone = 0x0,UITableViewCellDragStateLifting = 0x1,UITableViewCellDragStateDragging = 0x2,};
enum UITextAutocorrectionType {UITextAutocorrectionTypeDefault = 0x0,UITextAutocorrectionTypeNo = 0x1,UITextAutocorrectionTypeYes = 0x2,};
enum UIUserInterfaceSizeClass {UIUserInterfaceSizeClassUnspecified = 0x0,UIUserInterfaceSizeClassCompact = 0x1,UIUserInterfaceSizeClassRegular = 0x2,};
enum UIViewTintAdjustmentMode {UIViewTintAdjustmentModeAutomatic = 0x0,UIViewTintAdjustmentModeNormal = 0x1,UIViewTintAdjustmentModeDimmed = 0x2,};
enum UIndicPositionalCategory {U_INPC_NA = 0x0,U_INPC_BOTTOM = 0x1,U_INPC_BOTTOM_AND_LEFT = 0x2,U_INPC_BOTTOM_AND_RIGHT = 0x3,U_INPC_LEFT = 0x4,U_INPC_LEFT_AND_RIGHT = 0x5,U_INPC_OVERSTRUCK = 0x6,U_INPC_RIGHT = 0x7,U_INPC_TOP = 0x8,U_INPC_TOP_AND_BOTTOM = 0x9,U_INPC_TOP_AND_BOTTOM_AND_RIGHT = 0xA,U_INPC_TOP_AND_LEFT = 0xB,U_INPC_TOP_AND_LEFT_AND_RIGHT = 0xC,U_INPC_TOP_AND_RIGHT = 0xD,U_INPC_VISUAL_ORDER_LEFT = 0xE,U_INPC_TOP_AND_BOTTOM_AND_LEFT = 0xF,};
typedef void *VNRequestProgressHandler;
enum WCSessionActivationState {WCSessionActivationStateNotActivated = 0x0,WCSessionActivationStateInactive = 0x1,WCSessionActivationStateActivated = 0x2,};
enum WKNavigationActionPolicy {WKNavigationActionPolicyCancel = 0x0,WKNavigationActionPolicyAllow = 0x1,};
typedef int (*XML_NotStandaloneHandler)(void *);
enum _SparseIterativeMethod_t {_SparseMethodCG = 0x0,_SparseMethodGMRES = 0x1,_SparseMethodLSMR = 0x2,};
struct __CVOpenGLESTextureCache;
typedef _opaque_pthread_mutex_t __darwin_pthread_mutex_t;
struct __libcpp_debug_exception;
struct _opaque_pthread_rwlock_t {long long __sig;char __opaque[192];};
struct _xmlSchematronParserCtxt;
enum compression_stream_flags {COMPRESSION_STREAM_FINALIZE = 0x1,};
struct dns_domain_name_record_t {char *name;};
struct dyld_chained_ptr_32_bind {unsigned int ordinal : 20;unsigned int addend : 6;unsigned int next : 5;unsigned int bind : 1;};
struct dyld_chained_ptr_64_bind {unsigned long long ordinal : 24;unsigned long long addend : 8;unsigned long long reserved : 19;unsigned long long next : 12;unsigned long long bind : 1;};
typedef dyld_kernel_image_info dyld_kernel_image_info_t;
struct gss_ctx_id_t_desc_struct;
typedef int (*hasExternalSubsetSAXFunc)(void *);
typedef int (*hasInternalSubsetSAXFunc)(void *);
enum nw_framer_start_result_t {nw_framer_start_result_ready = 0x1,nw_framer_start_result_will_mark_ready = 0x2,};
typedef void *nw_framer_stop_handler_t;
typedef NSObject *nw_protocol_definition_t;
enum nw_txt_record_find_key_t {nw_txt_record_find_key_invalid = 0x0,nw_txt_record_find_key_not_present = 0x1,nw_txt_record_find_key_no_value = 0x2,nw_txt_record_find_key_empty_value = 0x3,nw_txt_record_find_key_non_empty_value = 0x4,};
typedef policy_fifo_limit policy_fifo_limit_data_t;
typedef policy_timeshare_limit *policy_timeshare_limit_t;
struct processor_set_basic_info {int processor_count;int default_policy;};
typedef mach_msg_type_descriptor_t *routine_arg_descriptor_t;
typedef rpc_routine_descriptor *rpc_routine_descriptor_t;
typedef void *sec_protocol_challenge_t;
struct std____1____bitset_0__0_ {};
struct std____1____ll_mul_0__0_ {};
struct std____1____num_get_base {};
struct std____1____num_put_base {};
struct std____1____shared_count {std____1____shared_count_vtbl *__vftable ;long long __shared_owners_;};
typedef std____1____type_list_signed_char__std____type_list_short__std____type_list_int__std____type_list_long__std____type_list_long_long__std____type_list___int128__std____nat______ std____1____signed_types;
typedef std____1__atomic_short_ std____1__atomic_int16_t;
typedef std____1__atomic_int_ std____1__atomic_int32_t;
typedef std____1__atomic_long_long_ std____1__atomic_int64_t;
typedef std____1__atomic_unsigned_char_ std____1__atomic_uint8_t;
typedef std____1__atomic_wchar_t_ std____1__atomic_wchar_t;
struct std____1__auto_ptr_void_ {};
struct std____1__complex_float_ {float __re_;float __im_;};
struct std____1__equal_to_void_ {};
struct std____1__error_category {std____1__error_category_vtbl *__vftable ;};
struct std____1__ios_base__Init {};
struct std____1__messages_char_ {};
struct std____1__ratio_1__1000_ {};
struct std____1__ratio_1000__1_ {};
struct std____1__time_get_char_ {};
struct std____1__time_put_char_ {};
typedef std____1__basic_string_view_char16_t_ std____1__u16string_view;
typedef std____1__basic_string_view_char32_t_ std____1__u32string_view;
typedef std____1__basic_istringstream_wchar_t_ std____1__wistringstream;
typedef std____1__basic_ostringstream_wchar_t_ std____1__wostringstream;
struct std__overflow_error_vtbl; 
typedef task_absolutetime_info *task_absolutetime_info_t;
typedef task_affinity_tag_info *task_affinity_tag_info_t;
typedef task_kernelmemory_info *task_kernelmemory_info_t;
typedef task_thread_times_info *task_thread_times_info_t;
typedef task_trace_memory_info *task_trace_memory_info_t;
typedef thread_affinity_policy *thread_affinity_policy_t;
typedef thread_basic_info thread_basic_info_data_t;
typedef thread_extended_policy *thread_extended_policy_t;
typedef thread_identifier_info *thread_identifier_info_t;
typedef thread_standard_policy *thread_standard_policy_t;
struct vDSP_biquad_SetupStructD;
struct vDSP_biquadm_SetupStruct;
typedef vImage_AffineTransform_Double vImage_CGAffineTransform;
typedef int *vm_region_recurse_info_t;
struct voucher_mach_msg_state_s;
typedef voucher_mach_msg_state_s *voucher_mach_msg_state_t;
typedef unsigned int xattr_operation_intent_t;
typedef int (*xmlCharEncodingInputFunc)(unsigned char *, int *,  unsigned char *, int *);
enum AACompressionAlgorithms {AA_COMPRESSION_ALGORITHM_NONE = 0x0,AA_COMPRESSION_ALGORITHM_LZ4 = 0x100,AA_COMPRESSION_ALGORITHM_ZLIB = 0x505,AA_COMPRESSION_ALGORITHM_LZMA = 0x306,AA_COMPRESSION_ALGORITHM_LZFSE = 0x801,};
enum ARGeometryPrimitiveType {ARGeometryPrimitiveTypeLine = 0x0,ARGeometryPrimitiveTypeTriangle = 0x1,};
typedef void *AURenderContextObserver;
typedef void *AVAudioIONodeInputBlock;
enum AVAudioSessionErrorCode {AVAudioSessionErrorCodeNone = 0x0,AVAudioSessionErrorCodeMediaServicesFailed = 0x6D737276,AVAudioSessionErrorCodeIsBusy = 0x21616374,AVAudioSessionErrorCodeIncompatibleCategory = 0x21636174,AVAudioSessionErrorCodeCannotInterruptOthers = 0x21696E74,AVAudioSessionErrorCodeMissingEntitlement = 0x656E743F,AVAudioSessionErrorCodeSiriIsRecording = 0x73697269,AVAudioSessionErrorCodeCannotStartPlaying = 0x21706C61,AVAudioSessionErrorCodeCannotStartRecording = 0x21726563,AVAudioSessionErrorCodeBadParam = 0xFFFFFFFFFFFFFFCE,AVAudioSessionErrorCodeInsufficientPriority = 0x21707269,AVAudioSessionErrorCodeResourceNotAvailable = 0x21726573,AVAudioSessionErrorCodeUnspecified = 0x77686174,AVAudioSessionErrorCodeExpiredSession = 0x21736573,AVAudioSessionErrorCodeSessionNotActive = 0x696E6163,};
enum AVAudioUnitEQFilterType {AVAudioUnitEQFilterTypeParametric = 0x0,AVAudioUnitEQFilterTypeLowPass = 0x1,AVAudioUnitEQFilterTypeHighPass = 0x2,AVAudioUnitEQFilterTypeResonantLowPass = 0x3,AVAudioUnitEQFilterTypeResonantHighPass = 0x4,AVAudioUnitEQFilterTypeBandPass = 0x5,AVAudioUnitEQFilterTypeBandStop = 0x6,AVAudioUnitEQFilterTypeLowShelf = 0x7,AVAudioUnitEQFilterTypeHighShelf = 0x8,AVAudioUnitEQFilterTypeResonantLowShelf = 0x9,AVAudioUnitEQFilterTypeResonantHighShelf = 0xA,};
enum AVAudioUnitReverbPreset {AVAudioUnitReverbPresetSmallRoom = 0x0,AVAudioUnitReverbPresetMediumRoom = 0x1,AVAudioUnitReverbPresetLargeRoom = 0x2,AVAudioUnitReverbPresetMediumHall = 0x3,AVAudioUnitReverbPresetLargeHall = 0x4,AVAudioUnitReverbPresetPlate = 0x5,AVAudioUnitReverbPresetMediumChamber = 0x6,AVAudioUnitReverbPresetLargeChamber = 0x7,AVAudioUnitReverbPresetCathedral = 0x8,AVAudioUnitReverbPresetLargeRoom2 = 0x9,AVAudioUnitReverbPresetMediumHall2 = 0xA,AVAudioUnitReverbPresetMediumHall3 = 0xB,AVAudioUnitReverbPresetLargeHall2 = 0xC,};
struct AVCaptureDeviceInternal;
enum AVCaptureDevicePosition {AVCaptureDevicePositionUnspecified = 0x0,AVCaptureDevicePositionBack = 0x1,AVCaptureDevicePositionFront = 0x2,};
struct AVCaptureOutputInternal;
enum AVPlayerActionAtItemEnd {AVPlayerActionAtItemEndAdvance = 0x0,AVPlayerActionAtItemEndPause = 0x1,AVPlayerActionAtItemEndNone = 0x2,};
struct AVRouteDetectorInternal;
struct AVTextStyleRuleInternal;
enum BNNSInterpolationMethod {BNNSInterpolationMethodNearest = 0x0,BNNSInterpolationMethodLinear = 0x1,};
typedef _CFHTTPAuthentication *CFHTTPAuthenticationRef;
enum CFNetServiceMonitorType {kCFNetServiceMonitorTXT = 0x1,};
typedef __CFNotificationCenter *CFNotificationCenterRef;
typedef void *CGImageMetadataTagBlock;
struct CIFilterGeneratorStruct;
enum CLAccuracyAuthorization {CLAccuracyAuthorizationFullAccuracy = 0x0,CLAccuracyAuthorizationReducedAccuracy = 0x1,};
typedef double CLHeadingComponentValue;
typedef double CLLocationSpeedAccuracy;
typedef void *CMMotionActivityHandler;
typedef void *CMPedometerEventHandler;
enum CNContactFormatterStyle {CNContactFormatterStyleFullName = 0x0,CNContactFormatterStylePhoneticFullName = 0x1,};
enum CPListItemAccessoryType {CPListItemAccessoryTypeNone = 0x0,CPListItemAccessoryTypeDisclosureIndicator = 0x1,CPListItemAccessoryTypeCloud = 0x2,};
enum ENCalibrationConfidence {ENCalibrationConfidenceLowest = 0x0,ENCalibrationConfidenceLow = 0x1,ENCalibrationConfidenceMedium = 0x2,ENCalibrationConfidenceHigh = 0x3,};
enum GCControllerPlayerIndex {GCControllerPlayerIndexUnset = 0xFFFFFFFFFFFFFFFF,GCControllerPlayerIndex1 = 0x0,GCControllerPlayerIndex2 = 0x1,GCControllerPlayerIndex3 = 0x2,GCControllerPlayerIndex4 = 0x3,};
enum GKPlayerConnectionState {GKPlayerStateUnknown = 0x0,GKPlayerStateConnected = 0x1,GKPlayerStateDisconnected = 0x2,};
enum GKTurnBasedMatchOutcome {GKTurnBasedMatchOutcomeNone = 0x0,GKTurnBasedMatchOutcomeQuit = 0x1,GKTurnBasedMatchOutcomeWon = 0x2,GKTurnBasedMatchOutcomeLost = 0x3,GKTurnBasedMatchOutcomeTied = 0x4,GKTurnBasedMatchOutcomeTimeExpired = 0x5,GKTurnBasedMatchOutcomeFirst = 0x6,GKTurnBasedMatchOutcomeSecond = 0x7,GKTurnBasedMatchOutcomeThird = 0x8,GKTurnBasedMatchOutcomeFourth = 0x9,GKTurnBasedMatchOutcomeCustomRange = 0xFF0000,};
enum GKVoiceChatServiceError {GKVoiceChatServiceInternalError = 0x7D00,GKVoiceChatServiceNoRemotePacketsError = 0x7D01,GKVoiceChatServiceUnableToConnectError = 0x7D02,GKVoiceChatServiceRemoteParticipantHangupError = 0x7D03,GKVoiceChatServiceInvalidCallIDError = 0x7D04,GKVoiceChatServiceAudioUnavailableError = 0x7D05,GKVoiceChatServiceUninitializedClientError = 0x7D06,GKVoiceChatServiceClientMissingRequiredMethodsError = 0x7D07,GKVoiceChatServiceRemoteParticipantBusyError = 0x7D08,GKVoiceChatServiceRemoteParticipantCancelledError = 0x7D09,GKVoiceChatServiceRemoteParticipantResponseInvalidError = 0x7D0A,GKVoiceChatServiceRemoteParticipantDeclinedInviteError = 0x7D0B,GKVoiceChatServiceMethodCurrentlyInvalidError = 0x7D0C,GKVoiceChatServiceNetworkConfigurationError = 0x7D0D,GKVoiceChatServiceUnsupportedRemoteVersionError = 0x7D0E,GKVoiceChatServiceOutOfMemoryError = 0x7D0F,GKVoiceChatServiceInvalidParameterError = 0x7D10,};
typedef GLKEffectPropertyPrv *GLKEffectPropertyPrvPtr;
enum HKCategoryValuePresence {HKCategoryValuePresencePresent = 0x0,HKCategoryValuePresenceNotPresent = 0x1,};
enum HKCategoryValueSeverity {HKCategoryValueSeverityUnspecified = 0x0,HKCategoryValueSeverityNotPresent = 0x1,HKCategoryValueSeverityMild = 0x2,HKCategoryValueSeverityModerate = 0x3,HKCategoryValueSeveritySevere = 0x4,};
enum HKElectrocardiogramLead {HKElectrocardiogramLeadAppleWatchSimilarToLeadI = 0x1,};
enum HKInsulinDeliveryReason {HKInsulinDeliveryReasonBasal = 0x1,HKInsulinDeliveryReasonBolus = 0x2,};
enum HMPresenceEventUserType {HMPresenceEventUserTypeCurrentUser = 0x1,HMPresenceEventUserTypeHomeUsers = 0x2,HMPresenceEventUserTypeCustomUsers = 0x3,};
enum ICReturnObjectErrorCode {ICReturnCodeObjectDoesNotExist = 0xFFFFFFFFFFFFAC36,ICReturnCodeObjectDataOffsetInvalid = 0xFFFFFFFFFFFFAC37,ICReturnCodeObjectCouldNotBeRead = 0xFFFFFFFFFFFFAC38,ICReturnCodeObjectDataEmpty = 0xFFFFFFFFFFFFAC39,ICReturnCodeObjectDataRequestTooLarge = 0xFFFFFFFFFFFFAC3A,};
enum INCarAirCirculationMode {INCarAirCirculationModeUnknown = 0x0,INCarAirCirculationModeFreshAir = 0x1,INCarAirCirculationModeRecirculateAir = 0x2,};
enum INDailyRoutineSituation {INDailyRoutineSituationMorning = 0x0,INDailyRoutineSituationEvening = 0x1,INDailyRoutineSituationHome = 0x2,INDailyRoutineSituationWork = 0x3,INDailyRoutineSituationSchool = 0x4,INDailyRoutineSituationGym = 0x5,INDailyRoutineSituationCommute = 0x6,INDailyRoutineSituationHeadphonesConnected = 0x7,INDailyRoutineSituationActiveWorkout = 0x8,INDailyRoutineSituationPhysicalActivityIncomplete = 0x9,};
enum INPlaybackQueueLocation {INPlaybackQueueLocationUnknown = 0x0,INPlaybackQueueLocationNow = 0x1,INPlaybackQueueLocationNext = 0x2,INPlaybackQueueLocationLater = 0x3,};
enum INReservationActionType {INReservationActionTypeUnknown = 0x0,INReservationActionTypeCheckIn = 0x1,};
enum INTicketedEventCategory {INTicketedEventCategoryUnknown = 0x0,INTicketedEventCategoryMovie = 0x1,};
enum INUIInteractiveBehavior {INUIInteractiveBehaviorNone = 0x0,INUIInteractiveBehaviorNextView = 0x1,INUIInteractiveBehaviorLaunch = 0x2,INUIInteractiveBehaviorGenericAction = 0x3,};
enum IOSurfaceComponentRange {kIOSurfaceComponentRangeUnknown = 0x0,kIOSurfaceComponentRangeFullRange = 0x1,kIOSurfaceComponentRangeVideoRange = 0x2,kIOSurfaceComponentRangeWideRange = 0x3,};
typedef KernOrderedListEntry *KernOrderedListEntryPtr;
typedef KerxOrderedListEntry *KerxOrderedListEntryPtr;
enum MACRO_EXCEPTION_DEFAULT {EXCEPTION_DEFAULT = 1,EXCEPTION_STATE = 2,EXCEPTION_STATE_IDENTITY = 3,};
enum MACRO_MACH_VOUCHER_ATTR {MACH_VOUCHER_ATTR_VALUE_MAX_NESTED = 4,MACH_VOUCHER_ATTR_VALUE_FLAGS_NONE = 0,MACH_VOUCHER_ATTR_VALUE_FLAGS_PERSIST = 1,MACH_VOUCHER_ATTR_CONTROL_FLAGS_NONE = 0,MACH_VOUCHER_IMPORTANCE_ATTR_ADD_EXTERNAL = 1,MACH_VOUCHER_IMPORTANCE_ATTR_DROP_EXTERNAL = 2,MACH_ACTIVITY_ID_COUNT_MAX = 16,};
enum MACRO_MAXTHREADNAMESIZE {MAXTHREADNAMESIZE = 64,};
enum MACRO_OBJC_GETCLASSHOOK {OBJC_GETCLASSHOOK_DEFINED = 1,OBJC_ADDLOADIMAGEFUNC_DEFINED = 1,OBJC_SETHOOK_LAZYCLASSNAMER_DEFINED = 1,OBJC_REALIZECLASSFROMSWIFT_DEFINED = 1,};
enum MACRO__POSIX2_CHARCLASS {_POSIX2_CHARCLASS_NAME_MAX = 14,_POSIX2_COLL_WEIGHTS_MAX = 2,};
enum MACRO_kABMultiValueMask {kABMultiValueMask = 256,};
enum MACRO_kLAErrorAppCancel {kLAErrorAppCancel = -9,};
enum MDLMaterialPropertyType {MDLMaterialPropertyTypeNone = 0x0,MDLMaterialPropertyTypeString = 0x1,MDLMaterialPropertyTypeURL = 0x2,MDLMaterialPropertyTypeTexture = 0x3,MDLMaterialPropertyTypeColor = 0x4,MDLMaterialPropertyTypeFloat = 0x5,MDLMaterialPropertyTypeFloat2 = 0x6,MDLMaterialPropertyTypeFloat3 = 0x7,MDLMaterialPropertyTypeFloat4 = 0x8,MDLMaterialPropertyTypeMatrix44 = 0x9,};
enum MPSIntersectionDataType {MPSIntersectionDataTypeDistance = 0x0,MPSIntersectionDataTypeDistancePrimitiveIndex = 0x1,MPSIntersectionDataTypeDistancePrimitiveIndexCoordinates = 0x2,MPSIntersectionDataTypeDistancePrimitiveIndexInstanceIndex = 0x3,MPSIntersectionDataTypeDistancePrimitiveIndexInstanceIndexCoordinates = 0x4,};
struct MPSIntersectionDistance {float distance;};
typedef NSArray MPSNNGradientStateBatch;
enum MPSNNRegularizationType {MPSNNRegularizationTypeNone = 0x0,MPSNNRegularizationTypeL1 = 0x1,MPSNNRegularizationTypeL2 = 0x2,};
enum MPSRNNSequenceDirection {MPSRNNSequenceDirectionForward = 0x0,MPSRNNSequenceDirectionBackward = 0x1,};
typedef  opaqueMTAudioProcessingTap *MTAudioProcessingTapRef;
typedef void *MTLCommandBufferHandler;
enum MTLCounterSamplingPoint {MTLCounterSamplingPointAtStageBoundary = 0x0,MTLCounterSamplingPointAtDrawBoundary = 0x1,MTLCounterSamplingPointAtDispatchBoundary = 0x2,MTLCounterSamplingPointAtTileDispatchBoundary = 0x3,MTLCounterSamplingPointAtBlitBoundary = 0x4,};
enum MTLReadWriteTextureTier {MTLReadWriteTextureTierNone = 0x0,MTLReadWriteTextureTier1 = 0x1,MTLReadWriteTextureTier2 = 0x2,};
enum MTLVisibilityResultMode {MTLVisibilityResultModeDisabled = 0x0,MTLVisibilityResultModeBoolean = 0x1,MTLVisibilityResultModeCounting = 0x2,};
enum MusicSequenceFileTypeID {kMusicSequenceFile_AnyType = 0x0,kMusicSequenceFile_MIDIType = 0x6D696469,kMusicSequenceFile_iMelodyType = 0x696D656C,};
enum NEFilterReportFrequency {NEFilterReportFrequencyNone = 0x0,NEFilterReportFrequencyLow = 0x1,NEFilterReportFrequencyMedium = 0x2,NEFilterReportFrequencyHigh = 0x3,};
enum NSCompoundPredicateType {NSNotPredicateType = 0x0,NSAndPredicateType = 0x1,NSOrPredicateType = 0x2,};
enum NSDateFormatterBehavior {NSDateFormatterBehaviorDefault = 0x0,NSDateFormatterBehavior10_4 = 0x410,};
enum NSDecodingFailurePolicy {NSDecodingFailurePolicyRaiseException = 0x0,NSDecodingFailurePolicySetErrorAndReturn = 0x1,};
enum NSFetchIndexElementType {NSFetchIndexElementTypeBinary = 0x0,NSFetchIndexElementTypeRTree = 0x1,};
enum NSFileProviderErrorCode {NSFileProviderErrorNotAuthenticated = 0xFFFFFFFFFFFFFC18,NSFileProviderErrorFilenameCollision = 0xFFFFFFFFFFFFFC17,NSFileProviderErrorSyncAnchorExpired = 0xFFFFFFFFFFFFFC16,NSFileProviderErrorPageExpired = 0xFFFFFFFFFFFFFC16,NSFileProviderErrorInsufficientQuota = 0xFFFFFFFFFFFFFC15,NSFileProviderErrorServerUnreachable = 0xFFFFFFFFFFFFFC14,NSFileProviderErrorNoSuchItem = 0xFFFFFFFFFFFFFC13,};
enum NSItemProviderErrorCode {NSItemProviderUnknownError = 0xFFFFFFFFFFFFFFFF,NSItemProviderItemUnavailableError = 0xFFFFFFFFFFFFFC18,NSItemProviderUnexpectedValueClassError = 0xFFFFFFFFFFFFFBB4,NSItemProviderUnavailableCoercionError = 0xFFFFFFFFFFFFFB50,};
enum NSPredicateOperatorType {NSLessThanPredicateOperatorType = 0x0,NSLessThanOrEqualToPredicateOperatorType = 0x1,NSGreaterThanPredicateOperatorType = 0x2,NSGreaterThanOrEqualToPredicateOperatorType = 0x3,NSEqualToPredicateOperatorType = 0x4,NSNotEqualToPredicateOperatorType = 0x5,NSMatchesPredicateOperatorType = 0x6,NSLikePredicateOperatorType = 0x7,NSBeginsWithPredicateOperatorType = 0x8,NSEndsWithPredicateOperatorType = 0x9,NSInPredicateOperatorType = 0xA,NSCustomSelectorPredicateOperatorType = 0xB,NSContainsPredicateOperatorType = 0x63,NSBetweenPredicateOperatorType = 0x64,};
enum NSTextLayoutOrientation {NSTextLayoutOrientationHorizontal = 0x0,NSTextLayoutOrientationVertical = 0x1,};
enum NSURLCacheStoragePolicy {NSURLCacheStorageAllowed = 0x0,NSURLCacheStorageAllowedInMemoryOnly = 0x1,NSURLCacheStorageNotAllowed = 0x2,};
struct NSURLConnectionInternal;
struct NSURLCredentialInternal;
enum NSURLRequestCachePolicy {NSURLRequestUseProtocolCachePolicy = 0x0,NSURLRequestReloadIgnoringLocalCacheData = 0x1,NSURLRequestReloadIgnoringLocalAndRemoteCacheData = 0x4,NSURLRequestReloadIgnoringCacheData = 0x1,NSURLRequestReturnCacheDataElseLoad = 0x2,NSURLRequestReturnCacheDataDontLoad = 0x3,NSURLRequestReloadRevalidatingCacheData = 0x5,};
enum OSLogEntryStoreCategory {OSLogEntryStoreCategoryUndefined = 0x0,OSLogEntryStoreCategoryMetadata = 0x1,OSLogEntryStoreCategoryShortTerm = 0x2,OSLogEntryStoreCategoryLongTermAuto = 0x3,OSLogEntryStoreCategoryLongTerm1 = 0x4,OSLogEntryStoreCategoryLongTerm3 = 0x5,OSLogEntryStoreCategoryLongTerm7 = 0x6,OSLogEntryStoreCategoryLongTerm14 = 0x7,OSLogEntryStoreCategoryLongTerm30 = 0x8,};
struct OpaqueAudioFileStreamID;
struct PDFActionURLPrivateVars;
enum PDFInterpolationQuality {kPDFInterpolationQualityNone = 0x0,kPDFInterpolationQualityLow = 0x1,kPDFInterpolationQualityHigh = 0x2,};
struct PDFThumbnailViewPrivate;
enum PHCollectionListSubtype {PHCollectionListSubtypeMomentListCluster = 0x1,PHCollectionListSubtypeMomentListYear = 0x2,PHCollectionListSubtypeRegularFolder = 0x64,PHCollectionListSubtypeSmartFolderEvents = 0xC8,PHCollectionListSubtypeSmartFolderFaces = 0xC9,PHCollectionListSubtypeAny = 0x7FFFFFFFFFFFFFFF,};
typedef void *SCNActionTimingFunction;
enum SCNLightProbeUpdateType {SCNLightProbeUpdateTypeNever = 0x0,SCNLightProbeUpdateTypeRealtime = 0x1,};
typedef SecKeychainAttribute *SecKeychainAttributePtr;
enum SparseIterativeStatus_t {SparseIterativeConverged = 0x0,SparseIterativeMaxIterations = 0x1,SparseIterativeParameterError = 0xFFFFFFFF,SparseIterativeIllConditioned = 0xFFFFFFFE,SparseIterativeInternalError = 0xFFFFFF9D,};
enum UIAccessibilityContrast {UIAccessibilityContrastUnspecified = 0xFFFFFFFFFFFFFFFF,UIAccessibilityContrastNormal = 0x0,UIAccessibilityContrastHigh = 0x1,};
enum UIAccessibilityZoomType {UIAccessibilityZoomTypeInsertionPoint = 0x0,};
enum UIBackgroundFetchResult {UIBackgroundFetchResultNewData = 0x0,UIBackgroundFetchResultNoData = 0x1,UIBackgroundFetchResultFailed = 0x2,};
typedef void *UICellAccessoryPosition;
enum UIContextualActionStyle {UIContextualActionStyleNormal = 0x0,UIContextualActionStyleDestructive = 0x1,};
enum UIDocumentSaveOperation {UIDocumentSaveForCreating = 0x0,UIDocumentSaveForOverwriting = 0x1,};
enum UIGuidedAccessErrorCode {UIGuidedAccessErrorPermissionDenied = 0x0,UIGuidedAccessErrorFailed = 0x7FFFFFFFFFFFFFFF,};
enum UIPencilPreferredAction {UIPencilPreferredActionIgnore = 0x0,UIPencilPreferredActionSwitchEraser = 0x1,UIPencilPreferredActionSwitchPrevious = 0x2,UIPencilPreferredActionShowColorPalette = 0x3,};
enum UIPointerEffectTintMode {UIPointerEffectTintModeNone = 0x0,UIPointerEffectTintModeOverlay = 0x1,UIPointerEffectTintModeUnderlay = 0x2,};
enum UIPrinterCutterBehavior {UIPrinterCutterBehaviorNoCut = 0x0,UIPrinterCutterBehaviorPrinterDefault = 0x1,UIPrinterCutterBehaviorCutAfterEachPage = 0x2,UIPrinterCutterBehaviorCutAfterEachCopy = 0x3,UIPrinterCutterBehaviorCutAfterEachJob = 0x4,};
enum UISegmentedControlStyle {UISegmentedControlStylePlain = 0x0,UISegmentedControlStyleBordered = 0x1,UISegmentedControlStyleBar = 0x2,UISegmentedControlStyleBezeled = 0x3,};
enum UIStackViewDistribution {UIStackViewDistributionFill = 0x0,UIStackViewDistributionFillEqually = 0x1,UIStackViewDistributionFillProportionally = 0x2,UIStackViewDistributionEqualSpacing = 0x3,UIStackViewDistributionEqualCentering = 0x4,};
enum UITabBarItemPositioning {UITabBarItemPositioningAutomatic = 0x0,UITabBarItemPositioningFill = 0x1,UITabBarItemPositioningCentered = 0x2,};
enum UITableViewRowAnimation {UITableViewRowAnimationFade = 0x0,UITableViewRowAnimationRight = 0x1,UITableViewRowAnimationLeft = 0x2,UITableViewRowAnimationTop = 0x3,UITableViewRowAnimationBottom = 0x4,UITableViewRowAnimationNone = 0x5,UITableViewRowAnimationMiddle = 0x6,UITableViewRowAnimationAutomatic = 0x64,};
enum UITextSpellCheckingType {UITextSpellCheckingTypeDefault = 0x0,UITextSpellCheckingTypeNo = 0x1,UITextSpellCheckingTypeYes = 0x2,};
enum UIViewAnimatingPosition {UIViewAnimatingPositionEnd = 0x0,UIViewAnimatingPositionStart = 0x1,UIViewAnimatingPositionCurrent = 0x2,};
enum UIWebViewNavigationType {UIWebViewNavigationTypeLinkClicked = 0x0,UIWebViewNavigationTypeFormSubmitted = 0x1,UIWebViewNavigationTypeBackForward = 0x2,UIWebViewNavigationTypeReload = 0x3,UIWebViewNavigationTypeFormResubmitted = 0x4,UIWebViewNavigationTypeOther = 0x5,};
typedef OpaqueVTCompressionSession *VTCompressionSessionRef;
struct __SCNetworkReachability;
struct __SecTrustedApplication;
typedef _opaque_pthread_attr_t __darwin_pthread_attr_t;
typedef _opaque_pthread_cond_t __darwin_pthread_cond_t;
typedef _opaque_pthread_once_t __darwin_pthread_once_t;
struct _opaque_pthread_mutex_t {long long __sig;char __opaque[56];};
struct _xmlSchemaAttributeLink {_xmlSchemaAttributeLink *next;_xmlSchemaAttribute *attr;};
struct _xmlSchematronValidCtxt;
typedef __darwin_arm_exception_state arm_exception_state32_t;
typedef __darwin_arm_exception_state64 arm_exception_state64_t;
typedef char (*cache_key_is_equal_cb_t)(void *, void *, void *);
typedef void (*cache_value_retain_cb_t)(void *, void *);
typedef void *dispatch_data_applier_t;
typedef NSObject *dispatch_queue_global_t;
typedef NSObject *dispatch_queue_serial_t;
typedef void (*fts5_extension_function)( Fts5ExtensionApi *, Fts5Context *, sqlite3_context *, int, sqlite3_value **);
typedef void (*iconv_unicode_char_hook)(unsigned int, void *);
typedef kernel_resource_sizes *kernel_resource_sizes_t;
typedef unsigned int mach_msg_copy_options_t;
typedef char *mach_msg_trailer_info_t;
typedef unsigned int mach_msg_trailer_size_t;
typedef unsigned int mach_msg_trailer_type_t;
typedef void *nw_txt_record_applier_t;
enum nw_ws_response_status_t {nw_ws_response_status_invalid = 0x0,nw_ws_response_status_accept = 0x1,nw_ws_response_status_reject = 0x2,};
typedef OS_os_workgroup *os_workgroup_interval_t;
typedef struct os_workgroup_max_parallel_threads_attr_s os_workgroup_mpt_attr_s;
typedef os_workgroup_max_parallel_threads_attr_s *os_workgroup_mpt_attr_t;
typedef OS_os_workgroup *os_workgroup_parallel_t;
typedef policy_fifo_base policy_fifo_base_data_t;
typedef policy_fifo_info policy_fifo_info_data_t;
typedef policy_timeshare_base *policy_timeshare_base_t;
typedef policy_timeshare_info *policy_timeshare_info_t;
struct processor_cpu_load_info {unsigned int cpu_ticks[4];};
struct res_9_ns_tcp_tsig_state {int counter;dst_key *key;void *ctx;unsigned char sig[512];int siglen;};
typedef NSObject *sec_protocol_metadata_t;
typedef void (*sqlite3_destructor_type)(void *);
struct sqlite3_pcache_methods2 {int iVersion;void *pArg;int (*xInit)(void *);void (*xShutdown)(void *);sqlite3_pcache *(*xCreate)(int, int, int);void (*xCachesize)(sqlite3_pcache *, int);int (*xPagecount)(sqlite3_pcache *);sqlite3_pcache_page *(*xFetch)(sqlite3_pcache *, unsigned int, int);void (*xUnpin)(sqlite3_pcache *, sqlite3_pcache_page *, int);void (*xRekey)(sqlite3_pcache *, sqlite3_pcache_page *, unsigned int, unsigned int);void (*xTruncate)(sqlite3_pcache *, unsigned int);void (*xDestroy)(sqlite3_pcache *);void (*xShrink)(sqlite3_pcache *);};
struct std____1____get_pair_0_ {};
struct std____1____get_pair_1_ {};
typedef std____1__atomic_signed_char_ std____1__atomic_int8_t;
typedef std____1__atomic_unsigned_long_ std____1__atomic_size_t;
typedef std____1__atomic_unsigned_long_long_ std____1__atomic_ullong;
typedef std____1__atomic_unsigned_short_ std____1__atomic_ushort;
struct std____1__bit_and_void_ {};
struct std____1__bit_not_void_ {};
struct std____1__bit_xor_void_ {};
typedef std____1__chrono__duration_long__std__ratio_3600__1__ std____1__chrono__hours;
struct std____1__collate_char_ {};
struct std____1__divides_void_ {};
struct std____1__greater_void_ {};
struct std____1__ios_base_vtbl; 
typedef std____1__basic_istringstream_char_ std____1__istringstream;
struct std____1__locale____imp;
struct std____1__messages_base {};
struct std____1__modulus_void_ {};
struct std____1__num_get_char_ {};
struct std____1__num_put_char_ {};
typedef std____1__basic_ostringstream_char_ std____1__ostringstream;
struct std____1__ratio_1__100_ {};
struct std____1__ratio_100__1_ {};
struct std____1__try_to_lock_t {};
typedef std____1__basic_stringstream_wchar_t_ std____1__wstringstream;
struct std__bad_exception_vtbl; 
struct std__runtime_error_vtbl; 
typedef void (*std__unexpected_handler)(void);
typedef task_events_info task_events_info_data_t;
typedef task_extmod_info task_extmod_info_data_t;
enum tls_ciphersuite_group_t {tls_ciphersuite_group_default = 0x0,tls_ciphersuite_group_compatibility = 0x1,tls_ciphersuite_group_legacy = 0x2,tls_ciphersuite_group_ats = 0x3,tls_ciphersuite_group_ats_compatibility = 0x4,};
struct vDSP_biquad_SetupStruct;
typedef vm_region_submap_info *vm_region_submap_info_t;
typedef vol_capabilities_attr vol_capabilities_attr_t;
typedef _xmlSchemaAttributeGroup xmlSchemaAttributeGroup;
typedef struct _xmlSchematronParserCtxt xmlSchematronParserCtxt;
typedef void *xmlTextReaderLocatorPtr;
typedef void (*AAByteStreamCancelProc)(void *);
enum AREnvironmentTexturing {AREnvironmentTexturingNone = 0x0,AREnvironmentTexturingManual = 0x1,AREnvironmentTexturingAutomatic = 0x2,};
enum ARPlaneAnchorAlignment {ARPlaneAnchorAlignmentHorizontal = 0x0,ARPlaneAnchorAlignmentVertical = 0x1,};
typedef void *AUMIDIOutputEventBlock;
typedef void *AURenderPullInputBlock;
struct AVCaptureInputInternal;
struct AVCapturePhotoInternal;
struct AVMetadataItemInternal;
struct AVMutableMovieInternal;
struct AVPlayerLooperInternal;
typedef OpaqueAudioComponentInstance *AudioComponentInstance;
enum AudioUnitParameterUnit {kAudioUnitParameterUnit_Generic = 0x0,kAudioUnitParameterUnit_Indexed = 0x1,kAudioUnitParameterUnit_Boolean = 0x2,kAudioUnitParameterUnit_Percent = 0x3,kAudioUnitParameterUnit_Seconds = 0x4,kAudioUnitParameterUnit_SampleFrames = 0x5,kAudioUnitParameterUnit_Phase = 0x6,kAudioUnitParameterUnit_Rate = 0x7,kAudioUnitParameterUnit_Hertz = 0x8,kAudioUnitParameterUnit_Cents = 0x9,kAudioUnitParameterUnit_RelativeSemiTones = 0xA,kAudioUnitParameterUnit_MIDINoteNumber = 0xB,kAudioUnitParameterUnit_MIDIController = 0xC,kAudioUnitParameterUnit_Decibels = 0xD,kAudioUnitParameterUnit_LinearGain = 0xE,kAudioUnitParameterUnit_Degrees = 0xF,kAudioUnitParameterUnit_EqualPowerCrossfade = 0x10,kAudioUnitParameterUnit_MixerFaderCurve1 = 0x11,kAudioUnitParameterUnit_Pan = 0x12,kAudioUnitParameterUnit_Meters = 0x13,kAudioUnitParameterUnit_AbsoluteCents = 0x14,kAudioUnitParameterUnit_Octaves = 0x15,kAudioUnitParameterUnit_BPM = 0x16,kAudioUnitParameterUnit_Beats = 0x17,kAudioUnitParameterUnit_Milliseconds = 0x18,kAudioUnitParameterUnit_Ratio = 0x19,kAudioUnitParameterUnit_CustomUnit = 0x1A,};
struct AuthorizationOpaqueRef;
enum BNNSActivationFunction {BNNSActivationFunctionIdentity = 0x0,BNNSActivationFunctionRectifiedLinear = 0x1,BNNSActivationFunctionLeakyRectifiedLinear = 0x2,BNNSActivationFunctionSigmoid = 0x3,BNNSActivationFunctionTanh = 0x4,BNNSActivationFunctionScaledTanh = 0x5,BNNSActivationFunctionAbs = 0x6,BNNSActivationFunctionLinear = 0x7,BNNSActivationFunctionClamp = 0x8,BNNSActivationFunctionIntegerLinearSaturate = 0x9,BNNSActivationFunctionIntegerLinearSaturatePerChannel = 0xA,BNNSActivationFunctionSoftmax = 0xB,BNNSActivationFunctionGELUApproximation = 0xC,BNNSActivationFunctionGumbel = 0xD,BNNSActivationFunctionGumbelMax = 0xE,BNNSActivationFunctionHardSigmoid = 0xF,BNNSActivationFunctionSoftplus = 0x10,BNNSActivationFunctionSoftsign = 0x11,BNNSActivationFunctionELU = 0x12,BNNSActivationFunctionClampedLeakyRectifiedLinear = 0x13,BNNSActivationFunctionLinearWithBias = 0x14,BNNSActivationFunctionLogSoftmax = 0x15,BNNSActivationFunctionLogSigmoid = 0x16,BNNSActivationFunctionSELU = 0x17,BNNSActivationFunctionCELU = 0x18,BNNSActivationFunctionHardShrink = 0x19,BNNSActivationFunctionSoftShrink = 0x1A,BNNSActivationFunctionTanhShrink = 0x1B,BNNSActivationFunctionThreshold = 0x1C,BNNSActivationFunctionPReLUPerChannel = 0x1D,BNNSActivationFunctionGELUApproximation2 = 0x1E,};
enum BNNSArithmeticFunction {BNNSArithmeticAdd = 0x0,BNNSArithmeticSubtract = 0x1,BNNSArithmeticMultiply = 0x2,BNNSArithmeticDivide = 0x3,BNNSArithmeticSquareRoot = 0x4,BNNSArithmeticReciprocalSquareRoot = 0x5,BNNSArithmeticCeil = 0x6,BNNSArithmeticFloor = 0x7,BNNSArithmeticRound = 0x8,BNNSArithmeticSin = 0x9,BNNSArithmeticCos = 0xA,BNNSArithmeticTan = 0xB,BNNSArithmeticAsin = 0xC,BNNSArithmeticAcos = 0xD,BNNSArithmeticAtan = 0xE,BNNSArithmeticSinh = 0xF,BNNSArithmeticCosh = 0x10,BNNSArithmeticTanh = 0x11,BNNSArithmeticAsinh = 0x12,BNNSArithmeticAcosh = 0x13,BNNSArithmeticAtanh = 0x14,BNNSArithmeticPow = 0x15,BNNSArithmeticExp = 0x16,BNNSArithmeticExp2 = 0x17,BNNSArithmeticLog = 0x18,BNNSArithmeticLog2 = 0x19,BNNSArithmeticMultiplyNoNaN = 0x1A,BNNSArithmeticDivideNoNaN = 0x1B,};
enum BNNSRelationalOperator {BNNSRelationalOperatorEqual = 0x0,BNNSRelationalOperatorLess = 0x1,BNNSRelationalOperatorLessEqual = 0x2,BNNSRelationalOperatorGreater = 0x3,BNNSRelationalOperatorGreaterEqual = 0x4,BNNSRelationalOperatorNotEqual = 0x5,BNNSRelationalOperatorLogicalAND = 0x6,BNNSRelationalOperatorLogicalOR = 0x7,BNNSRelationalOperatorLogicalNOT = 0x8,BNNSRelationalOperatorLogicalNAND = 0x9,BNNSRelationalOperatorLogicalNOR = 0xA,BNNSRelationalOperatorLogicalXOR = 0xB,};
struct BigEndianUnsignedShort {unsigned short bigEndianValue;};
typedef unsigned int CAEdgeAntialiasingMask;
enum CBManagerAuthorization {CBManagerAuthorizationNotDetermined = 0x0,CBManagerAuthorizationRestricted = 0x1,CBManagerAuthorizationDenied = 0x2,CBManagerAuthorizationAllowedAlways = 0x3,};
typedef void (*CFArrayApplierFunction)( void *, void *);
typedef __CFDictionary *CFMutableDictionaryRef;
typedef __CFNetServiceBrowser *CFNetServiceBrowserRef;
typedef __CFNetServiceMonitor *CFNetServiceMonitorRef;
enum CFNumberFormatterStyle {kCFNumberFormatterNoStyle = 0x0,kCFNumberFormatterDecimalStyle = 0x1,kCFNumberFormatterCurrencyStyle = 0x2,kCFNumberFormatterPercentStyle = 0x3,kCFNumberFormatterScientificStyle = 0x4,kCFNumberFormatterSpellOutStyle = 0x5,kCFNumberFormatterOrdinalStyle = 0x6,kCFNumberFormatterCurrencyISOCodeStyle = 0x8,kCFNumberFormatterCurrencyPluralStyle = 0x9,kCFNumberFormatterCurrencyAccountingStyle = 0xA,};
enum CGColorRenderingIntent {kCGRenderingIntentDefault = 0x0,kCGRenderingIntentAbsoluteColorimetric = 0x1,kCGRenderingIntentRelativeColorimetric = 0x2,kCGRenderingIntentPerceptual = 0x3,kCGRenderingIntentSaturation = 0x4,};
enum CGFontPostScriptFormat {kCGFontPostScriptFormatType1 = 0x1,kCGFontPostScriptFormatType3 = 0x3,kCGFontPostScriptFormatType42 = 0x2A,};
enum CGImageAnimationStatus {kCGImageAnimationStatus_ParameterError = 0xFFFFA984,kCGImageAnimationStatus_CorruptInputImage = 0xFFFFA983,kCGImageAnimationStatus_UnsupportedFormat = 0xFFFFA982,kCGImageAnimationStatus_IncompleteInputImage = 0xFFFFA981,kCGImageAnimationStatus_AllocationFailure = 0xFFFFA980,};
enum CGImagePixelFormatInfo {kCGImagePixelFormatMask = 0xF0000,kCGImagePixelFormatPacked = 0x0,kCGImagePixelFormatRGB555 = 0x10000,kCGImagePixelFormatRGB565 = 0x20000,kCGImagePixelFormatRGB101010 = 0x30000,kCGImagePixelFormatRGBCIF10 = 0x40000,};
enum CGInterpolationQuality {kCGInterpolationDefault = 0x0,kCGInterpolationNone = 0x1,kCGInterpolationLow = 0x2,kCGInterpolationMedium = 0x4,kCGInterpolationHigh = 0x3,};
typedef void *CGPDFArrayApplierBlock;
enum CKShareParticipantRole {CKShareParticipantRoleUnknown = 0x0,CKShareParticipantRoleOwner = 0x1,CKShareParticipantRolePrivateUser = 0x3,CKShareParticipantRolePublicUser = 0x4,};
enum CKShareParticipantType {CKShareParticipantTypeUnknown = 0x0,CKShareParticipantTypeOwner = 0x1,CKShareParticipantTypePrivateUser = 0x3,CKShareParticipantTypePublicUser = 0x4,};
typedef void *CMAccelerometerHandler;
typedef void *CMBufferCompareHandler;
typedef void *CMBufferGetSizeHandler;
typedef void *CMBufferGetTimeHandler;
typedef  opaqueCMFormatDescription *CMFormatDescriptionRef;
enum CSSearchQueryErrorCode {CSSearchQueryErrorCodeUnknown = 0xFFFFFFFFFFFFF830,CSSearchQueryErrorCodeIndexUnreachable = 0xFFFFFFFFFFFFF82F,CSSearchQueryErrorCodeInvalidQuery = 0xFFFFFFFFFFFFF82E,CSSearchQueryErrorCodeCancelled = 0xFFFFFFFFFFFFF82D,};
typedef __CVMetalTextureCache *CVMetalTextureCacheRef;
enum FPUIExtensionErrorCode {FPUIExtensionErrorCodeUserCancelled = 0x0,FPUIExtensionErrorCodeFailed = 0x1,};
enum GKGameSessionErrorCode {GKGameSessionErrorUnknown = 0x1,GKGameSessionErrorNotAuthenticated = 0x2,GKGameSessionErrorSessionConflict = 0x3,GKGameSessionErrorSessionNotShared = 0x4,GKGameSessionErrorConnectionCancelledByUser = 0x5,GKGameSessionErrorConnectionFailed = 0x6,GKGameSessionErrorSessionHasMaxConnectedPlayers = 0x7,GKGameSessionErrorSendDataNotConnected = 0x8,GKGameSessionErrorSendDataNoRecipients = 0x9,GKGameSessionErrorSendDataNotReachable = 0xA,GKGameSessionErrorSendRateLimitReached = 0xB,GKGameSessionErrorBadContainer = 0xC,GKGameSessionErrorCloudQuotaExceeded = 0xD,GKGameSessionErrorNetworkFailure = 0xE,GKGameSessionErrorCloudDriveDisabled = 0xF,GKGameSessionErrorInvalidSession = 0x10,};
enum GKLeaderboardTimeScope {GKLeaderboardTimeScopeToday = 0x0,GKLeaderboardTimeScopeWeek = 0x1,GKLeaderboardTimeScopeAllTime = 0x2,};
struct GKThreadsafeDictionary;
enum GKTurnBasedMatchStatus {GKTurnBasedMatchStatusUnknown = 0x0,GKTurnBasedMatchStatusOpen = 0x1,GKTurnBasedMatchStatusEnded = 0x2,GKTurnBasedMatchStatusMatching = 0x3,};
enum GKVoiceChatPlayerState {GKVoiceChatPlayerConnected = 0x0,GKVoiceChatPlayerDisconnected = 0x1,GKVoiceChatPlayerSpeaking = 0x2,GKVoiceChatPlayerSilent = 0x3,GKVoiceChatPlayerConnecting = 0x4,};
enum HKBloodGlucoseMealTime {HKBloodGlucoseMealTimePreprandial = 0x1,HKBloodGlucoseMealTimePostprandial = 0x2,};
enum ICScannerPixelDataType {ICScannerPixelDataTypeBW = 0x0,ICScannerPixelDataTypeGray = 0x1,ICScannerPixelDataTypeRGB = 0x2,ICScannerPixelDataTypePalette = 0x3,ICScannerPixelDataTypeCMY = 0x4,ICScannerPixelDataTypeCMYK = 0x5,ICScannerPixelDataTypeYUV = 0x6,ICScannerPixelDataTypeYUVK = 0x7,ICScannerPixelDataTypeCIEXYZ = 0x8,};
enum INIntentHandlingStatus {INIntentHandlingStatusUnspecified = 0x0,INIntentHandlingStatusReady = 0x1,INIntentHandlingStatusInProgress = 0x2,INIntentHandlingStatusSuccess = 0x3,INIntentHandlingStatusFailure = 0x4,INIntentHandlingStatusDeferredToApplication = 0x5,INIntentHandlingStatusUserConfirmationRequired = 0x6,};
enum INInteractionDirection {INInteractionDirectionUnspecified = 0x0,INInteractionDirectionOutgoing = 0x1,INInteractionDirectionIncoming = 0x2,};
enum INMediaDestinationType {INMediaDestinationTypeUnknown = 0x0,INMediaDestinationTypeLibrary = 0x1,INMediaDestinationTypePlaylist = 0x2,};
enum INPersonSuggestionType {INPersonSuggestionTypeNone = 0x0,INPersonSuggestionTypeSocialProfile = 0x1,INPersonSuggestionTypeInstantMessageAddress = 0x2,};
enum INRelevantShortcutRole {INRelevantShortcutRoleAction = 0x0,INRelevantShortcutRoleInformation = 0x1,};
enum INVocabularyStringType {INVocabularyStringTypeContactName = 0x1,INVocabularyStringTypeContactGroupName = 0x2,INVocabularyStringTypePhotoTag = 0x64,INVocabularyStringTypePhotoAlbumName = 0x65,INVocabularyStringTypeWorkoutActivityName = 0xC8,INVocabularyStringTypeCarProfileName = 0x12C,INVocabularyStringTypeCarName = 0x12D,INVocabularyStringTypePaymentsOrganizationName = 0x190,INVocabularyStringTypePaymentsAccountNickname = 0x191,INVocabularyStringTypeNotebookItemTitle = 0x1F4,INVocabularyStringTypeNotebookItemGroupName = 0x1F5,INVocabularyStringTypeMediaPlaylistTitle = 0x2BC,INVocabularyStringTypeMediaMusicArtistName = 0x2BD,INVocabularyStringTypeMediaAudiobookTitle = 0x2BE,INVocabularyStringTypeMediaAudiobookAuthorName = 0x2BF,INVocabularyStringTypeMediaShowTitle = 0x2C0,};
enum IOSurfaceComponentName {kIOSurfaceComponentNameUnknown = 0x0,kIOSurfaceComponentNameAlpha = 0x1,kIOSurfaceComponentNameRed = 0x2,kIOSurfaceComponentNameGreen = 0x3,kIOSurfaceComponentNameBlue = 0x4,kIOSurfaceComponentNameLuma = 0x5,kIOSurfaceComponentNameChromaRed = 0x6,kIOSurfaceComponentNameChromaBlue = 0x7,};
enum IOSurfaceComponentType {kIOSurfaceComponentTypeUnknown = 0x0,kIOSurfaceComponentTypeUnsignedInteger = 0x1,kIOSurfaceComponentTypeSignedInteger = 0x2,kIOSurfaceComponentTypeFloat = 0x3,};
typedef OpaqueJSPropertyNameArray *JSPropertyNameArrayRef;
enum MACRO_F_ALLOCATECONTIG {F_ALLOCATECONTIG = 0x2,F_ALLOCATEALL = 0x4,F_PEOFPOSMODE = 0x3,F_VOLPOSMODE = 0x4,};
enum MACRO_ICMP6_MEMBERSHIP {ICMP6_MEMBERSHIP_QUERY = 130,ICMP6_MEMBERSHIP_REPORT = 131,ICMP6_MEMBERSHIP_REDUCTION = 132,};
enum MACRO_IPC_VOUCHER_ATTR {IPC_VOUCHER_ATTR_MANAGER_NULL = 0,IPC_VOUCHER_ATTR_CONTROL_NULL = 0,};
enum MACRO_IPV6_2292PKTINFO {IPV6_2292PKTINFO = 19,IPV6_2292HOPLIMIT = 20,IPV6_2292NEXTHOP = 21,IPV6_2292HOPOPTS = 22,IPV6_2292DSTOPTS = 23,IPV6_2292RTHDR = 24,IPV6_2292PKTOPTIONS = 25,IPV6_CHECKSUM = 26,IPV6_V6ONLY = 27,IPV6_IPSEC_POLICY = 28,IPV6_FAITH = 29,IPV6_FW_ADD = 30,IPV6_FW_DEL = 31,IPV6_FW_FLUSH = 32,IPV6_FW_ZERO = 33,IPV6_FW_GET = 34,IPV6_RECVTCLASS = 35,IPV6_TCLASS = 36,IPV6_BOUND_IF = 125,IPV6_RTHDR_LOOSE = 0,IPV6_RTHDR_STRICT = 1,IPV6_RTHDR_TYPE_0 = 0,IPV6_DEFAULT_MULTICAST_HOPS = 1,IPV6_DEFAULT_MULTICAST_LOOP = 1,IPV6_MIN_MEMBERSHIPS = 31,IPV6_MAX_MEMBERSHIPS = 4095,IPV6_MAX_GROUP_SRC_FILTER = 512,IPV6_MAX_SOCK_SRC_FILTER = 128,IPV6_PORTRANGE_DEFAULT = 0,IPV6_PORTRANGE_HIGH = 1,IPV6_PORTRANGE_LOW = 2,};
enum MACRO_LOCALDOMAINPARTS {LOCALDOMAINPARTS = 2,};
enum MACRO_NSDecimalMaxSize {NSDecimalMaxSize = 8,};
enum MACRO_TCPOLEN_FASTOPEN {TCPOLEN_FASTOPEN_REQ = 2,};
enum MACRO_USER_FSIGNATURES {USER_FSIGNATURES_CDHASH_LEN = 20,};
enum MACRO___COREFOUNDATION {__COREFOUNDATION__ = 1,};
enum MACRO___MigPackStructs {__MigPackStructs = 1,};
enum MCEncryptionPreference {MCEncryptionOptional = 0x0,MCEncryptionRequired = 0x1,MCEncryptionNone = 0x2,};
enum MFMailComposeErrorCode {MFMailComposeErrorCodeSaveFailed = 0x0,MFMailComposeErrorCodeSendFailed = 0x1,};
typedef NSArray MIDICIProfileStateList;
struct MKUserLocationInternal;
enum MLCArithmeticOperation {MLCArithmeticOperationAdd = 0x0,MLCArithmeticOperationSubtract = 0x1,MLCArithmeticOperationMultiply = 0x2,MLCArithmeticOperationDivide = 0x3,MLCArithmeticOperationFloor = 0x4,MLCArithmeticOperationRound = 0x5,MLCArithmeticOperationCeil = 0x6,MLCArithmeticOperationSqrt = 0x7,MLCArithmeticOperationRsqrt = 0x8,MLCArithmeticOperationSin = 0x9,MLCArithmeticOperationCos = 0xA,MLCArithmeticOperationTan = 0xB,MLCArithmeticOperationAsin = 0xC,MLCArithmeticOperationAcos = 0xD,MLCArithmeticOperationAtan = 0xE,MLCArithmeticOperationSinh = 0xF,MLCArithmeticOperationCosh = 0x10,MLCArithmeticOperationTanh = 0x11,MLCArithmeticOperationAsinh = 0x12,MLCArithmeticOperationAcosh = 0x13,MLCArithmeticOperationAtanh = 0x14,MLCArithmeticOperationPow = 0x15,MLCArithmeticOperationExp = 0x16,MLCArithmeticOperationExp2 = 0x17,MLCArithmeticOperationLog = 0x18,MLCArithmeticOperationLog2 = 0x19,MLCArithmeticOperationCount = 0x1A,};
enum MPSCNNConvolutionFlags {MPSCNNConvolutionFlagsNone = 0x0,};
enum MPSeekCommandEventType {MPSeekCommandEventTypeBeginSeeking = 0x0,MPSeekCommandEventTypeEndSeeking = 0x1,};
enum MTLArgumentBuffersTier {MTLArgumentBuffersTier1 = 0x0,MTLArgumentBuffersTier2 = 0x1,};
enum MTLCommandBufferStatus {MTLCommandBufferStatusNotEnqueued = 0x0,MTLCommandBufferStatusEnqueued = 0x1,MTLCommandBufferStatusCommitted = 0x2,MTLCommandBufferStatusScheduled = 0x3,MTLCommandBufferStatusCompleted = 0x4,MTLCommandBufferStatusError = 0x5,};
enum MTLDynamicLibraryError {MTLDynamicLibraryErrorNone = 0x0,MTLDynamicLibraryErrorInvalidFile = 0x1,MTLDynamicLibraryErrorCompilationFailure = 0x2,MTLDynamicLibraryErrorUnresolvedInstallName = 0x3,MTLDynamicLibraryErrorDependencyLoadFailure = 0x4,MTLDynamicLibraryErrorUnsupported = 0x5,};
enum MTLSamplerMinMagFilter {MTLSamplerMinMagFilterNearest = 0x0,MTLSamplerMinMagFilterLinear = 0x1,};
enum NEDNSProxyManagerError {NEDNSProxyManagerErrorConfigurationInvalid = 0x1,NEDNSProxyManagerErrorConfigurationDisabled = 0x2,NEDNSProxyManagerErrorConfigurationStale = 0x3,NEDNSProxyManagerErrorConfigurationCannotBeRemoved = 0x4,};
typedef void *NEHotspotHelperHandler;
enum NSCollectionChangeType {NSCollectionChangeInsert = 0x0,NSCollectionChangeRemove = 0x1,};
enum NSLinguisticTaggerUnit {NSLinguisticTaggerUnitWord = 0x0,NSLinguisticTaggerUnitSentence = 0x1,NSLinguisticTaggerUnitParagraph = 0x2,NSLinguisticTaggerUnitDocument = 0x3,};
enum NSNumberFormatterStyle {NSNumberFormatterNoStyle = 0x0,NSNumberFormatterDecimalStyle = 0x1,NSNumberFormatterCurrencyStyle = 0x2,NSNumberFormatterPercentStyle = 0x3,NSNumberFormatterScientificStyle = 0x4,NSNumberFormatterSpellOutStyle = 0x5,NSNumberFormatterOrdinalStyle = 0x6,NSNumberFormatterCurrencyISOCodeStyle = 0x8,NSNumberFormatterCurrencyPluralStyle = 0x9,NSNumberFormatterCurrencyAccountingStyle = 0xA,};
enum NSTextWritingDirection {NSTextWritingDirectionEmbedding = 0x0,NSTextWritingDirectionOverride = 0x2,};
enum OSLogEntrySignpostType {OSLogEntrySignpostTypeUndefined = 0x0,OSLogEntrySignpostTypeIntervalBegin = 0x1,OSLogEntrySignpostTypeIntervalEnd = 0x2,OSLogEntrySignpostTypeEvent = 0x3,};
enum PDFDocumentPermissions {kPDFDocumentPermissionsNone = 0x0,kPDFDocumentPermissionsUser = 0x1,kPDFDocumentPermissionsOwner = 0x2,};
enum PDFThumbnailLayoutMode {PDFThumbnailLayoutModeVertical = 0x0,PDFThumbnailLayoutModeHorizontal = 0x1,};
typedef ProcessSerialNumber *ProcessSerialNumberPtr;
typedef void *SCNAnimationEventBlock;
typedef void *SCNFieldForceEvaluator;
enum SCNParticleSortingMode {SCNParticleSortingModeNone = 0x0,SCNParticleSortingModeProjectedDepth = 0x1,SCNParticleSortingModeDistance = 0x2,SCNParticleSortingModeOldestFirst = 0x3,SCNParticleSortingModeYoungestFirst = 0x4,};
typedef  __SCNetworkConnection *SCNetworkConnectionRef;
typedef void *SKActionTimingFunction;
enum SKTextureFilteringMode {SKTextureFilteringNearest = 0x0,SKTextureFilteringLinear = 0x1,};
enum SSReadingListErrorCode {SSReadingListErrorURLSchemeNotAllowed = 0x1,};
enum SparsePreconditioner_t {SparsePreconditionerNone = 0x0,SparsePreconditionerUser = 0x1,SparsePreconditionerDiagonal = 0x2,SparsePreconditionerDiagScaling = 0x3,};
enum TKSmartCardPINEncoding {TKSmartCardPINEncodingBinary = 0x0,TKSmartCardPINEncodingASCII = 0x1,TKSmartCardPINEncodingBCD = 0x2,};
enum UBidiPairedBracketType {U_BPT_NONE = 0x0,U_BPT_OPEN = 0x1,U_BPT_CLOSE = 0x2,U_BPT_COUNT = 0x3,};
enum UIAlertControllerStyle {UIAlertControllerStyleActionSheet = 0x0,UIAlertControllerStyleAlert = 0x1,};
enum UIForceTouchCapability {UIForceTouchCapabilityUnknown = 0x0,UIForceTouchCapabilityUnavailable = 0x1,UIForceTouchCapabilityAvailable = 0x2,};
enum UIInterfaceOrientation {UIInterfaceOrientationUnknown = 0x0,UIInterfaceOrientationPortrait = 0x1,UIInterfaceOrientationPortraitUpsideDown = 0x2,UIInterfaceOrientationLandscapeLeft = 0x4,UIInterfaceOrientationLandscapeRight = 0x3,};
enum UILayoutConstraintAxis {UILayoutConstraintAxisHorizontal = 0x0,UILayoutConstraintAxisVertical = 0x1,};
enum UIModalTransitionStyle {UIModalTransitionStyleCoverVertical = 0x0,UIModalTransitionStyleFlipHorizontal = 0x1,UIModalTransitionStyleCrossDissolve = 0x2,UIModalTransitionStylePartialCurl = 0x3,};
enum UIPrintInfoOrientation {UIPrintInfoOrientationPortrait = 0x0,UIPrintInfoOrientationLandscape = 0x1,};
enum UISceneActivationState {UISceneActivationStateUnattached = 0xFFFFFFFFFFFFFFFF,UISceneActivationStateForegroundActive = 0x0,UISceneActivationStateForegroundInactive = 0x1,UISceneActivationStateBackground = 0x2,};
enum UITextAlternativeStyle {UITextAlternativeStyleNone = 0x0,UITextAlternativeStyleLowConfidence = 0x1,};
enum UITextDropProgressMode {UITextDropProgressModeSystem = 0x0,UITextDropProgressModeCustom = 0x1,};
enum UITextStorageDirection {UITextStorageDirectionForward = 0x0,UITextStorageDirectionBackward = 0x1,};
enum UIndicSyllabicCategory {U_INSC_OTHER = 0x0,U_INSC_AVAGRAHA = 0x1,U_INSC_BINDU = 0x2,U_INSC_BRAHMI_JOINING_NUMBER = 0x3,U_INSC_CANTILLATION_MARK = 0x4,U_INSC_CONSONANT = 0x5,U_INSC_CONSONANT_DEAD = 0x6,U_INSC_CONSONANT_FINAL = 0x7,U_INSC_CONSONANT_HEAD_LETTER = 0x8,U_INSC_CONSONANT_INITIAL_POSTFIXED = 0x9,U_INSC_CONSONANT_KILLER = 0xA,U_INSC_CONSONANT_MEDIAL = 0xB,U_INSC_CONSONANT_PLACEHOLDER = 0xC,U_INSC_CONSONANT_PRECEDING_REPHA = 0xD,U_INSC_CONSONANT_PREFIXED = 0xE,U_INSC_CONSONANT_SUBJOINED = 0xF,U_INSC_CONSONANT_SUCCEEDING_REPHA = 0x10,U_INSC_CONSONANT_WITH_STACKER = 0x11,U_INSC_GEMINATION_MARK = 0x12,U_INSC_INVISIBLE_STACKER = 0x13,U_INSC_JOINER = 0x14,U_INSC_MODIFYING_LETTER = 0x15,U_INSC_NON_JOINER = 0x16,U_INSC_NUKTA = 0x17,U_INSC_NUMBER = 0x18,U_INSC_NUMBER_JOINER = 0x19,U_INSC_PURE_KILLER = 0x1A,U_INSC_REGISTER_SHIFTER = 0x1B,U_INSC_SYLLABLE_MODIFIER = 0x1C,U_INSC_TONE_LETTER = 0x1D,U_INSC_TONE_MARK = 0x1E,U_INSC_VIRAMA = 0x1F,U_INSC_VISARGA = 0x20,U_INSC_VOWEL = 0x21,U_INSC_VOWEL_DEPENDENT = 0x22,U_INSC_VOWEL_INDEPENDENT = 0x23,};
enum VNRequestTrackingLevel {VNRequestTrackingLevelAccurate = 0x0,VNRequestTrackingLevelFast = 0x1,};
enum WKSelectionGranularity {WKSelectionGranularityDynamic = 0x0,WKSelectionGranularityCharacter = 0x1,};
enum XML_ParamEntityParsing {XML_PARAM_ENTITY_PARSING_NEVER = 0x0,XML_PARAM_ENTITY_PARSING_UNLESS_STANDALONE = 0x1,XML_PARAM_ENTITY_PARSING_ALWAYS = 0x2,};
struct _EAGLSharegroupPrivate;
struct __CFNotificationCenter;
typedef unsigned long long __darwin_pthread_key_t;
typedef char __darwin_uuid_string_t[37];
struct __objc_category_struct {char *category_name;char *class_name;void *instance_methods;void *class_methods;void *protocols;};
struct __objc_protocol_struct {void *isa;char *protocol_name;void *protocol_list;void *instance_methods;void *class_methods;};
struct _opaque_pthread_attr_t {long long __sig;char __opaque[56];};
struct _opaque_pthread_cond_t {long long __sig;char __opaque[40];};
struct _opaque_pthread_once_t {long long __sig;char __opaque[8];};
enum dispatch_block_flags_t {DISPATCH_BLOCK_BARRIER = 0x1,DISPATCH_BLOCK_DETACHED = 0x2,DISPATCH_BLOCK_ASSIGN_CURRENT = 0x4,DISPATCH_BLOCK_NO_QOS_CLASS = 0x8,DISPATCH_BLOCK_INHERIT_QOS_CLASS = 0x10,DISPATCH_BLOCK_ENFORCE_QOS_CLASS = 0x20,};
struct dispatch_source_type_s;
typedef  dispatch_source_type_s *dispatch_source_type_t;
typedef gss_channel_bindings_struct *gss_channel_bindings_t;
typedef gss_krb5_cfx_keydata gss_krb5_cfx_keydata_t;
struct gss_name_t_desc_struct;
typedef host_basic_info host_basic_info_data_t;
typedef host_sched_info host_sched_info_data_t;
typedef ipc_info_space_basic ipc_info_space_basic_t;
typedef unsigned int mach_msg_guard_flags_t;
typedef mach_msg_mac_trailer_t mach_msg_max_trailer_t;
typedef mach_task_basic_info *mach_task_basic_info_t;
typedef int memory_object_flavor_t;
typedef unsigned long long memory_object_offset_t;
typedef int memory_object_return_t;
typedef routine_descriptor mig_routine_descriptor;
typedef NSObject *nw_browse_descriptor_t;
enum nw_multipath_service_t {nw_multipath_service_disabled = 0x0,nw_multipath_service_handover = 0x1,nw_multipath_service_interactive = 0x2,nw_multipath_service_aggregate = 0x3,};
typedef NSObject *nw_protocol_metadata_t;
typedef NSObject *nw_resolution_report_t;
enum objc_AssociationPolicy {OBJC_ASSOCIATION_ASSIGN = 0x0,OBJC_ASSOCIATION_RETAIN_NONATOMIC = 0x1,OBJC_ASSOCIATION_COPY_NONATOMIC = 0x3,OBJC_ASSOCIATION_RETAIN = 0x301,OBJC_ASSOCIATION_COPY = 0x303,};
typedef policy_rr_limit policy_rr_limit_data_t;
typedef processor_basic_info *processor_basic_info_t;
typedef processor_cpu_stat64 *processor_cpu_stat64_t;
typedef int processor_set_flavor_t;
typedef mach_msg_type_descriptor_t routine_arg_descriptor;
typedef NSObject *sec_protocol_options_t;
typedef simd_packed_ushort16 simd__packed__ushort16;
typedef simd_packed_ushort32 simd__packed__ushort32;
enum sparse_matrix_property {SPARSE_UPPER_TRIANGULAR = 0x1,SPARSE_LOWER_TRIANGULAR = 0x2,SPARSE_UPPER_SYMMETRIC = 0x4,SPARSE_LOWER_SYMMETRIC = 0x8,};
struct sqlite3_pcache_methods {void *pArg;int (*xInit)(void *);void (*xShutdown)(void *);sqlite3_pcache *(*xCreate)(int, int);void (*xCachesize)(sqlite3_pcache *, int);int (*xPagecount)(sqlite3_pcache *);void *(*xFetch)(sqlite3_pcache *, unsigned int, int);void (*xUnpin)(sqlite3_pcache *, void *, int);void (*xRekey)(sqlite3_pcache *, void *, unsigned int, unsigned int);void (*xTruncate)(sqlite3_pcache *, unsigned int);void (*xDestroy)(sqlite3_pcache *);};
struct std____1____rs_default {};
struct std____1____second_tag {};
struct std____1__adopt_lock_t {};
typedef std____1__atomic_long_long_ std____1__atomic_llong;
typedef std____1__atomic_signed_char_ std____1__atomic_schar;
typedef std____1__atomic_short_ std____1__atomic_short;
typedef std____1__atomic_unsigned_char_ std____1__atomic_uchar;
typedef std____1__atomic_unsigned_long_ std____1__atomic_ulong;
struct std____1__bit_or_void_ {};
struct std____1__codecvt_base {};
struct std____1__defer_lock_t {};
enum std____1__memory_order {memory_order_relaxed = 0x0,memory_order_consume = 0x1,memory_order_acquire = 0x2,memory_order_release = 0x3,memory_order_acq_rel = 0x4,memory_order_seq_cst = 0x5,};
struct std____1__negate_void_ {};
struct std____1__ratio_1__10_ {};
struct std____1__ratio_10__1_ {};
typedef std____1__basic_stringstream_char_ std____1__stringstream;
typedef std____1__fpos___mbstate_t_ std____1__u16streampos;
typedef std____1__fpos___mbstate_t_ std____1__u32streampos;
typedef std____1__basic_string_view_wchar_t_ std____1__wstring_view;
struct std__domain_error_vtbl; 
struct std__length_error_vtbl; 
struct std__out_of_range_vtbl; 
typedef void (*std__terminate_handler)(void);
typedef task_basic_info_64_2 *task_basic_info_64_2_t;
typedef task_basic_info task_basic_info_data_t;
typedef task_category_policy *task_category_policy_t;
typedef task_flags_info task_flags_info_data_t;
typedef task_power_info task_power_info_data_t;
typedef task_wait_state_info *task_wait_state_info_t;
typedef thread_extended_info *thread_extended_info_t;
enum tls_protocol_version_t {tls_protocol_version_TLSv10 = 0x301,tls_protocol_version_TLSv11 = 0x302,tls_protocol_version_TLSv12 = 0x303,tls_protocol_version_TLSv13 = 0x304,tls_protocol_version_DTLSv10 = 0xFEFF,tls_protocol_version_DTLSv12 = 0xFEFD,};
typedef vImageCVImageFormat *vImageCVImageFormatRef;
enum vImageMDTableUsageHint {kvImageMDTableHint_16Q12 = 0x1,kvImageMDTableHint_Float = 0x2,};
struct vImage_AffineTransform {float a;float b;float c;float d;float tx;float ty;};
typedef vm_extmod_statistics *vm_extmod_statistics_t;
typedef unsigned int vm_machine_attribute_t;
typedef vm_region_basic_info *vm_region_basic_info_t;
typedef vm_statistics64 vm_statistics64_data_t;
typedef _xmlCharEncodingHandler xmlCharEncodingHandler;
enum xmlElementContentOccur {XML_ELEMENT_CONTENT_ONCE = 0x1,XML_ELEMENT_CONTENT_OPT = 0x2,XML_ELEMENT_CONTENT_MULT = 0x3,XML_ELEMENT_CONTENT_PLUS = 0x4,};
typedef int (*xmlOutputCloseCallback)(void *);
typedef int (*xmlOutputMatchCallback)( char *);
typedef int (*xmlOutputWriteCallback)(void *,  char *, int);
typedef _xmlSchemaAttributeLink xmlSchemaAttributeLink;
typedef struct _xmlSchemaSAXPlug xmlSchemaSAXPlugStruct;
typedef struct _xmlSchematronValidCtxt xmlSchematronValidCtxt;
typedef void (*xmlValidityWarningFunc)(void *,  char *, ...);
typedef int (*AAByteStreamCloseProc)(void *);
enum ABAuthorizationStatus {kABAuthorizationStatusNotDetermined = 0x0,kABAuthorizationStatusRestricted = 0x1,kABAuthorizationStatusDenied = 0x2,kABAuthorizationStatusAuthorized = 0x3,};
enum AEAssessmentErrorCode {AEAssessmentErrorUnknown = 0x1,};
enum ALAuthorizationStatus {ALAuthorizationStatusNotDetermined = 0x0,ALAuthorizationStatusRestricted = 0x1,ALAuthorizationStatusDenied = 0x2,ALAuthorizationStatusAuthorized = 0x3,};
enum ARGeoTrackingAccuracy {ARGeoTrackingAccuracyUndetermined = 0x0,ARGeoTrackingAccuracyLow = 0x1,ARGeoTrackingAccuracyMedium = 0x2,ARGeoTrackingAccuracyHigh = 0x3,};
enum ARPlaneClassification {ARPlaneClassificationNone = 0x0,ARPlaneClassificationWall = 0x1,ARPlaneClassificationFloor = 0x2,ARPlaneClassificationCeiling = 0x3,ARPlaneClassificationTable = 0x4,ARPlaneClassificationSeat = 0x5,ARPlaneClassificationWindow = 0x6,ARPlaneClassificationDoor = 0x7,};
enum ARTrackingStateReason {ARTrackingStateReasonNone = 0x0,ARTrackingStateReasonInitializing = 0x1,ARTrackingStateReasonExcessiveMotion = 0x2,ARTrackingStateReasonInsufficientFeatures = 0x3,ARTrackingStateReasonRelocalizing = 0x4,};
enum ASUserDetectionStatus {ASUserDetectionStatusUnsupported = 0x0,ASUserDetectionStatusUnknown = 0x1,ASUserDetectionStatusLikelyReal = 0x2,};
typedef void *AUInternalRenderBlock;
struct AVAssetReaderInternal;
struct AVAssetWriterInternal;
enum AVAuthorizationStatus {AVAuthorizationStatusNotDetermined = 0x0,AVAuthorizationStatusRestricted = 0x1,AVAuthorizationStatusDenied = 0x2,AVAuthorizationStatusAuthorized = 0x3,};
enum AVCaptureExposureMode {AVCaptureExposureModeLocked = 0x0,AVCaptureExposureModeAutoExpose = 0x1,AVCaptureExposureModeContinuousAutoExposure = 0x2,AVCaptureExposureModeCustom = 0x3,};
struct AVCompositionInternal;
enum AVMusicTrackLoopCount {AVMusicTrackLoopCountForever = 0xFFFFFFFFFFFFFFFF,};
struct AVPlayerImageProvider;
struct AVPlayerLayerInternal;
struct AVQueuePlayerInternal;
typedef OpaqueAudioQueueTimeline *AudioQueueTimelineRef;
enum BNNSOptimizerFunction {BNNSOptimizerFunctionSGDMomentum = 0x1,BNNSOptimizerFunctionAdam = 0x2,BNNSOptimizerFunctionRMSProp = 0x3,};
struct BigEndianUnsignedLong {unsigned long long bigEndianValue;};
enum CBCentralManagerState {CBCentralManagerStateUnknown = 0x0,CBCentralManagerStateResetting = 0x1,CBCentralManagerStateUnsupported = 0x2,CBCentralManagerStateUnauthorized = 0x3,CBCentralManagerStatePoweredOff = 0x4,CBCentralManagerStatePoweredOn = 0x5,};
typedef  __CFAttributedString *CFAttributedStringRef;
typedef __CFBitVector *CFMutableBitVectorRef;
typedef void (*CFTreeApplierFunction)( void *, void *);
typedef void (*CFTreeReleaseCallBack)( void *);
enum CFURLEnumeratorResult {kCFURLEnumeratorSuccess = 0x1,kCFURLEnumeratorEnd = 0x2,kCFURLEnumeratorError = 0x3,kCFURLEnumeratorDirectoryPostOrderSuccess = 0x4,};
typedef __CFUserNotification *CFUserNotificationRef;
struct CGColorConversionInfo;
enum CGGlyphDeprecatedEnum {CGGlyphMin = 0x0,CGGlyphMax = 0x1,};
typedef CGImageDestination *CGImageDestinationRef;
enum CGImageMetadataErrors {kCGImageMetadataErrorUnknown = 0x0,kCGImageMetadataErrorUnsupportedFormat = 0x1,kCGImageMetadataErrorBadArgument = 0x2,kCGImageMetadataErrorConflictingArguments = 0x3,kCGImageMetadataErrorPrefixConflict = 0x4,};
typedef CGImageMetadataTag *CGImageMetadataTagRef;
typedef CGPDFContentStream *CGPDFContentStreamRef;
typedef CGPDFOperatorTable *CGPDFOperatorTableRef;
typedef void (*CGPathApplierFunction)(void *,  CGPathElement *);
enum CLAuthorizationStatus {kCLAuthorizationStatusNotDetermined = 0x0,kCLAuthorizationStatusRestricted = 0x1,kCLAuthorizationStatusDenied = 0x2,kCLAuthorizationStatusAuthorizedAlways = 0x3,kCLAuthorizationStatusAuthorizedWhenInUse = 0x4,kCLAuthorizationStatusAuthorized = 0x3,};
enum CLKComplicationFamily {CLKComplicationFamilyModularSmall = 0x0,CLKComplicationFamilyModularLarge = 0x1,CLKComplicationFamilyUtilitarianSmall = 0x2,CLKComplicationFamilyUtilitarianSmallFlat = 0x6,CLKComplicationFamilyUtilitarianLarge = 0x3,CLKComplicationFamilyCircularSmall = 0x4,CLKComplicationFamilyExtraLarge = 0x7,CLKComplicationFamilyGraphicCorner = 0x8,CLKComplicationFamilyGraphicBezel = 0x9,CLKComplicationFamilyGraphicCircular = 0xA,CLKComplicationFamilyGraphicRectangular = 0xB,CLKComplicationFamilyGraphicExtraLarge = 0xC,};
enum CLKGaugeProviderStyle {CLKGaugeProviderStyleRing = 0x0,CLKGaugeProviderStyleFill = 0x1,};
enum CMAuthorizationStatus {CMAuthorizationStatusNotDetermined = 0x0,CMAuthorizationStatusRestricted = 0x1,CMAuthorizationStatusDenied = 0x2,CMAuthorizationStatusAuthorized = 0x3,};
typedef void *CMDeviceMotionHandler;
typedef void *CMMagnetometerHandler;
typedef void *CMTremorResultHandler;
enum CNAuthorizationStatus {CNAuthorizationStatusNotDetermined = 0x0,CNAuthorizationStatusRestricted = 0x1,CNAuthorizationStatusDenied = 0x2,CNAuthorizationStatusAuthorized = 0x3,};
struct CNChangeHistoryAnchor;
enum CPMessageTrailingItem {CPMessageTrailingItemNone = 0x0,CPMessageTrailingItemMute = 0x1,};
enum CTCharacterCollection {kCTCharacterCollectionIdentityMapping = 0x0,kCTCharacterCollectionAdobeCNS1 = 0x1,kCTCharacterCollectionAdobeGB1 = 0x2,kCTCharacterCollectionAdobeJapan1 = 0x3,kCTCharacterCollectionAdobeJapan2 = 0x4,kCTCharacterCollectionAdobeKorea1 = 0x5,kCTIdentityMappingCharacterCollection = 0x0,kCTAdobeCNS1CharacterCollection = 0x1,kCTAdobeGB1CharacterCollection = 0x2,kCTAdobeJapan1CharacterCollection = 0x3,kCTAdobeJapan2CharacterCollection = 0x4,kCTAdobeKorea1CharacterCollection = 0x5,};
struct DSPDoubleSplitComplex {double *realp;double *imagp;};
enum EKAuthorizationStatus {EKAuthorizationStatusNotDetermined = 0x0,EKAuthorizationStatusRestricted = 0x1,EKAuthorizationStatusDenied = 0x2,EKAuthorizationStatusAuthorized = 0x3,};
enum EKEventEditViewAction {EKEventEditViewActionCanceled = 0x0,EKEventEditViewActionSaved = 0x1,EKEventEditViewActionDeleted = 0x2,EKEventEditViewActionCancelled = 0x0,};
typedef void *EKEventSearchCallback;
enum EKRecurrenceFrequency {EKRecurrenceFrequencyDaily = 0x0,EKRecurrenceFrequencyWeekly = 0x1,EKRecurrenceFrequencyMonthly = 0x2,EKRecurrenceFrequencyYearly = 0x3,};
enum ENAuthorizationStatus {ENAuthorizationStatusUnknown = 0x0,ENAuthorizationStatusRestricted = 0x1,ENAuthorizationStatusNotAuthorized = 0x2,ENAuthorizationStatusAuthorized = 0x3,};
enum ENDiagnosisReportType {ENDiagnosisReportTypeUnknown = 0x0,ENDiagnosisReportTypeConfirmedTest = 0x1,ENDiagnosisReportTypeConfirmedClinicalDiagnosis = 0x2,ENDiagnosisReportTypeSelfReported = 0x3,ENDiagnosisReportTypeRecursive = 0x4,ENDiagnosisReportTypeRevoked = 0x5,};
enum GKAccessPointLocation {GKAccessPointLocationTopLeading = 0x0,GKAccessPointLocationTopTrailing = 0x1,GKAccessPointLocationBottomLeading = 0x2,GKAccessPointLocationBottomTrailing = 0x3,};
enum GKPeerConnectionState {GKPeerStateAvailable = 0x0,GKPeerStateUnavailable = 0x1,GKPeerStateConnected = 0x2,GKPeerStateDisconnected = 0x3,GKPeerStateConnecting = 0x4,GKPeerStateConnectedRelay = 0x5,};
enum GLKTextureLoaderError {GLKTextureLoaderErrorFileOrURLNotFound = 0x0,GLKTextureLoaderErrorInvalidNSData = 0x1,GLKTextureLoaderErrorInvalidCGImage = 0x2,GLKTextureLoaderErrorUnknownPathType = 0x3,GLKTextureLoaderErrorUnknownFileType = 0x4,GLKTextureLoaderErrorPVRAtlasUnsupported = 0x5,GLKTextureLoaderErrorCubeMapInvalidNumFiles = 0x6,GLKTextureLoaderErrorCompressedTextureUpload = 0x7,GLKTextureLoaderErrorUncompressedTextureUpload = 0x8,GLKTextureLoaderErrorUnsupportedCubeMapDimensions = 0x9,GLKTextureLoaderErrorUnsupportedBitDepth = 0xA,GLKTextureLoaderErrorUnsupportedPVRFormat = 0xB,GLKTextureLoaderErrorDataPreprocessingFailure = 0xC,GLKTextureLoaderErrorMipmapUnsupported = 0xD,GLKTextureLoaderErrorUnsupportedOrientation = 0xE,GLKTextureLoaderErrorReorientationFailure = 0xF,GLKTextureLoaderErrorAlphaPremultiplicationFailure = 0x10,GLKTextureLoaderErrorInvalidEAGLContext = 0x11,GLKTextureLoaderErrorIncompatibleFormatSRGB = 0x12,GLKTextureLoaderErrorUnsupportedTextureTarget = 0x13,};
enum HKAuthorizationStatus {HKAuthorizationStatusNotDetermined = 0x0,HKAuthorizationStatusSharingDenied = 0x1,HKAuthorizationStatusSharingAuthorized = 0x2,};
enum HKDevicePlacementSide {HKDevicePlacementSideUnknown = 0x0,HKDevicePlacementSideLeft = 0x1,HKDevicePlacementSideRight = 0x2,HKDevicePlacementSideCentral = 0x3,};
enum HKFitzpatrickSkinType {HKFitzpatrickSkinTypeNotSet = 0x0,HKFitzpatrickSkinTypeI = 0x1,HKFitzpatrickSkinTypeII = 0x2,HKFitzpatrickSkinTypeIII = 0x3,HKFitzpatrickSkinTypeIV = 0x4,HKFitzpatrickSkinTypeV = 0x5,HKFitzpatrickSkinTypeVI = 0x6,};
enum HKSwimmingStrokeStyle {HKSwimmingStrokeStyleUnknown = 0x0,HKSwimmingStrokeStyleMixed = 0x1,HKSwimmingStrokeStyleFreestyle = 0x2,HKSwimmingStrokeStyleBackstroke = 0x3,HKSwimmingStrokeStyleBreaststroke = 0x4,HKSwimmingStrokeStyleButterfly = 0x5,};
enum HKWorkoutActivityType {HKWorkoutActivityTypeAmericanFootball = 0x1,HKWorkoutActivityTypeArchery = 0x2,HKWorkoutActivityTypeAustralianFootball = 0x3,HKWorkoutActivityTypeBadminton = 0x4,HKWorkoutActivityTypeBaseball = 0x5,HKWorkoutActivityTypeBasketball = 0x6,HKWorkoutActivityTypeBowling = 0x7,HKWorkoutActivityTypeBoxing = 0x8,HKWorkoutActivityTypeClimbing = 0x9,HKWorkoutActivityTypeCricket = 0xA,HKWorkoutActivityTypeCrossTraining = 0xB,HKWorkoutActivityTypeCurling = 0xC,HKWorkoutActivityTypeCycling = 0xD,HKWorkoutActivityTypeDance = 0xE,HKWorkoutActivityTypeDanceInspiredTraining = 0xF,HKWorkoutActivityTypeElliptical = 0x10,HKWorkoutActivityTypeEquestrianSports = 0x11,HKWorkoutActivityTypeFencing = 0x12,HKWorkoutActivityTypeFishing = 0x13,HKWorkoutActivityTypeFunctionalStrengthTraining = 0x14,HKWorkoutActivityTypeGolf = 0x15,HKWorkoutActivityTypeGymnastics = 0x16,HKWorkoutActivityTypeHandball = 0x17,HKWorkoutActivityTypeHiking = 0x18,HKWorkoutActivityTypeHockey = 0x19,HKWorkoutActivityTypeHunting = 0x1A,HKWorkoutActivityTypeLacrosse = 0x1B,HKWorkoutActivityTypeMartialArts = 0x1C,HKWorkoutActivityTypeMindAndBody = 0x1D,HKWorkoutActivityTypeMixedMetabolicCardioTraining = 0x1E,HKWorkoutActivityTypePaddleSports = 0x1F,HKWorkoutActivityTypePlay = 0x20,HKWorkoutActivityTypePreparationAndRecovery = 0x21,HKWorkoutActivityTypeRacquetball = 0x22,HKWorkoutActivityTypeRowing = 0x23,HKWorkoutActivityTypeRugby = 0x24,HKWorkoutActivityTypeRunning = 0x25,HKWorkoutActivityTypeSailing = 0x26,HKWorkoutActivityTypeSkatingSports = 0x27,HKWorkoutActivityTypeSnowSports = 0x28,HKWorkoutActivityTypeSoccer = 0x29,HKWorkoutActivityTypeSoftball = 0x2A,HKWorkoutActivityTypeSquash = 0x2B,HKWorkoutActivityTypeStairClimbing = 0x2C,HKWorkoutActivityTypeSurfingSports = 0x2D,HKWorkoutActivityTypeSwimming = 0x2E,HKWorkoutActivityTypeTableTennis = 0x2F,HKWorkoutActivityTypeTennis = 0x30,HKWorkoutActivityTypeTrackAndField = 0x31,HKWorkoutActivityTypeTraditionalStrengthTraining = 0x32,HKWorkoutActivityTypeVolleyball = 0x33,HKWorkoutActivityTypeWalking = 0x34,HKWorkoutActivityTypeWaterFitness = 0x35,HKWorkoutActivityTypeWaterPolo = 0x36,HKWorkoutActivityTypeWaterSports = 0x37,HKWorkoutActivityTypeWrestling = 0x38,HKWorkoutActivityTypeYoga = 0x39,HKWorkoutActivityTypeBarre = 0x3A,HKWorkoutActivityTypeCoreTraining = 0x3B,HKWorkoutActivityTypeCrossCountrySkiing = 0x3C,HKWorkoutActivityTypeDownhillSkiing = 0x3D,HKWorkoutActivityTypeFlexibility = 0x3E,HKWorkoutActivityTypeHighIntensityIntervalTraining = 0x3F,HKWorkoutActivityTypeJumpRope = 0x40,HKWorkoutActivityTypeKickboxing = 0x41,HKWorkoutActivityTypePilates = 0x42,HKWorkoutActivityTypeSnowboarding = 0x43,HKWorkoutActivityTypeStairs = 0x44,HKWorkoutActivityTypeStepTraining = 0x45,HKWorkoutActivityTypeWheelchairWalkPace = 0x46,HKWorkoutActivityTypeWheelchairRunPace = 0x47,HKWorkoutActivityTypeTaiChi = 0x48,HKWorkoutActivityTypeMixedCardio = 0x49,HKWorkoutActivityTypeHandCycling = 0x4A,HKWorkoutActivityTypeDiscSports = 0x4B,HKWorkoutActivityTypeFitnessGaming = 0x4C,HKWorkoutActivityTypeCardioDance = 0x4D,HKWorkoutActivityTypeSocialDance = 0x4E,HKWorkoutActivityTypePickleball = 0x4F,HKWorkoutActivityTypeCooldown = 0x50,HKWorkoutActivityTypeOther = 0xBB8,};
enum HKWorkoutSessionState {HKWorkoutSessionStateNotStarted = 0x1,HKWorkoutSessionStateRunning = 0x2,HKWorkoutSessionStateEnded = 0x3,HKWorkoutSessionStatePaused = 0x4,HKWorkoutSessionStatePrepared = 0x5,HKWorkoutSessionStateStopped = 0x6,};
enum ICEXIFOrientationType {ICEXIFOrientation1 = 0x1,ICEXIFOrientation2 = 0x2,ICEXIFOrientation3 = 0x3,ICEXIFOrientation4 = 0x4,ICEXIFOrientation5 = 0x5,ICEXIFOrientation6 = 0x6,ICEXIFOrientation7 = 0x7,ICEXIFOrientation8 = 0x8,};
enum ICScannerDocumentType {ICScannerDocumentTypeDefault = 0x0,ICScannerDocumentTypeA4 = 0x1,ICScannerDocumentTypeB5 = 0x2,ICScannerDocumentTypeUSLetter = 0x3,ICScannerDocumentTypeUSLegal = 0x4,ICScannerDocumentTypeA5 = 0x5,ICScannerDocumentTypeISOB4 = 0x6,ICScannerDocumentTypeISOB6 = 0x7,ICScannerDocumentTypeUSLedger = 0x9,ICScannerDocumentTypeUSExecutive = 0xA,ICScannerDocumentTypeA3 = 0xB,ICScannerDocumentTypeISOB3 = 0xC,ICScannerDocumentTypeA6 = 0xD,ICScannerDocumentTypeC4 = 0xE,ICScannerDocumentTypeC5 = 0xF,ICScannerDocumentTypeC6 = 0x10,ICScannerDocumentType4A0 = 0x11,ICScannerDocumentType2A0 = 0x12,ICScannerDocumentTypeA0 = 0x13,ICScannerDocumentTypeA1 = 0x14,ICScannerDocumentTypeA2 = 0x15,ICScannerDocumentTypeA7 = 0x16,ICScannerDocumentTypeA8 = 0x17,ICScannerDocumentTypeA9 = 0x18,ICScannerDocumentType10 = 0x19,ICScannerDocumentTypeISOB0 = 0x1A,ICScannerDocumentTypeISOB1 = 0x1B,ICScannerDocumentTypeISOB2 = 0x1C,ICScannerDocumentTypeISOB5 = 0x1D,ICScannerDocumentTypeISOB7 = 0x1E,ICScannerDocumentTypeISOB8 = 0x1F,ICScannerDocumentTypeISOB9 = 0x20,ICScannerDocumentTypeISOB10 = 0x21,ICScannerDocumentTypeJISB0 = 0x22,ICScannerDocumentTypeJISB1 = 0x23,ICScannerDocumentTypeJISB2 = 0x24,ICScannerDocumentTypeJISB3 = 0x25,ICScannerDocumentTypeJISB4 = 0x26,ICScannerDocumentTypeJISB6 = 0x27,ICScannerDocumentTypeJISB7 = 0x28,ICScannerDocumentTypeJISB8 = 0x29,ICScannerDocumentTypeJISB9 = 0x2A,ICScannerDocumentTypeJISB10 = 0x2B,ICScannerDocumentTypeC0 = 0x2C,ICScannerDocumentTypeC1 = 0x2D,ICScannerDocumentTypeC2 = 0x2E,ICScannerDocumentTypeC3 = 0x2F,ICScannerDocumentTypeC7 = 0x30,ICScannerDocumentTypeC8 = 0x31,ICScannerDocumentTypeC9 = 0x32,ICScannerDocumentTypeC10 = 0x33,ICScannerDocumentTypeUSStatement = 0x34,ICScannerDocumentTypeBusinessCard = 0x35,ICScannerDocumentTypeE = 0x3C,ICScannerDocumentType3R = 0x3D,ICScannerDocumentType4R = 0x3E,ICScannerDocumentType5R = 0x3F,ICScannerDocumentType6R = 0x40,ICScannerDocumentType8R = 0x41,ICScannerDocumentTypeS8R = 0x42,ICScannerDocumentType10R = 0x43,ICScannerDocumentTypeS10R = 0x44,ICScannerDocumentType11R = 0x45,ICScannerDocumentType12R = 0x46,ICScannerDocumentTypeS12R = 0x47,ICScannerDocumentType110 = 0x48,ICScannerDocumentTypeAPSH = 0x49,ICScannerDocumentTypeAPSC = 0x4A,ICScannerDocumentTypeAPSP = 0x4B,ICScannerDocumentType135 = 0x4C,ICScannerDocumentTypeMF = 0x4D,ICScannerDocumentTypeLF = 0x4E,};
enum ICScannerTransferMode {ICScannerTransferModeFileBased = 0x0,ICScannerTransferModeMemoryBased = 0x1,};
enum INCallDestinationType {INCallDestinationTypeUnknown = 0x0,INCallDestinationTypeNormal = 0x1,INCallDestinationTypeEmergency = 0x2,INCallDestinationTypeVoicemail = 0x3,INCallDestinationTypeRedial = 0x4,INCallDestinationTypeCallBack = 0x5,INCallDestinationTypeNormalDestination = 0x1,INCallDestinationTypeEmergencyDestination = 0x2,INCallDestinationTypeVoicemailDestination = 0x3,INCallDestinationTypeRedialDestination = 0x4,};
enum INConditionalOperator {INConditionalOperatorAll = 0x0,INConditionalOperatorAny = 0x1,INConditionalOperatorNone = 0x2,};
enum INOutgoingMessageType {INOutgoingMessageTypeUnknown = 0x0,INOutgoingMessageTypeOutgoingMessageText = 0x1,INOutgoingMessageTypeOutgoingMessageAudio = 0x2,};
enum INRecurrenceFrequency {INRecurrenceFrequencyUnknown = 0x0,INRecurrenceFrequencyMinute = 0x1,INRecurrenceFrequencyHourly = 0x2,INRecurrenceFrequencyDaily = 0x3,INRecurrenceFrequencyWeekly = 0x4,INRecurrenceFrequencyMonthly = 0x5,INRecurrenceFrequencyYearly = 0x6,};
enum INUIHostedViewContext {INUIHostedViewContextSiriSnippet = 0x0,INUIHostedViewContextMapsCard = 0x1,};
enum INWorkoutGoalUnitType {INWorkoutGoalUnitTypeUnknown = 0x0,INWorkoutGoalUnitTypeInch = 0x1,INWorkoutGoalUnitTypeMeter = 0x2,INWorkoutGoalUnitTypeFoot = 0x3,INWorkoutGoalUnitTypeMile = 0x4,INWorkoutGoalUnitTypeYard = 0x5,INWorkoutGoalUnitTypeSecond = 0x6,INWorkoutGoalUnitTypeMinute = 0x7,INWorkoutGoalUnitTypeHour = 0x8,INWorkoutGoalUnitTypeJoule = 0x9,INWorkoutGoalUnitTypeKiloCalorie = 0xA,};
enum INWorkoutLocationType {INWorkoutLocationTypeUnknown = 0x0,INWorkoutLocationTypeOutdoor = 0x1,INWorkoutLocationTypeIndoor = 0x2,};
typedef KernSubtableHeader *KernSubtableHeaderPtr;
typedef KerxSubtableHeader *KerxSubtableHeaderPtr;
enum MACRO_DISPATCH_SWIFT3 {DISPATCH_SWIFT3_OVERLAY = 0,};
enum MACRO_ENOTRECOVERABLE {ENOTRECOVERABLE = 104,};
enum MACRO_EPROTONOSUPPORT {EPROTONOSUPPORT = 43,};
enum MACRO_ESOCKTNOSUPPORT {ESOCKTNOSUPPORT = 44,};
enum MACRO_ICMP6_RR_PCOUSE {ICMP6_RR_PCOUSE_RAFLAGS_ONLINK = 0x80,ICMP6_RR_PCOUSE_RAFLAGS_AUTO = 0x40,ICMP6_RR_PCOUSE_FLAGS_DECRVLTIME = 0x80,ICMP6_RR_PCOUSE_FLAGS_DECRPLTIME = 0x40,ICMP6_RR_RESULT_FLAGS_OOB = 0x200,ICMP6_RR_RESULT_FLAGS_FORBIDDEN = 0x100,};
enum MACRO_ICMPV6CTL_STATS {ICMPV6CTL_STATS = 1,ICMPV6CTL_REDIRACCEPT = 2,ICMPV6CTL_REDIRTIMEOUT = 3,ICMPV6CTL_ND6_PRUNE = 6,ICMPV6CTL_ND6_DELAY = 8,ICMPV6CTL_ND6_UMAXTRIES = 9,ICMPV6CTL_ND6_MMAXTRIES = 10,ICMPV6CTL_ND6_USELOOPBACK = 11,ICMPV6CTL_NODEINFO = 13,ICMPV6CTL_ERRPPSLIMIT = 14,ICMPV6CTL_ND6_MAXNUDHINT = 15,ICMPV6CTL_MTUDISC_HIWAT = 16,ICMPV6CTL_MTUDISC_LOWAT = 17,ICMPV6CTL_ND6_DEBUG = 18,ICMPV6CTL_ND6_DRLIST = 19,ICMPV6CTL_ND6_PRLIST = 20,ICMPV6CTL_MLD_MAXSRCFILTER = 21,ICMPV6CTL_MLD_SOMAXSRC = 22,ICMPV6CTL_MLD_VERSION = 23,ICMPV6CTL_ND6_MAXQLEN = 24,ICMPV6CTL_ND6_ACCEPT_6TO4 = 25,ICMPV6CTL_ND6_OPTIMISTIC_DAD = 26,ICMPV6CTL_MAXID = 27,};
enum MACRO_INADDR_LOOPBACK {INADDR_LOOPBACK = 2130706433,INADDR_NONE = 4294967295,INADDR_UNSPEC_GROUP = 3758096384,INADDR_ALLHOSTS_GROUP = 3758096385,INADDR_ALLRTRS_GROUP = 3758096386,INADDR_ALLRPTS_GROUP = 3758096406,INADDR_CARP_GROUP = 3758096402,INADDR_PFSYNC_GROUP = 3758096624,INADDR_ALLMDNS_GROUP = 3758096635,INADDR_MAX_LOCAL_GROUP = 3758096639,};
enum MACRO_MAX_CHAR_LENGTH {UTF16_MAX_CHAR_LENGTH = 2,UTF32_MAX_CHAR_LENGTH = 1,};
enum MACRO_MCAST_UNDEFINED {MCAST_UNDEFINED = 0,MCAST_INCLUDE = 1,MCAST_EXCLUDE = 2,};
enum MACRO_OLDROUTINENAMES {OLDROUTINENAMES = 0,};
enum MACRO_RPCSMALLMSGSIZE {RPCSMALLMSGSIZE = 400,};
enum MACRO_RSTATVERS_SWTCH {RSTATVERS_SWTCH = 2,RSTATVERS_ORIG = 1,};
enum MACRO_SOCK_MAXADDRLEN {SOCK_MAXADDRLEN = 255,};
enum MACRO_TCPOPT_FASTOPEN {TCPOPT_FASTOPEN = 34,};
enum MACRO_THREAD_EXTENDED {THREAD_EXTENDED_INFO = 5,};
enum MACRO_XATTR_OPERATION {XATTR_OPERATION_INTENT_COPY = 1,XATTR_OPERATION_INTENT_SAVE = 2,XATTR_OPERATION_INTENT_SHARE = 3,XATTR_OPERATION_INTENT_SYNC = 4,XATTR_FLAG_NO_EXPORT = 1,XATTR_FLAG_CONTENT_DEPENDENT = 2,XATTR_FLAG_NEVER_PRESERVE = 4,XATTR_FLAG_SYNCABLE = 8,};
enum MACRO__POSIX_ADVISORY {_POSIX_ADVISORY_INFO = -1,_POSIX_ASYNCHRONOUS_IO = -1,_POSIX_BARRIERS = -1,_POSIX_CHOWN_RESTRICTED = 200112,_POSIX_CLOCK_SELECTION = -1,_POSIX_CPUTIME = -1,_POSIX_FSYNC = 200112,_POSIX_IPV6 = 200112,_POSIX_JOB_CONTROL = 200112,_POSIX_MAPPED_FILES = 200112,_POSIX_MEMLOCK = -1,_POSIX_MEMLOCK_RANGE = -1,_POSIX_MEMORY_PROTECTION = 200112,_POSIX_MESSAGE_PASSING = -1,_POSIX_MONOTONIC_CLOCK = -1,_POSIX_NO_TRUNC = 200112,_POSIX_PRIORITIZED_IO = -1,_POSIX_PRIORITY_SCHEDULING = -1,_POSIX_RAW_SOCKETS = -1,_POSIX_READER_WRITER_LOCKS = 200112,_POSIX_REALTIME_SIGNALS = -1,_POSIX_REGEXP = 200112,_POSIX_SAVED_IDS = 200112,_POSIX_SEMAPHORES = -1,_POSIX_SHARED_MEMORY_OBJECTS = -1,_POSIX_SHELL = 200112,_POSIX_SPAWN = -1,_POSIX_SPIN_LOCKS = -1,_POSIX_SPORADIC_SERVER = -1,_POSIX_SYNCHRONIZED_IO = -1,_POSIX_THREAD_ATTR_STACKADDR = 200112,_POSIX_THREAD_ATTR_STACKSIZE = 200112,_POSIX_THREAD_CPUTIME = -1,_POSIX_THREAD_PRIO_INHERIT = -1,_POSIX_THREAD_PRIO_PROTECT = -1,_POSIX_THREAD_PRIORITY_SCHEDULING = -1,_POSIX_THREAD_PROCESS_SHARED = 200112,_POSIX_THREAD_SAFE_FUNCTIONS = 200112,_POSIX_THREAD_SPORADIC_SERVER = -1,_POSIX_THREADS = 200112,_POSIX_TIMEOUTS = -1,_POSIX_TIMERS = -1,_POSIX_TRACE = -1,_POSIX_TRACE_EVENT_FILTER = -1,_POSIX_TRACE_INHERIT = -1,_POSIX_TRACE_LOG = -1,_POSIX_TYPED_MEMORY_OBJECTS = -1,};
enum MACRO___DARWIN_IPPORT {__DARWIN_IPPORT_RESERVED = 1024,};
enum MACRO___DARWIN_LITTLE {__DARWIN_LITTLE_ENDIAN = 1234,__DARWIN_BIG_ENDIAN = 4321,__DARWIN_PDP_ENDIAN = 3412,};
enum MACRO___DARWIN_OPAQUE {__DARWIN_OPAQUE_ARM_THREAD_STATE64 = 0,};
enum MCSessionSendDataMode {MCSessionSendDataReliable = 0x0,MCSessionSendDataUnreliable = 0x1,};
enum MLCRegularizationType {MLCRegularizationTypeNone = 0x0,MLCRegularizationTypeL1 = 0x1,MLCRegularizationTypeL2 = 0x2,};
typedef NSArray MPSCNNLossLabelsBatch;
enum MTLBinaryArchiveError {MTLBinaryArchiveErrorNone = 0x0,MTLBinaryArchiveErrorInvalidFile = 0x1,MTLBinaryArchiveErrorUnexpectedElement = 0x2,MTLBinaryArchiveErrorCompilationFailure = 0x3,};
enum MTLCaptureDestination {MTLCaptureDestinationDeveloperTools = 0x1,MTLCaptureDestinationGPUTraceDocument = 0x2,};
enum MTLCommandBufferError {MTLCommandBufferErrorNone = 0x0,MTLCommandBufferErrorInternal = 0x1,MTLCommandBufferErrorTimeout = 0x2,MTLCommandBufferErrorPageFault = 0x3,MTLCommandBufferErrorBlacklisted = 0x4,MTLCommandBufferErrorNotPermitted = 0x7,MTLCommandBufferErrorOutOfMemory = 0x8,MTLCommandBufferErrorInvalidResource = 0x9,MTLCommandBufferErrorMemoryless = 0xA,MTLCommandBufferErrorDeviceRemoved = 0xB,};
enum MTLHazardTrackingMode {MTLHazardTrackingModeDefault = 0x0,MTLHazardTrackingModeUntracked = 0x1,MTLHazardTrackingModeTracked = 0x2,};
enum MTLSamplerAddressMode {MTLSamplerAddressModeClampToEdge = 0x0,MTLSamplerAddressModeMirrorClampToEdge = 0x1,MTLSamplerAddressModeRepeat = 0x2,MTLSamplerAddressModeMirrorRepeat = 0x3,MTLSamplerAddressModeClampToZero = 0x4,MTLSamplerAddressModeClampToBorderColor = 0x5,};
enum MTLSamplerBorderColor {MTLSamplerBorderColorTransparentBlack = 0x0,MTLSamplerBorderColorOpaqueBlack = 0x1,MTLSamplerBorderColorOpaqueWhite = 0x2,};
enum MTLVertexStepFunction {MTLVertexStepFunctionConstant = 0x0,MTLVertexStepFunctionPerVertex = 0x1,MTLVertexStepFunctionPerInstance = 0x2,MTLVertexStepFunctionPerPatch = 0x3,MTLVertexStepFunctionPerPatchControlPoint = 0x4,};
enum NEAppPushManagerError {NEAppPushManagerErrorConfigurationInvalid = 0x1,NEAppPushManagerErrorConfigurationNotLoaded = 0x2,NEAppPushManagerErrorInternalError = 0x3,NEAppPushManagerErrorInactiveSession = 0x4,};
enum NEFilterDataAttribute {NEFilterDataAttributeHasIPHeader = 0x1,};
typedef void *NEFilterPacketHandler;
enum NEHotspotHelperResult {kNEHotspotHelperResultSuccess = 0x0,kNEHotspotHelperResultFailure = 0x1,kNEHotspotHelperResultUIRequired = 0x2,kNEHotspotHelperResultCommandNotRecognized = 0x3,kNEHotspotHelperResultAuthenticationRequired = 0x4,kNEHotspotHelperResultUnsupportedNetwork = 0x5,kNEHotspotHelperResultTemporaryFailure = 0x6,};
enum NENetworkRuleProtocol {NENetworkRuleProtocolAny = 0x0,NENetworkRuleProtocolTCP = 0x1,NENetworkRuleProtocolUDP = 0x2,};
enum NETunnelProviderError {NETunnelProviderErrorNetworkSettingsInvalid = 0x1,NETunnelProviderErrorNetworkSettingsCanceled = 0x2,NETunnelProviderErrorNetworkSettingsFailed = 0x3,};
enum NFCFeliCaEncryptionId {NFCFeliCaEncryptionIdAES = 0x4F,NFCFeliCaEncryptionIdAES_DES = 0x41,EncryptionIdAES = 0x4F,EncryptionIdAES_DES = 0x41,};
enum NSEnergyFormatterUnit {NSEnergyFormatterUnitJoule = 0xB,NSEnergyFormatterUnitKilojoule = 0xE,NSEnergyFormatterUnitCalorie = 0x701,NSEnergyFormatterUnitKilocalorie = 0x702,};
enum NSFormattingUnitStyle {NSFormattingUnitStyleShort = 0x1,NSFormattingUnitStyleMedium = 0x2,NSFormattingUnitStyleLong = 0x3,};
enum NSLengthFormatterUnit {NSLengthFormatterUnitMillimeter = 0x8,NSLengthFormatterUnitCentimeter = 0x9,NSLengthFormatterUnitMeter = 0xB,NSLengthFormatterUnitKilometer = 0xE,NSLengthFormatterUnitInch = 0x501,NSLengthFormatterUnitFoot = 0x502,NSLengthFormatterUnitYard = 0x503,NSLengthFormatterUnitMile = 0x504,};
enum NSSearchPathDirectory {NSApplicationDirectory = 0x1,NSDemoApplicationDirectory = 0x2,NSDeveloperApplicationDirectory = 0x3,NSAdminApplicationDirectory = 0x4,NSLibraryDirectory = 0x5,NSDeveloperDirectory = 0x6,NSUserDirectory = 0x7,NSDocumentationDirectory = 0x8,NSDocumentDirectory = 0x9,NSCoreServiceDirectory = 0xA,NSAutosavedInformationDirectory = 0xB,NSDesktopDirectory = 0xC,NSCachesDirectory = 0xD,NSApplicationSupportDirectory = 0xE,NSDownloadsDirectory = 0xF,NSInputMethodsDirectory = 0x10,NSMoviesDirectory = 0x11,NSMusicDirectory = 0x12,NSPicturesDirectory = 0x13,NSPrinterDescriptionDirectory = 0x14,NSSharedPublicDirectory = 0x15,NSPreferencePanesDirectory = 0x16,NSApplicationScriptsDirectory = 0x17,NSItemReplacementDirectory = 0x63,NSAllApplicationsDirectory = 0x64,NSAllLibrariesDirectory = 0x65,NSTrashDirectory = 0x66,};
struct NSURLProtocolInternal;
struct NSURLResponseInternal;
enum NSURLSessionTaskState {NSURLSessionTaskStateRunning = 0x0,NSURLSessionTaskStateSuspended = 0x1,NSURLSessionTaskStateCanceling = 0x2,NSURLSessionTaskStateCompleted = 0x3,};
struct PDFDestinationPrivate;
enum PHAssetCollectionType {PHAssetCollectionTypeAlbum = 0x1,PHAssetCollectionTypeSmartAlbum = 0x2,PHAssetCollectionTypeMoment = 0x3,};
enum PHAuthorizationStatus {PHAuthorizationStatusNotDetermined = 0x0,PHAuthorizationStatusRestricted = 0x1,PHAuthorizationStatusDenied = 0x2,PHAuthorizationStatusAuthorized = 0x3,PHAuthorizationStatusLimited = 0x4,};
enum PKAddPaymentPassError {PKAddPaymentPassErrorUnsupported = 0x0,PKAddPaymentPassErrorUserCancelled = 0x1,PKAddPaymentPassErrorSystemCancelled = 0x2,};
enum PKAddPaymentPassStyle {PKAddPaymentPassStylePayment = 0x0,PKAddPaymentPassStyleAccess = 0x1,};
typedef void *SCNBufferBindingBlock;
typedef void *SCNParticleEventBlock;
typedef  __SCNetworkInterface *SCNetworkInterfaceRef;
enum SFAuthenticationError {SFAuthenticationErrorCanceledLogin = 0x1,};
typedef void *SKFieldForceEvaluator;
enum SKParticleRenderOrder {SKParticleRenderOrderOldestLast = 0x0,SKParticleRenderOrderOldestFirst = 0x1,SKParticleRenderOrderDontCare = 0x2,};
enum SKProductDiscountType {SKProductDiscountTypeIntroductory = 0x0,SKProductDiscountTypeSubscription = 0x1,};
enum SKTransitionDirection {SKTransitionDirectionUp = 0x0,SKTransitionDirectionDown = 0x1,SKTransitionDirectionRight = 0x2,SKTransitionDirectionLeft = 0x3,};
enum SparseFactorization_t {SparseFactorizationCholesky = 0x0,SparseFactorizationLDLT = 0x1,SparseFactorizationLDLTUnpivoted = 0x2,SparseFactorizationLDLTSBK = 0x3,SparseFactorizationLDLTTPP = 0x4,SparseFactorizationQR = 0x28,SparseFactorizationCholeskyAtA = 0x29,};
enum TKSmartCardPINCharset {TKSmartCardPINCharsetNumeric = 0x0,TKSmartCardPINCharsetAlphanumeric = 0x1,TKSmartCardPINCharsetUpperAlphanumeric = 0x2,};
enum UGraphemeClusterBreak {U_GCB_OTHER = 0x0,U_GCB_CONTROL = 0x1,U_GCB_CR = 0x2,U_GCB_EXTEND = 0x3,U_GCB_L = 0x4,U_GCB_LF = 0x5,U_GCB_LV = 0x6,U_GCB_LVT = 0x7,U_GCB_T = 0x8,U_GCB_V = 0x9,U_GCB_SPACING_MARK = 0xA,U_GCB_PREPEND = 0xB,U_GCB_REGIONAL_INDICATOR = 0xC,U_GCB_E_BASE = 0xD,U_GCB_E_BASE_GAZ = 0xE,U_GCB_E_MODIFIER = 0xF,U_GCB_GLUE_AFTER_ZWJ = 0x10,U_GCB_ZWJ = 0x11,U_GCB_COUNT = 0x12,};
enum UIBarButtonSystemItem {UIBarButtonSystemItemDone = 0x0,UIBarButtonSystemItemCancel = 0x1,UIBarButtonSystemItemEdit = 0x2,UIBarButtonSystemItemSave = 0x3,UIBarButtonSystemItemAdd = 0x4,UIBarButtonSystemItemFlexibleSpace = 0x5,UIBarButtonSystemItemFixedSpace = 0x6,UIBarButtonSystemItemCompose = 0x7,UIBarButtonSystemItemReply = 0x8,UIBarButtonSystemItemAction = 0x9,UIBarButtonSystemItemOrganize = 0xA,UIBarButtonSystemItemBookmarks = 0xB,UIBarButtonSystemItemSearch = 0xC,UIBarButtonSystemItemRefresh = 0xD,UIBarButtonSystemItemStop = 0xE,UIBarButtonSystemItemCamera = 0xF,UIBarButtonSystemItemTrash = 0x10,UIBarButtonSystemItemPlay = 0x11,UIBarButtonSystemItemPause = 0x12,UIBarButtonSystemItemRewind = 0x13,UIBarButtonSystemItemFastForward = 0x14,UIBarButtonSystemItemUndo = 0x15,UIBarButtonSystemItemRedo = 0x16,UIBarButtonSystemItemPageCurl = 0x17,UIBarButtonSystemItemClose = 0x18,};
enum UIImpactFeedbackStyle {UIImpactFeedbackStyleLight = 0x0,UIImpactFeedbackStyleMedium = 0x1,UIImpactFeedbackStyleHeavy = 0x2,UIImpactFeedbackStyleSoft = 0x3,UIImpactFeedbackStyleRigid = 0x4,};
enum UIPrintInfoOutputType {UIPrintInfoOutputGeneral = 0x0,UIPrintInfoOutputPhoto = 0x1,UIPrintInfoOutputGrayscale = 0x2,UIPrintInfoOutputPhotoGrayscale = 0x3,};
enum UITableViewDropIntent {UITableViewDropIntentUnspecified = 0x0,UITableViewDropIntentInsertAtDestinationIndexPath = 0x1,UITableViewDropIntentInsertIntoDestinationIndexPath = 0x2,UITableViewDropIntentAutomatic = 0x3,};
enum UITextDropEditability {UITextDropEditabilityNo = 0x0,UITextDropEditabilityTemporary = 0x1,UITextDropEditabilityYes = 0x2,};
enum UITextInteractionMode {UITextInteractionModeEditable = 0x0,UITextInteractionModeNonEditable = 0x1,};
enum UITextItemInteraction {UITextItemInteractionInvokeDefaultAction = 0x0,UITextItemInteractionPresentActions = 0x1,UITextItemInteractionPreview = 0x2,};
enum UITextLayoutDirection {UITextLayoutDirectionRight = 0x2,UITextLayoutDirectionLeft = 0x3,UITextLayoutDirectionUp = 0x4,UITextLayoutDirectionDown = 0x5,};
enum UITextSmartDashesType {UITextSmartDashesTypeDefault = 0x0,UITextSmartDashesTypeNo = 0x1,UITextSmartDashesTypeYes = 0x2,};
enum UITextSmartQuotesType {UITextSmartQuotesTypeDefault = 0x0,UITextSmartQuotesTypeNo = 0x1,UITextSmartQuotesTypeYes = 0x2,};
enum UIVibrancyEffectStyle {UIVibrancyEffectStyleLabel = 0x0,UIVibrancyEffectStyleSecondaryLabel = 0x1,UIVibrancyEffectStyleTertiaryLabel = 0x2,UIVibrancyEffectStyleQuaternaryLabel = 0x3,UIVibrancyEffectStyleFill = 0x4,UIVibrancyEffectStyleSecondaryFill = 0x5,UIVibrancyEffectStyleTertiaryFill = 0x6,UIVibrancyEffectStyleSeparator = 0x7,};
struct UIWindowSceneDelegate;
enum UNAuthorizationStatus {UNAuthorizationStatusNotDetermined = 0x0,UNAuthorizationStatusDenied = 0x1,UNAuthorizationStatusAuthorized = 0x2,UNAuthorizationStatusProvisional = 0x3,UNAuthorizationStatusEphemeral = 0x4,};
enum UNNotificationSetting {UNNotificationSettingNotSupported = 0x0,UNNotificationSettingDisabled = 0x1,UNNotificationSettingEnabled = 0x2,};
enum UNShowPreviewsSetting {UNShowPreviewsSettingAlways = 0x0,UNShowPreviewsSettingWhenAuthenticated = 0x1,UNShowPreviewsSettingNever = 0x2,};
enum VSAccountAccessStatus {VSAccountAccessStatusNotDetermined = 0x0,VSAccountAccessStatusRestricted = 0x1,VSAccountAccessStatusDenied = 0x2,VSAccountAccessStatusGranted = 0x3,};
typedef OpaqueVTMultiPassStorage *VTMultiPassStorageRef;
struct WKOpenPanelParameters;
struct _CFHTTPAuthentication;
struct __CFNetServiceBrowser;
struct __CFNetServiceMonitor;
struct __CVMetalTextureCache;
struct __SCNetworkConnection;
enum __ns_update_operation {ns_uop_delete = 0x0,ns_uop_add = 0x1,ns_uop_max = 0x2,};
struct _xmlRelaxNGParserCtxt;
typedef __darwin_arm_exception_state arm_exception_state_t;
typedef void *axr_data_destructor_t;
typedef void *axr_encoder_storage_t;
typedef void (*cache_key_retain_cb_t)(void *, void **, void *);
enum compression_algorithm {COMPRESSION_LZ4 = 0x100,COMPRESSION_ZLIB = 0x205,COMPRESSION_LZMA = 0x306,COMPRESSION_LZ4_RAW = 0x101,COMPRESSION_LZFSE = 0x801,};
typedef void *dispatch_io_handler_t;
struct dispatch_queue_attr_s;
typedef NSObject *dispatch_queue_attr_t;
typedef NSObject *dispatch_queue_main_t;
typedef host_load_info host_load_info_data_t;
typedef int kmod_control_flavor_t;
typedef char kobject_description_t[512];
typedef mach_vm_info_region mach_vm_info_region_t;
typedef NSObject *nw_connection_group_t;
enum nw_connection_state_t {nw_connection_state_invalid = 0x0,nw_connection_state_waiting = 0x1,nw_connection_state_preparing = 0x2,nw_connection_state_ready = 0x3,nw_connection_state_failed = 0x4,nw_connection_state_cancelled = 0x5,};
typedef unsigned char nw_ethernet_address_t[6];
typedef NSObject *nw_ethernet_channel_t;
typedef NSObject *nw_group_descriptor_t;
typedef NSObject *nw_protocol_options_t;
typedef policy_rr_base policy_rr_base_data_t;
typedef policy_rr_info policy_rr_info_data_t;
enum quadrature_integrator {QUADRATURE_INTEGRATE_QNG = 0x0,QUADRATURE_INTEGRATE_QAG = 0x1,QUADRATURE_INTEGRATE_QAGS = 0x2,};
typedef int (*rbto_compare_nodes_fn)(void *,  void *,  void *);
typedef void *sec_protocol_verify_t;
typedef simd_packed_double2 simd__packed__double2;
typedef simd_packed_double4 simd__packed__double4;
typedef simd_packed_double8 simd__packed__double8;
typedef simd_packed_float16 simd__packed__float16;
typedef simd_packed_short16 simd__packed__short16;
typedef simd_packed_short32 simd__packed__short32;
typedef simd_packed_uchar16 simd__packed__uchar16;
typedef simd_packed_uchar32 simd__packed__uchar32;
typedef simd_packed_uchar64 simd__packed__uchar64;
typedef simd_packed_ushort2 simd__packed__ushort2;
typedef simd_packed_ushort4 simd__packed__ushort4;
typedef simd_packed_ushort8 simd__packed__ushort8;
typedef int (*sqlite3_loadext_entry)(sqlite3 *, char **,  sqlite3_api_routines *);
struct sqlite3_mutex_methods {int (*xMutexInit)(void);int (*xMutexEnd)(void);sqlite3_mutex *(*xMutexAlloc)(int);void (*xMutexFree)(sqlite3_mutex *);void (*xMutexEnter)(sqlite3_mutex *);int (*xMutexTry)(sqlite3_mutex *);void (*xMutexLeave)(sqlite3_mutex *);int (*xMutexHeld)(sqlite3_mutex *);int (*xMutexNotheld)(sqlite3_mutex *);};
typedef std____1____type_list_std____align_type_unsigned_char___std____type_list_std____align_type_unsigned_short___std____type_list_std____align_type_unsigned_int___std____type_list_std____align_type_unsigned_long___std____type_list_std____align_type_unsigned_long_long___std____type_list_std____align_type_double___std____type_list_std____align_type_long_double___std____type_list_std____align_type_std____struct_double___std____type_list_std____align_type_std____struct_double4___std____type_list_std____align_type_int__P___std____nat__________ std____1____all_types;
typedef std____1__atomic_bool_ std____1__atomic_bool;
typedef std____1__atomic_char_ std____1__atomic_char;
struct std____1__atomic_flag {char __a_;};
typedef std____1__atomic_long_ std____1__atomic_long;
typedef std____1__atomic_unsigned_int_ std____1__atomic_uint;
struct std____1__minus_void_ {};
typedef std____1__basic_string_view_char_ std____1__string_view;
struct std__logic_error_vtbl; 
struct std__range_error_vtbl; 
typedef task_dyld_info task_dyld_info_data_t;
typedef int thread_state_flavor_t;
struct vDSP_DFT_SetupStructD;
typedef int vm_page_info_flavor_t;
typedef int vm_region_info_data_t[1024];
typedef vol_attributes_attr vol_attributes_attr_t;
enum xmlElementContentType {XML_ELEMENT_CONTENT_PCDATA = 0x1,XML_ELEMENT_CONTENT_ELEMENT = 0x2,XML_ELEMENT_CONTENT_SEQ = 0x3,XML_ELEMENT_CONTENT_OR = 0x4,};
typedef int (*xmlInputCloseCallback)(void *);
typedef int (*xmlInputMatchCallback)( char *);
typedef void *(*xmlOutputOpenCallback)( char *);
typedef _xmlXPathParserContext xmlXPathParserContext;
struct AAArchiveStream_impl;
enum ARMeshClassification {ARMeshClassificationNone = 0x0,ARMeshClassificationWall = 0x1,ARMeshClassificationFloor = 0x2,ARMeshClassificationCeiling = 0x3,ARMeshClassificationTable = 0x4,ARMeshClassificationSeat = 0x5,ARMeshClassificationWindow = 0x6,ARMeshClassificationDoor = 0x7,};
enum ARWorldMappingStatus {ARWorldMappingStatusNotAvailable = 0x0,ARWorldMappingStatusLimited = 0x1,ARWorldMappingStatusExtending = 0x2,ARWorldMappingStatusMapped = 0x3,};
enum ASAuthorizationError {ASAuthorizationErrorUnknown = 0x3E8,ASAuthorizationErrorCanceled = 0x3E9,ASAuthorizationErrorInvalidResponse = 0x3EA,ASAuthorizationErrorNotHandled = 0x3EB,ASAuthorizationErrorFailed = 0x3EC,};
enum ASExtensionErrorCode {ASExtensionErrorCodeFailed = 0x0,ASExtensionErrorCodeUserCanceled = 0x1,ASExtensionErrorCodeUserInteractionRequired = 0x64,ASExtensionErrorCodeCredentialIdentityNotFound = 0x65,};
typedef UIWindow *ASPresentationAnchor;
enum AUParameterEventType {kParameterEvent_Immediate = 0x1,kParameterEvent_Ramped = 0x2,};
typedef UIViewController AUViewControllerBase;
struct AVAssetTrackInternal;
enum AVAudioSessionIOType {AVAudioSessionIOTypeNotSpecified = 0x0,AVAudioSessionIOTypeAggregated = 0x1,};
struct AVMovieTrackInternal;
struct AVPlayerItemInternal;
enum AVPlayerLooperStatus {AVPlayerLooperStatusUnknown = 0x0,AVPlayerLooperStatusReady = 0x1,AVPlayerLooperStatusFailed = 0x2,AVPlayerLooperStatusCancelled = 0x3,};
enum AudioBalanceFadeType {kAudioBalanceFadeType_MaxUnityGain = 0x0,kAudioBalanceFadeType_EqualPower = 0x1,};
enum AudioFilePermissions {kAudioFileReadPermission = 0x1,kAudioFileWritePermission = 0x2,kAudioFileReadWritePermission = 0x3,};
enum BNNSPointerSpecifier {BNNSPointerSpecifierAlpha = 0x0,BNNSPointerSpecifierBeta = 0x1,};
typedef void (*CFBagApplierFunction)( void *, void *);
enum CFDateFormatterStyle {kCFDateFormatterNoStyle = 0x0,kCFDateFormatterShortStyle = 0x1,kCFDateFormatterMediumStyle = 0x2,kCFDateFormatterLongStyle = 0x3,kCFDateFormatterFullStyle = 0x4,};
typedef __CFNumberFormatter *CFNumberFormatterRef;
enum CFPropertyListFormat {kCFPropertyListOpenStepFormat = 0x1,kCFPropertyListXMLFormat_v1_0 = 0x64,kCFPropertyListBinaryFormat_v1_0 = 0xC8,};
typedef __CFRunLoopObserver *CFRunLoopObserverRef;
typedef void (*CFSetApplierFunction)( void *, void *);
typedef int CFSocketNativeHandle;
typedef __CFStringTokenizer *CFStringTokenizerRef;
typedef  void *(*CFTreeRetainCallBack)( void *);
enum CGImageByteOrderInfo {kCGImageByteOrderMask = 0x7000,kCGImageByteOrderDefault = 0x0,kCGImageByteOrder16Little = 0x1000,kCGImageByteOrder32Little = 0x2000,kCGImageByteOrder16Big = 0x3000,kCGImageByteOrder32Big = 0x4000,};
enum CLKRelativeDateStyle {CLKRelativeDateStyleNatural = 0x0,CLKRelativeDateStyleOffset = 0x1,CLKRelativeDateStyleTimer = 0x2,CLKRelativeDateStyleNaturalAbbreviated = 0x3,CLKRelativeDateStyleOffsetShort = 0x4,CLKRelativeDateStyleNaturalFull = 0x5,};
enum CMPedometerEventType {CMPedometerEventTypePause = 0x0,CMPedometerEventTypeResume = 0x1,};
enum CMTimeRoundingMethod {kCMTimeRoundingMethod_RoundHalfAwayFromZero = 0x1,kCMTimeRoundingMethod_RoundTowardZero = 0x2,kCMTimeRoundingMethod_RoundAwayFromZero = 0x3,kCMTimeRoundingMethod_QuickTime = 0x4,kCMTimeRoundingMethod_RoundTowardPositiveInfinity = 0x5,kCMTimeRoundingMethod_RoundTowardNegativeInfinity = 0x6,kCMTimeRoundingMethod_Default = 0x1,};
typedef void *CPAlertActionHandler;
enum CPMessageLeadingItem {CPMessageLeadingItemNone = 0x0,CPMessageLeadingItemPin = 0x1,CPMessageLeadingItemStar = 0x2,};
enum CPTimeRemainingColor {CPTimeRemainingColorDefault = 0x0,CPTimeRemainingColorGreen = 0x1,CPTimeRemainingColorOrange = 0x2,CPTimeRemainingColorRed = 0x3,};
enum CTLineTruncationType {kCTLineTruncationStart = 0x0,kCTLineTruncationEnd = 0x1,kCTLineTruncationMiddle = 0x2,};
typedef __CVPixelBufferPool *CVPixelBufferPoolRef;
typedef DSPDoubleSplitComplex DOUBLE_COMPLEX_SPLIT;
enum GCDeviceBatteryState {GCDeviceBatteryStateUnknown = 0xFFFFFFFFFFFFFFFF,GCDeviceBatteryStateDischarging = 0x0,GCDeviceBatteryStateCharging = 0x1,GCDeviceBatteryStateFull = 0x2,};
enum GKRTreeSplitStrategy {GKRTreeSplitStrategyHalve = 0x0,GKRTreeSplitStrategyLinear = 0x1,GKRTreeSplitStrategyQuadratic = 0x2,GKRTreeSplitStrategyReduceOverlap = 0x3,};
struct GLKEffectPropertyPrv;
enum GLKTextureInfoOrigin {GLKTextureInfoOriginUnknown = 0x0,GLKTextureInfoOriginTopLeft = 0x1,GLKTextureInfoOriginBottomLeft = 0x2,};
enum ICDeviceLocationType {ICDeviceLocationTypeLocal = 0x100,ICDeviceLocationTypeShared = 0x200,ICDeviceLocationTypeBonjour = 0x400,ICDeviceLocationTypeBluetooth = 0x800,};
enum ICScannerFeatureType {ICScannerFeatureTypeEnumeration = 0x0,ICScannerFeatureTypeRange = 0x1,ICScannerFeatureTypeBoolean = 0x2,ICScannerFeatureTypeTemplate = 0x3,};
enum INLocationSearchType {INLocationSearchTypeUnknown = 0x0,INLocationSearchTypeByLocationTrigger = 0x1,};
enum INPlaybackRepeatMode {INPlaybackRepeatModeUnknown = 0x0,INPlaybackRepeatModeNone = 0x1,INPlaybackRepeatModeAll = 0x2,INPlaybackRepeatModeOne = 0x3,};
enum IOSurfaceSubsampling {kIOSurfaceSubsamplingUnknown = 0x0,kIOSurfaceSubsamplingNone = 0x1,kIOSurfaceSubsampling422 = 0x2,kIOSurfaceSubsampling420 = 0x3,kIOSurfaceSubsampling411 = 0x4,};
typedef unsigned int JSPropertyAttributes;
enum MACRO_COREAUDIOTYPES {COREAUDIOTYPES_VERSION = 20150414,};
enum MACRO_COREFOUNDATION {COREFOUNDATION_CFPLUGINCOM_SEPARATE = 1,};
enum MACRO_DISPATCH_APPLY {DISPATCH_APPLY_AUTO_AVAILABLE = 1,DISPATCH_QUEUE_PRIORITY_HIGH = 2,DISPATCH_QUEUE_PRIORITY_DEFAULT = 0,DISPATCH_QUEUE_PRIORITY_LOW = -2,};
enum MACRO_MACH_EXCEPTION {MACH_EXCEPTION_ERRORS = 0x40000000,MACH_EXCEPTION_CODES = 0x80000000,};
enum MACRO_MAXHOSTNAMELEN {MAXHOSTNAMELEN = 256,};
enum MACRO_NSUNLINKMODULE {NSUNLINKMODULE_OPTION_NONE = 0x0,NSUNLINKMODULE_OPTION_KEEP_MEMORY_MAPPED = 0x1,NSUNLINKMODULE_OPTION_RESET_LAZY_REFERENCES = 0x2,};
enum MACRO_PTHREAD_CREATE {PTHREAD_CREATE_JOINABLE = 1,PTHREAD_CREATE_DETACHED = 2,PTHREAD_INHERIT_SCHED = 1,PTHREAD_EXPLICIT_SCHED = 2,PTHREAD_CANCEL_ENABLE = 1,PTHREAD_CANCEL_DISABLE = 0,PTHREAD_CANCEL_DEFERRED = 2,PTHREAD_CANCEL_ASYNCHRONOUS = 0,PTHREAD_CANCELED = 1,PTHREAD_SCOPE_SYSTEM = 1,PTHREAD_SCOPE_PROCESS = 2,PTHREAD_PROCESS_SHARED = 1,PTHREAD_PROCESS_PRIVATE = 2,PTHREAD_PRIO_NONE = 0,PTHREAD_PRIO_INHERIT = 1,PTHREAD_PRIO_PROTECT = 2,PTHREAD_MUTEX_NORMAL = 0,PTHREAD_MUTEX_ERRORCHECK = 1,PTHREAD_MUTEX_RECURSIVE = 2,PTHREAD_MUTEX_POLICY_FAIRSHARE_NP = 1,PTHREAD_MUTEX_POLICY_FIRSTFIT_NP = 3,};
enum MACRO_RLIMIT_WAKEUPS {RLIMIT_WAKEUPS_MONITOR = 0x1,RLIMIT_CPU_USAGE_MONITOR = 0x2,RLIMIT_THREAD_CPULIMITS = 0x3,RLIMIT_FOOTPRINT_INTERVAL = 0x4,};
enum MACRO_SACK_PERMITTED {TCPOPT_SACK_PERMITTED = 4,TCPOLEN_SACK_PERMITTED = 2,};
enum MACRO_XML_SUBSTITUTE {XML_SUBSTITUTE_NONE = 0,XML_SUBSTITUTE_REF = 1,XML_SUBSTITUTE_PEREF = 2,XML_SUBSTITUTE_BOTH = 3,XML_XPATH_CHECKNS = 1,XML_XPATH_NOVAR = 2,};
enum MACRO__XOPEN_VERSION {_XOPEN_VERSION = 600,_XOPEN_XCU_VERSION = 4,};
enum MACRO___AVAILABILITY {__AVAILABILITY_MACROS_USES_AVAILABILITY = 1,};
enum MACRO___DARWIN_WCHAR {__DARWIN_WCHAR_MIN = 0x80000000,__DARWIN_WEOF = 0xFFFFFFFF,};
enum MACRO___MigTypeCheck {__MigTypeCheck = 1,};
enum MACRO___PRINTFMAXARG {__PRINTFMAXARG = 2,};
enum MACRO_priv_MSG_COUNT {clock_priv_MSG_COUNT = 2,host_priv_MSG_COUNT = 26,};
typedef NSNumber *MIDICIInitiatiorMUID;
enum MKPinAnnotationColor {MKPinAnnotationColorRed = 0x0,MKPinAnnotationColorGreen = 0x1,MKPinAnnotationColorPurple = 0x2,};
enum MKScaleViewAlignment {MKScaleViewAlignmentLeading = 0x0,MKScaleViewAlignmentTrailing = 0x1,};
enum MLMultiArrayDataType {MLMultiArrayDataTypeDouble = 0x10040,MLMultiArrayDataTypeFloat64 = 0x10040,MLMultiArrayDataTypeFloat32 = 0x10020,MLMultiArrayDataTypeFloat = 0x10020,MLMultiArrayDataTypeInt32 = 0x20020,};
enum MPMoviePlaybackState {MPMoviePlaybackStateStopped = 0x0,MPMoviePlaybackStatePlaying = 0x1,MPMoviePlaybackStatePaused = 0x2,MPMoviePlaybackStateInterrupted = 0x3,MPMoviePlaybackStateSeekingForward = 0x4,MPMoviePlaybackStateSeekingBackward = 0x5,};
enum MPMusicPlaybackState {MPMusicPlaybackStateStopped = 0x0,MPMusicPlaybackStatePlaying = 0x1,MPMusicPlaybackStatePaused = 0x2,MPMusicPlaybackStateInterrupted = 0x3,MPMusicPlaybackStateSeekingForward = 0x4,MPMusicPlaybackStateSeekingBackward = 0x5,};
enum MPSCustomKernelIndex {MPSCustomKernelIndexDestIndex = 0x0,MPSCustomKernelIndexSrc0Index = 0x0,MPSCustomKernelIndexSrc1Index = 0x1,MPSCustomKernelIndexSrc2Index = 0x2,MPSCustomKernelIndexSrc3Index = 0x3,MPSCustomKernelIndexSrc4Index = 0x4,MPSCustomKernelIndexUserDataIndex = 0x1E,};
typedef void *MPSGradientNodeBlock;
enum MPSGraphPaddingStyle {MPSGraphPaddingStyleExplicit = 0x0,MPSGraphPaddingStyleTF_VALID = 0x1,MPSGraphPaddingStyleTF_SAME = 0x2,};
enum MPSStateResourceType {MPSStateResourceTypeNone = 0x0,MPSStateResourceTypeBuffer = 0x1,MPSStateResourceTypeTexture = 0x2,};
enum MPSTemporalWeighting {MPSTemporalWeightingAverage = 0x0,MPSTemporalWeightingExponentialMovingAverage = 0x1,};
typedef UIWindow *MSPresentationAnchor;
enum MessageComposeResult {MessageComposeResultCancelled = 0x0,MessageComposeResultSent = 0x1,MessageComposeResultFailed = 0x2,};
enum NEFilterManagerError {NEFilterManagerErrorConfigurationInvalid = 0x1,NEFilterManagerErrorConfigurationDisabled = 0x2,NEFilterManagerErrorConfigurationStale = 0x3,NEFilterManagerErrorConfigurationCannotBeRemoved = 0x4,NEFilterManagerErrorConfigurationPermissionDenied = 0x5,NEFilterManagerErrorConfigurationInternalError = 0x6,};
enum NEFilterManagerGrade {NEFilterManagerGradeFirewall = 0x1,NEFilterManagerGradeInspector = 0x2,};
enum NEOnDemandRuleAction {NEOnDemandRuleActionConnect = 0x1,NEOnDemandRuleActionDisconnect = 0x2,NEOnDemandRuleActionEvaluateConnection = 0x3,NEOnDemandRuleActionIgnore = 0x4,};
enum NEProviderStopReason {NEProviderStopReasonNone = 0x0,NEProviderStopReasonUserInitiated = 0x1,NEProviderStopReasonProviderFailed = 0x2,NEProviderStopReasonNoNetworkAvailable = 0x3,NEProviderStopReasonUnrecoverableNetworkChange = 0x4,NEProviderStopReasonProviderDisabled = 0x5,NEProviderStopReasonAuthenticationCanceled = 0x6,NEProviderStopReasonConfigurationFailed = 0x7,NEProviderStopReasonIdleTimeout = 0x8,NEProviderStopReasonConfigurationDisabled = 0x9,NEProviderStopReasonConfigurationRemoved = 0xA,NEProviderStopReasonSuperceded = 0xB,NEProviderStopReasonUserLogout = 0xC,NEProviderStopReasonUserSwitch = 0xD,NEProviderStopReasonConnectionFailed = 0xE,NEProviderStopReasonSleep = 0xF,NEProviderStopReasonAppUpdate = 0x10,};
enum NEVPNIKEv2TLSVersion {NEVPNIKEv2TLSVersionDefault = 0x0,NEVPNIKEv2TLSVersion1_0 = 0x1,NEVPNIKEv2TLSVersion1_1 = 0x2,NEVPNIKEv2TLSVersion1_2 = 0x3,};
enum NKIssueContentStatus {NKIssueContentStatusNone = 0x0,NKIssueContentStatusDownloading = 0x1,NKIssueContentStatusAvailable = 0x2,};
enum NLTaggerAssetsResult {NLTaggerAssetsResultAvailable = 0x0,NLTaggerAssetsResultNotAvailable = 0x1,NLTaggerAssetsResultError = 0x2,};
enum NSDateFormatterStyle {NSDateFormatterNoStyle = 0x0,NSDateFormatterShortStyle = 0x1,NSDateFormatterMediumStyle = 0x2,NSDateFormatterLongStyle = 0x3,NSDateFormatterFullStyle = 0x4,};
struct NSHTTPCookieInternal;
enum NSPropertyListFormat {NSPropertyListOpenStepFormat = 0x1,NSPropertyListXMLFormat_v1_0 = 0x64,NSPropertyListBinaryFormat_v1_0 = 0xC8,};
typedef int NSSocketNativeHandle;
struct NSURLRequestInternal;
enum NWTCPConnectionState {NWTCPConnectionStateInvalid = 0x0,NWTCPConnectionStateConnecting = 0x1,NWTCPConnectionStateWaiting = 0x2,NWTCPConnectionStateConnected = 0x3,NWTCPConnectionStateDisconnected = 0x4,NWTCPConnectionStateCancelled = 0x5,};
typedef NumVersionVariant *NumVersionVariantPtr;
struct OpaqueAudioComponent;
struct OpaqueAudioConverter;
struct OpaqueJSContextGroup;
struct PDFAccessibilityNode;
struct PDFBorderPrivateVars;
enum PDFWidgetControlType {kPDFWidgetUnknownControl = 0xFFFFFFFFFFFFFFFF,kPDFWidgetPushButtonControl = 0x0,kPDFWidgetRadioButtonControl = 0x1,kPDFWidgetCheckBoxControl = 0x2,};
enum PHAssetEditOperation {PHAssetEditOperationDelete = 0x1,PHAssetEditOperationContent = 0x2,PHAssetEditOperationProperties = 0x3,};
enum PHAssetPlaybackStyle {PHAssetPlaybackStyleUnsupported = 0x0,PHAssetPlaybackStyleImage = 0x1,PHAssetPlaybackStyleImageAnimated = 0x2,PHAssetPlaybackStyleLivePhoto = 0x3,PHAssetPlaybackStyleVideo = 0x4,PHAssetPlaybackStyleVideoLooping = 0x5,};
enum PHCollectionListType {PHCollectionListTypeMomentList = 0x1,PHCollectionListTypeFolder = 0x2,PHCollectionListTypeSmartFolder = 0x3,};
enum PHLivePhotoFrameType {PHLivePhotoFrameTypePhoto = 0x0,PHLivePhotoFrameTypeVideo = 0x1,};
enum PKAddPassButtonStyle {PKAddPassButtonStyleBlack = 0x0,PKAddPassButtonStyleBlackOutline = 0x1,};
enum PKPaymentButtonStyle {PKPaymentButtonStyleWhite = 0x0,PKPaymentButtonStyleWhiteOutline = 0x1,PKPaymentButtonStyleBlack = 0x2,PKPaymentButtonStyleAutomatic = 0x3,};
enum RPRecordingErrorCode {RPRecordingErrorUnknown = 0xFFFFFFFFFFFFE958,RPRecordingErrorUserDeclined = 0xFFFFFFFFFFFFE957,RPRecordingErrorDisabled = 0xFFFFFFFFFFFFE956,RPRecordingErrorFailedToStart = 0xFFFFFFFFFFFFE955,RPRecordingErrorFailed = 0xFFFFFFFFFFFFE954,RPRecordingErrorInsufficientStorage = 0xFFFFFFFFFFFFE953,RPRecordingErrorInterrupted = 0xFFFFFFFFFFFFE952,RPRecordingErrorContentResize = 0xFFFFFFFFFFFFE951,RPRecordingErrorBroadcastInvalidSession = 0xFFFFFFFFFFFFE950,RPRecordingErrorSystemDormancy = 0xFFFFFFFFFFFFE94F,RPRecordingErrorEntitlements = 0xFFFFFFFFFFFFE94E,RPRecordingErrorActivePhoneCall = 0xFFFFFFFFFFFFE94D,RPRecordingErrorFailedToSave = 0xFFFFFFFFFFFFE94C,RPRecordingErrorCarPlay = 0xFFFFFFFFFFFFE94B,RPRecordingErrorFailedApplicationConnectionInvalid = 0xFFFFFFFFFFFFE94A,RPRecordingErrorFailedApplicationConnectionInterrupted = 0xFFFFFFFFFFFFE949,RPRecordingErrorFailedNoMatchingApplicationContext = 0xFFFFFFFFFFFFE948,RPRecordingErrorFailedMediaServicesFailure = 0xFFFFFFFFFFFFE947,RPRecordingErrorVideoMixingFailure = 0xFFFFFFFFFFFFE946,RPRecordingErrorBroadcastSetupFailed = 0xFFFFFFFFFFFFE945,RPRecordingErrorFailedToObtainURL = 0xFFFFFFFFFFFFE944,RPRecordingErrorFailedIncorrectTimeStamps = 0xFFFFFFFFFFFFE943,RPRecordingErrorFailedToProcessFirstSample = 0xFFFFFFFFFFFFE942,RPRecordingErrorFailedAssetWriterFailedToSave = 0xFFFFFFFFFFFFE941,RPRecordingErrorFailedNoAssetWriter = 0xFFFFFFFFFFFFE940,RPRecordingErrorFailedAssetWriterInWrongState = 0xFFFFFFFFFFFFE93F,RPRecordingErrorFailedAssetWriterExportFailed = 0xFFFFFFFFFFFFE93E,RPRecordingErrorFailedToRemoveFile = 0xFFFFFFFFFFFFE93D,RPRecordingErrorFailedAssetWriterExportCanceled = 0xFFFFFFFFFFFFE93C,RPRecordingErrorAttemptToStopNonRecording = 0xFFFFFFFFFFFFE93B,RPRecordingErrorAttemptToStartInRecordingState = 0xFFFFFFFFFFFFE93A,RPRecordingErrorPhotoFailure = 0xFFFFFFFFFFFFE939,RPRecordingErrorRecordingInvalidSession = 0xFFFFFFFFFFFFE938,RPRecordingErrorFailedToStartCaptureStack = 0xFFFFFFFFFFFFE937,RPRecordingErrorInvalidParameter = 0xFFFFFFFFFFFFE936,RPRecordingErrorFilePermissions = 0xFFFFFFFFFFFFE935,RPRecordingErrorCodeSuccessful = 0x0,};
enum SCNHitTestSearchMode {SCNHitTestSearchModeClosest = 0x0,SCNHitTestSearchModeAll = 0x1,SCNHitTestSearchModeAny = 0x2,};
enum SCNNodeFocusBehavior {SCNNodeFocusBehaviorNone = 0x0,SCNNodeFocusBehaviorOccluding = 0x1,SCNNodeFocusBehaviorFocusable = 0x2,};
enum SCNParticleBlendMode {SCNParticleBlendModeAdditive = 0x0,SCNParticleBlendModeSubtract = 0x1,SCNParticleBlendModeMultiply = 0x2,SCNParticleBlendModeScreen = 0x3,SCNParticleBlendModeAlpha = 0x4,SCNParticleBlendModeReplace = 0x5,};
enum SCNParticleInputMode {SCNParticleInputModeOverLife = 0x0,SCNParticleInputModeOverDistance = 0x1,SCNParticleInputModeOverOtherProperty = 0x2,};
enum SCNPhysicsFieldScope {SCNPhysicsFieldScopeInsideExtent = 0x0,SCNPhysicsFieldScopeOutsideExtent = 0x1,};
enum SCNSceneSourceStatus {SCNSceneSourceStatusError = 0xFFFFFFFFFFFFFFFF,SCNSceneSourceStatusParsing = 0x4,SCNSceneSourceStatusValidating = 0x8,SCNSceneSourceStatusProcessing = 0xC,SCNSceneSourceStatusComplete = 0x10,};
typedef  __SCNetworkProtocol *SCNetworkProtocolRef;
typedef __SecKeychainSearch *SecKeychainSearchRef;
enum SparseGMRESVariant_t {SparseVariantDQGMRES = 0x0,SparseVariantGMRES = 0x1,SparseVariantFGMRES = 0x2,};
enum TKSmartCardSlotState {TKSmartCardSlotStateMissing = 0x0,TKSmartCardSlotStateEmpty = 0x1,TKSmartCardSlotStateProbing = 0x2,TKSmartCardSlotStateMuteCard = 0x3,TKSmartCardSlotStateValidCard = 0x4,};
struct TKTokenKeychainState;
enum UIBarButtonItemStyle {UIBarButtonItemStylePlain = 0x0,UIBarButtonItemStyleBordered = 0x1,UIBarButtonItemStyleDone = 0x2,};
enum UIBaselineAdjustment {UIBaselineAdjustmentAlignBaselines = 0x0,UIBaselineAdjustmentAlignCenters = 0x1,UIBaselineAdjustmentNone = 0x2,};
enum UIDeviceBatteryState {UIDeviceBatteryStateUnknown = 0x0,UIDeviceBatteryStateUnplugged = 0x1,UIDeviceBatteryStateCharging = 0x2,UIDeviceBatteryStateFull = 0x3,};
enum UIDocumentChangeKind {UIDocumentChangeDone = 0x0,UIDocumentChangeUndone = 0x1,UIDocumentChangeRedone = 0x2,UIDocumentChangeCleared = 0x3,};
enum UIDocumentPickerMode {UIDocumentPickerModeImport = 0x0,UIDocumentPickerModeOpen = 0x1,UIDocumentPickerModeExportToService = 0x2,UIDocumentPickerModeMoveToService = 0x3,};
enum UIImageRenderingMode {UIImageRenderingModeAutomatic = 0x0,UIImageRenderingModeAlwaysOriginal = 0x1,UIImageRenderingModeAlwaysTemplate = 0x2,};
enum UIKeyboardAppearance {UIKeyboardAppearanceDefault = 0x0,UIKeyboardAppearanceDark = 0x1,UIKeyboardAppearanceLight = 0x2,UIKeyboardAppearanceAlert = 0x1,};
enum UIPreviewActionStyle {UIPreviewActionStyleDefault = 0x0,UIPreviewActionStyleSelected = 0x1,UIPreviewActionStyleDestructive = 0x2,};
enum UIStackViewAlignment {UIStackViewAlignmentFill = 0x0,UIStackViewAlignmentLeading = 0x1,UIStackViewAlignmentTop = 0x1,UIStackViewAlignmentFirstBaseline = 0x2,UIStackViewAlignmentCenter = 0x3,UIStackViewAlignmentTrailing = 0x4,UIStackViewAlignmentBottom = 0x4,UIStackViewAlignmentLastBaseline = 0x5,};
enum UIStatusBarAnimation {UIStatusBarAnimationNone = 0x0,UIStatusBarAnimationFade = 0x1,UIStatusBarAnimationSlide = 0x2,};
enum UITableViewCellStyle {UITableViewCellStyleDefault = 0x0,UITableViewCellStyleValue1 = 0x1,UITableViewCellStyleValue2 = 0x2,UITableViewCellStyleSubtitle = 0x3,};
enum UIUserInterfaceIdiom {UIUserInterfaceIdiomUnspecified = 0xFFFFFFFFFFFFFFFF,UIUserInterfaceIdiomPhone = 0x0,UIUserInterfaceIdiomPad = 0x1,UIUserInterfaceIdiomTV = 0x2,UIUserInterfaceIdiomCarPlay = 0x3,UIUserInterfaceIdiomMac = 0x5,};
enum UIUserInterfaceLevel {UIUserInterfaceLevelUnspecified = 0xFFFFFFFFFFFFFFFF,UIUserInterfaceLevelBase = 0x0,UIUserInterfaceLevelElevated = 0x1,};
enum UIUserInterfaceStyle {UIUserInterfaceStyleUnspecified = 0x0,UIUserInterfaceStyleLight = 0x1,UIUserInterfaceStyleDark = 0x2,};
enum UIViewAnimatingState {UIViewAnimatingStateInactive = 0x0,UIViewAnimatingStateActive = 0x1,UIViewAnimatingStateStopped = 0x2,};
enum UIViewAnimationCurve {UIViewAnimationCurveEaseInOut = 0x0,UIViewAnimationCurveEaseIn = 0x1,UIViewAnimationCurveEaseOut = 0x2,UIViewAnimationCurveLinear = 0x3,};
enum UVerticalOrientation {U_VO_ROTATED = 0x0,U_VO_TRANSFORMED_ROTATED = 0x1,U_VO_TRANSFORMED_UPRIGHT = 0x2,U_VO_UPRIGHT = 0x3,};
struct _CAMetalLayerPrivate;
struct __CFAttributedString;
struct __CFUserNotification;
struct __SCNetworkInterface;
struct __objc_symtab_struct {long long sel_ref_cnt;void *refs;short cls_def_count;short cat_def_count;};
struct _xmlRelaxNGValidCtxt;
struct _xmlSchemaParserCtxt;
typedef __darwin_arm_thread_state arm_thread_state32_t;
typedef __darwin_arm_thread_state64 arm_thread_state64_t;
enum axr_property_flags_t {axr_property_flags_unhandled = 0x0,axr_property_flags_part_info_v1 = 0x1,axr_property_flags_part_mask = 0xFF,axr_property_flags_channel_info_v1 = 0x100,axr_property_flags_channel_mask = 0xFF00,};
typedef NSObject *dispatch_semaphore_t;
typedef int exception_behavior_t;
typedef fbootstraptransfer fbootstraptransfer_t;
typedef gss_krb5_lucid_key gss_krb5_lucid_key_t;
typedef host_cpu_load_info *host_cpu_load_info_t;
typedef host_priority_info *host_priority_info_t;
typedef vm_purgeable_info *host_purgable_info_t;
typedef void (*iconv_wide_char_hook)(int, void *);
typedef ipc_info_tree_name ipc_info_tree_name_t;
typedef unsigned int mach_msg_type_name_t;
typedef mach_port_info_ext mach_port_info_ext_t;
typedef unsigned int mach_thread_flavor_t;
typedef mach_timebase_info *mach_timebase_info_t;
typedef mach_vm_read_entry mach_vm_read_entry_t[256];
typedef int *memory_object_info_t;
typedef unsigned long long memory_object_size_t;
typedef NSObject *nw_content_context_t;
typedef NSObject *nw_privacy_context_t;
typedef NSObject *nw_resolver_config_t;
typedef void *nw_ws_pong_handler_t;
struct opaqueCMSampleBuffer;
typedef void print_task_printer_t( char *, ...);
typedef processor_cpu_stat *processor_cpu_stat_t;
typedef routine_descriptor *routine_descriptor_t;
typedef simd_packed_char16 simd__packed__char16;
typedef simd_packed_char32 simd__packed__char32;
typedef simd_packed_char64 simd__packed__char64;
typedef simd_packed_float2 simd__packed__float2;
typedef simd_packed_float4 simd__packed__float4;
typedef simd_packed_float8 simd__packed__float8;
typedef simd_packed_short2 simd__packed__short2;
typedef simd_packed_short4 simd__packed__short4;
typedef simd_packed_short8 simd__packed__short8;
typedef simd_packed_uchar2 simd__packed__uchar2;
typedef simd_packed_uchar4 simd__packed__uchar4;
typedef simd_packed_uchar8 simd__packed__uchar8;
typedef simd_packed_uint16 simd__packed__uint16;
typedef simd_packed_ulong2 simd__packed__ulong2;
typedef simd_packed_ulong4 simd__packed__ulong4;
typedef simd_packed_ulong8 simd__packed__ulong8;
union __attribute__((aligned(16))) simd_packed_ushort16 {char i8[32];short i16[16];int i32[8];long long i64[4];__int128 i128[2];unsigned char u8[32];unsigned short u16[16];unsigned int u32[8];unsigned long long u64[4];__uint128 u128[2];};
union __attribute__((aligned(16))) simd_packed_ushort32 {char i8[64];short i16[32];int i32[16];long long i64[8];__int128 i128[4];unsigned char u8[64];unsigned short u16[32];unsigned int u32[16];unsigned long long u64[8];__uint128 u128[4];};
typedef sparse_m_double *sparse_matrix_double;
typedef void (*startDocumentSAXFunc)(void *);
typedef std____1__atomic_int_ std____1__atomic_int;
struct std____1__ctype_base {};
struct std____1__error_code {int __val_; std____1__error_category *__cat_;};
typedef std____1__integral_constant_bool__false_ std____1__false_type;
struct std____1__less_void_ {};
struct std____1__money_base {};
struct std____1__plus_void_ {};
typedef std____1__basic_streambuf_wchar_t_ std____1__wstreambuf;
typedef std____1__fpos___mbstate_t_ std____1__wstreampos;
typedef std____1__basic_stringbuf_wchar_t_ std____1__wstringbuf;
struct std__bad_typeid_vtbl; 
typedef task_basic_info_32 *task_basic_info_32_t;
typedef task_basic_info_64 *task_basic_info_64_t;
typedef task_power_info_v2 *task_power_info_v2_t;
typedef vm_purgeable_info task_purgable_info_t;
struct vDSP_DFT_SetupStruct;
typedef vm_page_info_basic *vm_page_info_basic_t;
typedef vm_region_top_info *vm_region_top_info_t;
typedef vm_statistics vm_statistics_data_t;
typedef void *(*xmlInputOpenCallback)( char *);
typedef int (*xmlInputReadCallback)(void *, char *, int);
typedef _xmlParserInputBuffer xmlParserInputBuffer;
typedef _xmlParserNodeInfoSeq xmlParserNodeInfoSeq;
typedef struct _xmlRelaxNGParserCtxt xmlRelaxNGParserCtxt;
enum xmlRelaxNGParserFlag {XML_RELAXNGP_NONE = 0x0,XML_RELAXNGP_FREE_DOC = 0x1,XML_RELAXNGP_CRNG = 0x2,};
enum xmlSchemaContentType {XML_SCHEMA_CONTENT_UNKNOWN = 0x0,XML_SCHEMA_CONTENT_EMPTY = 0x1,XML_SCHEMA_CONTENT_ELEMENTS = 0x2,XML_SCHEMA_CONTENT_MIXED = 0x3,XML_SCHEMA_CONTENT_SIMPLE = 0x4,XML_SCHEMA_CONTENT_MIXED_OR_ELEMENTS = 0x5,XML_SCHEMA_CONTENT_BASIC = 0x6,XML_SCHEMA_CONTENT_ANY = 0x7,};
enum xmlSchemaValidOption {XML_SCHEMA_VAL_VC_I_CREATE = 0x1,};
typedef char *(*xmlShellReadlineFunc)(char *);
typedef void (*xmlValidityErrorFunc)(void *,  char *, ...);
enum AAACEQualifierTypes {AA_ACE_QUALIFIER_TYPE_USER = 0x55,AA_ACE_QUALIFIER_TYPE_GROUP = 0x47,AA_ACE_QUALIFIER_TYPE_SID = 0x53,AA_ACE_QUALIFIER_TYPE_UUID = 0x49,};
struct AAEntryACLBlob_impl;
struct AAEntryXATBlob_impl;
enum ABPersonImageFormat {kABPersonImageFormatThumbnail = 0x0,kABPersonImageFormatOriginalSize = 0x2,};
enum ARSegmentationClass {ARSegmentationClassNone = 0x0,ARSegmentationClassPerson = 0xFF,};
typedef void *AUParameterObserver;
enum AVAssetReaderStatus {AVAssetReaderStatusUnknown = 0x0,AVAssetReaderStatusReading = 0x1,AVAssetReaderStatusCompleted = 0x2,AVAssetReaderStatusFailed = 0x3,AVAssetReaderStatusCancelled = 0x4,};
enum AVAssetWriterStatus {AVAssetWriterStatusUnknown = 0x0,AVAssetWriterStatusWriting = 0x1,AVAssetWriterStatusCompleted = 0x2,AVAssetWriterStatusFailed = 0x3,AVAssetWriterStatusCancelled = 0x4,};
enum AVAudioCommonFormat {AVAudioOtherFormat = 0x0,AVAudioPCMFormatFloat32 = 0x1,AVAudioPCMFormatFloat64 = 0x2,AVAudioPCMFormatInt16 = 0x3,AVAudioPCMFormatInt32 = 0x4,};
typedef void *AVAudioNodeTapBlock;
enum AVCaptureColorSpace {AVCaptureColorSpace_sRGB = 0x0,AVCaptureColorSpace_P3_D65 = 0x1,};
enum AVDepthDataAccuracy {AVDepthDataAccuracyRelative = 0x0,AVDepthDataAccuracyAbsolute = 0x1,};
struct AVDepthDataInternal;
typedef AudioQueueBuffer *AudioQueueBufferRef;
enum BNNSPoolingFunction {BNNSPoolingFunctionMax = 0x0,BNNSPoolingFunctionAverageCountIncludePadding = 0x1,BNNSPoolingFunctionAverageCountExcludePadding = 0x2,BNNSPoolingFunctionUnMax = 0x3,BNNSPoolingFunctionL2Norm = 0x4,BNNSPoolingFunctionAverage = 0x1,};
typedef __CFFileDescriptor *CFFileDescriptorRef;
typedef __CFPlugInInstance *CFPlugInInstanceRef;
enum CFStreamErrorDomain {kCFStreamErrorDomainCustom = 0xFFFFFFFFFFFFFFFF,kCFStreamErrorDomainPOSIX = 0x1,kCFStreamErrorDomainMacOSStatus = 0x2,};
enum CFTimeZoneNameStyle {kCFTimeZoneNameStyleStandard = 0x0,kCFTimeZoneNameStyleShortStandard = 0x1,kCFTimeZoneNameStyleDaylightSaving = 0x2,kCFTimeZoneNameStyleShortDaylightSaving = 0x3,kCFTimeZoneNameStyleGeneric = 0x4,kCFTimeZoneNameStyleShortGeneric = 0x5,};
enum CGImageMetadataType {kCGImageMetadataTypeInvalid = 0xFFFFFFFF,kCGImageMetadataTypeDefault = 0x0,kCGImageMetadataTypeString = 0x1,kCGImageMetadataTypeArrayUnordered = 0x2,kCGImageMetadataTypeArrayOrdered = 0x3,kCGImageMetadataTypeAlternateArray = 0x4,kCGImageMetadataTypeAlternateText = 0x5,kCGImageMetadataTypeStructure = 0x6,};
enum CGImageSourceStatus {kCGImageStatusUnexpectedEOF = 0xFFFFFFFB,kCGImageStatusInvalidData = 0xFFFFFFFC,kCGImageStatusUnknownType = 0xFFFFFFFD,kCGImageStatusReadingHeader = 0xFFFFFFFE,kCGImageStatusIncomplete = 0xFFFFFFFF,kCGImageStatusComplete = 0x0,};
typedef void *CIKernelROICallback;
enum CLDeviceOrientation {CLDeviceOrientationUnknown = 0x0,CLDeviceOrientationPortrait = 0x1,CLDeviceOrientationPortraitUpsideDown = 0x2,CLDeviceOrientationLandscapeLeft = 0x3,CLDeviceOrientationLandscapeRight = 0x4,CLDeviceOrientationFaceUp = 0x5,CLDeviceOrientationFaceDown = 0x6,};
typedef double CLLocationDirection;
struct CLPlacemarkInternal;
typedef void *CMStepUpdateHandler;
enum CPTripEstimateStyle {CPTripEstimateStyleLight = 0x0,CPTripEstimateStyleDark = 0x1,};
typedef  __CTFontCollection *CTFontCollectionRef;
typedef  __CTFontDescriptor *CTFontDescriptorRef;
enum CTFramePathFillRule {kCTFramePathFillEvenOdd = 0x0,kCTFramePathFillWindingNumber = 0x1,};
typedef  __CTParagraphStyle *CTParagraphStyleRef;
typedef  __CTRubyAnnotation *CTRubyAnnotationRef;
typedef  void *ConstLogicalAddress;
struct EAAccessoryInternal;
enum EKEventAvailability {EKEventAvailabilityNotSupported = 0xFFFFFFFFFFFFFFFF,EKEventAvailabilityBusy = 0x0,EKEventAvailabilityFree = 0x1,EKEventAvailabilityTentative = 0x2,EKEventAvailabilityUnavailable = 0x3,};
enum EKParticipantStatus {EKParticipantStatusUnknown = 0x0,EKParticipantStatusPending = 0x1,EKParticipantStatusAccepted = 0x2,EKParticipantStatusDeclined = 0x3,EKParticipantStatusTentative = 0x4,EKParticipantStatusDelegated = 0x5,EKParticipantStatusCompleted = 0x6,EKParticipantStatusInProcess = 0x7,};
enum GKMatchSendDataMode {GKMatchSendDataReliable = 0x0,GKMatchSendDataUnreliable = 0x1,};
enum HMCameraStreamState {HMCameraStreamStateStarting = 0x1,HMCameraStreamStateStreaming = 0x2,HMCameraStreamStateStopping = 0x3,HMCameraStreamStateNotStreaming = 0x4,};
enum HMPresenceEventType {HMPresenceEventTypeEveryEntry = 0x1,HMPresenceEventTypeEveryExit = 0x2,HMPresenceEventTypeFirstEntry = 0x3,HMPresenceEventTypeLastExit = 0x4,HMPresenceEventTypeAtHome = 0x3,HMPresenceEventTypeNotAtHome = 0x4,};
enum ICMediaPresentation {ICMediaPresentationConvertedAssets = 0x1,ICMediaPresentationOriginalAssets = 0x2,};
enum INMediaAffinityType {INMediaAffinityTypeUnknown = 0x0,INMediaAffinityTypeLike = 0x1,INMediaAffinityTypeDislike = 0x2,};
enum INPaymentMethodType {INPaymentMethodTypeUnknown = 0x0,INPaymentMethodTypeChecking = 0x1,INPaymentMethodTypeSavings = 0x2,INPaymentMethodTypeBrokerage = 0x3,INPaymentMethodTypeDebit = 0x4,INPaymentMethodTypeCredit = 0x5,INPaymentMethodTypePrepaid = 0x6,INPaymentMethodTypeStore = 0x7,INPaymentMethodTypeApplePay = 0x8,};
enum INRelativeReference {INRelativeReferenceUnknown = 0x0,INRelativeReferenceNext = 0x1,INRelativeReferencePrevious = 0x2,};
enum INReservationStatus {INReservationStatusUnknown = 0x0,INReservationStatusCanceled = 0x1,INReservationStatusPending = 0x2,INReservationStatusHold = 0x3,INReservationStatusConfirmed = 0x4,};
enum MACRO_APPLE_ARCHIVE {APPLE_ARCHIVE_API_VERSION = 1,};
enum MACRO_AUDIT_CTLMODE {AUDIT_CTLMODE_NORMAL = 1,AUDIT_CTLMODE_EXTERNAL = 2,AUDIT_EXPIRE_OP_AND = 0,AUDIT_EXPIRE_OP_OR = 1,};
enum MACRO_AVAUDIOENGINE {AVAUDIOENGINE_HAVE_MUSICPLAYER = 1,AVAUDIOENGINE_HAVE_AUAUDIOUNIT = 1,};
enum MACRO_AVAUDIOFORMAT {AVAUDIOFORMAT_HAVE_CMFORMATDESCRIPTION = 1,};
enum MACRO_AVAUDIOIONODE {AVAUDIOIONODE_HAVE_AUDIOUNIT = 1,};
enum MACRO_BOOTPARAMPROC {BOOTPARAMPROC_WHOAMI = 1,BOOTPARAMPROC_GETFILE = 2,};
enum MACRO_BOOTPARAMPROG {BOOTPARAMPROG = 100026,};
enum MACRO_BOOTPARAMVERS {BOOTPARAMVERS = 1,};
enum MACRO_DISPATCH_MACH {DISPATCH_MACH_SEND_DEAD = 0x1,DISPATCH_MEMORYPRESSURE_NORMAL = 0x1,DISPATCH_MEMORYPRESSURE_WARN = 0x2,DISPATCH_MEMORYPRESSURE_CRITICAL = 0x4,DISPATCH_PROC_EXIT = 0x80000000,DISPATCH_PROC_FORK = 0x40000000,DISPATCH_PROC_EXEC = 0x20000000,DISPATCH_PROC_SIGNAL = 0x8000000,DISPATCH_VNODE_DELETE = 0x1,DISPATCH_VNODE_WRITE = 0x2,DISPATCH_VNODE_EXTEND = 0x4,DISPATCH_VNODE_ATTRIB = 0x8,DISPATCH_VNODE_LINK = 0x10,DISPATCH_VNODE_RENAME = 0x20,DISPATCH_VNODE_REVOKE = 0x40,DISPATCH_VNODE_FUNLOCK = 0x100,DISPATCH_TIMER_STRICT = 0x1,DISPATCH_ONCE_INLINE_FASTPATH = 0x1,DISPATCH_IO_STREAM = 0x0,DISPATCH_IO_RANDOM = 0x1,DISPATCH_IO_STOP = 0x1,DISPATCH_IO_STRICT_INTERVAL = 0x1,};
enum MACRO_DISPATCH_TIME {DISPATCH_TIME_NOW = 0,DISPATCH_TIME_FOREVER = -1,};
enum MACRO_EADDRNOTAVAIL {EADDRNOTAVAIL = 49,};
enum MACRO_EPROGMISMATCH {EPROGMISMATCH = 75,};
enum MACRO_ICMP6_MAXTYPE {ICMP6_MAXTYPE = 201,ICMP6_DST_UNREACH_NOROUTE = 0,ICMP6_DST_UNREACH_ADMIN = 1,ICMP6_DST_UNREACH_NOTNEIGHBOR = 2,ICMP6_DST_UNREACH_BEYONDSCOPE = 2,ICMP6_DST_UNREACH_ADDR = 3,ICMP6_DST_UNREACH_NOPORT = 4,ICMP6_TIME_EXCEED_TRANSIT = 0,ICMP6_TIME_EXCEED_REASSEMBLY = 1,ICMP6_PARAMPROB_HEADER = 0,ICMP6_PARAMPROB_NEXTHEADER = 1,ICMP6_PARAMPROB_OPTION = 2,ICMP6_PARAMPROB_FIRSTFRAG_INCOMP_HDR = 3,ICMP6_INFOMSG_MASK = 128,ICMP6_NI_SUBJ_IPV6 = 0,ICMP6_NI_SUBJ_FQDN = 1,ICMP6_NI_SUBJ_IPV4 = 2,ICMP6_NI_SUCCESS = 0,ICMP6_NI_REFUSED = 1,ICMP6_NI_UNKNOWN = 2,ICMP6_ROUTER_RENUMBERING_COMMAND = 0,ICMP6_ROUTER_RENUMBERING_RESULT = 1,ICMP6_ROUTER_RENUMBERING_SEQNUM_RESET = 255,};
enum MACRO_IPV6CTL_MAXID {IPV6CTL_MAXID = 51,};
enum MACRO_MAXDOMNAMELEN {MAXDOMNAMELEN = 256,NBPG = 4096,};
enum MACRO_MAXNETNAMELEN {MAXNETNAMELEN = 255,};
enum MACRO_MAXRESOLVSORT {MAXRESOLVSORT = 10,};
enum MACRO_MAX_TCPOPTLEN {MAX_TCPOPTLEN = 40,};
enum MACRO_PROCESSOR_SET {PROCESSOR_SET_BASIC_INFO = 5,PROCESSOR_SET_LOAD_INFO = 4,};
enum MACRO_RETRY_TIMEOUT {CLSET_RETRY_TIMEOUT = 4,CLGET_RETRY_TIMEOUT = 5,};
enum MACRO_SPRAYOVERHEAD {SPRAYOVERHEAD = 86,};
enum MACRO_THREAD_FLAVOR {THREAD_FLAVOR_CONTROL = 0,THREAD_FLAVOR_READ = 1,THREAD_FLAVOR_INSPECT = 2,};
enum MACRO_TIME_ABSOLUTE {TIME_ABSOLUTE = 0x0,TIME_RELATIVE = 0x1,};
enum MACRO_UTF_SURROGATE {UTF_SURROGATE_OFFSET = 0x35FDC00,};
enum MACRO___DARWIN_NSIG {__DARWIN_NSIG = 32,};
enum MACRO___NSDATAASSET {__NSDATAASSET_SHARED_SECTION__ = 1,};
enum MACRO___NSPARAGRAPH {__NSPARAGRAPH_STYLE_SHARED_SECTION__ = 1,};
enum MACRO_pseudo_AF_KEY {pseudo_AF_KEY = 29,};
enum MACRO_pseudo_AF_PIP {pseudo_AF_PIP = 25,};
enum MDLCameraProjection {MDLCameraProjectionPerspective = 0x0,MDLCameraProjectionOrthographic = 0x1,};
enum MDLMaterialSemantic {MDLMaterialSemanticBaseColor = 0x0,MDLMaterialSemanticSubsurface = 0x1,MDLMaterialSemanticMetallic = 0x2,MDLMaterialSemanticSpecular = 0x3,MDLMaterialSemanticSpecularExponent = 0x4,MDLMaterialSemanticSpecularTint = 0x5,MDLMaterialSemanticRoughness = 0x6,MDLMaterialSemanticAnisotropic = 0x7,MDLMaterialSemanticAnisotropicRotation = 0x8,MDLMaterialSemanticSheen = 0x9,MDLMaterialSemanticSheenTint = 0xA,MDLMaterialSemanticClearcoat = 0xB,MDLMaterialSemanticClearcoatGloss = 0xC,MDLMaterialSemanticEmission = 0xD,MDLMaterialSemanticBump = 0xE,MDLMaterialSemanticOpacity = 0xF,MDLMaterialSemanticInterfaceIndexOfRefraction = 0x10,MDLMaterialSemanticMaterialIndexOfRefraction = 0x11,MDLMaterialSemanticObjectSpaceNormal = 0x12,MDLMaterialSemanticTangentSpaceNormal = 0x13,MDLMaterialSemanticDisplacement = 0x14,MDLMaterialSemanticDisplacementScale = 0x15,MDLMaterialSemanticAmbientOcclusion = 0x16,MDLMaterialSemanticAmbientOcclusionScale = 0x17,MDLMaterialSemanticNone = 0x8000,MDLMaterialSemanticUserDefined = 0x8001,};
enum MFMailComposeResult {MFMailComposeResultCancelled = 0x0,MFMailComposeResultSaved = 0x1,MFMailComposeResultSent = 0x2,MFMailComposeResultFailed = 0x3,};
typedef void *MKDirectionsHandler;
enum MKFeatureVisibility {MKFeatureVisibilityAdaptive = 0x0,MKFeatureVisibilityHidden = 0x1,MKFeatureVisibilityVisible = 0x2,};
enum MLCSoftmaxOperation {MLCSoftmaxOperationSoftmax = 0x0,MLCSoftmaxOperationLogSoftmax = 0x1,};
enum MPMovieControlStyle {MPMovieControlStyleNone = 0x0,MPMovieControlStyleEmbedded = 0x1,MPMovieControlStyleFullscreen = 0x2,MPMovieControlStyleDefault = 0x1,};
enum MPMovieFinishReason {MPMovieFinishReasonPlaybackEnded = 0x0,MPMovieFinishReasonPlaybackError = 0x1,MPMovieFinishReasonUserExited = 0x2,};
enum MPSCNNReductionType {MPSCNNReductionTypeNone = 0x0,MPSCNNReductionTypeSum = 0x1,MPSCNNReductionTypeMean = 0x2,MPSCNNReductionTypeSumByNonZeroWeights = 0x3,MPSCNNReductionTypeCount = 0x4,};
enum MPSDeviceCapsValues {MPSDeviceCapsNull = 0x0,MPSDeviceSupportsReadableArrayOfTextures = 0x1,MPSDeviceSupportsWritableArrayOfTextures = 0x2,MPSDeviceSupportsReadWriteTextures = 0x4,MPSDeviceSupportsSimdgroupBarrier = 0x8,MPSDeviceSupportsQuadShuffle = 0x10,MPSDeviceSupportsSimdShuffle = 0x20,MPSDeviceSupportsSimdReduction = 0x40,MPSDeviceSupportsFloat32Filtering = 0x80,MPSDeviceSupportsNorm16BicubicFiltering = 0x100,MPSDeviceSupportsFloat16BicubicFiltering = 0x200,MPSDeviceIsAppleDevice = 0x400,};
enum MPSGraphPaddingMode {MPSGraphPaddingModeConstant = 0x0,MPSGraphPaddingModeReflect = 0x1,MPSGraphPaddingModeSymmetric = 0x2,};
enum MPSIntersectionType {MPSIntersectionTypeNearest = 0x0,MPSIntersectionTypeAny = 0x1,};
enum MTLSamplerMipFilter {MTLSamplerMipFilterNotMipmapped = 0x0,MTLSamplerMipFilterNearest = 0x1,MTLSamplerMipFilterLinear = 0x2,};
enum MTLStencilOperation {MTLStencilOperationKeep = 0x0,MTLStencilOperationZero = 0x1,MTLStencilOperationReplace = 0x2,MTLStencilOperationIncrementClamp = 0x3,MTLStencilOperationDecrementClamp = 0x4,MTLStencilOperationInvert = 0x5,MTLStencilOperationIncrementWrap = 0x6,MTLStencilOperationDecrementWrap = 0x7,};
enum MTLTriangleFillMode {MTLTriangleFillModeFill = 0x0,MTLTriangleFillModeLines = 0x1,};
enum NCWidgetDisplayMode {NCWidgetDisplayModeCompact = 0x0,NCWidgetDisplayModeExpanded = 0x1,};
enum NEAppProxyFlowError {NEAppProxyFlowErrorNotConnected = 0x1,NEAppProxyFlowErrorPeerReset = 0x2,NEAppProxyFlowErrorHostUnreachable = 0x3,NEAppProxyFlowErrorInvalidArgument = 0x4,NEAppProxyFlowErrorAborted = 0x5,NEAppProxyFlowErrorRefused = 0x6,NEAppProxyFlowErrorTimedOut = 0x7,NEAppProxyFlowErrorInternal = 0x8,NEAppProxyFlowErrorDatagramTooLarge = 0x9,NEAppProxyFlowErrorReadAlreadyPending = 0xA,};
enum NEFilterReportEvent {NEFilterReportEventNewFlow = 0x1,NEFilterReportEventDataDecision = 0x2,NEFilterReportEventFlowClosed = 0x3,NEFilterReportEventStatistics = 0x4,};
enum NSEntityMappingType {NSUndefinedEntityMappingType = 0x0,NSCustomEntityMappingType = 0x1,NSAddEntityMappingType = 0x2,NSRemoveEntityMappingType = 0x3,NSCopyEntityMappingType = 0x4,NSTransformEntityMappingType = 0x5,};
enum NSFormattingContext {NSFormattingContextUnknown = 0x0,NSFormattingContextDynamic = 0x1,NSFormattingContextStandalone = 0x2,NSFormattingContextListItem = 0x3,NSFormattingContextBeginningOfSentence = 0x4,NSFormattingContextMiddleOfSentence = 0x5,};
enum NSMassFormatterUnit {NSMassFormatterUnitGram = 0xB,NSMassFormatterUnitKilogram = 0xE,NSMassFormatterUnitOunce = 0x601,NSMassFormatterUnitPound = 0x602,NSMassFormatterUnitStone = 0x603,};
enum NSOtherErrorNumbers {NSOtherErrorRelocation = 0x0,NSOtherErrorLazyBind = 0x1,NSOtherErrorIndrLoop = 0x2,NSOtherErrorLazyInit = 0x3,NSOtherErrorInvalidArgs = 0x4,};
struct NSPredicateOperator;
enum NSTimeZoneNameStyle {NSTimeZoneNameStyleStandard = 0x0,NSTimeZoneNameStyleShortStandard = 0x1,NSTimeZoneNameStyleDaylightSaving = 0x2,NSTimeZoneNameStyleShortDaylightSaving = 0x3,NSTimeZoneNameStyleGeneric = 0x4,NSTimeZoneNameStyleShortGeneric = 0x5,};
struct OpaqueCMBlockBuffer;
struct OpaqueMusicSequence;
enum PDFDisplayDirection {kPDFDisplayDirectionVertical = 0x0,kPDFDisplayDirectionHorizontal = 0x1,};
struct PDFSelectionPrivate;
enum PHAssetResourceType {PHAssetResourceTypePhoto = 0x1,PHAssetResourceTypeVideo = 0x2,PHAssetResourceTypeAudio = 0x3,PHAssetResourceTypeAlternatePhoto = 0x4,PHAssetResourceTypeFullSizePhoto = 0x5,PHAssetResourceTypeFullSizeVideo = 0x6,PHAssetResourceTypeAdjustmentData = 0x7,PHAssetResourceTypeAdjustmentBasePhoto = 0x8,PHAssetResourceTypePairedVideo = 0x9,PHAssetResourceTypeFullSizePairedVideo = 0xA,PHAssetResourceTypeAdjustmentBasePairedVideo = 0xB,PHAssetResourceTypeAdjustmentBaseVideo = 0xC,};
enum PKPaymentButtonType {PKPaymentButtonTypePlain = 0x0,PKPaymentButtonTypeBuy = 0x1,PKPaymentButtonTypeSetUp = 0x2,PKPaymentButtonTypeInStore = 0x3,PKPaymentButtonTypeDonate = 0x4,PKPaymentButtonTypeCheckout = 0x5,PKPaymentButtonTypeBook = 0x6,PKPaymentButtonTypeSubscribe = 0x7,PKPaymentButtonTypeReload = 0x8,PKPaymentButtonTypeAddMoney = 0x9,PKPaymentButtonTypeTopUp = 0xA,PKPaymentButtonTypeOrder = 0xB,PKPaymentButtonTypeRent = 0xC,PKPaymentButtonTypeSupport = 0xD,PKPaymentButtonTypeContribute = 0xE,PKPaymentButtonTypeTip = 0xF,};
enum PKPaymentMethodType {PKPaymentMethodTypeUnknown = 0x0,PKPaymentMethodTypeDebit = 0x1,PKPaymentMethodTypeCredit = 0x2,PKPaymentMethodTypePrepaid = 0x3,PKPaymentMethodTypeStore = 0x4,};
enum SCNActionTimingMode {SCNActionTimingModeLinear = 0x0,SCNActionTimingModeEaseIn = 0x1,SCNActionTimingModeEaseOut = 0x2,SCNActionTimingModeEaseInEaseOut = 0x3,};
enum SCNAntialiasingMode {SCNAntialiasingModeNone = 0x0,SCNAntialiasingModeMultisampling2X = 0x1,SCNAntialiasingModeMultisampling4X = 0x2,};
enum SCNTransparencyMode {SCNTransparencyModeAOne = 0x0,SCNTransparencyModeRGBZero = 0x1,SCNTransparencyModeSingleLayer = 0x2,SCNTransparencyModeDualLayer = 0x3,SCNTransparencyModeDefault = 0x0,};
typedef  __SCNetworkService *SCNetworkServiceRef;
enum SKInterpolationMode {SKInterpolationModeLinear = 0x1,SKInterpolationModeSpline = 0x2,SKInterpolationModeStep = 0x3,};
enum SKNodeFocusBehavior {SKNodeFocusBehaviorNone = 0x0,SKNodeFocusBehaviorOccluding = 0x1,SKNodeFocusBehaviorFocusable = 0x2,};
enum SKProductPeriodUnit {SKProductPeriodUnitDay = 0x0,SKProductPeriodUnitWeek = 0x1,SKProductPeriodUnitMonth = 0x2,SKProductPeriodUnitYear = 0x3,};
enum SRNotificationEvent {SRNotificationEventUnknown = 0x0,SRNotificationEventReceived = 0x1,SRNotificationEventDefaultAction = 0x2,SRNotificationEventSupplementaryAction = 0x3,SRNotificationEventClear = 0x4,SRNotificationEventNotificationCenterClearAll = 0x5,SRNotificationEventRemoved = 0x6,SRNotificationEventHide = 0x7,SRNotificationEventLongLook = 0x8,SRNotificationEventSilence = 0x9,SRNotificationEventAppLaunch = 0xA,SRNotificationEventExpired = 0xB,SRNotificationEventBannerPulldown = 0xC,SRNotificationEventTapCoalesce = 0xD,SRNotificationEventDeduped = 0xE,SRNotificationEventDeviceActivated = 0xF,SRNotificationEventDeviceUnlocked = 0x10,};
enum SSLCiphersuiteGroup {kSSLCiphersuiteGroupDefault = 0x0,kSSLCiphersuiteGroupCompatibility = 0x1,kSSLCiphersuiteGroupLegacy = 0x2,kSSLCiphersuiteGroupATS = 0x3,kSSLCiphersuiteGroupATSCompatibility = 0x4,};
typedef __SecAccessControl *SecAccessControlRef;
enum SecKeyOperationType {kSecKeyOperationTypeSign = 0x0,kSecKeyOperationTypeVerify = 0x1,kSecKeyOperationTypeEncrypt = 0x2,kSecKeyOperationTypeDecrypt = 0x3,kSecKeyOperationTypeKeyExchange = 0x4,};
enum UCharIteratorOrigin {UITER_START = 0x0,UITER_CURRENT = 0x1,UITER_LIMIT = 0x2,UITER_ZERO = 0x3,UITER_LENGTH = 0x4,};
enum UHangulSyllableType {U_HST_NOT_APPLICABLE = 0x0,U_HST_LEADING_JAMO = 0x1,U_HST_VOWEL_JAMO = 0x2,U_HST_TRAILING_JAMO = 0x3,U_HST_LV_SYLLABLE = 0x4,U_HST_LVT_SYLLABLE = 0x5,U_HST_COUNT = 0x6,};
typedef double UIAccelerationValue;
enum UIDeviceOrientation {UIDeviceOrientationUnknown = 0x0,UIDeviceOrientationPortrait = 0x1,UIDeviceOrientationPortraitUpsideDown = 0x2,UIDeviceOrientationLandscapeLeft = 0x3,UIDeviceOrientationLandscapeRight = 0x4,UIDeviceOrientationFaceUp = 0x5,UIDeviceOrientationFaceDown = 0x6,};
enum UIDocumentMenuOrder {UIDocumentMenuOrderFirst = 0x0,UIDocumentMenuOrderLast = 0x1,};
enum UIImageResizingMode {UIImageResizingModeTile = 0x0,UIImageResizingModeStretch = 0x1,};
enum UIImageSymbolWeight {UIImageSymbolWeightUnspecified = 0x0,UIImageSymbolWeightUltraLight = 0x1,UIImageSymbolWeightThin = 0x2,UIImageSymbolWeightLight = 0x3,UIImageSymbolWeightRegular = 0x4,UIImageSymbolWeightMedium = 0x5,UIImageSymbolWeightSemibold = 0x6,UIImageSymbolWeightBold = 0x7,UIImageSymbolWeightHeavy = 0x8,UIImageSymbolWeightBlack = 0x9,};
enum UIProgressViewStyle {UIProgressViewStyleDefault = 0x0,UIProgressViewStyleBar = 0x1,};
enum UITextDropPerformer {UITextDropPerformerView = 0x0,UITextDropPerformerDelegate = 0x1,};
enum UITextFieldViewMode {UITextFieldViewModeNever = 0x0,UITextFieldViewModeWhileEditing = 0x1,UITextFieldViewModeUnlessEditing = 0x2,UITextFieldViewModeAlways = 0x3,};
struct UITextSelectionView;
enum UIWebPaginationMode {UIWebPaginationModeUnpaginated = 0x0,UIWebPaginationModeLeftToRight = 0x1,UIWebPaginationModeTopToBottom = 0x2,UIWebPaginationModeBottomToTop = 0x3,UIWebPaginationModeRightToLeft = 0x4,};
enum UPropertyNameChoice {U_SHORT_PROPERTY_NAME = 0x0,U_LONG_PROPERTY_NAME = 0x1,U_PROPERTY_NAME_CHOICE_COUNT = 0x2,};
struct _CAEAGLNativeWindow;
struct _EAGLContextPrivate;
enum _Unwind_Reason_Code {_URC_NO_REASON = 0x0,_URC_OK = 0x0,_URC_FOREIGN_EXCEPTION_CAUGHT = 0x1,_URC_FATAL_PHASE2_ERROR = 0x2,_URC_FATAL_PHASE1_ERROR = 0x3,_URC_NORMAL_STOP = 0x4,_URC_END_OF_STACK = 0x5,_URC_HANDLER_FOUND = 0x6,_URC_INSTALL_CONTEXT = 0x7,_URC_CONTINUE_UNWIND = 0x8,};
struct __CFNumberFormatter;
struct __CFRunLoopObserver;
struct __CFStringTokenizer;
struct __CVPixelBufferPool;
struct __NSObjectFileImage;
struct __SCNetworkProtocol;
struct __SecKeychainSearch;
typedef unsigned int __darwin_fsblkcnt_t;
typedef unsigned int __darwin_fsfilcnt_t;
struct _xmlSchemaValidCtxt;
typedef __darwin_arm_debug_state32 arm_debug_state32_t;
typedef __darwin_arm_debug_state64 arm_debug_state64_t;
typedef void (*dispatch_function_t)(void *);
typedef NSObject *dispatch_workloop_t;
struct dyld_chained_import {unsigned int lib_ordinal : 8;unsigned int weak_import : 1;unsigned int name_offset : 23;};
typedef gss_auth_identity *gss_auth_identity_t;
typedef gss_buffer_set_desc_struct gss_buffer_set_desc;
typedef  gss_cred_id_t_desc_struct *gss_const_cred_id_t;
typedef gss_iov_buffer_desc_struct gss_iov_buffer_desc;
typedef int (*isStandaloneSAXFunc)(void *);
typedef unsigned int mach_msg_priority_t;
typedef mach_port_options mach_port_options_t;
typedef unsigned int mach_port_srights_t;
enum nw_interface_type_t {nw_interface_type_other = 0x0,nw_interface_type_wifi = 0x1,nw_interface_type_cellular = 0x2,nw_interface_type_wired = 0x3,nw_interface_type_loopback = 0x4,};
enum nw_listener_state_t {nw_listener_state_invalid = 0x0,nw_listener_state_waiting = 0x1,nw_listener_state_ready = 0x2,nw_listener_state_failed = 0x3,nw_listener_state_cancelled = 0x4,};
typedef NSObject *nw_protocol_stack_t;
typedef void (*objc_func_loadImage)( mach_header *);
struct opaqueCMBufferQueue;
struct opaqueCMSimpleQueue;
typedef os_workgroup_attr_opaque_s os_workgroup_attr_s;
typedef os_workgroup_attr_opaque_s *os_workgroup_attr_t;
typedef policy_fifo_limit *policy_fifo_limit_t;
typedef policy_limits policy_limit_data_t;
typedef int (*rbto_compare_key_fn)(void *,  void *,  void *);
typedef rusage_info_v4 rusage_info_current;
typedef simd_packed_char2 simd__packed__char2;
typedef simd_packed_char4 simd__packed__char4;
typedef simd_packed_char8 simd__packed__char8;
typedef simd_packed_int16 simd__packed__int16;
typedef simd_packed_long2 simd__packed__long2;
typedef simd_packed_long4 simd__packed__long4;
typedef simd_packed_long8 simd__packed__long8;
typedef simd_packed_uint2 simd__packed__uint2;
typedef simd_packed_uint4 simd__packed__uint4;
typedef simd_packed_uint8 simd__packed__uint8;
union __attribute__((aligned(16))) simd_packed_double2 {double f64[2];};
union __attribute__((aligned(16))) simd_packed_double4 {double f64[4];};
union __attribute__((aligned(16))) simd_packed_double8 {double f64[8];};
union __attribute__((aligned(16))) simd_packed_float16 {float f32[16];char i8[64];short i16[32];int i32[16];long long i64[8];__int128 i128[4];unsigned char u8[64];unsigned short u16[32];unsigned int u32[16];unsigned long long u64[8];__uint128 u128[4];};
union __attribute__((aligned(16))) simd_packed_short16 {char i8[32];short i16[16];int i32[8];long long i64[4];__int128 i128[2];unsigned char u8[32];unsigned short u16[16];unsigned int u32[8];unsigned long long u64[4];__uint128 u128[2];};
union __attribute__((aligned(16))) simd_packed_short32 {char i8[64];short i16[32];int i32[16];long long i64[8];__int128 i128[4];unsigned char u8[64];unsigned short u16[32];unsigned int u32[16];unsigned long long u64[8];__uint128 u128[4];};
union __attribute__((aligned(16))) simd_packed_uchar16 {char i8[16];short i16[8];int i32[4];long long i64[2];unsigned char u8[16];unsigned short u16[8];unsigned int u32[4];unsigned long long u64[2];};
union __attribute__((aligned(16))) simd_packed_uchar32 {char i8[32];short i16[16];int i32[8];long long i64[4];__int128 i128[2];unsigned char u8[32];unsigned short u16[16];unsigned int u32[8];unsigned long long u64[4];__uint128 u128[2];};
union __attribute__((aligned(16))) simd_packed_uchar64 {char i8[64];short i16[32];int i32[16];long long i64[8];__int128 i128[4];unsigned char u8[64];unsigned short u16[32];unsigned int u32[16];unsigned long long u64[8];__uint128 u128[4];};
union __attribute__((aligned(4))) simd_packed_ushort2 {char i8[4];short i16[2];unsigned char u8[4];unsigned short u16[2];};
union __attribute__((aligned(8))) simd_packed_ushort4 {char i8[8];short i16[4];int i32[2];unsigned char u8[8];unsigned short u16[4];unsigned int u32[2];};
union __attribute__((aligned(16))) simd_packed_ushort8 {char i8[16];short i16[8];int i32[4];long long i64[2];unsigned char u8[16];unsigned short u16[8];unsigned int u32[4];unsigned long long u64[2];};
typedef sparse_m_float *sparse_matrix_float;
struct sqlite3_mem_methods {void *(*xMalloc)(int);void (*xFree)(void *);void *(*xRealloc)(void *, int);int (*xSize)(void *);int (*xRoundup)(int);int (*xInit)(void *);void (*xShutdown)(void *);void *pAppData;};
struct sqlite3_pcache_page {void *pBuf;void *pExtra;};
typedef void (*sqlite3_syscall_ptr)(void);
struct sqlite3_vtab_cursor {sqlite3_vtab *pVtab;};
enum std____1__cv_status {no_timeout = 0x0,timeout = 0x1,};
struct std____1__once_flag {unsigned long long __state_;};
typedef std____1__basic_streambuf_char_ std____1__streambuf;
typedef long long std____1__streamoff;
typedef std____1__fpos___mbstate_t_ std____1__streampos;
typedef std____1__basic_stringbuf_char_ std____1__stringbuf;
struct std____1__time_base {};
typedef std____1__integral_constant_bool__true_ std____1__true_type;
typedef std____1__basic_string_char16_t_ std____1__u16string;
typedef std____1__basic_string_char32_t_ std____1__u32string;
typedef struct std____1__basic_ifstream_wchar_t_ std____1__wifstream;
typedef std____1__basic_iostream_wchar_t_ std____1__wiostream;
typedef struct std____1__basic_ofstream_wchar_t_ std____1__wofstream;
struct std__bad_alloc_vtbl; 
struct std__exception_vtbl; 
struct std__type_info_vtbl; 
enum task_inspect_flavor {TASK_INSPECT_BASIC_COUNTS = 0x1,};
typedef int task_special_port_t;
enum task_throughput_qos {THROUGHPUT_QOS_TIER_UNSPECIFIED = 0x0,THROUGHPUT_QOS_TIER_0 = 0xFE0001,THROUGHPUT_QOS_TIER_1 = 0xFE0002,THROUGHPUT_QOS_TIER_2 = 0xFE0003,THROUGHPUT_QOS_TIER_3 = 0xFE0004,THROUGHPUT_QOS_TIER_4 = 0xFE0005,THROUGHPUT_QOS_TIER_5 = 0xFE0006,};
typedef task_vm_info task_vm_info_data_t;
typedef thread_basic_info *thread_basic_info_t;
typedef vDSP_biquadm_SetupStructD *vDSP_biquadm_SetupD;
struct vImageCVImageFormat;
typedef vm_info_region_64 vm_info_region_64_t;
typedef int vm_page_info_data_t[];
typedef vm_purgeable_info *vm_purgeable_info_t;
typedef vm_purgeable_stat vm_purgeable_stat_t;
typedef int *vm_region_info_64_t;
enum xmlAttributeDefault {XML_ATTRIBUTE_NONE = 0x1,XML_ATTRIBUTE_REQUIRED = 0x2,XML_ATTRIBUTE_IMPLIED = 0x3,XML_ATTRIBUTE_FIXED = 0x4,};
typedef void (*xmlGenericErrorFunc)(void *,  char *, ...);
enum xmlParserInputState {XML_PARSER_EOF = 0xFFFFFFFF,XML_PARSER_START = 0x0,XML_PARSER_MISC = 0x1,XML_PARSER_PI = 0x2,XML_PARSER_DTD = 0x3,XML_PARSER_PROLOG = 0x4,XML_PARSER_COMMENT = 0x5,XML_PARSER_START_TAG = 0x6,XML_PARSER_CONTENT = 0x7,XML_PARSER_CDATA_SECTION = 0x8,XML_PARSER_END_TAG = 0x9,XML_PARSER_ENTITY_DECL = 0xA,XML_PARSER_ENTITY_VALUE = 0xB,XML_PARSER_ATTRIBUTE_VALUE = 0xC,XML_PARSER_SYSTEM_LITERAL = 0xD,XML_PARSER_EPILOG = 0xE,XML_PARSER_IGNORE = 0xF,XML_PARSER_PUBLIC_LITERAL = 0x10,};
enum xmlParserProperties {XML_PARSER_LOADDTD = 0x1,XML_PARSER_DEFAULTATTRS = 0x2,XML_PARSER_VALIDATE = 0x3,XML_PARSER_SUBST_ENTITIES = 0x4,};
enum xmlParserSeverities {XML_PARSER_SEVERITY_VALIDITY_WARNING = 0x1,XML_PARSER_SEVERITY_VALIDITY_ERROR = 0x2,XML_PARSER_SEVERITY_WARNING = 0x3,XML_PARSER_SEVERITY_ERROR = 0x4,};
typedef struct _xmlRelaxNGValidCtxt xmlRelaxNGValidCtxt;
typedef struct _xmlSchemaParserCtxt xmlSchemaParserCtxt;
enum xmlSchemaValidError {XML_SCHEMAS_ERR_OK = 0x0,XML_SCHEMAS_ERR_NOROOT = 0x1,XML_SCHEMAS_ERR_UNDECLAREDELEM = 0x2,XML_SCHEMAS_ERR_NOTTOPLEVEL = 0x3,XML_SCHEMAS_ERR_MISSING = 0x4,XML_SCHEMAS_ERR_WRONGELEM = 0x5,XML_SCHEMAS_ERR_NOTYPE = 0x6,XML_SCHEMAS_ERR_NOROLLBACK = 0x7,XML_SCHEMAS_ERR_ISABSTRACT = 0x8,XML_SCHEMAS_ERR_NOTEMPTY = 0x9,XML_SCHEMAS_ERR_ELEMCONT = 0xA,XML_SCHEMAS_ERR_HAVEDEFAULT = 0xB,XML_SCHEMAS_ERR_NOTNILLABLE = 0xC,XML_SCHEMAS_ERR_EXTRACONTENT = 0xD,XML_SCHEMAS_ERR_INVALIDATTR = 0xE,XML_SCHEMAS_ERR_INVALIDELEM = 0xF,XML_SCHEMAS_ERR_NOTDETERMINIST = 0x10,XML_SCHEMAS_ERR_CONSTRUCT = 0x11,XML_SCHEMAS_ERR_INTERNAL = 0x12,XML_SCHEMAS_ERR_NOTSIMPLE = 0x13,XML_SCHEMAS_ERR_ATTRUNKNOWN = 0x14,XML_SCHEMAS_ERR_ATTRINVALID = 0x15,XML_SCHEMAS_ERR_VALUE = 0x16,XML_SCHEMAS_ERR_FACET = 0x17,XML_SCHEMAS_ERR_ = 0x18,XML_SCHEMAS_ERR_XXX = 0x19,};
typedef _xmlSchemaWildcardNs xmlSchemaWildcardNs;
struct AAFieldKeySet_impl;
enum ALAssetOrientation {ALAssetOrientationUp = 0x0,ALAssetOrientationDown = 0x1,ALAssetOrientationLeft = 0x2,ALAssetOrientationRight = 0x3,ALAssetOrientationUpMirrored = 0x4,ALAssetOrientationDownMirrored = 0x5,ALAssetOrientationLeftMirrored = 0x6,ALAssetOrientationRightMirrored = 0x7,};
enum ARGeoTrackingState {ARGeoTrackingStateNotAvailable = 0x0,ARGeoTrackingStateInitializing = 0x1,ARGeoTrackingStateLocalizing = 0x2,ARGeoTrackingStateLocalized = 0x3,};
enum AUAudioUnitBusType {AUAudioUnitBusTypeInput = 0x1,AUAudioUnitBusTypeOutput = 0x2,};
enum AVAssetSegmentType {AVAssetSegmentTypeInitialization = 0x1,AVAssetSegmentTypeSeparable = 0x2,};
struct AVAudioMixInternal;
enum AVCaptureFlashMode {AVCaptureFlashModeOff = 0x0,AVCaptureFlashModeOn = 0x1,AVCaptureFlashModeAuto = 0x2,};
enum AVCaptureFocusMode {AVCaptureFocusModeLocked = 0x0,AVCaptureFocusModeAutoFocus = 0x1,AVCaptureFocusModeContinuousAutoFocus = 0x2,};
enum AVCaptureTorchMode {AVCaptureTorchModeOff = 0x0,AVCaptureTorchModeOn = 0x1,AVCaptureTorchModeAuto = 0x2,};
enum AVDepthDataQuality {AVDepthDataQualityLow = 0x0,AVDepthDataQualityHigh = 0x1,};
enum AVPlayerItemStatus {AVPlayerItemStatusUnknown = 0x0,AVPlayerItemStatusReadyToPlay = 0x1,AVPlayerItemStatusFailed = 0x2,};
struct AVURLAssetInternal;
typedef void (*BLASParamErrorProc)( char *,  char *,  int *,  int *);
enum BNNSDescriptorType {BNNSConstant = 0x0,BNNSSample = 0x1,BNNSParameter = 0x2,};
enum BNNSReduceFunction {BNNSReduceFunctionMax = 0x0,BNNSReduceFunctionMin = 0x1,BNNSReduceFunctionArgMax = 0x2,BNNSReduceFunctionArgMin = 0x3,BNNSReduceFunctionMean = 0x4,BNNSReduceFunctionMeanNonZero = 0x5,BNNSReduceFunctionSum = 0x6,BNNSReduceFunctionSumSquare = 0x7,BNNSReduceFunctionSumLog = 0x8,BNNSReduceFunctionL1Norm = 0x9,BNNSReduceFunctionLogicalOr = 0xA,BNNSReduceFunctionLogicalAnd = 0xB,BNNSReduceFunctionAny = 0xA,BNNSReduceFunctionAll = 0xB,};
struct Block_descriptor_2 {void (*copy)(void *,  void *);void (*dispose)( void *);};
struct Block_descriptor_3 { char *signature; char *layout;};
struct CATextLayerPrivate;
enum CFComparisonResult {kCFCompareLessThan = 0xFFFFFFFFFFFFFFFF,kCFCompareEqualTo = 0x0,kCFCompareGreaterThan = 0x1,};
typedef __CFDateFormatter *CFDateFormatterRef;
typedef __CFString *CFMutableStringRef;
typedef __CFNetDiagnostic *CFNetDiagnosticRef;
enum CFNetServicesError {kCFNetServicesErrorUnknown = 0xFFFEE6C0,kCFNetServicesErrorCollision = 0xFFFEE6BF,kCFNetServicesErrorNotFound = 0xFFFEE6BE,kCFNetServicesErrorInProgress = 0xFFFEE6BD,kCFNetServicesErrorBadArgument = 0xFFFEE6BC,kCFNetServicesErrorCancel = 0xFFFEE6BB,kCFNetServicesErrorInvalid = 0xFFFEE6BA,kCFNetServicesErrorTimeout = 0xFFFEE6B9,kCFNetServicesErrorMissingRequiredConfiguration = 0xFFFEE6B8,};
enum CFRunLoopRunResult {kCFRunLoopRunFinished = 0x1,kCFRunLoopRunStopped = 0x2,kCFRunLoopRunTimedOut = 0x3,kCFRunLoopRunHandledSource = 0x4,};
typedef __CFRunLoopSource *CFRunLoopSourceRef;
enum CFURLComponentType {kCFURLComponentScheme = 0x1,kCFURLComponentNetLocation = 0x2,kCFURLComponentPath = 0x3,kCFURLComponentResourceSpecifier = 0x4,kCFURLComponentUser = 0x5,kCFURLComponentPassword = 0x6,kCFURLComponentUserInfo = 0x7,kCFURLComponentHost = 0x8,kCFURLComponentPort = 0x9,kCFURLComponentParameterString = 0xA,kCFURLComponentQuery = 0xB,kCFURLComponentFragment = 0xC,};
typedef  __CFURLEnumerator *CFURLEnumeratorRef;
struct CGImageDestination;
typedef  CGImageMetadata *CGImageMetadataRef;
struct CGImageMetadataTag;
struct CGPDFContentStream;
typedef CGPDFDictionary *CGPDFDictionaryRef;
struct CGPDFOperatorTable;
enum CKNotificationType {CKNotificationTypeQuery = 0x1,CKNotificationTypeRecordZone = 0x2,CKNotificationTypeReadNotification = 0x3,CKNotificationTypeDatabase = 0x4,};
enum CKRecordSavePolicy {CKRecordSaveIfServerRecordUnchanged = 0x0,CKRecordSaveChangedKeys = 0x1,CKRecordSaveAllKeys = 0x2,};
enum CKSubscriptionType {CKSubscriptionTypeQuery = 0x1,CKSubscriptionTypeRecordZone = 0x2,CKSubscriptionTypeDatabase = 0x3,};
struct CLGeocoderInternal;
typedef double CLLocationAccuracy;
typedef double CLLocationDistance;
enum CLSBinaryValueType {CLSBinaryValueTypeTrueFalse = 0x0,CLSBinaryValueTypePassFail = 0x1,CLSBinaryValueTypeYesNo = 0x2,CLSBinaryValueTypeCorrectIncorrect = 0x3,};
typedef void *CMPedometerHandler;
typedef void *CMStepQueryHandler;
enum CNContactSortOrder {CNContactSortOrderNone = 0x0,CNContactSortOrderUserDefault = 0x1,CNContactSortOrderGivenName = 0x2,CNContactSortOrderFamilyName = 0x3,};
enum CPAlertActionStyle {CPAlertActionStyleDefault = 0x0,CPAlertActionStyleCancel = 0x1,CPAlertActionStyleDestructive = 0x2,};
typedef void *CPBarButtonHandler;
enum CTFontManagerError {kCTFontManagerErrorFileNotFound = 0x65,kCTFontManagerErrorInsufficientPermissions = 0x66,kCTFontManagerErrorUnrecognizedFormat = 0x67,kCTFontManagerErrorInvalidFontData = 0x68,kCTFontManagerErrorAlreadyRegistered = 0x69,kCTFontManagerErrorExceededResourceLimit = 0x6A,kCTFontManagerErrorAssetNotFound = 0x6B,kCTFontManagerErrorNotRegistered = 0xC9,kCTFontManagerErrorInUse = 0xCA,kCTFontManagerErrorSystemRequired = 0xCB,kCTFontManagerErrorRegistrationFailed = 0x12D,kCTFontManagerErrorMissingEntitlement = 0x12E,kCTFontManagerErrorInsufficientInfo = 0x12F,kCTFontManagerErrorCancelledByUser = 0x130,kCTFontManagerErrorDuplicatedName = 0x131,kCTFontManagerErrorInvalidFilePath = 0x132,};
enum CTFontManagerScope {kCTFontManagerScopeNone = 0x0,kCTFontManagerScopeProcess = 0x1,kCTFontManagerScopePersistent = 0x2,kCTFontManagerScopeSession = 0x3,kCTFontManagerScopeUser = 0x2,};
enum CTFrameProgression {kCTFrameProgressionTopToBottom = 0x0,kCTFrameProgressionRightToLeft = 0x1,kCTFrameProgressionLeftToRight = 0x2,};
enum CTWritingDirection {kCTWritingDirectionNatural = 0xFF,kCTWritingDirectionLeftToRight = 0x0,kCTWritingDirectionRightToLeft = 0x1,};
struct DenseVector_Double {int count;double *data;};
enum EKReminderPriority {EKReminderPriorityNone = 0x0,EKReminderPriorityHigh = 0x1,EKReminderPriorityMedium = 0x5,EKReminderPriorityLow = 0x9,};
enum HKWeatherCondition {HKWeatherConditionNone = 0x0,HKWeatherConditionClear = 0x1,HKWeatherConditionFair = 0x2,HKWeatherConditionPartlyCloudy = 0x3,HKWeatherConditionMostlyCloudy = 0x4,HKWeatherConditionCloudy = 0x5,HKWeatherConditionFoggy = 0x6,HKWeatherConditionHaze = 0x7,HKWeatherConditionWindy = 0x8,HKWeatherConditionBlustery = 0x9,HKWeatherConditionSmoky = 0xA,HKWeatherConditionDust = 0xB,HKWeatherConditionSnow = 0xC,HKWeatherConditionHail = 0xD,HKWeatherConditionSleet = 0xE,HKWeatherConditionFreezingDrizzle = 0xF,HKWeatherConditionFreezingRain = 0x10,HKWeatherConditionMixedRainAndHail = 0x11,HKWeatherConditionMixedRainAndSnow = 0x12,HKWeatherConditionMixedRainAndSleet = 0x13,HKWeatherConditionMixedSnowAndSleet = 0x14,HKWeatherConditionDrizzle = 0x15,HKWeatherConditionScatteredShowers = 0x16,HKWeatherConditionShowers = 0x17,HKWeatherConditionThunderstorms = 0x18,HKWeatherConditionTropicalStorm = 0x19,HKWeatherConditionHurricane = 0x1A,HKWeatherConditionTornado = 0x1B,};
enum HKWorkoutEventType {HKWorkoutEventTypePause = 0x1,HKWorkoutEventTypeResume = 0x2,HKWorkoutEventTypeLap = 0x3,HKWorkoutEventTypeMarker = 0x4,HKWorkoutEventTypeMotionPaused = 0x5,HKWorkoutEventTypeMotionResumed = 0x6,HKWorkoutEventTypeSegment = 0x7,HKWorkoutEventTypePauseOrResumeRequest = 0x8,};
enum ICLegacyReturnCode {ICLegacyReturnCodeCommunicationErr = 0xFFFFFFFFFFFFD954,ICLegacyReturnCodeDeviceNotFoundErr = 0xFFFFFFFFFFFFD953,ICLegacyReturnCodeDeviceNotOpenErr = 0xFFFFFFFFFFFFD952,ICLegacyReturnCodeFileCorruptedErr = 0xFFFFFFFFFFFFD951,ICLegacyReturnCodeIOPendingErr = 0xFFFFFFFFFFFFD950,ICLegacyReturnCodeInvalidObjectErr = 0xFFFFFFFFFFFFD94F,ICLegacyReturnCodeInvalidPropertyErr = 0xFFFFFFFFFFFFD94E,ICLegacyReturnCodeIndexOutOfRangeErr = 0xFFFFFFFFFFFFD94D,ICLegacyReturnCodePropertyTypeNotFoundErr = 0xFFFFFFFFFFFFD94C,ICLegacyReturnCodeCannotYieldDevice = 0xFFFFFFFFFFFFD94B,ICLegacyReturnCodeDataTypeNotFoundErr = 0xFFFFFFFFFFFFD94A,ICLegacyReturnCodeDeviceMemoryAllocationErr = 0xFFFFFFFFFFFFD949,ICLegacyReturnCodeDeviceInternalErr = 0xFFFFFFFFFFFFD948,ICLegacyReturnCodeDeviceInvalidParamErr = 0xFFFFFFFFFFFFD947,ICLegacyReturnCodeDeviceAlreadyOpenErr = 0xFFFFFFFFFFFFD946,ICLegacyReturnCodeDeviceLocationIDNotFoundErr = 0xFFFFFFFFFFFFD945,ICLegacyReturnCodeDeviceGUIDNotFoundErr = 0xFFFFFFFFFFFFD944,ICLegacyReturnCodeDeviceIOServicePathNotFoundErr = 0xFFFFFFFFFFFFD943,ICLegacyReturnCodeDeviceUnsupportedErr = 0xFFFFFFFFFFFFD942,ICLegacyReturnCodeFrameworkInternalErr = 0xFFFFFFFFFFFFD941,ICLegacyReturnCodeExtensionInternalErr = 0xFFFFFFFFFFFFD940,ICLegacyReturnCodeInvalidSessionErr = 0xFFFFFFFFFFFFD93F,};
enum ICReturnCodeOffset {ICReturnCodeThumbnailOffset = 0xFFFFFFFFFFFFADF8,ICReturnCodeMetadataOffset = 0xFFFFFFFFFFFFADC6,ICReturnCodeDownloadOffset = 0xFFFFFFFFFFFFAD94,ICReturnCodeDeleteOffset = 0xFFFFFFFFFFFFAD62,ICReturnCodeExFATOffset = 0xFFFFFFFFFFFFAD30,ICReturnCodePTPOffset = 0xFFFFFFFFFFFFACFE,ICReturnCodeSystemOffset = 0xFFFFFFFFFFFFACCC,ICReturnCodeDeviceOffset = 0xFFFFFFFFFFFFAC9A,ICReturnCodeDeviceConnection = 0xFFFFFFFFFFFFAC68,ICReturnCodeObjectOffset = 0xFFFFFFFFFFFFAC36,};
enum INMessageAttribute {INMessageAttributeUnknown = 0x0,INMessageAttributeRead = 0x1,INMessageAttributeUnread = 0x2,INMessageAttributeFlagged = 0x3,INMessageAttributeUnflagged = 0x4,INMessageAttributePlayed = 0x5,};
enum INNotebookItemType {INNotebookItemTypeUnknown = 0x0,INNotebookItemTypeNote = 0x1,INNotebookItemTypeTaskList = 0x2,INNotebookItemTypeTask = 0x3,};
enum INPersonHandleType {INPersonHandleTypeUnknown = 0x0,INPersonHandleTypeEmailAddress = 0x1,INPersonHandleTypePhoneNumber = 0x2,};
typedef OpaqueJSContext *JSGlobalContextRef;
typedef KernOffsetTable *KernOffsetTablePtr;
typedef KernTableHeader *KernTableHeaderPtr;
typedef KerxTableHeader *KerxTableHeaderPtr;
enum MACRO_BTREEVERSION {BTREEVERSION = 3,};
enum MACRO_CTLTYPE_NODE {CTLTYPE_NODE = 1,CTLTYPE_INT = 2,CTLTYPE_STRING = 3,CTLTYPE_QUAD = 4,CTLTYPE_OPAQUE = 5,};
enum MACRO_EAFNOSUPPORT {EAFNOSUPPORT = 47,};
enum MACRO_ECONNABORTED {ECONNABORTED = 53,};
enum MACRO_ECONNREFUSED {ECONNREFUSED = 61,};
enum MACRO_EDESTADDRREQ {EDESTADDRREQ = 39,};
enum MACRO_EHOSTUNREACH {EHOSTUNREACH = 65,};
enum MACRO_ENAMETOOLONG {ENAMETOOLONG = 63,EHOSTDOWN = 64,};
enum MACRO_EPFNOSUPPORT {EPFNOSUPPORT = 46,};
enum MACRO_EPROCUNAVAIL {EPROCUNAVAIL = 76,};
enum MACRO_EPROGUNAVAIL {EPROGUNAVAIL = 74,};
enum MACRO_ERPCMISMATCH {ERPCMISMATCH = 73,};
enum MACRO_ETOOMANYREFS {ETOOMANYREFS = 59,};
enum MACRO_ICMP6_ROUTER {ICMP6_ROUTER_RENUMBERING = 138,ICMP6_WRUREQUEST = 139,ICMP6_WRUREPLY = 140,ICMP6_FQDN_QUERY = 139,ICMP6_FQDN_REPLY = 140,ICMP6_NI_QUERY = 139,ICMP6_NI_REPLY = 140,};
enum MACRO_IPV6_MAXHLIM {IPV6_MAXHLIM = 255,IPV6_DEFHLIM = 64,IPV6_FRAGTTL = 60,IPV6_HLIMDEC = 1,IPV6_MMTU = 1280,IPV6_MAXPACKET = 65535,IPV6_MAXOPTHDR = 2048,};
enum MACRO_IPV6_VERSION {IPV6_VERSION = 0x60,IPV6_VERSION_MASK = 0xF0,IPV6_FLOWINFO_MASK = 0xFFFFFF0F,IPV6_FLOWLABEL_MASK = 0xFFFF0F00,IPV6_FLOW_ECN_MASK = 0x3000,};
enum MACRO_IP_PORTRANGE {IP_PORTRANGE_DEFAULT = 0,IP_PORTRANGE_HIGH = 1,IP_PORTRANGE_LOW = 2,};
enum MACRO_MACH_VOUCHER {MACH_VOUCHER_NULL = 0,MACH_VOUCHER_NAME_NULL = 0,MACH_VOUCHER_NAME_ARRAY_NULL = 0,};
enum MACRO_MAXAUDITDATA {MAXAUDITDATA = 0x7FFF,};
enum MACRO_NAME_MAX_LEN {ZONE_NAME_MAX_LEN = 80,MACH_ZONE_NAME_MAX_LEN = 80,MACH_MEMORY_INFO_NAME_MAX_LEN = 80,};
enum MACRO_NSLINKMODULE {NSLINKMODULE_OPTION_NONE = 0x0,NSLINKMODULE_OPTION_BINDNOW = 0x1,NSLINKMODULE_OPTION_PRIVATE = 0x2,NSLINKMODULE_OPTION_RETURN_ON_ERROR = 0x4,NSLINKMODULE_OPTION_DONT_CALL_MOD_INIT_ROUTINES = 0x8,NSLINKMODULE_OPTION_TRAILING_PHYS_NAME = 0x10,};
enum MACRO_NULL_xdrproc {NULL_xdrproc_t = 0,};
enum MACRO_RES_MAXNDOTS {RES_MAXNDOTS = 15,RES_MAXRETRANS = 30,RES_MAXRETRY = 5,RES_DFLRETRY = 2,RES_MAXTIME = 65535,RES_F_VC = 1,RES_F_CONN = 2,RES_F_EDNS0ERR = 4,RES_EXHAUSTIVE = 1,RES_IPV4ONLY = 2,RES_IPV6ONLY = 4,RES_INIT = 1,RES_DEBUG = 2,RES_AAONLY = 4,RES_USEVC = 8,RES_PRIMARY = 16,RES_IGNTC = 32,RES_RECURSE = 64,RES_DEFNAMES = 128,RES_STAYOPEN = 256,RES_DNSRCH = 512,RES_INSECURE1 = 1024,RES_INSECURE2 = 2048,RES_NOALIASES = 4096,RES_USE_INET6 = 8192,RES_ROTATE = 16384,RES_NOCHECKNAME = 32768,RES_KEEPTSIG = 65536,RES_BLAST = 131072,RES_NO_NIBBLE = 262144,RES_NO_BITSTRING = 524288,RES_NOTLDQUERY = 1048576,RES_USE_DNSSEC = 2097152,RES_USE_DNAME = 268435456,RES_USE_A6 = 536870912,RES_USE_EDNS0 = 1073741824,RES_NO_NIBBLE2 = 2147483648,RES_PRF_STATS = 1,RES_PRF_UPDATE = 2,RES_PRF_CLASS = 4,RES_PRF_CMD = 8,RES_PRF_QUES = 16,RES_PRF_ANS = 32,RES_PRF_AUTH = 64,RES_PRF_ADD = 128,RES_PRF_HEAD1 = 256,RES_PRF_HEAD2 = 512,RES_PRF_TTLID = 1024,RES_PRF_HEADX = 2048,RES_PRF_QUERY = 4096,RES_PRF_REPLY = 8192,RES_PRF_INIT = 16384,RES_PRF_TRUNC = 32768,};
enum MACRO_RLIM_NLIMITS {RLIM_NLIMITS = 9,};
enum MACRO_RUSERSVERS_1 {RUSERSVERS_1 = 1,RUSERSVERS_2 = 2,};
enum MACRO_RUSERSVERS_3 {RUSERSVERS_3 = 3,};
enum MACRO_SM_MAXSTRLEN {SM_MAXSTRLEN = 1024,SM_PROG = 100024,SM_VERS = 1,SM_STAT = 1,SM_MON = 2,SM_UNMON = 3,SM_UNMON_ALL = 4,SM_SIMU_CRASH = 5,SM_NOTIFY = 6,};
enum MACRO_THREAD_DEBUG {THREAD_DEBUG_INFO_INTERNAL = 6,};
enum MACRO_THREAD_SCHED {THREAD_SCHED_TIMESHARE_INFO = 10,THREAD_SCHED_RR_INFO = 11,THREAD_SCHED_FIFO_INFO = 12,THREAD_STANDARD_POLICY = 1,THREAD_STANDARD_POLICY_COUNT = 0,THREAD_EXTENDED_POLICY = 1,THREAD_TIME_CONSTRAINT_POLICY = 2,THREAD_PRECEDENCE_POLICY = 3,THREAD_AFFINITY_POLICY = 4,THREAD_AFFINITY_TAG_NULL = 0,THREAD_BACKGROUND_POLICY = 5,THREAD_BACKGROUND_POLICY_DARWIN_BG = 4096,THREAD_LATENCY_QOS_POLICY = 7,THREAD_THROUGHPUT_QOS_POLICY = 8,THREAD_KERNEL_PORT = 1,THREAD_INSPECT_PORT = 2,THREAD_READ_PORT = 3,};
enum MACRO_THREAD_STATE {THREAD_STATE_FLAVOR_LIST = 0,THREAD_STATE_FLAVOR_LIST_NEW = 128,THREAD_STATE_FLAVOR_LIST_10_9 = 129,THREAD_STATE_FLAVOR_LIST_10_13 = 130,THREAD_STATE_FLAVOR_LIST_10_15 = 131,THREAD_CONVERT_THREAD_STATE_TO_SELF = 1,THREAD_CONVERT_THREAD_STATE_FROM_SELF = 2,};
enum MACRO_UCONFIG_ONLY {UCONFIG_ONLY_COLLATION = 0,UCONFIG_NO_FILE_IO = 0,UCONFIG_NO_CONVERSION = 0,UCONFIG_ONLY_HTML_CONVERSION = 0,UCONFIG_NO_LEGACY_CONVERSION = 0,UCONFIG_NO_NORMALIZATION = 0,UCONFIG_NO_BREAK_ITERATION = 0,UCONFIG_NO_IDNA = 0,UCONFIG_USE_WINDOWS_LCID_MAPPING_API = 1,UCONFIG_NO_COLLATION = 0,UCONFIG_NO_FORMATTING = 0,UCONFIG_NO_TRANSLITERATION = 0,UCONFIG_NO_REGULAR_EXPRESSIONS = 0,UCONFIG_NO_SERVICE = 1,UCONFIG_HAVE_PARSEALLINPUT = 1,UCONFIG_NO_FILTERED_BREAK_ITERATION = 0,};
enum MACRO_YPPASSWDPROC {YPPASSWDPROC_UPDATE = 1,};
enum MACRO_YPPASSWDPROG {YPPASSWDPROG = 100009,};
enum MACRO_YPPASSWDVERS {YPPASSWDVERS = 1,};
enum MACRO__LIBCPP_NULL {_LIBCPP_NULL_THREAD = 0,};
enum MACRO__POSIX_SPAWN {_POSIX_SPAWN_RESLIDE = 0x800,};
enum MACRO__XOPEN_CRYPT {_XOPEN_CRYPT = 1,_XOPEN_ENH_I18N = 1,_XOPEN_LEGACY = -1,_XOPEN_REALTIME = -1,_XOPEN_REALTIME_THREADS = -1,_XOPEN_SHM = 1,_XOPEN_STREAMS = -1,_XOPEN_UNIX = 1,};
enum MACRO___DARWIN_ACL {__DARWIN_ACL_READ_DATA = 2,__DARWIN_ACL_WRITE_DATA = 4,__DARWIN_ACL_EXECUTE = 8,__DARWIN_ACL_DELETE = 16,__DARWIN_ACL_APPEND_DATA = 32,__DARWIN_ACL_DELETE_CHILD = 64,__DARWIN_ACL_READ_ATTRIBUTES = 128,__DARWIN_ACL_WRITE_ATTRIBUTES = 256,__DARWIN_ACL_READ_EXTATTRIBUTES = 512,__DARWIN_ACL_WRITE_EXTATTRIBUTES = 1024,__DARWIN_ACL_READ_SECURITY = 2048,__DARWIN_ACL_WRITE_SECURITY = 4096,__DARWIN_ACL_CHANGE_OWNER = 8192,__DARWIN_ACL_SYNCHRONIZE = 1048576,__DARWIN_ACL_EXTENDED_ALLOW = 1,__DARWIN_ACL_EXTENDED_DENY = 2,__DARWIN_ACL_ENTRY_INHERITED = 16,__DARWIN_ACL_ENTRY_FILE_INHERIT = 32,__DARWIN_ACL_ENTRY_DIRECTORY_INHERIT = 64,__DARWIN_ACL_ENTRY_LIMIT_INHERIT = 128,__DARWIN_ACL_ENTRY_ONLY_INHERIT = 256,__DARWIN_ACL_FLAG_NO_INHERIT = 131072,};
enum MACRO___DARWIN_CLK {__DARWIN_CLK_TCK = 100,};
enum MACRO___FOUNDATION {__FOUNDATION_NSPOINTERFUNCTIONS__ = 1,__FOUNDATION_NSHASHTABLE__ = 1,__FOUNDATION_NSMAPTABLE__ = 1,};
typedef void (*MIDICompletionProc)(MIDISysexSendRequest *);
enum MKUserTrackingMode {MKUserTrackingModeNone = 0x0,MKUserTrackingModeFollow = 0x1,MKUserTrackingModeFollowWithHeading = 0x2,};
enum MLCConvolutionType {MLCConvolutionTypeStandard = 0x0,MLCConvolutionTypeTransposed = 0x1,MLCConvolutionTypeDepthwise = 0x2,};
struct MLCDeviceOptimizer;
enum MPMovieScalingMode {MPMovieScalingModeNone = 0x0,MPMovieScalingModeAspectFit = 0x1,MPMovieScalingModeAspectFill = 0x2,MPMovieScalingModeFill = 0x3,};
enum MPMusicShuffleMode {MPMusicShuffleModeDefault = 0x0,MPMusicShuffleModeOff = 0x1,MPMusicShuffleModeSongs = 0x2,MPMusicShuffleModeAlbums = 0x3,};
enum MPSGraphDeviceType {MPSGraphDeviceTypeMetal = 0x0,};
enum MPSGraphResizeMode {MPSGraphResizeNearest = 0x0,MPSGraphResizeBilinear = 0x1,};
enum MPSRayMaskOperator {MPSRayMaskOperatorAnd = 0x0,MPSRayMaskOperatorNotAnd = 0x1,MPSRayMaskOperatorOr = 0x2,MPSRayMaskOperatorNotOr = 0x3,MPSRayMaskOperatorXor = 0x4,MPSRayMaskOperatorNotXor = 0x5,MPSRayMaskOperatorLessThan = 0x6,MPSRayMaskOperatorLessThanOrEqualTo = 0x7,MPSRayMaskOperatorGreaterThan = 0x8,MPSRayMaskOperatorGreaterThanOrEqualTo = 0x9,MPSRayMaskOperatorEqual = 0xA,MPSRayMaskOperatorNotEqual = 0xB,};
enum MSMessageErrorCode {MSMessageErrorCodeUnknown = 0xFFFFFFFFFFFFFFFF,MSMessageErrorCodeFileNotFound = 0x1,MSMessageErrorCodeFileUnreadable = 0x2,MSMessageErrorCodeImproperFileType = 0x3,MSMessageErrorCodeImproperFileURL = 0x4,MSMessageErrorCodeStickerFileImproperFileAttributes = 0x5,MSMessageErrorCodeStickerFileImproperFileSize = 0x6,MSMessageErrorCodeStickerFileImproperFileFormat = 0x7,MSMessageErrorCodeURLExceedsMaxSize = 0x8,MSMessageErrorCodeSendWithoutRecentInteraction = 0x9,MSMessageErrorCodeSendWhileNotVisible = 0xA,MSMessageErrorCodeAPIUnavailableInPresentationContext = 0xB,};
enum MTLAttributeFormat {MTLAttributeFormatInvalid = 0x0,MTLAttributeFormatUChar2 = 0x1,MTLAttributeFormatUChar3 = 0x2,MTLAttributeFormatUChar4 = 0x3,MTLAttributeFormatChar2 = 0x4,MTLAttributeFormatChar3 = 0x5,MTLAttributeFormatChar4 = 0x6,MTLAttributeFormatUChar2Normalized = 0x7,MTLAttributeFormatUChar3Normalized = 0x8,MTLAttributeFormatUChar4Normalized = 0x9,MTLAttributeFormatChar2Normalized = 0xA,MTLAttributeFormatChar3Normalized = 0xB,MTLAttributeFormatChar4Normalized = 0xC,MTLAttributeFormatUShort2 = 0xD,MTLAttributeFormatUShort3 = 0xE,MTLAttributeFormatUShort4 = 0xF,MTLAttributeFormatShort2 = 0x10,MTLAttributeFormatShort3 = 0x11,MTLAttributeFormatShort4 = 0x12,MTLAttributeFormatUShort2Normalized = 0x13,MTLAttributeFormatUShort3Normalized = 0x14,MTLAttributeFormatUShort4Normalized = 0x15,MTLAttributeFormatShort2Normalized = 0x16,MTLAttributeFormatShort3Normalized = 0x17,MTLAttributeFormatShort4Normalized = 0x18,MTLAttributeFormatHalf2 = 0x19,MTLAttributeFormatHalf3 = 0x1A,MTLAttributeFormatHalf4 = 0x1B,MTLAttributeFormatFloat = 0x1C,MTLAttributeFormatFloat2 = 0x1D,MTLAttributeFormatFloat3 = 0x1E,MTLAttributeFormatFloat4 = 0x1F,MTLAttributeFormatInt = 0x20,MTLAttributeFormatInt2 = 0x21,MTLAttributeFormatInt3 = 0x22,MTLAttributeFormatInt4 = 0x23,MTLAttributeFormatUInt = 0x24,MTLAttributeFormatUInt2 = 0x25,MTLAttributeFormatUInt3 = 0x26,MTLAttributeFormatUInt4 = 0x27,MTLAttributeFormatInt1010102Normalized = 0x28,MTLAttributeFormatUInt1010102Normalized = 0x29,MTLAttributeFormatUChar4Normalized_BGRA = 0x2A,MTLAttributeFormatUChar = 0x2D,MTLAttributeFormatChar = 0x2E,MTLAttributeFormatUCharNormalized = 0x2F,MTLAttributeFormatCharNormalized = 0x30,MTLAttributeFormatUShort = 0x31,MTLAttributeFormatShort = 0x32,MTLAttributeFormatUShortNormalized = 0x33,MTLAttributeFormatShortNormalized = 0x34,MTLAttributeFormatHalf = 0x35,};
enum MTLCompareFunction {MTLCompareFunctionNever = 0x0,MTLCompareFunctionLess = 0x1,MTLCompareFunctionEqual = 0x2,MTLCompareFunctionLessEqual = 0x3,MTLCompareFunctionGreater = 0x4,MTLCompareFunctionNotEqual = 0x5,MTLCompareFunctionGreaterEqual = 0x6,MTLCompareFunctionAlways = 0x7,};
enum MTLFunctionLogType {MTLFunctionLogTypeValidation = 0x0,};
enum MTLLanguageVersion {MTLLanguageVersion1_0 = 0x10000,MTLLanguageVersion1_1 = 0x10001,MTLLanguageVersion1_2 = 0x10002,MTLLanguageVersion2_0 = 0x20000,MTLLanguageVersion2_1 = 0x20001,MTLLanguageVersion2_2 = 0x20002,MTLLanguageVersion2_3 = 0x20003,};
typedef OpaqueMusicEventIterator *MusicEventIterator;
enum NETrafficDirection {NETrafficDirectionAny = 0x0,NETrafficDirectionInbound = 0x1,NETrafficDirectionOutbound = 0x2,};
enum NSCalculationError {NSCalculationNoError = 0x0,NSCalculationLossOfPrecision = 0x1,NSCalculationUnderflow = 0x2,NSCalculationOverflow = 0x3,NSCalculationDivideByZero = 0x4,};
enum NSComparisonResult {NSOrderedAscending = 0xFFFFFFFFFFFFFFFF,NSOrderedSame = 0x0,NSOrderedDescending = 0x1,};
typedef NSData *NSFileProviderPage;
struct NSMigrationContext;
enum NSNetServicesError {NSNetServicesUnknownError = 0xFFFFFFFFFFFEE6C0,NSNetServicesCollisionError = 0xFFFFFFFFFFFEE6BF,NSNetServicesNotFoundError = 0xFFFFFFFFFFFEE6BE,NSNetServicesActivityInProgress = 0xFFFFFFFFFFFEE6BD,NSNetServicesBadArgumentError = 0xFFFFFFFFFFFEE6BC,NSNetServicesCancelledError = 0xFFFFFFFFFFFEE6BB,NSNetServicesInvalidError = 0xFFFFFFFFFFFEE6BA,NSNetServicesTimeoutError = 0xFFFFFFFFFFFEE6B9,NSNetServicesMissingRequiredConfigurationError = 0xFFFFFFFFFFFEE6B8,};
enum NSQualityOfService {NSQualityOfServiceUserInteractive = 0x21,NSQualityOfServiceUserInitiated = 0x19,NSQualityOfServiceUtility = 0x11,NSQualityOfServiceBackground = 0x9,NSQualityOfServiceDefault = 0xFFFFFFFFFFFFFFFF,};
struct NSTextAlternatives;
struct NSURLCacheInternal;
enum NSWritingDirection {NSWritingDirectionNatural = 0xFFFFFFFFFFFFFFFF,NSWritingDirectionLeftToRight = 0x0,NSWritingDirectionRightToLeft = 0x1,};
enum OSLogEntryLogLevel {OSLogEntryLogLevelUndefined = 0x0,OSLogEntryLogLevelDebug = 0x1,OSLogEntryLogLevelInfo = 0x2,OSLogEntryLogLevelNotice = 0x3,OSLogEntryLogLevelError = 0x4,OSLogEntryLogLevelFault = 0x5,};
struct OpaqueCMMemoryPool;
struct OpaqueExtAudioFile;
enum PDFActionNamedName {kPDFActionNamedNone = 0x0,kPDFActionNamedNextPage = 0x1,kPDFActionNamedPreviousPage = 0x2,kPDFActionNamedFirstPage = 0x3,kPDFActionNamedLastPage = 0x4,kPDFActionNamedGoBack = 0x5,kPDFActionNamedGoForward = 0x6,kPDFActionNamedGoToPage = 0x7,kPDFActionNamedFind = 0x8,kPDFActionNamedPrint = 0x9,kPDFActionNamedZoomIn = 0xA,kPDFActionNamedZoomOut = 0xB,};
struct PDFAnnotationPopup;
struct PDFDocumentPrivate;
enum PDFWidgetCellState {kPDFWidgetMixedState = 0xFFFFFFFFFFFFFFFF,kPDFWidgetOffState = 0x0,kPDFWidgetOnState = 0x1,};
enum PHImageContentMode {PHImageContentModeAspectFit = 0x0,PHImageContentModeAspectFill = 0x1,PHImageContentModeDefault = 0x0,};
enum PKPassKitErrorCode {PKUnknownError = 0xFFFFFFFFFFFFFFFF,PKInvalidDataError = 0x1,PKUnsupportedVersionError = 0x2,PKInvalidSignature = 0x3,PKNotEntitledError = 0x4,};
enum PKPaymentErrorCode {PKPaymentUnknownError = 0xFFFFFFFFFFFFFFFF,PKPaymentShippingContactInvalidError = 0x1,PKPaymentBillingContactInvalidError = 0x2,PKPaymentShippingAddressUnserviceableError = 0x3,};
enum RPSampleBufferType {RPSampleBufferTypeVideo = 0x1,RPSampleBufferTypeAudioApp = 0x2,RPSampleBufferTypeAudioMic = 0x3,};
typedef void (*Register68kProcPtr)(void);
enum SCNBufferFrequency {SCNBufferFrequencyPerFrame = 0x0,SCNBufferFrequencyPerNode = 0x1,SCNBufferFrequencyPerShadable = 0x2,};
enum SCNInteractionMode {SCNInteractionModeFly = 0x0,SCNInteractionModeOrbitTurntable = 0x1,SCNInteractionModeOrbitAngleMapping = 0x2,SCNInteractionModeOrbitCenteredArcball = 0x3,SCNInteractionModeOrbitArcball = 0x4,SCNInteractionModePan = 0x5,SCNInteractionModeTruck = 0x6,};
enum SCNPhysicsBodyType {SCNPhysicsBodyTypeStatic = 0x0,SCNPhysicsBodyTypeDynamic = 0x1,SCNPhysicsBodyTypeKinematic = 0x2,};
typedef SFNTLookupTable *SFNTLookupTablePtr;
enum SKActionTimingMode {SKActionTimingLinear = 0x0,SKActionTimingEaseIn = 0x1,SKActionTimingEaseOut = 0x2,SKActionTimingEaseInEaseOut = 0x3,};
enum SRCrownOrientation {SRCrownOrientationLeft = 0x0,SRCrownOrientationRight = 0x1,};
enum SRLocationCategory {SRLocationCategoryUnknown = 0x0,SRLocationCategoryHome = 0x1,SRLocationCategoryWork = 0x2,SRLocationCategorySchool = 0x3,SRLocationCategoryGym = 0x4,};
typedef __SecKeychainItem *SecKeychainItemRef;
enum SecTrustResultType {kSecTrustResultInvalid = 0x0,kSecTrustResultProceed = 0x1,kSecTrustResultConfirm = 0x2,kSecTrustResultDeny = 0x3,kSecTrustResultUnspecified = 0x4,kSecTrustResultRecoverableTrustFailure = 0x5,kSecTrustResultFatalTrustFailure = 0x6,kSecTrustResultOtherError = 0x7,};
struct SparseAttributes_t {char transpose : 1;unsigned char triangle : 1;unsigned int kind : 2;unsigned int _reserved : 11;char _allocatedBySparse : 1;};
enum UDecompositionType {U_DT_NONE = 0x0,U_DT_CANONICAL = 0x1,U_DT_COMPAT = 0x2,U_DT_CIRCLE = 0x3,U_DT_FINAL = 0x4,U_DT_FONT = 0x5,U_DT_FRACTION = 0x6,U_DT_INITIAL = 0x7,U_DT_ISOLATED = 0x8,U_DT_MEDIAL = 0x9,U_DT_NARROW = 0xA,U_DT_NOBREAK = 0xB,U_DT_SMALL = 0xC,U_DT_SQUARE = 0xD,U_DT_SUB = 0xE,U_DT_SUPER = 0xF,U_DT_VERTICAL = 0x10,U_DT_WIDE = 0x11,U_DT_COUNT = 0x12,};
enum UIActionSheetStyle {UIActionSheetStyleAutomatic = 0xFFFFFFFFFFFFFFFF,UIActionSheetStyleDefault = 0x0,UIActionSheetStyleBlackTranslucent = 0x2,UIActionSheetStyleBlackOpaque = 0x1,};
enum UIActivityCategory {UIActivityCategoryAction = 0x0,UIActivityCategoryShare = 0x1,};
enum UIAlertActionStyle {UIAlertActionStyleDefault = 0x0,UIAlertActionStyleCancel = 0x1,UIAlertActionStyleDestructive = 0x2,};
enum UIApplicationState {UIApplicationStateActive = 0x0,UIApplicationStateInactive = 0x1,UIApplicationStateBackground = 0x2,};
enum UIImageOrientation {};
enum UIImageSymbolScale {UIImageSymbolScaleDefault = 0xFFFFFFFFFFFFFFFF,UIImageSymbolScaleUnspecified = 0x0,UIImageSymbolScaleSmall = 0x1,UIImageSymbolScaleMedium = 0x2,UIImageSymbolScaleLarge = 0x3,};
enum UIKeyboardHIDUsage {UIKeyboardHIDUsageKeyboardErrorRollOver = 0x1,UIKeyboardHIDUsageKeyboardPOSTFail = 0x2,UIKeyboardHIDUsageKeyboardErrorUndefined = 0x3,UIKeyboardHIDUsageKeyboardA = 0x4,UIKeyboardHIDUsageKeyboardB = 0x5,UIKeyboardHIDUsageKeyboardC = 0x6,UIKeyboardHIDUsageKeyboardD = 0x7,UIKeyboardHIDUsageKeyboardE = 0x8,UIKeyboardHIDUsageKeyboardF = 0x9,UIKeyboardHIDUsageKeyboardG = 0xA,UIKeyboardHIDUsageKeyboardH = 0xB,UIKeyboardHIDUsageKeyboardI = 0xC,UIKeyboardHIDUsageKeyboardJ = 0xD,UIKeyboardHIDUsageKeyboardK = 0xE,UIKeyboardHIDUsageKeyboardL = 0xF,UIKeyboardHIDUsageKeyboardM = 0x10,UIKeyboardHIDUsageKeyboardN = 0x11,UIKeyboardHIDUsageKeyboardO = 0x12,UIKeyboardHIDUsageKeyboardP = 0x13,UIKeyboardHIDUsageKeyboardQ = 0x14,UIKeyboardHIDUsageKeyboardR = 0x15,UIKeyboardHIDUsageKeyboardS = 0x16,UIKeyboardHIDUsageKeyboardT = 0x17,UIKeyboardHIDUsageKeyboardU = 0x18,UIKeyboardHIDUsageKeyboardV = 0x19,UIKeyboardHIDUsageKeyboardW = 0x1A,UIKeyboardHIDUsageKeyboardX = 0x1B,UIKeyboardHIDUsageKeyboardY = 0x1C,UIKeyboardHIDUsageKeyboardZ = 0x1D,UIKeyboardHIDUsageKeyboard1 = 0x1E,UIKeyboardHIDUsageKeyboard2 = 0x1F,UIKeyboardHIDUsageKeyboard3 = 0x20,UIKeyboardHIDUsageKeyboard4 = 0x21,UIKeyboardHIDUsageKeyboard5 = 0x22,UIKeyboardHIDUsageKeyboard6 = 0x23,UIKeyboardHIDUsageKeyboard7 = 0x24,UIKeyboardHIDUsageKeyboard8 = 0x25,UIKeyboardHIDUsageKeyboard9 = 0x26,UIKeyboardHIDUsageKeyboard0 = 0x27,UIKeyboardHIDUsageKeyboardReturnOrEnter = 0x28,UIKeyboardHIDUsageKeyboardEscape = 0x29,UIKeyboardHIDUsageKeyboardDeleteOrBackspace = 0x2A,UIKeyboardHIDUsageKeyboardTab = 0x2B,UIKeyboardHIDUsageKeyboardSpacebar = 0x2C,UIKeyboardHIDUsageKeyboardHyphen = 0x2D,UIKeyboardHIDUsageKeyboardEqualSign = 0x2E,UIKeyboardHIDUsageKeyboardOpenBracket = 0x2F,UIKeyboardHIDUsageKeyboardCloseBracket = 0x30,UIKeyboardHIDUsageKeyboardBackslash = 0x31,UIKeyboardHIDUsageKeyboardNonUSPound = 0x32,UIKeyboardHIDUsageKeyboardSemicolon = 0x33,UIKeyboardHIDUsageKeyboardQuote = 0x34,UIKeyboardHIDUsageKeyboardGraveAccentAndTilde = 0x35,UIKeyboardHIDUsageKeyboardComma = 0x36,UIKeyboardHIDUsageKeyboardPeriod = 0x37,UIKeyboardHIDUsageKeyboardSlash = 0x38,UIKeyboardHIDUsageKeyboardCapsLock = 0x39,UIKeyboardHIDUsageKeyboardF1 = 0x3A,UIKeyboardHIDUsageKeyboardF2 = 0x3B,UIKeyboardHIDUsageKeyboardF3 = 0x3C,UIKeyboardHIDUsageKeyboardF4 = 0x3D,UIKeyboardHIDUsageKeyboardF5 = 0x3E,UIKeyboardHIDUsageKeyboardF6 = 0x3F,UIKeyboardHIDUsageKeyboardF7 = 0x40,UIKeyboardHIDUsageKeyboardF8 = 0x41,UIKeyboardHIDUsageKeyboardF9 = 0x42,UIKeyboardHIDUsageKeyboardF10 = 0x43,UIKeyboardHIDUsageKeyboardF11 = 0x44,UIKeyboardHIDUsageKeyboardF12 = 0x45,UIKeyboardHIDUsageKeyboardPrintScreen = 0x46,UIKeyboardHIDUsageKeyboardScrollLock = 0x47,UIKeyboardHIDUsageKeyboardPause = 0x48,UIKeyboardHIDUsageKeyboardInsert = 0x49,UIKeyboardHIDUsageKeyboardHome = 0x4A,UIKeyboardHIDUsageKeyboardPageUp = 0x4B,UIKeyboardHIDUsageKeyboardDeleteForward = 0x4C,UIKeyboardHIDUsageKeyboardEnd = 0x4D,UIKeyboardHIDUsageKeyboardPageDown = 0x4E,UIKeyboardHIDUsageKeyboardRightArrow = 0x4F,UIKeyboardHIDUsageKeyboardLeftArrow = 0x50,UIKeyboardHIDUsageKeyboardDownArrow = 0x51,UIKeyboardHIDUsageKeyboardUpArrow = 0x52,UIKeyboardHIDUsageKeypadNumLock = 0x53,UIKeyboardHIDUsageKeypadSlash = 0x54,UIKeyboardHIDUsageKeypadAsterisk = 0x55,UIKeyboardHIDUsageKeypadHyphen = 0x56,UIKeyboardHIDUsageKeypadPlus = 0x57,UIKeyboardHIDUsageKeypadEnter = 0x58,UIKeyboardHIDUsageKeypad1 = 0x59,UIKeyboardHIDUsageKeypad2 = 0x5A,UIKeyboardHIDUsageKeypad3 = 0x5B,UIKeyboardHIDUsageKeypad4 = 0x5C,UIKeyboardHIDUsageKeypad5 = 0x5D,UIKeyboardHIDUsageKeypad6 = 0x5E,UIKeyboardHIDUsageKeypad7 = 0x5F,UIKeyboardHIDUsageKeypad8 = 0x60,UIKeyboardHIDUsageKeypad9 = 0x61,UIKeyboardHIDUsageKeypad0 = 0x62,UIKeyboardHIDUsageKeypadPeriod = 0x63,UIKeyboardHIDUsageKeyboardNonUSBackslash = 0x64,UIKeyboardHIDUsageKeyboardApplication = 0x65,UIKeyboardHIDUsageKeyboardPower = 0x66,UIKeyboardHIDUsageKeypadEqualSign = 0x67,UIKeyboardHIDUsageKeyboardF13 = 0x68,UIKeyboardHIDUsageKeyboardF14 = 0x69,UIKeyboardHIDUsageKeyboardF15 = 0x6A,UIKeyboardHIDUsageKeyboardF16 = 0x6B,UIKeyboardHIDUsageKeyboardF17 = 0x6C,UIKeyboardHIDUsageKeyboardF18 = 0x6D,UIKeyboardHIDUsageKeyboardF19 = 0x6E,UIKeyboardHIDUsageKeyboardF20 = 0x6F,UIKeyboardHIDUsageKeyboardF21 = 0x70,UIKeyboardHIDUsageKeyboardF22 = 0x71,UIKeyboardHIDUsageKeyboardF23 = 0x72,UIKeyboardHIDUsageKeyboardF24 = 0x73,UIKeyboardHIDUsageKeyboardExecute = 0x74,UIKeyboardHIDUsageKeyboardHelp = 0x75,UIKeyboardHIDUsageKeyboardMenu = 0x76,UIKeyboardHIDUsageKeyboardSelect = 0x77,UIKeyboardHIDUsageKeyboardStop = 0x78,UIKeyboardHIDUsageKeyboardAgain = 0x79,UIKeyboardHIDUsageKeyboardUndo = 0x7A,UIKeyboardHIDUsageKeyboardCut = 0x7B,UIKeyboardHIDUsageKeyboardCopy = 0x7C,UIKeyboardHIDUsageKeyboardPaste = 0x7D,UIKeyboardHIDUsageKeyboardFind = 0x7E,UIKeyboardHIDUsageKeyboardMute = 0x7F,UIKeyboardHIDUsageKeyboardVolumeUp = 0x80,UIKeyboardHIDUsageKeyboardVolumeDown = 0x81,UIKeyboardHIDUsageKeyboardLockingCapsLock = 0x82,UIKeyboardHIDUsageKeyboardLockingNumLock = 0x83,UIKeyboardHIDUsageKeyboardLockingScrollLock = 0x84,UIKeyboardHIDUsageKeypadComma = 0x85,UIKeyboardHIDUsageKeypadEqualSignAS400 = 0x86,UIKeyboardHIDUsageKeyboardInternational1 = 0x87,UIKeyboardHIDUsageKeyboardInternational2 = 0x88,UIKeyboardHIDUsageKeyboardInternational3 = 0x89,UIKeyboardHIDUsageKeyboardInternational4 = 0x8A,UIKeyboardHIDUsageKeyboardInternational5 = 0x8B,UIKeyboardHIDUsageKeyboardInternational6 = 0x8C,UIKeyboardHIDUsageKeyboardInternational7 = 0x8D,UIKeyboardHIDUsageKeyboardInternational8 = 0x8E,UIKeyboardHIDUsageKeyboardInternational9 = 0x8F,UIKeyboardHIDUsageKeyboardLANG1 = 0x90,UIKeyboardHIDUsageKeyboardLANG2 = 0x91,UIKeyboardHIDUsageKeyboardLANG3 = 0x92,UIKeyboardHIDUsageKeyboardLANG4 = 0x93,UIKeyboardHIDUsageKeyboardLANG5 = 0x94,UIKeyboardHIDUsageKeyboardLANG6 = 0x95,UIKeyboardHIDUsageKeyboardLANG7 = 0x96,UIKeyboardHIDUsageKeyboardLANG8 = 0x97,UIKeyboardHIDUsageKeyboardLANG9 = 0x98,UIKeyboardHIDUsageKeyboardAlternateErase = 0x99,UIKeyboardHIDUsageKeyboardSysReqOrAttention = 0x9A,UIKeyboardHIDUsageKeyboardCancel = 0x9B,UIKeyboardHIDUsageKeyboardClear = 0x9C,UIKeyboardHIDUsageKeyboardPrior = 0x9D,UIKeyboardHIDUsageKeyboardReturn = 0x9E,UIKeyboardHIDUsageKeyboardSeparator = 0x9F,UIKeyboardHIDUsageKeyboardOut = 0xA0,UIKeyboardHIDUsageKeyboardOper = 0xA1,UIKeyboardHIDUsageKeyboardClearOrAgain = 0xA2,UIKeyboardHIDUsageKeyboardCrSelOrProps = 0xA3,UIKeyboardHIDUsageKeyboardExSel = 0xA4,UIKeyboardHIDUsageKeyboardLeftControl = 0xE0,UIKeyboardHIDUsageKeyboardLeftShift = 0xE1,UIKeyboardHIDUsageKeyboardLeftAlt = 0xE2,UIKeyboardHIDUsageKeyboardLeftGUI = 0xE3,UIKeyboardHIDUsageKeyboardRightControl = 0xE4,UIKeyboardHIDUsageKeyboardRightShift = 0xE5,UIKeyboardHIDUsageKeyboardRightAlt = 0xE6,UIKeyboardHIDUsageKeyboardRightGUI = 0xE7,UIKeyboardHIDUsageKeyboard_Reserved = 0xFFFF,UIKeyboardHIDUsageKeyboardHangul = 0x90,UIKeyboardHIDUsageKeyboardHanja = 0x91,UIKeyboardHIDUsageKeyboardKanaSwitch = 0x90,UIKeyboardHIDUsageKeyboardAlphanumericSwitch = 0x91,UIKeyboardHIDUsageKeyboardKatakana = 0x92,UIKeyboardHIDUsageKeyboardHiragana = 0x93,UIKeyboardHIDUsageKeyboardZenkakuHankakuKanji = 0x94,};
enum UILegibilityWeight {UILegibilityWeightUnspecified = 0xFFFFFFFFFFFFFFFF,UILegibilityWeightRegular = 0x0,UILegibilityWeightBold = 0x1,};
enum UIMenuElementState {UIMenuElementStateOff = 0x0,UIMenuElementStateOn = 0x1,UIMenuElementStateMixed = 0x2,};
enum UIPushBehaviorMode {UIPushBehaviorModeContinuous = 0x0,UIPushBehaviorModeInstantaneous = 0x1,};
enum UITabBarSystemItem {UITabBarSystemItemMore = 0x0,UITabBarSystemItemFavorites = 0x1,UITabBarSystemItemFeatured = 0x2,UITabBarSystemItemTopRated = 0x3,UITabBarSystemItemRecents = 0x4,UITabBarSystemItemContacts = 0x5,UITabBarSystemItemHistory = 0x6,UITabBarSystemItemBookmarks = 0x7,UITabBarSystemItemSearch = 0x8,UITabBarSystemItemDownloads = 0x9,UITabBarSystemItemMostRecent = 0xA,UITabBarSystemItemMostViewed = 0xB,};
struct URegularExpression;
struct __CFFileDescriptor;
struct __CFPlugInInstance;
struct __CTFontCollection;
struct __CTFontDescriptor;
struct __CTParagraphStyle;
struct __CTRubyAnnotation;
struct __SCNetworkService;
struct __SecAccessControl;
struct __arm_pagein_state {int __pagein_error;};
typedef int __darwin_ct_rune_t;
typedef __mbstate_t __darwin_mbstate_t;
typedef unsigned int __darwin_natural_t;
typedef _opaque_pthread_t *__darwin_pthread_t;
typedef long long __darwin_ptrdiff_t;
typedef int __darwin_wctrans_t;
typedef std____1__complex_double_ __double_complex_t;
struct __objc_method_desc {void *name;char *types;};
struct _res_9_ns_flagdata {int mask;int shift;};
struct _xmlParserNodeInfo { _xmlNode *node;unsigned long long begin_pos;unsigned long long begin_line;unsigned long long end_pos;unsigned long long end_line;};
struct accessx_descriptor {unsigned int ad_name_offset;int ad_flags;int ad_pad[2];};
typedef __darwin_arm_amx_state_v1 arm_amx_state_v1_t;
typedef __darwin_arm_neon_state arm_neon_state32_t;
typedef __darwin_arm_neon_state64 arm_neon_state64_t;
typedef __arm_pagein_state arm_pagein_state_t;
typedef __darwin_arm_thread_state arm_thread_state_t;
enum axr_channel_type_t {axr_channel_type_unknown = 0x0,axr_channel_type_red = 0x1,axr_channel_type_green = 0x2,axr_channel_type_blue = 0x3,axr_channel_type_alpha = 0x4,axr_channel_type_alpha_red = 0x5,axr_channel_type_alpha_green = 0x6,axr_channel_type_alpha_blue = 0x7,axr_channel_type_cr = 0x8,axr_channel_type_cb = 0x9,axr_channel_type_y = 0xA,axr_channel_type_x = 0xB,axr_channel_type_z = 0xC,axr_channel_type_distance = 0xD,axr_channel_type_distance_back = 0xE,axr_channel_type_id = 0xF,};
typedef cache_attributes_s cache_attributes_t;
typedef void (*cache_release_cb_t)(void *, void *);
enum compression_status {COMPRESSION_STATUS_OK = 0x0,COMPRESSION_STATUS_ERROR = 0xFFFFFFFF,COMPRESSION_STATUS_END = 0x1,};
typedef unsigned long long dispatch_io_type_t;
struct dns_HINFO_record_t {char *cpu;char *os;};
struct dns_MINFO_record_t {char *rmailbx;char *emailbx;};
typedef void (*endDocumentSAXFunc)(void *);
enum filesec_property_t {FILESEC_OWNER = 0x1,FILESEC_GROUP = 0x2,FILESEC_UUID = 0x3,FILESEC_MODE = 0x4,FILESEC_ACL = 0x5,FILESEC_GRPUUID = 0x6,FILESEC_ACL_RAW = 0x64,FILESEC_ACL_ALLOCSIZE = 0x65,};
typedef  struct gss_ctx_id_t_desc_struct gss_const_ctx_id_t;
typedef hash_info_bucket hash_info_bucket_t;
typedef char kernel_boot_info_t[4096];
typedef mach_memory_info mach_memory_info_t;
typedef int mach_msg_filter_id;
typedef int mach_port_flavor_t;
typedef mach_port_limits mach_port_limits_t;
typedef mach_port_status mach_port_status_t;
typedef unsigned int mach_task_flavor_t;
typedef void (*mig_stub_routine_t)(mach_msg_header_t *, mach_msg_header_t *);
typedef NSObject *nw_browse_result_t;
enum nw_browser_state_t {nw_browser_state_invalid = 0x0,nw_browser_state_ready = 0x1,nw_browser_state_failed = 0x2,nw_browser_state_cancelled = 0x3,};
enum nw_endpoint_type_t {nw_endpoint_type_invalid = 0x0,nw_endpoint_type_address = 0x1,nw_endpoint_type_host = 0x2,nw_endpoint_type_bonjour_service = 0x3,nw_endpoint_type_url = 0x4,};
enum nw_service_class_t {nw_service_class_best_effort = 0x0,nw_service_class_background = 0x1,nw_service_class_interactive_video = 0x2,nw_service_class_interactive_voice = 0x3,nw_service_class_responsive_data = 0x4,nw_service_class_signaling = 0x5,};
enum nw_ws_close_code_t {nw_ws_close_code_normal_closure = 0x3E8,nw_ws_close_code_going_away = 0x3E9,nw_ws_close_code_protocol_error = 0x3EA,nw_ws_close_code_unsupported_data = 0x3EB,nw_ws_close_code_no_status_received = 0x3ED,nw_ws_close_code_abnormal_closure = 0x3EE,nw_ws_close_code_invalid_frame_payload_data = 0x3EF,nw_ws_close_code_policy_violation = 0x3F0,nw_ws_close_code_message_too_big = 0x3F1,nw_ws_close_code_mandatory_extension = 0x3F2,nw_ws_close_code_internal_server_error = 0x3F3,nw_ws_close_code_tls_handshake = 0x3F7,};
enum os_activity_flag_t {OS_ACTIVITY_FLAG_DEFAULT = 0x0,OS_ACTIVITY_FLAG_DETACHED = 0x1,OS_ACTIVITY_FLAG_IF_NONE_PRESENT = 0x2,};
enum os_signpost_type_t {OS_SIGNPOST_EVENT = 0x0,OS_SIGNPOST_INTERVAL_BEGIN = 0x1,OS_SIGNPOST_INTERVAL_END = 0x2,};
typedef void *os_trace_payload_t;
typedef policy_bases policy_base_data_t;
typedef policy_fifo_base *policy_fifo_base_t;
typedef policy_fifo_info *policy_fifo_info_t;
typedef policy_infos policy_info_data_t;
typedef int processor_flavor_t;
struct pthread_override_s;
typedef pthread_override_s *pthread_override_t;
enum reloc_type_generic {GENERIC_RELOC_VANILLA = 0x0,GENERIC_RELOC_PAIR = 0x1,GENERIC_RELOC_SECTDIFF = 0x2,GENERIC_RELOC_PB_LA_PTR = 0x3,GENERIC_RELOC_LOCAL_SECTDIFF = 0x4,GENERIC_RELOC_TLV = 0x5,};
typedef _removefile_state *removefile_state_t;
typedef unsigned int routine_arg_offset;
typedef simd_packed_int2 simd__packed__int2;
typedef simd_packed_int4 simd__packed__int4;
typedef simd_packed_int8 simd__packed__int8;
union __attribute__((aligned(16))) simd_packed_char16 {char i8[16];short i16[8];int i32[4];long long i64[2];unsigned char u8[16];unsigned short u16[8];unsigned int u32[4];unsigned long long u64[2];};
union __attribute__((aligned(16))) simd_packed_char32 {char i8[32];short i16[16];int i32[8];long long i64[4];__int128 i128[2];unsigned char u8[32];unsigned short u16[16];unsigned int u32[8];unsigned long long u64[4];__uint128 u128[2];};
union __attribute__((aligned(16))) simd_packed_char64 {char i8[64];short i16[32];int i32[16];long long i64[8];__int128 i128[4];unsigned char u8[64];unsigned short u16[32];unsigned int u32[16];unsigned long long u64[8];__uint128 u128[4];};
union __attribute__((aligned(8))) simd_packed_float2 {float f32[2];char i8[8];short i16[4];int i32[2];unsigned char u8[8];unsigned short u16[4];unsigned int u32[2];};
union __attribute__((aligned(16))) simd_packed_float4 {float f32[4];char i8[16];short i16[8];int i32[4];long long i64[2];unsigned char u8[16];unsigned short u16[8];unsigned int u32[4];unsigned long long u64[2];};
union __attribute__((aligned(16))) simd_packed_float8 {float f32[8];char i8[32];short i16[16];int i32[8];long long i64[4];__int128 i128[2];unsigned char u8[32];unsigned short u16[16];unsigned int u32[8];unsigned long long u64[4];__uint128 u128[2];};
union __attribute__((aligned(4))) simd_packed_short2 {char i8[4];short i16[2];unsigned char u8[4];unsigned short u16[2];};
union __attribute__((aligned(8))) simd_packed_short4 {char i8[8];short i16[4];int i32[2];unsigned char u8[8];unsigned short u16[4];unsigned int u32[2];};
union __attribute__((aligned(16))) simd_packed_short8 {char i8[16];short i16[8];int i32[4];long long i64[2];unsigned char u8[16];unsigned short u16[8];unsigned int u32[4];unsigned long long u64[2];};
union __attribute__((aligned(2))) simd_packed_uchar2 {char i8[2];unsigned char u8[2];};
union __attribute__((aligned(4))) simd_packed_uchar4 {char i8[4];short i16[2];unsigned char u8[4];unsigned short u16[2];};
union __attribute__((aligned(8))) simd_packed_uchar8 {char i8[8];short i16[4];int i32[2];unsigned char u8[8];unsigned short u16[4];unsigned int u32[2];};
union __attribute__((aligned(16))) simd_packed_uint16 {char i8[64];short i16[32];int i32[16];long long i64[8];__int128 i128[4];unsigned char u8[64];unsigned short u16[32];unsigned int u32[16];unsigned long long u64[8];__uint128 u128[4];};
union __attribute__((aligned(16))) simd_packed_ulong2 {char i8[16];short i16[8];int i32[4];long long i64[2];unsigned char u8[16];unsigned short u16[8];unsigned int u32[4];unsigned long long u64[2];};
union __attribute__((aligned(16))) simd_packed_ulong4 {char i8[32];short i16[16];int i32[8];long long i64[4];__int128 i128[2];unsigned char u8[32];unsigned short u16[16];unsigned int u32[8];unsigned long long u64[4];__uint128 u128[2];};
union __attribute__((aligned(16))) simd_packed_ulong8 {char i8[64];short i16[32];int i32[16];long long i64[8];__int128 i128[4];unsigned char u8[64];unsigned short u16[32];unsigned int u32[16];unsigned long long u64[8];__uint128 u128[4];};
struct std____1____sp_mut {void *__lx;};
typedef struct std____1__basic_ifstream_char_ std____1__ifstream;
typedef std____1__basic_iostream_char_ std____1__iostream;
typedef struct std____1__basic_ofstream_char_ std____1__ofstream;
typedef struct std____1__basic_filebuf_wchar_t_ std____1__wfilebuf;
typedef struct std____1__basic_fstream_wchar_t_ std____1__wfstream;
typedef std____1__basic_istream_wchar_t_ std____1__wistream;
typedef std____1__basic_ostream_wchar_t_ std____1__wostream;
struct std__bad_cast_vtbl; 
struct std__exception_ptr {void *__ptr_;};
typedef task_events_info *task_events_info_t;
typedef task_extmod_info *task_extmod_info_t;
enum vDSP_DFT_Direction {vDSP_DFT_FORWARD = 0x1,vDSP_DFT_INVERSE = 0xFFFFFFFF,};
typedef vDSP_biquad_SetupStructD *vDSP_biquad_SetupD;
typedef vDSP_biquadm_SetupStruct *vDSP_biquadm_Setup;
typedef vImageConverter *vImageConverterRef;
struct vImageRGBPrimaries {float red_x;float green_x;float blue_x;float white_x;float red_y;float green_y;float blue_y;float white_y;};
typedef int vm_region_flavor_t;
struct vm_region_top_info {unsigned int obj_id;unsigned int ref_count;unsigned int private_pages_resident;unsigned int shared_pages_resident;unsigned char share_mode;};
typedef int (*xmlListDataCompare)( void *,  void *);
enum xmlRelaxNGValidErr {XML_RELAXNG_OK = 0x0,XML_RELAXNG_ERR_MEMORY = 0x1,XML_RELAXNG_ERR_TYPE = 0x2,XML_RELAXNG_ERR_TYPEVAL = 0x3,XML_RELAXNG_ERR_DUPID = 0x4,XML_RELAXNG_ERR_TYPECMP = 0x5,XML_RELAXNG_ERR_NOSTATE = 0x6,XML_RELAXNG_ERR_NODEFINE = 0x7,XML_RELAXNG_ERR_LISTEXTRA = 0x8,XML_RELAXNG_ERR_LISTEMPTY = 0x9,XML_RELAXNG_ERR_INTERNODATA = 0xA,XML_RELAXNG_ERR_INTERSEQ = 0xB,XML_RELAXNG_ERR_INTEREXTRA = 0xC,XML_RELAXNG_ERR_ELEMNAME = 0xD,XML_RELAXNG_ERR_ATTRNAME = 0xE,XML_RELAXNG_ERR_ELEMNONS = 0xF,XML_RELAXNG_ERR_ATTRNONS = 0x10,XML_RELAXNG_ERR_ELEMWRONGNS = 0x11,XML_RELAXNG_ERR_ATTRWRONGNS = 0x12,XML_RELAXNG_ERR_ELEMEXTRANS = 0x13,XML_RELAXNG_ERR_ATTREXTRANS = 0x14,XML_RELAXNG_ERR_ELEMNOTEMPTY = 0x15,XML_RELAXNG_ERR_NOELEM = 0x16,XML_RELAXNG_ERR_NOTELEM = 0x17,XML_RELAXNG_ERR_ATTRVALID = 0x18,XML_RELAXNG_ERR_CONTENTVALID = 0x19,XML_RELAXNG_ERR_EXTRACONTENT = 0x1A,XML_RELAXNG_ERR_INVALIDATTR = 0x1B,XML_RELAXNG_ERR_DATAELEM = 0x1C,XML_RELAXNG_ERR_VALELEM = 0x1D,XML_RELAXNG_ERR_LISTELEM = 0x1E,XML_RELAXNG_ERR_DATATYPE = 0x1F,XML_RELAXNG_ERR_VALUE = 0x20,XML_RELAXNG_ERR_LIST = 0x21,XML_RELAXNG_ERR_NOGRAMMAR = 0x22,XML_RELAXNG_ERR_EXTRADATA = 0x23,XML_RELAXNG_ERR_LACKDATA = 0x24,XML_RELAXNG_ERR_INTERNAL = 0x25,XML_RELAXNG_ERR_ELEMWRONG = 0x26,XML_RELAXNG_ERR_TEXTWRONG = 0x27,};
typedef _xmlSchemaAttribute xmlSchemaAttribute;
typedef _xmlSchemaFacetLink xmlSchemaFacetLink;
typedef struct _xmlSchemaValidCtxt xmlSchemaValidCtxt;
enum xmlXPathObjectType {XPATH_UNDEFINED = 0x0,XPATH_NODESET = 0x1,XPATH_BOOLEAN = 0x2,XPATH_NUMBER = 0x3,XPATH_STRING = 0x4,XPATH_POINT = 0x5,XPATH_RANGE = 0x6,XPATH_LOCATIONSET = 0x7,XPATH_USERS = 0x8,XPATH_XSLT_TREE = 0x9,};
struct AAByteStream_impl;
struct ALCcontext_struct;
enum ARConfidenceLevel {ARConfidenceLevelLow = 0x0,ARConfidenceLevelMedium = 0x1,ARConfidenceLevelHigh = 0x2,};
enum ARMatteResolution {ARMatteResolutionFull = 0x0,ARMatteResolutionHalf = 0x1,};
enum AURenderEventType {AURenderEventParameter = 0x1,AURenderEventParameterRamp = 0x2,AURenderEventMIDI = 0x8,AURenderEventMIDISysEx = 0x9,};
typedef OpaqueAudioConverter *AudioConverterRef;
typedef OpaqueAudioFileStreamID *AudioFileStreamID;
enum BCChatButtonStyle {BCChatButtonStyleLight = 0x0,BCChatButtonStyleDark = 0x1,};
enum CBConnectionEvent {CBConnectionEventPeerDisconnected = 0x0,CBConnectionEventPeerConnected = 0x1,};
enum CBPeripheralState {CBPeripheralStateDisconnected = 0x0,CBPeripheralStateConnecting = 0x1,CBPeripheralStateConnected = 0x2,CBPeripheralStateDisconnecting = 0x3,};
typedef  __CFCharacterSet *CFCharacterSetRef;
typedef __CFFileSecurity *CFFileSecurityRef;
typedef __CFArray *CFMutableArrayRef;
typedef __CFRunLoopTimer *CFRunLoopTimerRef;
enum CFStreamErrorHTTP {kCFStreamErrorHTTPParseFailure = 0xFFFFFFFF,kCFStreamErrorHTTPRedirectionLoop = 0xFFFFFFFE,kCFStreamErrorHTTPBadURL = 0xFFFFFFFD,};
enum CFStringEncodings {kCFStringEncodingMacJapanese = 0x1,kCFStringEncodingMacChineseTrad = 0x2,kCFStringEncodingMacKorean = 0x3,kCFStringEncodingMacArabic = 0x4,kCFStringEncodingMacHebrew = 0x5,kCFStringEncodingMacGreek = 0x6,kCFStringEncodingMacCyrillic = 0x7,kCFStringEncodingMacDevanagari = 0x9,kCFStringEncodingMacGurmukhi = 0xA,kCFStringEncodingMacGujarati = 0xB,kCFStringEncodingMacOriya = 0xC,kCFStringEncodingMacBengali = 0xD,kCFStringEncodingMacTamil = 0xE,kCFStringEncodingMacTelugu = 0xF,kCFStringEncodingMacKannada = 0x10,kCFStringEncodingMacMalayalam = 0x11,kCFStringEncodingMacSinhalese = 0x12,kCFStringEncodingMacBurmese = 0x13,kCFStringEncodingMacKhmer = 0x14,kCFStringEncodingMacThai = 0x15,kCFStringEncodingMacLaotian = 0x16,kCFStringEncodingMacGeorgian = 0x17,kCFStringEncodingMacArmenian = 0x18,kCFStringEncodingMacChineseSimp = 0x19,kCFStringEncodingMacTibetan = 0x1A,kCFStringEncodingMacMongolian = 0x1B,kCFStringEncodingMacEthiopic = 0x1C,kCFStringEncodingMacCentralEurRoman = 0x1D,kCFStringEncodingMacVietnamese = 0x1E,kCFStringEncodingMacExtArabic = 0x1F,kCFStringEncodingMacSymbol = 0x21,kCFStringEncodingMacDingbats = 0x22,kCFStringEncodingMacTurkish = 0x23,kCFStringEncodingMacCroatian = 0x24,kCFStringEncodingMacIcelandic = 0x25,kCFStringEncodingMacRomanian = 0x26,kCFStringEncodingMacCeltic = 0x27,kCFStringEncodingMacGaelic = 0x28,kCFStringEncodingMacFarsi = 0x8C,kCFStringEncodingMacUkrainian = 0x98,kCFStringEncodingMacInuit = 0xEC,kCFStringEncodingMacVT100 = 0xFC,kCFStringEncodingMacHFS = 0xFF,kCFStringEncodingISOLatin2 = 0x202,kCFStringEncodingISOLatin3 = 0x203,kCFStringEncodingISOLatin4 = 0x204,kCFStringEncodingISOLatinCyrillic = 0x205,kCFStringEncodingISOLatinArabic = 0x206,kCFStringEncodingISOLatinGreek = 0x207,kCFStringEncodingISOLatinHebrew = 0x208,kCFStringEncodingISOLatin5 = 0x209,kCFStringEncodingISOLatin6 = 0x20A,kCFStringEncodingISOLatinThai = 0x20B,kCFStringEncodingISOLatin7 = 0x20D,kCFStringEncodingISOLatin8 = 0x20E,kCFStringEncodingISOLatin9 = 0x20F,kCFStringEncodingISOLatin10 = 0x210,kCFStringEncodingDOSLatinUS = 0x400,kCFStringEncodingDOSGreek = 0x405,kCFStringEncodingDOSBalticRim = 0x406,kCFStringEncodingDOSLatin1 = 0x410,kCFStringEncodingDOSGreek1 = 0x411,kCFStringEncodingDOSLatin2 = 0x412,kCFStringEncodingDOSCyrillic = 0x413,kCFStringEncodingDOSTurkish = 0x414,kCFStringEncodingDOSPortuguese = 0x415,kCFStringEncodingDOSIcelandic = 0x416,kCFStringEncodingDOSHebrew = 0x417,kCFStringEncodingDOSCanadianFrench = 0x418,kCFStringEncodingDOSArabic = 0x419,kCFStringEncodingDOSNordic = 0x41A,kCFStringEncodingDOSRussian = 0x41B,kCFStringEncodingDOSGreek2 = 0x41C,kCFStringEncodingDOSThai = 0x41D,kCFStringEncodingDOSJapanese = 0x420,kCFStringEncodingDOSChineseSimplif = 0x421,kCFStringEncodingDOSKorean = 0x422,kCFStringEncodingDOSChineseTrad = 0x423,kCFStringEncodingWindowsLatin2 = 0x501,kCFStringEncodingWindowsCyrillic = 0x502,kCFStringEncodingWindowsGreek = 0x503,kCFStringEncodingWindowsLatin5 = 0x504,kCFStringEncodingWindowsHebrew = 0x505,kCFStringEncodingWindowsArabic = 0x506,kCFStringEncodingWindowsBalticRim = 0x507,kCFStringEncodingWindowsVietnamese = 0x508,kCFStringEncodingWindowsKoreanJohab = 0x510,kCFStringEncodingANSEL = 0x601,kCFStringEncodingJIS_X0201_76 = 0x620,kCFStringEncodingJIS_X0208_83 = 0x621,kCFStringEncodingJIS_X0208_90 = 0x622,kCFStringEncodingJIS_X0212_90 = 0x623,kCFStringEncodingJIS_C6226_78 = 0x624,kCFStringEncodingShiftJIS_X0213 = 0x628,kCFStringEncodingShiftJIS_X0213_MenKuTen = 0x629,kCFStringEncodingGB_2312_80 = 0x630,kCFStringEncodingGBK_95 = 0x631,kCFStringEncodingGB_18030_2000 = 0x632,kCFStringEncodingKSC_5601_87 = 0x640,kCFStringEncodingKSC_5601_92_Johab = 0x641,kCFStringEncodingCNS_11643_92_P1 = 0x651,kCFStringEncodingCNS_11643_92_P2 = 0x652,kCFStringEncodingCNS_11643_92_P3 = 0x653,kCFStringEncodingISO_2022_JP = 0x820,kCFStringEncodingISO_2022_JP_2 = 0x821,kCFStringEncodingISO_2022_JP_1 = 0x822,kCFStringEncodingISO_2022_JP_3 = 0x823,kCFStringEncodingISO_2022_CN = 0x830,kCFStringEncodingISO_2022_CN_EXT = 0x831,kCFStringEncodingISO_2022_KR = 0x840,kCFStringEncodingEUC_JP = 0x920,kCFStringEncodingEUC_CN = 0x930,kCFStringEncodingEUC_TW = 0x931,kCFStringEncodingEUC_KR = 0x940,kCFStringEncodingShiftJIS = 0xA01,kCFStringEncodingKOI8_R = 0xA02,kCFStringEncodingBig5 = 0xA03,kCFStringEncodingMacRomanLatin1 = 0xA04,kCFStringEncodingHZ_GB_2312 = 0xA05,kCFStringEncodingBig5_HKSCS_1999 = 0xA06,kCFStringEncodingVISCII = 0xA07,kCFStringEncodingKOI8_U = 0xA08,kCFStringEncodingBig5_E = 0xA09,kCFStringEncodingNextStepJapanese = 0xB02,kCFStringEncodingEBCDIC_US = 0xC01,kCFStringEncodingEBCDIC_CP037 = 0xC02,kCFStringEncodingUTF7 = 0x4000100,kCFStringEncodingUTF7_IMAP = 0xA10,kCFStringEncodingShiftJIS_X0213_00 = 0x628,};
enum CGColorSpaceModel {kCGColorSpaceModelUnknown = 0xFFFFFFFF,kCGColorSpaceModelMonochrome = 0x0,kCGColorSpaceModelRGB = 0x1,kCGColorSpaceModelCMYK = 0x2,kCGColorSpaceModelLab = 0x3,kCGColorSpaceModelDeviceN = 0x4,kCGColorSpaceModelIndexed = 0x5,kCGColorSpaceModelPattern = 0x6,kCGColorSpaceModelXYZ = 0x7,};
typedef CGDataConsumer *CGDataConsumerRef;
typedef CGDataProvider *CGDataProviderRef;
enum CGPathDrawingMode {kCGPathFill = 0x0,kCGPathEOFill = 0x1,kCGPathStroke = 0x2,kCGPathFillStroke = 0x3,kCGPathEOFillStroke = 0x4,};
enum CGPathElementType {kCGPathElementMoveToPoint = 0x0,kCGPathElementAddLineToPoint = 0x1,kCGPathElementAddQuadCurveToPoint = 0x2,kCGPathElementAddCurveToPoint = 0x3,kCGPathElementCloseSubpath = 0x4,};
enum CGTextDrawingMode {kCGTextFill = 0x0,kCGTextStroke = 0x1,kCGTextFillStroke = 0x2,kCGTextInvisible = 0x3,kCGTextFillClip = 0x4,kCGTextStrokeClip = 0x5,kCGTextFillStrokeClip = 0x6,kCGTextClip = 0x7,};
enum CHHapticErrorCode {CHHapticErrorCodeEngineNotRunning = 0xFFFFFFFFFFFFED3B,CHHapticErrorCodeOperationNotPermitted = 0xFFFFFFFFFFFFED3A,CHHapticErrorCodeEngineStartTimeout = 0xFFFFFFFFFFFFED38,CHHapticErrorCodeNotSupported = 0xFFFFFFFFFFFFED37,CHHapticErrorCodeServerInitFailed = 0xFFFFFFFFFFFFED36,CHHapticErrorCodeServerInterrupted = 0xFFFFFFFFFFFFED35,CHHapticErrorCodeInvalidPatternPlayer = 0xFFFFFFFFFFFFED34,CHHapticErrorCodeInvalidPatternData = 0xFFFFFFFFFFFFED33,CHHapticErrorCodeInvalidPatternDictionary = 0xFFFFFFFFFFFFED32,CHHapticErrorCodeInvalidAudioSession = 0xFFFFFFFFFFFFED31,CHHapticErrorCodeInvalidParameterType = 0xFFFFFFFFFFFFED2C,CHHapticErrorCodeInvalidEventType = 0xFFFFFFFFFFFFED2B,CHHapticErrorCodeInvalidEventTime = 0xFFFFFFFFFFFFED2A,CHHapticErrorCodeInvalidEventDuration = 0xFFFFFFFFFFFFED29,CHHapticErrorCodeInvalidAudioResource = 0xFFFFFFFFFFFFED28,CHHapticErrorCodeResourceNotAvailable = 0xFFFFFFFFFFFFED27,CHHapticErrorCodeBadEventEntry = 0xFFFFFFFFFFFFED22,CHHapticErrorCodeBadParameterEntry = 0xFFFFFFFFFFFFED21,CHHapticErrorCodeInvalidTime = 0xFFFFFFFFFFFFED18,CHHapticErrorCodeUnknownError = 0xFFFFFFFFFFFFECDE,CHHapticErrorCodeMemoryError = 0xFFFFFFFFFFFFECDD,};
enum CKReferenceAction {CKReferenceActionNone = 0x0,CKReferenceActionDeleteSelf = 0x1,};
typedef double CLLocationDegrees;
typedef void *CMAltitudeHandler;
typedef opaqueCMSampleBuffer *CMSampleBufferRef;
typedef void *CPListItemHandler;
enum CPTextButtonStyle {CPTextButtonStyleNormal = 0x0,CPTextButtonStyleCancel = 0x1,CPTextButtonStyleConfirm = 0x2,};
enum CPTripPauseReason {CPTripPauseReasonArrived = 0x1,CPTripPauseReasonLoading = 0x2,CPTripPauseReasonLocating = 0x3,CPTripPauseReasonRerouting = 0x4,CPTripPauseReasonProceedToRoute = 0x5,};
enum CTFontOrientation {kCTFontOrientationDefault = 0x0,kCTFontOrientationHorizontal = 0x1,kCTFontOrientationVertical = 0x2,kCTFontDefaultOrientation = 0x0,kCTFontHorizontalOrientation = 0x1,kCTFontVerticalOrientation = 0x2,};
enum CXCallEndedReason {CXCallEndedReasonFailed = 0x1,CXCallEndedReasonRemoteEnded = 0x2,CXCallEndedReasonUnanswered = 0x3,CXCallEndedReasonAnsweredElsewhere = 0x4,CXCallEndedReasonDeclinedElsewhere = 0x5,};
struct DenseVector_Float {int count;float *data;};
enum EKEventViewAction {EKEventViewActionDone = 0x0,EKEventViewActionResponded = 0x1,EKEventViewActionDeleted = 0x2,};
enum EKParticipantRole {EKParticipantRoleUnknown = 0x0,EKParticipantRoleRequired = 0x1,EKParticipantRoleOptional = 0x2,EKParticipantRoleChair = 0x3,EKParticipantRoleNonParticipant = 0x4,};
enum EKParticipantType {EKParticipantTypeUnknown = 0x0,EKParticipantTypePerson = 0x1,EKParticipantTypeRoom = 0x2,EKParticipantTypeResource = 0x3,EKParticipantTypeGroup = 0x4,};
typedef void *ENActivityHandler;
enum GKConnectionState {GKConnectionStateNotConnected = 0x0,GKConnectionStateConnected = 0x1,};
enum GKLeaderboardType {GKLeaderboardTypeClassic = 0x0,GKLeaderboardTypeRecurring = 0x1,};
enum GKMatchmakingMode {GKMatchmakingModeDefault = 0x0,GKMatchmakingModeNearbyOnly = 0x1,GKMatchmakingModeAutomatchOnly = 0x2,};
typedef _GLKMatrixStack *GLKMatrixStackRef;
enum GLKTextureEnvMode {GLKTextureEnvModeReplace = 0x0,GLKTextureEnvModeModulate = 0x1,GLKTextureEnvModeDecal = 0x2,};
enum HKUpdateFrequency {HKUpdateFrequencyImmediate = 0x1,HKUpdateFrequencyHourly = 0x2,HKUpdateFrequencyDaily = 0x3,HKUpdateFrequencyWeekly = 0x4,};
enum ICScannerBitDepth {ICScannerBitDepth1Bit = 0x1,ICScannerBitDepth8Bits = 0x8,ICScannerBitDepth16Bits = 0x10,};
enum INIntentErrorCode {INIntentErrorInteractionOperationNotSupported = 0x76C,INIntentErrorDonatingInteraction = 0x76D,INIntentErrorDeletingAllInteractions = 0x76E,INIntentErrorDeletingInteractionWithIdentifiers = 0x76F,INIntentErrorDeletingInteractionWithGroupIdentifier = 0x770,INIntentErrorIntentSupportedByMultipleExtension = 0x7D1,INIntentErrorRestrictedIntentsNotSupportedByExtension = 0x7D2,INIntentErrorNoHandlerProvidedForIntent = 0x7D3,INIntentErrorInvalidIntentName = 0x7D4,INIntentErrorNoAppAvailable = 0x7D5,INIntentErrorRequestTimedOut = 0xBB9,INIntentErrorMissingInformation = 0xBBA,INIntentErrorInvalidUserVocabularyFileLocation = 0xFA0,INIntentErrorExtensionLaunchingTimeout = 0x1388,INIntentErrorExtensionBringUpFailed = 0x1389,INIntentErrorImageGeneric = 0x1770,INIntentErrorImageNoServiceAvailable = 0x1771,INIntentErrorImageStorageFailed = 0x1772,INIntentErrorImageLoadingFailed = 0x1773,INIntentErrorImageRetrievalFailed = 0x1774,INIntentErrorImageProxyLoop = 0x1775,INIntentErrorImageProxyInvalid = 0x1776,INIntentErrorImageProxyTimeout = 0x1777,INIntentErrorImageServiceFailure = 0x1778,INIntentErrorImageScalingFailed = 0x1779,INIntentErrorPermissionDenied = 0x177A,INIntentErrorVoiceShortcutCreationFailed = 0x1B58,INIntentErrorVoiceShortcutGetFailed = 0x1B59,INIntentErrorVoiceShortcutDeleteFailed = 0x1B5A,INIntentErrorEncodingGeneric = 0x1F40,INIntentErrorEncodingFailed = 0x1F41,INIntentErrorDecodingGeneric = 0x2328,};
enum INNoteContentType {INNoteContentTypeUnknown = 0x0,INNoteContentTypeText = 0x1,INNoteContentTypeImage = 0x2,};
enum INRelativeSetting {INRelativeSettingUnknown = 0x0,INRelativeSettingLowest = 0x1,INRelativeSettingLower = 0x2,INRelativeSettingHigher = 0x3,INRelativeSettingHighest = 0x4,};
typedef unsigned int JSClassAttributes;
typedef  OpaqueJSContextGroup *JSContextGroupRef;
typedef LcarCaretTable *LcarCaretTablePtr;
enum MACRO_AF_RESERVED {AF_RESERVED_36 = 36,AF_IEEE80211 = 37,AF_UTUN = 38,AF_VSOCK = 40,AF_MAX = 41,};
enum MACRO_AVAUDIONODE {AVAUDIONODE_HAVE_AUAUDIOUNIT = 1,};
enum MACRO_AVAUDIOUNIT {AVAUDIOUNIT_HAVE_AUDIOUNIT = 1,};
enum MACRO_EINPROGRESS {EINPROGRESS = 36,};
enum MACRO_ENETUNREACH {ENETUNREACH = 51,};
enum MACRO_ENOPROTOOPT {ENOPROTOOPT = 42,};
enum MACRO_GETSIGSINFO {GETSIGSINFO_PLATFORM_BINARY = 1,};
enum MACRO_HASHVERSION {HASHVERSION = 2,};
enum MACRO_HOST_REBOOT {HOST_REBOOT_HALT = 0x8,HOST_REBOOT_UPSDELAY = 0x100,HOST_REBOOT_DEBUGGER = 0x1000,};
enum MACRO_IPC_VOUCHER {IPC_VOUCHER_NULL = 0,};
enum MACRO_KERN_OSTYPE {KERN_OSTYPE = 1,KERN_OSRELEASE = 2,KERN_OSREV = 3,KERN_VERSION = 4,KERN_MAXVNODES = 5,KERN_MAXPROC = 6,KERN_MAXFILES = 7,KERN_ARGMAX = 8,KERN_SECURELVL = 9,KERN_HOSTNAME = 10,KERN_HOSTID = 11,KERN_CLOCKRATE = 12,KERN_VNODE = 13,KERN_PROC = 14,KERN_FILE = 15,KERN_PROF = 16,KERN_POSIX1 = 17,KERN_NGROUPS = 18,KERN_JOB_CONTROL = 19,KERN_SAVED_IDS = 20,KERN_BOOTTIME = 21,KERN_NISDOMAINNAME = 22,KERN_MAXPARTITIONS = 23,KERN_KDEBUG = 24,KERN_UPDATEINTERVAL = 25,KERN_OSRELDATE = 26,KERN_NTP_PLL = 27,KERN_BOOTFILE = 28,KERN_MAXFILESPERPROC = 29,KERN_MAXPROCPERUID = 30,KERN_DUMPDEV = 31,KERN_IPC = 32,KERN_DUMMY = 33,KERN_PS_STRINGS = 34,KERN_USRSTACK32 = 35,KERN_LOGSIGEXIT = 36,KERN_SYMFILE = 37,KERN_PROCARGS = 38,KERN_NETBOOT = 40,KERN_SYSV = 42,KERN_AFFINITY = 43,KERN_TRANSLATE = 44,KERN_EXEC = 45,KERN_AIOMAX = 46,KERN_AIOPROCMAX = 47,KERN_AIOTHREADS = 48,KERN_PROCARGS2 = 49,KERN_COREFILE = 50,KERN_COREDUMP = 51,KERN_SUGID_COREDUMP = 52,KERN_PROCDELAYTERM = 53,KERN_SHREG_PRIVATIZABLE = 54,KERN_LOW_PRI_WINDOW = 56,KERN_LOW_PRI_DELAY = 57,KERN_POSIX = 58,KERN_USRSTACK64 = 59,KERN_NX_PROTECTION = 60,KERN_TFP = 61,KERN_PROCNAME = 62,KERN_THALTSTACK = 63,KERN_SPECULATIVE_READS = 64,KERN_OSVERSION = 65,KERN_SAFEBOOT = 66,KERN_RAGEVNODE = 68,KERN_TTY = 69,KERN_CHECKOPENEVT = 70,KERN_THREADNAME = 71,KERN_MAXID = 72,KERN_RAGE_PROC = 1,KERN_RAGE_THREAD = 2,KERN_UNRAGE_PROC = 3,KERN_UNRAGE_THREAD = 4,KERN_OPENEVT_PROC = 1,KERN_UNOPENEVT_PROC = 2,KERN_TFP_POLICY = 1,KERN_TFP_POLICY_DENY = 0,KERN_TFP_POLICY_DEFAULT = 2,KERN_KDEFLAGS = 1,KERN_KDDFLAGS = 2,KERN_KDENABLE = 3,KERN_KDSETBUF = 4,KERN_KDGETBUF = 5,KERN_KDSETUP = 6,KERN_KDREMOVE = 7,KERN_KDSETREG = 8,KERN_KDGETREG = 9,KERN_KDREADTR = 10,KERN_KDPIDTR = 11,KERN_KDTHRMAP = 12,KERN_KDPIDEX = 14,KERN_KDSETRTCDEC = 15,KERN_KDGETENTROPY = 16,KERN_KDWRITETR = 17,KERN_KDWRITEMAP = 18,KERN_KDTEST = 19,KERN_KDREADCURTHRMAP = 21,KERN_KDSET_TYPEFILTER = 22,KERN_KDBUFWAIT = 23,KERN_KDCPUMAP = 24,KERN_KDWRITEMAP_V3 = 27,KERN_KDWRITETR_V3 = 28,KERN_PROC_ALL = 0,KERN_PROC_PID = 1,KERN_PROC_PGRP = 2,KERN_PROC_SESSION = 3,KERN_PROC_TTY = 4,KERN_PROC_UID = 5,KERN_PROC_RUID = 6,KERN_PROC_LCID = 7,KERN_VFSNSPACE_HANDLE_PROC = 1,KERN_VFSNSPACE_UNHANDLE_PROC = 2,};
enum MACRO_M16KCLSHIFT {M16KCLSHIFT = 14,};
enum MACRO_MACH_NOTIFY {MACH_NOTIFY_FIRST = 0x40,};
enum MACRO_MAXSYMLINKS {MAXSYMLINKS = 32,};
enum MACRO_MAX_FH_SIZE {NFSV4_MAX_FH_SIZE = 128,NFSV3_MAX_FH_SIZE = 64,NFSV2_MAX_FH_SIZE = 32,};
enum MACRO_MAX_MACHINE {MAX_MACHINE_NAME = 255,};
enum MACRO_MBIGCLSHIFT {MBIGCLSHIFT = 12,};
enum MACRO_MINSIGSTKSZ {MINSIGSTKSZ = 32768,SIGSTKSZ = 131072,};
enum MACRO_MSG_NOERROR {MSG_NOERROR = 0x1000,};
enum MACRO_ND_REDIRECT {ND_REDIRECT_ONLINK = 0,ND_REDIRECT_ROUTER = 1,ND_RA_FLAG_MANAGED = 128,ND_RA_FLAG_OTHER = 64,ND_RA_FLAG_HA = 32,ND_RA_FLAG_RTPREF_MASK = 24,ND_RA_FLAG_RTPREF_HIGH = 8,ND_RA_FLAG_RTPREF_MEDIUM = 0,ND_RA_FLAG_RTPREF_LOW = 24,ND_RA_FLAG_RTPREF_RSV = 16,ND_NA_FLAG_ROUTER = 128,ND_NA_FLAG_SOLICITED = 64,ND_NA_FLAG_OVERRIDE = 32,ND_OPT_SOURCE_LINKADDR = 1,ND_OPT_TARGET_LINKADDR = 2,ND_OPT_PREFIX_INFORMATION = 3,ND_OPT_REDIRECTED_HEADER = 4,ND_OPT_MTU = 5,ND_OPT_NONCE = 14,ND_OPT_ROUTE_INFO = 24,ND_OPT_RDNSS = 25,ND_OPT_DNSSL = 31,ND_OPT_CAPTIVE_PORTAL = 37,ND_OPT_PI_FLAG_ONLINK = 128,ND_OPT_PI_FLAG_AUTO = 64,ND_OPT_NONCE_LEN = 6,};
enum MACRO_NS_PACKETSZ {NS_PACKETSZ = 512,NS_MAXDNAME = 1025,NS_MAXCDNAME = 255,NS_MAXLABEL = 63,NS_HFIXEDSZ = 12,NS_QFIXEDSZ = 4,NS_RRFIXEDSZ = 10,NS_INT32SZ = 4,NS_INT16SZ = 2,NS_INT8SZ = 1,NS_INADDRSZ = 4,NS_IN6ADDRSZ = 16,NS_CMPRSFLGS = 192,NS_DEFAULTPORT = 53,NS_TSIG_FUDGE = 300,NS_TSIG_TCP_COUNT = 100,NS_TSIG_ERROR_NO_TSIG = -10,NS_TSIG_ERROR_NO_SPACE = -11,NS_TSIG_ERROR_FORMERR = -12,NS_KEY_TYPEMASK = 49152,NS_KEY_TYPE_AUTH_CONF = 0,NS_KEY_TYPE_CONF_ONLY = 32768,NS_KEY_TYPE_AUTH_ONLY = 16384,NS_KEY_TYPE_NO_KEY = 49152,NS_KEY_NO_AUTH = 32768,NS_KEY_NO_CONF = 16384,NS_KEY_RESERVED2 = 8192,NS_KEY_EXTENDED_FLAGS = 4096,NS_KEY_RESERVED4 = 2048,NS_KEY_RESERVED5 = 1024,NS_KEY_NAME_TYPE = 768,NS_KEY_NAME_USER = 0,NS_KEY_NAME_ENTITY = 512,NS_KEY_NAME_ZONE = 256,NS_KEY_NAME_RESERVED = 768,NS_KEY_RESERVED8 = 128,NS_KEY_RESERVED9 = 64,NS_KEY_RESERVED10 = 32,NS_KEY_RESERVED11 = 16,NS_KEY_SIGNATORYMASK = 15,NS_KEY_RESERVED_BITMASK2 = 65535,NS_ALG_MD5RSA = 1,NS_ALG_DH = 2,NS_ALG_DSA = 3,NS_ALG_EXPIRE_ONLY = 253,NS_ALG_PRIVATE_OID = 254,NS_KEY_PROT_TLS = 1,NS_KEY_PROT_EMAIL = 2,NS_KEY_PROT_DNSSEC = 3,NS_KEY_PROT_IPSEC = 4,NS_KEY_PROT_ANY = 255,NS_MD5RSA_MIN_BITS = 512,NS_MD5RSA_MAX_BITS = 2552,NS_DSA_SIG_SIZE = 41,NS_DSA_MIN_SIZE = 213,NS_DSA_MAX_BYTES = 405,NS_SIG_TYPE = 0,NS_SIG_ALG = 2,NS_SIG_LABELS = 3,NS_SIG_OTTL = 4,NS_SIG_EXPIR = 8,NS_SIG_SIGNED = 12,NS_SIG_FOOT = 16,NS_SIG_SIGNER = 18,NS_NXT_BITS = 8,NS_NXT_MAX = 127,NS_OPT_DNSSEC_OK = 32768,};
enum MACRO_OS_SIGNPOST {OS_SIGNPOST_ID_NULL = 0,OS_SIGNPOST_ID_INVALID = -1,OS_SIGNPOST_ID_EXCLUSIVE = -1229851353791926546,OS_SIGNPOST_TYPE_MASK = 3,OS_ACTIVITY_OBJECT_API = 1,};
enum MACRO_OS_SPINLOCK {OS_SPINLOCK_INIT = 0,OS_ATOMIC_USES_CXX = 1,};
enum MACRO_POSIX_SPAWN {POSIX_SPAWN_RESETIDS = 0x1,POSIX_SPAWN_SETPGROUP = 0x2,POSIX_SPAWN_SETSIGDEF = 0x4,POSIX_SPAWN_SETSIGMASK = 0x8,POSIX_SPAWN_SETEXEC = 0x40,POSIX_SPAWN_START_SUSPENDED = 0x80,POSIX_SPAWN_SETSID = 0x400,POSIX_SPAWN_CLOEXEC_DEFAULT = 0x4000,};
enum MACRO_RPC_ANYSOCK {RPC_ANYSOCK = -1,};
enum MACRO_SIGNATURE_0 {SIGNATURE = 10,};
enum MACRO_SQLITE_UTF8 {SQLITE_UTF8 = 1,SQLITE_UTF16LE = 2,SQLITE_UTF16BE = 3,SQLITE_UTF16 = 4,SQLITE_ANY = 5,SQLITE_UTF16_ALIGNED = 8,SQLITE_DETERMINISTIC = 2048,SQLITE_DIRECTONLY = 524288,SQLITE_SUBTYPE = 1048576,SQLITE_INNOCUOUS = 2097152,SQLITE_STATIC = 0,SQLITE_TRANSIENT = -1,SQLITE_INDEX_SCAN_UNIQUE = 1,SQLITE_INDEX_CONSTRAINT_EQ = 2,SQLITE_INDEX_CONSTRAINT_GT = 4,SQLITE_INDEX_CONSTRAINT_LE = 8,SQLITE_INDEX_CONSTRAINT_LT = 16,SQLITE_INDEX_CONSTRAINT_GE = 32,SQLITE_INDEX_CONSTRAINT_MATCH = 64,SQLITE_INDEX_CONSTRAINT_LIKE = 65,SQLITE_INDEX_CONSTRAINT_GLOB = 66,SQLITE_INDEX_CONSTRAINT_REGEXP = 67,SQLITE_INDEX_CONSTRAINT_NE = 68,SQLITE_INDEX_CONSTRAINT_ISNOT = 69,SQLITE_INDEX_CONSTRAINT_ISNOTNULL = 70,SQLITE_INDEX_CONSTRAINT_ISNULL = 71,SQLITE_INDEX_CONSTRAINT_IS = 72,SQLITE_INDEX_CONSTRAINT_FUNCTION = 150,SQLITE_MUTEX_FAST = 0,SQLITE_MUTEX_RECURSIVE = 1,SQLITE_MUTEX_STATIC_MASTER = 2,SQLITE_MUTEX_STATIC_MEM = 3,SQLITE_MUTEX_STATIC_MEM2 = 4,SQLITE_MUTEX_STATIC_OPEN = 4,SQLITE_MUTEX_STATIC_PRNG = 5,SQLITE_MUTEX_STATIC_LRU = 6,SQLITE_MUTEX_STATIC_LRU2 = 7,SQLITE_MUTEX_STATIC_PMEM = 7,SQLITE_MUTEX_STATIC_APP1 = 8,SQLITE_MUTEX_STATIC_APP2 = 9,SQLITE_MUTEX_STATIC_APP3 = 10,SQLITE_MUTEX_STATIC_VFS1 = 11,SQLITE_MUTEX_STATIC_VFS2 = 12,SQLITE_MUTEX_STATIC_VFS3 = 13,SQLITE_TESTCTRL_FIRST = 5,SQLITE_TESTCTRL_PRNG_SAVE = 5,SQLITE_TESTCTRL_PRNG_RESTORE = 6,SQLITE_TESTCTRL_PRNG_RESET = 7,SQLITE_TESTCTRL_BITVEC_TEST = 8,SQLITE_TESTCTRL_FAULT_INSTALL = 9,SQLITE_TESTCTRL_BENIGN_MALLOC_HOOKS = 10,SQLITE_TESTCTRL_PENDING_BYTE = 11,SQLITE_TESTCTRL_ASSERT = 12,SQLITE_TESTCTRL_ALWAYS = 13,SQLITE_TESTCTRL_RESERVE = 14,SQLITE_TESTCTRL_OPTIMIZATIONS = 15,SQLITE_TESTCTRL_ISKEYWORD = 16,SQLITE_TESTCTRL_SCRATCHMALLOC = 17,SQLITE_TESTCTRL_INTERNAL_FUNCTIONS = 17,SQLITE_TESTCTRL_LOCALTIME_FAULT = 18,SQLITE_TESTCTRL_EXPLAIN_STMT = 19,SQLITE_TESTCTRL_ONCE_RESET_THRESHOLD = 19,SQLITE_TESTCTRL_NEVER_CORRUPT = 20,SQLITE_TESTCTRL_VDBE_COVERAGE = 21,SQLITE_TESTCTRL_BYTEORDER = 22,SQLITE_TESTCTRL_ISINIT = 23,SQLITE_TESTCTRL_SORTER_MMAP = 24,SQLITE_TESTCTRL_IMPOSTER = 25,SQLITE_TESTCTRL_PARSER_COVERAGE = 26,SQLITE_TESTCTRL_RESULT_INTREAL = 27,SQLITE_TESTCTRL_PRNG_SEED = 28,SQLITE_TESTCTRL_EXTRA_SCHEMA_CHECKS = 29,SQLITE_TESTCTRL_LAST = 29,SQLITE_STATUS_MEMORY_USED = 0,SQLITE_STATUS_PAGECACHE_USED = 1,SQLITE_STATUS_PAGECACHE_OVERFLOW = 2,SQLITE_STATUS_SCRATCH_USED = 3,SQLITE_STATUS_SCRATCH_OVERFLOW = 4,SQLITE_STATUS_MALLOC_SIZE = 5,SQLITE_STATUS_PARSER_STACK = 6,SQLITE_STATUS_PAGECACHE_SIZE = 7,SQLITE_STATUS_SCRATCH_SIZE = 8,SQLITE_STATUS_MALLOC_COUNT = 9,SQLITE_DBSTATUS_LOOKASIDE_USED = 0,SQLITE_DBSTATUS_CACHE_USED = 1,SQLITE_DBSTATUS_SCHEMA_USED = 2,SQLITE_DBSTATUS_STMT_USED = 3,SQLITE_DBSTATUS_LOOKASIDE_HIT = 4,SQLITE_DBSTATUS_LOOKASIDE_MISS_SIZE = 5,SQLITE_DBSTATUS_LOOKASIDE_MISS_FULL = 6,SQLITE_DBSTATUS_CACHE_HIT = 7,SQLITE_DBSTATUS_CACHE_MISS = 8,SQLITE_DBSTATUS_CACHE_WRITE = 9,SQLITE_DBSTATUS_DEFERRED_FKS = 10,SQLITE_DBSTATUS_CACHE_USED_SHARED = 11,SQLITE_DBSTATUS_CACHE_SPILL = 12,SQLITE_DBSTATUS_MAX = 12,SQLITE_STMTSTATUS_FULLSCAN_STEP = 1,SQLITE_STMTSTATUS_SORT = 2,SQLITE_STMTSTATUS_AUTOINDEX = 3,SQLITE_STMTSTATUS_VM_STEP = 4,SQLITE_STMTSTATUS_REPREPARE = 5,SQLITE_STMTSTATUS_RUN = 6,SQLITE_STMTSTATUS_MEMUSED = 99,SQLITE_CHECKPOINT_PASSIVE = 0,SQLITE_CHECKPOINT_FULL = 1,SQLITE_CHECKPOINT_RESTART = 2,SQLITE_CHECKPOINT_TRUNCATE = 3,SQLITE_VTAB_CONSTRAINT_SUPPORT = 1,SQLITE_VTAB_INNOCUOUS = 2,SQLITE_VTAB_DIRECTONLY = 3,SQLITE_ROLLBACK = 1,SQLITE_FAIL = 3,SQLITE_REPLACE = 5,SQLITE_SCANSTAT_NLOOP = 0,SQLITE_SCANSTAT_NVISIT = 1,SQLITE_SCANSTAT_EST = 2,SQLITE_SCANSTAT_NAME = 3,SQLITE_SCANSTAT_EXPLAIN = 4,SQLITE_SCANSTAT_SELECTID = 5,SQLITE_SERIALIZE_NOCOPY = 1,SQLITE_DESERIALIZE_FREEONCLOSE = 1,SQLITE_DESERIALIZE_RESIZEABLE = 2,SQLITE_DESERIALIZE_READONLY = 4,};
enum MACRO_SUBCMDSHIFT {SUBCMDSHIFT = 8,};
enum MACRO_SYNC_POLICY {SYNC_POLICY_FIFO = 0x0,SYNC_POLICY_FIXED_PRIORITY = 0x1,SYNC_POLICY_REVERSED = 0x2,SYNC_POLICY_ORDER_MASK = 0x3,SYNC_POLICY_MAX = 0x7,};
enum MACRO_S_ATTR_SOME {S_ATTR_SOME_INSTRUCTIONS = 0x400,S_ATTR_EXT_RELOC = 0x200,S_ATTR_LOC_RELOC = 0x100,};
enum MACRO_TASK_FLAVOR {TASK_FLAVOR_CONTROL = 0,TASK_FLAVOR_READ = 1,TASK_FLAVOR_INSPECT = 2,TASK_FLAVOR_NAME = 3,};
enum MACRO_TASK_KERNEL {TASK_KERNEL_PORT = 1,TASK_HOST_PORT = 2,TASK_NAME_PORT = 3,TASK_BOOTSTRAP_PORT = 4,TASK_INSPECT_PORT = 5,TASK_READ_PORT = 6,TASK_SEATBELT_PORT = 7,TASK_ACCESS_PORT = 9,TASK_DEBUG_CONTROL_PORT = 10,TASK_RESOURCE_NOTIFY_PORT = 11,};
enum MACRO_THREAD_INFO {THREAD_INFO_MAX = 32,THREAD_BASIC_INFO = 3,THREAD_IDENTIFIER_INFO = 4,};
enum MACRO_THREAD_NULL {THREAD_NULL = 0,THREAD_INSPECT_NULL = 0,THREAD_READ_NULL = 0,};
enum MACRO_THREAD_SELF {THREAD_SELF_PORT_COUNT = 3,mach_voucher_MSG_COUNT = 5,memory_entry_MSG_COUNT = 3,};
enum MACRO_XML_SCHEMAS {XML_SCHEMAS_ANYATTR_SKIP = 1,XML_SCHEMAS_ANYATTR_LAX = 2,XML_SCHEMAS_ANYATTR_STRICT = 3,XML_SCHEMAS_ANY_SKIP = 1,XML_SCHEMAS_ANY_LAX = 2,XML_SCHEMAS_ANY_STRICT = 3,XML_SCHEMAS_ATTR_USE_PROHIBITED = 0,XML_SCHEMAS_ATTR_USE_REQUIRED = 1,XML_SCHEMAS_ATTR_USE_OPTIONAL = 2,XML_SCHEMAS_ATTR_GLOBAL = 1,XML_SCHEMAS_ATTR_NSDEFAULT = 128,XML_SCHEMAS_ATTR_INTERNAL_RESOLVED = 256,XML_SCHEMAS_ATTR_FIXED = 512,XML_SCHEMAS_WILDCARD_COMPLETE = 1,XML_SCHEMAS_ATTRGROUP_WILDCARD_BUILDED = 1,XML_SCHEMAS_ATTRGROUP_GLOBAL = 2,XML_SCHEMAS_ATTRGROUP_MARKED = 4,XML_SCHEMAS_ATTRGROUP_REDEFINED = 8,XML_SCHEMAS_ATTRGROUP_HAS_REFS = 16,XML_SCHEMAS_TYPE_MIXED = 1,XML_SCHEMAS_TYPE_DERIVATION_METHOD_EXTENSION = 2,XML_SCHEMAS_TYPE_DERIVATION_METHOD_RESTRICTION = 4,XML_SCHEMAS_TYPE_GLOBAL = 8,XML_SCHEMAS_TYPE_OWNED_ATTR_WILDCARD = 16,XML_SCHEMAS_TYPE_VARIETY_ABSENT = 32,XML_SCHEMAS_TYPE_VARIETY_LIST = 64,XML_SCHEMAS_TYPE_VARIETY_UNION = 128,XML_SCHEMAS_TYPE_VARIETY_ATOMIC = 256,XML_SCHEMAS_TYPE_FINAL_EXTENSION = 512,XML_SCHEMAS_TYPE_FINAL_RESTRICTION = 1024,XML_SCHEMAS_TYPE_FINAL_LIST = 2048,XML_SCHEMAS_TYPE_FINAL_UNION = 4096,XML_SCHEMAS_TYPE_FINAL_DEFAULT = 8192,XML_SCHEMAS_TYPE_BUILTIN_PRIMITIVE = 16384,XML_SCHEMAS_TYPE_MARKED = 65536,XML_SCHEMAS_TYPE_BLOCK_DEFAULT = 131072,XML_SCHEMAS_TYPE_BLOCK_EXTENSION = 262144,XML_SCHEMAS_TYPE_BLOCK_RESTRICTION = 524288,XML_SCHEMAS_TYPE_ABSTRACT = 1048576,XML_SCHEMAS_TYPE_FACETSNEEDVALUE = 2097152,XML_SCHEMAS_TYPE_INTERNAL_RESOLVED = 4194304,XML_SCHEMAS_TYPE_INTERNAL_INVALID = 8388608,XML_SCHEMAS_TYPE_WHITESPACE_PRESERVE = 16777216,XML_SCHEMAS_TYPE_WHITESPACE_REPLACE = 33554432,XML_SCHEMAS_TYPE_WHITESPACE_COLLAPSE = 67108864,XML_SCHEMAS_TYPE_HAS_FACETS = 134217728,XML_SCHEMAS_TYPE_NORMVALUENEEDED = 268435456,XML_SCHEMAS_TYPE_FIXUP_1 = 536870912,XML_SCHEMAS_TYPE_REDEFINED = 1073741824,XML_SCHEMAS_ELEM_NILLABLE = 1,XML_SCHEMAS_ELEM_GLOBAL = 2,XML_SCHEMAS_ELEM_DEFAULT = 4,XML_SCHEMAS_ELEM_FIXED = 8,XML_SCHEMAS_ELEM_ABSTRACT = 16,XML_SCHEMAS_ELEM_TOPLEVEL = 32,XML_SCHEMAS_ELEM_REF = 64,XML_SCHEMAS_ELEM_NSDEFAULT = 128,XML_SCHEMAS_ELEM_INTERNAL_RESOLVED = 256,XML_SCHEMAS_ELEM_CIRCULAR = 512,XML_SCHEMAS_ELEM_BLOCK_ABSENT = 1024,XML_SCHEMAS_ELEM_BLOCK_EXTENSION = 2048,XML_SCHEMAS_ELEM_BLOCK_RESTRICTION = 4096,XML_SCHEMAS_ELEM_BLOCK_SUBSTITUTION = 8192,XML_SCHEMAS_ELEM_FINAL_ABSENT = 16384,XML_SCHEMAS_ELEM_FINAL_EXTENSION = 32768,XML_SCHEMAS_ELEM_FINAL_RESTRICTION = 65536,XML_SCHEMAS_ELEM_SUBST_GROUP_HEAD = 131072,XML_SCHEMAS_ELEM_INTERNAL_CHECKED = 262144,XML_SCHEMAS_FACET_UNKNOWN = 0,XML_SCHEMAS_FACET_PRESERVE = 1,XML_SCHEMAS_FACET_REPLACE = 2,XML_SCHEMAS_FACET_COLLAPSE = 3,XML_SCHEMAS_QUALIF_ELEM = 1,XML_SCHEMAS_QUALIF_ATTR = 2,XML_SCHEMAS_FINAL_DEFAULT_EXTENSION = 4,XML_SCHEMAS_FINAL_DEFAULT_RESTRICTION = 8,XML_SCHEMAS_FINAL_DEFAULT_LIST = 16,XML_SCHEMAS_FINAL_DEFAULT_UNION = 32,XML_SCHEMAS_BLOCK_DEFAULT_EXTENSION = 64,XML_SCHEMAS_BLOCK_DEFAULT_RESTRICTION = 128,XML_SCHEMAS_BLOCK_DEFAULT_SUBSTITUTION = 256,XML_SCHEMAS_INCLUDING_CONVERT_NS = 512,};
enum MACRO_YPMAXDOMAIN {YPMAXDOMAIN = 64,};
enum MACRO_YPMAXRECORD {YPMAXRECORD = 1024,};
enum MACRO__LIBCPP_GET {_LIBCPP_GET_C_LOCALE = 0,};
enum MACRO__POSIX_HOST {_POSIX_HOST_NAME_MAX = 255,_POSIX_LOGIN_NAME_MAX = 9,_POSIX_SS_REPL_MAX = 4,_POSIX_SYMLINK_MAX = 255,_POSIX_SYMLOOP_MAX = 8,_POSIX_TRACE_EVENT_NAME_MAX = 30,_POSIX_TRACE_NAME_MAX = 8,_POSIX_TRACE_SYS_MAX = 8,_POSIX_TRACE_USER_EVENT_MAX = 32,_POSIX_TTY_NAME_MAX = 9,};
enum MACRO___DARWIN_FD {__DARWIN_FD_SETSIZE = 1024,__DARWIN_NBBY = 8,};
enum MACRO___DARWIN_NO {__DARWIN_NO_LONG_LONG = 0,};
enum MACRO___DRIVERKIT {__DRIVERKIT_19_0 = 190000,__DRIVERKIT_20_0 = 200000,};
enum MDLMeshBufferType {MDLMeshBufferTypeVertex = 0x1,MDLMeshBufferTypeIndex = 0x2,};
enum MDLProbePlacement {MDLProbePlacementUniformGrid = 0x0,MDLProbePlacementIrradianceDistribution = 0x1,};
enum MIDITransformType {kMIDITransform_None = 0x0,kMIDITransform_FilterOut = 0x1,kMIDITransform_MapControl = 0x2,kMIDITransform_Add = 0x8,kMIDITransform_Scale = 0x9,kMIDITransform_MinValue = 0xA,kMIDITransform_MaxValue = 0xB,kMIDITransform_MapValue = 0xC,};
enum MLCActivationType {MLCActivationTypeNone = 0x0,MLCActivationTypeReLU = 0x1,MLCActivationTypeLinear = 0x2,MLCActivationTypeSigmoid = 0x3,MLCActivationTypeHardSigmoid = 0x4,MLCActivationTypeTanh = 0x5,MLCActivationTypeAbsolute = 0x6,MLCActivationTypeSoftPlus = 0x7,MLCActivationTypeSoftSign = 0x8,MLCActivationTypeELU = 0x9,MLCActivationTypeReLUN = 0xA,MLCActivationTypeLogSigmoid = 0xB,MLCActivationTypeSELU = 0xC,MLCActivationTypeCELU = 0xD,MLCActivationTypeHardShrink = 0xE,MLCActivationTypeSoftShrink = 0xF,MLCActivationTypeTanhShrink = 0x10,MLCActivationTypeThreshold = 0x11,MLCActivationTypeGELU = 0x12,MLCActivationTypeCount = 0x13,};
enum MLCLSTMResultMode {MLCLSTMResultModeOutput = 0x0,MLCLSTMResultModeOutputAndStates = 0x1,};
enum MPMovieRepeatMode {MPMovieRepeatModeNone = 0x0,MPMovieRepeatModeOne = 0x1,};
enum MPMovieSourceType {MPMovieSourceTypeUnknown = 0x0,MPMovieSourceTypeFile = 0x1,MPMovieSourceTypeStreaming = 0x2,};
enum MPMovieTimeOption {MPMovieTimeOptionNearestKeyFrame = 0x0,MPMovieTimeOptionExact = 0x1,};
enum MPMusicRepeatMode {MPMusicRepeatModeDefault = 0x0,MPMusicRepeatModeNone = 0x1,MPMusicRepeatModeOne = 0x2,MPMusicRepeatModeAll = 0x3,};
enum MPSPurgeableState {MPSPurgeableStateAllocationDeferred = 0x0,MPSPurgeableStateKeepCurrent = 0x1,MPSPurgeableStateNonVolatile = 0x2,MPSPurgeableStateVolatile = 0x3,MPSPurgeableStateEmpty = 0x4,};
struct MPSScaleTransform {double scaleX;double scaleY;double translateX;double translateY;};
enum MTLArgumentAccess {MTLArgumentAccessReadOnly = 0x0,MTLArgumentAccessReadWrite = 0x1,MTLArgumentAccessWriteOnly = 0x2,};
enum MTLBlendOperation {MTLBlendOperationAdd = 0x0,MTLBlendOperationSubtract = 0x1,MTLBlendOperationReverseSubtract = 0x2,MTLBlendOperationMin = 0x3,MTLBlendOperationMax = 0x4,};
typedef _MTLPackedFloat4x3 MTLPackedFloat4x3;
enum MTLPurgeableState {MTLPurgeableStateKeepCurrent = 0x1,MTLPurgeableStateNonVolatile = 0x2,MTLPurgeableStateVolatile = 0x3,MTLPurgeableStateEmpty = 0x4,};
struct MTLSamplePosition {float x;float y;};
enum MTLTextureSwizzle {MTLTextureSwizzleZero = 0x0,MTLTextureSwizzleOne = 0x1,MTLTextureSwizzleRed = 0x2,MTLTextureSwizzleGreen = 0x3,MTLTextureSwizzleBlue = 0x4,MTLTextureSwizzleAlpha = 0x5,};
enum MusicSequenceType {kMusicSequenceType_Beats = 0x62656174,kMusicSequenceType_Seconds = 0x73656373,kMusicSequenceType_Samples = 0x73616D70,};
struct NEFilterPacketSet;
enum NFCTypeNameFormat {NFCTypeNameFormatEmpty = 0x0,NFCTypeNameFormatNFCWellKnown = 0x1,NFCTypeNameFormatMedia = 0x2,NFCTypeNameFormatAbsoluteURI = 0x3,NFCTypeNameFormatNFCExternal = 0x4,NFCTypeNameFormatUnknown = 0x5,NFCTypeNameFormatUnchanged = 0x6,};
enum NSLayoutAttribute {NSLayoutAttributeLeft = 0x1,NSLayoutAttributeRight = 0x2,NSLayoutAttributeTop = 0x3,NSLayoutAttributeBottom = 0x4,NSLayoutAttributeLeading = 0x5,NSLayoutAttributeTrailing = 0x6,NSLayoutAttributeWidth = 0x7,NSLayoutAttributeHeight = 0x8,NSLayoutAttributeCenterX = 0x9,NSLayoutAttributeCenterY = 0xA,NSLayoutAttributeLastBaseline = 0xB,NSLayoutAttributeBaseline = 0xB,NSLayoutAttributeFirstBaseline = 0xC,NSLayoutAttributeLeftMargin = 0xD,NSLayoutAttributeRightMargin = 0xE,NSLayoutAttributeTopMargin = 0xF,NSLayoutAttributeBottomMargin = 0x10,NSLayoutAttributeLeadingMargin = 0x11,NSLayoutAttributeTrailingMargin = 0x12,NSLayoutAttributeCenterXWithinMargins = 0x13,NSLayoutAttributeCenterYWithinMargins = 0x14,NSLayoutAttributeNotAnAttribute = 0x0,};
enum NSMergePolicyType {NSErrorMergePolicyType = 0x0,NSMergeByPropertyStoreTrumpMergePolicyType = 0x1,NSMergeByPropertyObjectTrumpMergePolicyType = 0x2,NSOverwriteMergePolicyType = 0x3,NSRollbackMergePolicyType = 0x4,};
typedef __NSObjectFileImage *NSObjectFileImage;
enum NSTextScalingType {NSTextScalingStandard = 0x0,NSTextScalingiOS = 0x1,};
enum NSURLRelationship {NSURLRelationshipContains = 0x0,NSURLRelationshipSame = 0x1,NSURLRelationshipOther = 0x2,};
enum NWUDPSessionState {NWUDPSessionStateInvalid = 0x0,NWUDPSessionStateWaiting = 0x1,NWUDPSessionStatePreparing = 0x2,NWUDPSessionStateReady = 0x3,NWUDPSessionStateFailed = 0x4,NWUDPSessionStateCancelled = 0x5,};
struct OpaqueAudioFileID;
struct OpaqueMusicPlayer;
struct OpaqueVTFrameSilo;
struct PDFOutlinePrivate;
typedef  __SCDynamicStore *SCDynamicStoreRef;
enum SCNLightProbeType {SCNLightProbeTypeIrradiance = 0x0,SCNLightProbeTypeRadiance = 0x1,};
enum SCNMovabilityHint {SCNMovabilityHintFixed = 0x0,SCNMovabilityHintMovable = 0x1,};
enum SKOverlayPosition {SKOverlayPositionBottom = 0x0,SKOverlayPositionBottomRaised = 0x1,};
enum SSLConnectionType {kSSLStreamType = 0x0,kSSLDatagramType = 0x1,};
typedef __SecCertificate *SecCertificateRef;
enum SparseSubfactor_t {SparseSubfactorInvalid = 0x0,SparseSubfactorP = 0x1,SparseSubfactorS = 0x2,SparseSubfactorL = 0x3,SparseSubfactorD = 0x4,SparseSubfactorPLPS = 0x5,SparseSubfactorQ = 0x6,SparseSubfactorR = 0x7,SparseSubfactorRP = 0x8,};
enum UCPMapRangeOption {UCPMAP_RANGE_NORMAL = 0x0,UCPMAP_RANGE_FIXED_LEAD_SURROGATES = 0x1,UCPMAP_RANGE_FIXED_ALL_SURROGATES = 0x2,};
enum UIBlurEffectStyle {UIBlurEffectStyleExtraLight = 0x0,UIBlurEffectStyleLight = 0x1,UIBlurEffectStyleDark = 0x2,UIBlurEffectStyleExtraDark = 0x3,UIBlurEffectStyleRegular = 0x4,UIBlurEffectStyleProminent = 0x5,UIBlurEffectStyleSystemUltraThinMaterial = 0x6,UIBlurEffectStyleSystemThinMaterial = 0x7,UIBlurEffectStyleSystemMaterial = 0x8,UIBlurEffectStyleSystemThickMaterial = 0x9,UIBlurEffectStyleSystemChromeMaterial = 0xA,UIBlurEffectStyleSystemUltraThinMaterialLight = 0xB,UIBlurEffectStyleSystemThinMaterialLight = 0xC,UIBlurEffectStyleSystemMaterialLight = 0xD,UIBlurEffectStyleSystemThickMaterialLight = 0xE,UIBlurEffectStyleSystemChromeMaterialLight = 0xF,UIBlurEffectStyleSystemUltraThinMaterialDark = 0x10,UIBlurEffectStyleSystemThinMaterialDark = 0x11,UIBlurEffectStyleSystemMaterialDark = 0x12,UIBlurEffectStyleSystemThickMaterialDark = 0x13,UIBlurEffectStyleSystemChromeMaterialDark = 0x14,};
enum UIDatePickerStyle {UIDatePickerStyleAutomatic = 0x0,UIDatePickerStyleWheels = 0x1,UIDatePickerStyleCompact = 0x2,UIDatePickerStyleInline = 0x3,};
enum UIPrintInfoDuplex {UIPrintInfoDuplexNone = 0x0,UIPrintInfoDuplexLongEdge = 0x1,UIPrintInfoDuplexShortEdge = 0x2,};
enum UISystemAnimation {UISystemAnimationDelete = 0x0,};
enum UITextBorderStyle {UITextBorderStyleNone = 0x0,UITextBorderStyleLine = 0x1,UITextBorderStyleBezel = 0x2,UITextBorderStyleRoundedRect = 0x3,};
enum UITextGranularity {UITextGranularityCharacter = 0x0,UITextGranularityWord = 0x1,UITextGranularitySentence = 0x2,UITextGranularityParagraph = 0x3,UITextGranularityLine = 0x4,UITextGranularityDocument = 0x5,};
struct UITextInputTraits;
enum UITimingCurveType {UITimingCurveTypeBuiltin = 0x0,UITimingCurveTypeCubic = 0x1,UITimingCurveTypeSpring = 0x2,UITimingCurveTypeComposed = 0x3,};
enum UIViewContentMode {UIViewContentModeScaleToFill = 0x0,UIViewContentModeScaleAspectFit = 0x1,UIViewContentModeScaleAspectFill = 0x2,UIViewContentModeRedraw = 0x3,UIViewContentModeCenter = 0x4,UIViewContentModeTop = 0x5,UIViewContentModeBottom = 0x6,UIViewContentModeLeft = 0x7,UIViewContentModeRight = 0x8,UIViewContentModeTopLeft = 0x9,UIViewContentModeTopRight = 0xA,UIViewContentModeBottomLeft = 0xB,UIViewContentModeBottomRight = 0xC,};
struct UIWebViewInternal;
enum XML_Content_Quant {XML_CQUANT_NONE = 0x0,XML_CQUANT_OPT = 0x1,XML_CQUANT_REP = 0x2,XML_CQUANT_PLUS = 0x3,};
struct XML_Expat_Version {int major;int minor;int micro;};
struct __CFDateFormatter;
struct __CFNetDiagnostic;
struct __CFRunLoopSource;
struct __CFURLEnumerator;
typedef double __CLPK_doublereal;
struct __SecKeychainItem;
typedef char *__builtin_va_list;
typedef long long __darwin_intptr_t;
typedef std____1__complex_float_ __float_complex_t;
struct __res_9_state_ext;
struct _opaque_pthread_t {long long __sig;__darwin_pthread_handler_rec *__cleanup_stack;char __opaque[8176];};
struct _removefile_state;
struct _xmlAutomataState;
struct _xmlSchemaSAXPlug;
struct _xmlXPathCompExpr;
typedef __arm_legacy_debug_state arm_debug_state_t;
enum at_block_format_t {at_block_format_invalid = 0x0,at_block_format_astc_4x4_ldr = 0x1,at_block_format_astc_5x4_ldr = 0x2,at_block_format_astc_5x5_ldr = 0x3,at_block_format_astc_6x5_ldr = 0x4,at_block_format_astc_6x6_ldr = 0x5,at_block_format_astc_8x5_ldr = 0x6,at_block_format_astc_8x6_ldr = 0x7,at_block_format_astc_8x8_ldr = 0x8,at_block_format_astc_10x5_ldr = 0x9,at_block_format_astc_10x6_ldr = 0xA,at_block_format_astc_10x8_ldr = 0xB,at_block_format_astc_10x10_ldr = 0xC,at_block_format_astc_12x10_ldr = 0xD,at_block_format_astc_12x12_ldr = 0xE,at_block_format_astc_4x4_hdr = 0x11,at_block_format_astc_5x4_hdr = 0x12,at_block_format_astc_5x5_hdr = 0x13,at_block_format_astc_6x5_hdr = 0x14,at_block_format_astc_6x6_hdr = 0x15,at_block_format_astc_8x5_hdr = 0x16,at_block_format_astc_8x6_hdr = 0x17,at_block_format_astc_8x8_hdr = 0x18,at_block_format_astc_10x5_hdr = 0x19,at_block_format_astc_10x6_hdr = 0x1A,at_block_format_astc_10x8_hdr = 0x1B,at_block_format_astc_10x10_hdr = 0x1C,at_block_format_astc_12x10_hdr = 0x1D,at_block_format_astc_12x12_hdr = 0x1E,at_block_format_bc1 = 0x21,at_block_format_bc2 = 0x22,at_block_format_bc3 = 0x23,at_block_format_bc4 = 0x24,at_block_format_bc4s = 0x25,at_block_format_bc5 = 0x26,at_block_format_bc5s = 0x27,at_block_format_bc6 = 0x28,at_block_format_bc6u = 0x29,at_block_format_bc7 = 0x2A,at_block_format_count = 0x2B,};
enum at_texel_format_t {at_texel_format_invalid = 0x0,at_texel_format_l8_unorm = 0x1,at_texel_format_l16_unorm = 0x2,at_texel_format_la8_unorm = 0x3,at_texel_format_la16_unorm = 0x4,at_texel_format_rgba8_unorm = 0x5,at_texel_format_bgra8_unorm = 0x6,at_texel_format_rgba16_unorm = 0x7,at_texel_format_l16_float = 0x8,at_texel_format_la16_float = 0x9,at_texel_format_rgba16_float = 0xA,at_texel_format_count = 0xB,};
typedef au_expire_after au_expire_after_t;
typedef auditpinfo_addr auditpinfo_addr_t;
enum axr_compression_t {axr_compression_none = 0x0,axr_compression_rle = 0x1,axr_compression_zips = 0x2,axr_compression_zip = 0x3,axr_compression_piz = 0x4,axr_compression_pxr24 = 0x5,axr_compression_b44 = 0x6,axr_compression_b44a = 0x7,};
typedef char *bp_machine_name_t;
typedef NSObject *dispatch_object_t;
typedef NSObject *dispatch_source_t;
struct dns_ISDN_record_t {char *isdn_address;char *subaddress;};
typedef void (*fatalErrorSAXFunc)(void *,  char *, ...);
typedef ftrimactivefile ftrimactivefile_t;
typedef gpu_energy_data *gpu_energy_data_t;
struct gss_auth_identity;
typedef host_basic_info *host_basic_info_t;
typedef host_sched_info *host_sched_info_t;
typedef kmod_info_32_v1 kmod_info_32_v1_t;
typedef kmod_info_64_v1 kmod_info_64_v1_t;
enum nw_error_domain_t {nw_error_domain_invalid = 0x0,nw_error_domain_posix = 0x1,nw_error_domain_dns = 0x2,nw_error_domain_tls = 0x3,};
typedef void *nw_framer_block_t;
typedef NSObject *nw_path_monitor_t;
typedef policy_rr_limit *policy_rr_limit_t;
typedef void *posix_spawnattr_t;
enum quadrature_status {QUADRATURE_SUCCESS = 0x0,QUADRATURE_ERROR = 0xFFFFFFFF,QUADRATURE_INVALID_ARG_ERROR = 0xFFFFFFFE,QUADRATURE_ALLOC_ERROR = 0xFFFFFFFD,QUADRATURE_INTERNAL_ERROR = 0xFFFFFF9D,QUADRATURE_INTEGRATE_MAX_EVAL_ERROR = 0xFFFFFF9B,QUADRATURE_INTEGRATE_BAD_BEHAVIOUR_ERROR = 0xFFFFFF9A,};
enum res_9_sendhookact {res_9_goahead = 0x0,res_9_nextns = 0x1,res_9_modified = 0x2,res_9_done = 0x3,res_9_error = 0x4,};
typedef NSObject *sec_certificate_t;
union __attribute__((aligned(2))) simd_packed_char2 {char i8[2];unsigned char u8[2];};
union __attribute__((aligned(4))) simd_packed_char4 {char i8[4];short i16[2];unsigned char u8[4];unsigned short u16[2];};
union __attribute__((aligned(8))) simd_packed_char8 {char i8[8];short i16[4];int i32[2];unsigned char u8[8];unsigned short u16[4];unsigned int u32[2];};
union __attribute__((aligned(16))) simd_packed_int16 {char i8[64];short i16[32];int i32[16];long long i64[8];__int128 i128[4];unsigned char u8[64];unsigned short u16[32];unsigned int u32[16];unsigned long long u64[8];__uint128 u128[4];};
union __attribute__((aligned(16))) simd_packed_long2 {char i8[16];short i16[8];int i32[4];long long i64[2];unsigned char u8[16];unsigned short u16[8];unsigned int u32[4];unsigned long long u64[2];};
union __attribute__((aligned(16))) simd_packed_long4 {char i8[32];short i16[16];int i32[8];long long i64[4];__int128 i128[2];unsigned char u8[32];unsigned short u16[16];unsigned int u32[8];unsigned long long u64[4];__uint128 u128[2];};
union __attribute__((aligned(16))) simd_packed_long8 {char i8[64];short i16[32];int i32[16];long long i64[8];__int128 i128[4];unsigned char u8[64];unsigned short u16[32];unsigned int u32[16];unsigned long long u64[8];__uint128 u128[4];};
union __attribute__((aligned(8))) simd_packed_uint2 {char i8[8];short i16[4];int i32[2];unsigned char u8[8];unsigned short u16[4];unsigned int u32[2];};
union __attribute__((aligned(16))) simd_packed_uint4 {char i8[16];short i16[8];int i32[4];long long i64[2];unsigned char u8[16];unsigned short u16[8];unsigned int u32[4];unsigned long long u64[2];};
union __attribute__((aligned(16))) simd_packed_uint8 {char i8[32];short i16[16];int i32[8];long long i64[4];__int128 i128[2];unsigned char u8[32];unsigned short u16[16];unsigned int u32[8];unsigned long long u64[4];__uint128 u128[2];};
typedef double sqlite3_rtree_dbl;
typedef struct std____1__basic_filebuf_char_ std____1__filebuf;
typedef struct std____1__basic_fstream_char_ std____1__fstream;
enum std____1__io_errc {stream = 0x1,};
typedef std____1__basic_istream_char_ std____1__istream;
typedef std____1__basic_ostream_char_ std____1__ostream;
struct std____1__tuple__ {};
typedef std____1__basic_string_wchar_t_ std____1__wstring;
typedef task_basic_info *task_basic_info_t;
typedef task_flags_info *task_flags_info_t;
typedef task_power_info *task_power_info_t;
typedef task_qos_policy *task_qos_policy_t;
enum tls_ciphersuite_t {tls_ciphersuite_RSA_WITH_3DES_EDE_CBC_SHA = 0xA,tls_ciphersuite_RSA_WITH_AES_128_CBC_SHA = 0x2F,tls_ciphersuite_RSA_WITH_AES_256_CBC_SHA = 0x35,tls_ciphersuite_RSA_WITH_AES_128_GCM_SHA256 = 0x9C,tls_ciphersuite_RSA_WITH_AES_256_GCM_SHA384 = 0x9D,tls_ciphersuite_RSA_WITH_AES_128_CBC_SHA256 = 0x3C,tls_ciphersuite_RSA_WITH_AES_256_CBC_SHA256 = 0x3D,tls_ciphersuite_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA = 0xC008,tls_ciphersuite_ECDHE_ECDSA_WITH_AES_128_CBC_SHA = 0xC009,tls_ciphersuite_ECDHE_ECDSA_WITH_AES_256_CBC_SHA = 0xC00A,tls_ciphersuite_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA = 0xC012,tls_ciphersuite_ECDHE_RSA_WITH_AES_128_CBC_SHA = 0xC013,tls_ciphersuite_ECDHE_RSA_WITH_AES_256_CBC_SHA = 0xC014,tls_ciphersuite_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256 = 0xC023,tls_ciphersuite_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384 = 0xC024,tls_ciphersuite_ECDHE_RSA_WITH_AES_128_CBC_SHA256 = 0xC027,tls_ciphersuite_ECDHE_RSA_WITH_AES_256_CBC_SHA384 = 0xC028,tls_ciphersuite_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256 = 0xC02B,tls_ciphersuite_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384 = 0xC02C,tls_ciphersuite_ECDHE_RSA_WITH_AES_128_GCM_SHA256 = 0xC02F,tls_ciphersuite_ECDHE_RSA_WITH_AES_256_GCM_SHA384 = 0xC030,tls_ciphersuite_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256 = 0xCCA8,tls_ciphersuite_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256 = 0xCCA9,tls_ciphersuite_AES_128_GCM_SHA256 = 0x1301,tls_ciphersuite_AES_256_GCM_SHA384 = 0x1302,tls_ciphersuite_CHACHA20_POLY1305_SHA256 = 0x1303,};
typedef vDSP_biquad_SetupStruct *vDSP_biquad_Setup;
typedef vm_statistics64 *vm_statistics64_t;
typedef struct _xmlHashTable xmlAttributeTable;
typedef _xmlElementContent xmlElementContent;
enum xmlElementTypeVal {XML_ELEMENT_TYPE_UNDEFINED = 0x0,XML_ELEMENT_TYPE_EMPTY = 0x1,XML_ELEMENT_TYPE_ANY = 0x2,XML_ELEMENT_TYPE_MIXED = 0x3,XML_ELEMENT_TYPE_ELEMENT = 0x4,};
typedef _xmlParserNodeInfo xmlParserNodeInfo;
typedef _xmlSchemaNotation xmlSchemaNotation;
typedef _xmlSchemaTypeLink xmlSchemaTypeLink;
enum xmlSchemaTypeType {XML_SCHEMA_TYPE_BASIC = 0x1,XML_SCHEMA_TYPE_ANY = 0x2,XML_SCHEMA_TYPE_FACET = 0x3,XML_SCHEMA_TYPE_SIMPLE = 0x4,XML_SCHEMA_TYPE_COMPLEX = 0x5,XML_SCHEMA_TYPE_SEQUENCE = 0x6,XML_SCHEMA_TYPE_CHOICE = 0x7,XML_SCHEMA_TYPE_ALL = 0x8,XML_SCHEMA_TYPE_SIMPLE_CONTENT = 0x9,XML_SCHEMA_TYPE_COMPLEX_CONTENT = 0xA,XML_SCHEMA_TYPE_UR = 0xB,XML_SCHEMA_TYPE_RESTRICTION = 0xC,XML_SCHEMA_TYPE_EXTENSION = 0xD,XML_SCHEMA_TYPE_ELEMENT = 0xE,XML_SCHEMA_TYPE_ATTRIBUTE = 0xF,XML_SCHEMA_TYPE_ATTRIBUTEGROUP = 0x10,XML_SCHEMA_TYPE_GROUP = 0x11,XML_SCHEMA_TYPE_NOTATION = 0x12,XML_SCHEMA_TYPE_LIST = 0x13,XML_SCHEMA_TYPE_UNION = 0x14,XML_SCHEMA_TYPE_ANY_ATTRIBUTE = 0x15,XML_SCHEMA_TYPE_IDC_UNIQUE = 0x16,XML_SCHEMA_TYPE_IDC_KEY = 0x17,XML_SCHEMA_TYPE_IDC_KEYREF = 0x18,XML_SCHEMA_TYPE_PARTICLE = 0x19,XML_SCHEMA_TYPE_ATTRIBUTE_USE = 0x1A,XML_SCHEMA_FACET_MININCLUSIVE = 0x3E8,XML_SCHEMA_FACET_MINEXCLUSIVE = 0x3E9,XML_SCHEMA_FACET_MAXINCLUSIVE = 0x3EA,XML_SCHEMA_FACET_MAXEXCLUSIVE = 0x3EB,XML_SCHEMA_FACET_TOTALDIGITS = 0x3EC,XML_SCHEMA_FACET_FRACTIONDIGITS = 0x3ED,XML_SCHEMA_FACET_PATTERN = 0x3EE,XML_SCHEMA_FACET_ENUMERATION = 0x3EF,XML_SCHEMA_FACET_WHITESPACE = 0x3F0,XML_SCHEMA_FACET_LENGTH = 0x3F1,XML_SCHEMA_FACET_MAXLENGTH = 0x3F2,XML_SCHEMA_FACET_MINLENGTH = 0x3F3,XML_SCHEMA_EXTRA_QNAMEREF = 0x7D0,XML_SCHEMA_EXTRA_ATTR_USE_PROHIB = 0x7D1,};
typedef _xmlSchemaWildcard xmlSchemaWildcard;
enum xmlTextReaderMode {XML_TEXTREADER_MODE_INITIAL = 0x0,XML_TEXTREADER_MODE_INTERACTIVE = 0x1,XML_TEXTREADER_MODE_ERROR = 0x2,XML_TEXTREADER_MODE_EOF = 0x3,XML_TEXTREADER_MODE_CLOSED = 0x4,XML_TEXTREADER_MODE_READING = 0x5,};
enum AHTRestoreOption {kAHTRestoreOptionLock = 0x1,};
enum AHTRestoreReturn {kAHTRestoreReturnSuccess = 0x0,kAHTRestoreReturnNoDevice = 0xFFFFFFFF,kAHTRestoreReturnNoFirmware = 0xFFFFFFFE,kAHTRestoreReturnWriteFail = 0xFFFFFFFD,kAHTRestoreReturnReadFail = 0xFFFFFFFC,kAHTRestoreReturnVerifyFail = 0xFFFFFFFB,kAHTRestoreReturnWrongDevice = 0xFFFFFFFA,};
struct ALCdevice_struct;
enum ARAltitudeSource {ARAltitudeSourceUnknown = 0x0,ARAltitudeSourceCoarse = 0x1,ARAltitudeSourcePrecise = 0x2,ARAltitudeSourceUserDefined = 0x3,};
enum ARWorldAlignment {ARWorldAlignmentGravity = 0x0,ARWorldAlignmentGravityAndHeading = 0x1,ARWorldAlignmentCamera = 0x2,};
typedef UIViewController ASViewController;
typedef AudioUnitNodeConnection AUNodeConnection;
typedef void *AURenderObserver;
enum AUReverbRoomType {kReverbRoomType_SmallRoom = 0x0,kReverbRoomType_MediumRoom = 0x1,kReverbRoomType_LargeRoom = 0x2,kReverbRoomType_MediumHall = 0x3,kReverbRoomType_LargeHall = 0x4,kReverbRoomType_Plate = 0x5,kReverbRoomType_MediumChamber = 0x6,kReverbRoomType_LargeChamber = 0x7,kReverbRoomType_Cathedral = 0x8,kReverbRoomType_LargeRoom2 = 0x9,kReverbRoomType_MediumHall2 = 0xA,kReverbRoomType_MediumHall3 = 0xB,kReverbRoomType_LargeHall2 = 0xC,};
enum AVKeyValueStatus {AVKeyValueStatusUnknown = 0x0,AVKeyValueStatusLoading = 0x1,AVKeyValueStatusLoaded = 0x2,AVKeyValueStatusFailed = 0x3,AVKeyValueStatusCancelled = 0x4,};
struct AVPlayerInternal;
enum AVSpeechBoundary {AVSpeechBoundaryImmediate = 0x0,AVSpeechBoundaryWord = 0x1,};
enum AVVideoFieldMode {AVVideoFieldModeBoth = 0x0,AVVideoFieldModeTopOnly = 0x1,AVVideoFieldModeBottomOnly = 0x2,AVVideoFieldModeDeinterlace = 0x3,};
enum AudioPanningMode {kPanningMode_SoundField = 0x3,kPanningMode_VectorBasedPanning = 0x4,};
typedef  AuthorizationOpaqueRef *AuthorizationRef;
enum BNNSLossFunction {BNNSLossFunctionSoftmaxCrossEntropy = 0x1,BNNSLossFunctionSigmoidCrossEntropy = 0x2,BNNSLossFunctionMeanSquareError = 0x3,BNNSLossFunctionHuber = 0x4,BNNSLossFunctionYolo = 0x5,BNNSLossFunctionLog = 0x6,BNNSLossFunctionCosineDistance = 0x7,BNNSLossFunctionHinge = 0x8,BNNSLossFunctionMeanAbsoluteError = 0x9,BNNSLossFunctionCategoricalCrossEntropy = 0xA,};
enum BNNSNDArrayFlags {BNNSNDArrayFlagBackpropSet = 0x0,BNNSNDArrayFlagBackpropAccumulate = 0x1,};
typedef __CFHTTPMessage *CFHTTPMessageRef;
typedef __CFMessagePort *CFMessagePortRef;
typedef __CFData *CFMutableDataRef;
typedef __CFWriteStream *CFWriteStreamRef;
enum CGImageAlphaInfo {kCGImageAlphaNone = 0x0,kCGImageAlphaPremultipliedLast = 0x1,kCGImageAlphaPremultipliedFirst = 0x2,kCGImageAlphaLast = 0x3,kCGImageAlphaFirst = 0x4,kCGImageAlphaNoneSkipLast = 0x5,kCGImageAlphaNoneSkipFirst = 0x6,kCGImageAlphaOnly = 0x7,};
typedef CGImageSource *CGImageSourceRef;
typedef CGPath *CGMutablePathRef;
typedef CGPDFDocument *CGPDFDocumentRef;
typedef void *CGPathApplyBlock;
struct CLBeaconInternal;
struct CLRegionInternal;
typedef OpaqueCMBlockBuffer *CMBlockBufferRef;
typedef opaqueCMBufferQueue *CMBufferQueueRef;
struct CMRotationMatrix {double m11;double m12;double m13;double m21;double m22;double m23;double m31;double m32;double m33;};
typedef opaqueCMSimpleQueue *CMSimpleQueueRef;
enum CPBarButtonStyle {CPBarButtonStyleNone = 0x0,CPBarButtonStyleRounded = 0x1,};
enum CSIndexErrorCode {CSIndexErrorCodeUnknownError = 0xFFFFFFFFFFFFFFFF,CSIndexErrorCodeIndexUnavailableError = 0xFFFFFFFFFFFFFC18,CSIndexErrorCodeInvalidItemError = 0xFFFFFFFFFFFFFC17,CSIndexErrorCodeInvalidClientStateError = 0xFFFFFFFFFFFFFC16,CSIndexErrorCodeRemoteConnectionError = 0xFFFFFFFFFFFFFC15,CSIndexErrorCodeQuotaExceeded = 0xFFFFFFFFFFFFFC14,CSIndexErrorCodeIndexingUnsupported = 0xFFFFFFFFFFFFFC13,};
enum CTFontUIFontType {kCTFontUIFontNone = 0xFFFFFFFF,kCTFontUIFontUser = 0x0,kCTFontUIFontUserFixedPitch = 0x1,kCTFontUIFontSystem = 0x2,kCTFontUIFontEmphasizedSystem = 0x3,kCTFontUIFontSmallSystem = 0x4,kCTFontUIFontSmallEmphasizedSystem = 0x5,kCTFontUIFontMiniSystem = 0x6,kCTFontUIFontMiniEmphasizedSystem = 0x7,kCTFontUIFontViews = 0x8,kCTFontUIFontApplication = 0x9,kCTFontUIFontLabel = 0xA,kCTFontUIFontMenuTitle = 0xB,kCTFontUIFontMenuItem = 0xC,kCTFontUIFontMenuItemMark = 0xD,kCTFontUIFontMenuItemCmdKey = 0xE,kCTFontUIFontWindowTitle = 0xF,kCTFontUIFontPushButton = 0x10,kCTFontUIFontUtilityWindowTitle = 0x11,kCTFontUIFontAlertHeader = 0x12,kCTFontUIFontSystemDetail = 0x13,kCTFontUIFontEmphasizedSystemDetail = 0x14,kCTFontUIFontToolbar = 0x15,kCTFontUIFontSmallToolbar = 0x16,kCTFontUIFontMessage = 0x17,kCTFontUIFontPalette = 0x18,kCTFontUIFontToolTip = 0x19,kCTFontUIFontControlContent = 0x1A,kCTFontNoFontType = 0xFFFFFFFF,kCTFontUserFontType = 0x0,kCTFontUserFixedPitchFontType = 0x1,kCTFontSystemFontType = 0x2,kCTFontEmphasizedSystemFontType = 0x3,kCTFontSmallSystemFontType = 0x4,kCTFontSmallEmphasizedSystemFontType = 0x5,kCTFontMiniSystemFontType = 0x6,kCTFontMiniEmphasizedSystemFontType = 0x7,kCTFontViewsFontType = 0x8,kCTFontApplicationFontType = 0x9,kCTFontLabelFontType = 0xA,kCTFontMenuTitleFontType = 0xB,kCTFontMenuItemFontType = 0xC,kCTFontMenuItemMarkFontType = 0xD,kCTFontMenuItemCmdKeyFontType = 0xE,kCTFontWindowTitleFontType = 0xF,kCTFontPushButtonFontType = 0x10,kCTFontUtilityWindowTitleFontType = 0x11,kCTFontAlertHeaderFontType = 0x12,kCTFontSystemDetailFontType = 0x13,kCTFontEmphasizedSystemDetailFontType = 0x14,kCTFontToolbarFontType = 0x15,kCTFontSmallToolbarFontType = 0x16,kCTFontMessageFontType = 0x17,kCTFontPaletteFontType = 0x18,kCTFontToolTipFontType = 0x19,kCTFontControlContentFontType = 0x1A,};
typedef  __CTFramesetter *CTFramesetterRef;
typedef  __CTRunDelegate *CTRunDelegateRef;
enum CVAttachmentMode {kCVAttachmentMode_ShouldNotPropagate = 0x0,kCVAttachmentMode_ShouldPropagate = 0x1,};
typedef  unsigned char *ConstStr255Param;
struct DSPDoubleComplex {double real;double imag;};
enum EAGLRenderingAPI {kEAGLRenderingAPIOpenGLES1 = 0x1,kEAGLRenderingAPIOpenGLES2 = 0x2,kEAGLRenderingAPIOpenGLES3 = 0x3,};
enum EKAlarmProximity {EKAlarmProximityNone = 0x0,EKAlarmProximityEnter = 0x1,EKAlarmProximityLeave = 0x2,};
enum ENInfectiousness {ENInfectiousnessNone = 0x0,ENInfectiousnessStandard = 0x1,ENInfectiousnessHigh = 0x2,};
enum GKChallengeState {GKChallengeStateInvalid = 0x0,GKChallengeStatePending = 0x1,GKChallengeStateCompleted = 0x2,GKChallengeStateDeclined = 0x3,};
struct GKPlayerInternal;
enum GLKTextureTarget {GLKTextureTarget2D = 0xDE1,GLKTextureTargetCubeMap = 0x8513,GLKTextureTargetCt = 0x2,};
enum HKVO2MaxTestType {HKVO2MaxTestTypeMaxExercise = 0x1,HKVO2MaxTestTypePredictionSubMaxExercise = 0x2,HKVO2MaxTestTypePredictionNonExercise = 0x3,};
enum ICDeviceTypeMask {ICDeviceTypeMaskCamera = 0x1,ICDeviceTypeMaskScanner = 0x2,};
enum INCallAudioRoute {INCallAudioRouteUnknown = 0x0,INCallAudioRouteSpeakerphoneAudioRoute = 0x1,INCallAudioRouteBluetoothAudioRoute = 0x2,};
enum INCallCapability {INCallCapabilityUnknown = 0x0,INCallCapabilityAudioCall = 0x1,INCallCapabilityVideoCall = 0x2,};
enum INCallRecordType {INCallRecordTypeUnknown = 0x0,INCallRecordTypeOutgoing = 0x1,INCallRecordTypeMissed = 0x2,INCallRecordTypeReceived = 0x3,INCallRecordTypeLatest = 0x4,INCallRecordTypeVoicemail = 0x5,INCallRecordTypeRinging = 0x6,INCallRecordTypeInProgress = 0x7,INCallRecordTypeOnHold = 0x8,};
enum INCarAudioSource {INCarAudioSourceUnknown = 0x0,INCarAudioSourceCarPlay = 0x1,INCarAudioSourceiPod = 0x2,INCarAudioSourceRadio = 0x3,INCarAudioSourceBluetooth = 0x4,INCarAudioSourceAUX = 0x5,INCarAudioSourceUSB = 0x6,INCarAudioSourceMemoryCard = 0x7,INCarAudioSourceOpticalDrive = 0x8,INCarAudioSourceHardDrive = 0x9,};
enum INDateSearchType {INDateSearchTypeUnknown = 0x0,INDateSearchTypeByDueDate = 0x1,INDateSearchTypeByModifiedDate = 0x2,INDateSearchTypeByCreatedDate = 0x3,};
enum INMediaReference {INMediaReferenceUnknown = 0x0,INMediaReferenceCurrentlyPlaying = 0x1,};
enum INMediaSortOrder {INMediaSortOrderUnknown = 0x0,INMediaSortOrderNewest = 0x1,INMediaSortOrderOldest = 0x2,INMediaSortOrderBest = 0x3,INMediaSortOrderWorst = 0x4,INMediaSortOrderPopular = 0x5,INMediaSortOrderUnpopular = 0x6,INMediaSortOrderTrending = 0x7,INMediaSortOrderRecommended = 0x8,};
struct INParameterImage;
enum INVisualCodeType {INVisualCodeTypeUnknown = 0x0,INVisualCodeTypeContact = 0x1,INVisualCodeTypeRequestPayment = 0x2,INVisualCodeTypeSendPayment = 0x3,INVisualCodeTypeTransit = 0x4,INVisualCodeTypeBus = 0x5,INVisualCodeTypeSubway = 0x6,};
enum JSTypedArrayType {kJSTypedArrayTypeInt8Array = 0x0,kJSTypedArrayTypeInt16Array = 0x1,kJSTypedArrayTypeInt32Array = 0x2,kJSTypedArrayTypeUint8Array = 0x3,kJSTypedArrayTypeUint8ClampedArray = 0x4,kJSTypedArrayTypeUint16Array = 0x5,kJSTypedArrayTypeUint32Array = 0x6,kJSTypedArrayTypeFloat32Array = 0x7,kJSTypedArrayTypeFloat64Array = 0x8,kJSTypedArrayTypeArrayBuffer = 0x9,kJSTypedArrayTypeNone = 0xA,};
enum LACredentialType {LACredentialTypeApplicationPassword = 0x0,LACredentialTypeSmartCardPIN = 0xFFFFFFFFFFFFFFFD,};
enum MACRO_ACCOUNTING {ACCOUNTING = 9,};
enum MACRO_AIO_LISTIO {AIO_LISTIO_MAX = 16,};
enum MACRO_AL_GAMEKIT {AL_GAMEKIT = 1735095154,AL_QUEUE_HAS_LOOPED = 36864,};
enum MACRO_ARM_THREAD {ARM_THREAD_STATE64 = 6,ARM_EXCEPTION_STATE64 = 7,ARM_THREAD_STATE32 = 9,ARM_DEBUG_STATE32 = 14,ARM_DEBUG_STATE64 = 15,ARM_NEON_STATE = 16,ARM_NEON_STATE64 = 17,ARM_CPMU_STATE64 = 18,ARM_AMX_STATE = 24,ARM_AMX_STATE_V1 = 25,ARM_PAGEIN_STATE = 27,};
enum MACRO_ATSFONTREF {ATSFONTREF_DEFINED = 1,};
enum MACRO_AUDIO_UNIT {AUDIO_UNIT_VERSION = 1070,};
enum MACRO_AUDIT_HARD {AUDIT_HARD_LIMIT_FREE_BLOCKS = 4,AUDIT_TRIGGER_MIN = 1,AUDIT_TRIGGER_LOW_SPACE = 1,AUDIT_TRIGGER_ROTATE_KERNEL = 2,AUDIT_TRIGGER_READ_FILE = 3,AUDIT_TRIGGER_CLOSE_AND_DIE = 4,AUDIT_TRIGGER_NO_SPACE = 5,AUDIT_TRIGGER_ROTATE_USER = 6,AUDIT_TRIGGER_INITIALIZE = 7,AUDIT_TRIGGER_EXPIRE_TRAILS = 8,AUDIT_TRIGGER_MAX = 8,};
enum MACRO_AU_SUPPORT {AU_SUPPORT_INTERAPP_AUDIO = 1,};
enum MACRO_BTREEMAGIC {BTREEMAGIC = 0x53162,};
enum MACRO_CLSIZELOG2 {CLSIZELOG2 = 0,MSIZESHIFT = 8,};
enum MACRO_CTL_UNSPEC {CTL_UNSPEC = 0,CTL_KERN = 1,CTL_VM = 2,CTL_VFS = 3,CTL_NET = 4,CTL_DEBUG = 5,CTL_HW = 6,CTL_MACHDEP = 7,CTL_USER = 8,CTL_MAXID = 9,};
enum MACRO_DEPRECATED {OSATOMIC_DEPRECATED = 1,OSSPINLOCK_DEPRECATED = 1,};
enum MACRO_DYLD_CACHE {DYLD_CACHE_SLIDE_PAGE_ATTRS = 0xC000,DYLD_CACHE_SLIDE_PAGE_ATTR_EXTRA = 0x8000,DYLD_CACHE_SLIDE_PAGE_ATTR_NO_REBASE = 0x4000,DYLD_CACHE_SLIDE_PAGE_ATTR_END = 0x8000,DYLD_CACHE_SLIDE_V3_PAGE_ATTR_NO_REBASE = 0xFFFF,};
enum MACRO_EADDRINUSE {EADDRINUSE = 48,};
enum MACRO_ECONNRESET {ECONNRESET = 54,};
enum MACRO_EOPNOTSUPP {EOPNOTSUPP = 102,};
enum MACRO_EOWNERDEAD {EOWNERDEAD = 105,};
enum MACRO_EPROTOTYPE {EPROTOTYPE = 41,};
enum MACRO_ESHLIBVERS {ESHLIBVERS = 87,};
enum MACRO_GUARD_TYPE {GUARD_TYPE_VIRT_MEMORY = 0x5,};
enum MACRO_HOST_BASIC {HOST_BASIC_INFO = 1,HOST_SCHED_INFO = 3,HOST_RESOURCE_SIZES = 4,HOST_PRIORITY_INFO = 5,HOST_SEMAPHORE_TRAPS = 7,HOST_MACH_MSG_TRAP = 8,HOST_VM_PURGABLE = 9,HOST_DEBUG_INFO_INTERNAL = 10,HOST_CAN_HAS_DEBUGGER = 11,HOST_PREFERRED_USER_ARCH = 12,HOST_LOAD_INFO = 1,HOST_VM_INFO = 2,HOST_CPU_LOAD_INFO = 3,HOST_VM_INFO64 = 4,HOST_EXTMOD_INFO64 = 5,HOST_EXPIRED_TASK_INFO = 6,HOST_NOTIFY_CALENDAR_CHANGE = 0,HOST_NOTIFY_CALENDAR_SET = 1,HOST_NOTIFY_TYPE_MAX = 1,HOST_CALENDAR_CHANGED_REPLYID = 950,HOST_CALENDAR_SET_REPLYID = 951,HOST_SECURITY_PORT = 0,HOST_PORT = 1,HOST_PRIV_PORT = 2,HOST_IO_MASTER_PORT = 3,HOST_MAX_SPECIAL_KERNEL_PORT = 7,HOST_LOCAL_NODE = -1,};
enum MACRO_IFQ_TARGET {IFQ_TARGET_DELAY = 10000000,IFQ_UPDATE_INTERVAL = 100000000,};
enum MACRO_IP_DEFAULT {IP_DEFAULT_MULTICAST_TTL = 1,IP_DEFAULT_MULTICAST_LOOP = 1,IP_MIN_MEMBERSHIPS = 31,IP_MAX_MEMBERSHIPS = 4095,IP_MAX_GROUP_SRC_FILTER = 512,IP_MAX_SOCK_SRC_FILTER = 128,IP_MAX_SOCK_MUTE_FILTER = 128,};
enum MACRO_LC_COLLATE {LC_COLLATE_MASK = 1,LC_CTYPE_MASK = 2,LC_MESSAGES_MASK = 4,LC_MONETARY_MASK = 8,LC_NUMERIC_MASK = 16,LC_TIME_MASK = 32,};
enum MACRO_MACH_PORTS {MACH_PORTS_SLOTS_USED = 3,};
enum MACRO_MAP_FAILED {MAP_FAILED = -1,};
enum MACRO_MAXDFLSRCH {MAXDFLSRCH = 3,};
enum MACRO_MAXLOGNAME {MAXLOGNAME = 255,NOFILE = 256,};
enum MACRO_MAX_NETOBJ {MAX_NETOBJ_SZ = 1024,MAX_AUTH_BYTES = 400,};
enum MACRO_MAX_ZTRACE {MAX_ZTRACE_DEPTH = 15,};
enum MACRO_MFSNAMELEN {MFSNAMELEN = 15,MFSTYPENAMELEN = 16,};
enum MACRO_MLD_MTRACE {MLD_MTRACE_RESP = 200,MLD_MTRACE = 201,};
enum MACRO_MNTPATHLEN {MNTPATHLEN = 1024,};
enum MACRO_NANOSECOND {NANOSECOND = 1000000000,};
enum MACRO_NSADDIMAGE {NSADDIMAGE_OPTION_NONE = 0x0,NSADDIMAGE_OPTION_RETURN_ON_ERROR = 0x1,NSADDIMAGE_OPTION_WITH_SEARCHING = 0x2,NSADDIMAGE_OPTION_RETURN_ONLY_IF_LOADED = 0x4,NSADDIMAGE_OPTION_MATCH_FILENAME_BY_INSTALLNAME = 0x8,};
enum MACRO_NS_UNICHAR {NS_UNICHAR_IS_EIGHT_BIT = 0,};
enum MACRO_O_NONBLOCK {O_NONBLOCK = 0x4,O_APPEND = 0x8,O_SHLOCK = 0x10,O_EXLOCK = 0x20,O_ASYNC = 0x40,O_NOFOLLOW = 0x100,O_CREAT = 0x200,O_TRUNC = 0x400,O_EXCL = 0x800,O_EVTONLY = 0x8000,O_NOCTTY = 0x20000,O_DIRECTORY = 0x100000,O_SYMLINK = 0x200000,O_CLOEXEC = 0x1000000,};
enum MACRO_PHYSICSKIT {PHYSICSKIT_MINUS_GL_IMPORTS = 1,};
enum MACRO_QUADRATURE {QUADRATURE_INTEGRATE_QAG_WORKSPACE_PER_INTERVAL = 32,QUADRATURE_INTEGRATE_QAGS_WORKSPACE_PER_INTERVAL = 152,};
enum MACRO_REFERENCED {REFERENCED_DYNAMICALLY = 0x10,};
enum MACRO_RQUOTAPROC {RQUOTAPROC_GETQUOTA = 1,RQUOTAPROC_GETACTIVEQUOTA = 2,};
enum MACRO_RQUOTAPROG {RQUOTAPROG = 100011,};
enum MACRO_RQUOTAVERS {RQUOTAVERS = 1,};
enum MACRO_RUSERSPROC {RUSERSPROC_NUM = 1,RUSERSPROC_NAMES = 2,RUSERSPROC_ALLNAMES = 3,};
enum MACRO_RUSERSPROG {RUSERSPROG = 100002,};
enum MACRO_RUSERSVERS {RUSERSVERS_ORIG = 1,RUSERSVERS_IDLE = 2,};
enum MACRO_R_FIXEDLEN {R_FIXEDLEN = 0x1,R_NOKEY = 0x2,R_SNAPSHOT = 0x4,};
enum MACRO_SUBCMDMASK {SUBCMDMASK = 0xFF,};
enum MACRO_TARGET_API {TARGET_API_MAC_OS8 = 0,TARGET_API_MAC_CARBON = 1,TARGET_API_MAC_OSX = 1,TARGET_CARBON = 1,};
enum MACRO_TASK_DEBUG {TASK_DEBUG_INFO_INTERNAL = 29,TASK_EXC_GUARD_VM_DELIVER = 1,TASK_EXC_GUARD_VM_ONCE = 2,TASK_EXC_GUARD_VM_CORPSE = 4,TASK_EXC_GUARD_VM_FATAL = 8,TASK_EXC_GUARD_VM_ALL = 15,TASK_EXC_GUARD_MP_DELIVER = 16,TASK_EXC_GUARD_MP_ONCE = 32,TASK_EXC_GUARD_MP_CORPSE = 64,TASK_EXC_GUARD_MP_FATAL = 128,TASK_EXC_GUARD_MP_ALL = 240,TASK_EXC_GUARD_ALL = 255,TASK_SCHED_TIMESHARE_INFO = 10,TASK_SCHED_RR_INFO = 11,TASK_SCHED_FIFO_INFO = 12,TASK_SCHED_INFO = 14,TASK_CATEGORY_POLICY = 1,TASK_SUPPRESSION_POLICY = 3,TASK_POLICY_STATE = 4,TASK_BASE_QOS_POLICY = 8,TASK_OVERRIDE_QOS_POLICY = 9,TASK_BASE_LATENCY_QOS_POLICY = 10,TASK_BASE_THROUGHPUT_QOS_POLICY = 11,};
enum MACRO_TCPOLEN_CC {TCPOLEN_CC = 6,};
enum MACRO_TCP_MAXWIN {TCP_MAXWIN = 65535,};
enum MACRO_VM_INHERIT {VM_INHERIT_SHARE = 0,VM_INHERIT_COPY = 1,VM_INHERIT_NONE = 2,VM_INHERIT_DONATE_COPY = 3,VM_PURGABLE_SET_STATE = 0,VM_PURGABLE_GET_STATE = 1,VM_PURGABLE_PURGE_ALL = 2,VM_PURGABLE_SET_STATE_FROM_KERNEL = 3,VM_PURGABLE_NO_AGING_SHIFT = 16,VM_PURGABLE_DEBUG_SHIFT = 12,VM_VOLATILE_GROUP_SHIFT = 8,VM_PURGABLE_BEHAVIOR_SHIFT = 6,VM_PURGABLE_ORDERING_SHIFT = 5,VM_VOLATILE_ORDER_SHIFT = 4,VM_PURGABLE_STATE_MIN = 0,VM_PURGABLE_STATE_MAX = 3,VM_PURGABLE_STATE_MASK = 3,VM_PURGABLE_NONVOLATILE = 0,VM_PURGABLE_VOLATILE = 1,VM_PURGABLE_EMPTY = 2,VM_PURGABLE_DENY = 3,VM_BEHAVIOR_DEFAULT = 0,VM_BEHAVIOR_RANDOM = 1,VM_BEHAVIOR_SEQUENTIAL = 2,VM_BEHAVIOR_RSEQNTL = 3,VM_BEHAVIOR_WILLNEED = 4,VM_BEHAVIOR_DONTNEED = 5,VM_BEHAVIOR_FREE = 6,VM_BEHAVIOR_ZERO_WIRED_PAGES = 7,VM_BEHAVIOR_REUSABLE = 8,VM_BEHAVIOR_REUSE = 9,VM_BEHAVIOR_CAN_REUSE = 10,VM_BEHAVIOR_PAGEOUT = 11,};
enum MACRO_XML_ENABLE {XML_ENABLE_VISIBILITY = 0,XML_TRUE = 1,XML_FALSE = 0,XML_MAJOR_VERSION = 2,XML_MINOR_VERSION = 2,XML_MICRO_VERSION = 8,};
enum MACRO_YPBINDPROC {YPBINDPROC_NULL = 0,YPBINDPROC_DOMAIN = 1,YPBINDPROC_SETDOM = 2,};
enum MACRO_YPBINDPROG {YPBINDPROG = 100007,};
enum MACRO_YPBINDVERS {YPBINDVERS = 2,};
enum MACRO_YPPUSHPROC {YPPUSHPROC_NULL = 0,YPPUSHPROC_XFRRESP = 1,};
enum MACRO__LIBCPPABI {_LIBCPPABI_VERSION = 1002,};
enum MACRO__LIBUNWIND {_LIBUNWIND_HIGHEST_DWARF_REGISTER_X86 = 8,_LIBUNWIND_HIGHEST_DWARF_REGISTER_X86_64 = 32,_LIBUNWIND_HIGHEST_DWARF_REGISTER_PPC = 112,_LIBUNWIND_HIGHEST_DWARF_REGISTER_PPC64 = 116,_LIBUNWIND_HIGHEST_DWARF_REGISTER_ARM64 = 95,_LIBUNWIND_HIGHEST_DWARF_REGISTER_ARM = 287,_LIBUNWIND_HIGHEST_DWARF_REGISTER_OR1K = 32,_LIBUNWIND_HIGHEST_DWARF_REGISTER_MIPS = 65,_LIBUNWIND_HIGHEST_DWARF_REGISTER_SPARC = 31,_LIBUNWIND_TARGET_X86_64 = 1,_LIBUNWIND_TARGET_PPC = 1,_LIBUNWIND_TARGET_PPC64 = 1,_LIBUNWIND_TARGET_AARCH64 = 1,_LIBUNWIND_TARGET_ARM = 1,_LIBUNWIND_TARGET_OR1K = 1,_LIBUNWIND_TARGET_MIPS_O32 = 1,_LIBUNWIND_TARGET_MIPS_NEWABI = 1,_LIBUNWIND_TARGET_SPARC = 1,_LIBUNWIND_CONTEXT_SIZE = 167,_LIBUNWIND_CURSOR_SIZE = 179,_LIBUNWIND_HIGHEST_DWARF_REGISTER = 287,};
enum MACRO__POSIX_AIO {_POSIX_AIO_LISTIO_MAX = 2,_POSIX_AIO_MAX = 1,_POSIX_DELAYTIMER_MAX = 32,_POSIX_MQ_OPEN_MAX = 8,_POSIX_MQ_PRIO_MAX = 32,_POSIX_RTSIG_MAX = 8,_POSIX_SEM_NSEMS_MAX = 256,_POSIX_SEM_VALUE_MAX = 32767,_POSIX_SIGQUEUE_MAX = 32,_POSIX_TIMER_MAX = 32,_POSIX_CLOCKRES_MIN = 20000000,_POSIX_THREAD_DESTRUCTOR_ITERATIONS = 4,_POSIX_THREAD_KEYS_MAX = 128,_POSIX_THREAD_THREADS_MAX = 64,};
enum MACRO___NSLAYOUT {__NSLAYOUT_MANAGER_SHARED_SECTION__ = 1,};
enum MACRO___WORDSIZE {__WORDSIZE = 64,};
enum MACRO___dontcare {__dontcare__ = -1,};
enum MACRO_kInvalidID {kInvalidID = 0,};
enum MDLDataPrecision {MDLDataPrecisionUndefined = 0x0,MDLDataPrecisionFloat = 0x1,MDLDataPrecisionDouble = 0x2,};
enum MDLIndexBitDepth {MDLIndexBitDepthInvalid = 0x0,MDLIndexBitDepthUInt8 = 0x8,MDLIndexBitDepthUint8 = 0x8,MDLIndexBitDepthUInt16 = 0x10,MDLIndexBitDepthUint16 = 0x10,MDLIndexBitDepthUInt32 = 0x20,MDLIndexBitDepthUint32 = 0x20,};
typedef void *MIDIReceiveBlock;
enum MLCPaddingPolicy {MLCPaddingPolicySame = 0x0,MLCPaddingPolicyValid = 0x1,MLCPaddingPolicyUsePaddingSize = 0x2,};
enum MLCReductionType {MLCReductionTypeNone = 0x0,MLCReductionTypeSum = 0x1,MLCReductionTypeMean = 0x2,MLCReductionTypeMax = 0x3,MLCReductionTypeMin = 0x4,MLCReductionTypeArgMax = 0x5,MLCReductionTypeArgMin = 0x6,MLCReductionTypeCount = 0x7,};
enum MPSCNNNeuronType {MPSCNNNeuronTypeNone = 0x0,MPSCNNNeuronTypeReLU = 0x1,MPSCNNNeuronTypeLinear = 0x2,MPSCNNNeuronTypeSigmoid = 0x3,MPSCNNNeuronTypeHardSigmoid = 0x4,MPSCNNNeuronTypeTanH = 0x5,MPSCNNNeuronTypeAbsolute = 0x6,MPSCNNNeuronTypeSoftPlus = 0x7,MPSCNNNeuronTypeSoftSign = 0x8,MPSCNNNeuronTypeELU = 0x9,MPSCNNNeuronTypePReLU = 0xA,MPSCNNNeuronTypeReLUN = 0xB,MPSCNNNeuronTypePower = 0xC,MPSCNNNeuronTypeExponential = 0xD,MPSCNNNeuronTypeLogarithm = 0xE,MPSCNNNeuronTypeGeLU = 0xF,MPSCNNNeuronTypeCount = 0x10,};
typedef void *MPSCopyAllocator;
enum MPSImageEdgeMode {MPSImageEdgeModeZero = 0x0,MPSImageEdgeModeClamp = 0x1,MPSImageEdgeModeMirror = 0x2,MPSImageEdgeModeMirrorWithEdge = 0x3,MPSImageEdgeModeConstant = 0x4,};
enum MPSTransformType {MPSTransformTypeFloat4x4 = 0x0,MPSTransformTypeIdentity = 0x1,};
enum MTLDepthClipMode {MTLDepthClipModeClip = 0x0,MTLDepthClipModeClamp = 0x1,};
enum MTLPrimitiveType {MTLPrimitiveTypePoint = 0x0,MTLPrimitiveTypeLine = 0x1,MTLPrimitiveTypeLineStrip = 0x2,MTLPrimitiveTypeTriangle = 0x3,MTLPrimitiveTypeTriangleStrip = 0x4,};
enum NSExpressionType {NSConstantValueExpressionType = 0x0,NSEvaluatedObjectExpressionType = 0x1,NSVariableExpressionType = 0x2,NSKeyPathExpressionType = 0x3,NSFunctionExpressionType = 0x4,NSUnionSetExpressionType = 0x5,NSIntersectSetExpressionType = 0x6,NSMinusSetExpressionType = 0x7,NSSubqueryExpressionType = 0xD,NSAggregateExpressionType = 0xE,NSAnyKeyExpressionType = 0xF,NSBlockExpressionType = 0x13,NSConditionalExpressionType = 0x14,};
enum NSKeyValueChange {NSKeyValueChangeSetting = 0x1,NSKeyValueChangeInsertion = 0x2,NSKeyValueChangeRemoval = 0x3,NSKeyValueChangeReplacement = 0x4,};
enum NSLayoutRelation {NSLayoutRelationLessThanOrEqual = 0xFFFFFFFFFFFFFFFF,NSLayoutRelationEqual = 0x0,NSLayoutRelationGreaterThanOrEqual = 0x1,};
enum NSLinkEditErrors {NSLinkEditFileAccessError = 0x0,NSLinkEditFileFormatError = 0x1,NSLinkEditMachResourceError = 0x2,NSLinkEditUnixResourceError = 0x3,NSLinkEditOtherError = 0x4,NSLinkEditWarningError = 0x5,NSLinkEditMultiplyDefinedError = 0x6,NSLinkEditUndefinedError = 0x7,};
enum NSXMLParserError {NSXMLParserInternalError = 0x1,NSXMLParserOutOfMemoryError = 0x2,NSXMLParserDocumentStartError = 0x3,NSXMLParserEmptyDocumentError = 0x4,NSXMLParserPrematureDocumentEndError = 0x5,NSXMLParserInvalidHexCharacterRefError = 0x6,NSXMLParserInvalidDecimalCharacterRefError = 0x7,NSXMLParserInvalidCharacterRefError = 0x8,NSXMLParserInvalidCharacterError = 0x9,NSXMLParserCharacterRefAtEOFError = 0xA,NSXMLParserCharacterRefInPrologError = 0xB,NSXMLParserCharacterRefInEpilogError = 0xC,NSXMLParserCharacterRefInDTDError = 0xD,NSXMLParserEntityRefAtEOFError = 0xE,NSXMLParserEntityRefInPrologError = 0xF,NSXMLParserEntityRefInEpilogError = 0x10,NSXMLParserEntityRefInDTDError = 0x11,NSXMLParserParsedEntityRefAtEOFError = 0x12,NSXMLParserParsedEntityRefInPrologError = 0x13,NSXMLParserParsedEntityRefInEpilogError = 0x14,NSXMLParserParsedEntityRefInInternalSubsetError = 0x15,NSXMLParserEntityReferenceWithoutNameError = 0x16,NSXMLParserEntityReferenceMissingSemiError = 0x17,NSXMLParserParsedEntityRefNoNameError = 0x18,NSXMLParserParsedEntityRefMissingSemiError = 0x19,NSXMLParserUndeclaredEntityError = 0x1A,NSXMLParserUnparsedEntityError = 0x1C,NSXMLParserEntityIsExternalError = 0x1D,NSXMLParserEntityIsParameterError = 0x1E,NSXMLParserUnknownEncodingError = 0x1F,NSXMLParserEncodingNotSupportedError = 0x20,NSXMLParserStringNotStartedError = 0x21,NSXMLParserStringNotClosedError = 0x22,NSXMLParserNamespaceDeclarationError = 0x23,NSXMLParserEntityNotStartedError = 0x24,NSXMLParserEntityNotFinishedError = 0x25,NSXMLParserLessThanSymbolInAttributeError = 0x26,NSXMLParserAttributeNotStartedError = 0x27,NSXMLParserAttributeNotFinishedError = 0x28,NSXMLParserAttributeHasNoValueError = 0x29,NSXMLParserAttributeRedefinedError = 0x2A,NSXMLParserLiteralNotStartedError = 0x2B,NSXMLParserLiteralNotFinishedError = 0x2C,NSXMLParserCommentNotFinishedError = 0x2D,NSXMLParserProcessingInstructionNotStartedError = 0x2E,NSXMLParserProcessingInstructionNotFinishedError = 0x2F,NSXMLParserNotationNotStartedError = 0x30,NSXMLParserNotationNotFinishedError = 0x31,NSXMLParserAttributeListNotStartedError = 0x32,NSXMLParserAttributeListNotFinishedError = 0x33,NSXMLParserMixedContentDeclNotStartedError = 0x34,NSXMLParserMixedContentDeclNotFinishedError = 0x35,NSXMLParserElementContentDeclNotStartedError = 0x36,NSXMLParserElementContentDeclNotFinishedError = 0x37,NSXMLParserXMLDeclNotStartedError = 0x38,NSXMLParserXMLDeclNotFinishedError = 0x39,NSXMLParserConditionalSectionNotStartedError = 0x3A,NSXMLParserConditionalSectionNotFinishedError = 0x3B,NSXMLParserExternalSubsetNotFinishedError = 0x3C,NSXMLParserDOCTYPEDeclNotFinishedError = 0x3D,NSXMLParserMisplacedCDATAEndStringError = 0x3E,NSXMLParserCDATANotFinishedError = 0x3F,NSXMLParserMisplacedXMLDeclarationError = 0x40,NSXMLParserSpaceRequiredError = 0x41,NSXMLParserSeparatorRequiredError = 0x42,NSXMLParserNMTOKENRequiredError = 0x43,NSXMLParserNAMERequiredError = 0x44,NSXMLParserPCDATARequiredError = 0x45,NSXMLParserURIRequiredError = 0x46,NSXMLParserPublicIdentifierRequiredError = 0x47,NSXMLParserLTRequiredError = 0x48,NSXMLParserGTRequiredError = 0x49,NSXMLParserLTSlashRequiredError = 0x4A,NSXMLParserEqualExpectedError = 0x4B,NSXMLParserTagNameMismatchError = 0x4C,NSXMLParserUnfinishedTagError = 0x4D,NSXMLParserStandaloneValueError = 0x4E,NSXMLParserInvalidEncodingNameError = 0x4F,NSXMLParserCommentContainsDoubleHyphenError = 0x50,NSXMLParserInvalidEncodingError = 0x51,NSXMLParserExternalStandaloneEntityError = 0x52,NSXMLParserInvalidConditionalSectionError = 0x53,NSXMLParserEntityValueRequiredError = 0x54,NSXMLParserNotWellBalancedError = 0x55,NSXMLParserExtraContentError = 0x56,NSXMLParserInvalidCharacterInEntityError = 0x57,NSXMLParserParsedEntityRefInInternalError = 0x58,NSXMLParserEntityRefLoopError = 0x59,NSXMLParserEntityBoundaryError = 0x5A,NSXMLParserInvalidURIError = 0x5B,NSXMLParserURIFragmentError = 0x5C,NSXMLParserNoDTDError = 0x5E,NSXMLParserDelegateAbortedParseError = 0x200,};
struct OpaqueAudioQueue;
struct OpaqueCMTimebase;
struct OpaqueMusicTrack;
struct PDFActionPrivate;
enum PHAssetMediaType {PHAssetMediaTypeUnknown = 0x0,PHAssetMediaTypeImage = 0x1,PHAssetMediaTypeVideo = 0x2,PHAssetMediaTypeAudio = 0x3,};
enum QLThumbnailError {QLThumbnailErrorGenerationFailed = 0x0,QLThumbnailErrorSavingToURLFailed = 0x1,QLThumbnailErrorNoCachedThumbnail = 0x2,QLThumbnailErrorNoCloudThumbnail = 0x3,QLThumbnailErrorRequestInvalid = 0x4,QLThumbnailErrorRequestCancelled = 0x5,};
enum RPCameraPosition {RPCameraPositionFront = 0x1,RPCameraPositionBack = 0x2,};
typedef void *ResamplingFilter;
enum SCNLightAreaType {SCNLightAreaTypeRectangle = 0x1,SCNLightAreaTypePolygon = 0x4,};
enum SCNParticleEvent {SCNParticleEventBirth = 0x0,SCNParticleEventDeath = 0x1,SCNParticleEventCollision = 0x2,};
typedef  __SCPreferences *SCPreferencesRef;
enum SKSceneScaleMode {SKSceneScaleModeFill = 0x0,SKSceneScaleModeAspectFill = 0x1,SKSceneScaleModeAspectFit = 0x2,SKSceneScaleModeResizeFill = 0x3,};
typedef void *SLRequestHandler;
enum SRDeletionReason {SRDeletionReasonUserInitiated = 0x0,SRDeletionReasonLowDiskSpace = 0x1,SRDeletionReasonAgeLimit = 0x2,SRDeletionReasonNoInterestedClients = 0x3,SRDeletionReasonSystemInitiated = 0x4,};
typedef  void *SSLConnectionRef;
enum SSLSessionOption {kSSLSessionOptionBreakOnServerAuth = 0x0,kSSLSessionOptionBreakOnCertRequested = 0x1,kSSLSessionOptionBreakOnClientAuth = 0x2,kSSLSessionOptionFalseStart = 0x3,kSSLSessionOptionSendOneByteRecord = 0x4,kSSLSessionOptionAllowServerIdentityChange = 0x5,kSSLSessionOptionFallback = 0x6,kSSLSessionOptionBreakOnClientHello = 0x7,kSSLSessionOptionAllowRenegotiation = 0x8,kSSLSessionOptionEnableSessionTickets = 0x9,};
typedef void *SecTrustCallback;
enum SparseTriangle_t {SparseUpperTriangle = 0x0,SparseLowerTriangle = 0x1,};
enum TKTokenOperation {TKTokenOperationNone = 0x0,TKTokenOperationReadData = 0x1,TKTokenOperationSignData = 0x2,TKTokenOperationDecryptData = 0x3,TKTokenOperationPerformKeyExchange = 0x4,};
enum UIAlertViewStyle {UIAlertViewStyleDefault = 0x0,UIAlertViewStyleSecureTextInput = 0x1,UIAlertViewStylePlainTextInput = 0x2,UIAlertViewStyleLoginAndPasswordInput = 0x3,};
enum UIDatePickerMode {UIDatePickerModeTime = 0x0,UIDatePickerModeDate = 0x1,UIDatePickerModeDateAndTime = 0x2,UIDatePickerModeCountDownTimer = 0x3,};
enum UIInputViewStyle {UIInputViewStyleDefault = 0x0,UIInputViewStyleKeyboard = 0x1,};
typedef float UILayoutPriority;
enum UIPrintErrorCode {UIPrintingNotAvailableError = 0x1,UIPrintNoContentError = 0x2,UIPrintUnknownImageFormatError = 0x3,UIPrintJobFailedError = 0x4,};
enum UISceneErrorCode {UISceneErrorCodeMultipleScenesNotSupported = 0x0,UISceneErrorCodeRequestDenied = 0x1,};
enum UISearchBarStyle {UISearchBarStyleDefault = 0x0,UISearchBarStyleProminent = 0x1,UISearchBarStyleMinimal = 0x2,};
enum UIStatusBarStyle {UIStatusBarStyleDefault = 0x0,UIStatusBarStyleLightContent = 0x1,UIStatusBarStyleDarkContent = 0x3,UIStatusBarStyleBlackTranslucent = 0x1,UIStatusBarStyleBlackOpaque = 0x2,};
enum UITableViewStyle {UITableViewStylePlain = 0x0,UITableViewStyleGrouped = 0x1,UITableViewStyleInsetGrouped = 0x2,};
enum UITextDropAction {UITextDropActionInsert = 0x0,UITextDropActionReplaceSelection = 0x1,UITextDropActionReplaceAll = 0x2,};
enum UWordBreakValues {U_WB_OTHER = 0x0,U_WB_ALETTER = 0x1,U_WB_FORMAT = 0x2,U_WB_KATAKANA = 0x3,U_WB_MIDLETTER = 0x4,U_WB_MIDNUM = 0x5,U_WB_NUMERIC = 0x6,U_WB_EXTENDNUMLET = 0x7,U_WB_CR = 0x8,U_WB_EXTEND = 0x9,U_WB_LF = 0xA,U_WB_MIDNUMLET = 0xB,U_WB_NEWLINE = 0xC,U_WB_REGIONAL_INDICATOR = 0xD,U_WB_HEBREW_LETTER = 0xE,U_WB_SINGLE_QUOTE = 0xF,U_WB_DOUBLE_QUOTE = 0x10,U_WB_E_BASE = 0x11,U_WB_E_BASE_GAZ = 0x12,U_WB_E_MODIFIER = 0x13,U_WB_GLUE_AFTER_ZWJ = 0x14,U_WB_ZWJ = 0x15,U_WB_WSEGSPACE = 0x16,U_WB_COUNT = 0x17,};
enum WKNavigationType {WKNavigationTypeLinkActivated = 0x0,WKNavigationTypeFormSubmitted = 0x1,WKNavigationTypeBackForward = 0x2,WKNavigationTypeReload = 0x3,WKNavigationTypeFormResubmitted = 0x4,WKNavigationTypeOther = 0xFFFFFFFFFFFFFFFF,};
enum XML_Content_Type {XML_CTYPE_EMPTY = 0x1,XML_CTYPE_ANY = 0x2,XML_CTYPE_MIXED = 0x3,XML_CTYPE_NAME = 0x4,XML_CTYPE_CHOICE = 0x5,XML_CTYPE_SEQ = 0x6,};
struct XML_ParserStruct;
struct _DNSServiceRef_t;
struct __CFCharacterSet;
struct __CFFileSecurity;
struct __CFRunLoopTimer;
struct __SCDynamicStore;
struct __SecCertificate;
typedef unsigned long long __darwin_clock_t;
typedef int __darwin_nl_item;
typedef long long __darwin_ssize_t;
typedef int __darwin_wchar_t;
struct __objc2_category {char *name;__objc2_class *_class;__objc2_meth_list *inst_meths;__objc2_meth_list *class_meths;__objc2_prot_list *prots;__objc2_prop_list *props;};
struct _expressionFlags {unsigned int _evaluationBlocked : 1;unsigned int _reservedExpressionFlags : 31;};
struct _printf_compiled;
struct _xmlXIncludeCtxt;
typedef __darwin_arm_neon_state arm_neon_state_t;
typedef au_evclass_map au_evclass_map_t;
typedef auditinfo_addr auditinfo_addr_t;
enum axr_level_mode_t {axr_level_mode_one_level = 0x0,axr_level_mode_mipmap = 0x1,axr_level_mode_ripmap = 0x2,axr_level_mode_format_mask = 0xF,axr_level_mode_round_down = 0x0,axr_level_mode_round_up = 0x10,axr_level_mode_round_mask = 0xF0,};
enum axr_line_order_t {axr_line_order_increasing_y = 0x0,axr_line_order_decreasing_y = 0x1,axr_line_order_random_y = 0x2,};
typedef _copyfile_state *copyfile_state_t;
typedef void *dispatch_block_t;
typedef NSObject *dispatch_group_t;
struct dispatch_queue_s;
typedef NSObject *dispatch_queue_t;
struct dns_X25_record_t {char *psdn_address;};
typedef unsigned int exception_mask_t;
typedef int exception_type_t;
typedef gss_OID_set_desc_struct gss_OID_set_desc;
typedef gss_buffer_set_desc_struct *gss_buffer_set_t;
typedef  gss_name_t_desc_struct *gss_const_name_t;
typedef int gss_cred_usage_t;
typedef gss_iov_buffer_desc_struct *gss_iov_buffer_t;
typedef host_load_info *host_load_info_t;
enum htmlParserOption {HTML_PARSE_RECOVER = 0x1,HTML_PARSE_NODEFDTD = 0x4,HTML_PARSE_NOERROR = 0x20,HTML_PARSE_NOWARNING = 0x40,HTML_PARSE_PEDANTIC = 0x80,HTML_PARSE_NOBLANKS = 0x100,HTML_PARSE_NONET = 0x800,HTML_PARSE_NOIMPLIED = 0x2000,HTML_PARSE_COMPACT = 0x10000,HTML_PARSE_IGNORE_ENC = 0x200000,};
typedef ipc_info_space ipc_info_space_t;
typedef char kernel_version_t[512];
typedef kmod_reference kmod_reference_t;
struct krb5_ccache_data;
typedef void (*la_deallocator_t)(void *);
typedef unsigned int la_scalar_type_t;
typedef lockgroup_info lockgroup_info_t;
typedef mach_zone_info_data mach_zone_info_t;
typedef mach_zone_name mach_zone_name_t;
typedef simd_double2x2 matrix_double2x2;
typedef simd_double2x3 matrix_double2x3;
typedef simd_double2x4 matrix_double2x4;
typedef simd_double3x2 matrix_double3x2;
typedef simd_double3x3 matrix_double3x3;
typedef simd_double3x4 matrix_double3x4;
typedef simd_double4x2 matrix_double4x2;
typedef simd_double4x3 matrix_double4x3;
typedef simd_double4x4 matrix_double4x4;
typedef void *notify_handler_t;
enum nw_ip_ecn_flag_t {nw_ip_ecn_flag_non_ect = 0x0,nw_ip_ecn_flag_ect_0 = 0x2,nw_ip_ecn_flag_ect_1 = 0x1,nw_ip_ecn_flag_ce = 0x3,};
enum nw_path_status_t {nw_path_status_invalid = 0x0,nw_path_status_satisfied = 0x1,nw_path_status_unsatisfied = 0x2,nw_path_status_satisfiable = 0x3,};
typedef NSObject *nw_ws_response_t;
struct objc_method_list;
typedef  void *objc_objectptr_t;
typedef os_unfair_lock_s *os_unfair_lock_t;
typedef policy_rr_base *policy_rr_base_t;
typedef policy_rr_info *policy_rr_info_t;
enum reloc_type_arm64 {ARM64_RELOC_UNSIGNED = 0x0,ARM64_RELOC_SUBTRACTOR = 0x1,ARM64_RELOC_BRANCH26 = 0x2,ARM64_RELOC_PAGE21 = 0x3,ARM64_RELOC_PAGEOFF12 = 0x4,ARM64_RELOC_GOT_LOAD_PAGE21 = 0x5,ARM64_RELOC_GOT_LOAD_PAGEOFF12 = 0x6,ARM64_RELOC_POINTER_TO_GOT = 0x7,ARM64_RELOC_TLVP_LOAD_PAGE21 = 0x8,ARM64_RELOC_TLVP_LOAD_PAGEOFF12 = 0x9,ARM64_RELOC_ADDEND = 0xA,ARM64_RELOC_AUTHENTICATED_POINTER = 0xB,};
typedef unsigned int routine_arg_size;
typedef unsigned int routine_arg_type;
struct security_token_t {unsigned int val[2];};
union __attribute__((aligned(8))) simd_packed_int2 {char i8[8];short i16[4];int i32[2];unsigned char u8[8];unsigned short u16[4];unsigned int u32[2];};
union __attribute__((aligned(16))) simd_packed_int4 {char i8[16];short i16[8];int i32[4];long long i64[2];unsigned char u8[16];unsigned short u16[8];unsigned int u32[4];unsigned long long u64[2];};
union __attribute__((aligned(16))) simd_packed_int8 {char i8[32];short i16[16];int i32[8];long long i64[4];__int128 i128[2];unsigned char u8[32];unsigned short u16[16];unsigned int u32[8];unsigned long long u64[4];__uint128 u128[2];};
typedef int (*sqlite3_callback)(void *, int, char **, char **);
struct std____1__locale {std____1__locale____imp *__locale_;};
typedef std____1__basic_string_char_ std____1__string;
typedef void (*std__new_handler)(void);
typedef char suid_cred_path_t[1024];
typedef task_dyld_info *task_dyld_info_t;
enum task_latency_qos {LATENCY_QOS_TIER_UNSPECIFIED = 0x0,LATENCY_QOS_TIER_0 = 0xFF0001,LATENCY_QOS_TIER_1 = 0xFF0002,LATENCY_QOS_TIER_2 = 0xFF0003,LATENCY_QOS_TIER_3 = 0xFF0004,LATENCY_QOS_TIER_4 = 0xFF0005,LATENCY_QOS_TIER_5 = 0xFF0006,};
typedef task_zone_info_data task_zone_info_t;
typedef unw_addr_space *unw_addr_space_t;
typedef char *user_subsystem_t;
typedef unsigned long long vImagePixelCount;
struct vImageWhitePoint {float white_x;float white_y;};
enum vImageYpCbCrType {kvImage422CbYpCrYp8 = 0x0,kvImage422YpCbYpCr8 = 0x1,kvImage422CbYpCrYp8_AA8 = 0x2,kvImage420Yp8_Cb8_Cr8 = 0x3,kvImage420Yp8_CbCr8 = 0x4,kvImage444AYpCbCr8 = 0x5,kvImage444CrYpCb8 = 0x6,kvImage444CbYpCrA8 = 0x7,kvImage444CrYpCb10 = 0x8,kvImage422CrYpCbYpCbYpCbYpCrYpCrYp10 = 0x9,kvImage422CbYpCrYp16 = 0xD,kvImage444AYpCbCr16 = 0xE,};
typedef vm_info_object vm_info_object_t;
typedef vm_info_region vm_info_region_t;
typedef int *vm_region_info_t;
enum xmlAttributeType {XML_ATTRIBUTE_CDATA = 0x1,XML_ATTRIBUTE_ID = 0x2,XML_ATTRIBUTE_IDREF = 0x3,XML_ATTRIBUTE_IDREFS = 0x4,XML_ATTRIBUTE_ENTITY = 0x5,XML_ATTRIBUTE_ENTITIES = 0x6,XML_ATTRIBUTE_NMTOKEN = 0x7,XML_ATTRIBUTE_NMTOKENS = 0x8,XML_ATTRIBUTE_ENUMERATION = 0x9,XML_ATTRIBUTE_NOTATION = 0xA,};
typedef struct _xmlAutomataState xmlAutomataState;
enum xmlCatalogPrefer {XML_CATA_PREFER_NONE = 0x0,XML_CATA_PREFER_PUBLIC = 0x1,XML_CATA_PREFER_SYSTEM = 0x2,};
enum xmlDocProperties {XML_DOC_WELLFORMED = 0x1,XML_DOC_NSVALID = 0x2,XML_DOC_OLD10 = 0x4,XML_DOC_DTDVALID = 0x8,XML_DOC_XINCLUDE = 0x10,XML_DOC_USERBUILT = 0x20,XML_DOC_INTERNAL = 0x40,XML_DOC_HTML = 0x80,};
typedef struct _xmlHashTable xmlEntitiesTable;
typedef struct _xmlHashTable xmlNotationTable;
typedef _xmlSchemaElement xmlSchemaElement;
enum xmlSchemaValType {XML_SCHEMAS_UNKNOWN = 0x0,XML_SCHEMAS_STRING = 0x1,XML_SCHEMAS_NORMSTRING = 0x2,XML_SCHEMAS_DECIMAL = 0x3,XML_SCHEMAS_TIME = 0x4,XML_SCHEMAS_GDAY = 0x5,XML_SCHEMAS_GMONTH = 0x6,XML_SCHEMAS_GMONTHDAY = 0x7,XML_SCHEMAS_GYEAR = 0x8,XML_SCHEMAS_GYEARMONTH = 0x9,XML_SCHEMAS_DATE = 0xA,XML_SCHEMAS_DATETIME = 0xB,XML_SCHEMAS_DURATION = 0xC,XML_SCHEMAS_FLOAT = 0xD,XML_SCHEMAS_DOUBLE = 0xE,XML_SCHEMAS_BOOLEAN = 0xF,XML_SCHEMAS_TOKEN = 0x10,XML_SCHEMAS_LANGUAGE = 0x11,XML_SCHEMAS_NMTOKEN = 0x12,XML_SCHEMAS_NMTOKENS = 0x13,XML_SCHEMAS_NAME = 0x14,XML_SCHEMAS_QNAME = 0x15,XML_SCHEMAS_NCNAME = 0x16,XML_SCHEMAS_ID = 0x17,XML_SCHEMAS_IDREF = 0x18,XML_SCHEMAS_IDREFS = 0x19,XML_SCHEMAS_ENTITY = 0x1A,XML_SCHEMAS_ENTITIES = 0x1B,XML_SCHEMAS_NOTATION = 0x1C,XML_SCHEMAS_ANYURI = 0x1D,XML_SCHEMAS_INTEGER = 0x1E,XML_SCHEMAS_NPINTEGER = 0x1F,XML_SCHEMAS_NINTEGER = 0x20,XML_SCHEMAS_NNINTEGER = 0x21,XML_SCHEMAS_PINTEGER = 0x22,XML_SCHEMAS_INT = 0x23,XML_SCHEMAS_UINT = 0x24,XML_SCHEMAS_LONG = 0x25,XML_SCHEMAS_ULONG = 0x26,XML_SCHEMAS_SHORT = 0x27,XML_SCHEMAS_USHORT = 0x28,XML_SCHEMAS_BYTE = 0x29,XML_SCHEMAS_UBYTE = 0x2A,XML_SCHEMAS_HEXBINARY = 0x2B,XML_SCHEMAS_BASE64BINARY = 0x2C,XML_SCHEMAS_ANYTYPE = 0x2D,XML_SCHEMAS_ANYSIMPLETYPE = 0x2E,};
typedef struct _xmlXPathCompExpr xmlXPathCompExpr;
typedef _xmlXPathVariable xmlXPathVariable;
typedef AAArchiveStream_impl *AAArchiveStream;
enum AAEntryMessages {AA_ENTRY_MESSAGE_SEARCH_PRUNE_DIR = 0xA,AA_ENTRY_MESSAGE_SEARCH_EXCLUDE = 0xB,AA_ENTRY_MESSAGE_SEARCH_FAIL = 0xC,AA_ENTRY_MESSAGE_EXTRACT_BEGIN = 0x14,AA_ENTRY_MESSAGE_EXTRACT_END = 0x15,AA_ENTRY_MESSAGE_EXTRACT_FAIL = 0x16,AA_ENTRY_MESSAGE_EXTRACT_ATTRIBUTES = 0x17,AA_ENTRY_MESSAGE_EXTRACT_XAT = 0x18,AA_ENTRY_MESSAGE_EXTRACT_ACL = 0x19,AA_ENTRY_MESSAGE_ENCODE_SCANNING = 0x1E,AA_ENTRY_MESSAGE_ENCODE_WRITING = 0x1F,AA_ENTRY_MESSAGE_CONVERT_EXCLUDE = 0x28,AA_ENTRY_MESSAGE_PROCESS_EXCLUDE = 0x32,AA_ENTRY_MESSAGE_DECODE_READING = 0x3C,};
enum AAHashFunctions {AA_HASH_FUNCTION_CRC32 = 0x1,AA_HASH_FUNCTION_SHA1 = 0x2,AA_HASH_FUNCTION_SHA256 = 0x3,AA_HASH_FUNCTION_SHA384 = 0x4,AA_HASH_FUNCTION_SHA512 = 0x5,};
struct AAPathList_impl;
enum ARRaycastTarget {ARRaycastTargetExistingPlaneGeometry = 0x0,ARRaycastTargetExistingPlaneInfinite = 0x1,ARRaycastTargetEstimatedPlane = 0x2,};
enum ARTrackingState {ARTrackingStateNotAvailable = 0x0,ARTrackingStateLimited = 0x1,ARTrackingStateNormal = 0x2,};
struct AVAssetInternal;
typedef AVAudio3DPoint AVAudio3DVector;
typedef unsigned long long AVAudioUInteger;
struct AVMovieInternal;
enum BNNSPaddingMode {BNNSPaddingModeConstant = 0x0,BNNSPaddingModeReflect = 0x1,BNNSPaddingModeSymmetric = 0x2,};
enum CBLAS_TRANSPOSE {CblasNoTrans = 0x6F,CblasTrans = 0x70,CblasConjTrans = 0x71,AtlasConj = 0x72,};
typedef __CFBinaryHeap *CFBinaryHeapRef;
typedef  __CFDictionary *CFDictionaryRef;
typedef __CFBag *CFMutableBagRef;
typedef __CFSet *CFMutableSetRef;
typedef __CFNetService *CFNetServiceRef;
enum CFNetworkErrors {kCFHostErrorHostNotFound = 0x1,kCFHostErrorUnknown = 0x2,kCFSOCKSErrorUnknownClientVersion = 0x64,kCFSOCKSErrorUnsupportedServerVersion = 0x65,kCFSOCKS4ErrorRequestFailed = 0x6E,kCFSOCKS4ErrorIdentdFailed = 0x6F,kCFSOCKS4ErrorIdConflict = 0x70,kCFSOCKS4ErrorUnknownStatusCode = 0x71,kCFSOCKS5ErrorBadState = 0x78,kCFSOCKS5ErrorBadResponseAddr = 0x79,kCFSOCKS5ErrorBadCredentials = 0x7A,kCFSOCKS5ErrorUnsupportedNegotiationMethod = 0x7B,kCFSOCKS5ErrorNoAcceptableMethod = 0x7C,kCFFTPErrorUnexpectedStatusCode = 0xC8,kCFErrorHTTPAuthenticationTypeUnsupported = 0x12C,kCFErrorHTTPBadCredentials = 0x12D,kCFErrorHTTPConnectionLost = 0x12E,kCFErrorHTTPParseFailure = 0x12F,kCFErrorHTTPRedirectionLoopDetected = 0x130,kCFErrorHTTPBadURL = 0x131,kCFErrorHTTPProxyConnectionFailure = 0x132,kCFErrorHTTPBadProxyCredentials = 0x133,kCFErrorPACFileError = 0x134,kCFErrorPACFileAuth = 0x135,kCFErrorHTTPSProxyConnectionFailure = 0x136,kCFStreamErrorHTTPSProxyFailureUnexpectedResponseToCONNECTMethod = 0x137,kCFURLErrorBackgroundSessionInUseByAnotherProcess = 0xFFFFFC1C,kCFURLErrorBackgroundSessionWasDisconnected = 0xFFFFFC1B,kCFURLErrorUnknown = 0xFFFFFC1A,kCFURLErrorCancelled = 0xFFFFFC19,kCFURLErrorBadURL = 0xFFFFFC18,kCFURLErrorTimedOut = 0xFFFFFC17,kCFURLErrorUnsupportedURL = 0xFFFFFC16,kCFURLErrorCannotFindHost = 0xFFFFFC15,kCFURLErrorCannotConnectToHost = 0xFFFFFC14,kCFURLErrorNetworkConnectionLost = 0xFFFFFC13,kCFURLErrorDNSLookupFailed = 0xFFFFFC12,kCFURLErrorHTTPTooManyRedirects = 0xFFFFFC11,kCFURLErrorResourceUnavailable = 0xFFFFFC10,kCFURLErrorNotConnectedToInternet = 0xFFFFFC0F,kCFURLErrorRedirectToNonExistentLocation = 0xFFFFFC0E,kCFURLErrorBadServerResponse = 0xFFFFFC0D,kCFURLErrorUserCancelledAuthentication = 0xFFFFFC0C,kCFURLErrorUserAuthenticationRequired = 0xFFFFFC0B,kCFURLErrorZeroByteResource = 0xFFFFFC0A,kCFURLErrorCannotDecodeRawData = 0xFFFFFC09,kCFURLErrorCannotDecodeContentData = 0xFFFFFC08,kCFURLErrorCannotParseResponse = 0xFFFFFC07,kCFURLErrorInternationalRoamingOff = 0xFFFFFC06,kCFURLErrorCallIsActive = 0xFFFFFC05,kCFURLErrorDataNotAllowed = 0xFFFFFC04,kCFURLErrorRequestBodyStreamExhausted = 0xFFFFFC03,kCFURLErrorAppTransportSecurityRequiresSecureConnection = 0xFFFFFC02,kCFURLErrorFileDoesNotExist = 0xFFFFFBB4,kCFURLErrorFileIsDirectory = 0xFFFFFBB3,kCFURLErrorNoPermissionsToReadFile = 0xFFFFFBB2,kCFURLErrorDataLengthExceedsMaximum = 0xFFFFFBB1,kCFURLErrorFileOutsideSafeArea = 0xFFFFFBB0,kCFURLErrorSecureConnectionFailed = 0xFFFFFB50,kCFURLErrorServerCertificateHasBadDate = 0xFFFFFB4F,kCFURLErrorServerCertificateUntrusted = 0xFFFFFB4E,kCFURLErrorServerCertificateHasUnknownRoot = 0xFFFFFB4D,kCFURLErrorServerCertificateNotYetValid = 0xFFFFFB4C,kCFURLErrorClientCertificateRejected = 0xFFFFFB4B,kCFURLErrorClientCertificateRequired = 0xFFFFFB4A,kCFURLErrorCannotLoadFromNetwork = 0xFFFFF830,kCFURLErrorCannotCreateFile = 0xFFFFF448,kCFURLErrorCannotOpenFile = 0xFFFFF447,kCFURLErrorCannotCloseFile = 0xFFFFF446,kCFURLErrorCannotWriteToFile = 0xFFFFF445,kCFURLErrorCannotRemoveFile = 0xFFFFF444,kCFURLErrorCannotMoveFile = 0xFFFFF443,kCFURLErrorDownloadDecodingFailedMidStream = 0xFFFFF442,kCFURLErrorDownloadDecodingFailedToComplete = 0xFFFFF441,kCFHTTPCookieCannotParseCookieFile = 0xFFFFF060,kCFNetServiceErrorUnknown = 0xFFFEE6C0,kCFNetServiceErrorCollision = 0xFFFEE6BF,kCFNetServiceErrorNotFound = 0xFFFEE6BE,kCFNetServiceErrorInProgress = 0xFFFEE6BD,kCFNetServiceErrorBadArgument = 0xFFFEE6BC,kCFNetServiceErrorCancel = 0xFFFEE6BB,kCFNetServiceErrorInvalid = 0xFFFEE6BA,kCFNetServiceErrorTimeout = 0xFFFEE6B9,kCFNetServiceErrorDNSServiceFailure = 0xFFFEE2D8,};
typedef __CFReadStream *CFReadStreamRef;
typedef CGColorSpace *CGColorSpaceRef;
struct CGImageMetadata;
enum CGPDFDataFormat {CGPDFDataFormatRaw = 0x0,CGPDFDataFormatJPEGEncoded = 0x1,CGPDFDataFormatJPEG2000 = 0x2,};
struct CGPDFDictionary;
enum CGPDFObjectType {kCGPDFObjectTypeNull = 0x1,kCGPDFObjectTypeBoolean = 0x2,kCGPDFObjectTypeInteger = 0x3,kCGPDFObjectTypeReal = 0x4,kCGPDFObjectTypeName = 0x5,kCGPDFObjectTypeString = 0x6,kCGPDFObjectTypeArray = 0x7,kCGPDFObjectTypeDictionary = 0x8,kCGPDFObjectTypeStream = 0x9,};
typedef CGPDFScanner *CGPDFScannerRef;
enum CGPatternTiling {kCGPatternTilingNoDistortion = 0x0,kCGPatternTilingConstantSpacingMinimalDistortion = 0x1,kCGPatternTilingConstantSpacing = 0x2,};
enum CKAccountStatus {CKAccountStatusCouldNotDetermine = 0x0,CKAccountStatusAvailable = 0x1,CKAccountStatusRestricted = 0x2,CKAccountStatusNoAccount = 0x3,};
enum CKDatabaseScope {CKDatabaseScopePublic = 0x1,CKDatabaseScopePrivate = 0x2,CKDatabaseScopeShared = 0x3,};
typedef double CLLocationSpeed;
struct CMMagneticField {double x;double y;double z;};
typedef OpaqueCMMemoryPool *CMMemoryPoolRef;
enum CNContainerType {CNContainerTypeUnassigned = 0x0,CNContainerTypeLocal = 0x1,CNContainerTypeExchange = 0x2,CNContainerTypeCardDAV = 0x3,};
enum CPBarButtonType {CPBarButtonTypeText = 0x0,CPBarButtonTypeImage = 0x1,};
enum CTLineBreakMode {kCTLineBreakByWordWrapping = 0x0,kCTLineBreakByCharWrapping = 0x1,kCTLineBreakByClipping = 0x2,kCTLineBreakByTruncatingHead = 0x3,kCTLineBreakByTruncatingTail = 0x4,kCTLineBreakByTruncatingMiddle = 0x5,};
enum CTRubyAlignment {kCTRubyAlignmentInvalid = 0xFF,kCTRubyAlignmentAuto = 0x0,kCTRubyAlignmentStart = 0x1,kCTRubyAlignmentCenter = 0x2,kCTRubyAlignmentEnd = 0x3,kCTRubyAlignmentDistributeLetter = 0x4,kCTRubyAlignmentDistributeSpace = 0x5,kCTRubyAlignmentLineEdge = 0x6,};
enum CTTextAlignment {kCTTextAlignmentLeft = 0x0,kCTTextAlignmentRight = 0x1,kCTTextAlignmentCenter = 0x2,kCTTextAlignmentJustified = 0x3,kCTTextAlignmentNatural = 0x4,kCTLeftTextAlignment = 0x0,kCTRightTextAlignment = 0x1,kCTCenterTextAlignment = 0x2,kCTJustifiedTextAlignment = 0x3,kCTNaturalTextAlignment = 0x4,};
typedef  __CTTypesetter *CTTypesetterRef;
enum CVSMPTETimeType {kCVSMPTETimeType24 = 0x0,kCVSMPTETimeType25 = 0x1,kCVSMPTETimeType30Drop = 0x2,kCVSMPTETimeType30 = 0x3,kCVSMPTETimeType2997 = 0x4,kCVSMPTETimeType2997Drop = 0x5,kCVSMPTETimeType60 = 0x6,kCVSMPTETimeType5994 = 0x7,};
typedef  unsigned char *ConstStr15Param;
typedef  unsigned char *ConstStr27Param;
typedef  unsigned char *ConstStr31Param;
typedef  unsigned char *ConstStr32Param;
typedef  unsigned char *ConstStr63Param;
struct DSPSplitComplex {float *realp;float *imagp;};
typedef OpaqueExtAudioFile *ExtAudioFileRef;
enum GKTransportType {GKTransportTypeUnreliable = 0x0,GKTransportTypeReliable = 0x1,};
enum GLKLightingType {GLKLightingTypePerVertex = 0x0,GLKLightingTypePerPixel = 0x1,};
enum GLKVertexAttrib {GLKVertexAttribPosition = 0x0,GLKVertexAttribNormal = 0x1,GLKVertexAttribColor = 0x2,GLKVertexAttribTexCoord0 = 0x3,GLKVertexAttribTexCoord1 = 0x4,};
enum HKBiologicalSex {HKBiologicalSexNotSet = 0x0,HKBiologicalSexFemale = 0x1,HKBiologicalSexMale = 0x2,HKBiologicalSexOther = 0x3,};
enum HKCategoryValue {HKCategoryValueNotApplicable = 0x0,};
enum HKWheelchairUse {HKWheelchairUseNotSet = 0x0,HKWheelchairUseNo = 0x1,HKWheelchairUseYes = 0x2,};
enum INMediaItemType {INMediaItemTypeUnknown = 0x0,INMediaItemTypeSong = 0x1,INMediaItemTypeAlbum = 0x2,INMediaItemTypeArtist = 0x3,INMediaItemTypeGenre = 0x4,INMediaItemTypePlaylist = 0x5,INMediaItemTypePodcastShow = 0x6,INMediaItemTypePodcastEpisode = 0x7,INMediaItemTypePodcastPlaylist = 0x8,INMediaItemTypeMusicStation = 0x9,INMediaItemTypeAudioBook = 0xA,INMediaItemTypeMovie = 0xB,INMediaItemTypeTVShow = 0xC,INMediaItemTypeTVShowEpisode = 0xD,INMediaItemTypeMusicVideo = 0xE,INMediaItemTypePodcastStation = 0xF,INMediaItemTypeRadioStation = 0x10,INMediaItemTypeStation = 0x11,INMediaItemTypeMusic = 0x12,INMediaItemTypeAlgorithmicRadioStation = 0x13,INMediaItemTypeNews = 0x14,};
enum INPaymentStatus {INPaymentStatusUnknown = 0x0,INPaymentStatusPending = 0x1,INPaymentStatusCompleted = 0x2,INPaymentStatusCanceled = 0x3,INPaymentStatusFailed = 0x4,INPaymentStatusUnpaid = 0x5,};
enum MACRO_AUDIT_CNT {AUDIT_CNT = 0x1,AUDIT_AHLT = 0x2,AUDIT_ARGV = 0x4,AUDIT_ARGE = 0x8,AUDIT_SEQ = 0x10,AUDIT_WINDATA = 0x20,AUDIT_USER = 0x40,AUDIT_GROUP = 0x80,AUDIT_TRAIL = 0x100,AUDIT_PATH = 0x200,AUDIT_SCNT = 0x400,AUDIT_PUBLIC = 0x800,AUDIT_ZONENAME = 0x1000,AUDIT_PERZONE = 0x2000,};
enum MACRO_CHARCLASS {CHARCLASS_NAME_MAX = 14,COLL_WEIGHTS_MAX = 2,EQUIV_CLASS_MAX = 2,EXPR_NEST_MAX = 32,LINE_MAX = 2048,RE_DUP_MAX = 255,};
enum MACRO_CLOCK_GET {CLOCK_GET_TIME_RES = 1,CLOCK_ALARM_CURRES = 3,CLOCK_ALARM_MINRES = 4,CLOCK_ALARM_MAXRES = 5,};
enum MACRO_COREIMAGE {COREIMAGE_SUPPORTS_IOSURFACE = 1,};
enum MACRO_COREMEDIA {COREMEDIA_TRUE = 1,COREMEDIA_FALSE = 0,};
enum MACRO_COREVIDEO {COREVIDEO_TRUE = 1,COREVIDEO_FALSE = 0,COREVIDEO_INCLUDED_IOSURFACE_HEADER_FILE = 1,COREVIDEO_USE_EAGLCONTEXT_CLASS_IN_API = 1,};
enum MACRO_CPUFAMILY {CPUFAMILY_UNKNOWN = 0,CPUFAMILY_POWERPC_G3 = 3471054153,CPUFAMILY_POWERPC_G4 = 2009171118,CPUFAMILY_POWERPC_G5 = 3983988906,CPUFAMILY_INTEL_6_13 = 2855483691,CPUFAMILY_INTEL_PENRYN = 2028621756,CPUFAMILY_INTEL_NEHALEM = 1801080018,CPUFAMILY_INTEL_WESTMERE = 1463508716,CPUFAMILY_INTEL_SANDYBRIDGE = 1418770316,CPUFAMILY_INTEL_IVYBRIDGE = 526772277,CPUFAMILY_INTEL_HASWELL = 280134364,CPUFAMILY_INTEL_BROADWELL = 1479463068,CPUFAMILY_INTEL_SKYLAKE = 939270559,CPUFAMILY_INTEL_KABYLAKE = 260141638,CPUFAMILY_INTEL_ICELAKE = 943936839,CPUFAMILY_ARM_9 = 3878847406,CPUFAMILY_ARM_11 = 2415272152,CPUFAMILY_ARM_XSCALE = 1404044789,CPUFAMILY_ARM_12 = 3172666089,CPUFAMILY_ARM_13 = 214503012,CPUFAMILY_ARM_14 = 2517073649,CPUFAMILY_ARM_15 = 2823887818,CPUFAMILY_ARM_SWIFT = 506291073,CPUFAMILY_ARM_CYCLONE = 933271106,CPUFAMILY_ARM_TYPHOON = 747742334,CPUFAMILY_ARM_TWISTER = 2465937352,CPUFAMILY_ARM_HURRICANE = 1741614739,CPUFAMILY_ARM_MONSOON_MISTRAL = 3894312694,CPUFAMILY_ARM_VORTEX_TEMPEST = 131287967,CPUFAMILY_ARM_LIGHTNING_THUNDER = 1176831186,};
enum MACRO_CTL_DEBUG {CTL_DEBUG_NAME = 0,CTL_DEBUG_VALUE = 1,CTL_DEBUG_MAXID = 20,};
enum MACRO_DIRBLKSIZ {DIRBLKSIZ = 1024,};
enum MACRO_EBADMACHO {EBADMACHO = 88,};
enum MACRO_ECANCELED {ECANCELED = 89,};
enum MACRO_EMULTIHOP {EMULTIHOP = 95,};
enum MACRO_ENEEDAUTH {ENEEDAUTH = 81,};
enum MACRO_ENETRESET {ENETRESET = 52,};
enum MACRO_ENOPOLICY {ENOPOLICY = 103,};
enum MACRO_ENOTEMPTY {ENOTEMPTY = 66,};
enum MACRO_EOVERFLOW {EOVERFLOW = 84,};
enum MACRO_ESHUTDOWN {ESHUTDOWN = 58,};
enum MACRO_ETHERTYPE {ETHERTYPE_PUP = 0x200,ETHERTYPE_IP = 0x800,ETHERTYPE_ARP = 0x806,ETHERTYPE_REVARP = 0x8035,ETHERTYPE_VLAN = 0x8100,ETHERTYPE_IPV6 = 0x86DD,ETHERTYPE_PAE = 0x888E,ETHERTYPE_RSN_PREAUTH = 0x88C7,ETHERTYPE_PTP = 0x88F7,ETHERTYPE_LOOPBACK = 0x9000,ETHERTYPE_IEEE802154 = 0x809,ETHERTYPE_TRAIL = 0x1000,ETHERTYPE_NTRAILER = 0x10,};
enum MACRO_ETIMEDOUT {ETIMEDOUT = 60,};
enum MACRO_EXCEPTION {EXCEPTION_CODE_MAX = 2,};
enum MACRO_FOOTPRINT {FOOTPRINT_INTERVAL_RESET = 0x1,};
enum MACRO_HASHMAGIC {HASHMAGIC = 0x61561,};
enum MACRO_ICMP6_DST {ICMP6_DST_UNREACH = 1,ICMP6_PACKET_TOO_BIG = 2,ICMP6_TIME_EXCEEDED = 3,ICMP6_PARAM_PROB = 4,ICMP6_ECHO_REQUEST = 128,ICMP6_ECHO_REPLY = 129,};
enum MACRO_ICMPV6CTL {ICMPV6CTL_ND6_ONLINKNSRFC4861 = 50,};
enum MACRO_IFSTATMAX {IFSTATMAX = 800,};
enum MACRO_IF_MINMTU {IF_MINMTU = 72,IF_MAXMTU = 65535,};
enum MACRO_IPFRAGTTL {IPFRAGTTL = 30,};
enum MACRO_IPVERSION {IPVERSION = 4,};
enum MACRO_LC_GLOBAL {LC_GLOBAL_LOCALE = -1,};
enum MACRO_LOCKGROUP {LOCKGROUP_MAX_NAME = 64,LOCKGROUP_ATTR_STAT = 1,};
enum MACRO_L_ctermid {L_ctermid = 1024,};
enum MACRO_MACH_CORE {MACH_CORE_FILEHEADER_SIGNATURE = 0x63614D20646152,MACH_CORE_FILEHEADER_MAXFILES = 0x10,MACH_CORE_FILEHEADER_NAMELEN = 0x10,};
enum MACRO_MAXCOMLEN {MAXCOMLEN = 16,MAXINTERP = 64,};
enum MACRO_MAXDNSRCH {MAXDNSRCH = 6,};
enum MACRO_MAXPHYSIO {MAXPHYSIO_WIRED = 16777216,};
enum MACRO_MAXQUOTAS {MAXQUOTAS = 2,};
enum MACRO_MAX_AUDIT {MAX_AUDIT_RECORDS = 20,};
enum MACRO_MAX_CANON {MAX_CANON = 1024,MAX_INPUT = 1024,};
enum MACRO_MAX_FATAL {MAX_FATAL_kGUARD_EXC_CODE = 64,};
enum MACRO_MIN_AUDIT {MIN_AUDIT_FILE_SIZE = 524288,};
enum MACRO_MIXEDMODE {MIXEDMODE_CALLS_ARE_FUNCTIONS = 1,};
enum MACRO_MNTNAMLEN {MNTNAMLEN = 255,};
enum MACRO_MOUNTPROC {MOUNTPROC_NULL = 0,MOUNTPROC_MNT = 1,MOUNTPROC_DUMP = 2,MOUNTPROC_UMNT = 3,MOUNTPROC_UMNTALL = 4,MOUNTPROC_EXPORT = 5,MOUNTPROC_EXPORTALL = 6,};
enum MACRO_MOUNTPROG {MOUNTPROG = 100005,};
enum MACRO_MOUNTVERS {MOUNTVERS = 1,};
enum MACRO_MSG_COUNT {host_security_MSG_COUNT = 2,lock_set_MSG_COUNT = 6,processor_MSG_COUNT = 6,processor_set_MSG_COUNT = 11,};
enum MACRO_NSINTEGER {NSINTEGER_DEFINED = 1,};
enum MACRO_NS_BLOCKS {NS_BLOCKS_AVAILABLE = 1,};
enum MACRO_NW_FRAMER {NW_FRAMER_CREATE_FLAGS_DEFAULT = 0x0,NW_FRAMER_WAKEUP_TIME_FOREVER = 0xFFFFFFFF,};
enum MACRO_OBJC_BOOL {OBJC_BOOL_IS_BOOL = 1,};
enum MACRO_OBJC_NEXT {OBJC_NEXT_METHOD_LIST = 1,};
enum MACRO_OS_OBJECT {OS_OBJECT_USE_OBJC_RETAIN_RELEASE = 0,};
enum MACRO_PROCESSOR {PROCESSOR_CPU_STAT = 0x10000003,PROCESSOR_CPU_STAT64 = 0x10000004,PROCESSOR_INFO_MAX = 0x400,PROCESSOR_SET_INFO_MAX = 0x400,PROCESSOR_BASIC_INFO = 0x1,PROCESSOR_CPU_LOAD_INFO = 0x2,PROCESSOR_PM_REGS_INFO = 0x10000001,PROCESSOR_TEMPERATURE = 0x10000002,};
enum MACRO_RADIXCHAR {RADIXCHAR = 50,};
enum MACRO_REFERENCE {REFERENCE_TYPE = 0x7,REFERENCE_FLAG_UNDEFINED_NON_LAZY = 0x0,REFERENCE_FLAG_UNDEFINED_LAZY = 0x1,REFERENCE_FLAG_DEFINED = 0x2,REFERENCE_FLAG_PRIVATE_DEFINED = 0x3,REFERENCE_FLAG_PRIVATE_UNDEFINED_NON_LAZY = 0x4,REFERENCE_FLAG_PRIVATE_UNDEFINED_LAZY = 0x5,};
enum MACRO_RSTATPROC {RSTATPROC_STATS = 1,RSTATPROC_HAVEDISK = 2,};
enum MACRO_RSTATPROG {RSTATPROG = 100001,};
enum MACRO_RSTATVERS {RSTATVERS_TIME = 3,};
enum MACRO_SEEK_HOLE {SEEK_HOLE = 3,SEEK_DATA = 4,};
enum MACRO_SIGNATURE {TCPOPT_SIGNATURE = 19,TCPOLEN_SIGNATURE = 18,};
enum MACRO_SIGVTALRM {SIGVTALRM = 26,};
enum MACRO_SOL_LOCAL {SOL_LOCAL = 0,};
enum MACRO_SOMAXCONN {SOMAXCONN = 128,};
enum MACRO_SPRAYPROC {SPRAYPROC_SPRAY = 1,SPRAYPROC_GET = 2,SPRAYPROC_CLEAR = 3,};
enum MACRO_SPRAYPROG {SPRAYPROG = 100012,};
enum MACRO_SPRAYVERS {SPRAYVERS = 1,};
enum MACRO_SUPERPAGE {SUPERPAGE_NONE = 0,SUPERPAGE_SIZE_ANY = 1,SUPERPAGE_SIZE_2MB = 2,};
enum MACRO_S_BLKSIZE {S_BLKSIZE = 512,};
enum MACRO_S_REGULAR {S_REGULAR = 0x0,S_ZEROFILL = 0x1,S_CSTRING_LITERALS = 0x2,S_4BYTE_LITERALS = 0x3,S_8BYTE_LITERALS = 0x4,S_LITERAL_POINTERS = 0x5,S_NON_LAZY_SYMBOL_POINTERS = 0x6,S_LAZY_SYMBOL_POINTERS = 0x7,S_SYMBOL_STUBS = 0x8,S_MOD_INIT_FUNC_POINTERS = 0x9,S_MOD_TERM_FUNC_POINTERS = 0xA,S_COALESCED = 0xB,S_GB_ZEROFILL = 0xC,S_INTERPOSING = 0xD,S_16BYTE_LITERALS = 0xE,S_DTRACE_DOF = 0xF,S_LAZY_DYLIB_SYMBOL_POINTERS = 0x10,S_THREAD_LOCAL_REGULAR = 0x11,S_THREAD_LOCAL_ZEROFILL = 0x12,S_THREAD_LOCAL_VARIABLES = 0x13,S_THREAD_LOCAL_VARIABLE_POINTERS = 0x14,S_THREAD_LOCAL_INIT_FUNCTION_POINTERS = 0x15,S_INIT_FUNC_OFFSETS = 0x16,};
enum MACRO_TASK_NULL {TASK_NULL = 0,TASK_NAME_NULL = 0,TASK_INSPECT_NULL = 0,TASK_READ_NULL = 0,};
enum MACRO_TASK_PORT {TASK_PORT_REGISTER_MAX = 3,TASK_MAX_WATCHPORT_COUNT = 32,TASK_SELF_PORT_COUNT = 4,};
enum MACRO_TCIOFLUSH {TCIOFLUSH = 3,};
enum MACRO_TCPOPT_CC {TCPOPT_CC = 11,TCPOPT_CCNEW = 12,TCPOPT_CCECHO = 13,};
enum MACRO_TF_ACKNOW {TF_ACKNOW = 0x1,TF_DELACK = 0x2,TF_NODELAY = 0x4,TF_NOOPT = 0x8,TF_SENTFIN = 0x10,TF_REQ_SCALE = 0x20,TF_RCVD_SCALE = 0x40,TF_REQ_TSTMP = 0x80,TF_RCVD_TSTMP = 0x100,TF_SACK_PERMIT = 0x200,TF_NEEDSYN = 0x400,TF_NEEDFIN = 0x800,TF_NOPUSH = 0x1000,TF_REQ_CC = 0x2000,TF_RCVD_CC = 0x4000,TF_SENDCCNEW = 0x8000,TF_MORETOCOME = 0x10000,TF_LQ_OVERFLOW = 0x20000,TF_RXWIN0SENT = 0x40000,TF_SLOWLINK = 0x80000,};
enum MACRO_TIMESTAMP {TCPOPT_TIMESTAMP = 8,TCPOLEN_TIMESTAMP = 10,};
enum MACRO_UCHAR_MIN {UCHAR_MIN_VALUE = 0,UCHAR_MAX_VALUE = 1114111,};
enum MACRO_UNIVERSAL {UNIVERSAL_INTERFACES_VERSION = 0x400,};
enum MACRO_UTF_ERROR {UTF_ERROR_VALUE = 0xFFFF,};
enum MACRO_U_DISABLE {U_DISABLE_RENAMING = 1,U_NO_DEFAULT_INCLUDE_UTF_HEADERS = 0,U_OVERRIDE_CXX_ALLOCATION = 1,U_ENABLE_TRACING = 0,};
enum MACRO_VM_LEDGER {VM_LEDGER_TAG_NONE = 0x0,VM_LEDGER_TAG_DEFAULT = 0x1,VM_LEDGER_TAG_NETWORK = 0x2,VM_LEDGER_TAG_MEDIA = 0x3,VM_LEDGER_TAG_GRAPHICS = 0x4,VM_LEDGER_TAG_NEURAL = 0x5,VM_LEDGER_TAG_MAX = 0x5,VM_LEDGER_FLAG_NO_FOOTPRINT = 0x1,VM_MEMORY_MALLOC = 0x1,VM_MEMORY_MALLOC_SMALL = 0x2,VM_MEMORY_MALLOC_LARGE = 0x3,VM_MEMORY_MALLOC_HUGE = 0x4,VM_MEMORY_SBRK = 0x5,VM_MEMORY_REALLOC = 0x6,VM_MEMORY_MALLOC_TINY = 0x7,VM_MEMORY_MALLOC_LARGE_REUSABLE = 0x8,VM_MEMORY_MALLOC_LARGE_REUSED = 0x9,VM_MEMORY_ANALYSIS_TOOL = 0xA,VM_MEMORY_MALLOC_NANO = 0xB,VM_MEMORY_MALLOC_MEDIUM = 0xC,VM_MEMORY_MALLOC_PGUARD = 0xD,VM_MEMORY_MACH_MSG = 0x14,VM_MEMORY_IOKIT = 0x15,VM_MEMORY_STACK = 0x1E,VM_MEMORY_GUARD = 0x1F,VM_MEMORY_SHARED_PMAP = 0x20,VM_MEMORY_DYLIB = 0x21,VM_MEMORY_OBJC_DISPATCHERS = 0x22,VM_MEMORY_UNSHARED_PMAP = 0x23,VM_MEMORY_APPKIT = 0x28,VM_MEMORY_FOUNDATION = 0x29,VM_MEMORY_COREGRAPHICS = 0x2A,VM_MEMORY_CORESERVICES = 0x2B,VM_MEMORY_JAVA = 0x2C,VM_MEMORY_COREDATA = 0x2D,VM_MEMORY_COREDATA_OBJECTIDS = 0x2E,VM_MEMORY_ATS = 0x32,VM_MEMORY_LAYERKIT = 0x33,VM_MEMORY_CGIMAGE = 0x34,VM_MEMORY_TCMALLOC = 0x35,VM_MEMORY_COREGRAPHICS_DATA = 0x36,VM_MEMORY_COREGRAPHICS_SHARED = 0x37,VM_MEMORY_COREGRAPHICS_FRAMEBUFFERS = 0x38,VM_MEMORY_COREGRAPHICS_BACKINGSTORES = 0x39,VM_MEMORY_COREGRAPHICS_XALLOC = 0x3A,VM_MEMORY_DYLD = 0x3C,VM_MEMORY_DYLD_MALLOC = 0x3D,VM_MEMORY_SQLITE = 0x3E,VM_MEMORY_JAVASCRIPT_CORE = 0x3F,VM_MEMORY_JAVASCRIPT_JIT_EXECUTABLE_ALLOCATOR = 0x40,VM_MEMORY_JAVASCRIPT_JIT_REGISTER_FILE = 0x41,VM_MEMORY_GLSL = 0x42,VM_MEMORY_OPENCL = 0x43,VM_MEMORY_COREIMAGE = 0x44,VM_MEMORY_WEBCORE_PURGEABLE_BUFFERS = 0x45,VM_MEMORY_IMAGEIO = 0x46,VM_MEMORY_COREPROFILE = 0x47,VM_MEMORY_ASSETSD = 0x48,VM_MEMORY_OS_ALLOC_ONCE = 0x49,VM_MEMORY_LIBDISPATCH = 0x4A,VM_MEMORY_ACCELERATE = 0x4B,VM_MEMORY_COREUI = 0x4C,VM_MEMORY_COREUIFILE = 0x4D,VM_MEMORY_GENEALOGY = 0x4E,VM_MEMORY_RAWCAMERA = 0x4F,VM_MEMORY_CORPSEINFO = 0x50,VM_MEMORY_ASL = 0x51,VM_MEMORY_SWIFT_RUNTIME = 0x52,VM_MEMORY_SWIFT_METADATA = 0x53,VM_MEMORY_DHMM = 0x54,VM_MEMORY_SCENEKIT = 0x56,VM_MEMORY_SKYWALK = 0x57,VM_MEMORY_IOSURFACE = 0x58,VM_MEMORY_LIBNETWORK = 0x59,VM_MEMORY_AUDIO = 0x5A,VM_MEMORY_VIDEOBITSTREAM = 0x5B,VM_MEMORY_CM_XPC = 0x5C,VM_MEMORY_CM_RPC = 0x5D,VM_MEMORY_CM_MEMORYPOOL = 0x5E,VM_MEMORY_CM_READCACHE = 0x5F,VM_MEMORY_CM_CRABS = 0x60,VM_MEMORY_QUICKLOOK_THUMBNAILS = 0x61,VM_MEMORY_ACCOUNTS = 0x62,VM_MEMORY_SANITIZER = 0x63,VM_MEMORY_IOACCELERATOR = 0x64,VM_MEMORY_CM_REGWARP = 0x65,VM_MEMORY_EAR_DECODER = 0x66,VM_MEMORY_ROSETTA = 0xE6,VM_MEMORY_ROSETTA_THREAD_CONTEXT = 0xE7,VM_MEMORY_ROSETTA_INDIRECT_BRANCH_MAP = 0xE8,VM_MEMORY_ROSETTA_RETURN_STACK = 0xE9,VM_MEMORY_ROSETTA_EXECUTABLE_HEAP = 0xEA,VM_MEMORY_ROSETTA_USER_LDT = 0xEB,VM_MEMORY_ROSETTA_ARENA = 0xEC,VM_MEMORY_ROSETTA_10 = 0xEF,VM_MEMORY_APPLICATION_SPECIFIC_1 = 0xF0,VM_MEMORY_APPLICATION_SPECIFIC_16 = 0xFF,};
enum MACRO_VM_REGION {VM_REGION_INFO_MAX = 1024,VM_REGION_BASIC_INFO_64 = 9,VM_REGION_BASIC_INFO = 10,};
enum MACRO_YPMAXPEER {YPMAXPEER = 64,};
enum MACRO_YPOLDPROC {YPOLDPROC_NULL = 0,YPOLDPROC_DOMAIN = 1,YPOLDPROC_DOMAIN_NONACK = 2,YPOLDPROC_MATCH = 3,YPOLDPROC_FIRST = 4,YPOLDPROC_NEXT = 5,YPOLDPROC_POLL = 6,YPOLDPROC_PUSH = 7,YPOLDPROC_PULL = 8,YPOLDPROC_GET = 9,};
enum MACRO_YPOLDVERS {YPOLDVERS = 1,};
enum MACRO__CS_POSIX {_CS_POSIX_V6_ILP32_OFF32_CFLAGS = 2,_CS_POSIX_V6_ILP32_OFF32_LDFLAGS = 3,_CS_POSIX_V6_ILP32_OFF32_LIBS = 4,_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS = 5,_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS = 6,_CS_POSIX_V6_ILP32_OFFBIG_LIBS = 7,_CS_POSIX_V6_LP64_OFF64_CFLAGS = 8,_CS_POSIX_V6_LP64_OFF64_LDFLAGS = 9,_CS_POSIX_V6_LP64_OFF64_LIBS = 10,_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS = 11,_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS = 12,_CS_POSIX_V6_LPBIG_OFFBIG_LIBS = 13,_CS_POSIX_V6_WIDTH_RESTRICTED_ENVS = 14,_CS_XBS5_ILP32_OFF32_CFLAGS = 20,_CS_XBS5_ILP32_OFF32_LDFLAGS = 21,_CS_XBS5_ILP32_OFF32_LIBS = 22,_CS_XBS5_ILP32_OFF32_LINTFLAGS = 23,_CS_XBS5_ILP32_OFFBIG_CFLAGS = 24,_CS_XBS5_ILP32_OFFBIG_LDFLAGS = 25,_CS_XBS5_ILP32_OFFBIG_LIBS = 26,_CS_XBS5_ILP32_OFFBIG_LINTFLAGS = 27,_CS_XBS5_LP64_OFF64_CFLAGS = 28,_CS_XBS5_LP64_OFF64_LDFLAGS = 29,_CS_XBS5_LP64_OFF64_LIBS = 30,_CS_XBS5_LP64_OFF64_LINTFLAGS = 31,_CS_XBS5_LPBIG_OFFBIG_CFLAGS = 32,_CS_XBS5_LPBIG_OFFBIG_LDFLAGS = 33,_CS_XBS5_LPBIG_OFFBIG_LIBS = 34,_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS = 35,_CS_DARWIN_USER_DIR = 65536,_CS_DARWIN_USER_TEMP_DIR = 65537,_CS_DARWIN_USER_CACHE_DIR = 65538,};
enum MACRO__LIBICONV {_LIBICONV_VERSION = 0x10B,};
enum MACRO__PASSWORD {_PASSWORD_EFMT1 = 95,_PASSWORD_LEN = 128,_PASSWORD_NOUID = 1,_PASSWORD_NOGID = 2,_PASSWORD_NOCHG = 4,_PASSWORD_NOEXP = 8,_PASSWORD_WARNDAYS = 14,_PASSWORD_CHGNOW = -1,};
enum MACRO__POSIX2_C {_POSIX2_C_BIND = 200112,_POSIX2_C_DEV = 200112,_POSIX2_CHAR_TERM = 200112,_POSIX2_FORT_DEV = -1,_POSIX2_FORT_RUN = 200112,_POSIX2_LOCALEDEF = 200112,_POSIX2_PBS = -1,_POSIX2_PBS_ACCOUNTING = -1,_POSIX2_PBS_CHECKPOINT = -1,_POSIX2_PBS_LOCATE = -1,_POSIX2_PBS_MESSAGE = -1,_POSIX2_PBS_TRACK = -1,_POSIX2_SW_DEV = 200112,_POSIX2_UPE = 200112,};
enum MACRO__WSTOPPED {_WSTOPPED = 0x7F,};
enum MACRO___NAMESER {__NAMESER = 19991006,};
enum MACRO___PTHREAD {__PTHREAD_SIZE__ = 8176,__PTHREAD_ATTR_SIZE__ = 56,__PTHREAD_MUTEXATTR_SIZE__ = 8,__PTHREAD_MUTEX_SIZE__ = 56,__PTHREAD_CONDATTR_SIZE__ = 8,__PTHREAD_COND_SIZE__ = 40,__PTHREAD_ONCE_SIZE__ = 8,__PTHREAD_RWLOCK_SIZE__ = 192,__PTHREAD_RWLOCKATTR_SIZE__ = 16,};
enum MACRO___WATCHOS {__WATCHOS_1_0 = 10000,__WATCHOS_2_0 = 20000,__WATCHOS_2_1 = 20100,__WATCHOS_2_2 = 20200,__WATCHOS_3_0 = 30000,__WATCHOS_3_1 = 30100,__WATCHOS_3_1_1 = 30101,__WATCHOS_3_2 = 30200,__WATCHOS_4_0 = 40000,__WATCHOS_4_1 = 40100,__WATCHOS_4_2 = 40200,__WATCHOS_4_3 = 40300,__WATCHOS_5_0 = 50000,__WATCHOS_5_1 = 50100,__WATCHOS_5_2 = 50200,__WATCHOS_5_3 = 50300,__WATCHOS_6_0 = 60000,__WATCHOS_6_1 = 60100,__WATCHOS_6_2 = 60200,__WATCHOS_7_0 = 70000,};
enum MACRO_pseudo_AF {pseudo_AF_RTIP = 22,};
enum MDLGeometryType {MDLGeometryTypePoints = 0x0,MDLGeometryTypeLines = 0x1,MDLGeometryTypeTriangles = 0x2,MDLGeometryTypeTriangleStrips = 0x3,MDLGeometryTypeQuads = 0x4,MDLGeometryTypeVariableTopology = 0x5,};
enum MDLMaterialFace {MDLMaterialFaceFront = 0x0,MDLMaterialFaceBack = 0x1,MDLMaterialFaceDoubleSided = 0x2,};
enum MDLVertexFormat {MDLVertexFormatInvalid = 0x0,MDLVertexFormatPackedBit = 0x1000,MDLVertexFormatUCharBits = 0x10000,MDLVertexFormatCharBits = 0x20000,MDLVertexFormatUCharNormalizedBits = 0x30000,MDLVertexFormatCharNormalizedBits = 0x40000,MDLVertexFormatUShortBits = 0x50000,MDLVertexFormatShortBits = 0x60000,MDLVertexFormatUShortNormalizedBits = 0x70000,MDLVertexFormatShortNormalizedBits = 0x80000,MDLVertexFormatUIntBits = 0x90000,MDLVertexFormatIntBits = 0xA0000,MDLVertexFormatHalfBits = 0xB0000,MDLVertexFormatFloatBits = 0xC0000,MDLVertexFormatUChar = 0x10001,MDLVertexFormatUChar2 = 0x10002,MDLVertexFormatUChar3 = 0x10003,MDLVertexFormatUChar4 = 0x10004,MDLVertexFormatChar = 0x20001,MDLVertexFormatChar2 = 0x20002,MDLVertexFormatChar3 = 0x20003,MDLVertexFormatChar4 = 0x20004,MDLVertexFormatUCharNormalized = 0x30001,MDLVertexFormatUChar2Normalized = 0x30002,MDLVertexFormatUChar3Normalized = 0x30003,MDLVertexFormatUChar4Normalized = 0x30004,MDLVertexFormatCharNormalized = 0x40001,MDLVertexFormatChar2Normalized = 0x40002,MDLVertexFormatChar3Normalized = 0x40003,MDLVertexFormatChar4Normalized = 0x40004,MDLVertexFormatUShort = 0x50001,MDLVertexFormatUShort2 = 0x50002,MDLVertexFormatUShort3 = 0x50003,MDLVertexFormatUShort4 = 0x50004,MDLVertexFormatShort = 0x60001,MDLVertexFormatShort2 = 0x60002,MDLVertexFormatShort3 = 0x60003,MDLVertexFormatShort4 = 0x60004,MDLVertexFormatUShortNormalized = 0x70001,MDLVertexFormatUShort2Normalized = 0x70002,MDLVertexFormatUShort3Normalized = 0x70003,MDLVertexFormatUShort4Normalized = 0x70004,MDLVertexFormatShortNormalized = 0x80001,MDLVertexFormatShort2Normalized = 0x80002,MDLVertexFormatShort3Normalized = 0x80003,MDLVertexFormatShort4Normalized = 0x80004,MDLVertexFormatUInt = 0x90001,MDLVertexFormatUInt2 = 0x90002,MDLVertexFormatUInt3 = 0x90003,MDLVertexFormatUInt4 = 0x90004,MDLVertexFormatInt = 0xA0001,MDLVertexFormatInt2 = 0xA0002,MDLVertexFormatInt3 = 0xA0003,MDLVertexFormatInt4 = 0xA0004,MDLVertexFormatHalf = 0xB0001,MDLVertexFormatHalf2 = 0xB0002,MDLVertexFormatHalf3 = 0xB0003,MDLVertexFormatHalf4 = 0xB0004,MDLVertexFormatFloat = 0xC0001,MDLVertexFormatFloat2 = 0xC0002,MDLVertexFormatFloat3 = 0xC0003,MDLVertexFormatFloat4 = 0xC0004,MDLVertexFormatInt1010102Normalized = 0xA1004,MDLVertexFormatUInt1010102Normalized = 0x91004,};
typedef void *MIDINotifyBlock;
enum MPMediaGrouping {MPMediaGroupingTitle = 0x0,MPMediaGroupingAlbum = 0x1,MPMediaGroupingArtist = 0x2,MPMediaGroupingAlbumArtist = 0x3,MPMediaGroupingComposer = 0x4,MPMediaGroupingGenre = 0x5,MPMediaGroupingPlaylist = 0x6,MPMediaGroupingPodcastTitle = 0x7,};
enum MPSGraphOptions {MPSGraphOptionsNone = 0x0,MPSGraphOptionsSynchronizeResults = 0x1,MPSGraphOptionsVerbose = 0x2,MPSGraphOptionsDefault = 0x1,};
typedef _MPSPackedFloat3 MPSPackedFloat3;
enum MTLArgumentType {MTLArgumentTypeBuffer = 0x0,MTLArgumentTypeThreadgroupMemory = 0x1,MTLArgumentTypeTexture = 0x2,MTLArgumentTypeSampler = 0x3,MTLArgumentTypeImageblockData = 0x10,MTLArgumentTypeImageblock = 0x11,MTLArgumentTypeVisibleFunctionTable = 0x18,MTLArgumentTypePrimitiveAccelerationStructure = 0x19,MTLArgumentTypeInstanceAccelerationStructure = 0x1A,MTLArgumentTypeIntersectionFunctionTable = 0x1B,};
enum MTLCPUCacheMode {MTLCPUCacheModeDefaultCache = 0x0,MTLCPUCacheModeWriteCombined = 0x1,};
enum MTLCaptureError {MTLCaptureErrorNotSupported = 0x1,MTLCaptureErrorAlreadyCapturing = 0x2,MTLCaptureErrorInvalidDescriptor = 0x3,};
typedef MTLSamplePosition MTLCoordinate2D;
enum MTLDispatchType {MTLDispatchTypeSerial = 0x0,MTLDispatchTypeConcurrent = 0x1,};
enum MTLFunctionType {MTLFunctionTypeVertex = 0x1,MTLFunctionTypeFragment = 0x2,MTLFunctionTypeKernel = 0x3,MTLFunctionTypeVisible = 0x5,MTLFunctionTypeIntersection = 0x6,};
enum MTLLibraryError {MTLLibraryErrorUnsupported = 0x1,MTLLibraryErrorInternal = 0x2,MTLLibraryErrorCompileFailure = 0x3,MTLLibraryErrorCompileWarning = 0x4,MTLLibraryErrorFunctionNotFound = 0x5,MTLLibraryErrorFileNotFound = 0x6,};
typedef _MTLPackedFloat3 MTLPackedFloat3;
enum MTLStepFunction {MTLStepFunctionConstant = 0x0,MTLStepFunctionPerVertex = 0x1,MTLStepFunctionPerInstance = 0x2,MTLStepFunctionPerPatch = 0x3,MTLStepFunctionPerPatchControlPoint = 0x4,MTLStepFunctionThreadPositionInGridX = 0x5,MTLStepFunctionThreadPositionInGridY = 0x6,MTLStepFunctionThreadPositionInGridXIndexed = 0x7,MTLStepFunctionThreadPositionInGridYIndexed = 0x8,};
enum MTLVertexFormat {MTLVertexFormatInvalid = 0x0,MTLVertexFormatUChar2 = 0x1,MTLVertexFormatUChar3 = 0x2,MTLVertexFormatUChar4 = 0x3,MTLVertexFormatChar2 = 0x4,MTLVertexFormatChar3 = 0x5,MTLVertexFormatChar4 = 0x6,MTLVertexFormatUChar2Normalized = 0x7,MTLVertexFormatUChar3Normalized = 0x8,MTLVertexFormatUChar4Normalized = 0x9,MTLVertexFormatChar2Normalized = 0xA,MTLVertexFormatChar3Normalized = 0xB,MTLVertexFormatChar4Normalized = 0xC,MTLVertexFormatUShort2 = 0xD,MTLVertexFormatUShort3 = 0xE,MTLVertexFormatUShort4 = 0xF,MTLVertexFormatShort2 = 0x10,MTLVertexFormatShort3 = 0x11,MTLVertexFormatShort4 = 0x12,MTLVertexFormatUShort2Normalized = 0x13,MTLVertexFormatUShort3Normalized = 0x14,MTLVertexFormatUShort4Normalized = 0x15,MTLVertexFormatShort2Normalized = 0x16,MTLVertexFormatShort3Normalized = 0x17,MTLVertexFormatShort4Normalized = 0x18,MTLVertexFormatHalf2 = 0x19,MTLVertexFormatHalf3 = 0x1A,MTLVertexFormatHalf4 = 0x1B,MTLVertexFormatFloat = 0x1C,MTLVertexFormatFloat2 = 0x1D,MTLVertexFormatFloat3 = 0x1E,MTLVertexFormatFloat4 = 0x1F,MTLVertexFormatInt = 0x20,MTLVertexFormatInt2 = 0x21,MTLVertexFormatInt3 = 0x22,MTLVertexFormatInt4 = 0x23,MTLVertexFormatUInt = 0x24,MTLVertexFormatUInt2 = 0x25,MTLVertexFormatUInt3 = 0x26,MTLVertexFormatUInt4 = 0x27,MTLVertexFormatInt1010102Normalized = 0x28,MTLVertexFormatUInt1010102Normalized = 0x29,MTLVertexFormatUChar4Normalized_BGRA = 0x2A,MTLVertexFormatUChar = 0x2D,MTLVertexFormatChar = 0x2E,MTLVertexFormatUCharNormalized = 0x2F,MTLVertexFormatCharNormalized = 0x30,MTLVertexFormatUShort = 0x31,MTLVertexFormatShort = 0x32,MTLVertexFormatUShortNormalized = 0x33,MTLVertexFormatShortNormalized = 0x34,MTLVertexFormatHalf = 0x35,};
typedef AudioCodecMagicCookieInfo MagicCookieInfo;
enum NFCMiFareFamily {NFCMiFareUnknown = 0x1,NFCMiFareUltralight = 0x2,NFCMiFarePlus = 0x3,NFCMiFareDESFire = 0x4,};
enum NFCVASErrorCode {NFCVASErrorCodeSuccess = 0x9000,NFCVASErrorCodeDataNotFound = 0x6A83,NFCVASErrorCodeDataNotActivated = 0x6287,NFCVASErrorCodeWrongParameters = 0x6B00,NFCVASErrorCodeWrongLCField = 0x6700,NFCVASErrorCodeUserIntervention = 0x6984,NFCVASErrorCodeIncorrectData = 0x6A80,NFCVASErrorCodeUnsupportedApplicationVersion = 0x6340,VASErrorCodeSuccess = 0x9000,VASErrorCodeDataNotFound = 0x6A83,VASErrorCodeDataNotActivated = 0x6287,VASErrorCodeWrongParameters = 0x6B00,VASErrorCodeWrongLCField = 0x6700,VASErrorCodeUserIntervention = 0x6984,VASErrorCodeIncorrectData = 0x6A80,VASErrorCodeUnsupportedApplicationVersion = 0x6340,};
enum NSAttributeType {NSUndefinedAttributeType = 0x0,NSInteger16AttributeType = 0x64,NSInteger32AttributeType = 0xC8,NSInteger64AttributeType = 0x12C,NSDecimalAttributeType = 0x190,NSDoubleAttributeType = 0x1F4,NSFloatAttributeType = 0x258,NSStringAttributeType = 0x2BC,NSBooleanAttributeType = 0x320,NSDateAttributeType = 0x384,NSBinaryDataAttributeType = 0x3E8,NSUUIDAttributeType = 0x44C,NSURIAttributeType = 0x4B0,NSTransformableAttributeType = 0x708,NSObjectIDAttributeType = 0x7D0,};
enum NSLineBreakMode {NSLineBreakByWordWrapping = 0x0,NSLineBreakByCharWrapping = 0x1,NSLineBreakByClipping = 0x2,NSLineBreakByTruncatingHead = 0x3,NSLineBreakByTruncatingTail = 0x4,NSLineBreakByTruncatingMiddle = 0x5,};
enum NSRectAlignment {NSRectAlignmentNone = 0x0,NSRectAlignmentTop = 0x1,NSRectAlignmentTopLeading = 0x2,NSRectAlignmentLeading = 0x3,NSRectAlignmentBottomLeading = 0x4,NSRectAlignmentBottom = 0x5,NSRectAlignmentBottomTrailing = 0x6,NSRectAlignmentTrailing = 0x7,NSRectAlignmentTopTrailing = 0x8,};
struct NSSwappedDouble {unsigned long long v;};
enum NSTextAlignment {NSTextAlignmentLeft = 0x0,NSTextAlignmentCenter = 0x1,NSTextAlignmentRight = 0x2,NSTextAlignmentJustified = 0x3,NSTextAlignmentNatural = 0x4,};
typedef unsigned long long NXSwappedDouble;
enum OSLogStoreScope {OSLogStoreSystem = 0x0,OSLogStoreCurrentProcessIdentifier = 0x1,};
struct OpaqueFFTSetupD;
struct OpaqueJSContext;
typedef void *PhysicalAddress;
typedef  __SCBondStatus *SCBondStatusRef;
typedef void *SCNBindingBlock;
enum SCNRenderingAPI {SCNRenderingAPIMetal = 0x0,SCNRenderingAPIOpenGLES2 = 0x1,};
typedef  __SCNetworkSet *SCNetworkSetRef;
enum SKAttributeType {SKAttributeTypeNone = 0x0,SKAttributeTypeFloat = 0x1,SKAttributeTypeVectorFloat2 = 0x2,SKAttributeTypeVectorFloat3 = 0x3,SKAttributeTypeVectorFloat4 = 0x4,SKAttributeTypeHalfFloat = 0x5,SKAttributeTypeVectorHalfFloat2 = 0x6,SKAttributeTypeVectorHalfFloat3 = 0x7,SKAttributeTypeVectorHalfFloat4 = 0x8,};
enum SKDownloadState {SKDownloadStateWaiting = 0x0,SKDownloadStateActive = 0x1,SKDownloadStatePaused = 0x2,SKDownloadStateFinished = 0x3,SKDownloadStateFailed = 0x4,SKDownloadStateCancelled = 0x5,};
enum SLRequestMethod {SLRequestMethodGET = 0x0,SLRequestMethodPOST = 0x1,SLRequestMethodDELETE = 0x2,SLRequestMethodPUT = 0x3,};
enum SRWristLocation {SRWristLocationLeft = 0x0,SRWristLocationRight = 0x1,};
enum SSLAuthenticate {kNeverAuthenticate = 0x0,kAlwaysAuthenticate = 0x1,kTryAuthenticate = 0x2,};
enum SSLProtocolSide {kSSLServerSide = 0x0,kSSLClientSide = 0x1,};
enum SSLSessionState {kSSLIdle = 0x0,kSSLHandshake = 0x1,kSSLConnected = 0x2,kSSLClosed = 0x3,kSSLAborted = 0x4,};
struct SparseCGOptions {void (*reportError)( char *);int maxIterations;double atol;double rtol;void (*reportStatus)( char *);};
enum SparseControl_t {SparseDefaultControl = 0x0,};
enum SparseScaling_t {SparseScalingDefault = 0x0,SparseScalingUser = 0x1,SparseScalingEquilibriationInf = 0x2,};
enum UCharNameChoice {U_UNICODE_CHAR_NAME = 0x0,U_UNICODE_10_CHAR_NAME = 0x1,U_EXTENDED_CHAR_NAME = 0x2,U_CHAR_NAME_ALIAS = 0x3,U_CHAR_NAME_CHOICE_COUNT = 0x4,};
enum UEastAsianWidth {U_EA_NEUTRAL = 0x0,U_EA_AMBIGUOUS = 0x1,U_EA_HALFWIDTH = 0x2,U_EA_FULLWIDTH = 0x3,U_EA_NARROW = 0x4,U_EA_WIDE = 0x5,U_EA_COUNT = 0x6,};
typedef void *UIActionHandler;
enum UIDropOperation {UIDropOperationCancel = 0x0,UIDropOperationForbidden = 0x1,UIDropOperationCopy = 0x2,UIDropOperationMove = 0x3,};
enum UILineBreakMode {UILineBreakModeWordWrap = 0x0,UILineBreakModeCharacterWrap = 0x1,UILineBreakModeClip = 0x2,UILineBreakModeHeadTruncation = 0x3,UILineBreakModeTailTruncation = 0x4,UILineBreakModeMiddleTruncation = 0x5,};
enum UIReturnKeyType {UIReturnKeyDefault = 0x0,UIReturnKeyGo = 0x1,UIReturnKeyGoogle = 0x2,UIReturnKeyJoin = 0x3,UIReturnKeyNext = 0x4,UIReturnKeyRoute = 0x5,UIReturnKeySearch = 0x6,UIReturnKeySend = 0x7,UIReturnKeyYahoo = 0x8,UIReturnKeyDone = 0x9,UIReturnKeyEmergencyCall = 0xA,UIReturnKeyContinue = 0xB,};
enum UISearchBarIcon {UISearchBarIconSearch = 0x0,UISearchBarIconClear = 0x1,UISearchBarIconBookmark = 0x2,UISearchBarIconResultsList = 0x3,};
enum UITextAlignment {UITextAlignmentLeft = 0x0,UITextAlignmentCenter = 0x1,UITextAlignmentRight = 0x2,};
typedef UnsignedWide *UnsignedWidePtr;
enum XML_FeatureEnum {XML_FEATURE_END = 0x0,XML_FEATURE_UNICODE = 0x1,XML_FEATURE_UNICODE_WCHAR_T = 0x2,XML_FEATURE_DTD = 0x3,XML_FEATURE_CONTEXT_BYTES = 0x4,XML_FEATURE_MIN_SIZE = 0x5,XML_FEATURE_SIZEOF_XML_CHAR = 0x6,XML_FEATURE_SIZEOF_XML_LCHAR = 0x7,XML_FEATURE_NS = 0x8,XML_FEATURE_LARGE_SIZE = 0x9,XML_FEATURE_ATTR_INFO = 0xA,};
struct _DNSRecordRef_t;
struct _GLKMatrixStack;
union _TXTRecordRef_t {char PrivateData[16];char *ForceNaturalAlignment;};
struct _Unwind_Context;
struct __CFHTTPMessage;
struct __CFMessagePort;
struct __CFWriteStream;
struct __CTFramesetter;
struct __CTRunDelegate;
struct __SCPreferences;
typedef unsigned long long __darwin_size_t;
typedef long long __darwin_time_t;
typedef unsigned char __darwin_uuid_t[16];
typedef int __darwin_wint_t;
enum __ns_cert_types {cert_t_pkix = 0x1,cert_t_spki = 0x2,cert_t_pgp = 0x3,cert_t_url = 0xFD,cert_t_oid = 0xFE,};
struct __objc_property { char *name; char *attributes;};
struct _copyfile_state;
struct _htmlEntityDesc {unsigned int value; char *name; char *desc;};
struct _predicateFlags {unsigned int _evaluationBlocked : 1;unsigned int _reservedPredicateFlags : 31;};
struct _xmlRegExecCtxt;
typedef arm_amx_state arm_amx_state_t;
typedef arm_state_hdr arm_state_hdr_t;
typedef __darwin_arm_vfp_state arm_vfp_state_t;
typedef attribute_set attribute_set_t;
typedef attrreference attrreference_t;
struct dispatch_data_s;
typedef NSObject *dispatch_data_t;
struct dns_RP_record_t {char *mailbox;char *txtdname;};
enum dyld_image_mode {dyld_image_adding = 0x0,dyld_image_removing = 0x1,dyld_image_info_change = 0x2,};
struct dylib_reference {unsigned int isym : 24;unsigned int flags : 8;};
typedef void (*ftpDataCallback)(void *,  char *, int);
typedef void (*ftpListCallback)(void *,  char *,  char *,  char *,  char *, unsigned long long, int, int,  char *, int, int, int);
typedef gss_buffer_desc_struct gss_buffer_desc;
typedef ipc_info_name ipc_info_name_t;
typedef kauth_filesec *kauth_filesec_t;
typedef unsigned int mach_msg_bits_t;
typedef mach_port_qos mach_port_qos_t;
typedef mach_timespec mach_timespec_t;
typedef simd_float2x2 matrix_float2x2;
typedef simd_float2x3 matrix_float2x3;
typedef simd_float2x4 matrix_float2x4;
typedef simd_float3x2 matrix_float3x2;
typedef simd_float3x3 matrix_float3x3;
typedef simd_float3x4 matrix_float3x4;
typedef simd_float4x2 matrix_float4x2;
typedef simd_float4x3 matrix_float4x3;
typedef simd_float4x4 matrix_float4x4;
typedef mig_subsystem *mig_subsystem_t;
typedef NSObject *nw_connection_t;
enum nw_ip_version_t {nw_ip_version_any = 0x0,nw_ip_version_4 = 0x4,nw_ip_version_6 = 0x6,};
typedef NSObject *nw_parameters_t;
typedef NSObject *nw_txt_record_t;
typedef NSObject *nw_ws_request_t;
enum nw_ws_version_t {nw_ws_version_invalid = 0x0,nw_ws_version_13 = 0x1,};
typedef objc_property *objc_property_t;
typedef simd_packed_ushort16 packed_ushort16;
typedef simd_packed_ushort32 packed_ushort32;
struct port_obj_tentry {void *pos_value;int pos_type;};
typedef _printf_domain *printf_domain_t;
typedef rpc_subsystem *rpc_subsystem_t;
struct sparse_m_double;
struct sqlite3_context;
struct std____1____any {};
struct std____1____nat {};
struct std____1____two {char __lx[2];};
typedef std____1__ratio_1__100_ std____1__centi;
typedef std____1__ratio_1__1000000000000000_ std____1__femto;
typedef std____1__ratio_100__1_ std____1__hecto;
typedef std____1__ratio_1__1000000_ std____1__micro;
typedef std____1__ratio_1__1000_ std____1__milli;
typedef vDSP_DFT_SetupStructD *vDSP_DFT_SetupD;
struct vImageConverter;
typedef simd_ushort16 vector_ushort16;
typedef simd_ushort32 vector_ushort32;
typedef vm_read_entry vm_read_entry_t[256];
typedef vm_statistics *vm_statistics_t;
enum xmlCatalogAllow {XML_CATA_ALLOW_NONE = 0x0,XML_CATA_ALLOW_GLOBAL = 0x1,XML_CATA_ALLOW_DOCUMENT = 0x2,XML_CATA_ALLOW_ALL = 0x3,};
typedef _xmlChRangeGroup xmlChRangeGroup;
enum xmlCharEncoding {XML_CHAR_ENCODING_ERROR = 0xFFFFFFFF,XML_CHAR_ENCODING_NONE = 0x0,XML_CHAR_ENCODING_UTF8 = 0x1,XML_CHAR_ENCODING_UTF16LE = 0x2,XML_CHAR_ENCODING_UTF16BE = 0x3,XML_CHAR_ENCODING_UCS4LE = 0x4,XML_CHAR_ENCODING_UCS4BE = 0x5,XML_CHAR_ENCODING_EBCDIC = 0x6,XML_CHAR_ENCODING_UCS4_2143 = 0x7,XML_CHAR_ENCODING_UCS4_3412 = 0x8,XML_CHAR_ENCODING_UCS2 = 0x9,XML_CHAR_ENCODING_8859_1 = 0xA,XML_CHAR_ENCODING_8859_2 = 0xB,XML_CHAR_ENCODING_8859_3 = 0xC,XML_CHAR_ENCODING_8859_4 = 0xD,XML_CHAR_ENCODING_8859_5 = 0xE,XML_CHAR_ENCODING_8859_6 = 0xF,XML_CHAR_ENCODING_8859_7 = 0x10,XML_CHAR_ENCODING_8859_8 = 0x11,XML_CHAR_ENCODING_8859_9 = 0x12,XML_CHAR_ENCODING_2022_JP = 0x13,XML_CHAR_ENCODING_SHIFT_JIS = 0x14,XML_CHAR_ENCODING_EUC_JP = 0x15,XML_CHAR_ENCODING_ASCII = 0x16,};
typedef struct _xmlHashTable xmlElementTable;
enum xmlModuleOption {XML_MODULE_LAZY = 0x1,XML_MODULE_LOCAL = 0x2,};
typedef _xmlOutputBuffer xmlOutputBuffer;
enum xmlParserErrors {XML_ERR_OK = 0x0,XML_ERR_INTERNAL_ERROR = 0x1,XML_ERR_NO_MEMORY = 0x2,XML_ERR_DOCUMENT_START = 0x3,XML_ERR_DOCUMENT_EMPTY = 0x4,XML_ERR_DOCUMENT_END = 0x5,XML_ERR_INVALID_HEX_CHARREF = 0x6,XML_ERR_INVALID_DEC_CHARREF = 0x7,XML_ERR_INVALID_CHARREF = 0x8,XML_ERR_INVALID_CHAR = 0x9,XML_ERR_CHARREF_AT_EOF = 0xA,XML_ERR_CHARREF_IN_PROLOG = 0xB,XML_ERR_CHARREF_IN_EPILOG = 0xC,XML_ERR_CHARREF_IN_DTD = 0xD,XML_ERR_ENTITYREF_AT_EOF = 0xE,XML_ERR_ENTITYREF_IN_PROLOG = 0xF,XML_ERR_ENTITYREF_IN_EPILOG = 0x10,XML_ERR_ENTITYREF_IN_DTD = 0x11,XML_ERR_PEREF_AT_EOF = 0x12,XML_ERR_PEREF_IN_PROLOG = 0x13,XML_ERR_PEREF_IN_EPILOG = 0x14,XML_ERR_PEREF_IN_INT_SUBSET = 0x15,XML_ERR_ENTITYREF_NO_NAME = 0x16,XML_ERR_ENTITYREF_SEMICOL_MISSING = 0x17,XML_ERR_PEREF_NO_NAME = 0x18,XML_ERR_PEREF_SEMICOL_MISSING = 0x19,XML_ERR_UNDECLARED_ENTITY = 0x1A,XML_WAR_UNDECLARED_ENTITY = 0x1B,XML_ERR_UNPARSED_ENTITY = 0x1C,XML_ERR_ENTITY_IS_EXTERNAL = 0x1D,XML_ERR_ENTITY_IS_PARAMETER = 0x1E,XML_ERR_UNKNOWN_ENCODING = 0x1F,XML_ERR_UNSUPPORTED_ENCODING = 0x20,XML_ERR_STRING_NOT_STARTED = 0x21,XML_ERR_STRING_NOT_CLOSED = 0x22,XML_ERR_NS_DECL_ERROR = 0x23,XML_ERR_ENTITY_NOT_STARTED = 0x24,XML_ERR_ENTITY_NOT_FINISHED = 0x25,XML_ERR_LT_IN_ATTRIBUTE = 0x26,XML_ERR_ATTRIBUTE_NOT_STARTED = 0x27,XML_ERR_ATTRIBUTE_NOT_FINISHED = 0x28,XML_ERR_ATTRIBUTE_WITHOUT_VALUE = 0x29,XML_ERR_ATTRIBUTE_REDEFINED = 0x2A,XML_ERR_LITERAL_NOT_STARTED = 0x2B,XML_ERR_LITERAL_NOT_FINISHED = 0x2C,XML_ERR_COMMENT_NOT_FINISHED = 0x2D,XML_ERR_PI_NOT_STARTED = 0x2E,XML_ERR_PI_NOT_FINISHED = 0x2F,XML_ERR_NOTATION_NOT_STARTED = 0x30,XML_ERR_NOTATION_NOT_FINISHED = 0x31,XML_ERR_ATTLIST_NOT_STARTED = 0x32,XML_ERR_ATTLIST_NOT_FINISHED = 0x33,XML_ERR_MIXED_NOT_STARTED = 0x34,XML_ERR_MIXED_NOT_FINISHED = 0x35,XML_ERR_ELEMCONTENT_NOT_STARTED = 0x36,XML_ERR_ELEMCONTENT_NOT_FINISHED = 0x37,XML_ERR_XMLDECL_NOT_STARTED = 0x38,XML_ERR_XMLDECL_NOT_FINISHED = 0x39,XML_ERR_CONDSEC_NOT_STARTED = 0x3A,XML_ERR_CONDSEC_NOT_FINISHED = 0x3B,XML_ERR_EXT_SUBSET_NOT_FINISHED = 0x3C,XML_ERR_DOCTYPE_NOT_FINISHED = 0x3D,XML_ERR_MISPLACED_CDATA_END = 0x3E,XML_ERR_CDATA_NOT_FINISHED = 0x3F,XML_ERR_RESERVED_XML_NAME = 0x40,XML_ERR_SPACE_REQUIRED = 0x41,XML_ERR_SEPARATOR_REQUIRED = 0x42,XML_ERR_NMTOKEN_REQUIRED = 0x43,XML_ERR_NAME_REQUIRED = 0x44,XML_ERR_PCDATA_REQUIRED = 0x45,XML_ERR_URI_REQUIRED = 0x46,XML_ERR_PUBID_REQUIRED = 0x47,XML_ERR_LT_REQUIRED = 0x48,XML_ERR_GT_REQUIRED = 0x49,XML_ERR_LTSLASH_REQUIRED = 0x4A,XML_ERR_EQUAL_REQUIRED = 0x4B,XML_ERR_TAG_NAME_MISMATCH = 0x4C,XML_ERR_TAG_NOT_FINISHED = 0x4D,XML_ERR_STANDALONE_VALUE = 0x4E,XML_ERR_ENCODING_NAME = 0x4F,XML_ERR_HYPHEN_IN_COMMENT = 0x50,XML_ERR_INVALID_ENCODING = 0x51,XML_ERR_EXT_ENTITY_STANDALONE = 0x52,XML_ERR_CONDSEC_INVALID = 0x53,XML_ERR_VALUE_REQUIRED = 0x54,XML_ERR_NOT_WELL_BALANCED = 0x55,XML_ERR_EXTRA_CONTENT = 0x56,XML_ERR_ENTITY_CHAR_ERROR = 0x57,XML_ERR_ENTITY_PE_INTERNAL = 0x58,XML_ERR_ENTITY_LOOP = 0x59,XML_ERR_ENTITY_BOUNDARY = 0x5A,XML_ERR_INVALID_URI = 0x5B,XML_ERR_URI_FRAGMENT = 0x5C,XML_WAR_CATALOG_PI = 0x5D,XML_ERR_NO_DTD = 0x5E,XML_ERR_CONDSEC_INVALID_KEYWORD = 0x5F,XML_ERR_VERSION_MISSING = 0x60,XML_WAR_UNKNOWN_VERSION = 0x61,XML_WAR_LANG_VALUE = 0x62,XML_WAR_NS_URI = 0x63,XML_WAR_NS_URI_RELATIVE = 0x64,XML_ERR_MISSING_ENCODING = 0x65,XML_WAR_SPACE_VALUE = 0x66,XML_ERR_NOT_STANDALONE = 0x67,XML_ERR_ENTITY_PROCESSING = 0x68,XML_ERR_NOTATION_PROCESSING = 0x69,XML_WAR_NS_COLUMN = 0x6A,XML_WAR_ENTITY_REDEFINED = 0x6B,XML_ERR_UNKNOWN_VERSION = 0x6C,XML_ERR_VERSION_MISMATCH = 0x6D,XML_ERR_NAME_TOO_LONG = 0x6E,XML_ERR_USER_STOP = 0x6F,XML_NS_ERR_XML_NAMESPACE = 0xC8,XML_NS_ERR_UNDEFINED_NAMESPACE = 0xC9,XML_NS_ERR_QNAME = 0xCA,XML_NS_ERR_ATTRIBUTE_REDEFINED = 0xCB,XML_NS_ERR_EMPTY = 0xCC,XML_NS_ERR_COLON = 0xCD,XML_DTD_ATTRIBUTE_DEFAULT = 0x1F4,XML_DTD_ATTRIBUTE_REDEFINED = 0x1F5,XML_DTD_ATTRIBUTE_VALUE = 0x1F6,XML_DTD_CONTENT_ERROR = 0x1F7,XML_DTD_CONTENT_MODEL = 0x1F8,XML_DTD_CONTENT_NOT_DETERMINIST = 0x1F9,XML_DTD_DIFFERENT_PREFIX = 0x1FA,XML_DTD_ELEM_DEFAULT_NAMESPACE = 0x1FB,XML_DTD_ELEM_NAMESPACE = 0x1FC,XML_DTD_ELEM_REDEFINED = 0x1FD,XML_DTD_EMPTY_NOTATION = 0x1FE,XML_DTD_ENTITY_TYPE = 0x1FF,XML_DTD_ID_FIXED = 0x200,XML_DTD_ID_REDEFINED = 0x201,XML_DTD_ID_SUBSET = 0x202,XML_DTD_INVALID_CHILD = 0x203,XML_DTD_INVALID_DEFAULT = 0x204,XML_DTD_LOAD_ERROR = 0x205,XML_DTD_MISSING_ATTRIBUTE = 0x206,XML_DTD_MIXED_CORRUPT = 0x207,XML_DTD_MULTIPLE_ID = 0x208,XML_DTD_NO_DOC = 0x209,XML_DTD_NO_DTD = 0x20A,XML_DTD_NO_ELEM_NAME = 0x20B,XML_DTD_NO_PREFIX = 0x20C,XML_DTD_NO_ROOT = 0x20D,XML_DTD_NOTATION_REDEFINED = 0x20E,XML_DTD_NOTATION_VALUE = 0x20F,XML_DTD_NOT_EMPTY = 0x210,XML_DTD_NOT_PCDATA = 0x211,XML_DTD_NOT_STANDALONE = 0x212,XML_DTD_ROOT_NAME = 0x213,XML_DTD_STANDALONE_WHITE_SPACE = 0x214,XML_DTD_UNKNOWN_ATTRIBUTE = 0x215,XML_DTD_UNKNOWN_ELEM = 0x216,XML_DTD_UNKNOWN_ENTITY = 0x217,XML_DTD_UNKNOWN_ID = 0x218,XML_DTD_UNKNOWN_NOTATION = 0x219,XML_DTD_STANDALONE_DEFAULTED = 0x21A,XML_DTD_XMLID_VALUE = 0x21B,XML_DTD_XMLID_TYPE = 0x21C,XML_DTD_DUP_TOKEN = 0x21D,XML_HTML_STRUCURE_ERROR = 0x320,XML_HTML_UNKNOWN_TAG = 0x321,XML_RNGP_ANYNAME_ATTR_ANCESTOR = 0x3E8,XML_RNGP_ATTR_CONFLICT = 0x3E9,XML_RNGP_ATTRIBUTE_CHILDREN = 0x3EA,XML_RNGP_ATTRIBUTE_CONTENT = 0x3EB,XML_RNGP_ATTRIBUTE_EMPTY = 0x3EC,XML_RNGP_ATTRIBUTE_NOOP = 0x3ED,XML_RNGP_CHOICE_CONTENT = 0x3EE,XML_RNGP_CHOICE_EMPTY = 0x3EF,XML_RNGP_CREATE_FAILURE = 0x3F0,XML_RNGP_DATA_CONTENT = 0x3F1,XML_RNGP_DEF_CHOICE_AND_INTERLEAVE = 0x3F2,XML_RNGP_DEFINE_CREATE_FAILED = 0x3F3,XML_RNGP_DEFINE_EMPTY = 0x3F4,XML_RNGP_DEFINE_MISSING = 0x3F5,XML_RNGP_DEFINE_NAME_MISSING = 0x3F6,XML_RNGP_ELEM_CONTENT_EMPTY = 0x3F7,XML_RNGP_ELEM_CONTENT_ERROR = 0x3F8,XML_RNGP_ELEMENT_EMPTY = 0x3F9,XML_RNGP_ELEMENT_CONTENT = 0x3FA,XML_RNGP_ELEMENT_NAME = 0x3FB,XML_RNGP_ELEMENT_NO_CONTENT = 0x3FC,XML_RNGP_ELEM_TEXT_CONFLICT = 0x3FD,XML_RNGP_EMPTY = 0x3FE,XML_RNGP_EMPTY_CONSTRUCT = 0x3FF,XML_RNGP_EMPTY_CONTENT = 0x400,XML_RNGP_EMPTY_NOT_EMPTY = 0x401,XML_RNGP_ERROR_TYPE_LIB = 0x402,XML_RNGP_EXCEPT_EMPTY = 0x403,XML_RNGP_EXCEPT_MISSING = 0x404,XML_RNGP_EXCEPT_MULTIPLE = 0x405,XML_RNGP_EXCEPT_NO_CONTENT = 0x406,XML_RNGP_EXTERNALREF_EMTPY = 0x407,XML_RNGP_EXTERNAL_REF_FAILURE = 0x408,XML_RNGP_EXTERNALREF_RECURSE = 0x409,XML_RNGP_FORBIDDEN_ATTRIBUTE = 0x40A,XML_RNGP_FOREIGN_ELEMENT = 0x40B,XML_RNGP_GRAMMAR_CONTENT = 0x40C,XML_RNGP_GRAMMAR_EMPTY = 0x40D,XML_RNGP_GRAMMAR_MISSING = 0x40E,XML_RNGP_GRAMMAR_NO_START = 0x40F,XML_RNGP_GROUP_ATTR_CONFLICT = 0x410,XML_RNGP_HREF_ERROR = 0x411,XML_RNGP_INCLUDE_EMPTY = 0x412,XML_RNGP_INCLUDE_FAILURE = 0x413,XML_RNGP_INCLUDE_RECURSE = 0x414,XML_RNGP_INTERLEAVE_ADD = 0x415,XML_RNGP_INTERLEAVE_CREATE_FAILED = 0x416,XML_RNGP_INTERLEAVE_EMPTY = 0x417,XML_RNGP_INTERLEAVE_NO_CONTENT = 0x418,XML_RNGP_INVALID_DEFINE_NAME = 0x419,XML_RNGP_INVALID_URI = 0x41A,XML_RNGP_INVALID_VALUE = 0x41B,XML_RNGP_MISSING_HREF = 0x41C,XML_RNGP_NAME_MISSING = 0x41D,XML_RNGP_NEED_COMBINE = 0x41E,XML_RNGP_NOTALLOWED_NOT_EMPTY = 0x41F,XML_RNGP_NSNAME_ATTR_ANCESTOR = 0x420,XML_RNGP_NSNAME_NO_NS = 0x421,XML_RNGP_PARAM_FORBIDDEN = 0x422,XML_RNGP_PARAM_NAME_MISSING = 0x423,XML_RNGP_PARENTREF_CREATE_FAILED = 0x424,XML_RNGP_PARENTREF_NAME_INVALID = 0x425,XML_RNGP_PARENTREF_NO_NAME = 0x426,XML_RNGP_PARENTREF_NO_PARENT = 0x427,XML_RNGP_PARENTREF_NOT_EMPTY = 0x428,XML_RNGP_PARSE_ERROR = 0x429,XML_RNGP_PAT_ANYNAME_EXCEPT_ANYNAME = 0x42A,XML_RNGP_PAT_ATTR_ATTR = 0x42B,XML_RNGP_PAT_ATTR_ELEM = 0x42C,XML_RNGP_PAT_DATA_EXCEPT_ATTR = 0x42D,XML_RNGP_PAT_DATA_EXCEPT_ELEM = 0x42E,XML_RNGP_PAT_DATA_EXCEPT_EMPTY = 0x42F,XML_RNGP_PAT_DATA_EXCEPT_GROUP = 0x430,XML_RNGP_PAT_DATA_EXCEPT_INTERLEAVE = 0x431,XML_RNGP_PAT_DATA_EXCEPT_LIST = 0x432,XML_RNGP_PAT_DATA_EXCEPT_ONEMORE = 0x433,XML_RNGP_PAT_DATA_EXCEPT_REF = 0x434,XML_RNGP_PAT_DATA_EXCEPT_TEXT = 0x435,XML_RNGP_PAT_LIST_ATTR = 0x436,XML_RNGP_PAT_LIST_ELEM = 0x437,XML_RNGP_PAT_LIST_INTERLEAVE = 0x438,XML_RNGP_PAT_LIST_LIST = 0x439,XML_RNGP_PAT_LIST_REF = 0x43A,XML_RNGP_PAT_LIST_TEXT = 0x43B,XML_RNGP_PAT_NSNAME_EXCEPT_ANYNAME = 0x43C,XML_RNGP_PAT_NSNAME_EXCEPT_NSNAME = 0x43D,XML_RNGP_PAT_ONEMORE_GROUP_ATTR = 0x43E,XML_RNGP_PAT_ONEMORE_INTERLEAVE_ATTR = 0x43F,XML_RNGP_PAT_START_ATTR = 0x440,XML_RNGP_PAT_START_DATA = 0x441,XML_RNGP_PAT_START_EMPTY = 0x442,XML_RNGP_PAT_START_GROUP = 0x443,XML_RNGP_PAT_START_INTERLEAVE = 0x444,XML_RNGP_PAT_START_LIST = 0x445,XML_RNGP_PAT_START_ONEMORE = 0x446,XML_RNGP_PAT_START_TEXT = 0x447,XML_RNGP_PAT_START_VALUE = 0x448,XML_RNGP_PREFIX_UNDEFINED = 0x449,XML_RNGP_REF_CREATE_FAILED = 0x44A,XML_RNGP_REF_CYCLE = 0x44B,XML_RNGP_REF_NAME_INVALID = 0x44C,XML_RNGP_REF_NO_DEF = 0x44D,XML_RNGP_REF_NO_NAME = 0x44E,XML_RNGP_REF_NOT_EMPTY = 0x44F,XML_RNGP_START_CHOICE_AND_INTERLEAVE = 0x450,XML_RNGP_START_CONTENT = 0x451,XML_RNGP_START_EMPTY = 0x452,XML_RNGP_START_MISSING = 0x453,XML_RNGP_TEXT_EXPECTED = 0x454,XML_RNGP_TEXT_HAS_CHILD = 0x455,XML_RNGP_TYPE_MISSING = 0x456,XML_RNGP_TYPE_NOT_FOUND = 0x457,XML_RNGP_TYPE_VALUE = 0x458,XML_RNGP_UNKNOWN_ATTRIBUTE = 0x459,XML_RNGP_UNKNOWN_COMBINE = 0x45A,XML_RNGP_UNKNOWN_CONSTRUCT = 0x45B,XML_RNGP_UNKNOWN_TYPE_LIB = 0x45C,XML_RNGP_URI_FRAGMENT = 0x45D,XML_RNGP_URI_NOT_ABSOLUTE = 0x45E,XML_RNGP_VALUE_EMPTY = 0x45F,XML_RNGP_VALUE_NO_CONTENT = 0x460,XML_RNGP_XMLNS_NAME = 0x461,XML_RNGP_XML_NS = 0x462,XML_XPATH_EXPRESSION_OK = 0x4B0,XML_XPATH_NUMBER_ERROR = 0x4B1,XML_XPATH_UNFINISHED_LITERAL_ERROR = 0x4B2,XML_XPATH_START_LITERAL_ERROR = 0x4B3,XML_XPATH_VARIABLE_REF_ERROR = 0x4B4,XML_XPATH_UNDEF_VARIABLE_ERROR = 0x4B5,XML_XPATH_INVALID_PREDICATE_ERROR = 0x4B6,XML_XPATH_EXPR_ERROR = 0x4B7,XML_XPATH_UNCLOSED_ERROR = 0x4B8,XML_XPATH_UNKNOWN_FUNC_ERROR = 0x4B9,XML_XPATH_INVALID_OPERAND = 0x4BA,XML_XPATH_INVALID_TYPE = 0x4BB,XML_XPATH_INVALID_ARITY = 0x4BC,XML_XPATH_INVALID_CTXT_SIZE = 0x4BD,XML_XPATH_INVALID_CTXT_POSITION = 0x4BE,XML_XPATH_MEMORY_ERROR = 0x4BF,XML_XPTR_SYNTAX_ERROR = 0x4C0,XML_XPTR_RESOURCE_ERROR = 0x4C1,XML_XPTR_SUB_RESOURCE_ERROR = 0x4C2,XML_XPATH_UNDEF_PREFIX_ERROR = 0x4C3,XML_XPATH_ENCODING_ERROR = 0x4C4,XML_XPATH_INVALID_CHAR_ERROR = 0x4C5,XML_TREE_INVALID_HEX = 0x514,XML_TREE_INVALID_DEC = 0x515,XML_TREE_UNTERMINATED_ENTITY = 0x516,XML_TREE_NOT_UTF8 = 0x517,XML_SAVE_NOT_UTF8 = 0x578,XML_SAVE_CHAR_INVALID = 0x579,XML_SAVE_NO_DOCTYPE = 0x57A,XML_SAVE_UNKNOWN_ENCODING = 0x57B,XML_REGEXP_COMPILE_ERROR = 0x5AA,XML_IO_UNKNOWN = 0x5DC,XML_IO_EACCES = 0x5DD,XML_IO_EAGAIN = 0x5DE,XML_IO_EBADF = 0x5DF,XML_IO_EBADMSG = 0x5E0,XML_IO_EBUSY = 0x5E1,XML_IO_ECANCELED = 0x5E2,XML_IO_ECHILD = 0x5E3,XML_IO_EDEADLK = 0x5E4,XML_IO_EDOM = 0x5E5,XML_IO_EEXIST = 0x5E6,XML_IO_EFAULT = 0x5E7,XML_IO_EFBIG = 0x5E8,XML_IO_EINPROGRESS = 0x5E9,XML_IO_EINTR = 0x5EA,XML_IO_EINVAL = 0x5EB,XML_IO_EIO = 0x5EC,XML_IO_EISDIR = 0x5ED,XML_IO_EMFILE = 0x5EE,XML_IO_EMLINK = 0x5EF,XML_IO_EMSGSIZE = 0x5F0,XML_IO_ENAMETOOLONG = 0x5F1,XML_IO_ENFILE = 0x5F2,XML_IO_ENODEV = 0x5F3,XML_IO_ENOENT = 0x5F4,XML_IO_ENOEXEC = 0x5F5,XML_IO_ENOLCK = 0x5F6,XML_IO_ENOMEM = 0x5F7,XML_IO_ENOSPC = 0x5F8,XML_IO_ENOSYS = 0x5F9,XML_IO_ENOTDIR = 0x5FA,XML_IO_ENOTEMPTY = 0x5FB,XML_IO_ENOTSUP = 0x5FC,XML_IO_ENOTTY = 0x5FD,XML_IO_ENXIO = 0x5FE,XML_IO_EPERM = 0x5FF,XML_IO_EPIPE = 0x600,XML_IO_ERANGE = 0x601,XML_IO_EROFS = 0x602,XML_IO_ESPIPE = 0x603,XML_IO_ESRCH = 0x604,XML_IO_ETIMEDOUT = 0x605,XML_IO_EXDEV = 0x606,XML_IO_NETWORK_ATTEMPT = 0x607,XML_IO_ENCODER = 0x608,XML_IO_FLUSH = 0x609,XML_IO_WRITE = 0x60A,XML_IO_NO_INPUT = 0x60B,XML_IO_BUFFER_FULL = 0x60C,XML_IO_LOAD_ERROR = 0x60D,XML_IO_ENOTSOCK = 0x60E,XML_IO_EISCONN = 0x60F,XML_IO_ECONNREFUSED = 0x610,XML_IO_ENETUNREACH = 0x611,XML_IO_EADDRINUSE = 0x612,XML_IO_EALREADY = 0x613,XML_IO_EAFNOSUPPORT = 0x614,XML_XINCLUDE_RECURSION = 0x640,XML_XINCLUDE_PARSE_VALUE = 0x641,XML_XINCLUDE_ENTITY_DEF_MISMATCH = 0x642,XML_XINCLUDE_NO_HREF = 0x643,XML_XINCLUDE_NO_FALLBACK = 0x644,XML_XINCLUDE_HREF_URI = 0x645,XML_XINCLUDE_TEXT_FRAGMENT = 0x646,XML_XINCLUDE_TEXT_DOCUMENT = 0x647,XML_XINCLUDE_INVALID_CHAR = 0x648,XML_XINCLUDE_BUILD_FAILED = 0x649,XML_XINCLUDE_UNKNOWN_ENCODING = 0x64A,XML_XINCLUDE_MULTIPLE_ROOT = 0x64B,XML_XINCLUDE_XPTR_FAILED = 0x64C,XML_XINCLUDE_XPTR_RESULT = 0x64D,XML_XINCLUDE_INCLUDE_IN_INCLUDE = 0x64E,XML_XINCLUDE_FALLBACKS_IN_INCLUDE = 0x64F,XML_XINCLUDE_FALLBACK_NOT_IN_INCLUDE = 0x650,XML_XINCLUDE_DEPRECATED_NS = 0x651,XML_XINCLUDE_FRAGMENT_ID = 0x652,XML_CATALOG_MISSING_ATTR = 0x672,XML_CATALOG_ENTRY_BROKEN = 0x673,XML_CATALOG_PREFER_VALUE = 0x674,XML_CATALOG_NOT_CATALOG = 0x675,XML_CATALOG_RECURSION = 0x676,XML_SCHEMAP_PREFIX_UNDEFINED = 0x6A4,XML_SCHEMAP_ATTRFORMDEFAULT_VALUE = 0x6A5,XML_SCHEMAP_ATTRGRP_NONAME_NOREF = 0x6A6,XML_SCHEMAP_ATTR_NONAME_NOREF = 0x6A7,XML_SCHEMAP_COMPLEXTYPE_NONAME_NOREF = 0x6A8,XML_SCHEMAP_ELEMFORMDEFAULT_VALUE = 0x6A9,XML_SCHEMAP_ELEM_NONAME_NOREF = 0x6AA,XML_SCHEMAP_EXTENSION_NO_BASE = 0x6AB,XML_SCHEMAP_FACET_NO_VALUE = 0x6AC,XML_SCHEMAP_FAILED_BUILD_IMPORT = 0x6AD,XML_SCHEMAP_GROUP_NONAME_NOREF = 0x6AE,XML_SCHEMAP_IMPORT_NAMESPACE_NOT_URI = 0x6AF,XML_SCHEMAP_IMPORT_REDEFINE_NSNAME = 0x6B0,XML_SCHEMAP_IMPORT_SCHEMA_NOT_URI = 0x6B1,XML_SCHEMAP_INVALID_BOOLEAN = 0x6B2,XML_SCHEMAP_INVALID_ENUM = 0x6B3,XML_SCHEMAP_INVALID_FACET = 0x6B4,XML_SCHEMAP_INVALID_FACET_VALUE = 0x6B5,XML_SCHEMAP_INVALID_MAXOCCURS = 0x6B6,XML_SCHEMAP_INVALID_MINOCCURS = 0x6B7,XML_SCHEMAP_INVALID_REF_AND_SUBTYPE = 0x6B8,XML_SCHEMAP_INVALID_WHITE_SPACE = 0x6B9,XML_SCHEMAP_NOATTR_NOREF = 0x6BA,XML_SCHEMAP_NOTATION_NO_NAME = 0x6BB,XML_SCHEMAP_NOTYPE_NOREF = 0x6BC,XML_SCHEMAP_REF_AND_SUBTYPE = 0x6BD,XML_SCHEMAP_RESTRICTION_NONAME_NOREF = 0x6BE,XML_SCHEMAP_SIMPLETYPE_NONAME = 0x6BF,XML_SCHEMAP_TYPE_AND_SUBTYPE = 0x6C0,XML_SCHEMAP_UNKNOWN_ALL_CHILD = 0x6C1,XML_SCHEMAP_UNKNOWN_ANYATTRIBUTE_CHILD = 0x6C2,XML_SCHEMAP_UNKNOWN_ATTR_CHILD = 0x6C3,XML_SCHEMAP_UNKNOWN_ATTRGRP_CHILD = 0x6C4,XML_SCHEMAP_UNKNOWN_ATTRIBUTE_GROUP = 0x6C5,XML_SCHEMAP_UNKNOWN_BASE_TYPE = 0x6C6,XML_SCHEMAP_UNKNOWN_CHOICE_CHILD = 0x6C7,XML_SCHEMAP_UNKNOWN_COMPLEXCONTENT_CHILD = 0x6C8,XML_SCHEMAP_UNKNOWN_COMPLEXTYPE_CHILD = 0x6C9,XML_SCHEMAP_UNKNOWN_ELEM_CHILD = 0x6CA,XML_SCHEMAP_UNKNOWN_EXTENSION_CHILD = 0x6CB,XML_SCHEMAP_UNKNOWN_FACET_CHILD = 0x6CC,XML_SCHEMAP_UNKNOWN_FACET_TYPE = 0x6CD,XML_SCHEMAP_UNKNOWN_GROUP_CHILD = 0x6CE,XML_SCHEMAP_UNKNOWN_IMPORT_CHILD = 0x6CF,XML_SCHEMAP_UNKNOWN_LIST_CHILD = 0x6D0,XML_SCHEMAP_UNKNOWN_NOTATION_CHILD = 0x6D1,XML_SCHEMAP_UNKNOWN_PROCESSCONTENT_CHILD = 0x6D2,XML_SCHEMAP_UNKNOWN_REF = 0x6D3,XML_SCHEMAP_UNKNOWN_RESTRICTION_CHILD = 0x6D4,XML_SCHEMAP_UNKNOWN_SCHEMAS_CHILD = 0x6D5,XML_SCHEMAP_UNKNOWN_SEQUENCE_CHILD = 0x6D6,XML_SCHEMAP_UNKNOWN_SIMPLECONTENT_CHILD = 0x6D7,XML_SCHEMAP_UNKNOWN_SIMPLETYPE_CHILD = 0x6D8,XML_SCHEMAP_UNKNOWN_TYPE = 0x6D9,XML_SCHEMAP_UNKNOWN_UNION_CHILD = 0x6DA,XML_SCHEMAP_ELEM_DEFAULT_FIXED = 0x6DB,XML_SCHEMAP_REGEXP_INVALID = 0x6DC,XML_SCHEMAP_FAILED_LOAD = 0x6DD,XML_SCHEMAP_NOTHING_TO_PARSE = 0x6DE,XML_SCHEMAP_NOROOT = 0x6DF,XML_SCHEMAP_REDEFINED_GROUP = 0x6E0,XML_SCHEMAP_REDEFINED_TYPE = 0x6E1,XML_SCHEMAP_REDEFINED_ELEMENT = 0x6E2,XML_SCHEMAP_REDEFINED_ATTRGROUP = 0x6E3,XML_SCHEMAP_REDEFINED_ATTR = 0x6E4,XML_SCHEMAP_REDEFINED_NOTATION = 0x6E5,XML_SCHEMAP_FAILED_PARSE = 0x6E6,XML_SCHEMAP_UNKNOWN_PREFIX = 0x6E7,XML_SCHEMAP_DEF_AND_PREFIX = 0x6E8,XML_SCHEMAP_UNKNOWN_INCLUDE_CHILD = 0x6E9,XML_SCHEMAP_INCLUDE_SCHEMA_NOT_URI = 0x6EA,XML_SCHEMAP_INCLUDE_SCHEMA_NO_URI = 0x6EB,XML_SCHEMAP_NOT_SCHEMA = 0x6EC,XML_SCHEMAP_UNKNOWN_MEMBER_TYPE = 0x6ED,XML_SCHEMAP_INVALID_ATTR_USE = 0x6EE,XML_SCHEMAP_RECURSIVE = 0x6EF,XML_SCHEMAP_SUPERNUMEROUS_LIST_ITEM_TYPE = 0x6F0,XML_SCHEMAP_INVALID_ATTR_COMBINATION = 0x6F1,XML_SCHEMAP_INVALID_ATTR_INLINE_COMBINATION = 0x6F2,XML_SCHEMAP_MISSING_SIMPLETYPE_CHILD = 0x6F3,XML_SCHEMAP_INVALID_ATTR_NAME = 0x6F4,XML_SCHEMAP_REF_AND_CONTENT = 0x6F5,XML_SCHEMAP_CT_PROPS_CORRECT_1 = 0x6F6,XML_SCHEMAP_CT_PROPS_CORRECT_2 = 0x6F7,XML_SCHEMAP_CT_PROPS_CORRECT_3 = 0x6F8,XML_SCHEMAP_CT_PROPS_CORRECT_4 = 0x6F9,XML_SCHEMAP_CT_PROPS_CORRECT_5 = 0x6FA,XML_SCHEMAP_DERIVATION_OK_RESTRICTION_1 = 0x6FB,XML_SCHEMAP_DERIVATION_OK_RESTRICTION_2_1_1 = 0x6FC,XML_SCHEMAP_DERIVATION_OK_RESTRICTION_2_1_2 = 0x6FD,XML_SCHEMAP_DERIVATION_OK_RESTRICTION_2_2 = 0x6FE,XML_SCHEMAP_DERIVATION_OK_RESTRICTION_3 = 0x6FF,XML_SCHEMAP_WILDCARD_INVALID_NS_MEMBER = 0x700,XML_SCHEMAP_INTERSECTION_NOT_EXPRESSIBLE = 0x701,XML_SCHEMAP_UNION_NOT_EXPRESSIBLE = 0x702,XML_SCHEMAP_SRC_IMPORT_3_1 = 0x703,XML_SCHEMAP_SRC_IMPORT_3_2 = 0x704,XML_SCHEMAP_DERIVATION_OK_RESTRICTION_4_1 = 0x705,XML_SCHEMAP_DERIVATION_OK_RESTRICTION_4_2 = 0x706,XML_SCHEMAP_DERIVATION_OK_RESTRICTION_4_3 = 0x707,XML_SCHEMAP_COS_CT_EXTENDS_1_3 = 0x708,XML_SCHEMAV_NOROOT = 0x709,XML_SCHEMAV_UNDECLAREDELEM = 0x70A,XML_SCHEMAV_NOTTOPLEVEL = 0x70B,XML_SCHEMAV_MISSING = 0x70C,XML_SCHEMAV_WRONGELEM = 0x70D,XML_SCHEMAV_NOTYPE = 0x70E,XML_SCHEMAV_NOROLLBACK = 0x70F,XML_SCHEMAV_ISABSTRACT = 0x710,XML_SCHEMAV_NOTEMPTY = 0x711,XML_SCHEMAV_ELEMCONT = 0x712,XML_SCHEMAV_HAVEDEFAULT = 0x713,XML_SCHEMAV_NOTNILLABLE = 0x714,XML_SCHEMAV_EXTRACONTENT = 0x715,XML_SCHEMAV_INVALIDATTR = 0x716,XML_SCHEMAV_INVALIDELEM = 0x717,XML_SCHEMAV_NOTDETERMINIST = 0x718,XML_SCHEMAV_CONSTRUCT = 0x719,XML_SCHEMAV_INTERNAL = 0x71A,XML_SCHEMAV_NOTSIMPLE = 0x71B,XML_SCHEMAV_ATTRUNKNOWN = 0x71C,XML_SCHEMAV_ATTRINVALID = 0x71D,XML_SCHEMAV_VALUE = 0x71E,XML_SCHEMAV_FACET = 0x71F,XML_SCHEMAV_CVC_DATATYPE_VALID_1_2_1 = 0x720,XML_SCHEMAV_CVC_DATATYPE_VALID_1_2_2 = 0x721,XML_SCHEMAV_CVC_DATATYPE_VALID_1_2_3 = 0x722,XML_SCHEMAV_CVC_TYPE_3_1_1 = 0x723,XML_SCHEMAV_CVC_TYPE_3_1_2 = 0x724,XML_SCHEMAV_CVC_FACET_VALID = 0x725,XML_SCHEMAV_CVC_LENGTH_VALID = 0x726,XML_SCHEMAV_CVC_MINLENGTH_VALID = 0x727,XML_SCHEMAV_CVC_MAXLENGTH_VALID = 0x728,XML_SCHEMAV_CVC_MININCLUSIVE_VALID = 0x729,XML_SCHEMAV_CVC_MAXINCLUSIVE_VALID = 0x72A,XML_SCHEMAV_CVC_MINEXCLUSIVE_VALID = 0x72B,XML_SCHEMAV_CVC_MAXEXCLUSIVE_VALID = 0x72C,XML_SCHEMAV_CVC_TOTALDIGITS_VALID = 0x72D,XML_SCHEMAV_CVC_FRACTIONDIGITS_VALID = 0x72E,XML_SCHEMAV_CVC_PATTERN_VALID = 0x72F,XML_SCHEMAV_CVC_ENUMERATION_VALID = 0x730,XML_SCHEMAV_CVC_COMPLEX_TYPE_2_1 = 0x731,XML_SCHEMAV_CVC_COMPLEX_TYPE_2_2 = 0x732,XML_SCHEMAV_CVC_COMPLEX_TYPE_2_3 = 0x733,XML_SCHEMAV_CVC_COMPLEX_TYPE_2_4 = 0x734,XML_SCHEMAV_CVC_ELT_1 = 0x735,XML_SCHEMAV_CVC_ELT_2 = 0x736,XML_SCHEMAV_CVC_ELT_3_1 = 0x737,XML_SCHEMAV_CVC_ELT_3_2_1 = 0x738,XML_SCHEMAV_CVC_ELT_3_2_2 = 0x739,XML_SCHEMAV_CVC_ELT_4_1 = 0x73A,XML_SCHEMAV_CVC_ELT_4_2 = 0x73B,XML_SCHEMAV_CVC_ELT_4_3 = 0x73C,XML_SCHEMAV_CVC_ELT_5_1_1 = 0x73D,XML_SCHEMAV_CVC_ELT_5_1_2 = 0x73E,XML_SCHEMAV_CVC_ELT_5_2_1 = 0x73F,XML_SCHEMAV_CVC_ELT_5_2_2_1 = 0x740,XML_SCHEMAV_CVC_ELT_5_2_2_2_1 = 0x741,XML_SCHEMAV_CVC_ELT_5_2_2_2_2 = 0x742,XML_SCHEMAV_CVC_ELT_6 = 0x743,XML_SCHEMAV_CVC_ELT_7 = 0x744,XML_SCHEMAV_CVC_ATTRIBUTE_1 = 0x745,XML_SCHEMAV_CVC_ATTRIBUTE_2 = 0x746,XML_SCHEMAV_CVC_ATTRIBUTE_3 = 0x747,XML_SCHEMAV_CVC_ATTRIBUTE_4 = 0x748,XML_SCHEMAV_CVC_COMPLEX_TYPE_3_1 = 0x749,XML_SCHEMAV_CVC_COMPLEX_TYPE_3_2_1 = 0x74A,XML_SCHEMAV_CVC_COMPLEX_TYPE_3_2_2 = 0x74B,XML_SCHEMAV_CVC_COMPLEX_TYPE_4 = 0x74C,XML_SCHEMAV_CVC_COMPLEX_TYPE_5_1 = 0x74D,XML_SCHEMAV_CVC_COMPLEX_TYPE_5_2 = 0x74E,XML_SCHEMAV_ELEMENT_CONTENT = 0x74F,XML_SCHEMAV_DOCUMENT_ELEMENT_MISSING = 0x750,XML_SCHEMAV_CVC_COMPLEX_TYPE_1 = 0x751,XML_SCHEMAV_CVC_AU = 0x752,XML_SCHEMAV_CVC_TYPE_1 = 0x753,XML_SCHEMAV_CVC_TYPE_2 = 0x754,XML_SCHEMAV_CVC_IDC = 0x755,XML_SCHEMAV_CVC_WILDCARD = 0x756,XML_SCHEMAV_MISC = 0x757,XML_XPTR_UNKNOWN_SCHEME = 0x76C,XML_XPTR_CHILDSEQ_START = 0x76D,XML_XPTR_EVAL_FAILED = 0x76E,XML_XPTR_EXTRA_OBJECTS = 0x76F,XML_C14N_CREATE_CTXT = 0x79E,XML_C14N_REQUIRES_UTF8 = 0x79F,XML_C14N_CREATE_STACK = 0x7A0,XML_C14N_INVALID_NODE = 0x7A1,XML_C14N_UNKNOW_NODE = 0x7A2,XML_C14N_RELATIVE_NAMESPACE = 0x7A3,XML_FTP_PASV_ANSWER = 0x7D0,XML_FTP_EPSV_ANSWER = 0x7D1,XML_FTP_ACCNT = 0x7D2,XML_FTP_URL_SYNTAX = 0x7D3,XML_HTTP_URL_SYNTAX = 0x7E4,XML_HTTP_USE_IP = 0x7E5,XML_HTTP_UNKNOWN_HOST = 0x7E6,XML_SCHEMAP_SRC_SIMPLE_TYPE_1 = 0xBB8,XML_SCHEMAP_SRC_SIMPLE_TYPE_2 = 0xBB9,XML_SCHEMAP_SRC_SIMPLE_TYPE_3 = 0xBBA,XML_SCHEMAP_SRC_SIMPLE_TYPE_4 = 0xBBB,XML_SCHEMAP_SRC_RESOLVE = 0xBBC,XML_SCHEMAP_SRC_RESTRICTION_BASE_OR_SIMPLETYPE = 0xBBD,XML_SCHEMAP_SRC_LIST_ITEMTYPE_OR_SIMPLETYPE = 0xBBE,XML_SCHEMAP_SRC_UNION_MEMBERTYPES_OR_SIMPLETYPES = 0xBBF,XML_SCHEMAP_ST_PROPS_CORRECT_1 = 0xBC0,XML_SCHEMAP_ST_PROPS_CORRECT_2 = 0xBC1,XML_SCHEMAP_ST_PROPS_CORRECT_3 = 0xBC2,XML_SCHEMAP_COS_ST_RESTRICTS_1_1 = 0xBC3,XML_SCHEMAP_COS_ST_RESTRICTS_1_2 = 0xBC4,XML_SCHEMAP_COS_ST_RESTRICTS_1_3_1 = 0xBC5,XML_SCHEMAP_COS_ST_RESTRICTS_1_3_2 = 0xBC6,XML_SCHEMAP_COS_ST_RESTRICTS_2_1 = 0xBC7,XML_SCHEMAP_COS_ST_RESTRICTS_2_3_1_1 = 0xBC8,XML_SCHEMAP_COS_ST_RESTRICTS_2_3_1_2 = 0xBC9,XML_SCHEMAP_COS_ST_RESTRICTS_2_3_2_1 = 0xBCA,XML_SCHEMAP_COS_ST_RESTRICTS_2_3_2_2 = 0xBCB,XML_SCHEMAP_COS_ST_RESTRICTS_2_3_2_3 = 0xBCC,XML_SCHEMAP_COS_ST_RESTRICTS_2_3_2_4 = 0xBCD,XML_SCHEMAP_COS_ST_RESTRICTS_2_3_2_5 = 0xBCE,XML_SCHEMAP_COS_ST_RESTRICTS_3_1 = 0xBCF,XML_SCHEMAP_COS_ST_RESTRICTS_3_3_1 = 0xBD0,XML_SCHEMAP_COS_ST_RESTRICTS_3_3_1_2 = 0xBD1,XML_SCHEMAP_COS_ST_RESTRICTS_3_3_2_2 = 0xBD2,XML_SCHEMAP_COS_ST_RESTRICTS_3_3_2_1 = 0xBD3,XML_SCHEMAP_COS_ST_RESTRICTS_3_3_2_3 = 0xBD4,XML_SCHEMAP_COS_ST_RESTRICTS_3_3_2_4 = 0xBD5,XML_SCHEMAP_COS_ST_RESTRICTS_3_3_2_5 = 0xBD6,XML_SCHEMAP_COS_ST_DERIVED_OK_2_1 = 0xBD7,XML_SCHEMAP_COS_ST_DERIVED_OK_2_2 = 0xBD8,XML_SCHEMAP_S4S_ELEM_NOT_ALLOWED = 0xBD9,XML_SCHEMAP_S4S_ELEM_MISSING = 0xBDA,XML_SCHEMAP_S4S_ATTR_NOT_ALLOWED = 0xBDB,XML_SCHEMAP_S4S_ATTR_MISSING = 0xBDC,XML_SCHEMAP_S4S_ATTR_INVALID_VALUE = 0xBDD,XML_SCHEMAP_SRC_ELEMENT_1 = 0xBDE,XML_SCHEMAP_SRC_ELEMENT_2_1 = 0xBDF,XML_SCHEMAP_SRC_ELEMENT_2_2 = 0xBE0,XML_SCHEMAP_SRC_ELEMENT_3 = 0xBE1,XML_SCHEMAP_P_PROPS_CORRECT_1 = 0xBE2,XML_SCHEMAP_P_PROPS_CORRECT_2_1 = 0xBE3,XML_SCHEMAP_P_PROPS_CORRECT_2_2 = 0xBE4,XML_SCHEMAP_E_PROPS_CORRECT_2 = 0xBE5,XML_SCHEMAP_E_PROPS_CORRECT_3 = 0xBE6,XML_SCHEMAP_E_PROPS_CORRECT_4 = 0xBE7,XML_SCHEMAP_E_PROPS_CORRECT_5 = 0xBE8,XML_SCHEMAP_E_PROPS_CORRECT_6 = 0xBE9,XML_SCHEMAP_SRC_INCLUDE = 0xBEA,XML_SCHEMAP_SRC_ATTRIBUTE_1 = 0xBEB,XML_SCHEMAP_SRC_ATTRIBUTE_2 = 0xBEC,XML_SCHEMAP_SRC_ATTRIBUTE_3_1 = 0xBED,XML_SCHEMAP_SRC_ATTRIBUTE_3_2 = 0xBEE,XML_SCHEMAP_SRC_ATTRIBUTE_4 = 0xBEF,XML_SCHEMAP_NO_XMLNS = 0xBF0,XML_SCHEMAP_NO_XSI = 0xBF1,XML_SCHEMAP_COS_VALID_DEFAULT_1 = 0xBF2,XML_SCHEMAP_COS_VALID_DEFAULT_2_1 = 0xBF3,XML_SCHEMAP_COS_VALID_DEFAULT_2_2_1 = 0xBF4,XML_SCHEMAP_COS_VALID_DEFAULT_2_2_2 = 0xBF5,XML_SCHEMAP_CVC_SIMPLE_TYPE = 0xBF6,XML_SCHEMAP_COS_CT_EXTENDS_1_1 = 0xBF7,XML_SCHEMAP_SRC_IMPORT_1_1 = 0xBF8,XML_SCHEMAP_SRC_IMPORT_1_2 = 0xBF9,XML_SCHEMAP_SRC_IMPORT_2 = 0xBFA,XML_SCHEMAP_SRC_IMPORT_2_1 = 0xBFB,XML_SCHEMAP_SRC_IMPORT_2_2 = 0xBFC,XML_SCHEMAP_INTERNAL = 0xBFD,XML_SCHEMAP_NOT_DETERMINISTIC = 0xBFE,XML_SCHEMAP_SRC_ATTRIBUTE_GROUP_1 = 0xBFF,XML_SCHEMAP_SRC_ATTRIBUTE_GROUP_2 = 0xC00,XML_SCHEMAP_SRC_ATTRIBUTE_GROUP_3 = 0xC01,XML_SCHEMAP_MG_PROPS_CORRECT_1 = 0xC02,XML_SCHEMAP_MG_PROPS_CORRECT_2 = 0xC03,XML_SCHEMAP_SRC_CT_1 = 0xC04,XML_SCHEMAP_DERIVATION_OK_RESTRICTION_2_1_3 = 0xC05,XML_SCHEMAP_AU_PROPS_CORRECT_2 = 0xC06,XML_SCHEMAP_A_PROPS_CORRECT_2 = 0xC07,XML_SCHEMAP_C_PROPS_CORRECT = 0xC08,XML_SCHEMAP_SRC_REDEFINE = 0xC09,XML_SCHEMAP_SRC_IMPORT = 0xC0A,XML_SCHEMAP_WARN_SKIP_SCHEMA = 0xC0B,XML_SCHEMAP_WARN_UNLOCATED_SCHEMA = 0xC0C,XML_SCHEMAP_WARN_ATTR_REDECL_PROH = 0xC0D,XML_SCHEMAP_WARN_ATTR_POINTLESS_PROH = 0xC0E,XML_SCHEMAP_AG_PROPS_CORRECT = 0xC0F,XML_SCHEMAP_COS_CT_EXTENDS_1_2 = 0xC10,XML_SCHEMAP_AU_PROPS_CORRECT = 0xC11,XML_SCHEMAP_A_PROPS_CORRECT_3 = 0xC12,XML_SCHEMAP_COS_ALL_LIMITED = 0xC13,XML_SCHEMATRONV_ASSERT = 0xFA0,XML_SCHEMATRONV_REPORT = 0xFA1,XML_MODULE_OPEN = 0x1324,XML_MODULE_CLOSE = 0x1325,XML_CHECK_FOUND_ELEMENT = 0x1388,XML_CHECK_FOUND_ATTRIBUTE = 0x1389,XML_CHECK_FOUND_TEXT = 0x138A,XML_CHECK_FOUND_CDATA = 0x138B,XML_CHECK_FOUND_ENTITYREF = 0x138C,XML_CHECK_FOUND_ENTITY = 0x138D,XML_CHECK_FOUND_PI = 0x138E,XML_CHECK_FOUND_COMMENT = 0x138F,XML_CHECK_FOUND_DOCTYPE = 0x1390,XML_CHECK_FOUND_FRAGMENT = 0x1391,XML_CHECK_FOUND_NOTATION = 0x1392,XML_CHECK_UNKNOWN_NODE = 0x1393,XML_CHECK_ENTITY_TYPE = 0x1394,XML_CHECK_NO_PARENT = 0x1395,XML_CHECK_NO_DOC = 0x1396,XML_CHECK_NO_NAME = 0x1397,XML_CHECK_NO_ELEM = 0x1398,XML_CHECK_WRONG_DOC = 0x1399,XML_CHECK_NO_PREV = 0x139A,XML_CHECK_WRONG_PREV = 0x139B,XML_CHECK_NO_NEXT = 0x139C,XML_CHECK_WRONG_NEXT = 0x139D,XML_CHECK_NOT_DTD = 0x139E,XML_CHECK_NOT_ATTR = 0x139F,XML_CHECK_NOT_ATTR_DECL = 0x13A0,XML_CHECK_NOT_ELEM_DECL = 0x13A1,XML_CHECK_NOT_ENTITY_DECL = 0x13A2,XML_CHECK_NOT_NS_DECL = 0x13A3,XML_CHECK_NO_HREF = 0x13A4,XML_CHECK_WRONG_PARENT = 0x13A5,XML_CHECK_NS_SCOPE = 0x13A6,XML_CHECK_NS_ANCESTOR = 0x13A7,XML_CHECK_NOT_UTF8 = 0x13A8,XML_CHECK_NO_DICT = 0x13A9,XML_CHECK_NOT_NCNAME = 0x13AA,XML_CHECK_OUTSIDE_DICT = 0x13AB,XML_CHECK_WRONG_NAME = 0x13AC,XML_CHECK_NAME_NOT_NULL = 0x13AD,XML_I18N_NO_NAME = 0x1770,XML_I18N_NO_HANDLER = 0x1771,XML_I18N_EXCESS_HANDLER = 0x1772,XML_I18N_CONV_FAILED = 0x1773,XML_I18N_NO_OUTPUT = 0x1774,XML_BUF_OVERFLOW = 0x1B58,};
enum xmlParserOption {XML_PARSE_RECOVER = 0x1,XML_PARSE_NOENT = 0x2,XML_PARSE_DTDLOAD = 0x4,XML_PARSE_DTDATTR = 0x8,XML_PARSE_DTDVALID = 0x10,XML_PARSE_NOERROR = 0x20,XML_PARSE_NOWARNING = 0x40,XML_PARSE_PEDANTIC = 0x80,XML_PARSE_NOBLANKS = 0x100,XML_PARSE_SAX1 = 0x200,XML_PARSE_XINCLUDE = 0x400,XML_PARSE_NONET = 0x800,XML_PARSE_NODICT = 0x1000,XML_PARSE_NSCLEAN = 0x2000,XML_PARSE_NOCDATA = 0x4000,XML_PARSE_NOXINCNODE = 0x8000,XML_PARSE_COMPACT = 0x10000,XML_PARSE_OLD10 = 0x20000,XML_PARSE_NOBASEFIX = 0x40000,XML_PARSE_HUGE = 0x80000,XML_PARSE_OLDSAX = 0x100000,XML_PARSE_IGNORE_ENC = 0x200000,XML_PARSE_BIG_LINES = 0x400000,};
enum xmlPatternFlags {XML_PATTERN_DEFAULT = 0x0,XML_PATTERN_XPATH = 0x1,XML_PATTERN_XSSEL = 0x2,XML_PATTERN_XSFIELD = 0x4,};
typedef _xmlSAXHandlerV1 xmlSAXHandlerV1;
typedef struct _xmlXIncludeCtxt xmlXIncludeCtxt;
typedef _xmlXPathContext xmlXPathContext;
enum ypbind_resptype {YPBIND_SUCC_VAL = 0x1,YPBIND_FAIL_VAL = 0x2,};
typedef zone_btrecord zone_btrecord_t;
typedef AAEntryACLBlob_impl *AAEntryACLBlob;
typedef AAEntryXATBlob_impl *AAEntryXATBlob;
enum ARCoachingGoal {ARCoachingGoalTracking = 0x0,ARCoachingGoalHorizontalPlane = 0x1,ARCoachingGoalVerticalPlane = 0x2,ARCoachingGoalAnyPlane = 0x3,};
typedef void *AUInputHandler;
struct AUTH__auth_ops {void (*ah_nextverf)(int, ...);int (*ah_marshal)(int, ...);int (*ah_validate)(int, ...);int (*ah_refresh)(int, ...);void (*ah_destroy)(int, ...);};
struct AVAudio3DPoint {float x;float y;float z;};
typedef long long AVAudioInteger;
enum AVAudioQuality {AVAudioQualityMin = 0x0,AVAudioQualityLow = 0x20,AVAudioQualityMedium = 0x40,AVAudioQualityHigh = 0x60,AVAudioQualityMax = 0x7F,};
enum AVPlayerStatus {AVPlayerStatusUnknown = 0x0,AVPlayerStatusReadyToPlay = 0x1,AVPlayerStatusFailed = 0x2,};
typedef OpaqueAudioComponent *AudioComponent;
enum BNNSDataLayout {BNNSDataLayoutVector = 0x10000,BNNSDataLayout1DLastMajor = 0x18000,BNNSDataLayout1DFirstMajor = 0x18001,BNNSDataLayoutRowMajorMatrix = 0x20000,BNNSDataLayoutColumnMajorMatrix = 0x20001,BNNSDataLayout2DLastMajor = 0x28000,BNNSDataLayout2DFirstMajor = 0x28001,BNNSDataLayoutImageCHW = 0x30000,BNNSDataLayout3DLastMajor = 0x38000,BNNSDataLayout3DFirstMajor = 0x38001,BNNSDataLayoutConvolutionWeightsOIHW = 0x40000,BNNSDataLayoutConvolutionWeightsOIHrWr = 0x40001,BNNSDataLayoutConvolutionWeightsIOHrWr = 0x40002,BNNSDataLayoutConvolutionWeightsOIHW_Pack32 = 0x40010,BNNSDataLayout4DLastMajor = 0x48000,BNNSDataLayout4DFirstMajor = 0x48001,BNNSDataLayout5DLastMajor = 0x58000,BNNSDataLayout5DFirstMajor = 0x58001,BNNSDataLayout6DLastMajor = 0x68000,BNNSDataLayout6DFirstMajor = 0x68001,BNNSDataLayout7DLastMajor = 0x78000,BNNSDataLayout7DFirstMajor = 0x78001,BNNSDataLayout8DLastMajor = 0x88000,BNNSDataLayout8DFirstMajor = 0x88001,};
enum BNNSFilterType {BNNSConvolution = 0x0,BNNSFullyConnected = 0x1,BNNSBatchNorm = 0x2,BNNSInstanceNorm = 0x3,BNNSLayerNorm = 0x4,BNNSGroupNorm = 0x5,};
enum BNNSLayerFlags {BNNSLayerFlagsLSTMBidirectional = 0x1,BNNSLayerFlagsLSTMDefaultActivations = 0x2,};
struct BigEndianShort {short bigEndianValue;};
enum CBManagerState {CBManagerStateUnknown = 0x0,CBManagerStateResetting = 0x1,CBManagerStateUnsupported = 0x2,CBManagerStateUnauthorized = 0x3,CBManagerStatePoweredOff = 0x4,CBManagerStatePoweredOn = 0x5,};
typedef  __CFAllocator *CFAllocatorRef;
typedef  __CFBitVector *CFBitVectorRef;
typedef int CFBundleRefNum;
enum CFHostInfoType {kCFHostAddresses = 0x0,kCFHostNames = 0x1,kCFHostReachability = 0x2,};
enum CFStreamStatus {kCFStreamStatusNotOpen = 0x0,kCFStreamStatusOpening = 0x1,kCFStreamStatusOpen = 0x2,kCFStreamStatusReading = 0x3,kCFStreamStatusWriting = 0x4,kCFStreamStatusAtEnd = 0x5,kCFStreamStatusClosed = 0x6,kCFStreamStatusError = 0x7,};
typedef double CFTimeInterval;
enum CFURLPathStyle {kCFURLPOSIXPathStyle = 0x0,kCFURLHFSPathStyle = 0x1,kCFURLWindowsPathStyle = 0x2,};
struct CGDataConsumer;
struct CGDataProvider;
typedef CGPDFObject *CGPDFObjectRef;
typedef CGPDFStream *CGPDFStreamRef;
typedef CGPDFString *CGPDFStringRef;
enum CGTextEncoding {kCGEncodingFontSpecific = 0x0,kCGEncodingMacRoman = 0x1,};
enum CLActivityType {CLActivityTypeOther = 0x1,CLActivityTypeAutomotiveNavigation = 0x2,CLActivityTypeFitness = 0x3,CLActivityTypeOtherNavigation = 0x4,CLActivityTypeAirborne = 0x5,};
enum CLSContextType {CLSContextTypeNone = 0x0,CLSContextTypeApp = 0x1,CLSContextTypeChapter = 0x2,CLSContextTypeSection = 0x3,CLSContextTypeLevel = 0x4,CLSContextTypePage = 0x5,CLSContextTypeTask = 0x6,CLSContextTypeChallenge = 0x7,CLSContextTypeQuiz = 0x8,CLSContextTypeExercise = 0x9,CLSContextTypeLesson = 0xA,CLSContextTypeBook = 0xB,CLSContextTypeGame = 0xC,CLSContextTypeDocument = 0xD,CLSContextTypeAudio = 0xE,CLSContextTypeVideo = 0xF,CLSContextTypeCourse = 0x10,CLSContextTypeCustom = 0x11,};
struct CMAcceleration {double x;double y;double z;};
struct CMRotationRate {double x;double y;double z;};
typedef  __CTGlyphInfo *CTGlyphInfoRef;
enum CTRubyOverhang {kCTRubyOverhangInvalid = 0xFF,kCTRubyOverhangAuto = 0x0,kCTRubyOverhangStart = 0x1,kCTRubyOverhangEnd = 0x2,kCTRubyOverhangNone = 0x3,};
enum CTRubyPosition {kCTRubyPositionBefore = 0x0,kCTRubyPositionAfter = 0x1,kCTRubyPositionInterCharacter = 0x2,kCTRubyPositionInline = 0x3,kCTRubyPositionCount = 0x4,};
typedef  unsigned char *ConstStringPtr;
typedef DSPDoubleComplex DOUBLE_COMPLEX;
enum EKCalendarType {EKCalendarTypeLocal = 0x0,EKCalendarTypeCalDAV = 0x1,EKCalendarTypeExchange = 0x2,EKCalendarTypeSubscription = 0x3,EKCalendarTypeBirthday = 0x4,};
typedef void *ENErrorHandler;
struct Fts5PhraseIter { unsigned char *a; unsigned char *b;};
struct GCAcceleration {double x;double y;double z;};
struct GCRotationRate {double x;double y;double z;};
enum GKSendDataMode {GKSendDataReliable = 0x0,GKSendDataUnreliable = 0x1,};
enum GKSessionError {GKSessionInvalidParameterError = 0x7724,GKSessionPeerNotFoundError = 0x7725,GKSessionDeclinedError = 0x7726,GKSessionTimedOutError = 0x7727,GKSessionCancelledError = 0x7728,GKSessionConnectionFailedError = 0x7729,GKSessionConnectionClosedError = 0x772A,GKSessionDataTooBigError = 0x772B,GKSessionNotConnectedError = 0x772C,GKSessionCannotEnableError = 0x772D,GKSessionInProgressError = 0x772E,GKSessionConnectivityError = 0x75F9,GKSessionTransportError = 0x75FA,GKSessionInternalError = 0x75FB,GKSessionUnknownError = 0x75FC,GKSessionSystemError = 0x75FD,};
enum HKMetricPrefix {HKMetricPrefixNone = 0x0,HKMetricPrefixFemto = 0xD,HKMetricPrefixPico = 0x1,HKMetricPrefixNano = 0x2,HKMetricPrefixMicro = 0x3,HKMetricPrefixMilli = 0x4,HKMetricPrefixCenti = 0x5,HKMetricPrefixDeci = 0x6,HKMetricPrefixDeca = 0x7,HKMetricPrefixHecto = 0x8,HKMetricPrefixKilo = 0x9,HKMetricPrefixMega = 0xA,HKMetricPrefixGiga = 0xB,HKMetricPrefixTera = 0xC,};
enum HMHomeHubState {HMHomeHubStateNotAvailable = 0x0,HMHomeHubStateConnected = 0x1,HMHomeHubStateDisconnected = 0x2,};
enum INCarDefroster {INCarDefrosterUnknown = 0x0,INCarDefrosterFront = 0x1,INCarDefrosterRear = 0x2,INCarDefrosterAll = 0x3,};
enum INSpatialEvent {INSpatialEventUnknown = 0x0,INSpatialEventArrive = 0x1,INSpatialEventDepart = 0x2,};
enum INTaskPriority {INTaskPriorityUnknown = 0x0,INTaskPriorityNotFlagged = 0x1,INTaskPriorityFlagged = 0x2,};
enum LABiometryType {LABiometryTypeNone = 0x0,LABiometryNone = 0x0,LABiometryTypeTouchID = 0x1,LABiometryTypeFaceID = 0x2,};
typedef void *LogicalAddress;
enum MACRO_ACCESSOR {ACCESSOR_CALLS_ARE_FUNCTIONS = 1,};
enum MACRO_AF_INET6 {AF_INET6 = 30,AF_NATM = 31,AF_SYSTEM = 32,AF_NETBIOS = 33,AF_PPP = 34,};
enum MACRO_ALRMTYPE {ALRMTYPE = 0xFF,};
enum MACRO_AREGTYPE {AREGTYPE = 0,LNKTYPE = 49,};
enum MACRO_ATTR_CMN {ATTR_CMN_NAME = 0x1,ATTR_CMN_DEVID = 0x2,ATTR_CMN_FSID = 0x4,ATTR_CMN_OBJTYPE = 0x8,ATTR_CMN_OBJTAG = 0x10,ATTR_CMN_OBJID = 0x20,ATTR_CMN_OBJPERMANENTID = 0x40,ATTR_CMN_PAROBJID = 0x80,ATTR_CMN_SCRIPT = 0x100,ATTR_CMN_CRTIME = 0x200,ATTR_CMN_MODTIME = 0x400,ATTR_CMN_CHGTIME = 0x800,ATTR_CMN_ACCTIME = 0x1000,ATTR_CMN_BKUPTIME = 0x2000,ATTR_CMN_FNDRINFO = 0x4000,ATTR_CMN_OWNERID = 0x8000,ATTR_CMN_GRPID = 0x10000,ATTR_CMN_ACCESSMASK = 0x20000,ATTR_CMN_FLAGS = 0x40000,ATTR_CMN_GEN_COUNT = 0x80000,ATTR_CMN_DOCUMENT_ID = 0x100000,ATTR_CMN_USERACCESS = 0x200000,ATTR_CMN_EXTENDED_SECURITY = 0x400000,ATTR_CMN_UUID = 0x800000,ATTR_CMN_GRPUUID = 0x1000000,ATTR_CMN_FILEID = 0x2000000,ATTR_CMN_PARENTID = 0x4000000,ATTR_CMN_FULLPATH = 0x8000000,ATTR_CMN_ADDEDTIME = 0x10000000,ATTR_CMN_ERROR = 0x20000000,ATTR_CMN_DATA_PROTECT_FLAGS = 0x40000000,ATTR_CMN_RETURNED_ATTRS = 0x80000000,ATTR_CMN_VALIDMASK = 0xFFFFFFFF,ATTR_CMN_SETMASK = 0x51C7FF00,ATTR_CMN_VOLSETMASK = 0x6700,ATTR_VOL_FSTYPE = 0x1,ATTR_VOL_SIGNATURE = 0x2,ATTR_VOL_SIZE = 0x4,ATTR_VOL_SPACEFREE = 0x8,ATTR_VOL_SPACEAVAIL = 0x10,ATTR_VOL_MINALLOCATION = 0x20,ATTR_VOL_ALLOCATIONCLUMP = 0x40,ATTR_VOL_IOBLOCKSIZE = 0x80,ATTR_VOL_OBJCOUNT = 0x100,ATTR_VOL_FILECOUNT = 0x200,ATTR_VOL_DIRCOUNT = 0x400,ATTR_VOL_MAXOBJCOUNT = 0x800,ATTR_VOL_MOUNTPOINT = 0x1000,ATTR_VOL_NAME = 0x2000,ATTR_VOL_MOUNTFLAGS = 0x4000,ATTR_VOL_MOUNTEDDEVICE = 0x8000,ATTR_VOL_ENCODINGSUSED = 0x10000,ATTR_VOL_CAPABILITIES = 0x20000,ATTR_VOL_UUID = 0x40000,ATTR_VOL_QUOTA_SIZE = 0x10000000,ATTR_VOL_RESERVED_SIZE = 0x20000000,ATTR_VOL_ATTRIBUTES = 0x40000000,ATTR_VOL_INFO = 0x80000000,ATTR_VOL_VALIDMASK = 0xF007FFFF,ATTR_VOL_SETMASK = 0x80002000,ATTR_DIR_LINKCOUNT = 0x1,ATTR_DIR_ENTRYCOUNT = 0x2,ATTR_DIR_MOUNTSTATUS = 0x4,ATTR_DIR_ALLOCSIZE = 0x8,ATTR_DIR_IOBLOCKSIZE = 0x10,ATTR_DIR_DATALENGTH = 0x20,};
enum MACRO_ATTR_DIR {ATTR_DIR_VALIDMASK = 0x3F,ATTR_DIR_SETMASK = 0x0,ATTR_FILE_LINKCOUNT = 0x1,ATTR_FILE_TOTALSIZE = 0x2,ATTR_FILE_ALLOCSIZE = 0x4,ATTR_FILE_IOBLOCKSIZE = 0x8,ATTR_FILE_DEVTYPE = 0x20,ATTR_FILE_FORKCOUNT = 0x80,ATTR_FILE_FORKLIST = 0x100,ATTR_FILE_DATALENGTH = 0x200,ATTR_FILE_DATAALLOCSIZE = 0x400,ATTR_FILE_RSRCLENGTH = 0x1000,ATTR_FILE_RSRCALLOCSIZE = 0x2000,ATTR_FILE_VALIDMASK = 0x37FF,ATTR_FILE_SETMASK = 0x20,ATTR_CMNEXT_RELPATH = 0x4,ATTR_CMNEXT_PRIVATESIZE = 0x8,ATTR_CMNEXT_LINKID = 0x10,ATTR_CMNEXT_NOFIRMLINKPATH = 0x20,ATTR_CMNEXT_REALDEVID = 0x40,ATTR_CMNEXT_REALFSID = 0x80,ATTR_CMNEXT_CLONEID = 0x100,ATTR_CMNEXT_EXT_FLAGS = 0x200,ATTR_CMNEXT_RECURSIVE_GENCOUNT = 0x400,ATTR_CMNEXT_VALIDMASK = 0x7FC,ATTR_CMNEXT_SETMASK = 0x0,ATTR_FORK_TOTALSIZE = 0x1,ATTR_FORK_ALLOCSIZE = 0x2,ATTR_FORK_RESERVED = 0xFFFFFFFF,ATTR_FORK_VALIDMASK = 0x3,ATTR_FORK_SETMASK = 0x0,ATTR_CMN_NAMEDATTRCOUNT = 0x80000,ATTR_CMN_NAMEDATTRLIST = 0x100000,ATTR_FILE_CLUMPSIZE = 0x10,ATTR_FILE_FILETYPE = 0x40,ATTR_FILE_DATAEXTENTS = 0x800,ATTR_FILE_RSRCEXTENTS = 0x4000,};
enum MACRO_ATTR_MAX {ATTR_MAX_BUFFER = 8192,};
enum MACRO_AppleEXR {AppleEXR_h = 1,};
enum MACRO_CGVECTOR {CGVECTOR_DEFINED = 1,};
enum MACRO_CHAR_MIN {CHAR_MIN = -128,};
enum MACRO_CONTTYPE {CONTTYPE = 55,TSUID = 2048,};
enum MACRO_COPYFILE {COPYFILE_STATE_SRC_FD = 1,COPYFILE_STATE_SRC_FILENAME = 2,COPYFILE_STATE_DST_FD = 3,COPYFILE_STATE_DST_FILENAME = 4,COPYFILE_STATE_QUARANTINE = 5,COPYFILE_STATE_STATUS_CB = 6,COPYFILE_STATE_STATUS_CTX = 7,COPYFILE_STATE_COPIED = 8,COPYFILE_STATE_XATTRNAME = 9,COPYFILE_STATE_WAS_CLONED = 10,COPYFILE_ACL = 1,COPYFILE_STAT = 2,COPYFILE_XATTR = 4,COPYFILE_DATA = 8,COPYFILE_RECURSIVE = 32768,COPYFILE_CHECK = 65536,COPYFILE_EXCL = 131072,COPYFILE_NOFOLLOW_SRC = 262144,COPYFILE_NOFOLLOW_DST = 524288,COPYFILE_MOVE = 1048576,COPYFILE_UNLINK = 2097152,COPYFILE_PACK = 4194304,COPYFILE_UNPACK = 8388608,COPYFILE_CLONE = 16777216,COPYFILE_CLONE_FORCE = 33554432,COPYFILE_RUN_IN_PLACE = 67108864,COPYFILE_DATA_SPARSE = 134217728,COPYFILE_PRESERVE_DST_TRACKED = 268435456,COPYFILE_VERBOSE = 1073741824,COPYFILE_RECURSE_ERROR = 0,COPYFILE_RECURSE_FILE = 1,COPYFILE_RECURSE_DIR = 2,COPYFILE_RECURSE_DIR_CLEANUP = 3,COPYFILE_COPY_DATA = 4,COPYFILE_COPY_XATTR = 5,COPYFILE_START = 1,COPYFILE_FINISH = 2,COPYFILE_ERR = 3,COPYFILE_PROGRESS = 4,COPYFILE_CONTINUE = 0,COPYFILE_SKIP = 1,COPYFILE_QUIT = 2,};
enum MACRO_CRNCYSTR {CRNCYSTR = 56,};
enum MACRO_DISPATCH {DISPATCH_API_VERSION = 20181008,};
enum MACRO_EALREADY {EALREADY = 37,};
enum MACRO_EBADARCH {EBADARCH = 86,};
enum MACRO_EBADEXEC {EBADEXEC = 85,};
enum MACRO_EMSGSIZE {EMSGSIZE = 40,};
enum MACRO_ENETDOWN {ENETDOWN = 50,};
enum MACRO_ENOTCONN {ENOTCONN = 57,};
enum MACRO_ENOTSOCK {ENOTSOCK = 38,};
enum MACRO_EPROCLIM {EPROCLIM = 67,};
enum MACRO_EXC_SOFT {EXC_SOFT_SIGNAL = 0x10003,EXC_MACF_MIN = 0x20000,EXC_MACF_MAX = 0x2FFFF,};
enum MACRO_FIFOTYPE {FIFOTYPE = 54,};
enum MACRO_FPARSELN {FPARSELN_UNESCESC = 0x1,FPARSELN_UNESCCONT = 0x2,FPARSELN_UNESCCOMM = 0x4,FPARSELN_UNESCREST = 0x8,FPARSELN_UNESCALL = 0xF,};
enum MACRO_FUNCTION {FUNCTION_PASCAL = 0,FUNCTION_DECLSPEC = 0,FUNCTION_WIN32CC = 0,};
enum MACRO_HASHSIZE {HASHSIZE = 128,};
enum MACRO_HOST_NOT {HOST_NOT_FOUND = 1,};
enum MACRO_ICMP6_RR {ICMP6_RR_FLAGS_TEST = 0x80,ICMP6_RR_FLAGS_REQRESULT = 0x40,ICMP6_RR_FLAGS_FORCEAPPLY = 0x20,ICMP6_RR_FLAGS_SPECSITE = 0x10,ICMP6_RR_FLAGS_PREVDONE = 0x8,};
enum MACRO_IFNAMSIZ {IFNAMSIZ = 16,};
enum MACRO_INDIRECT {INDIRECT_SYMBOL_LOCAL = 0x80000000,INDIRECT_SYMBOL_ABS = 0x40000000,};
enum MACRO_IPDEFTTL {IPDEFTTL = 64,};
enum MACRO_IPTTLDEC {IPTTLDEC = 1,};
enum MACRO_IPV6PORT {IPV6PORT_RESERVED = 1024,IPV6PORT_ANONMIN = 49152,IPV6PORT_ANONMAX = 65535,IPV6PORT_RESERVEDMIN = 600,};
enum MACRO_MACH_ARM {MACH_ARM_TRAP_ABSTIME = -3,MACH_ARM_TRAP_CONTTIME = -4,};
enum MACRO_MACH_MSG {MACH_MSG_TIMEOUT_NONE = 0,MACH_MSGH_BITS_ZERO = 0,MACH_MSGH_BITS_REMOTE_MASK = 31,MACH_MSGH_BITS_LOCAL_MASK = 7936,MACH_MSGH_BITS_VOUCHER_MASK = 2031616,MACH_MSGH_BITS_COMPLEX = 2147483648,MACH_MSGH_BITS_USER = 2149523231,MACH_MSGH_BITS_RAISEIMP = 536870912,MACH_MSGH_BITS_IMPHOLDASRT = 268435456,MACH_MSGH_BITS_CIRCULAR = 268435456,MACH_MSGH_BITS_USED = 2954829599,MACH_MSG_SIZE_NULL = 0,MACH_MSG_PRIORITY_UNSPECIFIED = 0,MACH_MSG_TYPE_MOVE_RECEIVE = 16,MACH_MSG_TYPE_MOVE_SEND = 17,MACH_MSG_TYPE_MOVE_SEND_ONCE = 18,MACH_MSG_TYPE_COPY_SEND = 19,MACH_MSG_TYPE_MAKE_SEND = 20,MACH_MSG_TYPE_MAKE_SEND_ONCE = 21,MACH_MSG_TYPE_COPY_RECEIVE = 22,MACH_MSG_TYPE_DISPOSE_RECEIVE = 24,MACH_MSG_TYPE_DISPOSE_SEND = 25,MACH_MSG_TYPE_DISPOSE_SEND_ONCE = 26,MACH_MSG_PHYSICAL_COPY = 0,MACH_MSG_VIRTUAL_COPY = 1,MACH_MSG_ALLOCATE = 2,MACH_MSG_OVERWRITE = 3,MACH_MSG_GUARD_FLAGS_NONE = 0,MACH_MSG_GUARD_FLAGS_IMMOVABLE_RECEIVE = 1,MACH_MSG_GUARD_FLAGS_UNGUARDED_ON_SEND = 2,MACH_MSG_GUARD_FLAGS_MASK = 3,MACH_MSG_PORT_DESCRIPTOR = 0,MACH_MSG_OOL_DESCRIPTOR = 1,MACH_MSG_OOL_PORTS_DESCRIPTOR = 2,MACH_MSG_OOL_VOLATILE_DESCRIPTOR = 3,MACH_MSG_GUARDED_PORT_DESCRIPTOR = 4,MACH_MSG_BODY_NULL = 0,MACH_MSG_DESCRIPTOR_NULL = 0,MACH_MSG_NULL = 0,MACH_MSG_TRAILER_FORMAT_0 = 0,MACH_MSG_FILTER_POLICY_ALLOW = 0,MACH_MSG_SIZE_MAX = 4294967295,MACH_MSG_SIZE_RELIABLE = 262144,MACH_MSGH_KIND_NORMAL = 0,MACH_MSGH_KIND_NOTIFICATION = 1,MACH_MSG_TYPE_PORT_NONE = 0,MACH_MSG_TYPE_PORT_NAME = 15,MACH_MSG_TYPE_LAST = 22,MACH_MSG_TYPE_POLYMORPHIC = 4294967295,MACH_MSG_OPTION_NONE = 0,MACH_SEND_MSG = 1,MACH_RCV_MSG = 2,MACH_RCV_LARGE = 4,MACH_RCV_LARGE_IDENTITY = 8,MACH_SEND_TIMEOUT = 16,MACH_SEND_OVERRIDE = 32,MACH_SEND_INTERRUPT = 64,MACH_SEND_NOTIFY = 128,MACH_SEND_ALWAYS = 65536,MACH_SEND_TRAILER = 131072,MACH_SEND_NOIMPORTANCE = 262144,MACH_SEND_IMPORTANCE = 524288,MACH_SEND_SYNC_OVERRIDE = 1048576,MACH_SEND_PROPAGATE_QOS = 2097152,MACH_SEND_KERNEL = 4194304,MACH_SEND_SYNC_BOOTSTRAP_CHECKIN = 8388608,MACH_RCV_TIMEOUT = 256,MACH_RCV_NOTIFY = 0,MACH_RCV_INTERRUPT = 1024,MACH_RCV_VOUCHER = 2048,MACH_RCV_OVERWRITE = 0,MACH_RCV_GUARDED_DESC = 4096,MACH_RCV_SYNC_WAIT = 16384,MACH_RCV_SYNC_PEEK = 32768,MACH_MSG_STRICT_REPLY = 512,MACH_RCV_TRAILER_NULL = 0,MACH_RCV_TRAILER_SEQNO = 1,MACH_RCV_TRAILER_SENDER = 2,MACH_RCV_TRAILER_AUDIT = 3,MACH_RCV_TRAILER_CTX = 4,MACH_RCV_TRAILER_AV = 7,MACH_RCV_TRAILER_LABELS = 8,MACH_RCV_TRAILER_MASK = 251658240,MACH_MSG_SUCCESS = 0,MACH_MSG_MASK = 15872,MACH_MSG_IPC_SPACE = 8192,MACH_MSG_VM_SPACE = 4096,MACH_MSG_IPC_KERNEL = 2048,MACH_MSG_VM_KERNEL = 1024,MACH_SEND_IN_PROGRESS = 268435457,MACH_SEND_INVALID_DATA = 268435458,MACH_SEND_INVALID_DEST = 268435459,MACH_SEND_TIMED_OUT = 268435460,MACH_SEND_INVALID_VOUCHER = 268435461,MACH_SEND_INTERRUPTED = 268435463,MACH_SEND_MSG_TOO_SMALL = 268435464,MACH_SEND_INVALID_REPLY = 268435465,MACH_SEND_INVALID_RIGHT = 268435466,MACH_SEND_INVALID_NOTIFY = 268435467,MACH_SEND_INVALID_MEMORY = 268435468,MACH_SEND_NO_BUFFER = 268435469,MACH_SEND_TOO_LARGE = 268435470,MACH_SEND_INVALID_TYPE = 268435471,MACH_SEND_INVALID_HEADER = 268435472,MACH_SEND_INVALID_TRAILER = 268435473,MACH_SEND_INVALID_CONTEXT = 268435474,MACH_SEND_INVALID_RT_OOL_SIZE = 268435477,MACH_SEND_NO_GRANT_DEST = 268435478,MACH_SEND_MSG_FILTERED = 268435479,MACH_RCV_IN_PROGRESS = 268451841,MACH_RCV_INVALID_NAME = 268451842,MACH_RCV_TIMED_OUT = 268451843,MACH_RCV_TOO_LARGE = 268451844,MACH_RCV_INTERRUPTED = 268451845,MACH_RCV_PORT_CHANGED = 268451846,MACH_RCV_INVALID_NOTIFY = 268451847,MACH_RCV_INVALID_DATA = 268451848,MACH_RCV_PORT_DIED = 268451849,MACH_RCV_IN_SET = 268451850,MACH_RCV_HEADER_ERROR = 268451851,MACH_RCV_BODY_ERROR = 268451852,MACH_RCV_INVALID_TYPE = 268451853,MACH_RCV_SCATTER_SMALL = 268451854,MACH_RCV_INVALID_TRAILER = 268451855,MACH_RCV_IN_PROGRESS_TIMED = 268451857,MACH_RCV_INVALID_REPLY = 268451858,};
enum MACRO_MAXPHASE {MAXPHASE = 500000000,};
enum MACRO_MAXUSERS {MAXUSERS = 100,};
enum MACRO_MAX_PAGE {MAX_PAGE_NUMBER = 0xFFFFFFFF,MAX_PAGE_OFFSET = 0xFFFF,MAX_REC_NUMBER = 0xFFFFFFFF,};
enum MACRO_MAX_PATH {MAX_PATH_LEN = 1024,MAX_FILEID = 32,};
enum MACRO_MAX_SACK {MAX_SACK_BLKS = 6,};
enum MACRO_MCLSHIFT {MCLSHIFT = 11,};
enum MACRO_MNT_WAIT {MNT_WAIT = 1,MNT_NOWAIT = 2,MNT_DWAIT = 4,};
enum MACRO_NI_QTYPE {NI_QTYPE_NOOP = 0,NI_QTYPE_SUPTYPES = 1,NI_QTYPE_FQDN = 2,NI_QTYPE_DNSNAME = 2,NI_QTYPE_NODEADDR = 3,NI_QTYPE_IPV4ADDR = 4,NI_SUPTYPE_FLAG_COMPRESS = 256,NI_FQDN_FLAG_VALIDTTL = 256,NI_NODEADDR_FLAG_TRUNCATE = 256,NI_NODEADDR_FLAG_ALL = 512,NI_NODEADDR_FLAG_COMPAT = 1024,NI_NODEADDR_FLAG_LINKLOCAL = 2048,NI_NODEADDR_FLAG_SITELOCAL = 4096,NI_NODEADDR_FLAG_GLOBAL = 8192,NI_NODEADDR_FLAG_ANYCAST = 16384,};
enum MACRO_NSEC_PER {NSEC_PER_MSEC = 1000000,};
enum MACRO_NULLPROC {NULLPROC = 0,UDPMSGSIZE = 8800,};
enum MACRO_NeXTBSD4 {NeXTBSD4_0 = 0,};
enum MACRO_OBJC_API {OBJC_API_VERSION = 2,OBJC_NO_GC = 1,OBJC_NO_GC_API = 1,};
enum MACRO_OBSOLETE {OBSOLETE_OBJC_GETCLASSES = 1,};
enum MACRO_OVERFLOW {OVERFLOW = 3,UNDERFLOW = 4,};
enum MACRO_PLATFORM {PLATFORM_MACOS = 1,PLATFORM_IOS = 2,PLATFORM_TVOS = 3,PLATFORM_WATCHOS = 4,PLATFORM_BRIDGEOS = 5,PLATFORM_MACCATALYST = 6,PLATFORM_IOSSIMULATOR = 7,PLATFORM_TVOSSIMULATOR = 8,PLATFORM_WATCHOSSIMULATOR = 9,PLATFORM_DRIVERKIT = 10,};
enum MACRO_SEARCHFS {SEARCHFS_MAX_SEARCHPARMS = 4096,};
enum MACRO_SECURITY {SECURITY_TYPE_UNIFICATION = 1,};
enum MACRO_SEVERITY {SEVERITY_SUCCESS = 0,SEVERITY_ERROR = 1,};
enum MACRO_SHUTDOWN {SHUTDOWN_TIME = 11,};
enum MACRO_SIGWINCH {SIGWINCH = 28,};
enum MACRO_SPRAYMAX {SPRAYMAX = 8845,};
enum MACRO_TCIFLUSH {TCIFLUSH = 1,TCOFLUSH = 2,};
enum MACRO_TVERSLEN {TVERSLEN = 2,REGTYPE = 48,};
enum MACRO_USRQUOTA {USRQUOTA = 0,GRPQUOTA = 1,};
enum MACRO_UTF8_MAX {UTF8_MAX_CHAR_LENGTH = 4,};
enum MACRO_U_ENABLE {U_ENABLE_DYLOAD = 1,U_CHECK_DYLOAD = 1,U_DEFAULT_SHOW_DRAFT = 1,};
enum MACRO_VDISCARD {VDISCARD = 15,VMIN = 16,};
enum MACRO_VM_METER {VM_METER = 1,VM_LOADAVG = 2,VM_MACHFACTOR = 4,VM_SWAPUSAGE = 5,VM_MAXID = 6,};
enum MACRO_VREPRINT {VREPRINT = 6,VINTR = 8,};
enum MACRO_WALLPROC {WALLPROC_WALL = 2,};
enum MACRO_WALLPROG {WALLPROG = 100008,};
enum MACRO_WALLVERS {WALLVERS = 1,};
enum MACRO_WMESGLEN {WMESGLEN = 7,};
enum MACRO_YPMAXMAP {YPMAXMAP = 64,};
enum MACRO__FILESEC {_FILESEC_UNSET_PROPERTY = 0,_FILESEC_REMOVE_ACL = 1,};
enum MACRO__FORTIFY {_FORTIFY_SOURCE = 2,};
enum MACRO__PTHREAD {_PTHREAD_MUTEX_SIG_init = 0x32AAABA7,_PTHREAD_ERRORCHECK_MUTEX_SIG_init = 0x32AAABA1,_PTHREAD_RECURSIVE_MUTEX_SIG_init = 0x32AAABA2,_PTHREAD_FIRSTFIT_MUTEX_SIG_init = 0x32AAABA3,_PTHREAD_COND_SIG_init = 0x3CB0B1BB,_PTHREAD_ONCE_SIG_init = 0x30B1BCBA,_PTHREAD_RWLOCK_SIG_init = 0x2DA8B3B4,};
enum MACRO___ASSERT {__ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES = 0,};
enum MACRO___DARWIN {__DARWIN_ONLY_64_BIT_INO_T = 1,__DARWIN_ONLY_UNIX_CONFORMANCE = 1,__DARWIN_ONLY_VERS_1050 = 1,__DARWIN_UNIX03 = 1,__DARWIN_64_BIT_INO_T = 1,__DARWIN_VERS_1050 = 1,__DARWIN_NON_CANCELABLE = 0,__DARWIN_C_ANSI = 4096,__DARWIN_C_FULL = 900000,};
enum MACRO___ENABLE {__ENABLE_LEGACY_IPHONE_AVAILABILITY = 1,};
enum MACRO___IPHONE {__IPHONE_2_0 = 20000,__IPHONE_2_1 = 20100,__IPHONE_2_2 = 20200,__IPHONE_3_0 = 30000,__IPHONE_3_1 = 30100,__IPHONE_3_2 = 30200,__IPHONE_4_0 = 40000,__IPHONE_4_1 = 40100,__IPHONE_4_2 = 40200,__IPHONE_4_3 = 40300,__IPHONE_5_0 = 50000,__IPHONE_5_1 = 50100,__IPHONE_6_0 = 60000,__IPHONE_6_1 = 60100,__IPHONE_7_0 = 70000,__IPHONE_7_1 = 70100,__IPHONE_8_0 = 80000,__IPHONE_8_1 = 80100,__IPHONE_8_2 = 80200,__IPHONE_8_3 = 80300,__IPHONE_8_4 = 80400,__IPHONE_9_0 = 90000,__IPHONE_9_1 = 90100,__IPHONE_9_2 = 90200,__IPHONE_9_3 = 90300,__IPHONE_10_0 = 100000,__IPHONE_10_1 = 100100,__IPHONE_10_2 = 100200,__IPHONE_10_3 = 100300,__IPHONE_11_0 = 110000,__IPHONE_11_1 = 110100,__IPHONE_11_2 = 110200,__IPHONE_11_3 = 110300,__IPHONE_11_4 = 110400,__IPHONE_12_0 = 120000,__IPHONE_12_1 = 120100,__IPHONE_12_2 = 120200,__IPHONE_12_3 = 120300,__IPHONE_12_4 = 120400,__IPHONE_13_0 = 130000,__IPHONE_13_1 = 130100,__IPHONE_13_2 = 130200,__IPHONE_13_3 = 130300,__IPHONE_13_4 = 130400,__IPHONE_13_5 = 130500,__IPHONE_13_6 = 130600,__IPHONE_13_7 = 130700,__IPHONE_14_0 = 140000,};
enum MACRO___NSTEXT {__NSTEXT_SHARED_SECTION__ = 1,};
enum MACRO_argument {no_argument = 0,required_argument = 1,optional_argument = 2,};
enum MCSessionState {MCSessionStateNotConnected = 0x0,MCSessionStateConnecting = 0x1,MCSessionStateConnected = 0x2,};
typedef void (*MIDINotifyProc)( MIDINotification *, void *);
enum MIDIObjectType {kMIDIObjectType_Other = 0xFFFFFFFF,kMIDIObjectType_Device = 0x0,kMIDIObjectType_Entity = 0x1,kMIDIObjectType_Source = 0x2,kMIDIObjectType_Destination = 0x3,kMIDIObjectType_ExternalDevice = 0x10,kMIDIObjectType_ExternalEntity = 0x11,kMIDIObjectType_ExternalSource = 0x12,kMIDIObjectType_ExternalDestination = 0x13,};
enum MIDIProtocolID {kMIDIProtocol_1_0 = 0x1,kMIDIProtocol_2_0 = 0x2,};
enum MKOverlayLevel {MKOverlayLevelAboveRoads = 0x0,MKOverlayLevelAboveLabels = 0x1,};
enum MLCPaddingType {MLCPaddingTypeZero = 0x0,MLCPaddingTypeReflect = 0x1,MLCPaddingTypeSymmetric = 0x2,MLCPaddingTypeConstant = 0x3,};
enum MLCPoolingType {MLCPoolingTypeMax = 0x1,MLCPoolingTypeAverage = 0x2,MLCPoolingTypeL2Norm = 0x3,MLCPoolingTypeCount = 0x4,};
enum MLComputeUnits {MLComputeUnitsCPUOnly = 0x0,MLComputeUnitsCPUAndGPU = 0x1,MLComputeUnitsAll = 0x2,};
enum MPSCNNLossType {MPSCNNLossTypeMeanAbsoluteError = 0x0,MPSCNNLossTypeMeanSquaredError = 0x1,MPSCNNLossTypeSoftMaxCrossEntropy = 0x2,MPSCNNLossTypeSigmoidCrossEntropy = 0x3,MPSCNNLossTypeCategoricalCrossEntropy = 0x4,MPSCNNLossTypeHinge = 0x5,MPSCNNLossTypeHuber = 0x6,MPSCNNLossTypeCosineDistance = 0x7,MPSCNNLossTypeLog = 0x8,MPSCNNLossTypeKullbackLeiblerDivergence = 0x9,MPSCNNLossTypeCount = 0xA,};
enum MPSPolygonType {MPSPolygonTypeTriangle = 0x0,MPSPolygonTypeQuadrilateral = 0x1,};
enum MPSRNNMatrixId {MPSRNNMatrixIdSingleGateInputWeights = 0x0,MPSRNNMatrixIdSingleGateRecurrentWeights = 0x1,MPSRNNMatrixIdSingleGateBiasTerms = 0x2,MPSRNNMatrixIdLSTMInputGateInputWeights = 0x3,MPSRNNMatrixIdLSTMInputGateRecurrentWeights = 0x4,MPSRNNMatrixIdLSTMInputGateMemoryWeights = 0x5,MPSRNNMatrixIdLSTMInputGateBiasTerms = 0x6,MPSRNNMatrixIdLSTMForgetGateInputWeights = 0x7,MPSRNNMatrixIdLSTMForgetGateRecurrentWeights = 0x8,MPSRNNMatrixIdLSTMForgetGateMemoryWeights = 0x9,MPSRNNMatrixIdLSTMForgetGateBiasTerms = 0xA,MPSRNNMatrixIdLSTMMemoryGateInputWeights = 0xB,MPSRNNMatrixIdLSTMMemoryGateRecurrentWeights = 0xC,MPSRNNMatrixIdLSTMMemoryGateMemoryWeights = 0xD,MPSRNNMatrixIdLSTMMemoryGateBiasTerms = 0xE,MPSRNNMatrixIdLSTMOutputGateInputWeights = 0xF,MPSRNNMatrixIdLSTMOutputGateRecurrentWeights = 0x10,MPSRNNMatrixIdLSTMOutputGateMemoryWeights = 0x11,MPSRNNMatrixIdLSTMOutputGateBiasTerms = 0x12,MPSRNNMatrixIdGRUInputGateInputWeights = 0x13,MPSRNNMatrixIdGRUInputGateRecurrentWeights = 0x14,MPSRNNMatrixIdGRUInputGateBiasTerms = 0x15,MPSRNNMatrixIdGRURecurrentGateInputWeights = 0x16,MPSRNNMatrixIdGRURecurrentGateRecurrentWeights = 0x17,MPSRNNMatrixIdGRURecurrentGateBiasTerms = 0x18,MPSRNNMatrixIdGRUOutputGateInputWeights = 0x19,MPSRNNMatrixIdGRUOutputGateRecurrentWeights = 0x1A,MPSRNNMatrixIdGRUOutputGateInputGateWeights = 0x1B,MPSRNNMatrixIdGRUOutputGateBiasTerms = 0x1C,MPSRNNMatrixId_count = 0x1D,};
enum MPSRayDataType {MPSRayDataTypeOriginDirection = 0x0,MPSRayDataTypeOriginMinDistanceDirectionMaxDistance = 0x1,MPSRayDataTypeOriginMaskDirectionMaxDistance = 0x2,MPSRayDataTypePackedOriginDirection = 0x3,};
enum MTLBlendFactor {MTLBlendFactorZero = 0x0,MTLBlendFactorOne = 0x1,MTLBlendFactorSourceColor = 0x2,MTLBlendFactorOneMinusSourceColor = 0x3,MTLBlendFactorSourceAlpha = 0x4,MTLBlendFactorOneMinusSourceAlpha = 0x5,MTLBlendFactorDestinationColor = 0x6,MTLBlendFactorOneMinusDestinationColor = 0x7,MTLBlendFactorDestinationAlpha = 0x8,MTLBlendFactorOneMinusDestinationAlpha = 0x9,MTLBlendFactorSourceAlphaSaturated = 0xA,MTLBlendFactorBlendColor = 0xB,MTLBlendFactorOneMinusBlendColor = 0xC,MTLBlendFactorBlendAlpha = 0xD,MTLBlendFactorOneMinusBlendAlpha = 0xE,MTLBlendFactorSource1Color = 0xF,MTLBlendFactorOneMinusSource1Color = 0x10,MTLBlendFactorSource1Alpha = 0x11,MTLBlendFactorOneMinusSource1Alpha = 0x12,};
enum MTLLibraryType {MTLLibraryTypeExecutable = 0x0,MTLLibraryTypeDynamic = 0x1,};
enum MTLPixelFormat {MTLPixelFormatInvalid = 0x0,MTLPixelFormatA8Unorm = 0x1,MTLPixelFormatR8Unorm = 0xA,MTLPixelFormatR8Unorm_sRGB = 0xB,MTLPixelFormatR8Snorm = 0xC,MTLPixelFormatR8Uint = 0xD,MTLPixelFormatR8Sint = 0xE,MTLPixelFormatR16Unorm = 0x14,MTLPixelFormatR16Snorm = 0x16,MTLPixelFormatR16Uint = 0x17,MTLPixelFormatR16Sint = 0x18,MTLPixelFormatR16Float = 0x19,MTLPixelFormatRG8Unorm = 0x1E,MTLPixelFormatRG8Unorm_sRGB = 0x1F,MTLPixelFormatRG8Snorm = 0x20,MTLPixelFormatRG8Uint = 0x21,MTLPixelFormatRG8Sint = 0x22,MTLPixelFormatB5G6R5Unorm = 0x28,MTLPixelFormatA1BGR5Unorm = 0x29,MTLPixelFormatABGR4Unorm = 0x2A,MTLPixelFormatBGR5A1Unorm = 0x2B,MTLPixelFormatR32Uint = 0x35,MTLPixelFormatR32Sint = 0x36,MTLPixelFormatR32Float = 0x37,MTLPixelFormatRG16Unorm = 0x3C,MTLPixelFormatRG16Snorm = 0x3E,MTLPixelFormatRG16Uint = 0x3F,MTLPixelFormatRG16Sint = 0x40,MTLPixelFormatRG16Float = 0x41,MTLPixelFormatRGBA8Unorm = 0x46,MTLPixelFormatRGBA8Unorm_sRGB = 0x47,MTLPixelFormatRGBA8Snorm = 0x48,MTLPixelFormatRGBA8Uint = 0x49,MTLPixelFormatRGBA8Sint = 0x4A,MTLPixelFormatBGRA8Unorm = 0x50,MTLPixelFormatBGRA8Unorm_sRGB = 0x51,MTLPixelFormatRGB10A2Unorm = 0x5A,MTLPixelFormatRGB10A2Uint = 0x5B,MTLPixelFormatRG11B10Float = 0x5C,MTLPixelFormatRGB9E5Float = 0x5D,MTLPixelFormatBGR10A2Unorm = 0x5E,MTLPixelFormatBGR10_XR = 0x22A,MTLPixelFormatBGR10_XR_sRGB = 0x22B,MTLPixelFormatRG32Uint = 0x67,MTLPixelFormatRG32Sint = 0x68,MTLPixelFormatRG32Float = 0x69,MTLPixelFormatRGBA16Unorm = 0x6E,MTLPixelFormatRGBA16Snorm = 0x70,MTLPixelFormatRGBA16Uint = 0x71,MTLPixelFormatRGBA16Sint = 0x72,MTLPixelFormatRGBA16Float = 0x73,MTLPixelFormatBGRA10_XR = 0x228,MTLPixelFormatBGRA10_XR_sRGB = 0x229,MTLPixelFormatRGBA32Uint = 0x7B,MTLPixelFormatRGBA32Sint = 0x7C,MTLPixelFormatRGBA32Float = 0x7D,MTLPixelFormatBC1_RGBA = 0x82,MTLPixelFormatBC1_RGBA_sRGB = 0x83,MTLPixelFormatBC2_RGBA = 0x84,MTLPixelFormatBC2_RGBA_sRGB = 0x85,MTLPixelFormatBC3_RGBA = 0x86,MTLPixelFormatBC3_RGBA_sRGB = 0x87,MTLPixelFormatBC4_RUnorm = 0x8C,MTLPixelFormatBC4_RSnorm = 0x8D,MTLPixelFormatBC5_RGUnorm = 0x8E,MTLPixelFormatBC5_RGSnorm = 0x8F,MTLPixelFormatBC6H_RGBFloat = 0x96,MTLPixelFormatBC6H_RGBUfloat = 0x97,MTLPixelFormatBC7_RGBAUnorm = 0x98,MTLPixelFormatBC7_RGBAUnorm_sRGB = 0x99,MTLPixelFormatPVRTC_RGB_2BPP = 0xA0,MTLPixelFormatPVRTC_RGB_2BPP_sRGB = 0xA1,MTLPixelFormatPVRTC_RGB_4BPP = 0xA2,MTLPixelFormatPVRTC_RGB_4BPP_sRGB = 0xA3,MTLPixelFormatPVRTC_RGBA_2BPP = 0xA4,MTLPixelFormatPVRTC_RGBA_2BPP_sRGB = 0xA5,MTLPixelFormatPVRTC_RGBA_4BPP = 0xA6,MTLPixelFormatPVRTC_RGBA_4BPP_sRGB = 0xA7,MTLPixelFormatEAC_R11Unorm = 0xAA,MTLPixelFormatEAC_R11Snorm = 0xAC,MTLPixelFormatEAC_RG11Unorm = 0xAE,MTLPixelFormatEAC_RG11Snorm = 0xB0,MTLPixelFormatEAC_RGBA8 = 0xB2,MTLPixelFormatEAC_RGBA8_sRGB = 0xB3,MTLPixelFormatETC2_RGB8 = 0xB4,MTLPixelFormatETC2_RGB8_sRGB = 0xB5,MTLPixelFormatETC2_RGB8A1 = 0xB6,MTLPixelFormatETC2_RGB8A1_sRGB = 0xB7,MTLPixelFormatASTC_4x4_sRGB = 0xBA,MTLPixelFormatASTC_5x4_sRGB = 0xBB,MTLPixelFormatASTC_5x5_sRGB = 0xBC,MTLPixelFormatASTC_6x5_sRGB = 0xBD,MTLPixelFormatASTC_6x6_sRGB = 0xBE,MTLPixelFormatASTC_8x5_sRGB = 0xC0,MTLPixelFormatASTC_8x6_sRGB = 0xC1,MTLPixelFormatASTC_8x8_sRGB = 0xC2,MTLPixelFormatASTC_10x5_sRGB = 0xC3,MTLPixelFormatASTC_10x6_sRGB = 0xC4,MTLPixelFormatASTC_10x8_sRGB = 0xC5,MTLPixelFormatASTC_10x10_sRGB = 0xC6,MTLPixelFormatASTC_12x10_sRGB = 0xC7,MTLPixelFormatASTC_12x12_sRGB = 0xC8,MTLPixelFormatASTC_4x4_LDR = 0xCC,MTLPixelFormatASTC_5x4_LDR = 0xCD,MTLPixelFormatASTC_5x5_LDR = 0xCE,MTLPixelFormatASTC_6x5_LDR = 0xCF,MTLPixelFormatASTC_6x6_LDR = 0xD0,MTLPixelFormatASTC_8x5_LDR = 0xD2,MTLPixelFormatASTC_8x6_LDR = 0xD3,MTLPixelFormatASTC_8x8_LDR = 0xD4,MTLPixelFormatASTC_10x5_LDR = 0xD5,MTLPixelFormatASTC_10x6_LDR = 0xD6,MTLPixelFormatASTC_10x8_LDR = 0xD7,MTLPixelFormatASTC_10x10_LDR = 0xD8,MTLPixelFormatASTC_12x10_LDR = 0xD9,MTLPixelFormatASTC_12x12_LDR = 0xDA,MTLPixelFormatASTC_4x4_HDR = 0xDE,MTLPixelFormatASTC_5x4_HDR = 0xDF,MTLPixelFormatASTC_5x5_HDR = 0xE0,MTLPixelFormatASTC_6x5_HDR = 0xE1,MTLPixelFormatASTC_6x6_HDR = 0xE2,MTLPixelFormatASTC_8x5_HDR = 0xE4,MTLPixelFormatASTC_8x6_HDR = 0xE5,MTLPixelFormatASTC_8x8_HDR = 0xE6,MTLPixelFormatASTC_10x5_HDR = 0xE7,MTLPixelFormatASTC_10x6_HDR = 0xE8,MTLPixelFormatASTC_10x8_HDR = 0xE9,MTLPixelFormatASTC_10x10_HDR = 0xEA,MTLPixelFormatASTC_12x10_HDR = 0xEB,MTLPixelFormatASTC_12x12_HDR = 0xEC,MTLPixelFormatGBGR422 = 0xF0,MTLPixelFormatBGRG422 = 0xF1,MTLPixelFormatDepth16Unorm = 0xFA,MTLPixelFormatDepth32Float = 0xFC,MTLPixelFormatStencil8 = 0xFD,MTLPixelFormatDepth24Unorm_Stencil8 = 0xFF,MTLPixelFormatDepth32Float_Stencil8 = 0x104,MTLPixelFormatX32_Stencil8 = 0x105,MTLPixelFormatX24_Stencil8 = 0x106,};
enum MTLStorageMode {MTLStorageModeShared = 0x0,MTLStorageModeManaged = 0x1,MTLStorageModePrivate = 0x2,MTLStorageModeMemoryless = 0x3,};
enum MTLStoreAction {MTLStoreActionDontCare = 0x0,MTLStoreActionStore = 0x1,MTLStoreActionMultisampleResolve = 0x2,MTLStoreActionStoreAndMultisampleResolve = 0x3,MTLStoreActionUnknown = 0x4,MTLStoreActionCustomSampleDepthStore = 0x5,};
enum MTLTextureType {MTLTextureType1D = 0x0,MTLTextureType1DArray = 0x1,MTLTextureType2D = 0x2,MTLTextureType2DArray = 0x3,MTLTextureType2DMultisample = 0x4,MTLTextureTypeCube = 0x5,MTLTextureTypeCubeArray = 0x6,MTLTextureType3D = 0x7,MTLTextureType2DMultisampleArray = 0x8,MTLTextureTypeTextureBuffer = 0x9,};
enum NCUpdateResult {NCUpdateResultNewData = 0x0,NCUpdateResultNoData = 0x1,NCUpdateResultFailed = 0x2,};
enum NEFilterAction {NEFilterActionInvalid = 0x0,NEFilterActionAllow = 0x1,NEFilterActionDrop = 0x2,NEFilterActionRemediate = 0x3,NEFilterActionFilterData = 0x4,};
enum NFCReaderError {NFCReaderErrorUnsupportedFeature = 0x1,NFCReaderErrorSecurityViolation = 0x2,NFCReaderErrorInvalidParameter = 0x3,NFCReaderErrorInvalidParameterLength = 0x4,NFCReaderErrorParameterOutOfBound = 0x5,NFCReaderErrorRadioDisabled = 0x6,NFCReaderTransceiveErrorTagConnectionLost = 0x64,NFCReaderTransceiveErrorRetryExceeded = 0x65,NFCReaderTransceiveErrorTagResponseError = 0x66,NFCReaderTransceiveErrorSessionInvalidated = 0x67,NFCReaderTransceiveErrorTagNotConnected = 0x68,NFCReaderTransceiveErrorPacketTooLong = 0x69,NFCReaderSessionInvalidationErrorUserCanceled = 0xC8,NFCReaderSessionInvalidationErrorSessionTimeout = 0xC9,NFCReaderSessionInvalidationErrorSessionTerminatedUnexpectedly = 0xCA,NFCReaderSessionInvalidationErrorSystemIsBusy = 0xCB,NFCReaderSessionInvalidationErrorFirstNDEFTagRead = 0xCC,NFCTagCommandConfigurationErrorInvalidParameters = 0x12C,NFCNdefReaderSessionErrorTagNotWritable = 0x190,NFCNdefReaderSessionErrorTagUpdateFailure = 0x191,NFCNdefReaderSessionErrorTagSizeTooSmall = 0x192,NFCNdefReaderSessionErrorZeroLengthMessage = 0x193,};
enum NLDistanceType {NLDistanceTypeCosine = 0x0,};
enum NSPostingStyle {NSPostWhenIdle = 0x1,NSPostASAP = 0x2,NSPostNow = 0x3,};
enum NSRoundingMode {NSRoundPlain = 0x0,NSRoundDown = 0x1,NSRoundUp = 0x2,NSRoundBankers = 0x3,};
enum NSStreamStatus {NSStreamStatusNotOpen = 0x0,NSStreamStatusOpening = 0x1,NSStreamStatusOpen = 0x2,NSStreamStatusReading = 0x3,NSStreamStatusWriting = 0x4,NSStreamStatusAtEnd = 0x5,NSStreamStatusClosed = 0x6,NSStreamStatusError = 0x7,};
struct NSSwappedFloat {unsigned int v;};
typedef double NSTimeInterval;
typedef unsigned long long NXSwappedFloat;
struct OpaqueFFTSetup;
struct OpaqueJSString;
enum PDFBorderStyle {kPDFBorderStyleSolid = 0x0,kPDFBorderStyleDashed = 0x1,kPDFBorderStyleBeveled = 0x2,kPDFBorderStyleInset = 0x3,kPDFBorderStyleUnderline = 0x4,};
enum PDFDisplayMode {kPDFDisplaySinglePage = 0x0,kPDFDisplaySinglePageContinuous = 0x1,kPDFDisplayTwoUp = 0x2,kPDFDisplayTwoUpContinuous = 0x3,};
struct PDFPagePrivate;
struct PDFViewPrivate;
enum PKShippingType {PKShippingTypeShipping = 0x0,PKShippingTypeDelivery = 0x1,PKShippingTypeStorePickup = 0x2,PKShippingTypeServicePickup = 0x3,};
enum SCNChamferMode {SCNChamferModeBoth = 0x0,SCNChamferModeFront = 0x1,SCNChamferModeBack = 0x2,};
typedef __SecIdentity *SecIdentityRef;
typedef __SecKeychain *SecKeychainRef;
typedef __SecPassword *SecPasswordRef;
enum SparseStatus_t {SparseStatusOK = 0x0,SparseFactorizationFailed = 0xFFFFFFFF,SparseMatrixIsSingular = 0xFFFFFFFE,SparseInternalError = 0xFFFFFFFD,SparseParameterError = 0xFFFFFFFC,SparseStatusReleased = 0x80000001,};
typedef short StyleParameter;
struct TimeBaseRecord;
struct UBreakIterator;
enum UCharDirection {U_LEFT_TO_RIGHT = 0x0,U_RIGHT_TO_LEFT = 0x1,U_EUROPEAN_NUMBER = 0x2,U_EUROPEAN_NUMBER_SEPARATOR = 0x3,U_EUROPEAN_NUMBER_TERMINATOR = 0x4,U_ARABIC_NUMBER = 0x5,U_COMMON_NUMBER_SEPARATOR = 0x6,U_BLOCK_SEPARATOR = 0x7,U_SEGMENT_SEPARATOR = 0x8,U_WHITE_SPACE_NEUTRAL = 0x9,U_OTHER_NEUTRAL = 0xA,U_LEFT_TO_RIGHT_EMBEDDING = 0xB,U_LEFT_TO_RIGHT_OVERRIDE = 0xC,U_RIGHT_TO_LEFT_ARABIC = 0xD,U_RIGHT_TO_LEFT_EMBEDDING = 0xE,U_RIGHT_TO_LEFT_OVERRIDE = 0xF,U_POP_DIRECTIONAL_FORMAT = 0x10,U_DIR_NON_SPACING_MARK = 0x11,U_BOUNDARY_NEUTRAL = 0x12,U_FIRST_STRONG_ISOLATE = 0x13,U_LEFT_TO_RIGHT_ISOLATE = 0x14,U_RIGHT_TO_LEFT_ISOLATE = 0x15,U_POP_DIRECTIONAL_ISOLATE = 0x16,U_CHAR_DIRECTION_COUNT = 0x17,};
enum UIDisplayGamut {UIDisplayGamutUnspecified = 0xFFFFFFFFFFFFFFFF,UIDisplayGamutSRGB = 0x0,UIDisplayGamutP3 = 0x1,};
enum UIEventSubtype {UIEventSubtypeNone = 0x0,UIEventSubtypeMotionShake = 0x1,UIEventSubtypeRemoteControlPlay = 0x64,UIEventSubtypeRemoteControlPause = 0x65,UIEventSubtypeRemoteControlStop = 0x66,UIEventSubtypeRemoteControlTogglePlayPause = 0x67,UIEventSubtypeRemoteControlNextTrack = 0x68,UIEventSubtypeRemoteControlPreviousTrack = 0x69,UIEventSubtypeRemoteControlBeginSeekingBackward = 0x6A,UIEventSubtypeRemoteControlEndSeekingBackward = 0x6B,UIEventSubtypeRemoteControlBeginSeekingForward = 0x6C,UIEventSubtypeRemoteControlEndSeekingForward = 0x6D,};
enum UIKeyboardType {UIKeyboardTypeDefault = 0x0,UIKeyboardTypeASCIICapable = 0x1,UIKeyboardTypeNumbersAndPunctuation = 0x2,UIKeyboardTypeURL = 0x3,UIKeyboardTypeNumberPad = 0x4,UIKeyboardTypePhonePad = 0x5,UIKeyboardTypeNamePhonePad = 0x6,UIKeyboardTypeEmailAddress = 0x7,UIKeyboardTypeDecimalPad = 0x8,UIKeyboardTypeTwitter = 0x9,UIKeyboardTypeWebSearch = 0xA,UIKeyboardTypeASCIICapableNumberPad = 0xB,UIKeyboardTypeAlphabet = 0x1,};
enum USentenceBreak {U_SB_OTHER = 0x0,U_SB_ATERM = 0x1,U_SB_CLOSE = 0x2,U_SB_FORMAT = 0x3,U_SB_LOWER = 0x4,U_SB_NUMERIC = 0x5,U_SB_OLETTER = 0x6,U_SB_SEP = 0x7,U_SB_SP = 0x8,U_SB_STERM = 0x9,U_SB_UPPER = 0xA,U_SB_CR = 0xB,U_SB_EXTEND = 0xC,U_SB_LF = 0xD,U_SB_SCONTINUE = 0xE,U_SB_COUNT = 0xF,};
typedef OpaqueVTFrameSilo *VTFrameSiloRef;
enum _Unwind_Action {_UA_SEARCH_PHASE = 0x1,_UA_CLEANUP_PHASE = 0x2,_UA_HANDLER_FRAME = 0x4,_UA_FORCE_UNWIND = 0x8,_UA_END_OF_STACK = 0x10,};
struct __CFBinaryHeap;
struct __CFDictionary;
struct __CFNetService;
struct __CFReadStream;
typedef int __CLPK_integer;
typedef int __CLPK_logical;
struct __CTTypesetter;
struct __SCBondStatus;
struct __SCNetworkSet;
struct __asl_object_s;
enum __ns_key_types {ns_kt_rsa = 0x1,ns_kt_dh = 0x2,ns_kt_dsa = 0x3,ns_kt_private = 0xFE,};
struct _printf_domain;
struct _xmlSchematron;
struct _xmlStreamCtxt;
struct _xmlTextReader;
struct _xmlTextWriter;
struct _xmlValidState;
enum acl_entry_id_t {ACL_FIRST_ENTRY = 0x0,ACL_NEXT_ENTRY = 0xFFFFFFFF,ACL_LAST_ENTRY = 0xFFFFFFFE,};
struct authunix_parms {unsigned int aup_time;char *aup_machname;int aup_uid;int aup_gid;unsigned int aup_len;int *aup_gids;};
typedef int clock_flavor_t;
typedef ether_header ether_header_t;
typedef fgetsigsinfo fgetsigsinfo_t;
struct fts5_tokenizer {int (*xCreate)(void *,  char **, int, Fts5Tokenizer **);void (*xDelete)(Fts5Tokenizer *);int (*xTokenize)(Fts5Tokenizer *, void *, int,  char *, int, int (*)(void *, int,  char *, int, int, int));};
typedef _htmlEntityDesc htmlEntityDesc;
struct internal_state;
typedef io_stat_info *io_stat_info_t;
struct kmod_reference {kmod_reference *next;kmod_info *info;};
typedef unsigned long long la_attribute_t;
struct mach_zone_name {char mzn_name[80];};
typedef NSObject *nw_interface_t;
enum nw_ws_opcode_t {nw_ws_opcode_invalid = 0xFFFFFFFF,nw_ws_opcode_cont = 0x0,nw_ws_opcode_text = 0x1,nw_ws_opcode_binary = 0x2,nw_ws_opcode_close = 0x8,nw_ws_opcode_ping = 0x9,nw_ws_opcode_pong = 0xA,};
typedef os_unfair_lock_s os_unfair_lock;
typedef OS_os_workgroup *os_workgroup_t;
typedef simd_packed_double2 packed_double2;
typedef simd_packed_double4 packed_double4;
typedef simd_packed_double8 packed_double8;
typedef simd_packed_float16 packed_float16;
typedef simd_packed_short16 packed_short16;
typedef simd_packed_short32 packed_short32;
typedef simd_packed_uchar16 packed_uchar16;
typedef simd_packed_uchar32 packed_uchar32;
typedef simd_packed_uchar64 packed_uchar64;
typedef simd_packed_ushort2 packed_ushort2;
typedef simd_packed_ushort4 packed_ushort4;
typedef simd_packed_ushort8 packed_ushort8;
typedef sa_endpoints sa_endpoints_t;
typedef NSObject *sec_identity_t;
typedef simd_ushort16 simd__ushort16;
typedef simd_ushort32 simd__ushort32;
struct sparse_m_float;
struct sqlite3_backup;
struct sqlite3_pcache;
typedef std____1__ratio_1__1000000000000000000_ std____1__atto;
typedef std____1__ratio_10__1_ std____1__deca;
typedef std____1__ratio_1__10_ std____1__deci;
enum std____1__errc {address_family_not_supported = 0x2F,address_in_use = 0x30,address_not_available = 0x31,already_connected = 0x38,argument_list_too_long = 0x7,argument_out_of_domain = 0x21,bad_address = 0xE,bad_file_descriptor = 0x9,bad_message = 0x5E,broken_pipe = 0x20,connection_aborted = 0x35,connection_already_in_progress = 0x25,connection_refused = 0x3D,connection_reset = 0x36,cross_device_link = 0x12,destination_address_required = 0x27,device_or_resource_busy = 0x10,directory_not_empty = 0x42,executable_format_error = 0x8,file_exists = 0x11,file_too_large = 0x1B,filename_too_long = 0x3F,function_not_supported = 0x4E,host_unreachable = 0x41,identifier_removed = 0x5A,illegal_byte_sequence = 0x5C,inappropriate_io_control_operation = 0x19,interrupted = 0x4,invalid_argument = 0x16,invalid_seek = 0x1D,io_error = 0x5,is_a_directory = 0x15,message_size = 0x28,network_down = 0x32,network_reset = 0x34,network_unreachable = 0x33,no_buffer_space = 0x37,no_child_process = 0xA,no_link = 0x61,no_lock_available = 0x4D,no_message_available = 0x60,no_message = 0x5B,no_protocol_option = 0x2A,no_space_on_device = 0x1C,no_stream_resources = 0x62,no_such_device_or_address = 0x6,no_such_device = 0x13,no_such_file_or_directory = 0x2,no_such_process = 0x3,not_a_directory = 0x14,not_a_socket = 0x26,not_a_stream = 0x63,not_connected = 0x39,not_enough_memory = 0xC,not_supported = 0x2D,operation_canceled = 0x59,operation_in_progress = 0x24,operation_not_permitted = 0x1,operation_not_supported = 0x66,operation_would_block = 0x23,owner_dead = 0x69,permission_denied = 0xD,protocol_error = 0x64,protocol_not_supported = 0x2B,read_only_file_system = 0x1E,resource_deadlock_would_occur = 0xB,resource_unavailable_try_again = 0x23,result_out_of_range = 0x22,state_not_recoverable = 0x68,stream_timeout = 0x65,text_file_busy = 0x1A,timed_out = 0x3C,too_many_files_open_in_system = 0x17,too_many_files_open = 0x18,too_many_links = 0x1F,too_many_symbolic_link_levels = 0x3E,value_too_large = 0x54,wrong_protocol_type = 0x29,};
typedef std____1__ratio_1000000000__1_ std____1__giga;
typedef std____1__ratio_1000__1_ std____1__kilo;
typedef std____1__ratio_1000000__1_ std____1__mega;
typedef std____1__ratio_1__1000000000_ std____1__nano;
typedef std____1__ratio_1000000000000000__1_ std____1__peta;
typedef std____1__ratio_1__1000000000000_ std____1__pico;
typedef std____1__ratio_1000000000000__1_ std____1__tera;
typedef std____1__basic_ios_wchar_t_ std____1__wios;
struct std__exception {std__exception_vtbl *__vftable ;};
struct std__nothrow_t {};
typedef long long std__nullptr_t;
typedef task_vm_info *task_vm_info_t;
struct tlv_descriptor {void *(*thunk)(tlv_descriptor *);unsigned long long key;unsigned long long offset;};
struct unw_addr_space;
typedef vDSP_DFT_SetupStruct *vDSP_DFT_Setup;
enum vImageARGBType {kvImageARGB8888 = 0x0,kvImageARGB16U = 0x1,kvImageARGB16Q12 = 0x2,};
typedef simd_double2 vector_double2;
typedef simd_double3 vector_double3;
typedef simd_double4 vector_double4;
typedef simd_double8 vector_double8;
typedef simd_float16 vector_float16;
typedef simd_short16 vector_short16;
typedef simd_short32 vector_short32;
typedef simd_uchar16 vector_uchar16;
typedef simd_uchar32 vector_uchar32;
typedef simd_ushort2 vector_ushort2;
typedef simd_ushort3 vector_ushort3;
typedef simd_ushort4 vector_ushort4;
typedef simd_ushort8 vector_ushort8;
typedef unsigned long long vm_object_id_t;
typedef int *vm_page_info_t;
typedef void (*warningSAXFunc)(void *,  char *, ...);
typedef _xmlDOMWrapCtxt xmlDOMWrapCtxt;
enum xmlElementType {XML_ELEMENT_NODE = 0x1,XML_ATTRIBUTE_NODE = 0x2,XML_TEXT_NODE = 0x3,XML_CDATA_SECTION_NODE = 0x4,XML_ENTITY_REF_NODE = 0x5,XML_ENTITY_NODE = 0x6,XML_PI_NODE = 0x7,XML_COMMENT_NODE = 0x8,XML_DOCUMENT_NODE = 0x9,XML_DOCUMENT_TYPE_NODE = 0xA,XML_DOCUMENT_FRAG_NODE = 0xB,XML_NOTATION_NODE = 0xC,XML_HTML_DOCUMENT_NODE = 0xD,XML_DTD_NODE = 0xE,XML_ELEMENT_DECL = 0xF,XML_ATTRIBUTE_DECL = 0x10,XML_ENTITY_DECL = 0x11,XML_NAMESPACE_DECL = 0x12,XML_XINCLUDE_START = 0x13,XML_XINCLUDE_END = 0x14,XML_DOCB_DOCUMENT_NODE = 0x15,};
typedef _xmlEnumeration xmlEnumeration;
enum xmlErrorDomain {XML_FROM_NONE = 0x0,XML_FROM_PARSER = 0x1,XML_FROM_TREE = 0x2,XML_FROM_NAMESPACE = 0x3,XML_FROM_DTD = 0x4,XML_FROM_HTML = 0x5,XML_FROM_MEMORY = 0x6,XML_FROM_OUTPUT = 0x7,XML_FROM_IO = 0x8,XML_FROM_FTP = 0x9,XML_FROM_HTTP = 0xA,XML_FROM_XINCLUDE = 0xB,XML_FROM_XPATH = 0xC,XML_FROM_XPOINTER = 0xD,XML_FROM_REGEXP = 0xE,XML_FROM_DATATYPE = 0xF,XML_FROM_SCHEMASP = 0x10,XML_FROM_SCHEMASV = 0x11,XML_FROM_RELAXNGP = 0x12,XML_FROM_RELAXNGV = 0x13,XML_FROM_CATALOG = 0x14,XML_FROM_C14N = 0x15,XML_FROM_XSLT = 0x16,XML_FROM_VALID = 0x17,XML_FROM_CHECK = 0x18,XML_FROM_WRITER = 0x19,XML_FROM_MODULE = 0x1A,XML_FROM_I18N = 0x1B,XML_FROM_SCHEMATRONV = 0x1C,XML_FROM_BUFFER = 0x1D,XML_FROM_URI = 0x1E,};
enum xmlExpNodeType {XML_EXP_EMPTY = 0x0,XML_EXP_FORBID = 0x1,XML_EXP_ATOM = 0x2,XML_EXP_SEQ = 0x3,XML_EXP_OR = 0x4,XML_EXP_COUNT = 0x5,};
typedef _xmlGlobalState xmlGlobalState;
typedef _xmlLocationSet xmlLocationSet;
typedef _xmlParserInput xmlParserInput;
enum xmlReaderTypes {XML_READER_TYPE_NONE = 0x0,XML_READER_TYPE_ELEMENT = 0x1,XML_READER_TYPE_ATTRIBUTE = 0x2,XML_READER_TYPE_TEXT = 0x3,XML_READER_TYPE_CDATA = 0x4,XML_READER_TYPE_ENTITY_REFERENCE = 0x5,XML_READER_TYPE_ENTITY = 0x6,XML_READER_TYPE_PROCESSING_INSTRUCTION = 0x7,XML_READER_TYPE_COMMENT = 0x8,XML_READER_TYPE_DOCUMENT = 0x9,XML_READER_TYPE_DOCUMENT_TYPE = 0xA,XML_READER_TYPE_DOCUMENT_FRAGMENT = 0xB,XML_READER_TYPE_NOTATION = 0xC,XML_READER_TYPE_WHITESPACE = 0xD,XML_READER_TYPE_SIGNIFICANT_WHITESPACE = 0xE,XML_READER_TYPE_END_ELEMENT = 0xF,XML_READER_TYPE_END_ENTITY = 0x10,XML_READER_TYPE_XML_DECLARATION = 0x11,};
typedef struct _xmlRegExecCtxt xmlRegExecCtxt;
typedef _xmlSchemaAnnot xmlSchemaAnnot;
typedef _xmlSchemaFacet xmlSchemaFacet;
typedef _xmlXPathObject xmlXPathObject;
struct ypbind_binding {char ypbind_binding_addr[4];char ypbind_binding_port[2];};
typedef AAFieldKeySet_impl *AAFieldKeySet;
struct AAHeader_impl;
enum ADClientError {ADClientErrorUnknown = 0x0,ADClientErrorTrackingRestrictedOrDenied = 0x1,ADClientErrorLimitAdTracking = 0x1,ADClientErrorMissingData = 0x2,ADClientErrorCorruptResponse = 0x3,ADClientErrorRequestClientError = 0x4,ADClientErrorRequestServerError = 0x5,ADClientErrorRequestNetworkError = 0x6,ADClientErrorUnsupportedPlatform = 0x7,};
typedef void *AURenderBlock;
typedef OpaqueAudioQueue *AudioQueueRef;
struct BigEndianLong {long long bigEndianValue;};
struct Block_byref_2 {void (*byref_keep)(Block_byref *, Block_byref *);void (*byref_destroy)(Block_byref *);};
struct Block_byref_3 { char *layout;};
typedef CC_SHA256state_st CC_SHA256_CTX;
typedef CC_SHA512state_st CC_SHA512_CTX;
typedef __CFCalendar *CFCalendarRef;
typedef __CFMachPort *CFMachPortRef;
typedef unsigned long long CFOptionFlags;
enum CFSocketError {kCFSocketSuccess = 0x0,kCFSocketError = 0xFFFFFFFFFFFFFFFF,kCFSocketTimeout = 0xFFFFFFFFFFFFFFFE,};
typedef  __CFTimeZone *CFTimeZoneRef;
typedef CGFunction *CGFunctionRef;
typedef CGGradient *CGGradientRef;
struct CGImageSource;
typedef CGPDFArray *CGPDFArrayRef;
struct CGPDFDocument;
enum CLRegionState {CLRegionStateUnknown = 0x0,CLRegionStateInside = 0x1,CLRegionStateOutside = 0x2,};
typedef void *CMGyroHandler;
typedef OpaqueCMTimebase *CMTimebaseRef;
enum CNContactType {CNContactTypePerson = 0x0,CNContactTypeOrganization = 0x1,};
typedef DSPSplitComplex COMPLEX_SPLIT;
typedef EAGLContext *CVEAGLContext;
typedef short CharParameter;
typedef wide CompTimeValue;
typedef _DNSServiceRef_t *DNSServiceRef;
enum EKEventStatus {EKEventStatusNone = 0x0,EKEventStatusConfirmed = 0x1,EKEventStatusTentative = 0x2,EKEventStatusCanceled = 0x3,};
struct Fts5Tokenizer;
struct GCEulerAngles {double pitch;double yaw;double roll;};
enum GKSessionMode {GKSessionModeServer = 0x0,GKSessionModeClient = 0x1,GKSessionModePeer = 0x2,};
typedef _GLKQuaternion GLKQuaternion;
typedef void *GammaFunction;
enum INAccountType {INAccountTypeUnknown = 0x0,INAccountTypeChecking = 0x1,INAccountTypeCredit = 0x2,INAccountTypeDebit = 0x3,INAccountTypeInvestment = 0x4,INAccountTypeMortgage = 0x5,INAccountTypePrepaid = 0x6,INAccountTypeSaving = 0x7,};
enum INBalanceType {INBalanceTypeUnknown = 0x0,INBalanceTypeMoney = 0x1,INBalanceTypePoints = 0x2,INBalanceTypeMiles = 0x3,};
enum INMessageType {INMessageTypeUnspecified = 0x0,INMessageTypeText = 0x1,INMessageTypeAudio = 0x2,INMessageTypeDigitalTouch = 0x3,INMessageTypeHandwriting = 0x4,INMessageTypeSticker = 0x5,INMessageTypeTapbackLiked = 0x6,INMessageTypeTapbackDisliked = 0x7,INMessageTypeTapbackEmphasized = 0x8,INMessageTypeTapbackLoved = 0x9,INMessageTypeTapbackQuestioned = 0xA,INMessageTypeTapbackLaughed = 0xB,INMessageTypeMediaCalendar = 0xC,INMessageTypeMediaLocation = 0xD,INMessageTypeMediaAddressCard = 0xE,INMessageTypeMediaImage = 0xF,INMessageTypeMediaVideo = 0x10,INMessageTypeMediaPass = 0x11,INMessageTypeMediaAudio = 0x12,INMessageTypePaymentSent = 0x13,INMessageTypePaymentRequest = 0x14,INMessageTypePaymentNote = 0x15,INMessageTypeAnimoji = 0x16,INMessageTypeActivitySnippet = 0x17,INMessageTypeFile = 0x18,INMessageTypeLink = 0x19,};
enum MACRO_ACCESSX {ACCESSX_MAX_DESCRIPTORS = 100,ACCESSX_MAX_TABLESIZE = 16384,};
enum MACRO_AF_COIP {AF_COIP = 20,AF_CNT = 21,};
enum MACRO_AF_NDRV {AF_NDRV = 27,AF_ISDN = 28,};
enum MACRO_ALC_ASA {ALC_ASA_REVERB_ON = 1920364398,ALC_ASA_REVERB_GLOBAL_LEVEL = 1920362348,ALC_ASA_REVERB_ROOM_TYPE = 1920365172,ALC_ASA_REVERB_ROOM_TYPE_SmallRoom = 0,ALC_ASA_REVERB_ROOM_TYPE_MediumRoom = 1,ALC_ASA_REVERB_ROOM_TYPE_LargeRoom = 2,ALC_ASA_REVERB_ROOM_TYPE_MediumHall = 3,ALC_ASA_REVERB_ROOM_TYPE_LargeHall = 4,ALC_ASA_REVERB_ROOM_TYPE_Plate = 5,ALC_ASA_REVERB_ROOM_TYPE_MediumChamber = 6,ALC_ASA_REVERB_ROOM_TYPE_LargeChamber = 7,ALC_ASA_REVERB_ROOM_TYPE_Cathedral = 8,ALC_ASA_REVERB_ROOM_TYPE_LargeRoom2 = 9,ALC_ASA_REVERB_ROOM_TYPE_MediumHall2 = 10,ALC_ASA_REVERB_ROOM_TYPE_MediumHall3 = 11,ALC_ASA_REVERB_ROOM_TYPE_LargeHall2 = 12,ALC_ASA_REVERB_EQ_GAIN = 1920361831,ALC_ASA_REVERB_EQ_BANDWITH = 1920361826,ALC_ASA_REVERB_EQ_FREQ = 1920361830,ALC_ASA_REVERB_SEND_LEVEL = 1920365420,ALC_ASA_OCCLUSION = 1868784492,ALC_ASA_OBSTRUCTION = 1868723060,};
enum MACRO_B115200 {B115200 = 115200,};
enum MACRO_B230400 {B230400 = 230400,};
enum MACRO_BLKTYPE {BLKTYPE = 52,};
enum MACRO_CA_WARN {CA_WARN_DEPRECATED = 1,};
enum MACRO_CGFLOAT {CGFLOAT_IS_DOUBLE = 1,CGFLOAT_DEFINED = 1,};
enum MACRO_CHRTYPE {CHRTYPE = 51,};
enum MACRO_CIGNORE {CIGNORE = 0x1,CSIZE = 0x300,};
enum MACRO_CLOEXEC {F_DUPFD_CLOEXEC = 67,FD_CLOEXEC = 1,};
enum MACRO_CODESET {CODESET = 0,};
enum MACRO_CONNECT {CONNECT_RESUME_ON_READ_WRITE = 0x1,CONNECT_DATA_IDEMPOTENT = 0x2,CONNECT_DATA_AUTHENTICATED = 0x4,};
enum MACRO_CTLFLAG {CTLFLAG_RD = 0x80000000,CTLFLAG_WR = 0x40000000,CTLFLAG_NOLOCK = 0x20000000,CTLFLAG_ANYBODY = 0x10000000,CTLFLAG_SECURE = 0x8000000,CTLFLAG_MASKED = 0x4000000,CTLFLAG_NOAUTO = 0x2000000,CTLFLAG_KERN = 0x1000000,CTLFLAG_LOCKED = 0x800000,CTLFLAG_OID2 = 0x400000,};
enum MACRO_CTLTYPE {CTLTYPE = 0xF,};
enum MACRO_DIRTYPE {DIRTYPE = 53,};
enum MACRO_DYNAMIC {DYNAMIC_TARGETS_ENABLED = 0,};
enum MACRO_EBADMSG {EBADMSG = 94,};
enum MACRO_EBADRPC {EBADRPC = 72,};
enum MACRO_EDEADLK {EDEADLK = 11,};
enum MACRO_EDEVERR {EDEVERR = 83,};
enum MACRO_EISCONN {EISCONN = 56,};
enum MACRO_ENOATTR {ENOATTR = 93,};
enum MACRO_ENOBUFS {ENOBUFS = 55,};
enum MACRO_ENODATA {ENODATA = 96,};
enum MACRO_ENOLINK {ENOLINK = 97,};
enum MACRO_ENOTBLK {ENOTBLK = 15,EBUSY = 16,};
enum MACRO_ENOTDIR {ENOTDIR = 20,};
enum MACRO_ENOTSUP {ENOTSUP = 45,};
enum MACRO_EPWROFF {EPWROFF = 82,};
enum MACRO_EREMOTE {EREMOTE = 71,};
enum MACRO_ETXTBSY {ETXTBSY = 26,};
enum MACRO_EXC_ARM {EXC_ARM_UNDEFINED = 1,EXC_ARM_FP_UNDEFINED = 0,EXC_ARM_FP_IO = 1,EXC_ARM_FP_DZ = 2,EXC_ARM_FP_OF = 3,EXC_ARM_FP_UF = 4,EXC_ARM_FP_IX = 5,EXC_ARM_FP_ID = 6,EXC_ARM_DA_ALIGN = 257,EXC_ARM_DA_DEBUG = 258,EXC_ARM_SP_ALIGN = 259,EXC_ARM_SWP = 260,EXC_ARM_PAC_FAIL = 261,EXC_ARM_BREAKPOINT = 1,EXC_BAD_ACCESS = 1,EXC_BAD_INSTRUCTION = 2,EXC_ARITHMETIC = 3,EXC_EMULATION = 4,EXC_SOFTWARE = 5,EXC_BREAKPOINT = 6,EXC_SYSCALL = 7,EXC_MACH_SYSCALL = 8,EXC_RPC_ALERT = 9,EXC_CRASH = 10,EXC_RESOURCE = 11,EXC_GUARD = 12,EXC_CORPSE_NOTIFY = 13,EXC_CORPSE_VARIANT_BIT = 256,};
enum MACRO_F_DUPFD {F_DUPFD = 0,F_GETFD = 1,F_SETFD = 2,F_GETFL = 3,F_SETFL = 4,F_GETOWN = 5,F_SETOWN = 6,F_GETLK = 7,F_SETLK = 8,F_SETLKW = 9,F_SETLKWTIMEOUT = 10,F_FLUSH_DATA = 40,F_CHKCLEAN = 41,F_PREALLOCATE = 42,F_SETSIZE = 43,F_RDADVISE = 44,F_RDAHEAD = 45,F_NOCACHE = 48,F_LOG2PHYS = 49,F_GETPATH = 50,F_FULLFSYNC = 51,F_PATHPKG_CHECK = 52,F_FREEZE_FS = 53,F_THAW_FS = 54,F_GLOBAL_NOCACHE = 55,F_ADDSIGS = 59,F_ADDFILESIGS = 61,F_NODIRECT = 62,F_GETPROTECTIONCLASS = 63,F_SETPROTECTIONCLASS = 64,F_LOG2PHYS_EXT = 65,F_GETLKPID = 66,F_SETBACKINGSTORE = 70,F_GETPATH_MTMINFO = 71,F_GETCODEDIR = 72,F_SETNOSIGPIPE = 73,F_GETNOSIGPIPE = 74,F_TRANSCODEKEY = 75,F_SINGLE_WRITER = 76,F_GETPROTECTIONLEVEL = 77,F_FINDSIGS = 78,F_ADDFILESIGS_FOR_DYLD_SIM = 83,F_BARRIERFSYNC = 85,F_ADDFILESIGS_RETURN = 97,F_CHECK_LV = 98,F_PUNCHHOLE = 99,F_TRIM_ACTIVE_FILE = 100,F_SPECULATIVE_READ = 101,F_GETPATH_NOFIRMLINK = 102,F_ADDFILESIGS_INFO = 103,F_ADDFILESUPPL = 104,F_GETSIGSINFO = 105,};
enum MACRO_F_RDLCK {F_RDLCK = 1,F_UNLCK = 2,F_WRLCK = 3,};
enum MACRO_GETNCNT {GETNCNT = 3,GETPID = 4,};
enum MACRO_GETZCNT {GETZCNT = 7,SETVAL = 8,};
enum MACRO_IFRTYPE {IFRTYPE_FUNCTIONAL_UNKNOWN = 0,IFRTYPE_FUNCTIONAL_LOOPBACK = 1,IFRTYPE_FUNCTIONAL_WIRED = 2,IFRTYPE_FUNCTIONAL_WIFI_INFRA = 3,IFRTYPE_FUNCTIONAL_WIFI_AWDL = 4,IFRTYPE_FUNCTIONAL_CELLULAR = 5,IFRTYPE_FUNCTIONAL_INTCOPROC = 6,IFRTYPE_FUNCTIONAL_COMPANIONLINK = 7,IFRTYPE_FUNCTIONAL_LAST = 7,};
enum MACRO_IF_WAKE {IF_WAKE_ON_MAGIC_PACKET = 0x1,};
enum MACRO_IMAGEIO {IMAGEIO_PNG_NO_FILTERS = 0x0,IMAGEIO_PNG_FILTER_NONE = 0x8,IMAGEIO_PNG_FILTER_SUB = 0x10,IMAGEIO_PNG_FILTER_UP = 0x20,IMAGEIO_PNG_FILTER_AVG = 0x40,IMAGEIO_PNG_FILTER_PAETH = 0x80,};
enum MACRO_INVALID {INVALID_SOCKET = -1,};
enum MACRO_IOCPARM {IOCPARM_MASK = 0x1FFF,};
enum MACRO_IP6FLOW {IP6FLOW_DSCP_MASK = 0xFC00000,IP6FLOW_DSCP_SHIFT = 0x16,};
enum MACRO_IPPROTO {IPPROTO_IP = 0,IPPROTO_HOPOPTS = 0,IPPROTO_ICMP = 1,IPPROTO_IGMP = 2,IPPROTO_GGP = 3,IPPROTO_IPV4 = 4,IPPROTO_TCP = 6,IPPROTO_ST = 7,IPPROTO_EGP = 8,IPPROTO_PIGP = 9,IPPROTO_RCCMON = 10,IPPROTO_NVPII = 11,IPPROTO_PUP = 12,IPPROTO_ARGUS = 13,IPPROTO_EMCON = 14,IPPROTO_XNET = 15,IPPROTO_CHAOS = 16,IPPROTO_UDP = 17,IPPROTO_MUX = 18,IPPROTO_MEAS = 19,IPPROTO_HMP = 20,IPPROTO_PRM = 21,IPPROTO_IDP = 22,IPPROTO_TRUNK1 = 23,IPPROTO_TRUNK2 = 24,IPPROTO_LEAF1 = 25,IPPROTO_LEAF2 = 26,IPPROTO_RDP = 27,IPPROTO_IRTP = 28,IPPROTO_TP = 29,IPPROTO_BLT = 30,IPPROTO_NSP = 31,IPPROTO_INP = 32,IPPROTO_SEP = 33,IPPROTO_3PC = 34,IPPROTO_IDPR = 35,IPPROTO_XTP = 36,IPPROTO_DDP = 37,IPPROTO_CMTP = 38,IPPROTO_TPXX = 39,IPPROTO_IL = 40,IPPROTO_IPV6 = 41,IPPROTO_SDRP = 42,IPPROTO_ROUTING = 43,IPPROTO_FRAGMENT = 44,IPPROTO_IDRP = 45,IPPROTO_RSVP = 46,IPPROTO_GRE = 47,IPPROTO_MHRP = 48,IPPROTO_BHA = 49,IPPROTO_ESP = 50,IPPROTO_AH = 51,IPPROTO_INLSP = 52,IPPROTO_SWIPE = 53,IPPROTO_NHRP = 54,IPPROTO_ICMPV6 = 58,IPPROTO_NONE = 59,IPPROTO_DSTOPTS = 60,IPPROTO_AHIP = 61,IPPROTO_CFTP = 62,IPPROTO_HELLO = 63,IPPROTO_SATEXPAK = 64,IPPROTO_KRYPTOLAN = 65,IPPROTO_RVD = 66,IPPROTO_IPPC = 67,IPPROTO_ADFS = 68,IPPROTO_SATMON = 69,IPPROTO_VISA = 70,IPPROTO_IPCV = 71,IPPROTO_CPNX = 72,IPPROTO_CPHB = 73,IPPROTO_WSN = 74,IPPROTO_PVP = 75,IPPROTO_BRSATMON = 76,IPPROTO_ND = 77,IPPROTO_WBMON = 78,IPPROTO_WBEXPAK = 79,IPPROTO_EON = 80,IPPROTO_VMTP = 81,IPPROTO_SVMTP = 82,IPPROTO_VINES = 83,IPPROTO_TTP = 84,IPPROTO_IGP = 85,IPPROTO_DGP = 86,IPPROTO_TCF = 87,IPPROTO_IGRP = 88,IPPROTO_OSPFIGP = 89,IPPROTO_SRPC = 90,IPPROTO_LARP = 91,IPPROTO_MTP = 92,IPPROTO_AX25 = 93,IPPROTO_IPEIP = 94,IPPROTO_MICP = 95,IPPROTO_SCCSP = 96,IPPROTO_ETHERIP = 97,IPPROTO_ENCAP = 98,IPPROTO_APES = 99,IPPROTO_GMTP = 100,IPPROTO_PIM = 103,IPPROTO_IPCOMP = 108,IPPROTO_PGM = 113,IPPROTO_SCTP = 132,IPPROTO_DIVERT = 254,IPPROTO_RAW = 255,IPPROTO_MAX = 256,IPPROTO_DONE = 257,};
enum MACRO_IPV6CTL {IPV6CTL_FORWARDING = 1,IPV6CTL_SENDREDIRECTS = 2,IPV6CTL_DEFHLIM = 3,IPV6CTL_FORWSRCRT = 5,IPV6CTL_STATS = 6,IPV6CTL_MRTSTATS = 7,IPV6CTL_MRTPROTO = 8,IPV6CTL_MAXFRAGPACKETS = 9,IPV6CTL_SOURCECHECK = 10,IPV6CTL_SOURCECHECK_LOGINT = 11,IPV6CTL_ACCEPT_RTADV = 12,IPV6CTL_KEEPFAITH = 13,IPV6CTL_LOG_INTERVAL = 14,IPV6CTL_HDRNESTLIMIT = 15,IPV6CTL_DAD_COUNT = 16,IPV6CTL_AUTO_FLOWLABEL = 17,IPV6CTL_DEFMCASTHLIM = 18,IPV6CTL_GIF_HLIM = 19,IPV6CTL_KAME_VERSION = 20,IPV6CTL_USE_DEPRECATED = 21,IPV6CTL_RR_PRUNE = 22,IPV6CTL_V6ONLY = 24,IPV6CTL_RTEXPIRE = 25,IPV6CTL_RTMINEXPIRE = 26,IPV6CTL_RTMAXCACHE = 27,IPV6CTL_USETEMPADDR = 32,IPV6CTL_TEMPPLTIME = 33,IPV6CTL_TEMPVLTIME = 34,IPV6CTL_AUTO_LINKLOCAL = 35,IPV6CTL_RIP6STATS = 36,IPV6CTL_PREFER_TEMPADDR = 37,IPV6CTL_ADDRCTLPOLICY = 38,IPV6CTL_USE_DEFAULTZONE = 39,IPV6CTL_MAXFRAGS = 41,IPV6CTL_MCAST_PMTU = 44,IPV6CTL_NEIGHBORGCTHRESH = 46,IPV6CTL_MAXIFPREFIXES = 47,IPV6CTL_MAXIFDEFROUTERS = 48,IPV6CTL_MAXDYNROUTES = 49,};
enum MACRO_IP_ADDR {IP_ADDR_TYPE = 1,};
enum MACRO_KOBJECT {KOBJECT_DESCRIPTION_LENGTH = 512,};
enum MACRO_MACH_VM {MACH_VM_MIN_ADDRESS_RAW = 0x0,MACH_VM_MAX_ADDRESS_RAW = 0xFC0000000,};
enum MACRO_MAP_MEM {MAP_MEM_NOOP = 0,MAP_MEM_COPYBACK = 1,MAP_MEM_IO = 2,MAP_MEM_WTHRU = 3,MAP_MEM_WCOMB = 4,MAP_MEM_INNERWBACK = 5,MAP_MEM_POSTED = 6,MAP_MEM_RT = 7,MAP_MEM_POSTED_REORDERED = 8,MAP_MEM_POSTED_COMBINED_REORDERED = 9,MAP_MEM_LEDGER_TAGGED = 8192,MAP_MEM_PURGABLE_KERNEL_ONLY = 16384,MAP_MEM_GRAB_SECLUDED = 32768,MAP_MEM_ONLY = 65536,MAP_MEM_NAMED_CREATE = 131072,MAP_MEM_PURGABLE = 262144,MAP_MEM_NAMED_REUSE = 524288,MAP_MEM_USE_DATA_ADDR = 1048576,MAP_MEM_VM_COPY = 2097152,MAP_MEM_VM_SHARE = 4194304,MAP_MEM_4K_DATA_ADDR = 8388608,MAP_MEM_FLAGS_MASK = 16776960,};
enum MACRO_MAXFRAG {MAXFRAG = 8,};
enum MACRO_MAXFREQ {MAXFREQ = 500000,};
enum MACRO_MAXPHYS {MAXPHYS = 65536,};
enum MACRO_MAX_MEM {MAX_MEM_LEVEL = 9,MAX_WBITS = 15,};
enum MACRO_MINCORE {MINCORE_INCORE = 0x1,MINCORE_REFERENCED = 0x2,MINCORE_MODIFIED = 0x4,MINCORE_REFERENCED_OTHER = 0x8,MINCORE_MODIFIED_OTHER = 0x10,MINCORE_PAGED_OUT = 0x20,MINCORE_COPIED = 0x40,MINCORE_ANONYMOUS = 0x80,};
enum MACRO_NL_SETD {NL_SETD = 1,NL_CAT_LOCALE = 1,};
enum MACRO_NOGROUP {NOGROUP = 65535,};
enum MACRO_NeXTBSD {NeXTBSD = 1995064,};
enum MACRO_OPENDEV {OPENDEV_PART = 0x1,OPENDEV_BLCK = 0x4,};
enum MACRO_ORDINAL {SELF_LIBRARY_ORDINAL = 0x0,MAX_LIBRARY_ORDINAL = 0xFD,DYNAMIC_LOOKUP_ORDINAL = 0xFE,EXECUTABLE_ORDINAL = 0xFF,};
enum MACRO_O_POPUP {O_POPUP = 0x80000000,O_ALERT = 0x20000000,};
enum MACRO_PERSIST {PERSIST_TIMEOUT = 0x40,};
enum MACRO_PER_SEC {USEC_PER_SEC = 1000000,NSEC_PER_SEC = 1000000000,};
enum MACRO_PFKEYV2 {PFKEYV2_REVISION = 199806,};
enum MACRO_PGSHIFT {PGSHIFT = 12,};
enum MACRO_PIDLOCK {PIDLOCK_NONBLOCK = 1,PIDLOCK_USEHOSTNAME = 2,};
enum MACRO_POLLERR {POLLERR = 0x8,POLLHUP = 0x10,POLLNVAL = 0x20,};
enum MACRO_PPPDISC {PPPDISC = 5,};
enum MACRO_PRIMASK {PRIMASK = 0xFF,PCATCH = 0x100,PTTYBLOCK = 0x200,PDROP = 0x400,PSPIN = 0x800,};
enum MACRO_PROCESS {INIT_PROCESS = 5,LOGIN_PROCESS = 6,USER_PROCESS = 7,DEAD_PROCESS = 8,};
enum MACRO_PTHREAD {PTHREAD_DESTRUCTOR_ITERATIONS = 4,PTHREAD_KEYS_MAX = 512,PTHREAD_STACK_MIN = 16384,};
enum MACRO_RPCTEST {RPCTEST_PROGRAM = 1,RPCTEST_VERSION = 1,RPCTEST_NULL_PROC = 2,RPCTEST_NULL_BATCH_PROC = 3,};
enum MACRO_RPC_MSG {RPC_MSG_VERSION = 2,RPC_SERVICE_PORT = 2048,};
enum MACRO_R_FIRST {R_FIRST = 3,R_IAFTER = 4,R_IBEFORE = 5,R_LAST = 6,R_NEXT = 7,R_NOOVERWRITE = 8,R_PREV = 9,R_SETCURSOR = 10,R_RECNOSYNC = 11,};
enum MACRO_SANDBOX {SANDBOX_NAMED = 0x1,};
enum MACRO_SECTION {SECTION_TYPE = 0xFF,SECTION_ATTRIBUTES = 0xFFFFFF00,};
enum MACRO_SIGABRT {SIGABRT = 6,};
enum MACRO_SIGALRM {SIGALRM = 14,};
enum MACRO_SIGCHLD {SIGCHLD = 20,};
enum MACRO_SIGCONT {SIGCONT = 19,};
enum MACRO_SIGINFO {SIGINFO = 29,};
enum MACRO_SIGKILL {SIGKILL = 9,};
enum MACRO_SIGPIPE {SIGPIPE = 13,};
enum MACRO_SIGPROF {SIGPROF = 27,};
enum MACRO_SIGQUIT {SIGQUIT = 3,SIGILL = 4,};
enum MACRO_SIGSEGV {SIGSEGV = 11,};
enum MACRO_SIGSTOP {SIGSTOP = 17,};
enum MACRO_SIGTERM {SIGTERM = 15,SIGURG = 16,};
enum MACRO_SIGTRAP {SIGTRAP = 5,};
enum MACRO_SIGTSTP {SIGTSTP = 18,};
enum MACRO_SIGTTIN {SIGTTIN = 21,};
enum MACRO_SIGTTOU {SIGTTOU = 22,};
enum MACRO_SIGUSR1 {SIGUSR1 = 30,};
enum MACRO_SIGUSR2 {SIGUSR2 = 31,};
enum MACRO_SIGXCPU {SIGXCPU = 24,};
enum MACRO_SIGXFSZ {SIGXFSZ = 25,};
enum MACRO_SQLITE3 {SQLITE3_TEXT = 3,};
enum MACRO_SYMTYPE {SYMTYPE = 50,};
enum MACRO_TASK_VM {TASK_VM_INFO_PURGEABLE = 23,TASK_TRACE_MEMORY_INFO = 24,TASK_WAIT_STATE_INFO = 25,TASK_POWER_INFO_V2 = 26,TASK_VM_INFO_PURGEABLE_ACCOUNT = 27,TASK_FLAGS_INFO = 28,};
enum MACRO_TCPOLEN {TCPOLEN_MAXSEG = 4,};
enum MACRO_TCP_MAX {TCP_MAX_WINSHIFT = 14,TCP_MAXHLEN = 60,TCP_NODELAY = 1,TCP_MAXSEG = 2,TCP_NOPUSH = 4,TCP_NOOPT = 8,TCP_KEEPALIVE = 16,TCP_CONNECTIONTIMEOUT = 32,};
enum MACRO_TCP_RXT {TCP_RXT_CONNDROPTIME = 0x80,TCP_RXT_FINDROP = 0x100,TCP_KEEPINTVL = 0x101,TCP_KEEPCNT = 0x102,TCP_SENDMOREACKS = 0x103,TCP_ENABLE_ECN = 0x104,TCP_FASTOPEN = 0x105,TCP_CONNECTION_INFO = 0x106,TCP_NOTSENT_LOWAT = 0x201,};
enum MACRO_TCSANOW {TCSANOW = 0,TCSADRAIN = 1,TCSAFLUSH = 2,TCSASOFT = 16,};
enum MACRO_TGWRITE {TGWRITE = 0x10,};
enum MACRO_THOUSEP {THOUSEP = 51,};
enum MACRO_TIMEOUT {CLSET_TIMEOUT = 1,CLGET_TIMEOUT = 2,};
enum MACRO_TIME_OK {TIME_OK = 0,TIME_INS = 1,TIME_DEL = 2,TIME_OOP = 3,TIME_WAIT = 4,TIME_ERROR = 5,};
enum MACRO_TIOCPKT {TIOCPKT_DATA = 0x0,TIOCPKT_FLUSHREAD = 0x1,TIOCPKT_FLUSHWRITE = 0x2,TIOCPKT_STOP = 0x4,TIOCPKT_START = 0x8,TIOCPKT_NOSTOP = 0x10,TIOCPKT_DOSTOP = 0x20,TIOCPKT_IOCTL = 0x40,};
enum MACRO_TMAGLEN {TMAGLEN = 6,};
enum MACRO_TOWRITE {TOWRITE = 0x2,};
enum MACRO_TTYDISC {TTYDISC = 0,TABLDISC = 3,SLIPDISC = 4,};
enum MACRO_TUWRITE {TUWRITE = 0x80,};
enum MACRO_UCONFIG {UCONFIG_ENABLE_PLUGINS = 0,};
enum MACRO_UNIFIED {UNIFIED_CORE_IMAGE = 1,};
enum MACRO_USER_CS {USER_CS_PATH = 1,USER_BC_BASE_MAX = 2,USER_BC_DIM_MAX = 3,USER_BC_SCALE_MAX = 4,USER_BC_STRING_MAX = 5,USER_COLL_WEIGHTS_MAX = 6,USER_EXPR_NEST_MAX = 7,USER_LINE_MAX = 8,USER_RE_DUP_MAX = 9,USER_POSIX2_VERSION = 10,USER_POSIX2_C_BIND = 11,USER_POSIX2_C_DEV = 12,USER_POSIX2_CHAR_TERM = 13,USER_POSIX2_FORT_DEV = 14,USER_POSIX2_FORT_RUN = 15,USER_POSIX2_LOCALEDEF = 16,USER_POSIX2_SW_DEV = 17,USER_POSIX2_UPE = 18,USER_STREAM_MAX = 19,USER_TZNAME_MAX = 20,USER_MAXID = 21,};
enum MACRO_VERSION {_POSIX_VERSION = 200112,_POSIX2_VERSION = 200112,};
enum MACRO_VFS_CTL {VFS_CTL_VERS1 = 0x1,VFS_CTL_OSTATFS = 0x10001,VFS_CTL_UMOUNT = 0x10002,VFS_CTL_QUERY = 0x10003,VFS_CTL_NEWADDR = 0x10004,VFS_CTL_TIMEO = 0x10005,VFS_CTL_NOLOCKS = 0x10006,VFS_CTL_SADDR = 0x10007,VFS_CTL_DISC = 0x10008,VFS_CTL_SERVERINFO = 0x10009,VFS_CTL_NSTATUS = 0x1000A,VFS_CTL_STATFS64 = 0x1000B,};
enum MACRO_VM_PAGE {VM_PAGE_QUERY_PAGE_PRESENT = 0x1,VM_PAGE_QUERY_PAGE_FICTITIOUS = 0x2,VM_PAGE_QUERY_PAGE_REF = 0x4,VM_PAGE_QUERY_PAGE_DIRTY = 0x8,VM_PAGE_QUERY_PAGE_PAGED_OUT = 0x10,VM_PAGE_QUERY_PAGE_COPIED = 0x20,VM_PAGE_QUERY_PAGE_SPECULATIVE = 0x40,VM_PAGE_QUERY_PAGE_EXTERNAL = 0x80,VM_PAGE_QUERY_PAGE_CS_VALIDATED = 0x100,VM_PAGE_QUERY_PAGE_CS_TAINTED = 0x200,VM_PAGE_QUERY_PAGE_CS_NX = 0x400,VM_PAGE_QUERY_PAGE_REUSABLE = 0x800,VM_FLAGS_FIXED = 0x0,VM_FLAGS_ANYWHERE = 0x1,VM_FLAGS_PURGABLE = 0x2,VM_FLAGS_4GB_CHUNK = 0x4,VM_FLAGS_RANDOM_ADDR = 0x8,VM_FLAGS_NO_CACHE = 0x10,VM_FLAGS_RESILIENT_CODESIGN = 0x20,VM_FLAGS_RESILIENT_MEDIA = 0x40,VM_FLAGS_OVERWRITE = 0x4000,VM_FLAGS_SUPERPAGE_MASK = 0x70000,VM_FLAGS_RETURN_DATA_ADDR = 0x100000,VM_FLAGS_RETURN_4K_DATA_ADDR = 0x800000,VM_FLAGS_ALIAS_MASK = 0xFF000000,VM_FLAGS_SUPERPAGE_SHIFT = 0x10,};
enum MACRO_VM_SYNC {VM_SYNC_ASYNCHRONOUS = 0x1,VM_SYNC_SYNCHRONOUS = 0x2,VM_SYNC_INVALIDATE = 0x4,VM_SYNC_KILLPAGES = 0x8,VM_SYNC_DEACTIVATE = 0x10,VM_SYNC_CONTIGUOUS = 0x20,VM_SYNC_REUSABLEPAGES = 0x40,};
enum MACRO_VOL_CAP {VOL_CAP_FMT_PERSISTENTOBJECTIDS = 0x1,VOL_CAP_FMT_SYMBOLICLINKS = 0x2,VOL_CAP_FMT_HARDLINKS = 0x4,VOL_CAP_FMT_JOURNAL = 0x8,VOL_CAP_FMT_JOURNAL_ACTIVE = 0x10,VOL_CAP_FMT_NO_ROOT_TIMES = 0x20,VOL_CAP_FMT_SPARSE_FILES = 0x40,VOL_CAP_FMT_ZERO_RUNS = 0x80,VOL_CAP_FMT_CASE_SENSITIVE = 0x100,VOL_CAP_FMT_CASE_PRESERVING = 0x200,VOL_CAP_FMT_FAST_STATFS = 0x400,VOL_CAP_FMT_2TB_FILESIZE = 0x800,VOL_CAP_FMT_OPENDENYMODES = 0x1000,VOL_CAP_FMT_HIDDEN_FILES = 0x2000,VOL_CAP_FMT_PATH_FROM_ID = 0x4000,VOL_CAP_FMT_NO_VOLUME_SIZES = 0x8000,VOL_CAP_FMT_DECMPFS_COMPRESSION = 0x10000,VOL_CAP_FMT_64BIT_OBJECT_IDS = 0x20000,VOL_CAP_FMT_DIR_HARDLINKS = 0x40000,VOL_CAP_FMT_DOCUMENT_ID = 0x80000,VOL_CAP_FMT_WRITE_GENERATION_COUNT = 0x100000,VOL_CAP_FMT_NO_IMMUTABLE_FILES = 0x200000,VOL_CAP_FMT_NO_PERMISSIONS = 0x400000,VOL_CAP_FMT_SHARED_SPACE = 0x800000,VOL_CAP_FMT_VOL_GROUPS = 0x1000000,VOL_CAP_FMT_SEALED = 0x2000000,VOL_CAP_INT_SEARCHFS = 0x1,VOL_CAP_INT_ATTRLIST = 0x2,VOL_CAP_INT_NFSEXPORT = 0x4,VOL_CAP_INT_READDIRATTR = 0x8,VOL_CAP_INT_EXCHANGEDATA = 0x10,VOL_CAP_INT_COPYFILE = 0x20,VOL_CAP_INT_ALLOCATE = 0x40,VOL_CAP_INT_VOL_RENAME = 0x80,VOL_CAP_INT_ADVLOCK = 0x100,VOL_CAP_INT_FLOCK = 0x200,VOL_CAP_INT_EXTENDED_SECURITY = 0x400,VOL_CAP_INT_USERACCESS = 0x800,VOL_CAP_INT_MANLOCK = 0x1000,VOL_CAP_INT_NAMEDSTREAMS = 0x2000,VOL_CAP_INT_EXTENDED_ATTR = 0x4000,VOL_CAP_INT_CLONE = 0x10000,VOL_CAP_INT_SNAPSHOT = 0x20000,VOL_CAP_INT_RENAME_SWAP = 0x40000,VOL_CAP_INT_RENAME_EXCL = 0x80000,VOL_CAP_INT_RENAME_OPENFAIL = 0x100000,};
enum MACRO_VOUCHER {VOUCHER_MACH_MSG_API_VERSION = 20140205,VOUCHER_MACH_MSG_STATE_UNCHANGED = -1,};
enum MACRO_VSTATUS {VSTATUS = 18,};
enum MACRO_WAKEMON {WAKEMON_ENABLE = 0x1,WAKEMON_DISABLE = 0x2,WAKEMON_GET_PARAMS = 0x4,WAKEMON_SET_DEFAULTS = 0x8,WAKEMON_MAKE_FATAL = 0x10,};
enum MACRO_WEXITED {WEXITED = 0x4,WSTOPPED = 0x8,WCONTINUED = 0x10,WNOWAIT = 0x20,};
enum MACRO_WNOHANG {WNOHANG = 0x1,WUNTRACED = 0x2,WCOREFLAG = 0x80,};
enum MACRO_YESEXPR {YESEXPR = 52,};
enum MACRO__CACHED {_CACHED_RUNES = 256,};
enum MACRO__DARWIN {_DARWIN_FEATURE_64_BIT_INODE = 1,_DARWIN_FEATURE_ONLY_64_BIT_INODE = 1,_DARWIN_FEATURE_ONLY_VERS_1050 = 1,_DARWIN_FEATURE_ONLY_UNIX_CONFORMANCE = 1,_DARWIN_FEATURE_UNIX_CONFORMANCE = 3,};
enum MACRO__LC_NUM {_LC_NUM_MASK = 6,};
enum MACRO__LIBCPP {_LIBCPP_VERSION = 7000,_LIBCPP_ABI_VERSION = 1,_LIBCPP_STD_VER = 14,_LIBCPP_OBJECT_FORMAT_MACHO = 1,_LIBCPP_HIDE_FROM_ABI_PER_TU = 1,_LIBCPP_NONUNIQUE_RTTI_BIT = -9223372036854775808,_LIBCPP_LOCALE__L_EXTENSIONS = 1,_LIBCPP_HAS_CATOPEN = 1,};
enum MACRO__POSIX2 {_POSIX2_BC_BASE_MAX = 99,_POSIX2_BC_DIM_MAX = 2048,_POSIX2_BC_SCALE_MAX = 99,_POSIX2_BC_STRING_MAX = 1000,_POSIX2_EQUIV_CLASS_MAX = 2,_POSIX2_EXPR_NEST_MAX = 32,_POSIX2_LINE_MAX = 2048,_POSIX2_RE_DUP_MAX = 255,};
enum MACRO__RLIMIT {_RLIMIT_POSIX_FLAG = 0x1000,};
enum MACRO___ILP32 {__ILP32_OFF32 = -1,__ILP32_OFFBIG = -1,};
enum MACRO___LPBIG {__LPBIG_OFFBIG = 1,};
enum MACRO___PFKEY {__PFKEY_V2_H = 1,};
enum MACRO___SCHED {__SCHED_PARAM_SIZE__ = 4,};
enum MACRO_err_max {err_max_system = 0x3F,};
typedef MIDIDriverInterface **MIDIDriverRef;
typedef void *MIDIReadBlock;
enum MLCDeviceType {MLCDeviceTypeCPU = 0x0,MLCDeviceTypeGPU = 0x1,MLCDeviceTypeAny = 0x2,MLCDeviceTypeCount = 0x3,};
enum MLCSampleMode {MLCSampleModeNearest = 0x0,MLCSampleModeLinear = 0x1,};
enum MLFeatureType {MLFeatureTypeInvalid = 0x0,MLFeatureTypeInt64 = 0x1,MLFeatureTypeDouble = 0x2,MLFeatureTypeString = 0x3,MLFeatureTypeImage = 0x4,MLFeatureTypeMultiArray = 0x5,MLFeatureTypeDictionary = 0x6,MLFeatureTypeSequence = 0x7,};
enum MPEG4ObjectID {kMPEG4Object_AAC_Main = 0x1,kMPEG4Object_AAC_LC = 0x2,kMPEG4Object_AAC_SSR = 0x3,kMPEG4Object_AAC_LTP = 0x4,kMPEG4Object_AAC_SBR = 0x5,kMPEG4Object_AAC_Scalable = 0x6,kMPEG4Object_TwinVQ = 0x7,kMPEG4Object_CELP = 0x8,kMPEG4Object_HVXC = 0x9,};
enum MPSDataLayout {MPSDataLayoutHeightxWidthxFeatureChannels = 0x0,MPSDataLayoutFeatureChannelsxHeightxWidth = 0x1,};
typedef NSArray MPSImageBatch;
typedef NSArray MPSStateBatch;
enum MPShuffleType {MPShuffleTypeOff = 0x0,MPShuffleTypeItems = 0x1,MPShuffleTypeCollections = 0x2,};
enum MSStickerSize {MSStickerSizeSmall = 0x0,MSStickerSizeRegular = 0x1,MSStickerSizeLarge = 0x2,};
struct MTLClearColor {double red;double green;double blue;double alpha;};
enum MTLFeatureSet {MTLFeatureSet_iOS_GPUFamily1_v1 = 0x0,MTLFeatureSet_iOS_GPUFamily2_v1 = 0x1,MTLFeatureSet_iOS_GPUFamily1_v2 = 0x2,MTLFeatureSet_iOS_GPUFamily2_v2 = 0x3,MTLFeatureSet_iOS_GPUFamily3_v1 = 0x4,MTLFeatureSet_iOS_GPUFamily1_v3 = 0x5,MTLFeatureSet_iOS_GPUFamily2_v3 = 0x6,MTLFeatureSet_iOS_GPUFamily3_v2 = 0x7,MTLFeatureSet_iOS_GPUFamily1_v4 = 0x8,MTLFeatureSet_iOS_GPUFamily2_v4 = 0x9,MTLFeatureSet_iOS_GPUFamily3_v3 = 0xA,MTLFeatureSet_iOS_GPUFamily4_v1 = 0xB,MTLFeatureSet_iOS_GPUFamily1_v5 = 0xC,MTLFeatureSet_iOS_GPUFamily2_v5 = 0xD,MTLFeatureSet_iOS_GPUFamily3_v4 = 0xE,MTLFeatureSet_iOS_GPUFamily4_v2 = 0xF,MTLFeatureSet_iOS_GPUFamily5_v1 = 0x10,MTLFeatureSet_macOS_GPUFamily1_v1 = 0x2710,MTLFeatureSet_OSX_GPUFamily1_v1 = 0x2710,MTLFeatureSet_macOS_GPUFamily1_v2 = 0x2711,MTLFeatureSet_OSX_GPUFamily1_v2 = 0x2711,MTLFeatureSet_macOS_ReadWriteTextureTier2 = 0x2712,MTLFeatureSet_OSX_ReadWriteTextureTier2 = 0x2712,MTLFeatureSet_macOS_GPUFamily1_v3 = 0x2713,MTLFeatureSet_macOS_GPUFamily1_v4 = 0x2714,MTLFeatureSet_macOS_GPUFamily2_v1 = 0x2715,MTLFeatureSet_tvOS_GPUFamily1_v1 = 0x7530,MTLFeatureSet_TVOS_GPUFamily1_v1 = 0x7530,MTLFeatureSet_tvOS_GPUFamily1_v2 = 0x7531,MTLFeatureSet_tvOS_GPUFamily1_v3 = 0x7532,MTLFeatureSet_tvOS_GPUFamily1_v4 = 0x7534,};
enum MTLLoadAction {MTLLoadActionDontCare = 0x0,MTLLoadActionLoad = 0x1,MTLLoadActionClear = 0x2,};
enum MTLMutability {MTLMutabilityDefault = 0x0,MTLMutabilityMutable = 0x1,MTLMutabilityImmutable = 0x2,};
typedef OpaqueMusicSequence *MusicSequence;
enum NEDNSProtocol {NEDNSProtocolCleartext = 0x1,NEDNSProtocolTLS = 0x2,NEDNSProtocolHTTPS = 0x3,};
enum NFCNDEFStatus {NFCNDEFStatusNotSupported = 0x1,NFCNDEFStatusReadWrite = 0x2,NFCNDEFStatusReadOnly = 0x3,};
struct NSPortMessage;
struct OpaqueAUGraph;
struct OpaqueCMClock;
struct OpaqueJSClass;
struct OpaqueJSValue;
enum PDFDisplayBox {kPDFDisplayBoxMediaBox = 0x0,kPDFDisplayBoxCropBox = 0x1,kPDFDisplayBoxBleedBox = 0x2,kPDFDisplayBoxTrimBox = 0x3,kPDFDisplayBoxArtBox = 0x4,};
enum PDFMarkupType {kPDFMarkupTypeHighlight = 0x0,kPDFMarkupTypeStrikeOut = 0x1,kPDFMarkupTypeUnderline = 0x2,kPDFMarkupTypeRedact = 0x3,};
enum PHAccessLevel {PHAccessLevelAddOnly = 0x1,PHAccessLevelReadWrite = 0x2,};
enum PHPhotosError {PHPhotosErrorInvalid = 0xFFFFFFFFFFFFFFFF,PHPhotosErrorUserCancelled = 0xC00,PHPhotosErrorLibraryVolumeOffline = 0xC2A,PHPhotosErrorRelinquishingLibraryBundleToWriter = 0xC46,PHPhotosErrorSwitchingSystemPhotoLibrary = 0xC47,PHPhotosErrorNetworkAccessRequired = 0xC5C,};
enum SCNFilterMode {SCNFilterModeNone = 0x0,SCNFilterModeNearest = 0x1,SCNFilterModeLinear = 0x2,};
typedef SCNVector4 SCNQuaternion;
enum SCNShadowMode {SCNShadowModeForward = 0x0,SCNShadowModeDeferred = 0x1,SCNShadowModeModulated = 0x2,};
enum SKTileSetType {SKTileSetTypeGrid = 0x0,SKTileSetTypeIsometric = 0x1,SKTileSetTypeHexagonalFlat = 0x2,SKTileSetTypeHexagonalPointy = 0x3,};
enum SKUniformType {SKUniformTypeNone = 0x0,SKUniformTypeFloat = 0x1,SKUniformTypeFloatVector2 = 0x2,SKUniformTypeFloatVector3 = 0x3,SKUniformTypeFloatVector4 = 0x4,SKUniformTypeFloatMatrix2 = 0x5,SKUniformTypeFloatMatrix3 = 0x6,SKUniformTypeFloatMatrix4 = 0x7,SKUniformTypeTexture = 0x8,};
enum SMPTETimeType {kSMPTETimeType24 = 0x0,kSMPTETimeType25 = 0x1,kSMPTETimeType30Drop = 0x2,kSMPTETimeType30 = 0x3,kSMPTETimeType2997 = 0x4,kSMPTETimeType2997Drop = 0x5,kSMPTETimeType60 = 0x6,kSMPTETimeType5994 = 0x7,kSMPTETimeType60Drop = 0x8,kSMPTETimeType5994Drop = 0x9,kSMPTETimeType50 = 0xA,kSMPTETimeType2398 = 0xB,};
typedef SSLContext *SSLContextRef;
typedef SFNTLookupTable STXClassTable;
enum SparseOrder_t {SparseOrderDefault = 0x0,SparseOrderUser = 0x1,SparseOrderAMD = 0x2,SparseOrderMetis = 0x3,SparseOrderCOLAMD = 0x4,};
enum UCharCategory {U_UNASSIGNED = 0x0,U_GENERAL_OTHER_TYPES = 0x0,U_UPPERCASE_LETTER = 0x1,U_LOWERCASE_LETTER = 0x2,U_TITLECASE_LETTER = 0x3,U_MODIFIER_LETTER = 0x4,U_OTHER_LETTER = 0x5,U_NON_SPACING_MARK = 0x6,U_ENCLOSING_MARK = 0x7,U_COMBINING_SPACING_MARK = 0x8,U_DECIMAL_DIGIT_NUMBER = 0x9,U_LETTER_NUMBER = 0xA,U_OTHER_NUMBER = 0xB,U_SPACE_SEPARATOR = 0xC,U_LINE_SEPARATOR = 0xD,U_PARAGRAPH_SEPARATOR = 0xE,U_CONTROL_CHAR = 0xF,U_FORMAT_CHAR = 0x10,U_PRIVATE_USE_CHAR = 0x11,U_SURROGATE = 0x12,U_DASH_PUNCTUATION = 0x13,U_START_PUNCTUATION = 0x14,U_END_PUNCTUATION = 0x15,U_CONNECTOR_PUNCTUATION = 0x16,U_OTHER_PUNCTUATION = 0x17,U_MATH_SYMBOL = 0x18,U_CURRENCY_SYMBOL = 0x19,U_MODIFIER_SYMBOL = 0x1A,U_OTHER_SYMBOL = 0x1B,U_INITIAL_PUNCTUATION = 0x1C,U_FINAL_PUNCTUATION = 0x1D,U_CHAR_CATEGORY_COUNT = 0x1E,};
enum UIBarPosition {UIBarPositionAny = 0x0,UIBarPositionBottom = 0x1,UIBarPositionTop = 0x2,UIBarPositionTopAttached = 0x3,};
enum UISwitchStyle {UISwitchStyleAutomatic = 0x0,UISwitchStyleCheckbox = 0x1,UISwitchStyleSliding = 0x2,};
enum UJoiningGroup {U_JG_NO_JOINING_GROUP = 0x0,U_JG_AIN = 0x1,U_JG_ALAPH = 0x2,U_JG_ALEF = 0x3,U_JG_BEH = 0x4,U_JG_BETH = 0x5,U_JG_DAL = 0x6,U_JG_DALATH_RISH = 0x7,U_JG_E = 0x8,U_JG_FEH = 0x9,U_JG_FINAL_SEMKATH = 0xA,U_JG_GAF = 0xB,U_JG_GAMAL = 0xC,U_JG_HAH = 0xD,U_JG_TEH_MARBUTA_GOAL = 0xE,U_JG_HAMZA_ON_HEH_GOAL = 0xE,U_JG_HE = 0xF,U_JG_HEH = 0x10,U_JG_HEH_GOAL = 0x11,U_JG_HETH = 0x12,U_JG_KAF = 0x13,U_JG_KAPH = 0x14,U_JG_KNOTTED_HEH = 0x15,U_JG_LAM = 0x16,U_JG_LAMADH = 0x17,U_JG_MEEM = 0x18,U_JG_MIM = 0x19,U_JG_NOON = 0x1A,U_JG_NUN = 0x1B,U_JG_PE = 0x1C,U_JG_QAF = 0x1D,U_JG_QAPH = 0x1E,U_JG_REH = 0x1F,U_JG_REVERSED_PE = 0x20,U_JG_SAD = 0x21,U_JG_SADHE = 0x22,U_JG_SEEN = 0x23,U_JG_SEMKATH = 0x24,U_JG_SHIN = 0x25,U_JG_SWASH_KAF = 0x26,U_JG_SYRIAC_WAW = 0x27,U_JG_TAH = 0x28,U_JG_TAW = 0x29,U_JG_TEH_MARBUTA = 0x2A,U_JG_TETH = 0x2B,U_JG_WAW = 0x2C,U_JG_YEH = 0x2D,U_JG_YEH_BARREE = 0x2E,U_JG_YEH_WITH_TAIL = 0x2F,U_JG_YUDH = 0x30,U_JG_YUDH_HE = 0x31,U_JG_ZAIN = 0x32,U_JG_FE = 0x33,U_JG_KHAPH = 0x34,U_JG_ZHAIN = 0x35,U_JG_BURUSHASKI_YEH_BARREE = 0x36,U_JG_FARSI_YEH = 0x37,U_JG_NYA = 0x38,U_JG_ROHINGYA_YEH = 0x39,U_JG_MANICHAEAN_ALEPH = 0x3A,U_JG_MANICHAEAN_AYIN = 0x3B,U_JG_MANICHAEAN_BETH = 0x3C,U_JG_MANICHAEAN_DALETH = 0x3D,U_JG_MANICHAEAN_DHAMEDH = 0x3E,U_JG_MANICHAEAN_FIVE = 0x3F,U_JG_MANICHAEAN_GIMEL = 0x40,U_JG_MANICHAEAN_HETH = 0x41,U_JG_MANICHAEAN_HUNDRED = 0x42,U_JG_MANICHAEAN_KAPH = 0x43,U_JG_MANICHAEAN_LAMEDH = 0x44,U_JG_MANICHAEAN_MEM = 0x45,U_JG_MANICHAEAN_NUN = 0x46,U_JG_MANICHAEAN_ONE = 0x47,U_JG_MANICHAEAN_PE = 0x48,U_JG_MANICHAEAN_QOPH = 0x49,U_JG_MANICHAEAN_RESH = 0x4A,U_JG_MANICHAEAN_SADHE = 0x4B,U_JG_MANICHAEAN_SAMEKH = 0x4C,U_JG_MANICHAEAN_TAW = 0x4D,U_JG_MANICHAEAN_TEN = 0x4E,U_JG_MANICHAEAN_TETH = 0x4F,U_JG_MANICHAEAN_THAMEDH = 0x50,U_JG_MANICHAEAN_TWENTY = 0x51,U_JG_MANICHAEAN_WAW = 0x52,U_JG_MANICHAEAN_YODH = 0x53,U_JG_MANICHAEAN_ZAYIN = 0x54,U_JG_STRAIGHT_WAW = 0x55,U_JG_AFRICAN_FEH = 0x56,U_JG_AFRICAN_NOON = 0x57,U_JG_AFRICAN_QAF = 0x58,U_JG_MALAYALAM_BHA = 0x59,U_JG_MALAYALAM_JA = 0x5A,U_JG_MALAYALAM_LLA = 0x5B,U_JG_MALAYALAM_LLLA = 0x5C,U_JG_MALAYALAM_NGA = 0x5D,U_JG_MALAYALAM_NNA = 0x5E,U_JG_MALAYALAM_NNNA = 0x5F,U_JG_MALAYALAM_NYA = 0x60,U_JG_MALAYALAM_RA = 0x61,U_JG_MALAYALAM_SSA = 0x62,U_JG_MALAYALAM_TTA = 0x63,U_JG_HANIFI_ROHINGYA_KINNA_YA = 0x64,U_JG_HANIFI_ROHINGYA_PA = 0x65,U_JG_COUNT = 0x66,};
typedef float VNAspectRatio;
enum VNElementType {VNElementTypeUnknown = 0x0,VNElementTypeFloat = 0x1,VNElementTypeDouble = 0x2,};
enum WKContentMode {WKContentModeRecommended = 0x0,WKContentModeMobile = 0x1,WKContentModeDesktop = 0x2,};
struct __CFAllocator;
struct __CFBitVector;
enum __CFByteOrder {CFByteOrderUnknown = 0x0,CFByteOrderLittleEndian = 0x1,CFByteOrderBigEndian = 0x2,};
typedef int __CLPK_ftnlen;
struct __CTGlyphInfo;
struct __SecIdentity;
struct __SecKeychain;
struct __SecPassword;
struct __objc2_class {__objc2_class *isa;__objc2_class *superclass;void *cache;void *vtable;__objc2_class_ro *info;};
union __sigaction_u {void (*__sa_handler)(int);void (*__sa_sigaction)(int, __siginfo *, void *);};
struct _htmlElemDesc { char *name;char startTag;char endTag;char saveEndTag;char empty;char depr;char dtd;char isinline; char *desc; char **subelts; char *defaultsubelt; char **attrs_opt; char **attrs_depr; char **attrs_req;};
struct _xmlHashTable;
struct _xmlSchemaVal;
typedef _acl_flagset *acl_flagset_t;
typedef _acl_permset *acl_permset_t;
typedef au_tid_addr au_tid_addr_t;
struct audit_token_t {unsigned int val[8];};
typedef NSObject *axr_decoder_t;
typedef NSObject *axr_encoder_t;
typedef int dispatch_fd_t;
typedef NSObject *dispatch_io_t;
typedef fsignatures fsignatures_t;
typedef fsupplement fsupplement_t;
struct getquota_args {char *gqa_pathp;int gqa_uid;};
typedef gss_cred_id_t_desc_struct *gss_cred_id_t;
typedef int kern_return_t;
typedef _malloc_zone_t malloc_zone_t;
struct nlm_sm_status {char *mon_name;int state;char priv[16];};
typedef char nspace_path_t[1024];
typedef NSObject *nw_endpoint_t;
typedef NSObject *nw_listener_t;
struct objc_category;
struct objc_property;
struct objc_selector;
struct os_activity_s;
typedef NSObject *os_activity_t;
typedef void (*os_function_t)(void *);
enum os_log_type_t {OS_LOG_TYPE_DEFAULT = 0x0,OS_LOG_TYPE_INFO = 0x1,OS_LOG_TYPE_DEBUG = 0x2,OS_LOG_TYPE_ERROR = 0x10,OS_LOG_TYPE_FAULT = 0x11,};
typedef simd_packed_char16 packed_char16;
typedef simd_packed_char32 packed_char32;
typedef simd_packed_char64 packed_char64;
typedef simd_packed_float2 packed_float2;
typedef simd_packed_float4 packed_float4;
typedef simd_packed_float8 packed_float8;
typedef simd_packed_short2 packed_short2;
typedef simd_packed_short4 packed_short4;
typedef simd_packed_short8 packed_short8;
typedef simd_packed_uchar2 packed_uchar2;
typedef simd_packed_uchar4 packed_uchar4;
typedef simd_packed_uchar8 packed_uchar8;
typedef simd_packed_uint16 packed_uint16;
typedef simd_packed_ulong2 packed_ulong2;
typedef simd_packed_ulong4 packed_ulong4;
typedef simd_packed_ulong8 packed_ulong8;
typedef _printf_compiled *printf_comp_t;
struct rslvmulti_req {sockaddr *sa;sockaddr **llsa;};
typedef void *rusage_info_t;
typedef simd_double2 simd__double2;
typedef simd_double3 simd__double3;
typedef simd_double4 simd__double4;
typedef simd_double8 simd__double8;
typedef simd_float16 simd__float16;
typedef simd_short16 simd__short16;
typedef simd_short32 simd__short32;
typedef simd_uchar16 simd__uchar16;
typedef simd_uchar32 simd__uchar32;
typedef simd_uchar64 simd__uchar64;
typedef simd_ushort2 simd__ushort2;
typedef simd_ushort3 simd__ushort3;
typedef simd_ushort4 simd__ushort4;
typedef simd_ushort8 simd__ushort8;
union __attribute__((aligned(16))) simd_ushort16 {char i8[32];short i16[16];int i32[8];long long i64[4];__int128 i128[2];unsigned char u8[32];unsigned short u16[16];unsigned int u32[8];unsigned long long u64[4];__uint128 u128[2];};
union __attribute__((aligned(16))) simd_ushort32 {char i8[64];short i16[32];int i32[16];long long i64[8];__int128 i128[4];unsigned char u8[64];unsigned short u16[32];unsigned int u32[16];unsigned long long u64[8];__uint128 u128[4];};
enum sparse_status {SPARSE_SUCCESS = 0x0,SPARSE_ILLEGAL_PARAMETER = 0xFFFFFC18,SPARSE_CANNOT_SET_PROPERTY = 0xFFFFFC17,SPARSE_SYSTEM_ERROR = 0xFFFFFC16,};
struct sqlite3_mutex;
struct sqlite3_value;
typedef unsigned long long sqlite_uint64;
typedef std____1__ratio_1000000000000000000__1_ std____1__exa;
typedef std____1__basic_ios_char_ std____1__ios;
union __attribute__((aligned(16))) swift_double2 {double f64[2];};
union __attribute__((aligned(16))) swift_double3 {double f64[3];};
union __attribute__((aligned(16))) swift_double4 {double f64[4];};
typedef char symtab_name_t[32];
typedef int sync_policy_t;
struct twolevel_hint {unsigned int isub_image : 8;unsigned int itoc : 24;};
enum vDSP_DCT_Type {vDSP_DCT_II = 0x2,vDSP_DCT_III = 0x3,vDSP_DCT_IV = 0x4,};
typedef simd_char16 vector_char16;
typedef simd_char32 vector_char32;
typedef simd_float2 vector_float2;
union __attribute__((aligned(16))) vector_float3 {float f32[3];char i8[16];short i16[8];int i32[4];long long i64[2];unsigned char u8[16];unsigned short u16[8];unsigned int u32[4];unsigned long long u64[2];};
typedef simd_float4 vector_float4;
typedef simd_float8 vector_float8;
typedef simd_short2 vector_short2;
typedef simd_short3 vector_short3;
typedef simd_short4 vector_short4;
typedef simd_short8 vector_short8;
typedef simd_uchar2 vector_uchar2;
typedef simd_uchar3 vector_uchar3;
typedef simd_uchar4 vector_uchar4;
typedef simd_uchar8 vector_uchar8;
typedef simd_uint16 vector_uint16;
typedef simd_ulong2 vector_ulong2;
typedef simd_ulong3 vector_ulong3;
typedef simd_ulong4 vector_ulong4;
typedef simd_ulong8 vector_ulong8;
typedef int vm_behavior_t;
typedef int vm_purgable_t;
enum xmlEntityType {XML_INTERNAL_GENERAL_ENTITY = 0x1,XML_EXTERNAL_GENERAL_PARSED_ENTITY = 0x2,XML_EXTERNAL_GENERAL_UNPARSED_ENTITY = 0x3,XML_INTERNAL_PARAMETER_ENTITY = 0x4,XML_EXTERNAL_PARAMETER_ENTITY = 0x5,XML_INTERNAL_PREDEFINED_ENTITY = 0x6,};
enum xmlErrorLevel {XML_ERR_NONE = 0x0,XML_ERR_WARNING = 0x1,XML_ERR_ERROR = 0x2,XML_ERR_FATAL = 0x3,};
typedef int (*xmlListWalker)( void *,  void *);
typedef _xmlParserCtxt xmlParserCtxt;
enum xmlParserMode {XML_PARSE_UNKNOWN = 0x0,XML_PARSE_DOM = 0x1,XML_PARSE_SAX = 0x2,XML_PARSE_PUSH_DOM = 0x3,XML_PARSE_PUSH_SAX = 0x4,XML_PARSE_READER = 0x5,};
typedef _xmlSAXHandler xmlSAXHandler;
typedef _xmlSAXLocator xmlSAXLocator;
enum xmlSaveOption {XML_SAVE_FORMAT = 0x1,XML_SAVE_NO_DECL = 0x2,XML_SAVE_NO_EMPTY = 0x4,XML_SAVE_NO_XHTML = 0x8,XML_SAVE_XHTML = 0x10,XML_SAVE_AS_XML = 0x20,XML_SAVE_AS_HTML = 0x40,XML_SAVE_WSNONSIG = 0x80,};
typedef _xmlSchemaType xmlSchemaType;
typedef struct _xmlSchematron xmlSchematron;
typedef char *(*xmlStrdupFunc)( char *);
typedef struct _xmlStreamCtxt xmlStreamCtxt;
typedef struct _xmlTextReader xmlTextReader;
typedef struct _xmlTextWriter xmlTextWriter;
typedef struct _xmlValidState xmlValidState;
enum xmlXPathError {XPATH_EXPRESSION_OK = 0x0,XPATH_NUMBER_ERROR = 0x1,XPATH_UNFINISHED_LITERAL_ERROR = 0x2,XPATH_START_LITERAL_ERROR = 0x3,XPATH_VARIABLE_REF_ERROR = 0x4,XPATH_UNDEF_VARIABLE_ERROR = 0x5,XPATH_INVALID_PREDICATE_ERROR = 0x6,XPATH_EXPR_ERROR = 0x7,XPATH_UNCLOSED_ERROR = 0x8,XPATH_UNKNOWN_FUNC_ERROR = 0x9,XPATH_INVALID_OPERAND = 0xA,XPATH_INVALID_TYPE = 0xB,XPATH_INVALID_ARITY = 0xC,XPATH_INVALID_CTXT_SIZE = 0xD,XPATH_INVALID_CTXT_POSITION = 0xE,XPATH_MEMORY_ERROR = 0xF,XPTR_SYNTAX_ERROR = 0x10,XPTR_RESOURCE_ERROR = 0x11,XPTR_SUB_RESOURCE_ERROR = 0x12,XPATH_UNDEF_PREFIX_ERROR = 0x13,XPATH_ENCODING_ERROR = 0x14,XPATH_INVALID_CHAR_ERROR = 0x15,XPATH_INVALID_CTXT = 0x16,XPATH_STACK_ERROR = 0x17,XPATH_FORBID_VARIABLE_ERROR = 0x18,};
typedef _xmlXPathFunct xmlXPathFunct;
enum yppush_status {YPPUSH_SUCC = 0x1,YPPUSH_AGE = 0x2,YPPUSH_NOMAP = 0xFFFFFFFF,YPPUSH_NODOM = 0xFFFFFFFE,YPPUSH_RSRC = 0xFFFFFFFD,YPPUSH_RPC = 0xFFFFFFFC,YPPUSH_MADDR = 0xFFFFFFFB,YPPUSH_YPERR = 0xFFFFFFFA,YPPUSH_BADARGS = 0xFFFFFFF9,YPPUSH_DBM = 0xFFFFFFF8,YPPUSH_FILE = 0xFFFFFFF7,YPPUSH_SKEW = 0xFFFFFFF6,YPPUSH_CLEAR = 0xFFFFFFF5,YPPUSH_FORCE = 0xFFFFFFF4,YPPUSH_XFRERR = 0xFFFFFFF3,YPPUSH_REFUSED = 0xFFFFFFF2,};
typedef AAByteStream_impl *AAByteStream;
enum AAEntryTypes {AA_ENTRY_TYPE_REG = 0x46,AA_ENTRY_TYPE_DIR = 0x44,AA_ENTRY_TYPE_LNK = 0x4C,AA_ENTRY_TYPE_FIFO = 0x50,AA_ENTRY_TYPE_CHR = 0x43,AA_ENTRY_TYPE_BLK = 0x42,AA_ENTRY_TYPE_SOCK = 0x53,AA_ENTRY_TYPE_WHT = 0x57,AA_ENTRY_TYPE_DOOR = 0x52,AA_ENTRY_TYPE_PORT = 0x54,AA_ENTRY_TYPE_METADATA = 0x4D,};
enum AAFieldTypes {AA_FIELD_TYPE_FLAG = 0x0,AA_FIELD_TYPE_UINT = 0x1,AA_FIELD_TYPE_STRING = 0x2,AA_FIELD_TYPE_HASH = 0x3,AA_FIELD_TYPE_TIMESPEC = 0x4,AA_FIELD_TYPE_BLOB = 0x5,};
typedef int ABSourceType;
typedef UnsignedWide AbsoluteTime;
enum BNNSDataType {BNNSDataTypeFloatBit = 0x10000,BNNSDataTypeFloat16 = 0x10010,BNNSDataTypeFloat32 = 0x10020,BNNSDataTypeIntBit = 0x20000,BNNSDataTypeInt1 = 0x20001,BNNSDataTypeInt2 = 0x20002,BNNSDataTypeInt4 = 0x20004,BNNSDataTypeInt8 = 0x20008,BNNSDataTypeInt16 = 0x20010,BNNSDataTypeInt32 = 0x20020,BNNSDataTypeUIntBit = 0x40000,BNNSDataTypeUInt1 = 0x40001,BNNSDataTypeUInt2 = 0x40002,BNNSDataTypeUInt4 = 0x40004,BNNSDataTypeUInt8 = 0x40008,BNNSDataTypeUInt16 = 0x40010,BNNSDataTypeUInt32 = 0x40020,BNNSDataTypeIndexedBit = 0x80000,BNNSDataTypeIndexed1 = 0x80001,BNNSDataTypeIndexed2 = 0x80002,BNNSDataTypeIndexed4 = 0x80004,BNNSDataTypeIndexed8 = 0x80008,BNNSDataTypeMiscellaneousBit = 0x100000,BNNSDataTypeBoolean = 0x100008,};
typedef BslnTable *BslnTablePtr;
struct CALayerArray;
typedef _CCCryptor *CCCryptorRef;
typedef  __CFBoolean *CFBooleanRef;
enum CFNumberType {kCFNumberSInt8Type = 0x1,kCFNumberSInt16Type = 0x2,kCFNumberSInt32Type = 0x3,kCFNumberSInt64Type = 0x4,kCFNumberFloat32Type = 0x5,kCFNumberFloat64Type = 0x6,kCFNumberCharType = 0x7,kCFNumberShortType = 0x8,kCFNumberIntType = 0x9,kCFNumberLongType = 0xA,kCFNumberLongLongType = 0xB,kCFNumberFloatType = 0xC,kCFNumberDoubleType = 0xD,kCFNumberCFIndexType = 0xE,kCFNumberNSIntegerType = 0xF,kCFNumberCGFloatType = 0x10,kCFNumberMaxType = 0x10,};
typedef __CFRunLoop *CFRunLoopRef;
struct CGColorSpace;
typedef CGContext *CGContextRef;
typedef unsigned char CGPDFBoolean;
typedef long long CGPDFInteger;
typedef CGPDFPage *CGPDFPageRef;
struct CGPDFScanner;
enum CGPDFTagType {CGPDFTagTypeDocument = 0x64,CGPDFTagTypePart = 0x65,CGPDFTagTypeArt = 0x66,CGPDFTagTypeSection = 0x67,CGPDFTagTypeDiv = 0x68,CGPDFTagTypeBlockQuote = 0x69,CGPDFTagTypeCaption = 0x6A,CGPDFTagTypeTOC = 0x6B,CGPDFTagTypeTOCI = 0x6C,CGPDFTagTypeIndex = 0x6D,CGPDFTagTypeNonStructure = 0x6E,CGPDFTagTypePrivate = 0x6F,CGPDFTagTypeParagraph = 0xC8,CGPDFTagTypeHeader = 0xC9,CGPDFTagTypeHeader1 = 0xCA,CGPDFTagTypeHeader2 = 0xCB,CGPDFTagTypeHeader3 = 0xCC,CGPDFTagTypeHeader4 = 0xCD,CGPDFTagTypeHeader5 = 0xCE,CGPDFTagTypeHeader6 = 0xCF,CGPDFTagTypeList = 0x12C,CGPDFTagTypeListItem = 0x12D,CGPDFTagTypeLabel = 0x12E,CGPDFTagTypeListBody = 0x12F,CGPDFTagTypeTable = 0x190,CGPDFTagTypeTableRow = 0x191,CGPDFTagTypeTableHeaderCell = 0x192,CGPDFTagTypeTableDataCell = 0x193,CGPDFTagTypeTableHeader = 0x194,CGPDFTagTypeTableBody = 0x195,CGPDFTagTypeTableFooter = 0x196,CGPDFTagTypeSpan = 0x1F4,CGPDFTagTypeQuote = 0x1F5,CGPDFTagTypeNote = 0x1F6,CGPDFTagTypeReference = 0x1F7,CGPDFTagTypeBibliography = 0x1F8,CGPDFTagTypeCode = 0x1F9,CGPDFTagTypeLink = 0x1FA,CGPDFTagTypeAnnotation = 0x1FB,CGPDFTagTypeRuby = 0x258,CGPDFTagTypeRubyBaseText = 0x259,CGPDFTagTypeRubyAnnotationText = 0x25A,CGPDFTagTypeRubyPunctuation = 0x25B,CGPDFTagTypeWarichu = 0x25C,CGPDFTagTypeWarichuText = 0x25D,CGPDFTagTypeWarichuPunctiation = 0x25E,CGPDFTagTypeFigure = 0x2BC,CGPDFTagTypeFormula = 0x2BD,CGPDFTagTypeForm = 0x2BE,};
typedef CGPattern *CGPatternRef;
typedef CGShading *CGShadingRef;
enum CLSErrorCode {CLSErrorCodeNone = 0x0,CLSErrorCodeClassKitUnavailable = 0x1,CLSErrorCodeInvalidArgument = 0x2,CLSErrorCodeInvalidModification = 0x3,CLSErrorCodeAuthorizationDenied = 0x4,CLSErrorCodeDatabaseInaccessible = 0x5,CLSErrorCodeLimits = 0x6,CLSErrorCodeInvalidCreate = 0x7,CLSErrorCodeInvalidUpdate = 0x8,CLSErrorCodePartialFailure = 0x9,};
struct CMQuaternion {double x;double y;double z;double w;};
enum CNEntityType {CNEntityTypeContacts = 0x0,};
enum CTFontFormat {kCTFontFormatUnrecognized = 0x0,kCTFontFormatOpenTypePostScript = 0x1,kCTFontFormatOpenTypeTrueType = 0x2,kCTFontFormatTrueType = 0x3,kCTFontFormatPostScript = 0x4,kCTFontFormatBitmap = 0x5,};
typedef  __CTTextTab *CTTextTabRef;
enum CXHandleType {CXHandleTypeGeneric = 0x1,CXHandleTypePhoneNumber = 0x2,CXHandleTypeEmailAddress = 0x3,};
typedef _DNSRecordRef_t *DNSRecordRef;
enum EKEntityType {EKEntityTypeEvent = 0x0,EKEntityTypeReminder = 0x1,};
enum EKSourceType {EKSourceTypeLocal = 0x0,EKSourceTypeExchange = 0x1,EKSourceTypeCalDAV = 0x2,EKSourceTypeMobileMe = 0x3,EKSourceTypeSubscribed = 0x4,EKSourceTypeBirthdays = 0x5,};
typedef int FFTDirection;
typedef void *GCMouseMoved;
struct GCQuaternion {double x;double y;double z;double w;};
enum GCTouchState {GCTouchStateUp = 0x0,GCTouchStateDown = 0x1,GCTouchStateMoving = 0x2,};
typedef void *HMErrorBlock;
enum ICDeviceType {ICDeviceTypeCamera = 0x1,ICDeviceTypeScanner = 0x2,};
enum ICReturnCode {ICReturnSuccess = 0x0,ICReturnInvalidParam = 0xFFFFFFFFFFFFD93E,ICReturnCommunicationTimedOut = 0xFFFFFFFFFFFFD93D,ICReturnScanOperationCanceled = 0xFFFFFFFFFFFFD93C,ICReturnScannerInUseByLocalUser = 0xFFFFFFFFFFFFD93B,ICReturnScannerInUseByRemoteUser = 0xFFFFFFFFFFFFD93A,ICReturnDeviceFailedToOpenSession = 0xFFFFFFFFFFFFD939,ICReturnDeviceFailedToCloseSession = 0xFFFFFFFFFFFFD938,ICReturnScannerFailedToSelectFunctionalUnit = 0xFFFFFFFFFFFFD937,ICReturnScannerFailedToCompleteOverviewScan = 0xFFFFFFFFFFFFD936,ICReturnScannerFailedToCompleteScan = 0xFFFFFFFFFFFFD935,ICReturnReceivedUnsolicitedScannerStatusInfo = 0xFFFFFFFFFFFFD934,ICReturnReceivedUnsolicitedScannerErrorInfo = 0xFFFFFFFFFFFFD933,ICReturnDownloadFailed = 0xFFFFFFFFFFFFD932,ICReturnUploadFailed = 0xFFFFFFFFFFFFD931,ICReturnFailedToCompletePassThroughCommand = 0xFFFFFFFFFFFFD930,ICReturnDownloadCanceled = 0xFFFFFFFFFFFFD92F,ICReturnFailedToEnabeTethering = 0xFFFFFFFFFFFFD92E,ICReturnFailedToDisabeTethering = 0xFFFFFFFFFFFFD92D,ICReturnFailedToCompleteSendMessageRequest = 0xFFFFFFFFFFFFD92C,ICReturnDeleteFilesFailed = 0xFFFFFFFFFFFFD92B,ICReturnDeleteFilesCanceled = 0xFFFFFFFFFFFFD92A,ICReturnDeviceIsPasscodeLocked = 0xFFFFFFFFFFFFD929,ICReturnDeviceFailedToTakePicture = 0xFFFFFFFFFFFFD928,ICReturnDeviceSoftwareNotInstalled = 0xFFFFFFFFFFFFD927,ICReturnDeviceSoftwareIsBeingInstalled = 0xFFFFFFFFFFFFD926,ICReturnDeviceSoftwareInstallationCompleted = 0xFFFFFFFFFFFFD925,ICReturnDeviceSoftwareInstallationCanceled = 0xFFFFFFFFFFFFD924,ICReturnDeviceSoftwareInstallationFailed = 0xFFFFFFFFFFFFD923,ICReturnDeviceSoftwareNotAvailable = 0xFFFFFFFFFFFFD922,ICReturnDeviceCouldNotPair = 0xFFFFFFFFFFFFD921,ICReturnDeviceCouldNotUnpair = 0xFFFFFFFFFFFFD920,ICReturnDeviceNeedsCredentials = 0xFFFFFFFFFFFFD91F,ICReturnDeviceIsBusyEnumerating = 0xFFFFFFFFFFFFD91E,ICReturnDeviceCommandGeneralFailure = 0xFFFFFFFFFFFFD91D,ICReturnDeviceFailedToCompleteTransfer = 0xFFFFFFFFFFFFD91C,ICReturnDeviceFailedToSendData = 0xFFFFFFFFFFFFD91B,ICReturnSessionNotOpened = 0xFFFFFFFFFFFFD91A,ICReturnExFATVolumeInvalid = 0x52D0,ICReturnMultiErrorDictionary = 0xFFFFFFFFFFFF8AD0,};
enum INAmountType {INAmountTypeUnknown = 0x0,INAmountTypeMinimumDue = 0x1,INAmountTypeAmountDue = 0x2,INAmountTypeCurrentBalance = 0x3,INAmountTypeMaximumTransferAmount = 0x4,INAmountTypeMinimumTransferAmount = 0x5,INAmountTypeStatementBalance = 0x6,};
enum INTaskStatus {INTaskStatusUnknown = 0x0,INTaskStatusNotCompleted = 0x1,INTaskStatusCompleted = 0x2,};
typedef __IOSurface *IOSurfaceRef;
typedef  OpaqueJSContext *JSContextRef;
enum MACRO_AF_IPX {AF_IPX = 23,AF_SIP = 24,};
enum MACRO_AT_IPC {AT_IPC_MSG = 1,AT_IPC_SEM = 2,AT_IPC_SHM = 3,};
enum MACRO_B14400 {B14400 = 14400,};
enum MACRO_B19200 {B19200 = 19200,};
enum MACRO_B28800 {B28800 = 28800,};
enum MACRO_B38400 {B38400 = 38400,};
enum MACRO_B57600 {B57600 = 57600,};
enum MACRO_B76800 {B76800 = 76800,};
enum MACRO_BLKDEV {BLKDEV_IOSIZE = 2048,};
enum MACRO_CBLOCK {CBLOCK = 64,MAXBSIZE = 1048576,};
enum MACRO_CERASE {CERASE = 0x7F,};
enum MACRO_CLOCKS {CLOCKS_PER_SEC = 1000000,};
enum MACRO_CLSIZE {CLSIZE = 1,};
enum MACRO_COMAPT {COMAPT_MAXLOGNAME = 12,};
enum MACRO_CPUMON {CPUMON_MAKE_FATAL = 0x1000,};
enum MACRO_DOMAIN {DOMAIN = 1,SING = 2,};
enum MACRO_EACCES {EACCES = 13,};
enum MACRO_EAGAIN {EAGAIN = 35,};
enum MACRO_ECHILD {ECHILD = 10,};
enum MACRO_ECHOKE {ECHOKE = 0x1,ECHOE = 0x2,ECHOK = 0x4,ECHO = 0x8,ECHONL = 0x10,ECHOPRT = 0x20,ECHOCTL = 0x40,ISIG = 0x80,ICANON = 0x100,ALTWERASE = 0x200,IEXTEN = 0x400,EXTPROC = 0x800,TOSTOP = 0x400000,FLUSHO = 0x800000,NOKERNINFO = 0x2000000,PENDIN = 0x20000000,NOFLSH = 0x80000000,};
enum MACRO_EDQUOT {EDQUOT = 69,};
enum MACRO_EEXIST {EEXIST = 17,};
enum MACRO_EFAULT {EFAULT = 14,};
enum MACRO_EFTYPE {EFTYPE = 79,};
enum MACRO_EILSEQ {EILSEQ = 92,};
enum MACRO_EINVAL {EINVAL = 22,};
enum MACRO_EISDIR {EISDIR = 21,};
enum MACRO_EMFILE {EMFILE = 24,};
enum MACRO_EMLINK {EMLINK = 31,EPIPE = 32,};
enum MACRO_ENFILE {ENFILE = 23,};
enum MACRO_ENODEV {ENODEV = 19,};
enum MACRO_ENOLCK {ENOLCK = 77,};
enum MACRO_ENOMEM {ENOMEM = 12,};
enum MACRO_ENOMSG {ENOMSG = 91,};
enum MACRO_ENOSPC {ENOSPC = 28,};
enum MACRO_ENOSTR {ENOSTR = 99,};
enum MACRO_ENOSYS {ENOSYS = 78,};
enum MACRO_ENOTTY {ENOTTY = 25,};
enum MACRO_EPROTO {EPROTO = 100,};
enum MACRO_EQFULL {EQFULL = 106,};
enum MACRO_ERANGE {ERANGE = 34,};
enum MACRO_ESPIPE {ESPIPE = 29,};
enum MACRO_ESTALE {ESTALE = 70,};
enum MACRO_EUSERS {EUSERS = 68,};
enum MACRO_EVFILT {EVFILT_READ = -1,EVFILT_WRITE = -2,EVFILT_AIO = -3,EVFILT_VNODE = -4,EVFILT_PROC = -5,EVFILT_SIGNAL = -6,EVFILT_TIMER = -7,EVFILT_MACHPORT = -8,EVFILT_FS = -9,EVFILT_USER = -10,EVFILT_VM = -12,EVFILT_EXCEPT = -15,EVFILT_SYSCOUNT = 17,};
enum MACRO_EXPORT {EXPORT_SYMBOL_FLAGS_KIND_MASK = 0x3,EXPORT_SYMBOL_FLAGS_KIND_REGULAR = 0x0,EXPORT_SYMBOL_FLAGS_KIND_THREAD_LOCAL = 0x1,EXPORT_SYMBOL_FLAGS_KIND_ABSOLUTE = 0x2,EXPORT_SYMBOL_FLAGS_WEAK_DEFINITION = 0x4,EXPORT_SYMBOL_FLAGS_REEXPORT = 0x8,EXPORT_SYMBOL_FLAGS_STUB_AND_RESOLVER = 0x10,};
enum MACRO_FHSIZE {FHSIZE = 32,};
enum MACRO_FILENO {STDIN_FILENO = 0,STDOUT_FILENO = 1,STDERR_FILENO = 2,};
enum MACRO_FSHIFT {FSHIFT = 11,};
enum MACRO_GETALL {GETALL = 6,};
enum MACRO_GETVAL {GETVAL = 5,};
enum MACRO_ICMPV6 {ICMPV6_PLD_MAXLEN = 1232,};
enum MACRO_IGNBRK {IGNBRK = 0x1,BRKINT = 0x2,IGNPAR = 0x4,PARMRK = 0x8,INPCK = 0x10,ISTRIP = 0x20,INLCR = 0x40,IGNCR = 0x80,ICRNL = 0x100,IXON = 0x200,IXOFF = 0x400,IXANY = 0x800,IMAXBEL = 0x2000,IUTF8 = 0x4000,};
enum MACRO_INADDR {INADDR_ANY = 0,INADDR_BROADCAST = 4294967295,};
enum MACRO_IP6OPT {IP6OPT_PAD1 = 0x0,IP6OPT_PADN = 0x1,IP6OPT_JUMBO = 0xC2,IP6OPT_NSAP_ADDR = 0xC3,IP6OPT_TUNNEL_LIMIT = 0x4,IP6OPT_RTALERT = 0x5,IP6OPT_ROUTER_ALERT = 0x5,IP6OPT_RTALERT_LEN = 0x4,IP6OPT_RTALERT_MLD = 0x0,IP6OPT_RTALERT_RSVP = 0x1,IP6OPT_RTALERT_ACTNET = 0x2,IP6OPT_MINLEN = 0x2,IP6OPT_EID = 0x8A,IP6OPT_TYPE_SKIP = 0x0,IP6OPT_TYPE_DISCARD = 0x40,IP6OPT_TYPE_FORCEICMP = 0x80,IP6OPT_TYPE_ICMP = 0xC0,IP6OPT_MUTABLE = 0x20,IP6OPT_JUMBO_LEN = 0x6,};
enum MACRO_IP6TOS {IP6TOS_CE = 0x1,IP6TOS_ECT = 0x2,};
enum MACRO_IPPORT {IPPORT_USERRESERVED = 5000,IPPORT_HIFIRSTAUTO = 49152,IPPORT_HILASTAUTO = 65535,IPPORT_RESERVEDSTART = 600,};
enum MACRO_IP_MSS {IP_MSS = 576,};
enum MACRO_ITIMER {ITIMER_REAL = 0,ITIMER_VIRTUAL = 1,ITIMER_PROF = 2,};
enum MACRO_KEVENT {KEVENT_FLAG_NONE = 0x0,KEVENT_FLAG_IMMEDIATE = 0x1,KEVENT_FLAG_ERROR_EVENTS = 0x2,};
enum MACRO_LC_REQ {LC_REQ_DYLD = 0x80000000,LC_SEGMENT = 0x1,LC_SYMTAB = 0x2,LC_SYMSEG = 0x3,LC_THREAD = 0x4,LC_UNIXTHREAD = 0x5,LC_LOADFVMLIB = 0x6,LC_IDFVMLIB = 0x7,LC_IDENT = 0x8,LC_FVMFILE = 0x9,LC_PREPAGE = 0xA,LC_DYSYMTAB = 0xB,LC_LOAD_DYLIB = 0xC,LC_ID_DYLIB = 0xD,LC_LOAD_DYLINKER = 0xE,LC_ID_DYLINKER = 0xF,LC_PREBOUND_DYLIB = 0x10,LC_ROUTINES = 0x11,LC_SUB_FRAMEWORK = 0x12,LC_SUB_UMBRELLA = 0x13,LC_SUB_CLIENT = 0x14,LC_SUB_LIBRARY = 0x15,LC_TWOLEVEL_HINTS = 0x16,LC_PREBIND_CKSUM = 0x17,LC_SEGMENT_64 = 0x19,LC_ROUTINES_64 = 0x1A,LC_UUID = 0x1B,LC_CODE_SIGNATURE = 0x1D,LC_SEGMENT_SPLIT_INFO = 0x1E,LC_LAZY_LOAD_DYLIB = 0x20,LC_ENCRYPTION_INFO = 0x21,LC_DYLD_INFO = 0x22,LC_VERSION_MIN_MACOSX = 0x24,LC_VERSION_MIN_IPHONEOS = 0x25,LC_FUNCTION_STARTS = 0x26,LC_DYLD_ENVIRONMENT = 0x27,LC_DATA_IN_CODE = 0x29,LC_SOURCE_VERSION = 0x2A,LC_DYLIB_CODE_SIGN_DRS = 0x2B,LC_ENCRYPTION_INFO_64 = 0x2C,LC_LINKER_OPTION = 0x2D,LC_LINKER_OPTIMIZATION_HINT = 0x2E,LC_VERSION_MIN_TVOS = 0x2F,LC_VERSION_MIN_WATCHOS = 0x30,LC_NOTE = 0x31,LC_BUILD_VERSION = 0x32,};
enum MACRO_LEDGER {LEDGER_ITEM_INFINITY = 4294967295,LEDGER_LIMIT_INFINITY = 9223372036854775807,};
enum MACRO_LIBXML {LIBXML_VERSION = 20904,};
enum MACRO_LSCALE {LSCALE = 1000,};
enum MACRO_MALLOC {MALLOC_PTR_IN_USE_RANGE_TYPE = 1,MALLOC_PTR_REGION_RANGE_TYPE = 2,MALLOC_ADMIN_REGION_RANGE_TYPE = 4,MALLOC_ZONE_SPECIFIC_FLAGS = 65280,MALLOC_VERBOSE_PRINT_LEVEL = 2,};
enum MACRO_MAXPRI {MAXPRI = 127,};
enum MACRO_MAXTTL {MAXTTL = 255,};
enum MACRO_MAX_IQ {MAX_IQ_TIME = 604800,MAX_DQ_TIME = 604800,};
enum MACRO_MDMBUF {MDMBUF = 0x100000,};
enum MACRO_MEMORY {MEMORY_OBJECT_NULL = 0,MEMORY_OBJECT_CONTROL_NULL = 0,MEMORY_OBJECT_NAME_NULL = 0,MEMORY_OBJECT_DEFAULT_NULL = 0,MEMORY_OBJECT_COPY_NONE = 0,MEMORY_OBJECT_COPY_CALL = 1,MEMORY_OBJECT_COPY_DELAY = 2,MEMORY_OBJECT_COPY_TEMPORARY = 3,MEMORY_OBJECT_COPY_SYMMETRIC = 4,MEMORY_OBJECT_COPY_INVALID = 5,MEMORY_OBJECT_RETURN_NONE = 0,MEMORY_OBJECT_RETURN_DIRTY = 1,MEMORY_OBJECT_RETURN_ALL = 2,MEMORY_OBJECT_RETURN_ANYTHING = 3,MEMORY_OBJECT_DATA_FLUSH = 1,MEMORY_OBJECT_DATA_NO_CHANGE = 2,MEMORY_OBJECT_DATA_PURGE = 4,MEMORY_OBJECT_COPY_SYNC = 8,MEMORY_OBJECT_DATA_SYNC = 16,MEMORY_OBJECT_IO_SYNC = 32,MEMORY_OBJECT_DATA_FLUSH_ALL = 64,MEMORY_OBJECT_INFO_MAX = 1024,MEMORY_OBJECT_PERFORMANCE_INFO = 11,MEMORY_OBJECT_ATTRIBUTE_INFO = 14,MEMORY_OBJECT_BEHAVIOR_INFO = 15,MEMORY_OBJECT_TERMINATE_IDLE = 1,MEMORY_OBJECT_RESPECT_CACHE = 2,MEMORY_OBJECT_RELEASE_NO_OP = 4,};
enum MACRO_MINSEC {MINSEC = 256,MAXSEC = 2048,};
enum MACRO_NETSVC {NETSVC_MRKNG_UNKNOWN = 0,NETSVC_MRKNG_LVL_L2 = 1,NETSVC_MRKNG_LVL_L3L2_ALL = 2,NETSVC_MRKNG_LVL_L3L2_BK = 3,};
enum MACRO_NET_RT {NET_RT_DUMP = 1,NET_RT_FLAGS = 2,NET_RT_IFLIST = 3,NET_RT_STAT = 4,NET_RT_TRASH = 5,NET_RT_IFLIST2 = 6,NET_RT_DUMP2 = 7,NET_RT_FLAGS_PRIV = 10,NET_RT_MAXID = 11,};
enum MACRO_NOCRED {NOCRED = 0,FSCRED = -1,};
enum MACRO_NOEXPR {NOEXPR = 53,};
enum MACRO_NOTIFY {NOTIFY_STATUS_OK = 0,NOTIFY_STATUS_INVALID_NAME = 1,NOTIFY_STATUS_INVALID_TOKEN = 2,NOTIFY_STATUS_INVALID_PORT = 3,NOTIFY_STATUS_INVALID_FILE = 4,NOTIFY_STATUS_INVALID_SIGNAL = 5,NOTIFY_STATUS_INVALID_REQUEST = 6,NOTIFY_STATUS_NOT_AUTHORIZED = 7,NOTIFY_STATUS_OPT_DISABLE = 8,NOTIFY_STATUS_SERVER_NOT_FOUND = 9,NOTIFY_STATUS_NULL_INPUT = 10,NOTIFY_STATUS_FAILED = 1000000,NOTIFY_REUSE = 1,NOTIFY_TOKEN_INVALID = -1,};
enum MACRO_N_GSYM {N_GSYM = 0x20,N_FNAME = 0x22,N_FUN = 0x24,N_STSYM = 0x26,N_LCSYM = 0x28,N_BNSYM = 0x2E,N_AST = 0x32,N_OPT = 0x3C,N_RSYM = 0x40,N_SLINE = 0x44,N_ENSYM = 0x4E,N_SSYM = 0x60,N_SO = 0x64,N_OSO = 0x66,N_LSYM = 0x80,N_BINCL = 0x82,N_SOL = 0x84,N_PARAMS = 0x86,N_VERSION = 0x88,N_OLEVEL = 0x8A,N_PSYM = 0xA0,N_EINCL = 0xA2,N_ENTRY = 0xA4,N_LBRAC = 0xC0,N_EXCL = 0xC2,N_RBRAC = 0xE0,N_BCOMM = 0xE2,N_ECOMM = 0xE4,N_ECOML = 0xE8,N_LENG = 0xFE,N_PC = 0x30,};
enum MACRO_OPAQUE {OPAQUE_TOOLBOX_STRUCTS = 1,OPAQUE_UPP_TYPES = 1,};
enum MACRO_OS_LOG {OS_LOG_TARGET_HAS_10_15_FEATURES = 1,OS_LOG_TARGET_HAS_10_14_FEATURES = 1,OS_LOG_TARGET_HAS_10_13_FEATURES = 1,OS_LOG_TARGET_HAS_10_12_FEATURES = 1,OS_TRACE_TYPE_RELEASE = 1,OS_TRACE_TYPE_DEBUG = 2,OS_TRACE_TYPE_INFO = 4,OS_TRACE_TYPE_ERROR = 65,OS_TRACE_TYPE_FAULT = 193,};
enum MACRO_PF_KEY {PF_KEY_V2 = 2,};
enum MACRO_POLICY {POLICY_NULL = 0,POLICY_TIMESHARE = 1,POLICY_RR = 2,POLICY_FIFO = 4,};
enum MACRO_POLLIN {POLLIN = 0x1,POLLPRI = 0x2,POLLOUT = 0x4,POLLRDNORM = 0x40,POLLRDBAND = 0x80,POLLWRBAND = 0x100,POLLEXTEND = 0x200,POLLATTRIB = 0x400,POLLNLINK = 0x800,POLLWRITE = 0x1000,};
enum MACRO_PPAUSE {PPAUSE = 40,};
enum MACRO_PRAGMA {PRAGMA_IMPORT = 0,PRAGMA_ONCE = 0,PRAGMA_STRUCT_PACK = 1,PRAGMA_STRUCT_PACKPUSH = 1,PRAGMA_STRUCT_ALIGN = 0,PRAGMA_ENUM_PACK = 0,PRAGMA_ENUM_ALWAYSINT = 0,PRAGMA_ENUM_OPTIONS = 0,};
enum MACRO_REBASE {REBASE_TYPE_POINTER = 1,REBASE_TYPE_TEXT_ABSOLUTE32 = 2,REBASE_TYPE_TEXT_PCREL32 = 3,REBASE_OPCODE_MASK = 240,REBASE_IMMEDIATE_MASK = 15,REBASE_OPCODE_DONE = 0,REBASE_OPCODE_SET_TYPE_IMM = 16,REBASE_OPCODE_SET_SEGMENT_AND_OFFSET_ULEB = 32,REBASE_OPCODE_ADD_ADDR_ULEB = 48,REBASE_OPCODE_ADD_ADDR_IMM_SCALED = 64,REBASE_OPCODE_DO_REBASE_IMM_TIMES = 80,REBASE_OPCODE_DO_REBASE_ULEB_TIMES = 96,REBASE_OPCODE_DO_REBASE_ADD_ADDR_ULEB = 112,REBASE_OPCODE_DO_REBASE_ULEB_TIMES_SKIPPING_ULEB = 128,};
enum MACRO_RENAME {RENAME_SECLUDE = 0x1,RENAME_SWAP = 0x2,RENAME_EXCL = 0x4,};
enum MACRO_RLIMIT {RLIMIT_CPU = 0,RLIMIT_FSIZE = 1,RLIMIT_DATA = 2,RLIMIT_STACK = 3,RLIMIT_CORE = 4,RLIMIT_AS = 5,RLIMIT_MEMLOCK = 6,RLIMIT_NPROC = 7,RLIMIT_NOFILE = 8,};
enum MACRO_RPCGEN {RPCGEN_VERSION = 199506,};
enum MACRO_RUSAGE {RUSAGE_SELF = 0,RUSAGE_CHILDREN = -1,RUSAGE_INFO_V0 = 0,RUSAGE_INFO_V1 = 1,RUSAGE_INFO_V2 = 2,RUSAGE_INFO_V3 = 3,RUSAGE_INFO_V4 = 4,};
enum MACRO_RUSERS {RUSERS_MAXUSERLEN = 32,RUSERS_MAXLINELEN = 32,RUSERS_MAXHOSTLEN = 257,RUSERS_EMPTY = 0,RUSERS_RUN_LVL = 1,RUSERS_BOOT_TIME = 2,RUSERS_OLD_TIME = 3,RUSERS_NEW_TIME = 4,RUSERS_INIT_PROCESS = 5,RUSERS_LOGIN_PROCESS = 6,RUSERS_USER_PROCESS = 7,RUSERS_DEAD_PROCESS = 8,RUSERS_ACCOUNTING = 9,};
enum MACRO_SCOPE6 {SCOPE6_ID_MAX = 16,};
enum MACRO_SETALL {SETALL = 9,};
enum MACRO_SHMLBA {SHMLBA = 16384,};
enum MACRO_SIGBUS {SIGBUS = 10,};
enum MACRO_SIGEMT {SIGEMT = 7,SIGFPE = 8,};
enum MACRO_SIGHUP {SIGHUP = 1,SIGINT = 2,};
enum MACRO_SIGSYS {SIGSYS = 12,};
enum MACRO_SKVIEW {SKVIEW_AVAILABLE = 1,};
enum MACRO_SQLITE {SQLITE_VERSION_NUMBER = 3032003,SQLITE_OK = 0,SQLITE_ERROR = 1,SQLITE_INTERNAL = 2,SQLITE_PERM = 3,SQLITE_ABORT = 4,SQLITE_BUSY = 5,SQLITE_LOCKED = 6,SQLITE_NOMEM = 7,SQLITE_READONLY = 8,SQLITE_INTERRUPT = 9,SQLITE_IOERR = 10,SQLITE_CORRUPT = 11,SQLITE_NOTFOUND = 12,SQLITE_FULL = 13,SQLITE_CANTOPEN = 14,SQLITE_PROTOCOL = 15,SQLITE_EMPTY = 16,SQLITE_SCHEMA = 17,SQLITE_TOOBIG = 18,SQLITE_CONSTRAINT = 19,SQLITE_MISMATCH = 20,SQLITE_MISUSE = 21,SQLITE_NOLFS = 22,SQLITE_AUTH = 23,SQLITE_FORMAT = 24,SQLITE_RANGE = 25,SQLITE_NOTADB = 26,SQLITE_NOTICE = 27,SQLITE_WARNING = 28,SQLITE_ROW = 100,SQLITE_DONE = 101,SQLITE_OPEN_READONLY = 1,SQLITE_OPEN_READWRITE = 2,SQLITE_OPEN_CREATE = 4,SQLITE_OPEN_DELETEONCLOSE = 8,SQLITE_OPEN_EXCLUSIVE = 16,SQLITE_OPEN_AUTOPROXY = 32,SQLITE_OPEN_URI = 64,SQLITE_OPEN_MEMORY = 128,SQLITE_OPEN_MAIN_DB = 256,SQLITE_OPEN_TEMP_DB = 512,SQLITE_OPEN_TRANSIENT_DB = 1024,SQLITE_OPEN_MAIN_JOURNAL = 2048,SQLITE_OPEN_TEMP_JOURNAL = 4096,SQLITE_OPEN_SUBJOURNAL = 8192,SQLITE_OPEN_MASTER_JOURNAL = 16384,SQLITE_OPEN_NOMUTEX = 32768,SQLITE_OPEN_FULLMUTEX = 65536,SQLITE_OPEN_SHAREDCACHE = 131072,SQLITE_OPEN_PRIVATECACHE = 262144,SQLITE_OPEN_WAL = 524288,SQLITE_OPEN_FILEPROTECTION_COMPLETE = 1048576,SQLITE_OPEN_FILEPROTECTION_COMPLETEUNLESSOPEN = 2097152,SQLITE_OPEN_FILEPROTECTION_COMPLETEUNTILFIRSTUSERAUTHENTICATION = 3145728,SQLITE_OPEN_FILEPROTECTION_NONE = 4194304,SQLITE_OPEN_FILEPROTECTION_MASK = 7340032,SQLITE_OPEN_NOFOLLOW = 16777216,SQLITE_IOCAP_ATOMIC = 1,SQLITE_IOCAP_ATOMIC512 = 2,SQLITE_IOCAP_ATOMIC1K = 4,SQLITE_IOCAP_ATOMIC2K = 8,SQLITE_IOCAP_ATOMIC4K = 16,SQLITE_IOCAP_ATOMIC8K = 32,SQLITE_IOCAP_ATOMIC16K = 64,SQLITE_IOCAP_ATOMIC32K = 128,SQLITE_IOCAP_ATOMIC64K = 256,SQLITE_IOCAP_SAFE_APPEND = 512,SQLITE_IOCAP_SEQUENTIAL = 1024,SQLITE_IOCAP_UNDELETABLE_WHEN_OPEN = 2048,SQLITE_IOCAP_POWERSAFE_OVERWRITE = 4096,SQLITE_IOCAP_IMMUTABLE = 8192,SQLITE_IOCAP_BATCH_ATOMIC = 16384,SQLITE_LOCK_NONE = 0,SQLITE_LOCK_SHARED = 1,SQLITE_LOCK_RESERVED = 2,SQLITE_LOCK_PENDING = 3,SQLITE_LOCK_EXCLUSIVE = 4,SQLITE_SYNC_NORMAL = 2,SQLITE_SYNC_FULL = 3,SQLITE_SYNC_DATAONLY = 16,SQLITE_FCNTL_LOCKSTATE = 1,SQLITE_FCNTL_GET_LOCKPROXYFILE = 2,SQLITE_FCNTL_SET_LOCKPROXYFILE = 3,SQLITE_FCNTL_LAST_ERRNO = 4,SQLITE_FCNTL_SIZE_HINT = 5,SQLITE_FCNTL_CHUNK_SIZE = 6,SQLITE_FCNTL_FILE_POINTER = 7,SQLITE_FCNTL_SYNC_OMITTED = 8,SQLITE_FCNTL_WIN32_AV_RETRY = 9,SQLITE_FCNTL_PERSIST_WAL = 10,SQLITE_FCNTL_OVERWRITE = 11,SQLITE_FCNTL_VFSNAME = 12,SQLITE_FCNTL_POWERSAFE_OVERWRITE = 13,SQLITE_FCNTL_PRAGMA = 14,SQLITE_FCNTL_BUSYHANDLER = 15,SQLITE_FCNTL_TEMPFILENAME = 16,SQLITE_FCNTL_MMAP_SIZE = 18,SQLITE_FCNTL_TRACE = 19,SQLITE_FCNTL_HAS_MOVED = 20,SQLITE_FCNTL_SYNC = 21,SQLITE_FCNTL_COMMIT_PHASETWO = 22,SQLITE_FCNTL_WIN32_SET_HANDLE = 23,SQLITE_FCNTL_WAL_BLOCK = 24,SQLITE_FCNTL_ZIPVFS = 25,SQLITE_FCNTL_RBU = 26,SQLITE_FCNTL_VFS_POINTER = 27,SQLITE_FCNTL_JOURNAL_POINTER = 28,SQLITE_FCNTL_WIN32_GET_HANDLE = 29,SQLITE_FCNTL_PDB = 30,SQLITE_FCNTL_BEGIN_ATOMIC_WRITE = 31,SQLITE_FCNTL_COMMIT_ATOMIC_WRITE = 32,SQLITE_FCNTL_ROLLBACK_ATOMIC_WRITE = 33,SQLITE_FCNTL_LOCK_TIMEOUT = 34,SQLITE_FCNTL_DATA_VERSION = 35,SQLITE_FCNTL_SIZE_LIMIT = 36,SQLITE_FCNTL_CKPT_DONE = 37,SQLITE_FCNTL_RESERVE_BYTES = 38,SQLITE_FCNTL_CKPT_START = 39,SQLITE_ACCESS_EXISTS = 0,SQLITE_ACCESS_READWRITE = 1,SQLITE_ACCESS_READ = 2,SQLITE_SHM_UNLOCK = 1,SQLITE_SHM_LOCK = 2,SQLITE_SHM_SHARED = 4,SQLITE_SHM_EXCLUSIVE = 8,SQLITE_SHM_NLOCK = 8,SQLITE_CONFIG_SINGLETHREAD = 1,SQLITE_CONFIG_MULTITHREAD = 2,SQLITE_CONFIG_SERIALIZED = 3,SQLITE_CONFIG_MALLOC = 4,SQLITE_CONFIG_GETMALLOC = 5,SQLITE_CONFIG_SCRATCH = 6,SQLITE_CONFIG_PAGECACHE = 7,SQLITE_CONFIG_HEAP = 8,SQLITE_CONFIG_MEMSTATUS = 9,SQLITE_CONFIG_MUTEX = 10,SQLITE_CONFIG_GETMUTEX = 11,SQLITE_CONFIG_LOOKASIDE = 13,SQLITE_CONFIG_PCACHE = 14,SQLITE_CONFIG_GETPCACHE = 15,SQLITE_CONFIG_LOG = 16,SQLITE_CONFIG_URI = 17,SQLITE_CONFIG_PCACHE2 = 18,SQLITE_CONFIG_GETPCACHE2 = 19,SQLITE_CONFIG_COVERING_INDEX_SCAN = 20,SQLITE_CONFIG_SQLLOG = 21,SQLITE_CONFIG_MMAP_SIZE = 22,SQLITE_CONFIG_WIN32_HEAPSIZE = 23,SQLITE_CONFIG_PCACHE_HDRSZ = 24,SQLITE_CONFIG_PMASZ = 25,SQLITE_CONFIG_STMTJRNL_SPILL = 26,SQLITE_CONFIG_SMALL_MALLOC = 27,SQLITE_CONFIG_SORTERREF_SIZE = 28,SQLITE_CONFIG_MEMDB_MAXSIZE = 29,SQLITE_DBCONFIG_MAINDBNAME = 1000,SQLITE_DBCONFIG_LOOKASIDE = 1001,SQLITE_DBCONFIG_ENABLE_FKEY = 1002,SQLITE_DBCONFIG_ENABLE_TRIGGER = 1003,SQLITE_DBCONFIG_ENABLE_FTS3_TOKENIZER = 1004,SQLITE_DBCONFIG_ENABLE_LOAD_EXTENSION = 1005,SQLITE_DBCONFIG_NO_CKPT_ON_CLOSE = 1006,SQLITE_DBCONFIG_ENABLE_QPSG = 1007,SQLITE_DBCONFIG_TRIGGER_EQP = 1008,SQLITE_DBCONFIG_RESET_DATABASE = 1009,SQLITE_DBCONFIG_DEFENSIVE = 1010,SQLITE_DBCONFIG_WRITABLE_SCHEMA = 1011,SQLITE_DBCONFIG_LEGACY_ALTER_TABLE = 1012,SQLITE_DBCONFIG_DQS_DML = 1013,SQLITE_DBCONFIG_DQS_DDL = 1014,SQLITE_DBCONFIG_ENABLE_VIEW = 1015,SQLITE_DBCONFIG_LEGACY_FILE_FORMAT = 1016,SQLITE_DBCONFIG_TRUSTED_SCHEMA = 1017,SQLITE_DBCONFIG_MAX = 1017,SQLITE_DENY = 1,SQLITE_IGNORE = 2,SQLITE_CREATE_INDEX = 1,SQLITE_CREATE_TABLE = 2,SQLITE_CREATE_TEMP_INDEX = 3,SQLITE_CREATE_TEMP_TABLE = 4,SQLITE_CREATE_TEMP_TRIGGER = 5,SQLITE_CREATE_TEMP_VIEW = 6,SQLITE_CREATE_TRIGGER = 7,SQLITE_CREATE_VIEW = 8,SQLITE_DELETE = 9,SQLITE_DROP_INDEX = 10,SQLITE_DROP_TABLE = 11,SQLITE_DROP_TEMP_INDEX = 12,SQLITE_DROP_TEMP_TABLE = 13,SQLITE_DROP_TEMP_TRIGGER = 14,SQLITE_DROP_TEMP_VIEW = 15,SQLITE_DROP_TRIGGER = 16,SQLITE_DROP_VIEW = 17,SQLITE_INSERT = 18,SQLITE_PRAGMA = 19,SQLITE_READ = 20,SQLITE_SELECT = 21,SQLITE_TRANSACTION = 22,SQLITE_UPDATE = 23,SQLITE_ATTACH = 24,SQLITE_DETACH = 25,SQLITE_ALTER_TABLE = 26,SQLITE_REINDEX = 27,SQLITE_ANALYZE = 28,SQLITE_CREATE_VTABLE = 29,SQLITE_DROP_VTABLE = 30,SQLITE_FUNCTION = 31,SQLITE_SAVEPOINT = 32,SQLITE_COPY = 0,SQLITE_RECURSIVE = 33,SQLITE_TRACE_STMT = 1,SQLITE_TRACE_PROFILE = 2,SQLITE_TRACE_ROW = 4,SQLITE_TRACE_CLOSE = 8,SQLITE_LIMIT_LENGTH = 0,SQLITE_LIMIT_SQL_LENGTH = 1,SQLITE_LIMIT_COLUMN = 2,SQLITE_LIMIT_EXPR_DEPTH = 3,SQLITE_LIMIT_COMPOUND_SELECT = 4,SQLITE_LIMIT_VDBE_OP = 5,SQLITE_LIMIT_FUNCTION_ARG = 6,SQLITE_LIMIT_ATTACHED = 7,SQLITE_LIMIT_LIKE_PATTERN_LENGTH = 8,SQLITE_LIMIT_VARIABLE_NUMBER = 9,SQLITE_LIMIT_TRIGGER_DEPTH = 10,SQLITE_LIMIT_WORKER_THREADS = 11,SQLITE_PREPARE_PERSISTENT = 1,SQLITE_PREPARE_NORMALIZE = 2,SQLITE_PREPARE_NO_VTAB = 4,SQLITE_INTEGER = 1,SQLITE_FLOAT = 2,SQLITE_BLOB = 4,SQLITE_NULL = 5,SQLITE_TEXT = 3,};
enum MACRO_SRCHFS {SRCHFS_START = 0x1,SRCHFS_MATCHPARTIALNAMES = 0x2,SRCHFS_MATCHDIRS = 0x4,SRCHFS_MATCHFILES = 0x8,SRCHFS_SKIPLINKS = 0x10,SRCHFS_SKIPINVISIBLE = 0x20,SRCHFS_SKIPPACKAGES = 0x40,SRCHFS_SKIPINAPPROPRIATE = 0x80,SRCHFS_NEGATEPARAMS = 0x80000000,SRCHFS_VALIDOPTIONSMASK = 0x800000FF,};
enum MACRO_SSLEEP {SSLEEP = 3,SSTOP = 4,};
enum MACRO_SWITCH {SWITCH_OPTION_NONE = 0,SWITCH_OPTION_DEPRESS = 1,SWITCH_OPTION_WAIT = 2,};
enum MACRO_S_ATTR {S_ATTR_PURE_INSTRUCTIONS = 0x80000000,S_ATTR_NO_TOC = 0x40000000,S_ATTR_STRIP_STATIC_SYMS = 0x20000000,S_ATTR_NO_DEAD_STRIP = 0x10000000,S_ATTR_LIVE_SUPPORT = 0x8000000,S_ATTR_SELF_MODIFYING_CODE = 0x4000000,S_ATTR_DEBUG = 0x2000000,};
enum MACRO_TARGET {TARGET_OS_MAC = 1,TARGET_OS_WIN32 = 0,TARGET_OS_UNIX = 0,TARGET_OS_OSX = 0,TARGET_OS_IPHONE = 1,TARGET_OS_IOS = 1,TARGET_OS_WATCH = 0,TARGET_OS_TV = 0,TARGET_OS_MACCATALYST = 0,TARGET_OS_UIKITFORMAC = 0,TARGET_OS_SIMULATOR = 0,TARGET_OS_EMBEDDED = 1,TARGET_OS_RTKIT = 0,TARGET_OS_DRIVERKIT = 0,TARGET_CPU_PPC = 0,TARGET_CPU_PPC64 = 0,TARGET_CPU_68K = 0,TARGET_CPU_X86 = 0,TARGET_CPU_X86_64 = 0,TARGET_CPU_ARM = 0,TARGET_CPU_ARM64 = 1,TARGET_CPU_MIPS = 0,TARGET_CPU_SPARC = 0,TARGET_CPU_ALPHA = 0,TARGET_RT_MAC_CFM = 0,TARGET_RT_MAC_MACHO = 1,TARGET_RT_LITTLE_ENDIAN = 1,TARGET_RT_BIG_ENDIAN = 0,TARGET_RT_64_BIT = 1,};
enum MACRO_TCIOFF {TCIOFF = 3,TCION = 4,};
enum MACRO_TCOOFF {TCOOFF = 1,TCOON = 2,};
enum MACRO_TCPCTL {TCPCTL_DO_RFC1323 = 1,TCPCTL_DO_RFC1644 = 2,TCPCTL_MSSDFLT = 3,TCPCTL_STATS = 4,TCPCTL_RTTDFLT = 5,TCPCTL_KEEPIDLE = 6,TCPCTL_KEEPINTVL = 7,TCPCTL_SENDSPACE = 8,TCPCTL_RECVSPACE = 9,TCPCTL_KEEPINIT = 10,TCPCTL_PCBLIST = 11,TCPCTL_DELACKTIME = 12,TCPCTL_V6MSSDFLT = 13,TCPCTL_MAXID = 14,};
enum MACRO_TCPOOB {TCPOOB_HAVEDATA = 0x1,TCPOOB_HADDATA = 0x2,};
enum MACRO_TCPOPT {TCPOPT_EOL = 0,TCPOPT_NOP = 1,TCPOPT_MAXSEG = 2,};
enum MACRO_TGEXEC {TGEXEC = 0x8,};
enum MACRO_TGREAD {TGREAD = 0x20,};
enum MACRO_THREAD {THREAD_STATE_NONE = 5,};
enum MACRO_TH_FIN {TH_FIN = 0x1,TH_SYN = 0x2,TH_RST = 0x4,TH_PUSH = 0x8,TH_ACK = 0x10,TH_URG = 0x20,TH_ECE = 0x40,TH_CWR = 0x80,};
enum MACRO_TOEXEC {TOEXEC = 0x1,};
enum MACRO_TOREAD {TOREAD = 0x4,};
enum MACRO_TUEXEC {TUEXEC = 0x40,};
enum MACRO_TUREAD {TUREAD = 0x100,};
enum MACRO_ULLONG {ULLONG_MAX = 0xFFFFFFFFFFFFFFFF,LLONG_MAX = 0x7FFFFFFFFFFFFFFF,};
enum MACRO_UNWIND {UNWIND_SECTION_VERSION = 1,UNWIND_SECOND_LEVEL_REGULAR = 2,UNWIND_SECOND_LEVEL_COMPRESSED = 3,};
enum MACRO_U_HIDE {U_HIDE_OBSOLETE_UTF_OLD_H = 0,};
enum MACRO_U_SHOW {U_SHOW_CPLUSPLUS_API = 0,U_USE_USRDATA = 0,U_MILLIS_PER_SECOND = 1000,U_MILLIS_PER_MINUTE = 60000,U_MILLIS_PER_HOUR = 3600000,U_MILLIS_PER_DAY = 86400000,U_FILE_SEP_CHAR = 47,U_FILE_ALT_SEP_CHAR = 47,U_PATH_SEP_CHAR = 58,U_FOLD_CASE_DEFAULT = 0,U_FOLD_CASE_EXCLUDE_SPECIAL_I = 1,U_TITLECASE_WHOLE_STRING = 32,U_TITLECASE_SENTENCES = 64,U_TITLECASE_NO_LOWERCASE = 256,U_TITLECASE_NO_BREAK_ADJUSTMENT = 512,U_TITLECASE_ADJUST_TO_CASED = 1024,U_EDITS_NO_RESET = 8192,U_OMIT_UNCHANGED_TEXT = 16384,U_COMPARE_CODE_POINT_ORDER = 32768,U_COMPARE_IGNORE_CASE = 65536,};
enum MACRO_VDSUSP {VDSUSP = 11,};
enum MACRO_VERASE {VERASE = 3,VWERASE = 4,};
enum MACRO_VIMAGE {VIMAGE_AFFINETRANSFORM_DOUBLE_IS_AVAILABLE = 1,VIMAGE_CGAFFINETRANSFORM_IS_AVAILABLE = 1,};
enum MACRO_VLNEXT {VLNEXT = 14,};
enum MACRO_VMADDR {VMADDR_CID_ANY = -1,VMADDR_CID_HYPERVISOR = 0,VMADDR_CID_RESERVED = 1,VMADDR_CID_HOST = 2,VMADDR_PORT_ANY = -1,};
enum MACRO_VM_MIN {VM_MIN_ADDRESS = 0x0,VM_MAX_ADDRESS = 0x80000000,};
enum MACRO_VSTART {VSTART = 12,};
enum MACRO_WINDOW {TCPOPT_WINDOW = 3,TCPOLEN_WINDOW = 3,};
enum MACRO_WITHIN {NOT_WITHIN = 0,PARTLY_WITHIN = 1,FULLY_WITHIN = 2,};
enum MACRO_XUCRED {XUCRED_VERSION = 0,};
enum MACRO_YESSTR {YESSTR = 54,};
enum MACRO_YPBIND {YPBIND_ERR_ERR = 1,YPBIND_ERR_NOSERV = 2,YPBIND_ERR_RESC = 3,};
enum MACRO_YPPROC {YPPROC_NULL = 0,YPPROC_DOMAIN = 1,YPPROC_DOMAIN_NONACK = 2,YPPROC_MATCH = 3,YPPROC_FIRST = 4,YPPROC_NEXT = 5,YPPROC_XFR = 6,YPPROC_CLEAR = 7,YPPROC_ALL = 8,YPPROC_MASTER = 9,YPPROC_ORDER = 10,YPPROC_MAPLIST = 11,};
enum MACRO_YPPROG {YPPROG = 100004,};
enum MACRO_YPPUSH {YPPUSH_XFRRESPPROG = 0x40000000,YPPUSH_XFRRESPVERS = 0x1,};
enum MACRO_YPVERS {YPVERS = 2,};
enum MACRO__CTYPE {_CTYPE_A = 0x100,_CTYPE_C = 0x200,_CTYPE_D = 0x400,_CTYPE_G = 0x800,_CTYPE_L = 0x1000,_CTYPE_P = 0x2000,_CTYPE_S = 0x4000,_CTYPE_U = 0x8000,_CTYPE_X = 0x10000,_CTYPE_B = 0x20000,_CTYPE_R = 0x40000,_CTYPE_I = 0x80000,_CTYPE_T = 0x100000,_CTYPE_Q = 0x200000,_CTYPE_SW0 = 0x20000000,_CTYPE_SW1 = 0x40000000,_CTYPE_SW2 = 0x80000000,_CTYPE_SW3 = 0xC0000000,_CTYPE_SWM = 0xE0000000,_CTYPE_SWS = 0x1E,};
enum MACRO__IOFBF {_IOFBF = 0,_IOLBF = 1,_IONBF = 2,BUFSIZ = 1024,};
enum MACRO__POSIX {_POSIX_ARG_MAX = 4096,_POSIX_CHILD_MAX = 25,_POSIX_LINK_MAX = 8,_POSIX_MAX_CANON = 255,_POSIX_MAX_INPUT = 255,_POSIX_NAME_MAX = 14,_POSIX_NGROUPS_MAX = 8,_POSIX_OPEN_MAX = 20,_POSIX_PATH_MAX = 256,_POSIX_PIPE_BUF = 512,_POSIX_SSIZE_MAX = 32767,_POSIX_STREAM_MAX = 8,_POSIX_TZNAME_MAX = 6,};
enum MACRO__XOPEN {_XOPEN_IOV_MAX = 16,IOV_MAX = 1024,_XOPEN_NAME_MAX = 255,_XOPEN_PATH_MAX = 1024,};
enum MACRO___BIND {__BIND = 19950621,};
enum MACRO___GNUC {__GNUC_VA_LIST = 1,};
enum MACRO___IPV6 {__IPV6_ADDR_SCOPE_NODELOCAL = 0x1,__IPV6_ADDR_SCOPE_INTFACELOCAL = 0x1,__IPV6_ADDR_SCOPE_LINKLOCAL = 0x2,__IPV6_ADDR_SCOPE_SITELOCAL = 0x5,__IPV6_ADDR_SCOPE_ORGLOCAL = 0x8,__IPV6_ADDR_SCOPE_GLOBAL = 0xE,};
enum MACRO___LP64 {__LP64_OFF64 = 1,};
enum MACRO___SLBF {__SLBF = 0x1,__SNBF = 0x2,__SRD = 0x4,__SWR = 0x8,__SRW = 0x10,__SEOF = 0x20,__SERR = 0x40,__SMBF = 0x80,__SAPP = 0x100,__SSTR = 0x200,__SOPT = 0x400,__SNPT = 0x800,__SOFF = 0x1000,__SMOD = 0x2000,__SALC = 0x4000,__SIGN = 0x8000,};
enum MACRO___STDC {__STDC_WANT_LIB_EXT1__ = 1,};
enum MACRO___TVOS {__TVOS_9_0 = 90000,__TVOS_9_1 = 90100,__TVOS_9_2 = 90200,__TVOS_10_0 = 100000,__TVOS_10_0_1 = 100001,__TVOS_10_1 = 100100,__TVOS_10_2 = 100200,__TVOS_11_0 = 110000,__TVOS_11_1 = 110100,__TVOS_11_2 = 110200,__TVOS_11_3 = 110300,__TVOS_11_4 = 110400,__TVOS_12_0 = 120000,__TVOS_12_1 = 120100,__TVOS_12_2 = 120200,__TVOS_12_3 = 120300,__TVOS_12_4 = 120400,__TVOS_13_0 = 130000,__TVOS_13_2 = 130200,__TVOS_13_3 = 130300,__TVOS_13_4 = 130400,__TVOS_14_0 = 140000,};
enum MACRO___bool {__bool_true_false_are_defined = 1,};
enum MACRO_pseudo {pseudo_AF_XTP = 19,};
struct MDLColorSpec;
enum MDLLightType {MDLLightTypeUnknown = 0x0,MDLLightTypeAmbient = 0x1,MDLLightTypeDirectional = 0x2,MDLLightTypeSpot = 0x3,MDLLightTypePoint = 0x4,MDLLightTypeLinear = 0x5,MDLLightTypeDiscArea = 0x6,MDLLightTypeRectangularArea = 0x7,MDLLightTypeSuperElliptical = 0x8,MDLLightTypePhotometric = 0x9,MDLLightTypeProbe = 0xA,MDLLightTypeEnvironment = 0xB,};
typedef void (*MIDIReadProc)( MIDIPacketList *, void *, void *);
typedef void *MKETAHandler;
enum MLModelError {MLModelErrorGeneric = 0x0,MLModelErrorFeatureType = 0x1,MLModelErrorIO = 0x3,MLModelErrorCustomLayer = 0x4,MLModelErrorCustomModel = 0x5,MLModelErrorUpdate = 0x6,MLModelErrorParameters = 0x7,MLModelErrorModelEncryption = 0x8,MLModelErrorModelKeyFetch = 0x9,MLModelErrorModelDecryption = 0xA,MLModelErrorModelCollection = 0xB,};
enum MPRepeatType {MPRepeatTypeOff = 0x0,MPRepeatTypeOne = 0x1,MPRepeatTypeAll = 0x2,};
enum MPSAlphaType {MPSAlphaTypeNonPremultiplied = 0x0,MPSAlphaTypeAlphaIsOne = 0x1,MPSAlphaTypePremultiplied = 0x2,};
enum MPSImageType {MPSImageType2d = 0x0,MPSImageType2d_array = 0x1,MPSImageTypeArray2d = 0x2,MPSImageTypeArray2d_array = 0x3,MPSImageType_ArrayMask = 0x1,MPSImageType_BatchMask = 0x2,MPSImageType_typeMask = 0x3,MPSImageType_noAlpha = 0x4,MPSImageType_texelFormatMask = 0x38,MPSImageType_texelFormatShift = 0x3,MPSImageType_texelFormatStandard = 0x0,MPSImageType_texelFormatUnorm8 = 0x8,MPSImageType_texelFormatFloat16 = 0x10,MPSImageType_texelFormatBFloat16 = 0x18,MPSImageType_bitCount = 0x6,MPSImageType_mask = 0x3F,MPSImageType2d_noAlpha = 0x4,MPSImageType2d_array_noAlpha = 0x5,MPSImageTypeArray2d_noAlpha = 0x6,MPSImageTypeArray2d_array_noAlpha = 0x7,};
enum MTLGPUFamily {MTLGPUFamilyApple1 = 0x3E9,MTLGPUFamilyApple2 = 0x3EA,MTLGPUFamilyApple3 = 0x3EB,MTLGPUFamilyApple4 = 0x3EC,MTLGPUFamilyApple5 = 0x3ED,MTLGPUFamilyApple6 = 0x3EE,MTLGPUFamilyMac1 = 0x7D1,MTLGPUFamilyMac2 = 0x7D2,MTLGPUFamilyCommon1 = 0xBB9,MTLGPUFamilyCommon2 = 0xBBA,MTLGPUFamilyCommon3 = 0xBBB,MTLGPUFamilyMacCatalyst1 = 0xFA1,MTLGPUFamilyMacCatalyst2 = 0xFA2,};
enum MTLIndexType {MTLIndexTypeUInt16 = 0x0,MTLIndexTypeUInt32 = 0x1,};
enum MTLPatchType {MTLPatchTypeNone = 0x0,MTLPatchTypeTriangle = 0x1,MTLPatchTypeQuad = 0x2,};
struct NDR_record_t {unsigned char mig_vers;unsigned char if_vers;unsigned char reserved1;unsigned char mig_encoding;unsigned char int_rep;unsigned char char_rep;unsigned char float_rep;unsigned char reserved2;};
struct NEPacketFlow;
typedef void *NSComparator;
struct NSConnection;
enum NSDeleteRule {NSNoActionDeleteRule = 0x0,NSNullifyDeleteRule = 0x1,NSCascadeDeleteRule = 0x2,NSDenyDeleteRule = 0x3,};
enum NWPathStatus {NWPathStatusInvalid = 0x0,NWPathStatusSatisfied = 0x1,NWPathStatusUnsatisfied = 0x2,NWPathStatusSatisfiable = 0x3,};
enum PDFLineStyle {kPDFLineStyleNone = 0x0,kPDFLineStyleSquare = 0x1,kPDFLineStyleCircle = 0x2,kPDFLineStyleDiamond = 0x3,kPDFLineStyleOpenArrow = 0x4,kPDFLineStyleClosedArrow = 0x5,};
enum PKEraserType {PKEraserTypeVector = 0x0,PKEraserTypeBitmap = 0x1,};
enum SCNBlendMode {SCNBlendModeAlpha = 0x0,SCNBlendModeAdd = 0x1,SCNBlendModeSubtract = 0x2,SCNBlendModeMultiply = 0x3,SCNBlendModeScreen = 0x4,SCNBlendModeReplace = 0x5,SCNBlendModeMax = 0x6,};
enum SKRepeatMode {SKRepeatModeClamp = 0x1,SKRepeatModeLoop = 0x2,};
typedef __SecAccess *SecAccessRef;
typedef __SecPolicy *SecPolicyRef;
typedef  __SecRandom *SecRandomRef;
enum SparseKind_t {SparseOrdinary = 0x0,SparseTriangular = 0x1,SparseUnitTriangular = 0x2,SparseSymmetric = 0x3,};
typedef _TXTRecordRef_t TXTRecordRef;
enum UIBarMetrics {UIBarMetricsDefault = 0x0,UIBarMetricsCompact = 0x1,UIBarMetricsDefaultPrompt = 0x65,UIBarMetricsCompactPrompt = 0x66,UIBarMetricsLandscapePhone = 0x1,UIBarMetricsLandscapePhonePrompt = 0x66,};
enum UIButtonRole {UIButtonRoleNormal = 0x0,UIButtonRolePrimary = 0x1,UIButtonRoleCancel = 0x2,UIButtonRoleDestructive = 0x3,};
enum UIButtonType {UIButtonTypeCustom = 0x0,UIButtonTypeSystem = 0x1,UIButtonTypeDetailDisclosure = 0x2,UIButtonTypeInfoLight = 0x3,UIButtonTypeInfoDark = 0x4,UIButtonTypeContactAdd = 0x5,UIButtonTypePlain = 0x6,UIButtonTypeClose = 0x7,UIButtonTypeRoundedRect = 0x1,};
enum UIPressPhase {UIPressPhaseBegan = 0x0,UIPressPhaseChanged = 0x1,UIPressPhaseStationary = 0x2,UIPressPhaseEnded = 0x3,UIPressPhaseCancelled = 0x4,};
enum UIScrollType {UIScrollTypeDiscrete = 0x0,UIScrollTypeContinuous = 0x1,};
enum UITouchPhase {UITouchPhaseBegan = 0x0,UITouchPhaseMoved = 0x1,UITouchPhaseStationary = 0x2,UITouchPhaseEnded = 0x3,UITouchPhaseCancelled = 0x4,UITouchPhaseRegionEntered = 0x5,UITouchPhaseRegionMoved = 0x6,UITouchPhaseRegionExited = 0x7,};
enum UJoiningType {U_JT_NON_JOINING = 0x0,U_JT_JOIN_CAUSING = 0x1,U_JT_DUAL_JOINING = 0x2,U_JT_LEFT_JOINING = 0x3,U_JT_RIGHT_JOINING = 0x4,U_JT_TRANSPARENT = 0x5,U_JT_COUNT = 0x6,};
enum UNAlertStyle {UNAlertStyleNone = 0x0,UNAlertStyleBanner = 0x1,UNAlertStyleAlert = 0x2,};
enum UNumericType {U_NT_NONE = 0x0,U_NT_DECIMAL = 0x1,U_NT_DIGIT = 0x2,U_NT_NUMERIC = 0x3,U_NT_COUNT = 0x4,};
typedef unsigned long long UniCharCount;
typedef float VNConfidence;
struct XML_Encoding {int map[256];void *data;int (*convert)(void *,  char *);void (*release)(void *);};
struct __CFCalendar;
struct __CFMachPort;
struct __CFTimeZone;
struct __objc2_prop {char *name;char *attr;};
struct _acl_flagset;
struct _acl_permset;
struct _xmlAutomata;
struct _xmlChLRange {unsigned int low;unsigned int high;};
struct _xmlChSRange {unsigned short low;unsigned short high;};
struct _xmlSaveCtxt;
typedef int alarm_type_t;
typedef __asl_object_s *asl_object_t;
typedef NSObject *at_encoder_t;
typedef unsigned char au_ctlmode_t;
typedef au_session au_session_t;
typedef auditpinfo auditpinfo_t;
typedef int *clock_attr_t;
typedef  __dns_handle_private_struct *dns_handle_t;
typedef int dnssd_sock_t;
typedef void (*errorSAXFunc)(void *,  char *, ...);
typedef ether_addr ether_addr_t;
typedef diskextent extentrecord[8];
typedef fpunchhole fpunchhole_t;
typedef gss_OID_desc_struct gss_OID_desc;
typedef gss_buffer_desc_struct *gss_buffer_t;
typedef gss_ctx_id_t_desc_struct *gss_ctx_id_t;
typedef _htmlElemDesc htmlElemDesc;
struct if_nameindex {unsigned int if_index;char *if_name;};
typedef char *io_buf_ptr_t;
struct ip6_moptions;
typedef ucred *kauth_cred_t;
typedef mig_symtab mig_symtab_t;
typedef NSObject *nw_browser_t;
enum os_clockid_t {OS_CLOCK_MACH_ABSOLUTE_TIME = 0x20,};
typedef simd_packed_char2 packed_char2;
typedef simd_packed_char4 packed_char4;
typedef simd_packed_char8 packed_char8;
typedef simd_packed_int16 packed_int16;
typedef simd_packed_long2 packed_long2;
typedef simd_packed_long4 packed_long4;
typedef simd_packed_long8 packed_long8;
typedef simd_packed_uint2 packed_uint2;
typedef simd_packed_uint4 packed_uint4;
typedef simd_packed_uint8 packed_uint8;
typedef posix_cred *posix_cred_t;
typedef __ns_msg res_9_ns_msg;
typedef NSObject *sec_object_t;
typedef int sig_atomic_t;
typedef simd_char16 simd__char16;
typedef simd_char32 simd__char32;
typedef simd_char64 simd__char64;
typedef simd_float2 simd__float2;
typedef simd_float3 simd__float3;
typedef simd_float4 simd__float4;
typedef simd_float8 simd__float8;
typedef simd_short2 simd__short2;
typedef simd_short3 simd__short3;
typedef simd_short4 simd__short4;
typedef simd_short8 simd__short8;
typedef simd_uchar2 simd__uchar2;
typedef simd_uchar3 simd__uchar3;
typedef simd_uchar4 simd__uchar4;
typedef simd_uchar8 simd__uchar8;
typedef simd_uint16 simd__uint16;
typedef simd_ulong2 simd__ulong2;
typedef simd_ulong3 simd__ulong3;
typedef simd_ulong4 simd__ulong4;
typedef simd_ulong8 simd__ulong8;
typedef double simd_double1;
union __attribute__((aligned(16))) simd_double2 {double f64[2];};
union __attribute__((aligned(16))) simd_double3 {double f64[3];};
union __attribute__((aligned(16))) simd_double4 {double f64[4];};
union __attribute__((aligned(16))) simd_double8 {double f64[8];};
union __attribute__((aligned(16))) simd_float16 {float f32[16];char i8[64];short i16[32];int i32[16];long long i64[8];__int128 i128[4];unsigned char u8[64];unsigned short u16[32];unsigned int u32[16];unsigned long long u64[8];__uint128 u128[4];};
union __attribute__((aligned(16))) simd_short16 {char i8[32];short i16[16];int i32[8];long long i64[4];__int128 i128[2];unsigned char u8[32];unsigned short u16[16];unsigned int u32[8];unsigned long long u64[4];__uint128 u128[2];};
union __attribute__((aligned(16))) simd_short32 {char i8[64];short i16[32];int i32[16];long long i64[8];__int128 i128[4];unsigned char u8[64];unsigned short u16[32];unsigned int u32[16];unsigned long long u64[8];__uint128 u128[4];};
union __attribute__((aligned(16))) simd_uchar16 {char i8[16];short i16[8];int i32[4];long long i64[2];unsigned char u8[16];unsigned short u16[8];unsigned int u32[4];unsigned long long u64[2];};
union __attribute__((aligned(16))) simd_uchar32 {char i8[32];short i16[16];int i32[8];long long i64[4];__int128 i128[2];unsigned char u8[32];unsigned short u16[16];unsigned int u32[8];unsigned long long u64[4];__uint128 u128[2];};
union __attribute__((aligned(16))) simd_uchar64 {char i8[64];short i16[32];int i32[16];long long i64[8];__int128 i128[4];unsigned char u8[64];unsigned short u16[32];unsigned int u32[16];unsigned long long u64[8];__uint128 u128[4];};
typedef unsigned short simd_ushort1;
union __attribute__((aligned(4))) simd_ushort2 {char i8[4];short i16[2];unsigned char u8[4];unsigned short u16[2];};
union __attribute__((aligned(8))) simd_ushort3 {char i8[8];short i16[4];int i32[2];unsigned char u8[8];unsigned short u16[4];unsigned int u32[2];};
union __attribute__((aligned(8))) simd_ushort4 {char i8[8];short i16[4];int i32[2];unsigned char u8[8];unsigned short u16[4];unsigned int u32[2];};
union __attribute__((aligned(16))) simd_ushort8 {char i8[16];short i16[8];int i32[4];long long i64[2];unsigned char u8[16];unsigned short u16[8];unsigned int u32[4];unsigned long long u64[2];};
typedef int sleep_type_t;
struct sqlite3_blob;
struct sqlite3_file { sqlite3_io_methods *pMethods;};
struct sqlite3_stmt;
struct sqlite3_vtab { sqlite3_module *pModule;int nRef;char *zErrMsg;};
typedef long long sqlite_int64;
union __attribute__((aligned(8))) swift_float2 {float f32[2];char i8[8];short i16[4];int i32[2];unsigned char u8[8];unsigned short u16[4];unsigned int u32[2];};
union __attribute__((aligned(16))) swift_float3 {float f32[3];char i8[16];short i16[8];int i32[4];long long i64[2];unsigned char u8[16];unsigned short u16[8];unsigned int u32[4];unsigned long long u64[2];};
union __attribute__((aligned(16))) swift_float4 {float f32[4];char i8[16];short i16[8];int i32[4];long long i64[2];unsigned char u8[16];unsigned short u16[8];unsigned int u32[4];unsigned long long u64[2];};
typedef time_value time_value_t;
typedef __darwin_ucontext64 ucontext64_t;
typedef int unw_regnum_t;
typedef simd_char2 vector_char2;
typedef simd_char3 vector_char3;
typedef simd_char4 vector_char4;
typedef simd_char8 vector_char8;
typedef simd_int16 vector_int16;
typedef simd_long2 vector_long2;
typedef simd_long3 vector_long3;
typedef simd_long4 vector_long4;
typedef simd_long8 vector_long8;
typedef simd_uint2 vector_uint2;
typedef simd_uint3 vector_uint3;
typedef simd_uint4 vector_uint4;
typedef simd_uint8 vector_uint8;
typedef unsigned int vm_inherit_t;
enum xlinkActuate {XLINK_ACTUATE_NONE = 0x0,XLINK_ACTUATE_AUTO = 0x1,XLINK_ACTUATE_ONREQUEST = 0x2,};
typedef _xlinkHandler xlinkHandler;
typedef _xmlAttribute xmlAttribute;
typedef struct _xmlHashTable xmlHashTable;
typedef struct _xmlSchemaVal xmlSchemaVal;
typedef _xmlShellCtxt xmlShellCtxt;
typedef _xmlValidCtxt xmlValidCtxt;
typedef _xmlXPathAxis xmlXPathAxis;
typedef _xmlXPathType xmlXPathType;
enum ACErrorCode {ACErrorUnknown = 0x1,ACErrorAccountMissingRequiredProperty = 0x2,ACErrorAccountAuthenticationFailed = 0x3,ACErrorAccountTypeInvalid = 0x4,ACErrorAccountAlreadyExists = 0x5,ACErrorAccountNotFound = 0x6,ACErrorPermissionDenied = 0x7,ACErrorAccessInfoInvalid = 0x8,ACErrorClientPermissionDenied = 0x9,ACErrorAccessDeniedByProtectionPolicy = 0xA,ACErrorCredentialNotFound = 0xB,ACErrorFetchCredentialFailed = 0xC,ACErrorStoreCredentialFailed = 0xD,ACErrorRemoveCredentialFailed = 0xE,ACErrorUpdatingNonexistentAccount = 0xF,ACErrorInvalidClientBundleID = 0x10,ACErrorDeniedByPlugin = 0x11,ACErrorCoreDataSaveFailed = 0x12,ACErrorFailedSerializingAccountInfo = 0x13,ACErrorInvalidCommand = 0x14,ACErrorMissingTransportMessageID = 0x15,ACErrorCredentialItemNotFound = 0x16,ACErrorCredentialItemNotExpired = 0x17,};
enum ARErrorCode {ARErrorCodeUnsupportedConfiguration = 0x64,ARErrorCodeSensorUnavailable = 0x65,ARErrorCodeSensorFailed = 0x66,ARErrorCodeCameraUnauthorized = 0x67,ARErrorCodeMicrophoneUnauthorized = 0x68,ARErrorCodeLocationUnauthorized = 0x69,ARErrorCodeWorldTrackingFailed = 0xC8,ARErrorCodeGeoTrackingNotAvailableAtLocation = 0xC9,ARErrorCodeGeoTrackingFailed = 0xCA,ARErrorCodeInvalidReferenceImage = 0x12C,ARErrorCodeInvalidReferenceObject = 0x12D,ARErrorCodeInvalidWorldMap = 0x12E,ARErrorCodeInvalidConfiguration = 0x12F,ARErrorCodeCollaborationDataUnavailable = 0x130,ARErrorCodeInvalidCollaborationData = 0x130,ARErrorCodeInsufficientFeatures = 0x190,ARErrorCodeObjectMergeFailed = 0x191,ARErrorCodeFileIOFailed = 0x1F4,ARErrorCodeRequestFailed = 0x1F5,};
typedef _AVBeatRange AVBeatRange;
typedef OpaqueAudioFileID *AudioFileID;
enum CBLAS_ORDER {CblasRowMajor = 0x65,CblasColMajor = 0x66,};
typedef CC_SHA1state_st CC_SHA1_CTX;
typedef __CFBundle *CFBundleRef;
typedef  __CFLocale *CFLocaleRef;
typedef  __CFNumber *CFNumberRef;
typedef __CFBundle *CFPlugInRef;
typedef __CFSocket *CFSocketRef;
typedef  __CFString *CFStringRef;
enum CGBlendMode {kCGBlendModeNormal = 0x0,kCGBlendModeMultiply = 0x1,kCGBlendModeScreen = 0x2,kCGBlendModeOverlay = 0x3,kCGBlendModeDarken = 0x4,kCGBlendModeLighten = 0x5,kCGBlendModeColorDodge = 0x6,kCGBlendModeColorBurn = 0x7,kCGBlendModeSoftLight = 0x8,kCGBlendModeHardLight = 0x9,kCGBlendModeDifference = 0xA,kCGBlendModeExclusion = 0xB,kCGBlendModeHue = 0xC,kCGBlendModeSaturation = 0xD,kCGBlendModeColor = 0xE,kCGBlendModeLuminosity = 0xF,kCGBlendModeClear = 0x10,kCGBlendModeCopy = 0x11,kCGBlendModeSourceIn = 0x12,kCGBlendModeSourceOut = 0x13,kCGBlendModeSourceAtop = 0x14,kCGBlendModeDestinationOver = 0x15,kCGBlendModeDestinationIn = 0x16,kCGBlendModeDestinationOut = 0x17,kCGBlendModeDestinationAtop = 0x18,kCGBlendModeXOR = 0x19,kCGBlendModePlusDarker = 0x1A,kCGBlendModePlusLighter = 0x1B,};
typedef unsigned short CGFontIndex;
struct CGPDFObject;
struct CGPDFStream;
struct CGPDFString;
enum CKErrorCode {CKErrorInternalError = 0x1,CKErrorPartialFailure = 0x2,CKErrorNetworkUnavailable = 0x3,CKErrorNetworkFailure = 0x4,CKErrorBadContainer = 0x5,CKErrorServiceUnavailable = 0x6,CKErrorRequestRateLimited = 0x7,CKErrorMissingEntitlement = 0x8,CKErrorNotAuthenticated = 0x9,CKErrorPermissionFailure = 0xA,CKErrorUnknownItem = 0xB,CKErrorInvalidArguments = 0xC,CKErrorResultsTruncated = 0xD,CKErrorServerRecordChanged = 0xE,CKErrorServerRejectedRequest = 0xF,CKErrorAssetFileNotFound = 0x10,CKErrorAssetFileModified = 0x11,CKErrorIncompatibleVersion = 0x12,CKErrorConstraintViolation = 0x13,CKErrorOperationCancelled = 0x14,CKErrorChangeTokenExpired = 0x15,CKErrorBatchRequestFailed = 0x16,CKErrorZoneBusy = 0x17,CKErrorBadDatabase = 0x18,CKErrorQuotaExceeded = 0x19,CKErrorZoneNotFound = 0x1A,CKErrorLimitExceeded = 0x1B,CKErrorUserDeletedZone = 0x1C,CKErrorTooManyParticipants = 0x1D,CKErrorAlreadyShared = 0x1E,CKErrorReferenceViolation = 0x1F,CKErrorManagedAccountRestricted = 0x20,CKErrorParticipantMayNeedVerification = 0x21,CKErrorServerResponseLost = 0x22,CKErrorAssetNotAvailable = 0x23,};
enum CLProximity {CLProximityUnknown = 0x0,CLProximityImmediate = 0x1,CLProximityNear = 0x2,CLProximityFar = 0x3,};
enum CNErrorCode {CNErrorCodeCommunicationError = 0x1,CNErrorCodeDataAccessError = 0x2,CNErrorCodeAuthorizationDenied = 0x64,CNErrorCodeNoAccessableWritableContainers = 0x65,CNErrorCodeUnauthorizedKeys = 0x66,CNErrorCodeFeatureDisabledByUser = 0x67,CNErrorCodeRecordDoesNotExist = 0xC8,CNErrorCodeInsertedRecordAlreadyExists = 0xC9,CNErrorCodeContainmentCycle = 0xCA,CNErrorCodeContainmentScope = 0xCB,CNErrorCodeParentRecordDoesNotExist = 0xCC,CNErrorCodeRecordIdentifierInvalid = 0xCD,CNErrorCodeRecordNotWritable = 0xCE,CNErrorCodeParentContainerNotWritable = 0xCF,CNErrorCodeValidationMultipleErrors = 0x12C,CNErrorCodeValidationTypeMismatch = 0x12D,CNErrorCodeValidationConfigurationError = 0x12E,CNErrorCodePredicateInvalid = 0x190,CNErrorCodePolicyViolation = 0x1F4,CNErrorCodeClientIdentifierInvalid = 0x258,CNErrorCodeClientIdentifierDoesNotExist = 0x259,CNErrorCodeClientIdentifierCollision = 0x25A,CNErrorCodeChangeHistoryExpired = 0x25B,CNErrorCodeChangeHistoryInvalidAnchor = 0x25C,CNErrorCodeVCardMalformed = 0x2BC,CNErrorCodeVCardSummarizationError = 0x2BD,};
typedef __CVBuffer *CVBufferRef;
enum CXErrorCode {CXErrorCodeUnknownError = 0x0,CXErrorCodeUnentitled = 0x1,CXErrorCodeInvalidArgument = 0x2,};
enum EKAlarmType {EKAlarmTypeDisplay = 0x0,EKAlarmTypeAudio = 0x1,EKAlarmTypeProcedure = 0x2,EKAlarmTypeEmail = 0x3,};
enum EKErrorCode {EKErrorEventNotMutable = 0x0,EKErrorNoCalendar = 0x1,EKErrorNoStartDate = 0x2,EKErrorNoEndDate = 0x3,EKErrorDatesInverted = 0x4,EKErrorInternalFailure = 0x5,EKErrorCalendarReadOnly = 0x6,EKErrorDurationGreaterThanRecurrence = 0x7,EKErrorAlarmGreaterThanRecurrence = 0x8,EKErrorStartDateTooFarInFuture = 0x9,EKErrorStartDateCollidesWithOtherOccurrence = 0xA,EKErrorObjectBelongsToDifferentStore = 0xB,EKErrorInvitesCannotBeMoved = 0xC,EKErrorInvalidSpan = 0xD,EKErrorCalendarHasNoSource = 0xE,EKErrorCalendarSourceCannotBeModified = 0xF,EKErrorCalendarIsImmutable = 0x10,EKErrorSourceDoesNotAllowCalendarAddDelete = 0x11,EKErrorRecurringReminderRequiresDueDate = 0x12,EKErrorStructuredLocationsNotSupported = 0x13,EKErrorReminderLocationsNotSupported = 0x14,EKErrorAlarmProximityNotSupported = 0x15,EKErrorCalendarDoesNotAllowEvents = 0x16,EKErrorCalendarDoesNotAllowReminders = 0x17,EKErrorSourceDoesNotAllowReminders = 0x18,EKErrorSourceDoesNotAllowEvents = 0x19,EKErrorPriorityIsInvalid = 0x1A,EKErrorInvalidEntityType = 0x1B,EKErrorProcedureAlarmsNotMutable = 0x1C,EKErrorEventStoreNotAuthorized = 0x1D,EKErrorOSNotSupported = 0x1E,EKErrorInvalidInviteReplyCalendar = 0x1F,EKErrorNotificationsCollectionFlagNotSet = 0x20,EKErrorSourceMismatch = 0x21,EKErrorNotificationCollectionMismatch = 0x22,EKErrorNotificationSavedWithoutCollection = 0x23,EKErrorLast = 0x24,};
enum ENErrorCode {ENErrorCodeUnknown = 0x1,ENErrorCodeBadParameter = 0x2,ENErrorCodeNotEntitled = 0x3,ENErrorCodeNotAuthorized = 0x4,ENErrorCodeUnsupported = 0x5,ENErrorCodeInvalidated = 0x6,ENErrorCodeBluetoothOff = 0x7,ENErrorCodeInsufficientStorage = 0x8,ENErrorCodeNotEnabled = 0x9,ENErrorCodeAPIMisuse = 0xA,ENErrorCodeInternal = 0xB,ENErrorCodeInsufficientMemory = 0xC,ENErrorCodeRateLimited = 0xD,ENErrorCodeRestricted = 0xE,ENErrorCodeBadFormat = 0xF,ENErrorCodeDataInaccessible = 0x10,};
struct Fts5Context;
enum GKErrorCode {GKErrorUnknown = 0x1,GKErrorCancelled = 0x2,GKErrorCommunicationsFailure = 0x3,GKErrorUserDenied = 0x4,GKErrorInvalidCredentials = 0x5,GKErrorNotAuthenticated = 0x6,GKErrorAuthenticationInProgress = 0x7,GKErrorInvalidPlayer = 0x8,GKErrorScoreNotSet = 0x9,GKErrorParentalControlsBlocked = 0xA,GKErrorPlayerStatusExceedsMaximumLength = 0xB,GKErrorPlayerStatusInvalid = 0xC,GKErrorMatchRequestInvalid = 0xD,GKErrorUnderage = 0xE,GKErrorGameUnrecognized = 0xF,GKErrorNotSupported = 0x10,GKErrorInvalidParameter = 0x11,GKErrorUnexpectedConnection = 0x12,GKErrorChallengeInvalid = 0x13,GKErrorTurnBasedMatchDataTooLarge = 0x14,GKErrorTurnBasedTooManySessions = 0x15,GKErrorTurnBasedInvalidParticipant = 0x16,GKErrorTurnBasedInvalidTurn = 0x17,GKErrorTurnBasedInvalidState = 0x18,GKErrorInvitationsDisabled = 0x19,GKErrorPlayerPhotoFailure = 0x1A,GKErrorUbiquityContainerUnavailable = 0x1B,GKErrorMatchNotConnected = 0x1C,GKErrorGameSessionRequestInvalid = 0x1D,GKErrorRestrictedToAutomatch = 0x1E,GKErrorAPINotAvailable = 0x1F,GKErrorNotAuthorized = 0x20,GKErrorConnectionTimeout = 0x21,GKErrorAPIObsolete = 0x22,};
enum GKMatchType {GKMatchTypePeerToPeer = 0x0,GKMatchTypeHosted = 0x1,GKMatchTypeTurnBased = 0x2,};
enum GKPhotoSize {GKPhotoSizeSmall = 0x0,GKPhotoSizeNormal = 0x1,};
enum HKBloodType {HKBloodTypeNotSet = 0x0,HKBloodTypeAPositive = 0x1,HKBloodTypeANegative = 0x2,HKBloodTypeBPositive = 0x3,HKBloodTypeBNegative = 0x4,HKBloodTypeABPositive = 0x5,HKBloodTypeABNegative = 0x6,HKBloodTypeOPositive = 0x7,HKBloodTypeONegative = 0x8,};
enum HKErrorCode {HKNoError = 0x0,HKErrorHealthDataUnavailable = 0x1,HKErrorHealthDataRestricted = 0x2,HKErrorInvalidArgument = 0x3,HKErrorAuthorizationDenied = 0x4,HKErrorAuthorizationNotDetermined = 0x5,HKErrorDatabaseInaccessible = 0x6,HKErrorUserCanceled = 0x7,HKErrorAnotherWorkoutSessionStarted = 0x8,HKErrorUserExitedWorkoutSession = 0x9,HKErrorRequiredAuthorizationDenied = 0xA,};
enum HMErrorCode {HMErrorCodeUnexpectedError = 0xFFFFFFFFFFFFFFFF,HMErrorCodeAlreadyExists = 0x1,HMErrorCodeNotFound = 0x2,HMErrorCodeInvalidParameter = 0x3,HMErrorCodeAccessoryNotReachable = 0x4,HMErrorCodeReadOnlyCharacteristic = 0x5,HMErrorCodeWriteOnlyCharacteristic = 0x6,HMErrorCodeNotificationNotSupported = 0x7,HMErrorCodeOperationTimedOut = 0x8,HMErrorCodeAccessoryPoweredOff = 0x9,HMErrorCodeAccessDenied = 0xA,HMErrorCodeObjectAssociatedToAnotherHome = 0xB,HMErrorCodeObjectNotAssociatedToAnyHome = 0xC,HMErrorCodeObjectAlreadyAssociatedToHome = 0xD,HMErrorCodeAccessoryIsBusy = 0xE,HMErrorCodeOperationInProgress = 0xF,HMErrorCodeAccessoryOutOfResources = 0x10,HMErrorCodeInsufficientPrivileges = 0x11,HMErrorCodeAccessoryPairingFailed = 0x12,HMErrorCodeInvalidDataFormatSpecified = 0x13,HMErrorCodeNilParameter = 0x14,HMErrorCodeUnconfiguredParameter = 0x15,HMErrorCodeInvalidClass = 0x16,HMErrorCodeOperationCancelled = 0x17,HMErrorCodeRoomForHomeCannotBeInZone = 0x18,HMErrorCodeNoActionsInActionSet = 0x19,HMErrorCodeNoRegisteredActionSets = 0x1A,HMErrorCodeMissingParameter = 0x1B,HMErrorCodeFireDateInPast = 0x1C,HMErrorCodeRoomForHomeCannotBeUpdated = 0x1D,HMErrorCodeActionInAnotherActionSet = 0x1E,HMErrorCodeObjectWithSimilarNameExistsInHome = 0x1F,HMErrorCodeHomeWithSimilarNameExists = 0x20,HMErrorCodeRenameWithSimilarName = 0x21,HMErrorCodeCannotRemoveNonBridgeAccessory = 0x22,HMErrorCodeNameContainsProhibitedCharacters = 0x23,HMErrorCodeNameDoesNotStartWithValidCharacters = 0x24,HMErrorCodeUserIDNotEmailAddress = 0x25,HMErrorCodeUserDeclinedAddingUser = 0x26,HMErrorCodeUserDeclinedRemovingUser = 0x27,HMErrorCodeUserDeclinedInvite = 0x28,HMErrorCodeUserManagementFailed = 0x29,HMErrorCodeRecurrenceTooSmall = 0x2A,HMErrorCodeInvalidValueType = 0x2B,HMErrorCodeValueLowerThanMinimum = 0x2C,HMErrorCodeValueHigherThanMaximum = 0x2D,HMErrorCodeStringLongerThanMaximum = 0x2E,HMErrorCodeHomeAccessNotAuthorized = 0x2F,HMErrorCodeOperationNotSupported = 0x30,HMErrorCodeMaximumObjectLimitReached = 0x31,HMErrorCodeAccessorySentInvalidResponse = 0x32,HMErrorCodeStringShorterThanMinimum = 0x33,HMErrorCodeGenericError = 0x34,HMErrorCodeSecurityFailure = 0x35,HMErrorCodeCommunicationFailure = 0x36,HMErrorCodeMessageAuthenticationFailed = 0x37,HMErrorCodeInvalidMessageSize = 0x38,HMErrorCodeAccessoryDiscoveryFailed = 0x39,HMErrorCodeClientRequestError = 0x3A,HMErrorCodeAccessoryResponseError = 0x3B,HMErrorCodeNameDoesNotEndWithValidCharacters = 0x3C,HMErrorCodeAccessoryIsBlocked = 0x3D,HMErrorCodeInvalidAssociatedServiceType = 0x3E,HMErrorCodeActionSetExecutionFailed = 0x3F,HMErrorCodeActionSetExecutionPartialSuccess = 0x40,HMErrorCodeActionSetExecutionInProgress = 0x41,HMErrorCodeAccessoryOutOfCompliance = 0x42,HMErrorCodeDataResetFailure = 0x43,HMErrorCodeNotificationAlreadyEnabled = 0x44,HMErrorCodeRecurrenceMustBeOnSpecifiedBoundaries = 0x45,HMErrorCodeDateMustBeOnSpecifiedBoundaries = 0x46,HMErrorCodeCannotActivateTriggerTooFarInFuture = 0x47,HMErrorCodeRecurrenceTooLarge = 0x48,HMErrorCodeReadWritePartialSuccess = 0x49,HMErrorCodeReadWriteFailure = 0x4A,HMErrorCodeNotSignedIntoiCloud = 0x4B,HMErrorCodeKeychainSyncNotEnabled = 0x4C,HMErrorCodeCloudDataSyncInProgress = 0x4D,HMErrorCodeNetworkUnavailable = 0x4E,HMErrorCodeAddAccessoryFailed = 0x4F,HMErrorCodeMissingEntitlement = 0x50,HMErrorCodeCannotUnblockNonBridgeAccessory = 0x51,HMErrorCodeDeviceLocked = 0x52,HMErrorCodeCannotRemoveBuiltinActionSet = 0x53,HMErrorCodeLocationForHomeDisabled = 0x54,HMErrorCodeNotAuthorizedForLocationServices = 0x55,HMErrorCodeReferToUserManual = 0x56,HMErrorCodeInvalidOrMissingAuthorizationData = 0x57,HMErrorCodeBridgedAccessoryNotReachable = 0x58,HMErrorCodeNotAuthorizedForMicrophoneAccess = 0x59,HMErrorCodeIncompatibleNetwork = 0x5A,HMErrorCodeNoHomeHub = 0x5B,HMErrorCodeNoCompatibleHomeHub = 0x5C,HMErrorCodeIncompatibleAccessory = 0x5D,HMErrorCodeIncompatibleHomeHub = 0x5C,HMErrorCodeObjectWithSimilarNameExists = 0x5F,HMErrorCodeOwnershipFailure = 0x60,HMErrorCodeMaximumAccessoriesOfTypeInHome = 0x61,HMErrorCodeWiFiCredentialGenerationFailed = 0x62,HMErrorCodeEnterpriseNetworkNotSupported = 0x63,HMErrorCodeTimedOutWaitingForAccessory = 0x64,HMErrorCodeAccessoryCommunicationFailure = 0x65,HMErrorCodeFailedToJoinNetwork = 0x66,};
enum INRadioType {INRadioTypeUnknown = 0x0,INRadioTypeAM = 0x1,INRadioTypeFM = 0x2,INRadioTypeHD = 0x3,INRadioTypeSatellite = 0x4,INRadioTypeDAB = 0x5,};
enum INRidePhase {INRidePhaseUnknown = 0x0,INRidePhaseReceived = 0x1,INRidePhaseConfirmed = 0x2,INRidePhaseOngoing = 0x3,INRidePhaseCompleted = 0x4,INRidePhaseApproachingPickup = 0x5,INRidePhasePickup = 0x6,};
typedef OpaqueJSValue *JSObjectRef;
typedef OpaqueJSString *JSStringRef;
enum LPErrorCode {LPErrorUnknown = 0x1,LPErrorMetadataFetchFailed = 0x2,LPErrorMetadataFetchCancelled = 0x3,LPErrorMetadataFetchTimedOut = 0x4,};
enum MACRO_ABDAY {ABDAY_1 = 14,ABDAY_2 = 15,ABDAY_3 = 16,ABDAY_4 = 17,ABDAY_5 = 18,ABDAY_6 = 19,ABDAY_7 = 20,};
enum MACRO_ABMON {ABMON_1 = 33,ABMON_2 = 34,ABMON_3 = 35,ABMON_4 = 36,ABMON_5 = 37,ABMON_6 = 38,ABMON_7 = 39,ABMON_8 = 40,ABMON_9 = 41,ABMON_10 = 42,ABMON_11 = 43,ABMON_12 = 44,};
enum MACRO_ALLOW {ALLOW_OBSOLETE_CARBON_MACMEMORY = 0,ALLOW_OBSOLETE_CARBON_OSUTILS = 0,};
enum MACRO_APPLE {APPLE_IF_FAM_LOOPBACK = 1,APPLE_IF_FAM_ETHERNET = 2,APPLE_IF_FAM_SLIP = 3,APPLE_IF_FAM_TUN = 4,APPLE_IF_FAM_VLAN = 5,APPLE_IF_FAM_PPP = 6,APPLE_IF_FAM_PVC = 7,APPLE_IF_FAM_DISC = 8,APPLE_IF_FAM_MDECAP = 9,APPLE_IF_FAM_GIF = 10,APPLE_IF_FAM_FAITH = 11,APPLE_IF_FAM_STF = 12,APPLE_IF_FAM_FIREWIRE = 13,APPLE_IF_FAM_BOND = 14,APPLE_IF_FAM_CELLULAR = 15,APPLE_IF_FAM_6LOWPAN = 16,APPLE_IF_FAM_UTUN = 17,APPLE_IF_FAM_IPSEC = 18,};
enum MACRO_AUDIO {AUDIO_TOOLBOX_VERSION = 1060,};
enum MACRO_AUDIT {AUDIT_RECORD_MAGIC = 0x828A0F1B,};
enum MACRO_AU_FS {AU_FS_MINFREE = 20,AU_IPv4 = 4,AU_IPv6 = 16,AU_CLASS_MASK_RESERVED = 268435456,};
enum MACRO_B1200 {B1200 = 1200,};
enum MACRO_B1800 {B1800 = 1800,};
enum MACRO_B2400 {B2400 = 2400,};
enum MACRO_B4800 {B4800 = 4800,};
enum MACRO_B7200 {B7200 = 7200,};
enum MACRO_B9600 {B9600 = 9600,};
enum MACRO_BLOCK {BLOCK_DESCRIPTOR_1 = 1,BLOCK_DESCRIPTOR_2 = 1,BLOCK_DESCRIPTOR_3 = 1,};
enum MACRO_BYTES {BYTES_PER_XDR_UNIT = 4,};
enum MACRO_CACHE {CACHE_ATTRIBUTES_VERSION_1 = 1,CACHE_ATTRIBUTES_VERSION_2 = 2,};
enum MACRO_CLGET {CLGET_SERVER_ADDR = 3,};
enum MACRO_CLOCK {SYSTEM_CLOCK = 0,CALENDAR_CLOCK = 1,REALTIME_CLOCK = 0,};
enum MACRO_CLONE {CLONE_NOFOLLOW = 0x1,CLONE_NOOWNERCOPY = 0x2,};
enum MACRO_CMASK {CMASK = 0x12,};
enum MACRO_COUNT {task_MSG_COUNT = 55,thread_act_MSG_COUNT = 29,vm_map_MSG_COUNT = 32,mach_port_MSG_COUNT = 40,};
enum MACRO_CTIME {CTIME = 0,};
enum MACRO_E2BIG {E2BIG = 7,ENOEXEC = 8,};
enum MACRO_EAUTH {EAUTH = 80,};
enum MACRO_EBADF {EBADF = 9,};
enum MACRO_EFBIG {EFBIG = 27,};
enum MACRO_EIDRM {EIDRM = 90,};
enum MACRO_ELAST {ELAST = 106,};
enum MACRO_ELOOP {ELOOP = 62,};
enum MACRO_EMPTY {EMPTY = 0,};
enum MACRO_ENOSR {ENOSR = 98,};
enum MACRO_ENXIO {ENXIO = 6,};
enum MACRO_EPERM {EPERM = 1,ENOENT = 2,};
enum MACRO_EPROC {EPROC_CTTY = 0x1,EPROC_SLEADER = 0x2,};
enum MACRO_ERA_D {ERA_D_FMT = 46,ERA_D_T_FMT = 47,ERA_T_FMT = 48,};
enum MACRO_EROFS {EROFS = 30,};
enum MACRO_ESRCH {ESRCH = 3,EINTR = 4,};
enum MACRO_ETHER {ETHER_ADDR_LEN = 6,ETHER_TYPE_LEN = 2,ETHER_CRC_LEN = 4,ETHER_MIN_LEN = 64,ETHER_MAX_LEN = 1518,ETHER_ALIGN = 2,};
enum MACRO_ETIME {ETIME = 101,};
enum MACRO_EXDEV {EXDEV = 18,};
enum MACRO_FCNTL {FCNTL_FS_SPECIFIC_BASE = 0x10000,};
enum MACRO_FIRST {FIRST_EXCEPTION = 1,};
enum MACRO_FOPEN {FOPEN_MAX = 20,FILENAME_MAX = 1024,};
enum MACRO_FREAD {FREAD = 0x1,FWRITE = 0x2,};
enum MACRO_FSOPT {FSOPT_NOFOLLOW = 0x1,FSOPT_NOINMEMUPDATE = 0x2,FSOPT_REPORT_FULLSIZE = 0x4,FSOPT_PACK_INVAL_ATTRS = 0x8,FSOPT_ATTR_CMN_EXTENDED = 0x20,FSOPT_RETURN_REALDEV = 0x200,};
enum MACRO_GUARD {GUARD_TYPE_MACH_PORT = 0x1,};
enum MACRO_ICMP6 {ICMP6_FILTER = 18,};
enum MACRO_ICONV {ICONV_TRIVIALP = 0,ICONV_GET_TRANSLITERATE = 1,ICONV_SET_TRANSLITERATE = 2,ICONV_GET_DISCARD_ILSEQ = 3,ICONV_SET_DISCARD_ILSEQ = 4,ICONV_SET_HOOKS = 5,ICONV_SET_FALLBACKS = 6,};
enum MACRO_IFCAP {IFCAP_RXCSUM = 0x1,IFCAP_TXCSUM = 0x2,IFCAP_VLAN_MTU = 0x4,IFCAP_VLAN_HWTAGGING = 0x8,IFCAP_JUMBO_MTU = 0x10,IFCAP_TSO4 = 0x20,IFCAP_TSO6 = 0x40,IFCAP_LRO = 0x80,IFCAP_AV = 0x100,IFCAP_TXSTATUS = 0x200,IFCAP_SKYWALK = 0x400,IFCAP_HW_TIMESTAMP = 0x800,IFCAP_SW_TIMESTAMP = 0x1000,IFCAP_CSUM_PARTIAL = 0x2000,IFCAP_CSUM_ZERO_INVERT = 0x4000,};
enum MACRO_IFLOW {CRTS_IFLOW = 0x20000,CDTR_IFLOW = 0x40000,};
enum MACRO_IFNET {IFNET_SLOWHZ = 1,};
enum MACRO_INET6 {INET6_ADDRSTRLEN = 46,};
enum MACRO_INPUT {INPUT_CHUNK = 250,};
enum MACRO_IOPOL {IOPOL_TYPE_DISK = 0,IOPOL_TYPE_VFS_ATIME_UPDATES = 2,IOPOL_TYPE_VFS_MATERIALIZE_DATALESS_FILES = 3,IOPOL_TYPE_VFS_STATFS_NO_DATA_VOLUME = 4,IOPOL_TYPE_VFS_TRIGGER_RESOLVE = 5,IOPOL_SCOPE_PROCESS = 0,IOPOL_SCOPE_THREAD = 1,IOPOL_SCOPE_DARWIN_BG = 2,IOPOL_DEFAULT = 0,IOPOL_IMPORTANT = 1,IOPOL_PASSIVE = 2,IOPOL_THROTTLE = 3,IOPOL_UTILITY = 4,IOPOL_STANDARD = 5,IOPOL_ATIME_UPDATES_DEFAULT = 0,IOPOL_ATIME_UPDATES_OFF = 1,IOPOL_MATERIALIZE_DATALESS_FILES_DEFAULT = 0,IOPOL_MATERIALIZE_DATALESS_FILES_OFF = 1,IOPOL_MATERIALIZE_DATALESS_FILES_ON = 2,IOPOL_VFS_STATFS_NO_DATA_VOLUME_DEFAULT = 0,IOPOL_VFS_STATFS_FORCE_NO_DATA_VOLUME = 1,IOPOL_VFS_TRIGGER_RESOLVE_DEFAULT = 0,IOPOL_VFS_TRIGGER_RESOLVE_OFF = 1,};
enum MACRO_IPCTL {IPCTL_FORWARDING = 1,IPCTL_SENDREDIRECTS = 2,IPCTL_DEFTTL = 3,IPCTL_RTEXPIRE = 5,IPCTL_RTMINEXPIRE = 6,IPCTL_RTMAXCACHE = 7,IPCTL_SOURCEROUTE = 8,IPCTL_DIRECTEDBROADCAST = 9,IPCTL_INTRQMAXLEN = 10,IPCTL_INTRQDROPS = 11,IPCTL_STATS = 12,IPCTL_ACCEPTSOURCEROUTE = 13,IPCTL_FASTFORWARDING = 14,IPCTL_KEEPFAITH = 15,IPCTL_GIF_TTL = 16,IPCTL_MAXID = 17,};
enum MACRO_IPOPT {IPOPT_CONTROL = 0x0,IPOPT_RESERVED1 = 0x20,IPOPT_DEBMEAS = 0x40,IPOPT_RESERVED2 = 0x60,IPOPT_EOL = 0x0,IPOPT_NOP = 0x1,IPOPT_RR = 0x7,IPOPT_TS = 0x44,IPOPT_SECURITY = 0x82,IPOPT_LSRR = 0x83,IPOPT_SATID = 0x88,IPOPT_SSRR = 0x89,IPOPT_RA = 0x94,IPOPT_OPTVAL = 0x0,IPOPT_OLEN = 0x1,IPOPT_OFFSET = 0x2,IPOPT_MINOFF = 0x4,IPOPT_TS_TSONLY = 0x0,IPOPT_TS_TSANDADDR = 0x1,IPOPT_TS_PRESPEC = 0x3,IPOPT_SECUR_UNCLASS = 0x0,IPOPT_SECUR_CONFID = 0xF135,IPOPT_SECUR_EFTO = 0x789A,IPOPT_SECUR_MMMM = 0xBC4D,IPOPT_SECUR_RESTR = 0xAF13,IPOPT_SECUR_SECRET = 0xD788,IPOPT_SECUR_TOPSECRET = 0x6BC5,};
enum MACRO_IPSEC {IPSEC_PORT_ANY = 0,IPSEC_ULPROTO_ANY = 255,IPSEC_PROTO_ANY = 255,IPSEC_MODE_ANY = 0,IPSEC_MODE_TRANSPORT = 1,IPSEC_MODE_TUNNEL = 2,IPSEC_DIR_ANY = 0,IPSEC_DIR_INBOUND = 1,IPSEC_DIR_OUTBOUND = 2,IPSEC_DIR_MAX = 3,IPSEC_DIR_INVALID = 4,IPSEC_POLICY_DISCARD = 0,IPSEC_POLICY_NONE = 1,IPSEC_POLICY_IPSEC = 2,IPSEC_POLICY_ENTRUST = 3,IPSEC_POLICY_BYPASS = 4,IPSEC_POLICY_GENERATE = 5,IPSEC_LEVEL_DEFAULT = 0,IPSEC_LEVEL_USE = 1,IPSEC_LEVEL_REQUIRE = 2,IPSEC_LEVEL_UNIQUE = 3,IPSEC_MANUAL_REQID_MAX = 16383,IPSEC_REPLAYWSIZE = 32,IPSEC_MAX_WAKE_PKT_LEN = 100,};
enum MACRO_IPTOS {IPTOS_LOWDELAY = 0x10,IPTOS_THROUGHPUT = 0x8,IPTOS_RELIABILITY = 0x4,IPTOS_MINCOST = 0x2,IPTOS_CE = 0x1,IPTOS_ECT = 0x2,IPTOS_DSCP_SHIFT = 0x2,IPTOS_ECN_NOTECT = 0x0,IPTOS_ECN_ECT1 = 0x1,IPTOS_ECN_ECT0 = 0x2,IPTOS_ECN_CE = 0x3,IPTOS_ECN_MASK = 0x3,IPTOS_PREC_NETCONTROL = 0xE0,IPTOS_PREC_INTERNETCONTROL = 0xC0,IPTOS_PREC_CRITIC_ECP = 0xA0,IPTOS_PREC_FLASHOVERRIDE = 0x80,IPTOS_PREC_FLASH = 0x60,IPTOS_PREC_IMMEDIATE = 0x40,IPTOS_PREC_PRIORITY = 0x20,IPTOS_PREC_ROUTINE = 0x0,};
enum MACRO_IP_RF {IP_RF = 0x8000,IP_DF = 0x4000,IP_MF = 0x2000,IP_OFFMASK = 0x1FFF,IP_MAXPACKET = 0xFFFF,};
enum MACRO_KAUTH {KAUTH_UID_NONE = -101,KAUTH_GID_NONE = -101,KAUTH_GUID_SIZE = 16,KAUTH_NTSID_MAX_AUTHORITIES = 16,KAUTH_NTSID_HDRSIZE = 8,KAUTH_EXTLOOKUP_SUCCESS = 0,KAUTH_EXTLOOKUP_BADRQ = 1,KAUTH_EXTLOOKUP_FAILURE = 2,KAUTH_EXTLOOKUP_FATAL = 3,KAUTH_EXTLOOKUP_INPROG = 100,KAUTH_EXTLOOKUP_VALID_UID = 1,KAUTH_EXTLOOKUP_VALID_UGUID = 2,KAUTH_EXTLOOKUP_VALID_USID = 4,KAUTH_EXTLOOKUP_VALID_GID = 8,KAUTH_EXTLOOKUP_VALID_GGUID = 16,KAUTH_EXTLOOKUP_VALID_GSID = 32,KAUTH_EXTLOOKUP_WANT_UID = 64,KAUTH_EXTLOOKUP_WANT_UGUID = 128,KAUTH_EXTLOOKUP_WANT_USID = 256,KAUTH_EXTLOOKUP_WANT_GID = 512,KAUTH_EXTLOOKUP_WANT_GGUID = 1024,KAUTH_EXTLOOKUP_WANT_GSID = 2048,KAUTH_EXTLOOKUP_WANT_MEMBERSHIP = 4096,KAUTH_EXTLOOKUP_VALID_MEMBERSHIP = 8192,KAUTH_EXTLOOKUP_ISMEMBER = 16384,KAUTH_EXTLOOKUP_VALID_PWNAM = 32768,KAUTH_EXTLOOKUP_WANT_PWNAM = 65536,KAUTH_EXTLOOKUP_VALID_GRNAM = 131072,KAUTH_EXTLOOKUP_WANT_GRNAM = 262144,KAUTH_EXTLOOKUP_VALID_SUPGRPS = 524288,KAUTH_EXTLOOKUP_WANT_SUPGRPS = 1048576,KAUTH_EXTLOOKUP_REGISTER = 0,KAUTH_EXTLOOKUP_RESULT = 1,KAUTH_EXTLOOKUP_WORKER = 2,KAUTH_EXTLOOKUP_DEREGISTER = 4,KAUTH_GET_CACHE_SIZES = 8,KAUTH_SET_CACHE_SIZES = 16,KAUTH_CLEAR_CACHES = 32,KAUTH_ACE_KINDMASK = 15,KAUTH_ACE_PERMIT = 1,KAUTH_ACE_DENY = 2,KAUTH_ACE_AUDIT = 3,KAUTH_ACE_ALARM = 4,KAUTH_ACE_INHERITED = 16,KAUTH_ACE_FILE_INHERIT = 32,KAUTH_ACE_DIRECTORY_INHERIT = 64,KAUTH_ACE_LIMIT_INHERIT = 128,KAUTH_ACE_ONLY_INHERIT = 256,KAUTH_ACE_SUCCESS = 512,KAUTH_ACE_FAILURE = 1024,KAUTH_ACE_GENERIC_ALL = 2097152,KAUTH_ACE_GENERIC_EXECUTE = 4194304,KAUTH_ACE_GENERIC_WRITE = 8388608,KAUTH_ACE_GENERIC_READ = 16777216,KAUTH_ACL_MAX_ENTRIES = 128,KAUTH_ACL_FLAGS_PRIVATE = 65535,KAUTH_ACL_DEFER_INHERIT = 65536,KAUTH_ACL_NO_INHERIT = 131072,KAUTH_FILESEC_NOACL = 4294967295,KAUTH_FILESEC_MAGIC = 19710317,KAUTH_FILESEC_NONE = 0,KAUTH_FILESEC_WANTED = 1,KAUTH_ENDIAN_HOST = 1,KAUTH_ENDIAN_DISK = 2,KAUTH_VNODE_READ_DATA = 2,KAUTH_VNODE_WRITE_DATA = 4,KAUTH_VNODE_EXECUTE = 8,KAUTH_VNODE_DELETE = 16,KAUTH_VNODE_APPEND_DATA = 32,KAUTH_VNODE_DELETE_CHILD = 64,KAUTH_VNODE_READ_ATTRIBUTES = 128,KAUTH_VNODE_WRITE_ATTRIBUTES = 256,KAUTH_VNODE_READ_EXTATTRIBUTES = 512,KAUTH_VNODE_WRITE_EXTATTRIBUTES = 1024,KAUTH_VNODE_READ_SECURITY = 2048,KAUTH_VNODE_WRITE_SECURITY = 4096,KAUTH_VNODE_TAKE_OWNERSHIP = 8192,KAUTH_VNODE_SYNCHRONIZE = 1048576,KAUTH_VNODE_LINKTARGET = 33554432,KAUTH_VNODE_CHECKIMMUTABLE = 67108864,KAUTH_VNODE_ACCESS = 2147483648,KAUTH_VNODE_NOIMMUTABLE = 1073741824,KAUTH_VNODE_SEARCHBYANYONE = 536870912,};
enum MACRO_LLONG {LLONG_MIN = 0x8000000000000000,};
enum MACRO_LOCAL {LOCAL_PEERCRED = 0x1,LOCAL_PEERPID = 0x2,LOCAL_PEEREPID = 0x3,LOCAL_PEERUUID = 0x4,LOCAL_PEEREUUID = 0x5,LOCAL_PEERTOKEN = 0x6,};
enum MACRO_MATTR {MATTR_CACHE = 1,MATTR_MIGRATE = 2,MATTR_REPLICATE = 4,MATTR_VAL_OFF = 0,MATTR_VAL_ON = 1,MATTR_VAL_GET = 2,MATTR_VAL_CACHE_FLUSH = 6,MATTR_VAL_DCACHE_FLUSH = 7,MATTR_VAL_ICACHE_FLUSH = 8,MATTR_VAL_CACHE_SYNC = 9,MATTR_VAL_GET_INFO = 10,};
enum MACRO_MAXNS {MAXNS = 3,};
enum MACRO_MAXTC {MAXTC = 10,};
enum MACRO_MCAST {MCAST_JOIN_GROUP = 80,MCAST_LEAVE_GROUP = 81,MCAST_JOIN_SOURCE_GROUP = 82,MCAST_LEAVE_SOURCE_GROUP = 83,MCAST_BLOCK_SOURCE = 84,MCAST_UNBLOCK_SOURCE = 85,};
enum MACRO_MLDV2 {MLDV2_LISTENER_REPORT = 143,};
enum MACRO_MPOOL {MPOOL_DIRTY = 0x1,MPOOL_PINNED = 0x2,};
enum MACRO_NETDB {NETDB_INTERNAL = -1,NETDB_SUCCESS = 0,};
enum MACRO_NODEV {NODEV = -1,};
enum MACRO_NOSTR {NOSTR = 55,};
enum MACRO_NTSID {NTSID_MAX_AUTHORITIES = 16,};
enum MACRO_NZERO {NZERO = 20,};
enum MACRO_OFLOW {CDSR_OFLOW = 0x80000,CCAR_OFLOW = 0x100000,};
enum MACRO_OPOST {OPOST = 0x1,ONLCR = 0x2,OXTABS = 0x4,ONOEOT = 0x8,OCRNL = 0x10,ONOCR = 0x20,ONLRET = 0x40,OFILL = 0x80,NLDLY = 0x300,TABDLY = 0xC04,CRDLY = 0x3000,FFDLY = 0x4000,BSDLY = 0x8000,VTDLY = 0x10000,OFDEL = 0x20000,};
enum MACRO_PFKEY {PFKEY_SOFT_LIFETIME_RATE = 80,};
enum MACRO_PLOCK {PLOCK = 36,};
enum MACRO_PLOSS {PLOSS = 6,_JBLEN = 48,};
enum MACRO_POSIX {POSIX_MADV_NORMAL = 0,POSIX_MADV_RANDOM = 1,POSIX_MADV_SEQUENTIAL = 2,POSIX_MADV_WILLNEED = 3,POSIX_MADV_DONTNEED = 4,};
enum MACRO_PSOCK {PSOCK = 24,PWAIT = 32,};
enum MACRO_PUSER {PUSER = 50,};
enum MACRO_PZERO {PZERO = 22,};
enum MACRO_RSTAT {RSTAT_CPUSTATES = 4,RSTAT_DK_NDRIVE = 4,};
enum MACRO_R_ABS {R_ABS = 0,R_SCATTERED = 2147483648,};
enum MACRO_R_DUP {R_DUP = 0x1,};
enum MACRO_SCALE {SCALE_PPM = 65,};
enum MACRO_SCHAR {SCHAR_MIN = -128,};
enum MACRO_SCHED {SCHED_OTHER = 1,SCHED_FIFO = 4,SCHED_RR = 2,};
enum MACRO_SCOPE {SCOPE_DELIMITER = 37,};
enum MACRO_SIGEV {SIGEV_NONE = 0,SIGEV_SIGNAL = 1,SIGEV_THREAD = 3,};
enum MACRO_SIGIO {SIGIO = 23,};
enum MACRO_SONPX {SONPX_SETOPTSHUT = 0x1,};
enum MACRO_SWIFT {SWIFT_TYPEDEFS = 1,};
enum MACRO_SZOMB {SZOMB = 5,};
enum MACRO_TCPCI {TCPCI_OPT_TIMESTAMPS = 0x1,TCPCI_OPT_SACK = 0x2,TCPCI_OPT_WSCALE = 0x4,TCPCI_OPT_ECN = 0x8,TCPCI_FLAG_LOSSRECOVERY = 0x1,TCPCI_FLAG_REORDERING_DETECTED = 0x2,};
enum MACRO_TIOCM {TIOCM_LE = 0x1,TIOCM_DTR = 0x2,TIOCM_RTS = 0x4,TIOCM_ST = 0x8,TIOCM_SR = 0x10,TIOCM_CTS = 0x20,TIOCM_CAR = 0x40,TIOCM_RNG = 0x80,TIOCM_DSR = 0x100,};
enum MACRO_TLOSS {TLOSS = 5,};
enum MACRO_TSGID {TSGID = 0x400,};
enum MACRO_TSVTX {TSVTX = 0x200,};
enum MACRO_UCHAR {UCHAR_MAX = 255,CHAR_MAX = 127,};
enum MACRO_UINT8 {UINT8_MAX = 255,UINT16_MAX = 65535,UINT32_MAX = 4294967295,UINT64_MAX = -1,INTPTR_MAX = 9223372036854775807,UINTPTR_MAX = -1,};
enum MACRO_UITER {UITER_NO_STATE = 4294967295,};
enum MACRO_ULONG {ULONG_MAX = 0xFFFFFFFFFFFFFFFF,LONG_MAX = 0x7FFFFFFFFFFFFFFF,};
enum MACRO_UNORM {UNORM_INPUT_IS_FCD = 0x20000,};
enum MACRO_UNVIS {UNVIS_VALID = 1,UNVIS_VALIDPUSH = 2,UNVIS_NOCHAR = 3,UNVIS_SYNBAD = -1,UNVIS_ERROR = -2,};
enum MACRO_USHRT {USHRT_MAX = 65535,SHRT_MAX = 32767,};
enum MACRO_UTIME {UTIME_NOW = -1,UTIME_OMIT = -2,};
enum MACRO_UTMPX {UTMPX_AUTOFILL_MASK = 0x8000,UTMPX_DEAD_IF_CORRESPONDING_MASK = 0x4000,};
enum MACRO_U_ICU {U_ICU_VERSION_MAJOR_NUM = 66,U_ICU_VERSION_MINOR_NUM = 0,U_ICU_VERSION_PATCHLEVEL_NUM = 1,U_ICU_VERSION_BUILDLEVEL_NUM = 0,U_DISABLE_VERSION_SUFFIX = 0,};
enum MACRO_VKILL {VKILL = 5,};
enum MACRO_VQUIT {VQUIT = 9,};
enum MACRO_VSTOP {VSTOP = 13,};
enum MACRO_VSUSP {VSUSP = 10,};
enum MACRO_VTIME {VTIME = 17,};
enum MACRO_XATTR {XATTR_NOFOLLOW = 0x1,XATTR_CREATE = 0x2,XATTR_REPLACE = 0x4,XATTR_NOSECURITY = 0x8,XATTR_NODEFAULT = 0x10,XATTR_SHOWCOMPRESSION = 0x20,XATTR_MAXNAMELEN = 0x7F,};
enum MACRO__GLOB {_GLOB_ERR_BLOCK = 0x80000000,};
enum MACRO__QUAD {_QUAD_HIGHWORD = 1,_QUAD_LOWWORD = 0,};
enum MACRO___API {__API_TO_BE_DEPRECATED = 100000,};
enum MACRO___DTF {__DTF_READALL = 0x8,__DTF_SKIPREAD = 0x10,__DTF_ATEND = 0x20,};
enum MACRO___HAS {__HAS_FIXED_CHK_PROTOTYPES = 1,};
enum MACRO___MAC {__MAC_10_0 = 1000,__MAC_10_1 = 1010,__MAC_10_2 = 1020,__MAC_10_3 = 1030,__MAC_10_4 = 1040,__MAC_10_5 = 1050,__MAC_10_6 = 1060,__MAC_10_7 = 1070,__MAC_10_8 = 1080,__MAC_10_9 = 1090,__MAC_10_10 = 101000,__MAC_10_10_2 = 101002,__MAC_10_10_3 = 101003,__MAC_10_11 = 101100,__MAC_10_11_2 = 101102,__MAC_10_11_3 = 101103,__MAC_10_11_4 = 101104,__MAC_10_12 = 101200,__MAC_10_12_1 = 101201,__MAC_10_12_2 = 101202,__MAC_10_12_4 = 101204,__MAC_10_13 = 101300,__MAC_10_13_1 = 101301,__MAC_10_13_2 = 101302,__MAC_10_13_4 = 101304,__MAC_10_14 = 101400,__MAC_10_14_1 = 101401,__MAC_10_14_4 = 101404,__MAC_10_14_6 = 101406,__MAC_10_15 = 101500,__MAC_10_15_1 = 101501,__MAC_10_15_4 = 101504,__MAC_10_16 = 101600,__MAC_11_0 = 110000,};
enum MACRO___NDR {__NDR_convert__ = 0,__NDR_convert__char_rep__ = 0,__NDR_convert__float_rep__ = 0,};
enum MACRO___RES {__RES = 19991006,};
enum MACRO_clock {clock_MSG_COUNT = 3,clock_reply_MSG_COUNT = 1,};
enum MCErrorCode {MCErrorUnknown = 0x0,MCErrorNotConnected = 0x1,MCErrorInvalidParameter = 0x2,MCErrorUnsupported = 0x3,MCErrorTimedOut = 0x4,MCErrorCancelled = 0x5,MCErrorUnavailable = 0x6,};
enum MKErrorCode {MKErrorUnknown = 0x1,MKErrorServerFailure = 0x2,MKErrorLoadingThrottled = 0x3,MKErrorPlacemarkNotFound = 0x4,MKErrorDirectionsNotFound = 0x5,MKErrorDecodingFailed = 0x6,};
enum MLCDataType {MLCDataTypeInvalid = 0x0,MLCDataTypeFloat32 = 0x1,MLCDataTypeBoolean = 0x4,MLCDataTypeInt64 = 0x5,MLCDataTypeCount = 0x6,};
enum MLCLossType {MLCLossTypeMeanAbsoluteError = 0x0,MLCLossTypeMeanSquaredError = 0x1,MLCLossTypeSoftmaxCrossEntropy = 0x2,MLCLossTypeSigmoidCrossEntropy = 0x3,MLCLossTypeCategoricalCrossEntropy = 0x4,MLCLossTypeHinge = 0x5,MLCLossTypeHuber = 0x6,MLCLossTypeCosineDistance = 0x7,MLCLossTypeLog = 0x8,MLCLossTypeCount = 0x9,};
enum MLTaskState {MLTaskStateSuspended = 0x1,MLTaskStateRunning = 0x2,MLTaskStateCancelling = 0x3,MLTaskStateCompleted = 0x4,MLTaskStateFailed = 0x5,};
enum MPErrorCode {MPErrorUnknown = 0x0,MPErrorPermissionDenied = 0x1,MPErrorCloudServiceCapabilityMissing = 0x2,MPErrorNetworkConnectionFailed = 0x3,MPErrorNotFound = 0x4,MPErrorNotSupported = 0x5,MPErrorCancelled = 0x6,MPErrorRequestTimedOut = 0x7,};
struct MPOOL___hqh {_bkt *tqh_first;_bkt **tqh_last;};
struct MPOOL___lqh {_bkt *tqh_first;_bkt **tqh_last;};
enum MPSDataType {MPSDataTypeInvalid = 0x0,MPSDataTypeFloatBit = 0x10000000,MPSDataTypeFloat32 = 0x10000020,MPSDataTypeFloat16 = 0x10000010,MPSDataTypeSignedBit = 0x20000000,MPSDataTypeIntBit = 0x20000000,MPSDataTypeInt8 = 0x20000008,MPSDataTypeInt16 = 0x20000010,MPSDataTypeInt32 = 0x20000020,MPSDataTypeUInt8 = 0x8,MPSDataTypeUInt16 = 0x10,MPSDataTypeUInt32 = 0x20,MPSDataTypeNormalizedBit = 0x40000000,MPSDataTypeUnorm1 = 0x40000001,MPSDataTypeUnorm8 = 0x40000008,};
enum MTLCullMode {MTLCullModeNone = 0x0,MTLCullModeFront = 0x1,MTLCullModeBack = 0x2,};
enum MTLDataType {MTLDataTypeNone = 0x0,MTLDataTypeStruct = 0x1,MTLDataTypeArray = 0x2,MTLDataTypeFloat = 0x3,MTLDataTypeFloat2 = 0x4,MTLDataTypeFloat3 = 0x5,MTLDataTypeFloat4 = 0x6,MTLDataTypeFloat2x2 = 0x7,MTLDataTypeFloat2x3 = 0x8,MTLDataTypeFloat2x4 = 0x9,MTLDataTypeFloat3x2 = 0xA,MTLDataTypeFloat3x3 = 0xB,MTLDataTypeFloat3x4 = 0xC,MTLDataTypeFloat4x2 = 0xD,MTLDataTypeFloat4x3 = 0xE,MTLDataTypeFloat4x4 = 0xF,MTLDataTypeHalf = 0x10,MTLDataTypeHalf2 = 0x11,MTLDataTypeHalf3 = 0x12,MTLDataTypeHalf4 = 0x13,MTLDataTypeHalf2x2 = 0x14,MTLDataTypeHalf2x3 = 0x15,MTLDataTypeHalf2x4 = 0x16,MTLDataTypeHalf3x2 = 0x17,MTLDataTypeHalf3x3 = 0x18,MTLDataTypeHalf3x4 = 0x19,MTLDataTypeHalf4x2 = 0x1A,MTLDataTypeHalf4x3 = 0x1B,MTLDataTypeHalf4x4 = 0x1C,MTLDataTypeInt = 0x1D,MTLDataTypeInt2 = 0x1E,MTLDataTypeInt3 = 0x1F,MTLDataTypeInt4 = 0x20,MTLDataTypeUInt = 0x21,MTLDataTypeUInt2 = 0x22,MTLDataTypeUInt3 = 0x23,MTLDataTypeUInt4 = 0x24,MTLDataTypeShort = 0x25,MTLDataTypeShort2 = 0x26,MTLDataTypeShort3 = 0x27,MTLDataTypeShort4 = 0x28,MTLDataTypeUShort = 0x29,MTLDataTypeUShort2 = 0x2A,MTLDataTypeUShort3 = 0x2B,MTLDataTypeUShort4 = 0x2C,MTLDataTypeChar = 0x2D,MTLDataTypeChar2 = 0x2E,MTLDataTypeChar3 = 0x2F,MTLDataTypeChar4 = 0x30,MTLDataTypeUChar = 0x31,MTLDataTypeUChar2 = 0x32,MTLDataTypeUChar3 = 0x33,MTLDataTypeUChar4 = 0x34,MTLDataTypeBool = 0x35,MTLDataTypeBool2 = 0x36,MTLDataTypeBool3 = 0x37,MTLDataTypeBool4 = 0x38,MTLDataTypeTexture = 0x3A,MTLDataTypeSampler = 0x3B,MTLDataTypePointer = 0x3C,MTLDataTypeR8Unorm = 0x3E,MTLDataTypeR8Snorm = 0x3F,MTLDataTypeR16Unorm = 0x40,MTLDataTypeR16Snorm = 0x41,MTLDataTypeRG8Unorm = 0x42,MTLDataTypeRG8Snorm = 0x43,MTLDataTypeRG16Unorm = 0x44,MTLDataTypeRG16Snorm = 0x45,MTLDataTypeRGBA8Unorm = 0x46,MTLDataTypeRGBA8Unorm_sRGB = 0x47,MTLDataTypeRGBA8Snorm = 0x48,MTLDataTypeRGBA16Unorm = 0x49,MTLDataTypeRGBA16Snorm = 0x4A,MTLDataTypeRGB10A2Unorm = 0x4B,MTLDataTypeRG11B10Float = 0x4C,MTLDataTypeRGB9E5Float = 0x4D,MTLDataTypeRenderPipeline = 0x4E,MTLDataTypeComputePipeline = 0x4F,MTLDataTypeIndirectCommandBuffer = 0x50,MTLDataTypeVisibleFunctionTable = 0x73,MTLDataTypeIntersectionFunctionTable = 0x74,MTLDataTypePrimitiveAccelerationStructure = 0x75,MTLDataTypeInstanceAccelerationStructure = 0x76,};
enum MTLHeapType {MTLHeapTypeAutomatic = 0x0,MTLHeapTypePlacement = 0x1,MTLHeapTypeSparse = 0x2,};
struct MTLViewport {double originX;double originY;double width;double height;double znear;double zfar;};
typedef OpaqueMusicPlayer *MusicPlayer;
enum NEVPNStatus {NEVPNStatusInvalid = 0x0,NEVPNStatusDisconnected = 0x1,NEVPNStatusConnecting = 0x2,NEVPNStatusConnected = 0x3,NEVPNStatusReasserting = 0x4,NEVPNStatusDisconnecting = 0x5,};
enum NIErrorCode {NIErrorCodeUnsupportedPlatform = 0xFFFFFFFFFFFFE8FF,NIErrorCodeInvalidConfiguration = 0xFFFFFFFFFFFFE900,NIErrorCodeSessionFailed = 0xFFFFFFFFFFFFE901,NIErrorCodeResourceUsageTimeout = 0xFFFFFFFFFFFFE902,NIErrorCodeActiveSessionsLimitExceeded = 0xFFFFFFFFFFFFE903,NIErrorCodeUserDidNotAllow = 0xFFFFFFFFFFFFE904,};
enum NLModelType {NLModelTypeClassifier = 0x0,NLModelTypeSequence = 0x1,};
enum NLTokenUnit {NLTokenUnitWord = 0x0,NLTokenUnitSentence = 0x1,NLTokenUnitParagraph = 0x2,NLTokenUnitDocument = 0x3,};
enum NXByteOrder {NX_UnknownByteOrder = 0x0,NX_LittleEndian = 0x1,NX_BigEndian = 0x2,};
typedef _BA13FB9ECCDB043D951462000929904B OSQueueHead;
enum SCNCullMode {SCNCullModeBack = 0x0,SCNCullModeFront = 0x1,};
enum SCNFillMode {SCNFillModeFill = 0x0,SCNFillModeLines = 0x1,};
enum SCNWrapMode {SCNWrapModeClamp = 0x1,SCNWrapModeRepeat = 0x2,SCNWrapModeClampToBorder = 0x3,SCNWrapModeMirror = 0x4,};
enum SFErrorCode {SFErrorNoExtensionFound = 0x1,SFErrorNoAttachmentFound = 0x2,SFErrorLoadingInterrupted = 0x3,};
enum SKBlendMode {SKBlendModeAlpha = 0x0,SKBlendModeAdd = 0x1,SKBlendModeSubtract = 0x2,SKBlendModeMultiply = 0x3,SKBlendModeMultiplyX2 = 0x4,SKBlendModeScreen = 0x5,SKBlendModeReplace = 0x6,SKBlendModeMultiplyAlpha = 0x7,};
enum SKErrorCode {SKErrorUnknown = 0x0,SKErrorClientInvalid = 0x1,SKErrorPaymentCancelled = 0x2,SKErrorPaymentInvalid = 0x3,SKErrorPaymentNotAllowed = 0x4,SKErrorStoreProductNotAvailable = 0x5,SKErrorCloudServicePermissionDenied = 0x6,SKErrorCloudServiceNetworkConnectionFailed = 0x7,SKErrorCloudServiceRevoked = 0x8,SKErrorPrivacyAcknowledgementRequired = 0x9,SKErrorUnauthorizedRequestData = 0xA,SKErrorInvalidOfferIdentifier = 0xB,SKErrorInvalidSignature = 0xC,SKErrorMissingOfferParams = 0xD,SKErrorInvalidOfferPrice = 0xE,SKErrorOverlayCancelled = 0xF,SKErrorOverlayInvalidConfiguration = 0x10,SKErrorOverlayTimeout = 0x11,};
enum SNErrorCode {SNErrorCodeUnknownError = 0x1,SNErrorCodeOperationFailed = 0x2,SNErrorCodeInvalidFormat = 0x3,SNErrorCodeInvalidModel = 0x4,SNErrorCodeInvalidFile = 0x5,};
enum SRErrorCode {SRErrorInvalidEntitlement = 0x0,SRErrorNoAuthorization = 0x1,SRErrorDataInaccessible = 0x2,SRErrorFetchRequestInvalid = 0x3,};
enum SSLProtocol {kSSLProtocolUnknown = 0x0,kTLSProtocol1 = 0x4,kTLSProtocol11 = 0x7,kTLSProtocol12 = 0x8,kDTLSProtocol1 = 0x9,kTLSProtocol13 = 0xA,kDTLSProtocol12 = 0xB,kTLSProtocolMaxSupported = 0x3E7,kSSLProtocol2 = 0x1,kSSLProtocol3 = 0x2,kSSLProtocol3Only = 0x3,kTLSProtocol1Only = 0x5,kSSLProtocolAll = 0x6,};
typedef __SecTrust *SecTrustRef;
enum TKErrorCode {TKErrorCodeNotImplemented = 0xFFFFFFFFFFFFFFFF,TKErrorCodeCommunicationError = 0xFFFFFFFFFFFFFFFE,TKErrorCodeCorruptedData = 0xFFFFFFFFFFFFFFFD,TKErrorCodeCanceledByUser = 0xFFFFFFFFFFFFFFFC,TKErrorCodeAuthenticationFailed = 0xFFFFFFFFFFFFFFFB,TKErrorCodeObjectNotFound = 0xFFFFFFFFFFFFFFFA,TKErrorCodeTokenNotFound = 0xFFFFFFFFFFFFFFF9,TKErrorCodeBadParameter = 0xFFFFFFFFFFFFFFF8,TKErrorCodeAuthenticationNeeded = 0xFFFFFFFFFFFFFFF7,TKErrorAuthenticationFailed = 0xFFFFFFFFFFFFFFFB,TKErrorObjectNotFound = 0xFFFFFFFFFFFFFFFA,TKErrorTokenNotFound = 0xFFFFFFFFFFFFFFF9,};
enum UIEventType {UIEventTypeTouches = 0x0,UIEventTypeMotion = 0x1,UIEventTypeRemoteControl = 0x2,UIEventTypePresses = 0x3,UIEventTypeScroll = 0xA,UIEventTypeHover = 0xB,UIEventTypeTransform = 0xE,};
enum UIPressType {UIPressTypeUpArrow = 0x0,UIPressTypeDownArrow = 0x1,UIPressTypeLeftArrow = 0x2,UIPressTypeRightArrow = 0x3,UIPressTypeSelect = 0x4,UIPressTypeMenu = 0x5,UIPressTypePlayPause = 0x6,};
enum UITouchType {UITouchTypeDirect = 0x0,UITouchTypeIndirect = 0x1,UITouchTypePencil = 0x2,UITouchTypeStylus = 0x2,UITouchTypeIndirectPointer = 0x3,};
enum UNErrorCode {UNErrorCodeNotificationsNotAllowed = 0x1,UNErrorCodeAttachmentInvalidURL = 0x64,UNErrorCodeAttachmentUnrecognizedType = 0x65,UNErrorCodeAttachmentInvalidFileSize = 0x66,UNErrorCodeAttachmentNotInDataStore = 0x67,UNErrorCodeAttachmentMoveIntoDataStoreFailed = 0x68,UNErrorCodeAttachmentCorrupt = 0x69,UNErrorCodeNotificationInvalidNoDate = 0x578,UNErrorCodeNotificationInvalidNoContent = 0x579,};
enum URegexpFlag {UREGEX_CANON_EQ = 0x80,UREGEX_CASE_INSENSITIVE = 0x2,UREGEX_COMMENTS = 0x4,UREGEX_DOTALL = 0x20,UREGEX_LITERAL = 0x10,UREGEX_MULTILINE = 0x8,UREGEX_UNIX_LINES = 0x1,UREGEX_UWORD = 0x100,UREGEX_ERROR_ON_UNKNOWN_ESCAPES = 0x200,};
enum VNErrorCode {VNErrorOK = 0x0,VNErrorRequestCancelled = 0x1,VNErrorInvalidFormat = 0x2,VNErrorOperationFailed = 0x3,VNErrorOutOfBoundsError = 0x4,VNErrorInvalidOption = 0x5,VNErrorIOError = 0x6,VNErrorMissingOption = 0x7,VNErrorNotImplemented = 0x8,VNErrorInternalError = 0x9,VNErrorOutOfMemory = 0xA,VNErrorUnknownError = 0xB,VNErrorInvalidOperation = 0xC,VNErrorInvalidImage = 0xD,VNErrorInvalidArgument = 0xE,VNErrorInvalidModel = 0xF,VNErrorUnsupportedRevision = 0x10,VNErrorDataUnavailable = 0x11,VNErrorTimeStampNotFound = 0x12,};
enum VSErrorCode {VSErrorCodeAccessNotGranted = 0x0,VSErrorCodeUnsupportedProvider = 0x1,VSErrorCodeUserCancelled = 0x2,VSErrorCodeServiceTemporarilyUnavailable = 0x3,VSErrorCodeProviderRejected = 0x4,VSErrorCodeInvalidVerificationToken = 0x5,VSErrorCodeRejected = 0x6,VSErrorCodeUnsupported = 0x7,};
enum WCErrorCode {WCErrorCodeGenericError = 0x1B59,WCErrorCodeSessionNotSupported = 0x1B5A,WCErrorCodeSessionMissingDelegate = 0x1B5B,WCErrorCodeSessionNotActivated = 0x1B5C,WCErrorCodeDeviceNotPaired = 0x1B5D,WCErrorCodeWatchAppNotInstalled = 0x1B5E,WCErrorCodeNotReachable = 0x1B5F,WCErrorCodeInvalidParameter = 0x1B60,WCErrorCodePayloadTooLarge = 0x1B61,WCErrorCodePayloadUnsupportedTypes = 0x1B62,WCErrorCodeMessageReplyFailed = 0x1B63,WCErrorCodeMessageReplyTimedOut = 0x1B64,WCErrorCodeFileAccessDenied = 0x1B65,WCErrorCodeDeliveryFailed = 0x1B66,WCErrorCodeInsufficientSpace = 0x1B67,WCErrorCodeSessionInactive = 0x1B68,WCErrorCodeTransferTimedOut = 0x1B69,WCErrorCodeCompanionAppNotInstalled = 0x1B6A,WCErrorCodeWatchOnlyApp = 0x1B6B,};
enum WKErrorCode {WKErrorUnknown = 0x1,WKErrorWebContentProcessTerminated = 0x2,WKErrorWebViewInvalidated = 0x3,WKErrorJavaScriptExceptionOccurred = 0x4,WKErrorJavaScriptResultTypeIsUnsupported = 0x5,WKErrorContentRuleListStoreCompileFailed = 0x6,WKErrorContentRuleListStoreLookUpFailed = 0x7,WKErrorContentRuleListStoreRemoveFailed = 0x8,WKErrorContentRuleListStoreVersionMismatch = 0x9,WKErrorAttributedStringContentFailedToLoad = 0xA,WKErrorAttributedStringContentLoadTimedOut = 0xB,WKErrorJavaScriptInvalidFrameTarget = 0xC,WKErrorNavigationAppBoundDomain = 0xD,WKErrorJavaScriptAppBoundDomain = 0xE,};
typedef XML_cp XML_Content;
enum XML_Parsing {XML_INITIALIZED = 0x0,XML_PARSING = 0x1,XML_FINISHED = 0x2,XML_SUSPENDED = 0x3,};
struct __CFBoolean;
struct __CFRunLoop;
typedef float __CLPK_real;
struct __CTTextTab;
struct __IOSurface;
struct __SecAccess;
struct __SecPolicy;
struct __SecRandom;
union __mbstate_t {char __mbstate8[128];long long _mbstateL;};
enum __ns_opcode {ns_o_query = 0x0,ns_o_iquery = 0x1,ns_o_status = 0x2,ns_o_notify = 0x4,ns_o_update = 0x5,ns_o_max = 0x6,};
typedef __uint128 __uint128_t;
struct _xmlCatalog;
struct _xmlExpCtxt;
struct _xmlExpNode;
struct _xmlPattern;
struct _xmlRelaxNG;
enum accept_stat {SUCCESS = 0x0,PROG_UNAVAIL = 0x1,PROG_MISMATCH = 0x2,PROC_UNAVAIL = 0x3,GARBAGE_ARGS = 0x4,SYSTEM_ERR = 0x5,};
typedef _acl_entry *acl_entry_t;
typedef auditinfo auditinfo_t;
typedef axr_box2i axr_box2i_t;
enum axr_error_t {axr_error_success = 0x0,axr_error_invalid_parameter = 0xFFFFFFFFFFFFFFFF,axr_error_unknown_file_type = 0xFFFFFFFFFFFFFFFE,axr_error_unsupported_EXR_type = 0xFFFFFFFFFFFFFFFD,axr_error_data_truncated = 0xFFFFFFFFFFFFFFFC,axr_error_insufficient_memory = 0xFFFFFFFFFFFFFFFB,axr_error_data_corrupted = 0xFFFFFFFFFFFFFFFA,axr_error_null_data = 0xFFFFFFFFFFFFFFF9,axr_error_compression_method_not_supported = 0xFFFFFFFFFFFFFFF8,axr_error_reserved_attribute_name = 0xFFFFFFFFFFFFFFF7,axr_error_encoding_suspended = 0xFFFFFFFFFFFFFFF6,axr_error_encoding_insufficient_data = 0xFFFFFFFFFFFFFFF5,axr_error_encoding_read_error = 0xFFFFFFFFFFFFFFF4,axr_error_encoding_write_error = 0xFFFFFFFFFFFFFFF3,};
enum axr_flags_t {axr_flags_default = 0x0,axr_flags_skip_parameter_checking = 0x1,axr_flags_print_debug_info = 0x2,axr_flags_disable_multithreading = 0x4,axr_flags_disable_automatic_line_order_handling = 0x8,};
typedef char *bp_fileid_t;
typedef int clock_res_t;
union __attribute__((aligned(8))) float16x4_t {char i8[8];short i16[4];int i32[2];unsigned char u8[8];unsigned short u16[4];unsigned int u32[2];};
union __attribute__((aligned(16))) float16x8_t {char i8[16];short i16[8];int i32[4];long long i64[2];unsigned char u8[16];unsigned short u16[8];unsigned int u32[4];unsigned long long u64[2];};
typedef fspecread fspecread_t;
typedef gss_OID_set_desc_struct *gss_OID_set;
struct if_clonereq {int ifcr_total;int ifcr_count;char *ifcr_buffer;};
struct ifma_msghdr {unsigned short ifmam_msglen;unsigned char ifmam_version;unsigned char ifmam_type;int ifmam_addrs;int ifmam_flags;unsigned short ifmam_index;};
struct inpcbpolicy;
struct ip6_pktopts;
typedef kauth_ace *kauth_ace_t;
typedef kauth_acl *kauth_acl_t;
typedef void *kmod_args_t;
typedef kmod_info kmod_info_t;
typedef NSObject *la_object_t;
typedef long long la_status_t;
typedef long double max_align_t;
typedef NSObject *nw_framer_t;
typedef NSObject *nw_object_t;
struct objc_method;
typedef simd_packed_int2 packed_int2;
typedef simd_packed_int4 packed_int4;
typedef simd_packed_int8 packed_int8;
enum ptrauth_key {ptrauth_key_asia = 0x0,ptrauth_key_asib = 0x1,ptrauth_key_asda = 0x2,ptrauth_key_asdb = 0x3,ptrauth_key_process_independent_code = 0x0,ptrauth_key_process_dependent_code = 0x1,ptrauth_key_process_independent_data = 0x2,ptrauth_key_process_dependent_data = 0x3,ptrauth_key_function_pointer = 0x0,ptrauth_key_return_address = 0x1,ptrauth_key_frame_pointer = 0x3,ptrauth_key_block_function = 0x0,ptrauth_key_cxx_vtable_pointer = 0x2,};
enum qos_class_t {QOS_CLASS_USER_INTERACTIVE = 0x21,QOS_CLASS_USER_INITIATED = 0x19,QOS_CLASS_DEFAULT = 0x15,QOS_CLASS_UTILITY = 0x11,QOS_CLASS_BACKGROUND = 0x9,QOS_CLASS_UNSPECIFIED = 0x0,};
enum reject_stat {RPC_MISMATCH = 0x0,AUTH_ERROR = 0x1,};
typedef __ns_rr res_9_ns_rr;
typedef __res_9_state *res_9_state;
struct sched_param {int sched_priority;char __opaque[4];};
typedef NSObject *sec_trust_t;
typedef simd_char2 simd__char2;
typedef simd_char3 simd__char3;
typedef simd_char4 simd__char4;
typedef simd_char8 simd__char8;
typedef simd_int16 simd__int16;
typedef simd_long2 simd__long2;
typedef simd_long3 simd__long3;
typedef simd_long4 simd__long4;
typedef simd_long8 simd__long8;
typedef simd_uint2 simd__uint2;
typedef simd_uint3 simd__uint3;
typedef simd_uint4 simd__uint4;
typedef simd_uint8 simd__uint8;
union __attribute__((aligned(16))) simd_char16 {char i8[16];short i16[8];int i32[4];long long i64[2];unsigned char u8[16];unsigned short u16[8];unsigned int u32[4];unsigned long long u64[2];};
union __attribute__((aligned(16))) simd_char32 {char i8[32];short i16[16];int i32[8];long long i64[4];__int128 i128[2];unsigned char u8[32];unsigned short u16[16];unsigned int u32[8];unsigned long long u64[4];__uint128 u128[2];};
union __attribute__((aligned(16))) simd_char64 {char i8[64];short i16[32];int i32[16];long long i64[8];__int128 i128[4];unsigned char u8[64];unsigned short u16[32];unsigned int u32[16];unsigned long long u64[8];__uint128 u128[4];};
typedef float simd_float1;
union __attribute__((aligned(8))) simd_float2 {float f32[2];char i8[8];short i16[4];int i32[2];unsigned char u8[8];unsigned short u16[4];unsigned int u32[2];};
union __attribute__((aligned(16))) simd_float3 {float f32[3];char i8[16];short i16[8];int i32[4];long long i64[2];unsigned char u8[16];unsigned short u16[8];unsigned int u32[4];unsigned long long u64[2];};
union __attribute__((aligned(16))) simd_float4 {float f32[4];char i8[16];short i16[8];int i32[4];long long i64[2];unsigned char u8[16];unsigned short u16[8];unsigned int u32[4];unsigned long long u64[2];};
union __attribute__((aligned(16))) simd_float8 {float f32[8];char i8[32];short i16[16];int i32[8];long long i64[4];__int128 i128[2];unsigned char u8[32];unsigned short u16[16];unsigned int u32[8];unsigned long long u64[4];__uint128 u128[2];};
typedef short simd_short1;
union __attribute__((aligned(4))) simd_short2 {char i8[4];short i16[2];unsigned char u8[4];unsigned short u16[2];};
union __attribute__((aligned(8))) simd_short3 {char i8[8];short i16[4];int i32[2];unsigned char u8[8];unsigned short u16[4];unsigned int u32[2];};
union __attribute__((aligned(8))) simd_short4 {char i8[8];short i16[4];int i32[2];unsigned char u8[8];unsigned short u16[4];unsigned int u32[2];};
union __attribute__((aligned(16))) simd_short8 {char i8[16];short i16[8];int i32[4];long long i64[2];unsigned char u8[16];unsigned short u16[8];unsigned int u32[4];unsigned long long u64[2];};
typedef unsigned char simd_uchar1;
union __attribute__((aligned(2))) simd_uchar2 {char i8[2];unsigned char u8[2];};
union __attribute__((aligned(4))) simd_uchar3 {char i8[4];short i16[2];unsigned char u8[4];unsigned short u16[2];};
union __attribute__((aligned(4))) simd_uchar4 {char i8[4];short i16[2];unsigned char u8[4];unsigned short u16[2];};
union __attribute__((aligned(8))) simd_uchar8 {char i8[8];short i16[4];int i32[2];unsigned char u8[8];unsigned short u16[4];unsigned int u32[2];};
union __attribute__((aligned(16))) simd_uint16 {char i8[64];short i16[32];int i32[16];long long i64[8];__int128 i128[4];unsigned char u8[64];unsigned short u16[32];unsigned int u32[16];unsigned long long u64[8];__uint128 u128[4];};
typedef unsigned long long simd_ulong1;
union __attribute__((aligned(16))) simd_ulong2 {char i8[16];short i16[8];int i32[4];long long i64[2];unsigned char u8[16];unsigned short u16[8];unsigned int u32[4];unsigned long long u64[2];};
union __attribute__((aligned(16))) simd_ulong3 {char i8[32];short i16[16];int i32[8];long long i64[4];__int128 i128[2];unsigned char u8[32];unsigned short u16[16];unsigned int u32[8];unsigned long long u64[4];__uint128 u128[2];};
union __attribute__((aligned(16))) simd_ulong4 {char i8[32];short i16[16];int i32[8];long long i64[4];__int128 i128[2];unsigned char u8[32];unsigned short u16[16];unsigned int u32[8];unsigned long long u64[4];__uint128 u128[2];};
union __attribute__((aligned(16))) simd_ulong8 {char i8[64];short i16[32];int i32[16];long long i64[8];__int128 i128[4];unsigned char u8[64];unsigned short u16[32];unsigned int u32[16];unsigned long long u64[8];__uint128 u128[4];};
enum sparse_norm {SPARSE_NORM_ONE = 0xAB,SPARSE_NORM_TWO = 0xAD,SPARSE_NORM_INF = 0xAF,SPARSE_NORM_R1 = 0xB3,};
struct sqlite3_str;
union __attribute__((aligned(8))) swift_uint2 {char i8[8];short i16[4];int i32[2];unsigned char u8[8];unsigned short u16[4];unsigned int u32[2];};
union __attribute__((aligned(16))) swift_uint3 {char i8[16];short i16[8];int i32[4];long long i64[2];unsigned char u8[16];unsigned short u16[8];unsigned int u32[4];unsigned long long u64[2];};
union __attribute__((aligned(16))) swift_uint4 {char i8[16];short i16[8];int i32[4];long long i64[2];unsigned char u8[16];unsigned short u16[8];unsigned int u32[4];unsigned long long u64[2];};
enum task_role_t {TASK_RENICED = 0xFFFFFFFF,TASK_UNSPECIFIED = 0x0,TASK_FOREGROUND_APPLICATION = 0x1,TASK_BACKGROUND_APPLICATION = 0x2,TASK_CONTROL_APPLICATION = 0x3,TASK_GRAPHICS_SERVER = 0x4,TASK_THROTTLE_APPLICATION = 0x5,TASK_NONUI_APPLICATION = 0x6,TASK_DEFAULT_APPLICATION = 0x7,TASK_DARWINBG_APPLICATION = 0x8,};
typedef double unw_fpreg_t;
struct utmpidlearr {utmpidle **uia_arr;int uia_cnt;};
typedef unsigned long long vDSP_Length;
typedef long long vDSP_Stride;
typedef simd_int2 vector_int2;
typedef simd_int3 vector_int3;
typedef simd_int4 vector_int4;
typedef simd_int8 vector_int8;
typedef struct _xmlAutomata xmlAutomata;
enum xmlC14NMode {XML_C14N_1_0 = 0x0,XML_C14N_EXCLUSIVE_1_0 = 0x1,XML_C14N_1_1 = 0x2,};
typedef _xmlChLRange xmlChLRange;
typedef _xmlChSRange xmlChSRange;
typedef void (*xmlFreeFunc)(void *);
typedef _xmlNotation xmlNotation;
typedef struct _xmlHashTable xmlRefTable;
typedef struct _xmlSaveCtxt xmlSaveCtxt;
typedef zone_info zone_info_t;
typedef zone_name zone_name_t;
typedef AAPathList_impl *AAPathList;
typedef char ALCboolean;
typedef struct ALCcontext_struct ALCcontext;
enum AVKitError {AVKitErrorUnknown = 0xFFFFFFFFFFFFFC18,AVKitErrorPictureInPictureStartFailed = 0xFFFFFFFFFFFFFC17,};
typedef unsigned long long ByteOffset;
enum CBATTError {CBATTErrorSuccess = 0x0,CBATTErrorInvalidHandle = 0x1,CBATTErrorReadNotPermitted = 0x2,CBATTErrorWriteNotPermitted = 0x3,CBATTErrorInvalidPdu = 0x4,CBATTErrorInsufficientAuthentication = 0x5,CBATTErrorRequestNotSupported = 0x6,CBATTErrorInvalidOffset = 0x7,CBATTErrorInsufficientAuthorization = 0x8,CBATTErrorPrepareQueueFull = 0x9,CBATTErrorAttributeNotFound = 0xA,CBATTErrorAttributeNotLong = 0xB,CBATTErrorInsufficientEncryptionKeySize = 0xC,CBATTErrorInvalidAttributeValueLength = 0xD,CBATTErrorUnlikelyError = 0xE,CBATTErrorInsufficientEncryption = 0xF,CBATTErrorUnsupportedGroupType = 0x10,CBATTErrorInsufficientResources = 0x11,};
enum CBLAS_DIAG {CblasNonUnit = 0x83,CblasUnit = 0x84,};
enum CBLAS_SIDE {CblasLeft = 0x8D,CblasRight = 0x8E,};
enum CBLAS_UPLO {CblasUpper = 0x79,CblasLower = 0x7A,};
typedef CC_MD2state_st CC_MD2_CTX;
typedef CC_MD4state_st CC_MD4_CTX;
typedef CC_MD5state_st CC_MD5_CTX;
typedef  __CFArray *CFArrayRef;
typedef __CFError *CFErrorRef;
typedef unsigned long long CFHashCode;
enum CFURLError {kCFURLUnknownError = 0xFFFFFFFFFFFFFFF6,kCFURLUnknownSchemeError = 0xFFFFFFFFFFFFFFF5,kCFURLResourceNotFoundError = 0xFFFFFFFFFFFFFFF4,kCFURLResourceAccessViolationError = 0xFFFFFFFFFFFFFFF3,kCFURLRemoteHostUnavailableError = 0xFFFFFFFFFFFFFFF2,kCFURLImproperArgumentsError = 0xFFFFFFFFFFFFFFF1,kCFURLUnknownPropertyKeyError = 0xFFFFFFFFFFFFFFF0,kCFURLPropertyKeyUnavailableError = 0xFFFFFFFFFFFFFFEF,kCFURLTimeoutError = 0xFFFFFFFFFFFFFFEE,};
typedef CGColor *CGColorRef;
struct CGFunction;
struct CGGradient;
typedef CGImage *CGImageRef;
typedef CGLayer *CGLayerRef;
enum CGLineJoin {kCGLineJoinMiter = 0x0,kCGLineJoinRound = 0x1,kCGLineJoinBevel = 0x2,};
struct CGPDFArray;
enum CGRectEdge {CGRectMinXEdge = 0x0,CGRectMinYEdge = 0x1,CGRectMaxXEdge = 0x2,CGRectMaxYEdge = 0x3,};
typedef OpaqueCMClock *CMClockRef;
typedef  __CTFrame *CTFrameRef;
struct DSPComplex {float real;float imag;};
enum GLKFogMode {GLKFogModeExp = 0x0,GLKFogModeExp2 = 0x1,GLKFogModeLinear = 0x2,};
typedef _GLKMatrix2 GLKMatrix2;
typedef _GLKMatrix3 GLKMatrix3;
typedef _GLKMatrix4 GLKMatrix4;
typedef _GLKVector2 GLKVector2;
typedef _GLKVector3 GLKVector3;
typedef _GLKVector4 GLKVector4;
enum INBillType {INBillTypeUnknown = 0x0,INBillTypeAutoInsurance = 0x1,INBillTypeCable = 0x2,INBillTypeCarLease = 0x3,INBillTypeCarLoan = 0x4,INBillTypeCreditCard = 0x5,INBillTypeElectricity = 0x6,INBillTypeGas = 0x7,INBillTypeGarbageAndRecycling = 0x8,INBillTypeHealthInsurance = 0x9,INBillTypeHomeInsurance = 0xA,INBillTypeInternet = 0xB,INBillTypeLifeInsurance = 0xC,INBillTypeMortgage = 0xD,INBillTypeMusicStreaming = 0xE,INBillTypePhone = 0xF,INBillTypeRent = 0x10,INBillTypeSewer = 0x11,INBillTypeStudentLoan = 0x12,INBillTypeTrafficTicket = 0x13,INBillTypeTuition = 0x14,INBillTypeUtilities = 0x15,INBillTypeWater = 0x16,};
enum INSortType {INSortTypeUnknown = 0x0,INSortTypeAsIs = 0x1,INSortTypeByDate = 0x2,};
enum INTaskType {INTaskTypeUnknown = 0x0,INTaskTypeNotCompletable = 0x1,INTaskTypeCompletable = 0x2,};
typedef OpaqueJSClass *JSClassRef;
typedef  OpaqueJSValue *JSValueRef;
enum MACRO_ATTR {ATTR_BIT_MAP_COUNT = 5,};
enum MACRO_AUTH {AUTH_NONE = 0,AUTH_NULL = 0,AUTH_UNIX = 1,AUTH_SHORT = 2,AUTH_DES = 3,};
enum MACRO_B110 {B110 = 110,};
enum MACRO_B134 {B134 = 134,};
enum MACRO_B150 {B150 = 150,};
enum MACRO_B200 {B200 = 200,};
enum MACRO_B300 {B300 = 300,};
enum MACRO_B600 {B600 = 600,};
enum MACRO_BANK {BANK_ORIGINATOR_PID = 0x1,BANK_PERSONA_TOKEN = 0x2,BANK_PERSONA_ID = 0x3,};
enum MACRO_BASE {BASE_BUFFER_SIZE = 4096,};
enum MACRO_BIND {BIND_TYPE_POINTER = 1,BIND_TYPE_TEXT_ABSOLUTE32 = 2,BIND_TYPE_TEXT_PCREL32 = 3,BIND_SPECIAL_DYLIB_SELF = 0,BIND_SPECIAL_DYLIB_MAIN_EXECUTABLE = -1,BIND_SPECIAL_DYLIB_FLAT_LOOKUP = -2,BIND_SPECIAL_DYLIB_WEAK_LOOKUP = -3,BIND_SYMBOL_FLAGS_WEAK_IMPORT = 1,BIND_SYMBOL_FLAGS_NON_WEAK_DEFINITION = 8,BIND_OPCODE_MASK = 240,BIND_IMMEDIATE_MASK = 15,BIND_OPCODE_DONE = 0,BIND_OPCODE_SET_DYLIB_ORDINAL_IMM = 16,BIND_OPCODE_SET_DYLIB_ORDINAL_ULEB = 32,BIND_OPCODE_SET_DYLIB_SPECIAL_IMM = 48,BIND_OPCODE_SET_SYMBOL_TRAILING_FLAGS_IMM = 64,BIND_OPCODE_SET_TYPE_IMM = 80,BIND_OPCODE_SET_ADDEND_SLEB = 96,BIND_OPCODE_SET_SEGMENT_AND_OFFSET_ULEB = 112,BIND_OPCODE_ADD_ADDR_ULEB = 128,BIND_OPCODE_DO_BIND = 144,BIND_OPCODE_DO_BIND_ADD_ADDR_ULEB = 160,BIND_OPCODE_DO_BIND_ADD_ADDR_IMM_SCALED = 176,BIND_OPCODE_DO_BIND_ULEB_TIMES_SKIPPING_ULEB = 192,BIND_OPCODE_THREADED = 208,BIND_SUBOPCODE_THREADED_SET_BIND_ORDINAL_TABLE_SIZE_ULEB = 0,BIND_SUBOPCODE_THREADED_APPLY = 1,};
enum MACRO_BNNS {BNNS_MAX_TENSOR_DIMENSION = 8,};
enum MACRO_BOOT {BOOT_TIME = 2,OLD_TIME = 3,NEW_TIME = 4,};
enum MACRO_BSD4 {BSD4_3 = 1,BSD4_4 = 1,};
enum MACRO_BYTE {BYTE_SIZE = 8,};
enum MACRO_CALL {CALL_NOT_IN_CARBON = 0,};
enum MACRO_CCTS {CCTS_OFLOW = 0x10000,};
enum MACRO_CEOL {CEOL = 0xFF,};
enum MACRO_CHAR {CHAR_BIT = 8,};
enum MACRO_CMIN {CMIN = 1,CQUIT = 28,};
enum MACRO_DICE {DICE_KIND_DATA = 0x1,DICE_KIND_JUMP_TABLE8 = 0x2,DICE_KIND_JUMP_TABLE16 = 0x3,DICE_KIND_JUMP_TABLE32 = 0x4,DICE_KIND_ABS_JUMP_TABLE32 = 0x5,};
enum MACRO_DYLD {DYLD_AOT_IMAGE_KEY_SIZE = 32,DYLD_MAX_PROCESS_INFO_NOTIFY_COUNT = 8,};
enum MACRO_D_MD {D_MD_ORDER = 57,};
enum MACRO_EAGL {EAGL_MAJOR_VERSION = 1,EAGL_MINOR_VERSION = 0,};
enum MACRO_EDOM {EDOM = 33,};
enum MACRO_EXIT {EXIT_FAILURE = 1,EXIT_SUCCESS = 0,};
enum MACRO_EXTA {EXTA = 19200,};
enum MACRO_EXTB {EXTB = 38400,};
enum MACRO_FTS5 {FTS5_TOKENIZE_QUERY = 0x1,FTS5_TOKENIZE_PREFIX = 0x2,FTS5_TOKENIZE_DOCUMENT = 0x4,FTS5_TOKENIZE_AUX = 0x8,FTS5_TOKEN_COLOCATED = 0x1,};
enum MACRO_GLOB {GLOB_APPEND = 0x1,GLOB_DOOFFS = 0x2,GLOB_ERR = 0x4,GLOB_MARK = 0x8,GLOB_NOCHECK = 0x10,GLOB_NOSORT = 0x20,GLOB_NOESCAPE = 0x2000,GLOB_NOSPACE = 0xFFFFFFFF,GLOB_ABORTED = 0xFFFFFFFE,GLOB_NOMATCH = 0xFFFFFFFD,GLOB_NOSYS = 0xFFFFFFFC,GLOB_ALTDIRFUNC = 0x40,GLOB_BRACE = 0x80,GLOB_MAGCHAR = 0x100,GLOB_NOMAGIC = 0x200,GLOB_QUOTE = 0x400,GLOB_TILDE = 0x800,GLOB_LIMIT = 0x1000,};
enum MACRO_HOST {HOST_INFO_MAX = 1024,KERNEL_VERSION_MAX = 512,KERNEL_BOOT_INFO_MAX = 4096,};
enum MACRO_ICMP {ICMP_MINLEN = 8,ICMP_MASKLEN = 12,ICMP_ECHOREPLY = 0,ICMP_UNREACH = 3,ICMP_UNREACH_NET = 0,ICMP_UNREACH_HOST = 1,ICMP_UNREACH_PROTOCOL = 2,ICMP_UNREACH_PORT = 3,ICMP_UNREACH_NEEDFRAG = 4,ICMP_UNREACH_SRCFAIL = 5,ICMP_UNREACH_NET_UNKNOWN = 6,ICMP_UNREACH_HOST_UNKNOWN = 7,ICMP_UNREACH_ISOLATED = 8,ICMP_UNREACH_NET_PROHIB = 9,ICMP_UNREACH_HOST_PROHIB = 10,ICMP_UNREACH_TOSNET = 11,ICMP_UNREACH_TOSHOST = 12,ICMP_UNREACH_FILTER_PROHIB = 13,ICMP_UNREACH_HOST_PRECEDENCE = 14,ICMP_UNREACH_PRECEDENCE_CUTOFF = 15,ICMP_SOURCEQUENCH = 4,ICMP_REDIRECT = 5,ICMP_REDIRECT_NET = 0,ICMP_REDIRECT_HOST = 1,ICMP_REDIRECT_TOSNET = 2,ICMP_REDIRECT_TOSHOST = 3,ICMP_ALTHOSTADDR = 6,ICMP_ECHO = 8,ICMP_ROUTERADVERT = 9,ICMP_ROUTERADVERT_NORMAL = 0,ICMP_ROUTERADVERT_NOROUTE_COMMON = 16,ICMP_ROUTERSOLICIT = 10,ICMP_TIMXCEED = 11,ICMP_TIMXCEED_INTRANS = 0,ICMP_TIMXCEED_REASS = 1,ICMP_PARAMPROB = 12,ICMP_PARAMPROB_ERRATPTR = 0,ICMP_PARAMPROB_OPTABSENT = 1,ICMP_PARAMPROB_LENGTH = 2,ICMP_TSTAMP = 13,ICMP_TSTAMPREPLY = 14,ICMP_IREQ = 15,ICMP_IREQREPLY = 16,ICMP_MASKREQ = 17,ICMP_MASKREPLY = 18,ICMP_TRACEROUTE = 30,ICMP_DATACONVERR = 31,ICMP_MOBILE_REDIRECT = 32,ICMP_IPV6_WHEREAREYOU = 33,ICMP_IPV6_IAMHERE = 34,ICMP_MOBILE_REGREQUEST = 35,ICMP_MOBILE_REGREPLY = 36,ICMP_SKIP = 39,ICMP_PHOTURIS = 40,ICMP_PHOTURIS_UNKNOWN_INDEX = 1,ICMP_PHOTURIS_AUTH_FAILED = 2,ICMP_PHOTURIS_DECRYPT_FAILED = 3,ICMP_MAXTYPE = 40,};
enum MACRO_IN6P {IN6P_IPV6_V6ONLY = 0x8000,IN6P_BINDV6ONLY = 0x1000000,};
enum MACRO_INET {INET_ADDRSTRLEN = 16,};
enum MACRO_INFO {MACH_TASK_BASIC_INFO = 20,TASK_POWER_INFO = 21,TASK_VM_INFO = 22,};
enum MACRO_IP6F {IP6F_OFF_MASK = 0xF8FF,IP6F_RESERVED_MASK = 0x600,IP6F_MORE_FRAG = 0x100,};
enum MACRO_IPV6 {IPV6_SOCKOPT_RESERVED1 = 3,IPV6_UNICAST_HOPS = 4,IPV6_MULTICAST_IF = 9,IPV6_MULTICAST_HOPS = 10,IPV6_MULTICAST_LOOP = 11,IPV6_JOIN_GROUP = 12,IPV6_LEAVE_GROUP = 13,IPV6_PORTRANGE = 14,};
enum MACRO_KERN {KERN_SUCCESS = 0,KERN_INVALID_ADDRESS = 1,KERN_PROTECTION_FAILURE = 2,KERN_NO_SPACE = 3,KERN_INVALID_ARGUMENT = 4,KERN_FAILURE = 5,KERN_RESOURCE_SHORTAGE = 6,KERN_NOT_RECEIVER = 7,KERN_NO_ACCESS = 8,KERN_MEMORY_FAILURE = 9,KERN_MEMORY_ERROR = 10,KERN_ALREADY_IN_SET = 11,KERN_NOT_IN_SET = 12,KERN_NAME_EXISTS = 13,KERN_ABORTED = 14,KERN_INVALID_NAME = 15,KERN_INVALID_TASK = 16,KERN_INVALID_RIGHT = 17,KERN_INVALID_VALUE = 18,KERN_UREFS_OVERFLOW = 19,KERN_INVALID_CAPABILITY = 20,KERN_RIGHT_EXISTS = 21,KERN_INVALID_HOST = 22,KERN_MEMORY_PRESENT = 23,KERN_MEMORY_DATA_MOVED = 24,KERN_MEMORY_RESTART_COPY = 25,KERN_INVALID_PROCESSOR_SET = 26,KERN_POLICY_LIMIT = 27,KERN_INVALID_POLICY = 28,KERN_INVALID_OBJECT = 29,KERN_ALREADY_WAITING = 30,KERN_DEFAULT_SET = 31,KERN_EXCEPTION_PROTECTED = 32,KERN_INVALID_LEDGER = 33,KERN_INVALID_MEMORY_CONTROL = 34,KERN_INVALID_SECURITY = 35,KERN_NOT_DEPRESSED = 36,KERN_TERMINATED = 37,KERN_LOCK_SET_DESTROYED = 38,KERN_LOCK_UNSTABLE = 39,KERN_LOCK_OWNED = 40,KERN_LOCK_OWNED_SELF = 41,KERN_SEMAPHORE_DESTROYED = 42,KERN_RPC_SERVER_TERMINATED = 43,KERN_RPC_TERMINATE_ORPHAN = 44,KERN_RPC_CONTINUE_ORPHAN = 45,KERN_NOT_SUPPORTED = 46,KERN_NODE_DOWN = 47,KERN_NOT_WAITING = 48,KERN_OPERATION_TIMED_OUT = 49,KERN_CODESIGN_ERROR = 50,KERN_POLICY_STATIC = 51,KERN_INSUFFICIENT_BUFFER_SIZE = 52,KERN_DENIED = 53,KERN_RETURN_MAX = 256,};
enum MACRO_KIPC {KIPC_MAXSOCKBUF = 1,KIPC_SOCKBUF_WASTE = 2,KIPC_SOMAXCONN = 3,KIPC_MAX_LINKHDR = 4,KIPC_MAX_PROTOHDR = 5,KIPC_MAX_HDR = 6,KIPC_MAX_DATALEN = 7,KIPC_MBSTAT = 8,KIPC_NMBCLUSTERS = 9,KIPC_SOQLIMITCOMPAT = 10,};
enum MACRO_KMOD {KMOD_MAX_NAME = 64,KMOD_INFO_VERSION = 1,};
enum MACRO_LCID {LCID_PROC_SELF = 0,LCID_REMOVE = -1,LCID_CREATE = 0,};
enum MACRO_LOAD {LOAD_SCALE = 1000,};
enum MACRO_LOCK {LOCK_SH = 0x1,LOCK_EX = 0x2,LOCK_NB = 0x4,LOCK_UN = 0x8,};
enum MACRO_LONG {LONG_MIN = 0x8000000000000000,};
enum MACRO_MACH {MACH_PORT_NULL = 0,MACH_PORT_DEAD = 4294967295,MACH_PORT_RIGHT_SEND = 0,MACH_PORT_RIGHT_RECEIVE = 1,MACH_PORT_RIGHT_SEND_ONCE = 2,MACH_PORT_RIGHT_PORT_SET = 3,MACH_PORT_RIGHT_DEAD_NAME = 4,MACH_PORT_RIGHT_LABELH = 5,MACH_PORT_RIGHT_NUMBER = 6,MACH_PORT_TYPE_NONE = 0,MACH_PORT_TYPE_DNREQUEST = 2147483648,MACH_PORT_TYPE_SPREQUEST = 1073741824,MACH_PORT_TYPE_SPREQUEST_DELAYED = 536870912,MACH_PORT_SRIGHTS_NONE = 0,MACH_PORT_SRIGHTS_PRESENT = 1,MACH_PORT_QLIMIT_ZERO = 0,MACH_PORT_QLIMIT_BASIC = 5,MACH_PORT_QLIMIT_SMALL = 16,MACH_PORT_QLIMIT_LARGE = 1024,MACH_PORT_QLIMIT_KERNEL = 65534,MACH_PORT_STATUS_FLAG_TEMPOWNER = 1,MACH_PORT_STATUS_FLAG_GUARDED = 2,MACH_PORT_STATUS_FLAG_STRICT_GUARD = 4,MACH_PORT_STATUS_FLAG_IMP_DONATION = 8,MACH_PORT_STATUS_FLAG_REVIVE = 16,MACH_PORT_STATUS_FLAG_TASKPTR = 32,MACH_PORT_STATUS_FLAG_GUARD_IMMOVABLE_RECEIVE = 64,MACH_PORT_STATUS_FLAG_NO_GRANT = 128,MACH_PORT_LIMITS_INFO = 1,MACH_PORT_RECEIVE_STATUS = 2,MACH_PORT_DNREQUESTS_SIZE = 3,MACH_PORT_TEMPOWNER = 4,MACH_PORT_IMPORTANCE_RECEIVER = 5,MACH_PORT_DENAP_RECEIVER = 6,MACH_PORT_INFO_EXT = 7,MACH_PORT_DNREQUESTS_SIZE_COUNT = 1,};
enum MACRO_MADV {MADV_FREE = 5,MADV_ZERO_WIRED_PAGES = 6,MADV_FREE_REUSABLE = 7,MADV_FREE_REUSE = 8,MADV_CAN_REUSE = 9,MADV_PAGEOUT = 10,};
enum MACRO_MATH {MATH_ERRNO = 1,MATH_ERREXCEPT = 2,};
enum MACRO_NAME {NAME_MAX = 255,NGROUPS_MAX = 16,UID_MAX = 2147483647,OPEN_MAX = 10240,PATH_MAX = 1024,};
enum MACRO_NCCS {NCCS = 20,};
enum MACRO_NLM4 {NLM4_TEST = 1,NLM4_LOCK = 2,NLM4_CANCEL = 3,NLM4_UNLOCK = 4,NLM4_GRANTED = 5,NLM4_TEST_MSG = 6,NLM4_LOCK_MSG = 7,NLM4_CANCEL_MSG = 8,NLM4_UNLOCK_MSG = 9,NLM4_GRANTED_MSG = 10,NLM4_TEST_RES = 11,NLM4_LOCK_RES = 12,NLM4_CANCEL_RES = 13,NLM4_UNLOCK_RES = 14,NLM4_GRANTED_RES = 15,NLM4_SHARE = 20,NLM4_UNSHARE = 21,NLM4_NM_LOCK = 22,NLM4_FREE_ALL = 23,};
enum MACRO_NOTE {NOTE_TRIGGER = 0x1000000,NOTE_FFNOP = 0x0,NOTE_FFAND = 0x40000000,NOTE_FFOR = 0x80000000,NOTE_FFCOPY = 0xC0000000,NOTE_FFCTRLMASK = 0xC0000000,NOTE_FFLAGSMASK = 0xFFFFFF,NOTE_LOWAT = 0x1,NOTE_OOB = 0x2,NOTE_DELETE = 0x1,NOTE_WRITE = 0x2,NOTE_EXTEND = 0x4,NOTE_ATTRIB = 0x8,NOTE_LINK = 0x10,NOTE_RENAME = 0x20,NOTE_REVOKE = 0x40,NOTE_NONE = 0x80,NOTE_FUNLOCK = 0x100,NOTE_EXIT = 0x80000000,NOTE_FORK = 0x40000000,NOTE_EXEC = 0x20000000,NOTE_SIGNAL = 0x8000000,NOTE_EXITSTATUS = 0x4000000,NOTE_EXIT_DETAIL = 0x2000000,NOTE_PDATAMASK = 0xFFFFF,NOTE_EXIT_DETAIL_MASK = 0x70000,NOTE_EXIT_DECRYPTFAIL = 0x10000,NOTE_EXIT_MEMORY = 0x20000,NOTE_EXIT_CSERROR = 0x40000,NOTE_VM_PRESSURE = 0x80000000,NOTE_VM_PRESSURE_TERMINATE = 0x40000000,NOTE_VM_PRESSURE_SUDDEN_TERMINATE = 0x20000000,NOTE_VM_ERROR = 0x10000000,NOTE_SECONDS = 0x1,NOTE_USECONDS = 0x2,NOTE_NSECONDS = 0x4,NOTE_ABSOLUTE = 0x8,NOTE_LEEWAY = 0x10,NOTE_CRITICAL = 0x20,NOTE_BACKGROUND = 0x40,NOTE_MACH_CONTINUOUS_TIME = 0x80,NOTE_MACHTIME = 0x100,NOTE_TRACK = 0x1,NOTE_TRACKERR = 0x2,NOTE_CHILD = 0x4,};
enum MACRO_NSEC {NSEC_PER_USEC = 1000,};
enum MACRO_NULL {UPL_NULL = 0,VM_NAMED_ENTRY_NULL = 0,};
enum MACRO_N_NO {N_NO_DEAD_STRIP = 0x20,N_DESC_DISCARDED = 0x20,N_WEAK_REF = 0x40,N_WEAK_DEF = 0x80,N_REF_TO_WEAK = 0x80,N_ARM_THUMB_DEF = 0x8,N_SYMBOL_RESOLVER = 0x100,N_ALT_ENTRY = 0x200,N_COLD_FUNC = 0x400,};
enum MACRO_OBJC {OBJC_OLD_DISPATCH_PROTOTYPES = 1,};
enum MACRO_O_DP {O_DP_GETRAWENCRYPTED = 0x1,O_DP_GETRAWUNENCRYPTED = 0x2,};
enum MACRO_PAGE {PAGE_MAX_SHIFT = 14,PAGE_MIN_SHIFT = 12,};
enum MACRO_PASS {PASS_MAX = 128,};
enum MACRO_PIPE {PIPE_BUF = 512,};
enum MACRO_POLL {POLL_IN = 1,POLL_OUT = 2,POLL_MSG = 3,POLL_ERR = 4,POLL_PRI = 5,POLL_HUP = 6,};
enum MACRO_PRIO {PRIO_PROCESS = 0,PRIO_PGRP = 1,PRIO_USER = 2,PRIO_DARWIN_THREAD = 3,PRIO_DARWIN_PROCESS = 4,PRIO_MIN = -20,PRIO_MAX = 20,PRIO_DARWIN_BG = 4096,PRIO_DARWIN_NONUI = 4097,};
enum MACRO_PROC {PROC_FLAG_DARWINBG = 0x8000,PROC_FLAG_EXT_DARWINBG = 0x10000,PROC_FLAG_IOS_APPLEDAEMON = 0x20000,PROC_FLAG_IOS_IMPPROMOTION = 0x80000,PROC_FLAG_ADAPTIVE = 0x100000,PROC_FLAG_ADAPTIVE_IMPORTANT = 0x200000,PROC_FLAG_IMPORTANCE_DONOR = 0x400000,PROC_FLAG_SUPPRESSED = 0x800000,PROC_FLAG_APPLICATION = 0x1000000,};
enum MACRO_PROT {PROT_NONE = 0x0,PROT_READ = 0x1,PROT_WRITE = 0x2,PROT_EXEC = 0x4,};
enum MACRO_PSWP {PSWP = 0,PVM = 4,PINOD = 8,PRIBIO = 16,};
enum MACRO_PVFS {PVFS = 20,};
enum MACRO_RAND {RAND_MAX = 0x7FFFFFFF,};
enum MACRO_RLIM {RLIM_INFINITY = 9223372036854775807,};
enum MACRO_RTLD {RTLD_LAZY = 0x1,RTLD_NOW = 0x2,RTLD_LOCAL = 0x4,RTLD_GLOBAL = 0x8,RTLD_NOLOAD = 0x10,RTLD_NODELETE = 0x80,RTLD_FIRST = 0x100,RTLD_NEXT = 0xFFFFFFFF,RTLD_DEFAULT = 0xFFFFFFFE,RTLD_SELF = 0xFFFFFFFD,RTLD_MAIN_ONLY = 0xFFFFFFFB,};
enum MACRO_SACK {TCPOPT_SACK = 5,TCPOLEN_SACK = 8,};
enum MACRO_SADB {SADB_RESERVED = 0,SADB_GETSPI = 1,SADB_UPDATE = 2,SADB_ADD = 3,SADB_DELETE = 4,SADB_GET = 5,SADB_ACQUIRE = 6,SADB_REGISTER = 7,SADB_EXPIRE = 8,SADB_FLUSH = 9,SADB_DUMP = 10,SADB_X_PROMISC = 11,SADB_X_PCHANGE = 12,SADB_X_SPDUPDATE = 13,SADB_X_SPDADD = 14,SADB_X_SPDDELETE = 15,SADB_X_SPDGET = 16,SADB_X_SPDACQUIRE = 17,SADB_X_SPDDUMP = 18,SADB_X_SPDFLUSH = 19,SADB_X_SPDSETIDX = 20,SADB_X_SPDEXPIRE = 21,SADB_X_SPDDELETE2 = 22,SADB_GETSASTAT = 23,SADB_X_SPDENABLE = 24,SADB_X_SPDDISABLE = 25,SADB_MIGRATE = 26,SADB_MAX = 26,SADB_EXT_RESERVED = 0,SADB_EXT_SA = 1,SADB_EXT_LIFETIME_CURRENT = 2,SADB_EXT_LIFETIME_HARD = 3,SADB_EXT_LIFETIME_SOFT = 4,SADB_EXT_ADDRESS_SRC = 5,SADB_EXT_ADDRESS_DST = 6,SADB_EXT_ADDRESS_PROXY = 7,SADB_EXT_KEY_AUTH = 8,SADB_EXT_KEY_ENCRYPT = 9,SADB_EXT_IDENTITY_SRC = 10,SADB_EXT_IDENTITY_DST = 11,SADB_EXT_SENSITIVITY = 12,SADB_EXT_PROPOSAL = 13,SADB_EXT_SUPPORTED_AUTH = 14,SADB_EXT_SUPPORTED_ENCRYPT = 15,SADB_EXT_SPIRANGE = 16,SADB_X_EXT_KMPRIVATE = 17,SADB_X_EXT_POLICY = 18,SADB_X_EXT_SA2 = 19,SADB_EXT_SESSION_ID = 20,SADB_EXT_SASTAT = 21,SADB_X_EXT_IPSECIF = 22,SADB_X_EXT_ADDR_RANGE_SRC_START = 23,SADB_X_EXT_ADDR_RANGE_SRC_END = 24,SADB_X_EXT_ADDR_RANGE_DST_START = 25,SADB_X_EXT_ADDR_RANGE_DST_END = 26,SADB_EXT_MIGRATE_ADDRESS_SRC = 27,SADB_EXT_MIGRATE_ADDRESS_DST = 28,SADB_X_EXT_MIGRATE_IPSECIF = 29,SADB_EXT_MAX = 29,SADB_SATYPE_UNSPEC = 0,SADB_SATYPE_AH = 2,SADB_SATYPE_ESP = 3,SADB_SATYPE_RSVP = 5,SADB_SATYPE_OSPFV2 = 6,SADB_SATYPE_RIPV2 = 7,SADB_SATYPE_MIP = 8,SADB_X_SATYPE_IPCOMP = 9,SADB_X_SATYPE_POLICY = 10,SADB_SATYPE_MAX = 11,SADB_SASTATE_LARVAL = 0,SADB_SASTATE_MATURE = 1,SADB_SASTATE_DYING = 2,SADB_SASTATE_DEAD = 3,SADB_SASTATE_MAX = 3,SADB_SAFLAGS_PFS = 1,SADB_AALG_NONE = 0,SADB_AALG_MD5HMAC = 1,SADB_AALG_SHA1HMAC = 2,SADB_AALG_MAX = 8,SADB_X_AALG_SHA2_256 = 6,SADB_X_AALG_SHA2_384 = 7,SADB_X_AALG_SHA2_512 = 8,SADB_X_AALG_MD5 = 3,SADB_X_AALG_SHA = 4,SADB_X_AALG_NULL = 5,SADB_EALG_NONE = 0,SADB_EALG_DESCBC = 1,SADB_EALG_3DESCBC = 2,SADB_EALG_NULL = 3,SADB_EALG_MAX = 12,SADB_X_EALG_CAST128CBC = 5,SADB_X_EALG_BLOWFISHCBC = 4,SADB_X_EALG_RIJNDAELCBC = 12,SADB_X_EALG_AESCBC = 12,SADB_X_EALG_AES = 12,SADB_X_EALG_AES_GCM = 13,SADB_X_EALG_CHACHA20POLY1305 = 14,SADB_X_CALG_NONE = 0,SADB_X_CALG_OUI = 1,SADB_X_CALG_DEFLATE = 2,SADB_X_CALG_LZS = 3,SADB_X_CALG_MAX = 4,SADB_IDENTTYPE_RESERVED = 0,SADB_IDENTTYPE_PREFIX = 1,SADB_IDENTTYPE_FQDN = 2,SADB_IDENTTYPE_USERFQDN = 3,SADB_X_IDENTTYPE_ADDR = 4,SADB_IDENTTYPE_MAX = 4,SADB_X_EXT_NONE = 0,SADB_X_EXT_OLD = 1,SADB_X_EXT_IV4B = 16,SADB_X_EXT_DERIV = 32,SADB_X_EXT_CYCSEQ = 64,SADB_X_EXT_PSEQ = 0,SADB_X_EXT_PRAND = 256,SADB_X_EXT_PZERO = 512,SADB_X_EXT_PMASK = 768,SADB_X_EXT_IIV = 1024,SADB_X_EXT_RAWCPI = 128,SADB_KEY_FLAGS_MAX = 32767,SADB_X_LIFETIME_ALLOCATIONS = 0,SADB_X_LIFETIME_BYTES = 1,SADB_X_LIFETIME_ADDTIME = 2,SADB_X_LIFETIME_USETIME = 3,};
enum MACRO_SECT {NO_SECT = 0,MAX_SECT = 255,};
enum MACRO_SEEK {SEEK_SET = 0,SEEK_CUR = 1,SEEK_END = 2,};
enum MACRO_SEGV {SEGV_NOOP = 0,SEGV_MAPERR = 1,SEGV_ACCERR = 2,};
enum MACRO_SHRT {SHRT_MIN = -32768,};
enum MACRO_SHUT {SHUT_RD = 0,SHUT_WR = 1,SHUT_RDWR = 2,};
enum MACRO_SIDL {SIDL = 1,SRUN = 2,};
enum MACRO_SIMD {SIMD_COMPILER_HAS_REQUIRED_FEATURES = 1,SIMD_LIBRARY_VERSION = 3,};
enum MACRO_SLOT {NAME_SERVER_SLOT = 0,ENVIRONMENT_SLOT = 1,SERVICE_SLOT = 2,};
enum MACRO_SOCK {SOCK_STREAM = 1,SOCK_DGRAM = 2,SOCK_RAW = 3,SOCK_RDM = 4,SOCK_SEQPACKET = 5,};
enum MACRO_SYNC {SYNC_VOLUME_FULLSYNC = 0x1,SYNC_VOLUME_WAIT = 0x2,};
enum MACRO_S_OK {S_OK = 0x0,S_FALSE = 0x1,};
enum MACRO_TAB0 {TAB0 = 0x0,TAB1 = 0x400,TAB2 = 0x800,};
enum MACRO_TAB3 {TAB3 = 0x4,};
enum MACRO_TASK {TASK_INFO_MAX = 1024,TASK_BASIC_INFO_32 = 4,TASK_BASIC2_INFO_32 = 6,TASK_EVENTS_INFO = 2,TASK_THREAD_TIMES_INFO = 3,TASK_ABSOLUTETIME_INFO = 1,TASK_KERNELMEMORY_INFO = 7,TASK_SECURITY_TOKEN = 13,TASK_AUDIT_TOKEN = 15,TASK_AFFINITY_TAG_INFO = 16,TASK_DYLD_INFO = 17,TASK_DYLD_ALL_IMAGE_INFO_32 = 0,TASK_DYLD_ALL_IMAGE_INFO_64 = 1,TASK_BASIC_INFO_64_2 = 18,TASK_EXTMOD_INFO = 19,};
enum MACRO_TCP6 {TCP6_MSS = 1024,};
enum MACRO_TCPT {TCPT_NTIMERS_EXT = 4,TCPT_REXMT = 0,TCPT_PERSIST = 1,TCPT_KEEP = 2,TCPT_2MSL = 3,TCPT_DELACK = 4,TCPT_MAX = 4,};
enum MACRO_TIME {TIME_MICROS_MAX = 1000000,};
enum MACRO_TOOL {TOOL_CLANG = 1,TOOL_SWIFT = 2,TOOL_LD = 3,};
enum MACRO_TRAP {TRAP_BRKPT = 1,TRAP_TRACE = 2,};
enum MACRO_TTCP {TTCP_CLIENT_SND_WND = 4096,};
enum MACRO_TYPE {TYPE_EXTENDED = 0,TYPE_LONGDOUBLE_IS_DOUBLE = 0,TYPE_LONGLONG = 1,};
enum MACRO_UCLN {UCLN_NO_AUTO_CLEANUP = 1,};
enum MACRO_UCOL {UCOL_RUNTIME_VERSION = 9,UCOL_BUILDER_VERSION = 9,UCOL_TAILORINGS_VERSION = 1,};
enum MACRO_UINT {UINT_MAX = 0xFFFFFFFF,INT_MAX = 0x7FFFFFFF,};
enum MACRO_USER {USER_ADDR_NULL = 0,};
enum MACRO_UTF8 {UTF8_ERROR_VALUE_1 = 0x15,UTF8_ERROR_VALUE_2 = 0x9F,};
enum MACRO_U_PF {U_PF_UNKNOWN = 0,U_PF_WINDOWS = 1000,U_PF_MINGW = 1800,U_PF_CYGWIN = 1900,U_PF_HPUX = 2100,U_PF_SOLARIS = 2600,U_PF_BSD = 3000,U_PF_AIX = 3100,U_PF_IRIX = 3200,U_PF_DARWIN = 3500,U_PF_IPHONE = 3550,U_PF_QNX = 3700,U_PF_LINUX = 4000,U_PF_BROWSER_NATIVE_CLIENT = 4020,U_PF_ANDROID = 4050,U_PF_FUCHSIA = 4100,U_PF_EMSCRIPTEN = 5010,U_PF_OS390 = 9000,U_PF_OS400 = 9400,U_PLATFORM_USES_ONLY_WIN32_API = 0,U_PLATFORM_HAS_WIN32_API = 0,U_PLATFORM_HAS_WINUWP_API = 0,U_PLATFORM_IMPLEMENTS_POSIX = 1,U_PLATFORM_IS_LINUX_BASED = 0,U_PLATFORM_IS_DARWIN_BASED = 1,U_HAVE_STDINT_H = 1,U_HAVE_PLACEMENT_NEW = 1,U_HAVE_DEBUG_LOCATION_NEW = 0,U_CPLUSPLUS_VERSION = 14,U_ASCII_FAMILY = 0,U_EBCDIC_FAMILY = 1,U_CHARSET_IS_UTF8 = 1,U_HAVE_WCHAR_H = 1,U_SIZEOF_WCHAR_T = 4,U_HAVE_CHAR16_T = 1,U_SIZEOF_UCHAR = 2,U_CHAR16_IS_TYPEDEF = 0,U_SENTINEL = -1,U_COPYRIGHT_STRING_LENGTH = 128,U_MAX_VERSION_LENGTH = 4,U_VERSION_DELIMITER = 46,U_MAX_VERSION_STRING_LENGTH = 20,U_USING_ICU_NAMESPACE = 0,};
enum MACRO_VEOF {VEOF = 0,VEOL = 1,VEOL2 = 2,};
enum MACRO_WAIT {WAIT_ANY = -1,WAIT_MYPGRP = 0,};
enum MACRO_WRDE {WRDE_APPEND = 0x1,WRDE_DOOFFS = 0x2,WRDE_NOCMD = 0x4,WRDE_REUSE = 0x8,WRDE_SHOWERR = 0x10,WRDE_UNDEF = 0x20,WRDE_BADCHAR = 0x1,WRDE_BADVAL = 0x2,WRDE_CMDSUB = 0x3,WRDE_NOSPACE = 0x4,WRDE_NOSYS = 0x5,WRDE_SYNTAX = 0x6,};
enum MACRO_ZLIB {ZLIB_VERNUM = 0x12B0,ZLIB_VER_MAJOR = 0x1,ZLIB_VER_MINOR = 0x2,ZLIB_VER_REVISION = 0xB,ZLIB_VER_SUBREVISION = 0x0,};
enum MACRO__AXR {_AXR_APPLE_INTERNAL_API_NUMBER = 3,};
enum MACRO__DNS {_DNS_SD_LIBDISPATCH = 1,};
enum MACRO__SYS {_SYS_NAMELEN = 256,};
enum MACRO__USE {_USE_FORTIFY_LEVEL = 2,};
enum MACRO__UTX {_UTX_USERSIZE = 256,_UTX_LINESIZE = 32,_UTX_IDSIZE = 4,_UTX_HOSTSIZE = 256,};
enum MACRO__VIS {_VIS_END = 0x1000,};
enum MACRO___OS {__OS_WORKGROUP_ATTR_SIZE__ = 60,__OS_WORKGROUP_INTERVAL_DATA_SIZE__ = 56,__OS_WORKGROUP_JOIN_TOKEN_SIZE__ = 36,};
enum MACRO___VM {__VM_LEDGER_ACCOUNTING_POSTMARK = 2019032600,};
enum MACRO_code {code_emask = 0x3FFF,};
enum MACRO_mach {mach_host_MSG_COUNT = 35,};
enum MACRO_vDSP {vDSP_Version0 = 760,vDSP_Version1 = 0,};
struct MKMapPoint {double x;double y;};
enum MTLWinding {MTLWindingClockwise = 0x0,MTLWindingCounterClockwise = 0x1,};
typedef OpaqueMusicTrack *MusicTrack;
enum NEVPNError {NEVPNErrorConfigurationInvalid = 0x1,NEVPNErrorConfigurationDisabled = 0x2,NEVPNErrorConnectionFailed = 0x3,NEVPNErrorConfigurationStale = 0x4,NEVPNErrorConfigurationReadWriteFailed = 0x5,NEVPNErrorConfigurationUnknown = 0x6,};
enum NFCTagType {NFCTagTypeISO15693 = 0x1,NFCTagTypeFeliCa = 0x2,NFCTagTypeISO7816Compatible = 0x3,NFCTagTypeMiFare = 0x4,};
enum NFCVASMode {NFCVASModeURLOnly = 0x0,NFCVASModeNormal = 0x1,VASModeURLOnly = 0x0,VASModeNormal = 0x1,};
typedef double NLDistance;
typedef unsigned long long NSUInteger;
enum PKPassType {PKPassTypeBarcode = 0x0,PKPassTypeSecureElement = 0x1,PKPassTypePayment = 0x1,PKPassTypeAny = 0xFFFFFFFFFFFFFFFF,};
typedef float Pixel_FFFF[4];
struct SCNMatrix4 {float m11;float m12;float m13;float m14;float m21;float m22;float m23;float m24;float m31;float m32;float m33;float m34;float m41;float m42;float m43;float m44;};
struct SCNVector3 {float x;float y;float z;};
struct SCNVector4 {float x;float y;float z;float w;};
struct SSLContext;
typedef short ShortFixed;
typedef unsigned char Str32Field[34];
typedef _stringlist StringList;
enum UBlockCode {UBLOCK_NO_BLOCK = 0x0,UBLOCK_BASIC_LATIN = 0x1,UBLOCK_LATIN_1_SUPPLEMENT = 0x2,UBLOCK_LATIN_EXTENDED_A = 0x3,UBLOCK_LATIN_EXTENDED_B = 0x4,UBLOCK_IPA_EXTENSIONS = 0x5,UBLOCK_SPACING_MODIFIER_LETTERS = 0x6,UBLOCK_COMBINING_DIACRITICAL_MARKS = 0x7,UBLOCK_GREEK = 0x8,UBLOCK_CYRILLIC = 0x9,UBLOCK_ARMENIAN = 0xA,UBLOCK_HEBREW = 0xB,UBLOCK_ARABIC = 0xC,UBLOCK_SYRIAC = 0xD,UBLOCK_THAANA = 0xE,UBLOCK_DEVANAGARI = 0xF,UBLOCK_BENGALI = 0x10,UBLOCK_GURMUKHI = 0x11,UBLOCK_GUJARATI = 0x12,UBLOCK_ORIYA = 0x13,UBLOCK_TAMIL = 0x14,UBLOCK_TELUGU = 0x15,UBLOCK_KANNADA = 0x16,UBLOCK_MALAYALAM = 0x17,UBLOCK_SINHALA = 0x18,UBLOCK_THAI = 0x19,UBLOCK_LAO = 0x1A,UBLOCK_TIBETAN = 0x1B,UBLOCK_MYANMAR = 0x1C,UBLOCK_GEORGIAN = 0x1D,UBLOCK_HANGUL_JAMO = 0x1E,UBLOCK_ETHIOPIC = 0x1F,UBLOCK_CHEROKEE = 0x20,UBLOCK_UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS = 0x21,UBLOCK_OGHAM = 0x22,UBLOCK_RUNIC = 0x23,UBLOCK_KHMER = 0x24,UBLOCK_MONGOLIAN = 0x25,UBLOCK_LATIN_EXTENDED_ADDITIONAL = 0x26,UBLOCK_GREEK_EXTENDED = 0x27,UBLOCK_GENERAL_PUNCTUATION = 0x28,UBLOCK_SUPERSCRIPTS_AND_SUBSCRIPTS = 0x29,UBLOCK_CURRENCY_SYMBOLS = 0x2A,UBLOCK_COMBINING_MARKS_FOR_SYMBOLS = 0x2B,UBLOCK_LETTERLIKE_SYMBOLS = 0x2C,UBLOCK_NUMBER_FORMS = 0x2D,UBLOCK_ARROWS = 0x2E,UBLOCK_MATHEMATICAL_OPERATORS = 0x2F,UBLOCK_MISCELLANEOUS_TECHNICAL = 0x30,UBLOCK_CONTROL_PICTURES = 0x31,UBLOCK_OPTICAL_CHARACTER_RECOGNITION = 0x32,UBLOCK_ENCLOSED_ALPHANUMERICS = 0x33,UBLOCK_BOX_DRAWING = 0x34,UBLOCK_BLOCK_ELEMENTS = 0x35,UBLOCK_GEOMETRIC_SHAPES = 0x36,UBLOCK_MISCELLANEOUS_SYMBOLS = 0x37,UBLOCK_DINGBATS = 0x38,UBLOCK_BRAILLE_PATTERNS = 0x39,UBLOCK_CJK_RADICALS_SUPPLEMENT = 0x3A,UBLOCK_KANGXI_RADICALS = 0x3B,UBLOCK_IDEOGRAPHIC_DESCRIPTION_CHARACTERS = 0x3C,UBLOCK_CJK_SYMBOLS_AND_PUNCTUATION = 0x3D,UBLOCK_HIRAGANA = 0x3E,UBLOCK_KATAKANA = 0x3F,UBLOCK_BOPOMOFO = 0x40,UBLOCK_HANGUL_COMPATIBILITY_JAMO = 0x41,UBLOCK_KANBUN = 0x42,UBLOCK_BOPOMOFO_EXTENDED = 0x43,UBLOCK_ENCLOSED_CJK_LETTERS_AND_MONTHS = 0x44,UBLOCK_CJK_COMPATIBILITY = 0x45,UBLOCK_CJK_UNIFIED_IDEOGRAPHS_EXTENSION_A = 0x46,UBLOCK_CJK_UNIFIED_IDEOGRAPHS = 0x47,UBLOCK_YI_SYLLABLES = 0x48,UBLOCK_YI_RADICALS = 0x49,UBLOCK_HANGUL_SYLLABLES = 0x4A,UBLOCK_HIGH_SURROGATES = 0x4B,UBLOCK_HIGH_PRIVATE_USE_SURROGATES = 0x4C,UBLOCK_LOW_SURROGATES = 0x4D,UBLOCK_PRIVATE_USE_AREA = 0x4E,UBLOCK_PRIVATE_USE = 0x4E,UBLOCK_CJK_COMPATIBILITY_IDEOGRAPHS = 0x4F,UBLOCK_ALPHABETIC_PRESENTATION_FORMS = 0x50,UBLOCK_ARABIC_PRESENTATION_FORMS_A = 0x51,UBLOCK_COMBINING_HALF_MARKS = 0x52,UBLOCK_CJK_COMPATIBILITY_FORMS = 0x53,UBLOCK_SMALL_FORM_VARIANTS = 0x54,UBLOCK_ARABIC_PRESENTATION_FORMS_B = 0x55,UBLOCK_SPECIALS = 0x56,UBLOCK_HALFWIDTH_AND_FULLWIDTH_FORMS = 0x57,UBLOCK_OLD_ITALIC = 0x58,UBLOCK_GOTHIC = 0x59,UBLOCK_DESERET = 0x5A,UBLOCK_BYZANTINE_MUSICAL_SYMBOLS = 0x5B,UBLOCK_MUSICAL_SYMBOLS = 0x5C,UBLOCK_MATHEMATICAL_ALPHANUMERIC_SYMBOLS = 0x5D,UBLOCK_CJK_UNIFIED_IDEOGRAPHS_EXTENSION_B = 0x5E,UBLOCK_CJK_COMPATIBILITY_IDEOGRAPHS_SUPPLEMENT = 0x5F,UBLOCK_TAGS = 0x60,UBLOCK_CYRILLIC_SUPPLEMENT = 0x61,UBLOCK_CYRILLIC_SUPPLEMENTARY = 0x61,UBLOCK_TAGALOG = 0x62,UBLOCK_HANUNOO = 0x63,UBLOCK_BUHID = 0x64,UBLOCK_TAGBANWA = 0x65,UBLOCK_MISCELLANEOUS_MATHEMATICAL_SYMBOLS_A = 0x66,UBLOCK_SUPPLEMENTAL_ARROWS_A = 0x67,UBLOCK_SUPPLEMENTAL_ARROWS_B = 0x68,UBLOCK_MISCELLANEOUS_MATHEMATICAL_SYMBOLS_B = 0x69,UBLOCK_SUPPLEMENTAL_MATHEMATICAL_OPERATORS = 0x6A,UBLOCK_KATAKANA_PHONETIC_EXTENSIONS = 0x6B,UBLOCK_VARIATION_SELECTORS = 0x6C,UBLOCK_SUPPLEMENTARY_PRIVATE_USE_AREA_A = 0x6D,UBLOCK_SUPPLEMENTARY_PRIVATE_USE_AREA_B = 0x6E,UBLOCK_LIMBU = 0x6F,UBLOCK_TAI_LE = 0x70,UBLOCK_KHMER_SYMBOLS = 0x71,UBLOCK_PHONETIC_EXTENSIONS = 0x72,UBLOCK_MISCELLANEOUS_SYMBOLS_AND_ARROWS = 0x73,UBLOCK_YIJING_HEXAGRAM_SYMBOLS = 0x74,UBLOCK_LINEAR_B_SYLLABARY = 0x75,UBLOCK_LINEAR_B_IDEOGRAMS = 0x76,UBLOCK_AEGEAN_NUMBERS = 0x77,UBLOCK_UGARITIC = 0x78,UBLOCK_SHAVIAN = 0x79,UBLOCK_OSMANYA = 0x7A,UBLOCK_CYPRIOT_SYLLABARY = 0x7B,UBLOCK_TAI_XUAN_JING_SYMBOLS = 0x7C,UBLOCK_VARIATION_SELECTORS_SUPPLEMENT = 0x7D,UBLOCK_ANCIENT_GREEK_MUSICAL_NOTATION = 0x7E,UBLOCK_ANCIENT_GREEK_NUMBERS = 0x7F,UBLOCK_ARABIC_SUPPLEMENT = 0x80,UBLOCK_BUGINESE = 0x81,UBLOCK_CJK_STROKES = 0x82,UBLOCK_COMBINING_DIACRITICAL_MARKS_SUPPLEMENT = 0x83,UBLOCK_COPTIC = 0x84,UBLOCK_ETHIOPIC_EXTENDED = 0x85,UBLOCK_ETHIOPIC_SUPPLEMENT = 0x86,UBLOCK_GEORGIAN_SUPPLEMENT = 0x87,UBLOCK_GLAGOLITIC = 0x88,UBLOCK_KHAROSHTHI = 0x89,UBLOCK_MODIFIER_TONE_LETTERS = 0x8A,UBLOCK_NEW_TAI_LUE = 0x8B,UBLOCK_OLD_PERSIAN = 0x8C,UBLOCK_PHONETIC_EXTENSIONS_SUPPLEMENT = 0x8D,UBLOCK_SUPPLEMENTAL_PUNCTUATION = 0x8E,UBLOCK_SYLOTI_NAGRI = 0x8F,UBLOCK_TIFINAGH = 0x90,UBLOCK_VERTICAL_FORMS = 0x91,UBLOCK_NKO = 0x92,UBLOCK_BALINESE = 0x93,UBLOCK_LATIN_EXTENDED_C = 0x94,UBLOCK_LATIN_EXTENDED_D = 0x95,UBLOCK_PHAGS_PA = 0x96,UBLOCK_PHOENICIAN = 0x97,UBLOCK_CUNEIFORM = 0x98,UBLOCK_CUNEIFORM_NUMBERS_AND_PUNCTUATION = 0x99,UBLOCK_COUNTING_ROD_NUMERALS = 0x9A,UBLOCK_SUNDANESE = 0x9B,UBLOCK_LEPCHA = 0x9C,UBLOCK_OL_CHIKI = 0x9D,UBLOCK_CYRILLIC_EXTENDED_A = 0x9E,UBLOCK_VAI = 0x9F,UBLOCK_CYRILLIC_EXTENDED_B = 0xA0,UBLOCK_SAURASHTRA = 0xA1,UBLOCK_KAYAH_LI = 0xA2,UBLOCK_REJANG = 0xA3,UBLOCK_CHAM = 0xA4,UBLOCK_ANCIENT_SYMBOLS = 0xA5,UBLOCK_PHAISTOS_DISC = 0xA6,UBLOCK_LYCIAN = 0xA7,UBLOCK_CARIAN = 0xA8,UBLOCK_LYDIAN = 0xA9,UBLOCK_MAHJONG_TILES = 0xAA,UBLOCK_DOMINO_TILES = 0xAB,UBLOCK_SAMARITAN = 0xAC,UBLOCK_UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS_EXTENDED = 0xAD,UBLOCK_TAI_THAM = 0xAE,UBLOCK_VEDIC_EXTENSIONS = 0xAF,UBLOCK_LISU = 0xB0,UBLOCK_BAMUM = 0xB1,UBLOCK_COMMON_INDIC_NUMBER_FORMS = 0xB2,UBLOCK_DEVANAGARI_EXTENDED = 0xB3,UBLOCK_HANGUL_JAMO_EXTENDED_A = 0xB4,UBLOCK_JAVANESE = 0xB5,UBLOCK_MYANMAR_EXTENDED_A = 0xB6,UBLOCK_TAI_VIET = 0xB7,UBLOCK_MEETEI_MAYEK = 0xB8,UBLOCK_HANGUL_JAMO_EXTENDED_B = 0xB9,UBLOCK_IMPERIAL_ARAMAIC = 0xBA,UBLOCK_OLD_SOUTH_ARABIAN = 0xBB,UBLOCK_AVESTAN = 0xBC,UBLOCK_INSCRIPTIONAL_PARTHIAN = 0xBD,UBLOCK_INSCRIPTIONAL_PAHLAVI = 0xBE,UBLOCK_OLD_TURKIC = 0xBF,UBLOCK_RUMI_NUMERAL_SYMBOLS = 0xC0,UBLOCK_KAITHI = 0xC1,UBLOCK_EGYPTIAN_HIEROGLYPHS = 0xC2,UBLOCK_ENCLOSED_ALPHANUMERIC_SUPPLEMENT = 0xC3,UBLOCK_ENCLOSED_IDEOGRAPHIC_SUPPLEMENT = 0xC4,UBLOCK_CJK_UNIFIED_IDEOGRAPHS_EXTENSION_C = 0xC5,UBLOCK_MANDAIC = 0xC6,UBLOCK_BATAK = 0xC7,UBLOCK_ETHIOPIC_EXTENDED_A = 0xC8,UBLOCK_BRAHMI = 0xC9,UBLOCK_BAMUM_SUPPLEMENT = 0xCA,UBLOCK_KANA_SUPPLEMENT = 0xCB,UBLOCK_PLAYING_CARDS = 0xCC,UBLOCK_MISCELLANEOUS_SYMBOLS_AND_PICTOGRAPHS = 0xCD,UBLOCK_EMOTICONS = 0xCE,UBLOCK_TRANSPORT_AND_MAP_SYMBOLS = 0xCF,UBLOCK_ALCHEMICAL_SYMBOLS = 0xD0,UBLOCK_CJK_UNIFIED_IDEOGRAPHS_EXTENSION_D = 0xD1,UBLOCK_ARABIC_EXTENDED_A = 0xD2,UBLOCK_ARABIC_MATHEMATICAL_ALPHABETIC_SYMBOLS = 0xD3,UBLOCK_CHAKMA = 0xD4,UBLOCK_MEETEI_MAYEK_EXTENSIONS = 0xD5,UBLOCK_MEROITIC_CURSIVE = 0xD6,UBLOCK_MEROITIC_HIEROGLYPHS = 0xD7,UBLOCK_MIAO = 0xD8,UBLOCK_SHARADA = 0xD9,UBLOCK_SORA_SOMPENG = 0xDA,UBLOCK_SUNDANESE_SUPPLEMENT = 0xDB,UBLOCK_TAKRI = 0xDC,UBLOCK_BASSA_VAH = 0xDD,UBLOCK_CAUCASIAN_ALBANIAN = 0xDE,UBLOCK_COPTIC_EPACT_NUMBERS = 0xDF,UBLOCK_COMBINING_DIACRITICAL_MARKS_EXTENDED = 0xE0,UBLOCK_DUPLOYAN = 0xE1,UBLOCK_ELBASAN = 0xE2,UBLOCK_GEOMETRIC_SHAPES_EXTENDED = 0xE3,UBLOCK_GRANTHA = 0xE4,UBLOCK_KHOJKI = 0xE5,UBLOCK_KHUDAWADI = 0xE6,UBLOCK_LATIN_EXTENDED_E = 0xE7,UBLOCK_LINEAR_A = 0xE8,UBLOCK_MAHAJANI = 0xE9,UBLOCK_MANICHAEAN = 0xEA,UBLOCK_MENDE_KIKAKUI = 0xEB,UBLOCK_MODI = 0xEC,UBLOCK_MRO = 0xED,UBLOCK_MYANMAR_EXTENDED_B = 0xEE,UBLOCK_NABATAEAN = 0xEF,UBLOCK_OLD_NORTH_ARABIAN = 0xF0,UBLOCK_OLD_PERMIC = 0xF1,UBLOCK_ORNAMENTAL_DINGBATS = 0xF2,UBLOCK_PAHAWH_HMONG = 0xF3,UBLOCK_PALMYRENE = 0xF4,UBLOCK_PAU_CIN_HAU = 0xF5,UBLOCK_PSALTER_PAHLAVI = 0xF6,UBLOCK_SHORTHAND_FORMAT_CONTROLS = 0xF7,UBLOCK_SIDDHAM = 0xF8,UBLOCK_SINHALA_ARCHAIC_NUMBERS = 0xF9,UBLOCK_SUPPLEMENTAL_ARROWS_C = 0xFA,UBLOCK_TIRHUTA = 0xFB,UBLOCK_WARANG_CITI = 0xFC,UBLOCK_AHOM = 0xFD,UBLOCK_ANATOLIAN_HIEROGLYPHS = 0xFE,UBLOCK_CHEROKEE_SUPPLEMENT = 0xFF,UBLOCK_CJK_UNIFIED_IDEOGRAPHS_EXTENSION_E = 0x100,UBLOCK_EARLY_DYNASTIC_CUNEIFORM = 0x101,UBLOCK_HATRAN = 0x102,UBLOCK_MULTANI = 0x103,UBLOCK_OLD_HUNGARIAN = 0x104,UBLOCK_SUPPLEMENTAL_SYMBOLS_AND_PICTOGRAPHS = 0x105,UBLOCK_SUTTON_SIGNWRITING = 0x106,UBLOCK_ADLAM = 0x107,UBLOCK_BHAIKSUKI = 0x108,UBLOCK_CYRILLIC_EXTENDED_C = 0x109,UBLOCK_GLAGOLITIC_SUPPLEMENT = 0x10A,UBLOCK_IDEOGRAPHIC_SYMBOLS_AND_PUNCTUATION = 0x10B,UBLOCK_MARCHEN = 0x10C,UBLOCK_MONGOLIAN_SUPPLEMENT = 0x10D,UBLOCK_NEWA = 0x10E,UBLOCK_OSAGE = 0x10F,UBLOCK_TANGUT = 0x110,UBLOCK_TANGUT_COMPONENTS = 0x111,UBLOCK_CJK_UNIFIED_IDEOGRAPHS_EXTENSION_F = 0x112,UBLOCK_KANA_EXTENDED_A = 0x113,UBLOCK_MASARAM_GONDI = 0x114,UBLOCK_NUSHU = 0x115,UBLOCK_SOYOMBO = 0x116,UBLOCK_SYRIAC_SUPPLEMENT = 0x117,UBLOCK_ZANABAZAR_SQUARE = 0x118,UBLOCK_CHESS_SYMBOLS = 0x119,UBLOCK_DOGRA = 0x11A,UBLOCK_GEORGIAN_EXTENDED = 0x11B,UBLOCK_GUNJALA_GONDI = 0x11C,UBLOCK_HANIFI_ROHINGYA = 0x11D,UBLOCK_INDIC_SIYAQ_NUMBERS = 0x11E,UBLOCK_MAKASAR = 0x11F,UBLOCK_MAYAN_NUMERALS = 0x120,UBLOCK_MEDEFAIDRIN = 0x121,UBLOCK_OLD_SOGDIAN = 0x122,UBLOCK_SOGDIAN = 0x123,UBLOCK_EGYPTIAN_HIEROGLYPH_FORMAT_CONTROLS = 0x124,UBLOCK_ELYMAIC = 0x125,UBLOCK_NANDINAGARI = 0x126,UBLOCK_NYIAKENG_PUACHUE_HMONG = 0x127,UBLOCK_OTTOMAN_SIYAQ_NUMBERS = 0x128,UBLOCK_SMALL_KANA_EXTENSION = 0x129,UBLOCK_SYMBOLS_AND_PICTOGRAPHS_EXTENDED_A = 0x12A,UBLOCK_TAMIL_SUPPLEMENT = 0x12B,UBLOCK_WANCHO = 0x12C,UBLOCK_CHORASMIAN = 0x12D,UBLOCK_CJK_UNIFIED_IDEOGRAPHS_EXTENSION_G = 0x12E,UBLOCK_DIVES_AKURU = 0x12F,UBLOCK_KHITAN_SMALL_SCRIPT = 0x130,UBLOCK_LISU_SUPPLEMENT = 0x131,UBLOCK_SYMBOLS_FOR_LEGACY_COMPUTING = 0x132,UBLOCK_TANGUT_SUPPLEMENT = 0x133,UBLOCK_YEZIDI = 0x134,UBLOCK_COUNT = 0x135,UBLOCK_INVALID_CODE = 0xFFFFFFFF,};
struct UConverter;
enum UErrorCode {U_USING_FALLBACK_WARNING = 0xFFFFFF80,U_ERROR_WARNING_START = 0xFFFFFF80,U_USING_DEFAULT_WARNING = 0xFFFFFF81,U_SAFECLONE_ALLOCATED_WARNING = 0xFFFFFF82,U_STATE_OLD_WARNING = 0xFFFFFF83,U_STRING_NOT_TERMINATED_WARNING = 0xFFFFFF84,U_SORT_KEY_TOO_SHORT_WARNING = 0xFFFFFF85,U_AMBIGUOUS_ALIAS_WARNING = 0xFFFFFF86,U_DIFFERENT_UCA_VERSION = 0xFFFFFF87,U_PLUGIN_CHANGED_LEVEL_WARNING = 0xFFFFFF88,U_ERROR_WARNING_LIMIT = 0xFFFFFF89,U_ZERO_ERROR = 0x0,U_ILLEGAL_ARGUMENT_ERROR = 0x1,U_MISSING_RESOURCE_ERROR = 0x2,U_INVALID_FORMAT_ERROR = 0x3,U_FILE_ACCESS_ERROR = 0x4,U_INTERNAL_PROGRAM_ERROR = 0x5,U_MESSAGE_PARSE_ERROR = 0x6,U_MEMORY_ALLOCATION_ERROR = 0x7,U_INDEX_OUTOFBOUNDS_ERROR = 0x8,U_PARSE_ERROR = 0x9,U_INVALID_CHAR_FOUND = 0xA,U_TRUNCATED_CHAR_FOUND = 0xB,U_ILLEGAL_CHAR_FOUND = 0xC,U_INVALID_TABLE_FORMAT = 0xD,U_INVALID_TABLE_FILE = 0xE,U_BUFFER_OVERFLOW_ERROR = 0xF,U_UNSUPPORTED_ERROR = 0x10,U_RESOURCE_TYPE_MISMATCH = 0x11,U_ILLEGAL_ESCAPE_SEQUENCE = 0x12,U_UNSUPPORTED_ESCAPE_SEQUENCE = 0x13,U_NO_SPACE_AVAILABLE = 0x14,U_CE_NOT_FOUND_ERROR = 0x15,U_PRIMARY_TOO_LONG_ERROR = 0x16,U_STATE_TOO_OLD_ERROR = 0x17,U_TOO_MANY_ALIASES_ERROR = 0x18,U_ENUM_OUT_OF_SYNC_ERROR = 0x19,U_INVARIANT_CONVERSION_ERROR = 0x1A,U_INVALID_STATE_ERROR = 0x1B,U_COLLATOR_VERSION_MISMATCH = 0x1C,U_USELESS_COLLATOR_ERROR = 0x1D,U_NO_WRITE_PERMISSION = 0x1E,U_STANDARD_ERROR_LIMIT = 0x1F,U_BAD_VARIABLE_DEFINITION = 0x10000,U_PARSE_ERROR_START = 0x10000,U_MALFORMED_RULE = 0x10001,U_MALFORMED_SET = 0x10002,U_MALFORMED_SYMBOL_REFERENCE = 0x10003,U_MALFORMED_UNICODE_ESCAPE = 0x10004,U_MALFORMED_VARIABLE_DEFINITION = 0x10005,U_MALFORMED_VARIABLE_REFERENCE = 0x10006,U_MISMATCHED_SEGMENT_DELIMITERS = 0x10007,U_MISPLACED_ANCHOR_START = 0x10008,U_MISPLACED_CURSOR_OFFSET = 0x10009,U_MISPLACED_QUANTIFIER = 0x1000A,U_MISSING_OPERATOR = 0x1000B,U_MISSING_SEGMENT_CLOSE = 0x1000C,U_MULTIPLE_ANTE_CONTEXTS = 0x1000D,U_MULTIPLE_CURSORS = 0x1000E,U_MULTIPLE_POST_CONTEXTS = 0x1000F,U_TRAILING_BACKSLASH = 0x10010,U_UNDEFINED_SEGMENT_REFERENCE = 0x10011,U_UNDEFINED_VARIABLE = 0x10012,U_UNQUOTED_SPECIAL = 0x10013,U_UNTERMINATED_QUOTE = 0x10014,U_RULE_MASK_ERROR = 0x10015,U_MISPLACED_COMPOUND_FILTER = 0x10016,U_MULTIPLE_COMPOUND_FILTERS = 0x10017,U_INVALID_RBT_SYNTAX = 0x10018,U_INVALID_PROPERTY_PATTERN = 0x10019,U_MALFORMED_PRAGMA = 0x1001A,U_UNCLOSED_SEGMENT = 0x1001B,U_ILLEGAL_CHAR_IN_SEGMENT = 0x1001C,U_VARIABLE_RANGE_EXHAUSTED = 0x1001D,U_VARIABLE_RANGE_OVERLAP = 0x1001E,U_ILLEGAL_CHARACTER = 0x1001F,U_INTERNAL_TRANSLITERATOR_ERROR = 0x10020,U_INVALID_ID = 0x10021,U_INVALID_FUNCTION = 0x10022,U_PARSE_ERROR_LIMIT = 0x10023,U_UNEXPECTED_TOKEN = 0x10100,U_FMT_PARSE_ERROR_START = 0x10100,U_MULTIPLE_DECIMAL_SEPARATORS = 0x10101,U_MULTIPLE_DECIMAL_SEPERATORS = 0x10101,U_MULTIPLE_EXPONENTIAL_SYMBOLS = 0x10102,U_MALFORMED_EXPONENTIAL_PATTERN = 0x10103,U_MULTIPLE_PERCENT_SYMBOLS = 0x10104,U_MULTIPLE_PERMILL_SYMBOLS = 0x10105,U_MULTIPLE_PAD_SPECIFIERS = 0x10106,U_PATTERN_SYNTAX_ERROR = 0x10107,U_ILLEGAL_PAD_POSITION = 0x10108,U_UNMATCHED_BRACES = 0x10109,U_UNSUPPORTED_PROPERTY = 0x1010A,U_UNSUPPORTED_ATTRIBUTE = 0x1010B,U_ARGUMENT_TYPE_MISMATCH = 0x1010C,U_DUPLICATE_KEYWORD = 0x1010D,U_UNDEFINED_KEYWORD = 0x1010E,U_DEFAULT_KEYWORD_MISSING = 0x1010F,U_DECIMAL_NUMBER_SYNTAX_ERROR = 0x10110,U_FORMAT_INEXACT_ERROR = 0x10111,U_NUMBER_ARG_OUTOFBOUNDS_ERROR = 0x10112,U_NUMBER_SKELETON_SYNTAX_ERROR = 0x10113,U_FMT_PARSE_ERROR_LIMIT = 0x10114,U_BRK_INTERNAL_ERROR = 0x10200,U_BRK_ERROR_START = 0x10200,U_BRK_HEX_DIGITS_EXPECTED = 0x10201,U_BRK_SEMICOLON_EXPECTED = 0x10202,U_BRK_RULE_SYNTAX = 0x10203,U_BRK_UNCLOSED_SET = 0x10204,U_BRK_ASSIGN_ERROR = 0x10205,U_BRK_VARIABLE_REDFINITION = 0x10206,U_BRK_MISMATCHED_PAREN = 0x10207,U_BRK_NEW_LINE_IN_QUOTED_STRING = 0x10208,U_BRK_UNDEFINED_VARIABLE = 0x10209,U_BRK_INIT_ERROR = 0x1020A,U_BRK_RULE_EMPTY_SET = 0x1020B,U_BRK_UNRECOGNIZED_OPTION = 0x1020C,U_BRK_MALFORMED_RULE_TAG = 0x1020D,U_BRK_ERROR_LIMIT = 0x1020E,U_REGEX_INTERNAL_ERROR = 0x10300,U_REGEX_ERROR_START = 0x10300,U_REGEX_RULE_SYNTAX = 0x10301,U_REGEX_INVALID_STATE = 0x10302,U_REGEX_BAD_ESCAPE_SEQUENCE = 0x10303,U_REGEX_PROPERTY_SYNTAX = 0x10304,U_REGEX_UNIMPLEMENTED = 0x10305,U_REGEX_MISMATCHED_PAREN = 0x10306,U_REGEX_NUMBER_TOO_BIG = 0x10307,U_REGEX_BAD_INTERVAL = 0x10308,U_REGEX_MAX_LT_MIN = 0x10309,U_REGEX_INVALID_BACK_REF = 0x1030A,U_REGEX_INVALID_FLAG = 0x1030B,U_REGEX_LOOK_BEHIND_LIMIT = 0x1030C,U_REGEX_SET_CONTAINS_STRING = 0x1030D,U_REGEX_OCTAL_TOO_BIG = 0x1030E,U_REGEX_MISSING_CLOSE_BRACKET = 0x1030F,U_REGEX_INVALID_RANGE = 0x10310,U_REGEX_STACK_OVERFLOW = 0x10311,U_REGEX_TIME_OUT = 0x10312,U_REGEX_STOPPED_BY_CALLER = 0x10313,U_REGEX_PATTERN_TOO_BIG = 0x10314,U_REGEX_INVALID_CAPTURE_GROUP_NAME = 0x10315,U_REGEX_ERROR_LIMIT = 0x10316,U_IDNA_PROHIBITED_ERROR = 0x10400,U_IDNA_ERROR_START = 0x10400,U_IDNA_UNASSIGNED_ERROR = 0x10401,U_IDNA_CHECK_BIDI_ERROR = 0x10402,U_IDNA_STD3_ASCII_RULES_ERROR = 0x10403,U_IDNA_ACE_PREFIX_ERROR = 0x10404,U_IDNA_VERIFICATION_ERROR = 0x10405,U_IDNA_LABEL_TOO_LONG_ERROR = 0x10406,U_IDNA_ZERO_LENGTH_LABEL_ERROR = 0x10407,U_IDNA_DOMAIN_NAME_TOO_LONG_ERROR = 0x10408,U_IDNA_ERROR_LIMIT = 0x10409,U_STRINGPREP_PROHIBITED_ERROR = 0x10400,U_STRINGPREP_UNASSIGNED_ERROR = 0x10401,U_STRINGPREP_CHECK_BIDI_ERROR = 0x10402,U_PLUGIN_ERROR_START = 0x10500,U_PLUGIN_TOO_HIGH = 0x10500,U_PLUGIN_DIDNT_SET_LEVEL = 0x10501,U_PLUGIN_ERROR_LIMIT = 0x10502,U_ERROR_LIMIT = 0x10502,};
enum UIBarStyle {UIBarStyleDefault = 0x0,UIBarStyleBlack = 0x1,UIBarStyleBlackOpaque = 0x1,UIBarStyleBlackTranslucent = 0x2,};
enum ULineBreak {U_LB_UNKNOWN = 0x0,U_LB_AMBIGUOUS = 0x1,U_LB_ALPHABETIC = 0x2,U_LB_BREAK_BOTH = 0x3,U_LB_BREAK_AFTER = 0x4,U_LB_BREAK_BEFORE = 0x5,U_LB_MANDATORY_BREAK = 0x6,U_LB_CONTINGENT_BREAK = 0x7,U_LB_CLOSE_PUNCTUATION = 0x8,U_LB_COMBINING_MARK = 0x9,U_LB_CARRIAGE_RETURN = 0xA,U_LB_EXCLAMATION = 0xB,U_LB_GLUE = 0xC,U_LB_HYPHEN = 0xD,U_LB_IDEOGRAPHIC = 0xE,U_LB_INSEPARABLE = 0xF,U_LB_INSEPERABLE = 0xF,U_LB_INFIX_NUMERIC = 0x10,U_LB_LINE_FEED = 0x11,U_LB_NONSTARTER = 0x12,U_LB_NUMERIC = 0x13,U_LB_OPEN_PUNCTUATION = 0x14,U_LB_POSTFIX_NUMERIC = 0x15,U_LB_PREFIX_NUMERIC = 0x16,U_LB_QUOTATION = 0x17,U_LB_COMPLEX_CONTEXT = 0x18,U_LB_SURROGATE = 0x19,U_LB_SPACE = 0x1A,U_LB_BREAK_SYMBOLS = 0x1B,U_LB_ZWSPACE = 0x1C,U_LB_NEXT_LINE = 0x1D,U_LB_WORD_JOINER = 0x1E,U_LB_H2 = 0x1F,U_LB_H3 = 0x20,U_LB_JL = 0x21,U_LB_JT = 0x22,U_LB_JV = 0x23,U_LB_CLOSE_PARENTHESIS = 0x24,U_LB_CONDITIONAL_JAPANESE_STARTER = 0x25,U_LB_HEBREW_LETTER = 0x26,U_LB_REGIONAL_INDICATOR = 0x27,U_LB_E_BASE = 0x28,U_LB_E_MODIFIER = 0x29,U_LB_ZWJ = 0x2A,U_LB_COUNT = 0x2B,};
typedef void UTextClose(UText *);
typedef VersRec *VersRecPtr;
typedef XML_ParserStruct *XML_Parser;
enum XML_Status {XML_STATUS_ERROR = 0x0,XML_STATUS_OK = 0x1,XML_STATUS_SUSPENDED = 0x2,};
struct _CCCryptor;
struct _RuneRange {int __nranges;_RuneEntry *__ranges;};
struct __CFBundle;
struct __CFLocale;
struct __CFNumber;
struct __CFSocket;
struct __CFString {void *isa;long long info;char *data;long long length;};
struct __CVBuffer;
struct __NSModule;
struct __NSSymbol;
struct __SecTrust;
struct __nl_cat_d {void *__data;int __size;};
enum __ns_class {ns_c_invalid = 0x0,ns_c_in = 0x1,ns_c_2 = 0x2,ns_c_chaos = 0x3,ns_c_hs = 0x4,ns_c_none = 0xFE,ns_c_any = 0xFF,ns_c_max = 0x10000,};
enum __ns_rcode {ns_r_noerror = 0x0,ns_r_formerr = 0x1,ns_r_servfail = 0x2,ns_r_nxdomain = 0x3,ns_r_notimpl = 0x4,ns_r_refused = 0x5,ns_r_yxdomain = 0x6,ns_r_yxrrset = 0x7,ns_r_nxrrset = 0x8,ns_r_notauth = 0x9,ns_r_notzone = 0xA,ns_r_max = 0xB,ns_r_badvers = 0x10,ns_r_badsig = 0x10,ns_r_badkey = 0x11,ns_r_badtime = 0x12,};
typedef unsigned short __uint16_t;
typedef unsigned int __uint32_t;
typedef unsigned long long __uint64_t;
struct _acl_entry;
struct _xmlModule;
struct _xmlRMutex;
struct _xmlRegexp;
enum acl_flag_t {ACL_FLAG_DEFER_INHERIT = 0x1,ACL_FLAG_NO_INHERIT = 0x20000,ACL_ENTRY_INHERITED = 0x10,ACL_ENTRY_FILE_INHERIT = 0x20,ACL_ENTRY_DIRECTORY_INHERIT = 0x40,ACL_ENTRY_LIMIT_INHERIT = 0x80,ACL_ENTRY_ONLY_INHERIT = 0x100,};
enum acl_perm_t {ACL_READ_DATA = 0x2,ACL_LIST_DIRECTORY = 0x2,ACL_WRITE_DATA = 0x4,ACL_ADD_FILE = 0x4,ACL_EXECUTE = 0x8,ACL_SEARCH = 0x8,ACL_DELETE = 0x10,ACL_APPEND_DATA = 0x20,ACL_ADD_SUBDIRECTORY = 0x20,ACL_DELETE_CHILD = 0x40,ACL_READ_ATTRIBUTES = 0x80,ACL_WRITE_ATTRIBUTES = 0x100,ACL_READ_EXTATTRIBUTES = 0x200,ACL_WRITE_EXTATTRIBUTES = 0x400,ACL_READ_SECURITY = 0x800,ACL_WRITE_SECURITY = 0x1000,ACL_CHANGE_OWNER = 0x2000,ACL_SYNCHRONIZE = 0x100000,};
enum acl_type_t {ACL_TYPE_EXTENDED = 0x100,ACL_TYPE_ACCESS = 0x0,ACL_TYPE_DEFAULT = 0x1,ACL_TYPE_AFS = 0x2,ACL_TYPE_CODA = 0x3,ACL_TYPE_NTFS = 0x4,ACL_TYPE_NWFS = 0x5,};
enum at_alpha_t {at_alpha_not_premultiplied = 0x0,at_alpha_opaque = 0x1,at_alpha_premultiplied = 0x2,at_alpha_count = 0x3,};
enum at_error_t {at_error_success = 0x0,at_error_invalid_parameter = 0xFFFFFFFFFFFFFFFF,at_error_operation_unsupported = 0xFFFFFFFFFFFFFFFE,at_error_invalid_source_data = 0xFFFFFFFFFFFFFFFD,at_error_invalid_flag = 0xFFFFFFFFFFFFFFFC,at_error_hdr_block_format_required = 0xFFFFFFFFFFFFFFFB,};
enum at_flags_t {at_flags_default = 0x0,at_flags_skip_parameter_checking = 0x1,at_flags_print_debug_info = 0x2,at_flags_disable_multithreading = 0x4,at_flags_skip_error_calculation = 0x8,at_flags_flip_texel_region_vertically = 0x10,at_flags_srgb_linear_texels = 0x20,at_flags_weight_channels_equally = 0x40,};
typedef audit_fstat au_fstat_t;
typedef au_qctrl au_qctrl_t;
struct audit_stat {unsigned int as_version;unsigned int as_numevent;int as_generated;int as_nonattrib;int as_kernel;int as_audit;int as_auditctl;int as_enqueue;int as_written;int as_wblocked;int as_rblocked;int as_dropped;int as_totalsize;unsigned int as_memused;};
typedef NSObject *axr_data_t;
typedef NSObject *axr_part_t;
enum axr_type_t {axr_type_uint = 0x0,axr_type_half = 0x1,axr_type_float = 0x2,};
typedef int clock_id_t;
typedef char *domainname;
typedef Float80 extended80;
typedef Float96 extended96;
typedef fchecklv fchecklv_t;
enum fsh_access {fsa_NONE = 0x0,fsa_R = 0x1,fsa_W = 0x2,fsa_RW = 0x3,};
typedef fsobj_id fsobj_id_t;
enum gqr_status {Q_OK = 0x1,Q_NOQUOTA = 0x2,Q_EPERM = 0x3,};
typedef gss_name_t_desc_struct *gss_name_t;
enum htmlStatus {HTML_NA = 0x0,HTML_INVALID = 0x1,HTML_DEPRECATED = 0x2,HTML_VALID = 0x4,HTML_REQUIRED = 0xC,};
struct ifa_msghdr {unsigned short ifam_msglen;unsigned char ifam_version;unsigned char ifam_type;int ifam_addrs;int ifam_flags;unsigned short ifam_index;int ifam_metric;};
struct ifmediareq {char ifm_name[16];int ifm_current;int ifm_mask;int ifm_status;int ifm_active;int ifm_count;int *ifm_ulist;};
typedef in6_addr in6_addr_t;
typedef unsigned long long la_count_t;
typedef long long la_index_t;
typedef char *labelstr_t;
typedef __darwin_mcontext64 *mcontext_t;
struct mig_symtab {char *ms_routine_name;int ms_routine_number;void (*ms_routine)(void);};
enum nlm4_stats {nlm4_granted = 0x0,nlm4_denied = 0x1,nlm4_denied_nolocks = 0x2,nlm4_blocked = 0x3,nlm4_denied_grace_period = 0x4,nlm4_deadlck = 0x5,nlm4_rofs = 0x6,nlm4_stale_fh = 0x7,nlm4_fbig = 0x8,nlm4_failed = 0x9,};
typedef NSObject *nw_error_t;
typedef void *os_block_t;
union __attribute__((aligned(8))) poly16x4_t {char i8[8];short i16[4];int i32[2];unsigned char u8[8];unsigned short u16[4];unsigned int u32[2];};
union __attribute__((aligned(16))) poly16x8_t {char i8[16];short i16[8];int i32[4];long long i64[2];unsigned char u8[16];unsigned short u16[8];unsigned int u32[4];unsigned long long u64[2];};
union __attribute__((aligned(8))) poly64x1_t {char i8[8];short i16[4];int i32[2];unsigned char u8[8];unsigned short u16[4];unsigned int u32[2];};
union __attribute__((aligned(16))) poly64x2_t {char i8[16];short i16[8];int i32[4];long long i64[2];unsigned char u8[16];unsigned short u16[8];unsigned int u32[4];unsigned long long u64[2];};
union __attribute__((aligned(16))) poly8x16_t {char i8[16];short i16[8];int i32[4];long long i64[2];unsigned char u8[16];unsigned short u16[8];unsigned int u32[4];unsigned long long u64[2];};
struct posix_cred;
struct proc_ident;
enum reply_stat {MSG_ACCEPTED = 0x0,MSG_DENIED = 0x1,};
typedef int sigjmp_buf[49];
typedef simd_int2 simd__int2;
typedef simd_int3 simd__int3;
typedef simd_int4 simd__int4;
typedef simd_int8 simd__int8;
typedef char simd_char1;
union __attribute__((aligned(2))) simd_char2 {char i8[2];unsigned char u8[2];};
union __attribute__((aligned(4))) simd_char3 {char i8[4];short i16[2];unsigned char u8[4];unsigned short u16[2];};
union __attribute__((aligned(4))) simd_char4 {char i8[4];short i16[2];unsigned char u8[4];unsigned short u16[2];};
union __attribute__((aligned(8))) simd_char8 {char i8[8];short i16[4];int i32[2];unsigned char u8[8];unsigned short u16[4];unsigned int u32[2];};
union __attribute__((aligned(16))) simd_int16 {char i8[64];short i16[32];int i32[16];long long i64[8];__int128 i128[4];unsigned char u8[64];unsigned short u16[32];unsigned int u32[16];unsigned long long u64[8];__uint128 u128[4];};
typedef long long simd_long1;
union __attribute__((aligned(16))) simd_long2 {char i8[16];short i16[8];int i32[4];long long i64[2];unsigned char u8[16];unsigned short u16[8];unsigned int u32[4];unsigned long long u64[2];};
union __attribute__((aligned(16))) simd_long3 {char i8[32];short i16[16];int i32[8];long long i64[4];__int128 i128[2];unsigned char u8[32];unsigned short u16[16];unsigned int u32[8];unsigned long long u64[4];__uint128 u128[2];};
union __attribute__((aligned(16))) simd_long4 {char i8[32];short i16[16];int i32[8];long long i64[4];__int128 i128[2];unsigned char u8[32];unsigned short u16[16];unsigned int u32[8];unsigned long long u64[4];__uint128 u128[2];};
union __attribute__((aligned(16))) simd_long8 {char i8[64];short i16[32];int i32[16];long long i64[8];__int128 i128[4];unsigned char u8[64];unsigned short u16[32];unsigned int u32[16];unsigned long long u64[8];__uint128 u128[4];};
typedef unsigned int simd_uint1;
union __attribute__((aligned(8))) simd_uint2 {char i8[8];short i16[4];int i32[2];unsigned char u8[8];unsigned short u16[4];unsigned int u32[2];};
union __attribute__((aligned(16))) simd_uint3 {char i8[16];short i16[8];int i32[4];long long i64[2];unsigned char u8[16];unsigned short u16[8];unsigned int u32[4];unsigned long long u64[2];};
union __attribute__((aligned(16))) simd_uint4 {char i8[16];short i16[8];int i32[4];long long i64[2];unsigned char u8[16];unsigned short u16[8];unsigned int u32[4];unsigned long long u64[2];};
union __attribute__((aligned(16))) simd_uint8 {char i8[32];short i16[16];int i32[8];long long i64[4];__int128 i128[2];unsigned char u8[32];unsigned short u16[16];unsigned int u32[8];unsigned long long u64[4];__uint128 u128[2];};
union __attribute__((aligned(8))) swift_int2 {char i8[8];short i16[4];int i32[2];unsigned char u8[8];unsigned short u16[4];unsigned int u32[2];};
union __attribute__((aligned(16))) swift_int3 {char i8[16];short i16[8];int i32[4];long long i64[2];unsigned char u8[16];unsigned short u16[8];unsigned int u32[4];unsigned long long u64[2];};
union __attribute__((aligned(16))) swift_int4 {char i8[16];short i16[8];int i32[4];long long i64[2];unsigned char u8[16];unsigned short u16[8];unsigned int u32[4];unsigned long long u64[2];};
typedef __darwin_ucontext ucontext_t;
union __attribute__((aligned(8))) uint16x4_t {char i8[8];short i16[4];int i32[2];unsigned char u8[8];unsigned short u16[4];unsigned int u32[2];};
union __attribute__((aligned(16))) uint16x8_t {char i8[16];short i16[8];int i32[4];long long i64[2];unsigned char u8[16];unsigned short u16[8];unsigned int u32[4];unsigned long long u64[2];};
union __attribute__((aligned(8))) uint32x2_t {char i8[8];short i16[4];int i32[2];unsigned char u8[8];unsigned short u16[4];unsigned int u32[2];};
union __attribute__((aligned(16))) uint32x4_t {char i8[16];short i16[8];int i32[4];long long i64[2];unsigned char u8[16];unsigned short u16[8];unsigned int u32[4];unsigned long long u64[2];};
union __attribute__((aligned(8))) uint64x1_t {char i8[8];short i16[4];int i32[2];unsigned char u8[8];unsigned short u16[4];unsigned int u32[2];};
union __attribute__((aligned(16))) uint64x2_t {char i8[16];short i16[8];int i32[4];long long i64[2];unsigned char u8[16];unsigned short u16[8];unsigned int u32[4];unsigned long long u64[2];};
union __attribute__((aligned(16))) uint8x16_t {char i8[16];short i16[8];int i32[4];long long i64[2];unsigned char u8[16];unsigned short u16[8];unsigned int u32[4];unsigned long long u64[2];};
typedef char vfs_path_t[4096];
typedef struct _xmlCatalog xmlCatalog;
typedef _xmlElement xmlElement;
typedef struct _xmlExpCtxt xmlExpCtxt;
typedef struct _xmlExpNode xmlExpNode;
enum xmlFeature {XML_WITH_THREAD = 0x1,XML_WITH_TREE = 0x2,XML_WITH_OUTPUT = 0x3,XML_WITH_PUSH = 0x4,XML_WITH_READER = 0x5,XML_WITH_PATTERN = 0x6,XML_WITH_WRITER = 0x7,XML_WITH_SAX1 = 0x8,XML_WITH_FTP = 0x9,XML_WITH_HTTP = 0xA,XML_WITH_VALID = 0xB,XML_WITH_HTML = 0xC,XML_WITH_LEGACY = 0xD,XML_WITH_C14N = 0xE,XML_WITH_CATALOG = 0xF,XML_WITH_XPATH = 0x10,XML_WITH_XPTR = 0x11,XML_WITH_XINCLUDE = 0x12,XML_WITH_ICONV = 0x13,XML_WITH_ISO8859X = 0x14,XML_WITH_UNICODE = 0x15,XML_WITH_REGEXP = 0x16,XML_WITH_AUTOMATA = 0x17,XML_WITH_EXPR = 0x18,XML_WITH_SCHEMAS = 0x19,XML_WITH_SCHEMATRON = 0x1A,XML_WITH_MODULES = 0x1B,XML_WITH_DEBUG = 0x1C,XML_WITH_DEBUG_MEM = 0x1D,XML_WITH_DEBUG_RUN = 0x1E,XML_WITH_ZLIB = 0x1F,XML_WITH_ICU = 0x20,XML_WITH_LZMA = 0x21,XML_WITH_NONE = 0x1869F,};
typedef struct _xmlHashTable xmlIDTable;
typedef _xmlNodeSet xmlNodeSet;
typedef struct _xmlPattern xmlPattern;
typedef struct _xmlRelaxNG xmlRelaxNG;
enum ypresptype {YPRESP_VAL = 0x1,YPRESP_KEY_VAL = 0x2,YPRESP_MAP_PARMS = 0x3,};
typedef struct ALCdevice_struct ALCdevice;
typedef double ALCdouble;
typedef unsigned short ALCushort;
typedef char ALboolean;
enum BNNSFlags {BNNSFlagsUseClientPtr = 0x1,};
typedef unsigned long long ByteCount;
typedef  __CFData *CFDataRef;
typedef  __CFDate *CFDateRef;
typedef __CFHost *CFHostRef;
typedef  __CFNull *CFNullRef;
typedef __CFTree *CFTreeRef;
typedef  void *CFTypeRef;
typedef  __CFUUID *CFUUIDRef;
struct CGContext;
typedef CGFont *CGFontRef;
enum CGLineCap {kCGLineCapButt = 0x0,kCGLineCapRound = 0x1,kCGLineCapSquare = 0x2,};
struct CGPDFPage;
typedef  CGPath *CGPathRef;
struct CGPattern;
struct CGShading;
typedef  __CTFont *CTFontRef;
typedef  __CTLine *CTLineRef;
enum DYLD_BOOL {FALSE = 0x0,TRUE = 0x1,};
enum EKWeekday {EKWeekdaySunday = 0x1,EKWeekdayMonday = 0x2,EKWeekdayTuesday = 0x3,EKWeekdayWednesday = 0x4,EKWeekdayThursday = 0x5,EKWeekdayFriday = 0x6,EKWeekdaySaturday = 0x7,EKSunday = 0x1,EKMonday = 0x2,EKTuesday = 0x3,EKWednesday = 0x4,EKThursday = 0x5,EKFriday = 0x6,EKSaturday = 0x7,};
typedef OpaqueFFTSetupD *FFTSetupD;
enum INCarSeat {INCarSeatUnknown = 0x0,INCarSeatDriver = 0x1,INCarSeatPassenger = 0x2,INCarSeatFrontLeft = 0x3,INCarSeatFrontRight = 0x4,INCarSeatFront = 0x5,INCarSeatRearLeft = 0x6,INCarSeatRearRight = 0x7,INCarSeatRear = 0x8,INCarSeatThirdRowLeft = 0x9,INCarSeatThirdRowRight = 0xA,INCarSeatThirdRow = 0xB,INCarSeatAll = 0xC,};
typedef unsigned long long ItemCount;
enum MACRO_ACL {ACL_MAX_ENTRIES = 128,};
enum MACRO_AIO {AIO_ALLDONE = 0x1,AIO_CANCELED = 0x2,AIO_NOTCANCELED = 0x4,};
enum MACRO_ALC {ALC_INVALID = 0,ALC_VERSION_0_1 = 1,ALC_FALSE = 0,ALC_TRUE = 1,ALC_FREQUENCY = 4103,ALC_REFRESH = 4104,ALC_SYNC = 4105,ALC_MONO_SOURCES = 4112,ALC_STEREO_SOURCES = 4113,ALC_INVALID_DEVICE = 40961,ALC_INVALID_CONTEXT = 40962,ALC_INVALID_ENUM = 40963,ALC_INVALID_VALUE = 40964,ALC_OUT_OF_MEMORY = 40965,ALC_DEFAULT_DEVICE_SPECIFIER = 4100,ALC_DEVICE_SPECIFIER = 4101,ALC_EXTENSIONS = 4102,ALC_MAJOR_VERSION = 4096,ALC_MINOR_VERSION = 4097,ALC_ATTRIBUTES_SIZE = 4098,ALC_ALL_ATTRIBUTES = 4099,ALC_DEFAULT_ALL_DEVICES_SPECIFIER = 4114,ALC_ALL_DEVICES_SPECIFIER = 4115,ALC_CAPTURE_DEVICE_SPECIFIER = 784,ALC_CAPTURE_DEFAULT_DEVICE_SPECIFIER = 785,ALC_CAPTURE_SAMPLES = 786,ALC_MAC_OSX_SPATIAL_RENDERING_QUALITY_HIGH = 1920034921,ALC_MAC_OSX_SPATIAL_RENDERING_QUALITY_LOW = 1919183983,ALC_IPHONE_SPATIAL_RENDERING_QUALITY_HEADPHONES = 1751412840,ALC_MAC_OSX_RENDER_CHANNEL_COUNT_STEREO = 1919120244,ALC_MAC_OSX_RENDER_CHANNEL_COUNT_MULTICHANNEL = 1919118691,};
enum MACRO_ALT {ALT_DIGITS = 49,};
enum MACRO_API {API_TO_BE_DEPRECATED = 100000,};
enum MACRO_ARG {ARG_MAX = 262144,CHILD_MAX = 266,GID_MAX = 2147483647,LINK_MAX = 32767,};
enum MACRO_ARM {ARM_THREAD_STATE_MAX = 1296,ARM_THREAD_STATE = 1,ARM_VFP_STATE = 2,ARM_EXCEPTION_STATE = 3,ARM_DEBUG_STATE = 4,};
enum MACRO_ASL {ASL_API_VERSION = 20150225,ASL_LEVEL_EMERG = 0,ASL_LEVEL_ALERT = 1,ASL_LEVEL_CRIT = 2,ASL_LEVEL_ERR = 3,ASL_LEVEL_WARNING = 4,ASL_LEVEL_NOTICE = 5,ASL_LEVEL_INFO = 6,ASL_LEVEL_DEBUG = 7,ASL_QUERY_OP_CASEFOLD = 16,ASL_QUERY_OP_PREFIX = 32,ASL_QUERY_OP_SUFFIX = 64,ASL_QUERY_OP_SUBSTRING = 96,ASL_QUERY_OP_NUMERIC = 128,ASL_QUERY_OP_REGEX = 256,ASL_QUERY_OP_EQUAL = 1,ASL_QUERY_OP_GREATER = 2,ASL_QUERY_OP_GREATER_EQUAL = 3,ASL_QUERY_OP_LESS = 4,ASL_QUERY_OP_LESS_EQUAL = 5,ASL_QUERY_OP_NOT_EQUAL = 6,ASL_QUERY_OP_TRUE = 7,ASL_TYPE_UNDEF = 4294967295,ASL_TYPE_MSG = 0,ASL_TYPE_QUERY = 1,ASL_TYPE_LIST = 2,ASL_TYPE_FILE = 3,ASL_TYPE_STORE = 4,ASL_TYPE_CLIENT = 5,ASL_MATCH_DIRECTION_FORWARD = 1,ASL_MATCH_DIRECTION_REVERSE = -1,ASL_FILTER_MASK_EMERG = 1,ASL_FILTER_MASK_ALERT = 2,ASL_FILTER_MASK_CRIT = 4,ASL_FILTER_MASK_ERR = 8,ASL_FILTER_MASK_WARNING = 16,ASL_FILTER_MASK_NOTICE = 32,ASL_FILTER_MASK_INFO = 64,ASL_FILTER_MASK_DEBUG = 128,ASL_OPT_STDERR = 1,ASL_OPT_NO_DELAY = 2,ASL_OPT_NO_REMOTE = 4,ASL_OPT_OPEN_WRITE = 1,ASL_OPT_CREATE_STORE = 2,ASL_LOG_DESCRIPTOR_READ = 1,ASL_LOG_DESCRIPTOR_WRITE = 2,ASL_ENCODE_NONE = 0,ASL_ENCODE_SAFE = 1,ASL_ENCODE_ASL = 2,ASL_ENCODE_XML = 3,};
enum MACRO_AUC {AUC_UNSET = 0,AUC_AUDITING = 1,AUC_NOAUDIT = 2,AUC_DISABLED = -1,};
enum MACRO_AVF {AVF_AUDIO_PROCESSING_TAP_AVAILABLE = 0,};
enum MACRO_B75 {B75 = 75,};
enum MACRO_BIT {LONG_BIT = 64,WORD_BIT = 32,};
enum MACRO_BS0 {BS0 = 0x0,BS1 = 0x8000,};
enum MACRO_BSD {BSD = 199506,};
enum MACRO_BUS {BUS_NOOP = 0,BUS_ADRALN = 1,BUS_ADRERR = 2,BUS_OBJERR = 3,};
enum MACRO_CLD {CLD_NOOP = 0,CLD_EXITED = 1,CLD_KILLED = 2,CLD_DUMPED = 3,CLD_TRAPPED = 4,CLD_STOPPED = 5,CLD_CONTINUED = 6,};
enum MACRO_CPF {CPF_OVERWRITE = 0x1,CPF_IGNORE_MODE = 0x2,};
enum MACRO_CPU {CPU_STATE_MAX = 4,CPU_STATE_USER = 0,CPU_STATE_SYSTEM = 1,CPU_STATE_IDLE = 2,CPU_STATE_NICE = 3,CPU_ARCH_MASK = 4278190080,CPU_ARCH_ABI64 = 16777216,CPU_ARCH_ABI64_32 = 33554432,CPU_TYPE_ANY = -1,CPU_TYPE_VAX = 1,CPU_TYPE_MC680x0 = 6,CPU_TYPE_X86 = 7,CPU_TYPE_MC98000 = 10,CPU_TYPE_HPPA = 11,CPU_TYPE_ARM = 12,CPU_TYPE_MC88000 = 13,CPU_TYPE_SPARC = 14,CPU_TYPE_I860 = 15,CPU_TYPE_POWERPC = 18,CPU_SUBTYPE_MASK = 4278190080,CPU_SUBTYPE_LIB64 = 2147483648,CPU_SUBTYPE_PTRAUTH_ABI = 2147483648,CPU_SUBTYPE_ANY = -1,CPU_SUBTYPE_MULTIPLE = -1,CPU_SUBTYPE_LITTLE_ENDIAN = 0,CPU_SUBTYPE_BIG_ENDIAN = 1,CPU_THREADTYPE_NONE = 0,CPU_SUBTYPE_VAX_ALL = 0,CPU_SUBTYPE_VAX780 = 1,CPU_SUBTYPE_VAX785 = 2,CPU_SUBTYPE_VAX750 = 3,CPU_SUBTYPE_VAX730 = 4,CPU_SUBTYPE_UVAXI = 5,CPU_SUBTYPE_UVAXII = 6,CPU_SUBTYPE_VAX8200 = 7,CPU_SUBTYPE_VAX8500 = 8,CPU_SUBTYPE_VAX8600 = 9,CPU_SUBTYPE_VAX8650 = 10,CPU_SUBTYPE_VAX8800 = 11,CPU_SUBTYPE_UVAXIII = 12,CPU_SUBTYPE_MC680x0_ALL = 1,CPU_SUBTYPE_MC68030 = 1,CPU_SUBTYPE_MC68040 = 2,CPU_SUBTYPE_MC68030_ONLY = 3,CPU_SUBTYPE_INTEL_FAMILY_MAX = 15,CPU_SUBTYPE_INTEL_MODEL_ALL = 0,CPU_SUBTYPE_X86_ALL = 3,CPU_SUBTYPE_X86_64_ALL = 3,CPU_SUBTYPE_X86_ARCH1 = 4,CPU_SUBTYPE_X86_64_H = 8,CPU_THREADTYPE_INTEL_HTT = 1,CPU_SUBTYPE_MIPS_ALL = 0,CPU_SUBTYPE_MIPS_R2300 = 1,CPU_SUBTYPE_MIPS_R2600 = 2,CPU_SUBTYPE_MIPS_R2800 = 3,CPU_SUBTYPE_MIPS_R2000a = 4,CPU_SUBTYPE_MIPS_R2000 = 5,CPU_SUBTYPE_MIPS_R3000a = 6,CPU_SUBTYPE_MIPS_R3000 = 7,CPU_SUBTYPE_MC98000_ALL = 0,CPU_SUBTYPE_MC98601 = 1,CPU_SUBTYPE_HPPA_ALL = 0,CPU_SUBTYPE_HPPA_7100 = 0,CPU_SUBTYPE_HPPA_7100LC = 1,CPU_SUBTYPE_MC88000_ALL = 0,CPU_SUBTYPE_MC88100 = 1,CPU_SUBTYPE_MC88110 = 2,CPU_SUBTYPE_SPARC_ALL = 0,CPU_SUBTYPE_I860_ALL = 0,CPU_SUBTYPE_I860_860 = 1,CPU_SUBTYPE_POWERPC_ALL = 0,CPU_SUBTYPE_POWERPC_601 = 1,CPU_SUBTYPE_POWERPC_602 = 2,CPU_SUBTYPE_POWERPC_603 = 3,CPU_SUBTYPE_POWERPC_603e = 4,CPU_SUBTYPE_POWERPC_603ev = 5,CPU_SUBTYPE_POWERPC_604 = 6,CPU_SUBTYPE_POWERPC_604e = 7,CPU_SUBTYPE_POWERPC_620 = 8,CPU_SUBTYPE_POWERPC_750 = 9,CPU_SUBTYPE_POWERPC_7400 = 10,CPU_SUBTYPE_POWERPC_7450 = 11,CPU_SUBTYPE_POWERPC_970 = 100,CPU_SUBTYPE_ARM_ALL = 0,CPU_SUBTYPE_ARM_V4T = 5,CPU_SUBTYPE_ARM_V6 = 6,CPU_SUBTYPE_ARM_V5TEJ = 7,CPU_SUBTYPE_ARM_XSCALE = 8,CPU_SUBTYPE_ARM_V7 = 9,CPU_SUBTYPE_ARM_V7F = 10,CPU_SUBTYPE_ARM_V7S = 11,CPU_SUBTYPE_ARM_V7K = 12,CPU_SUBTYPE_ARM_V8 = 13,CPU_SUBTYPE_ARM_V6M = 14,CPU_SUBTYPE_ARM_V7M = 15,CPU_SUBTYPE_ARM_V7EM = 16,CPU_SUBTYPE_ARM_V8M = 17,CPU_SUBTYPE_ARM64_ALL = 0,CPU_SUBTYPE_ARM64_V8 = 1,CPU_SUBTYPE_ARM64E = 2,CPU_SUBTYPE_ARM64_PTR_AUTH_MASK = 251658240,CPU_SUBTYPE_ARM64_32_ALL = 0,CPU_SUBTYPE_ARM64_32_V8 = 1,};
enum MACRO_CR0 {CR0 = 0x0,CR1 = 0x1000,CR2 = 0x2000,};
enum MACRO_CR3 {CR3 = 0x3000,};
enum MACRO_CRF {CRF_NOMEMBERD = 0x1,CRF_MAC_ENFORCE = 0x2,};
enum MACRO_CS5 {CS5 = 0x0,CS6 = 0x100,CS7 = 0x200,};
enum MACRO_CS8 {CS8 = 0x300,CSTOPB = 0x400,CREAD = 0x800,PARENB = 0x1000,PARODD = 0x2000,HUPCL = 0x4000,CLOCAL = 0x8000,};
enum MACRO_CTL {CTL_MAXNAME = 12,};
enum MACRO_DAY {DAY_1 = 7,DAY_2 = 8,DAY_3 = 9,DAY_4 = 10,DAY_5 = 11,DAY_6 = 12,DAY_7 = 13,};
enum MACRO_DBM {DBM_INSERT = 0,DBM_REPLACE = 1,};
enum MACRO_DER {DER_ENCODE_ENABLE = 1,DER_DECODE_ENABLE = 1,DER_MULTIBYTE_TAGS = 1,DER_TAG_SIZE = 8,};
enum MACRO_DEV {DEV_BSIZE = 512,DEV_BSHIFT = 9,};
enum MACRO_DIR {DIR_MNTSTATUS_MNTPOINT = 0x1,DIR_MNTSTATUS_TRIGGER = 0x2,};
enum MACRO_DNS {DNS_STATUS_OK = 0,DNS_STATUS_BAD_HANDLE = 1,DNS_STATUS_MALFORMED_QUERY = 2,DNS_STATUS_TIMEOUT = 3,DNS_STATUS_SEND_FAILED = 4,DNS_STATUS_RECEIVE_FAILED = 5,DNS_STATUS_CONNECTION_FAILED = 6,DNS_STATUS_WRONG_SERVER = 7,DNS_STATUS_WRONG_XID = 8,DNS_STATUS_WRONG_QUESTION = 9,DNS_PRINT_XID = 1,DNS_PRINT_QR = 2,DNS_PRINT_OPCODE = 4,DNS_PRINT_AA = 8,DNS_PRINT_TC = 16,DNS_PRINT_RD = 32,DNS_PRINT_RA = 64,DNS_PRINT_PR = 128,DNS_PRINT_RCODE = 256,DNS_PRINT_QUESTION = 512,DNS_PRINT_ANSWER = 1024,DNS_PRINT_AUTHORITY = 2048,DNS_PRINT_ADDITIONAL = 4096,DNS_PRINT_SERVER = 8192,};
enum MACRO_DST {DST_NONE = 0,DST_USA = 1,DST_AUST = 2,DST_WET = 3,DST_MET = 4,DST_EET = 5,DST_CAN = 6,};
enum MACRO_DTF {DTF_HIDEW = 0x1,DTF_NODUP = 0x2,DTF_REWIND = 0x4,};
enum MACRO_EAI {EAI_ADDRFAMILY = 1,EAI_AGAIN = 2,EAI_BADFLAGS = 3,EAI_FAIL = 4,EAI_FAMILY = 5,EAI_MEMORY = 6,EAI_NODATA = 7,EAI_NONAME = 8,EAI_SERVICE = 9,EAI_SOCKTYPE = 10,EAI_SYSTEM = 11,EAI_BADHINTS = 12,EAI_PROTOCOL = 13,EAI_OVERFLOW = 14,EAI_MAX = 15,};
enum MACRO_EIO {EIO = 5,};
enum MACRO_EOF {EOF = -1,};
enum MACRO_ERA {ERA = 45,};
enum MACRO_ERR {ERR_SUCCESS = 0,ERR_ROUTINE_NIL = 0,};
enum MACRO_EXC {EXC_TYPES_COUNT = 14,EXC_MASK_MACHINE = 0,};
enum MACRO_FAT {FAT_MAGIC = 0xCAFEBABE,FAT_CIGAM = 0xBEBAFECA,FAT_MAGIC_64 = 0xCAFEBABF,FAT_CIGAM_64 = 0xBFBAFECA,};
enum MACRO_FF0 {FF0 = 0x0,FF1 = 0x4000,};
enum MACRO_FNM {FNM_NOMATCH = 1,FNM_NOESCAPE = 1,FNM_PATHNAME = 2,FNM_PERIOD = 4,FNM_NOSYS = -1,FNM_LEADING_DIR = 8,FNM_CASEFOLD = 16,};
enum MACRO_FPE {FPE_NOOP = 0,FPE_FLTDIV = 1,FPE_FLTOVF = 2,FPE_FLTUND = 3,FPE_FLTRES = 4,FPE_FLTINV = 5,FPE_FLTSUB = 6,FPE_INTDIV = 7,FPE_INTOVF = 8,};
enum MACRO_FST {FST_EOF = -1,};
enum MACRO_FTS {FTS_COMFOLLOW = 0x1,FTS_LOGICAL = 0x2,FTS_NOCHDIR = 0x4,FTS_NOSTAT = 0x8,FTS_PHYSICAL = 0x10,FTS_SEEDOT = 0x20,FTS_XDEV = 0x40,FTS_WHITEOUT = 0x80,FTS_COMFOLLOWDIR = 0x400,FTS_NOSTAT_TYPE = 0x800,FTS_OPTIONMASK = 0xCFF,FTS_NAMEONLY = 0x100,FTS_STOP = 0x200,FTS_BLOCK_COMPAR = 0x80000000,FTS_ROOTPARENTLEVEL = 0xFFFFFFFFFFFFFFFF,FTS_ROOTLEVEL = 0x0,FTS_MAXLEVEL = 0x7FFFFFFF,FTS_D = 0x1,FTS_DC = 0x2,FTS_DEFAULT = 0x3,FTS_DNR = 0x4,FTS_DOT = 0x5,FTS_DP = 0x6,FTS_ERR = 0x7,FTS_F = 0x8,FTS_INIT = 0x9,FTS_NS = 0xA,FTS_NSOK = 0xB,FTS_SL = 0xC,FTS_SLNONE = 0xD,FTS_W = 0xE,FTS_DONTCHDIR = 0x1,FTS_SYMFOLLOW = 0x2,FTS_ISW = 0x4,FTS_CHDIRFD = 0x8,FTS_AGAIN = 0x1,FTS_FOLLOW = 0x2,FTS_NOINSTR = 0x3,FTS_SKIP = 0x4,};
enum MACRO_FTW {FTW_F = 0,FTW_D = 1,FTW_DNR = 2,FTW_DP = 3,FTW_NS = 4,FTW_SL = 5,FTW_SLN = 6,FTW_PHYS = 1,FTW_MOUNT = 2,FTW_DEPTH = 4,FTW_CHDIR = 8,};
enum MACRO_GSS {GSS_C_DELEG_FLAG = 1,GSS_C_MUTUAL_FLAG = 2,GSS_C_REPLAY_FLAG = 4,GSS_C_SEQUENCE_FLAG = 8,GSS_C_CONF_FLAG = 16,GSS_C_INTEG_FLAG = 32,GSS_C_ANON_FLAG = 64,GSS_C_PROT_READY_FLAG = 128,GSS_C_TRANS_FLAG = 256,GSS_C_DCE_STYLE = 4096,GSS_C_IDENTIFY_FLAG = 8192,GSS_C_EXTENDED_ERROR_FLAG = 16384,GSS_C_DELEG_POLICY_FLAG = 32768,GSS_C_BOTH = 0,GSS_C_INITIATE = 1,GSS_C_ACCEPT = 2,GSS_C_OPTION_MASK = 65535,GSS_C_CRED_NO_UI = 65536,GSS_C_GSS_CODE = 1,GSS_C_MECH_CODE = 2,GSS_C_AF_UNSPEC = 0,GSS_C_AF_LOCAL = 1,GSS_C_AF_INET = 2,GSS_C_AF_IMPLINK = 3,GSS_C_AF_PUP = 4,GSS_C_AF_CHAOS = 5,GSS_C_AF_NS = 6,GSS_C_AF_NBS = 7,GSS_C_AF_ECMA = 8,GSS_C_AF_DATAKIT = 9,GSS_C_AF_CCITT = 10,GSS_C_AF_SNA = 11,GSS_C_AF_DECnet = 12,GSS_C_AF_DLI = 13,GSS_C_AF_LAT = 14,GSS_C_AF_HYLINK = 15,GSS_C_AF_APPLETALK = 16,GSS_C_AF_BSC = 17,GSS_C_AF_DSS = 18,GSS_C_AF_OSI = 19,GSS_C_AF_X25 = 21,GSS_C_AF_INET6 = 24,GSS_C_AF_NULLADDR = 255,GSS_C_NO_NAME = 0,GSS_C_NO_BUFFER = 0,GSS_C_NO_BUFFER_SET = 0,GSS_C_NO_OID = 0,GSS_C_NO_OID_SET = 0,GSS_C_NO_CONTEXT = 0,GSS_C_NO_CREDENTIAL = 0,GSS_C_NO_CHANNEL_BINDINGS = 0,GSS_C_NO_IOV_BUFFER = 0,GSS_C_QOP_DEFAULT = 0,GSS_KRB5_CONF_C_QOP_DES = 256,GSS_KRB5_CONF_C_QOP_DES3_KD = 512,GSS_C_INDEFINITE = 4294967295,GSS_IOV_BUFFER_TYPE_EMPTY = 0,GSS_IOV_BUFFER_TYPE_DATA = 1,GSS_IOV_BUFFER_TYPE_HEADER = 2,GSS_IOV_BUFFER_TYPE_MECH_PARAMS = 3,GSS_IOV_BUFFER_TYPE_TRAILER = 7,GSS_IOV_BUFFER_TYPE_PADDING = 9,GSS_IOV_BUFFER_TYPE_STREAM = 10,GSS_IOV_BUFFER_TYPE_SIGN_ONLY = 11,GSS_IOV_BUFFER_TYPE_FLAG_MASK = 4294901760,GSS_IOV_BUFFER_FLAG_ALLOCATE = 65536,GSS_IOV_BUFFER_FLAG_ALLOCATED = 131072,GSS_IOV_BUFFER_TYPE_FLAG_ALLOCATE = 65536,GSS_IOV_BUFFER_TYPE_FLAG_ALLOCATED = 131072,GSS_S_COMPLETE = 0,GSS_C_CALLING_ERROR_OFFSET = 24,GSS_C_ROUTINE_ERROR_OFFSET = 16,GSS_C_SUPPLEMENTARY_OFFSET = 0,GSS_C_CALLING_ERROR_MASK = 255,GSS_C_ROUTINE_ERROR_MASK = 255,GSS_C_SUPPLEMENTARY_MASK = 65535,GSS_C_PRF_KEY_FULL = 0,GSS_C_PRF_KEY_PARTIAL = 1,};
enum MACRO_IFF {IFF_UP = 0x1,IFF_BROADCAST = 0x2,IFF_DEBUG = 0x4,IFF_LOOPBACK = 0x8,IFF_POINTOPOINT = 0x10,IFF_NOTRAILERS = 0x20,IFF_RUNNING = 0x40,IFF_NOARP = 0x80,IFF_PROMISC = 0x100,IFF_ALLMULTI = 0x200,IFF_OACTIVE = 0x400,IFF_SIMPLEX = 0x800,IFF_LINK0 = 0x1000,IFF_LINK1 = 0x2000,IFF_LINK2 = 0x4000,IFF_MULTICAST = 0x8000,};
enum MACRO_IFQ {IFQ_MAXLEN = 128,};
enum MACRO_IFT {IFT_OTHER = 0x1,IFT_1822 = 0x2,IFT_HDH1822 = 0x3,IFT_X25DDN = 0x4,IFT_X25 = 0x5,IFT_ETHER = 0x6,IFT_ISO88023 = 0x7,IFT_ISO88024 = 0x8,IFT_ISO88025 = 0x9,IFT_ISO88026 = 0xA,IFT_STARLAN = 0xB,IFT_P10 = 0xC,IFT_P80 = 0xD,IFT_HY = 0xE,IFT_FDDI = 0xF,IFT_LAPB = 0x10,IFT_SDLC = 0x11,IFT_T1 = 0x12,IFT_CEPT = 0x13,IFT_ISDNBASIC = 0x14,IFT_ISDNPRIMARY = 0x15,IFT_PTPSERIAL = 0x16,IFT_PPP = 0x17,IFT_LOOP = 0x18,IFT_EON = 0x19,IFT_XETHER = 0x1A,IFT_NSIP = 0x1B,IFT_SLIP = 0x1C,IFT_ULTRA = 0x1D,IFT_DS3 = 0x1E,IFT_SIP = 0x1F,IFT_FRELAY = 0x20,IFT_RS232 = 0x21,IFT_PARA = 0x22,IFT_ARCNET = 0x23,IFT_ARCNETPLUS = 0x24,IFT_ATM = 0x25,IFT_MIOX25 = 0x26,IFT_SONET = 0x27,IFT_X25PLE = 0x28,IFT_ISO88022LLC = 0x29,IFT_LOCALTALK = 0x2A,IFT_SMDSDXI = 0x2B,IFT_FRELAYDCE = 0x2C,IFT_V35 = 0x2D,IFT_HSSI = 0x2E,IFT_HIPPI = 0x2F,IFT_MODEM = 0x30,IFT_AAL5 = 0x31,IFT_SONETPATH = 0x32,IFT_SONETVT = 0x33,IFT_SMDSICIP = 0x34,IFT_PROPVIRTUAL = 0x35,IFT_PROPMUX = 0x36,IFT_GIF = 0x37,IFT_FAITH = 0x38,IFT_STF = 0x39,IFT_6LOWPAN = 0x40,IFT_L2VLAN = 0x87,IFT_IEEE8023ADLAG = 0x88,IFT_IEEE1394 = 0x90,IFT_BRIDGE = 0xD1,IFT_ENC = 0xF4,IFT_PFLOG = 0xF5,IFT_PFSYNC = 0xF6,IFT_CARP = 0xF8,IFT_PKTAP = 0xFE,IFT_CELLULAR = 0xFF,};
enum MACRO_IIO {IIO_HAS_IOSURFACE = 1,};
enum MACRO_ILL {ILL_NOOP = 0,ILL_ILLOPC = 1,ILL_ILLTRP = 2,ILL_PRVOPC = 3,ILL_ILLOPN = 4,ILL_ILLADR = 5,ILL_PRVREG = 6,ILL_COPROC = 7,ILL_BADSTK = 8,};
enum MACRO_INP {INP_IPV4 = 0x1,INP_IPV6 = 0x2,INP_ANONPORT = 0x40,};
enum MACRO_INT {INT_MIN = -2147483648,};
enum MACRO_IOC {IOC_VOID = 536870912,IOC_OUT = 1073741824,IOC_IN = 2147483648,IOC_DIRMASK = 3758096384,};
enum MACRO_IP6 {IP6_ALERT_MLD = 0x0,IP6_ALERT_RSVP = 0x100,IP6_ALERT_AN = 0x200,};
enum MACRO_IPC {IPC_CREAT = 0x200,IPC_EXCL = 0x400,IPC_NOWAIT = 0x800,IPC_PRIVATE = 0x0,IPC_RMID = 0x0,IPC_SET = 0x1,IPC_STAT = 0x2,IPC_R = 0x100,IPC_W = 0x80,IPC_M = 0x1000,};
enum MACRO_ISA {ISA_PTRAUTH_DISCRIMINATOR = 0x6AE1,};
enum MACRO_JSC {JSC_OBJC_API_ENABLED = 1,};
enum MACRO_KEV {KEV_INET_SUBCLASS = 1,KEV_INET_NEW_ADDR = 1,KEV_INET_CHANGED_ADDR = 2,KEV_INET_ADDR_DELETED = 3,KEV_INET_SIFDSTADDR = 4,KEV_INET_SIFBRDADDR = 5,KEV_INET_SIFNETMASK = 6,KEV_INET_ARPCOLLISION = 7,KEV_INET_PORTINUSE = 8,KEV_INET_ARPRTRFAILURE = 9,KEV_INET_ARPRTRALIVE = 10,KEV_DL_SUBCLASS = 2,KEV_DL_SIFFLAGS = 1,KEV_DL_SIFMETRICS = 2,KEV_DL_SIFMTU = 3,KEV_DL_SIFPHYS = 4,KEV_DL_SIFMEDIA = 5,KEV_DL_SIFGENERIC = 6,KEV_DL_ADDMULTI = 7,KEV_DL_DELMULTI = 8,KEV_DL_IF_ATTACHED = 9,KEV_DL_IF_DETACHING = 10,KEV_DL_IF_DETACHED = 11,KEV_DL_LINK_OFF = 12,KEV_DL_LINK_ON = 13,KEV_DL_PROTO_ATTACHED = 14,KEV_DL_PROTO_DETACHED = 15,KEV_DL_LINK_ADDRESS_CHANGED = 16,KEV_DL_WAKEFLAGS_CHANGED = 17,KEV_DL_IF_IDLE_ROUTE_REFCNT = 18,KEV_DL_IFCAP_CHANGED = 19,KEV_DL_LINK_QUALITY_METRIC_CHANGED = 20,KEV_DL_NODE_PRESENCE = 21,KEV_DL_NODE_ABSENCE = 22,KEV_DL_MASTER_ELECTED = 23,KEV_DL_ISSUES = 24,KEV_DL_IFDELEGATE_CHANGED = 25,KEV_DL_AWDL_RESTRICTED = 26,KEV_DL_AWDL_UNRESTRICTED = 27,KEV_DL_RRC_STATE_CHANGED = 28,KEV_DL_QOS_MODE_CHANGED = 29,KEV_DL_LOW_POWER_MODE_CHANGED = 30,KEV_INET6_SUBCLASS = 6,KEV_INET6_NEW_USER_ADDR = 1,KEV_INET6_CHANGED_ADDR = 2,KEV_INET6_ADDR_DELETED = 3,KEV_INET6_NEW_LL_ADDR = 4,KEV_INET6_NEW_RTADV_ADDR = 5,KEV_INET6_DEFROUTER = 6,KEV_INET6_REQUEST_NAT64_PREFIX = 7,};
enum MACRO_KLM {KLM_PROG = 100020,KLM_VERS = 1,KLM_TEST = 1,KLM_LOCK = 2,KLM_CANCEL = 3,KLM_UNLOCK = 4,};
enum MACRO_LIO {LIO_NOP = 0x0,LIO_READ = 0x1,LIO_WRITE = 0x2,LIO_NOWAIT = 0x1,LIO_WAIT = 0x2,};
enum MACRO_LOG {LOG_EMERG = 0,LOG_ALERT = 1,LOG_CRIT = 2,LOG_ERR = 3,LOG_WARNING = 4,LOG_NOTICE = 5,LOG_INFO = 6,LOG_DEBUG = 7,LOG_PRIMASK = 7,LOG_KERN = 0,LOG_USER = 8,LOG_MAIL = 16,LOG_DAEMON = 24,LOG_AUTH = 32,LOG_SYSLOG = 40,LOG_LPR = 48,LOG_NEWS = 56,LOG_UUCP = 64,LOG_CRON = 72,LOG_AUTHPRIV = 80,LOG_FTP = 88,LOG_NETINFO = 96,LOG_REMOTEAUTH = 104,LOG_INSTALL = 112,LOG_RAS = 120,LOG_LOCAL0 = 128,LOG_LOCAL1 = 136,LOG_LOCAL2 = 144,LOG_LOCAL3 = 152,LOG_LOCAL4 = 160,LOG_LOCAL5 = 168,LOG_LOCAL6 = 176,LOG_LOCAL7 = 184,LOG_LAUNCHD = 192,LOG_NFACILITIES = 25,LOG_FACMASK = 1016,LOG_PID = 1,LOG_CONS = 2,LOG_ODELAY = 4,LOG_NDELAY = 8,LOG_NOWAIT = 16,LOG_PERROR = 32,};
enum MACRO_MAC {MAC_OS_X_VERSION_10_0 = 1000,MAC_OS_X_VERSION_10_1 = 1010,MAC_OS_X_VERSION_10_2 = 1020,MAC_OS_X_VERSION_10_3 = 1030,MAC_OS_X_VERSION_10_4 = 1040,MAC_OS_X_VERSION_10_5 = 1050,MAC_OS_X_VERSION_10_6 = 1060,MAC_OS_X_VERSION_10_7 = 1070,MAC_OS_X_VERSION_10_8 = 1080,MAC_OS_X_VERSION_10_9 = 1090,MAC_OS_X_VERSION_10_10 = 101000,MAC_OS_X_VERSION_10_10_2 = 101002,MAC_OS_X_VERSION_10_10_3 = 101003,MAC_OS_X_VERSION_10_11 = 101100,MAC_OS_X_VERSION_10_11_2 = 101102,MAC_OS_X_VERSION_10_11_3 = 101103,MAC_OS_X_VERSION_10_11_4 = 101104,MAC_OS_X_VERSION_10_12 = 101200,MAC_OS_X_VERSION_10_12_1 = 101201,MAC_OS_X_VERSION_10_12_2 = 101202,MAC_OS_X_VERSION_10_12_4 = 101204,MAC_OS_X_VERSION_10_13 = 101300,MAC_OS_X_VERSION_10_13_1 = 101301,MAC_OS_X_VERSION_10_13_2 = 101302,MAC_OS_X_VERSION_10_13_4 = 101304,MAC_OS_X_VERSION_10_14 = 101400,MAC_OS_X_VERSION_10_14_1 = 101401,MAC_OS_X_VERSION_10_14_4 = 101404,MAC_OS_X_VERSION_10_14_6 = 101406,MAC_OS_X_VERSION_10_15 = 101500,MAC_OS_X_VERSION_10_15_1 = 101501,MAC_OS_X_VERSION_10_16 = 101600,MAC_OS_VERSION_11_0 = 110000,};
enum MACRO_MAP {MAP_SHARED = 0x1,MAP_PRIVATE = 0x2,MAP_FIXED = 0x10,MAP_RENAME = 0x20,MAP_NORESERVE = 0x40,MAP_RESERVED0080 = 0x80,MAP_NOEXTEND = 0x100,MAP_HASSEMAPHORE = 0x200,MAP_NOCACHE = 0x400,MAP_JIT = 0x800,MAP_FILE = 0x0,MAP_ANON = 0x1000,MAP_RESILIENT_CODESIGN = 0x2000,MAP_RESILIENT_MEDIA = 0x4000,MAP_TRANSLATED_ALLOW_EXECUTE = 0x20000,MAP_UNIX03 = 0x40000,};
enum MACRO_MAX {INT8_MAX = 127,INT16_MAX = 32767,INT32_MAX = 2147483647,INT64_MAX = 9223372036854775807,};
enum MACRO_MCL {MCL_CURRENT = 0x1,MCL_FUTURE = 0x2,};
enum MACRO_MIG {MIG_ROUTINE_ARG_DESCRIPTOR_NULL = 0,MIG_ROUTINE_DESCRIPTOR_NULL = 0,MIG_SUBSYSTEM_NULL = 0,MIG_TYPE_ERROR = -300,MIG_REPLY_MISMATCH = -301,MIG_REMOTE_ERROR = -302,MIG_BAD_ID = -303,MIG_BAD_ARGUMENTS = -304,MIG_NO_REPLY = -305,MIG_EXCEPTION = -306,MIG_ARRAY_TOO_LARGE = -307,MIG_SERVER_DIED = -308,MIG_TRAILER_ERROR = -309,};
enum MACRO_MIN {INT8_MIN = -128,INT16_MIN = -32768,};
enum MACRO_MLD {MLD_LISTENER_QUERY = 130,MLD_LISTENER_REPORT = 131,MLD_LISTENER_DONE = 132,};
enum MACRO_MNT {MNT_EXT_ROOT_DATA_VOL = 0x1,MNT_RDONLY = 0x1,MNT_SYNCHRONOUS = 0x2,MNT_NOEXEC = 0x4,MNT_NOSUID = 0x8,MNT_NODEV = 0x10,MNT_UNION = 0x20,MNT_ASYNC = 0x40,MNT_CPROTECT = 0x80,MNT_EXPORTED = 0x100,MNT_REMOVABLE = 0x200,MNT_QUARANTINE = 0x400,MNT_LOCAL = 0x1000,MNT_QUOTA = 0x2000,MNT_ROOTFS = 0x4000,MNT_DOVOLFS = 0x8000,MNT_DONTBROWSE = 0x100000,MNT_IGNORE_OWNERSHIP = 0x200000,MNT_AUTOMOUNTED = 0x400000,MNT_JOURNALED = 0x800000,MNT_NOUSERXATTR = 0x1000000,MNT_DEFWRITE = 0x2000000,MNT_MULTILABEL = 0x4000000,MNT_NOATIME = 0x10000000,MNT_SNAPSHOT = 0x40000000,MNT_STRICTATIME = 0x80000000,MNT_UPDATE = 0x10000,MNT_NOBLOCK = 0x20000,MNT_RELOAD = 0x40000,MNT_FORCE = 0x80000,};
enum MACRO_MOD {MOD_OFFSET = 0x1,MOD_FREQUENCY = 0x2,MOD_MAXERROR = 0x4,MOD_ESTERROR = 0x8,MOD_STATUS = 0x10,MOD_TIMECONST = 0x20,MOD_PPSMAX = 0x40,MOD_TAI = 0x80,MOD_MICRO = 0x1000,MOD_NANO = 0x2000,MOD_CLKB = 0x4000,MOD_CLKA = 0x8000,};
enum MACRO_MON {MON_1 = 21,MON_2 = 22,MON_3 = 23,MON_4 = 24,MON_5 = 25,MON_6 = 26,MON_7 = 27,MON_8 = 28,MON_9 = 29,MON_10 = 30,MON_11 = 31,MON_12 = 32,};
enum MACRO_MPG {MPG_FLAGS_STRICT_REPLY_INVALID_REPLY_DISP = 0x100000000000000,MPG_FLAGS_STRICT_REPLY_INVALID_REPLY_PORT = 0x200000000000000,MPG_FLAGS_STRICT_REPLY_INVALID_VOUCHER = 0x400000000000000,MPG_FLAGS_STRICT_REPLY_NO_BANK_ATTR = 0x800000000000000,MPG_FLAGS_STRICT_REPLY_MISMATCHED_PERSONA = 0x1000000000000000,MPG_FLAGS_STRICT_REPLY_MASK = 0xFF00000000000000,MPG_STRICT = 0x1,MPG_IMMOVABLE_RECEIVE = 0x2,};
enum MACRO_MPO {MPO_CONTEXT_AS_GUARD = 0x1,MPO_QLIMIT = 0x2,MPO_TEMPOWNER = 0x4,MPO_IMPORTANCE_RECEIVER = 0x8,MPO_INSERT_SEND_RIGHT = 0x10,MPO_STRICT = 0x20,MPO_DENAP_RECEIVER = 0x40,MPO_IMMOVABLE_RECEIVE = 0x80,MPO_FILTER_MSG = 0x100,MPO_TG_BLOCK_TRACKING = 0x200,};
enum MACRO_MSG {MSG_OOB = 0x1,MSG_PEEK = 0x2,MSG_DONTROUTE = 0x4,MSG_EOR = 0x8,MSG_TRUNC = 0x10,MSG_CTRUNC = 0x20,MSG_WAITALL = 0x40,MSG_DONTWAIT = 0x80,MSG_EOF = 0x100,MSG_WAITSTREAM = 0x200,MSG_FLUSH = 0x400,MSG_HOLD = 0x800,MSG_SEND = 0x1000,MSG_HAVEMORE = 0x2000,MSG_RCVMORE = 0x4000,MSG_NEEDSA = 0x10000,MSG_NOSIGNAL = 0x80000,};
enum MACRO_NDR {NDR_PROTOCOL_2_0 = 0,NDR_INT_BIG_ENDIAN = 0,NDR_INT_LITTLE_ENDIAN = 1,NDR_FLOAT_IEEE = 0,NDR_FLOAT_VAX = 1,NDR_FLOAT_CRAY = 2,NDR_FLOAT_IBM = 3,NDR_CHAR_ASCII = 0,NDR_CHAR_EBCDIC = 1,};
enum MACRO_NET {NET_SERVICE_TYPE_BE = 0,NET_SERVICE_TYPE_BK = 1,NET_SERVICE_TYPE_SIG = 2,NET_SERVICE_TYPE_VI = 3,NET_SERVICE_TYPE_VO = 4,NET_SERVICE_TYPE_RV = 5,NET_SERVICE_TYPE_AV = 6,NET_SERVICE_TYPE_OAM = 7,NET_SERVICE_TYPE_RD = 8,};
enum MACRO_NL0 {NL0 = 0x0,NL1 = 0x100,NL2 = 0x200,};
enum MACRO_NL3 {NL3 = 0x300,};
enum MACRO_NLM {NLM_PROG = 100021,NLM_SM = 0,NLM_SM_NOTIFY = 1,NLM_VERS = 1,NLM_TEST = 1,NLM_LOCK = 2,NLM_CANCEL = 3,NLM_UNLOCK = 4,NLM_GRANTED = 5,NLM_TEST_MSG = 6,NLM_LOCK_MSG = 7,NLM_CANCEL_MSG = 8,NLM_UNLOCK_MSG = 9,NLM_GRANTED_MSG = 10,NLM_TEST_RES = 11,NLM_LOCK_RES = 12,NLM_CANCEL_RES = 13,NLM_UNLOCK_RES = 14,NLM_GRANTED_RES = 15,NLM_VERSX = 3,NLM_SHARE = 20,NLM_UNSHARE = 21,NLM_NM_LOCK = 22,NLM_FREE_ALL = 23,NLM_VERS4 = 4,};
enum MACRO_NTP {NTP_API = 4,};
enum MACRO_OID {OID_AUTO = -1,OID_AUTO_START = 100,};
enum MACRO_QOS {QOS_MIN_RELATIVE_PRIORITY = -15,};
enum MACRO_REG {REG_BASIC = 0x0,REG_EXTENDED = 0x1,REG_ICASE = 0x2,REG_NOSUB = 0x4,REG_NEWLINE = 0x8,REG_NOSPEC = 0x10,REG_PEND = 0x20,REG_MINIMAL = 0x40,REG_DUMP = 0x80,REG_ENHANCED = 0x100,REG_ENOSYS = 0xFFFFFFFF,REG_NOMATCH = 0x1,REG_BADPAT = 0x2,REG_ECOLLATE = 0x3,REG_ECTYPE = 0x4,REG_EESCAPE = 0x5,REG_ESUBREG = 0x6,REG_EBRACK = 0x7,REG_EPAREN = 0x8,REG_EBRACE = 0x9,REG_BADBR = 0xA,REG_ERANGE = 0xB,REG_ESPACE = 0xC,REG_BADRPT = 0xD,REG_EMPTY = 0xE,REG_ASSERT = 0xF,REG_INVARG = 0x10,REG_ILLSEQ = 0x11,REG_ATOI = 0xFF,REG_ITOA = 0x100,REG_NOTBOL = 0x1,REG_NOTEOL = 0x2,REG_STARTEND = 0x4,REG_TRACE = 0x100,REG_LARGE = 0x200,REG_BACKR = 0x400,};
enum MACRO_RES {RES_TIMEOUT = 5,};
enum MACRO_RET {RET_ERROR = -1,RET_SUCCESS = 0,RET_SPECIAL = 1,};
enum MACRO_RPC {RPC_SIGBUF_SIZE = 8,RPC_SUBSYSTEM_NULL = 0,};
enum MACRO_RPM {RPM_PCO_ADD = 1,RPM_PCO_CHANGE = 2,RPM_PCO_SETGLOBAL = 3,RPM_PCO_MAX = 4,};
enum MACRO_RPP {RPP_ECHO_OFF = 0x0,RPP_ECHO_ON = 0x1,RPP_REQUIRE_TTY = 0x2,RPP_FORCELOWER = 0x4,RPP_FORCEUPPER = 0x8,RPP_SEVENBIT = 0x10,RPP_STDIN = 0x20,};
enum MACRO_RUN {RUN_LVL = 1,};
enum MACRO_SAE {SAE_ASSOCID_ANY = 0,SAE_ASSOCID_ALL = 4294967295,SAE_CONNID_ANY = 0,SAE_CONNID_ALL = 4294967295,};
enum MACRO_SCM {SCM_RIGHTS = 0x1,SCM_TIMESTAMP = 0x2,SCM_CREDS = 0x3,SCM_TIMESTAMP_MONOTONIC = 0x4,};
enum MACRO_SCN {SCN_ENABLE_METAL = 1,SCN_ENABLE_OPENGL = 1,};
enum MACRO_SEM {SEM_UNDO = 0x1000,SEM_A = 0x80,SEM_R = 0x100,SEM_VALUE_MAX = 0x7FFF,SEM_FAILED = 0xFFFFFFFF,};
enum MACRO_SHM {SHM_RDONLY = 0x1000,SHM_RND = 0x2000,};
enum MACRO_SIG {SIG_BLOCK = 1,SIG_UNBLOCK = 2,SIG_SETMASK = 3,};
enum MACRO_SOL {SOL_SOCKET = 0xFFFF,};
enum MACRO_STA {STA_PLL = 0x1,STA_PPSFREQ = 0x2,STA_PPSTIME = 0x4,STA_FLL = 0x8,STA_INS = 0x10,STA_DEL = 0x20,STA_UNSYNC = 0x40,STA_FREQHOLD = 0x80,STA_PPSSIGNAL = 0x100,STA_PPSJITTER = 0x200,STA_PPSWANDER = 0x400,STA_PPSERROR = 0x800,STA_CLOCKERR = 0x1000,STA_NANO = 0x2000,STA_MODE = 0x4000,STA_CLK = 0x8000,};
enum MACRO_STR {AM_STR = 5,PM_STR = 6,};
enum MACRO_SWI {SWI_SYSCALL = 0x80,};
enum MACRO_SYS {SYS_syscall = 0,SYS_exit = 1,SYS_fork = 2,SYS_read = 3,SYS_write = 4,SYS_open = 5,SYS_close = 6,SYS_wait4 = 7,SYS_link = 9,SYS_unlink = 10,SYS_chdir = 12,SYS_fchdir = 13,SYS_mknod = 14,SYS_chmod = 15,SYS_chown = 16,SYS_getfsstat = 18,SYS_getpid = 20,SYS_setuid = 23,SYS_getuid = 24,SYS_geteuid = 25,SYS_ptrace = 26,SYS_recvmsg = 27,SYS_sendmsg = 28,SYS_recvfrom = 29,SYS_accept = 30,SYS_getpeername = 31,SYS_getsockname = 32,SYS_access = 33,SYS_chflags = 34,SYS_fchflags = 35,SYS_sync = 36,SYS_kill = 37,SYS_getppid = 39,SYS_dup = 41,SYS_pipe = 42,SYS_getegid = 43,SYS_sigaction = 46,SYS_getgid = 47,SYS_sigprocmask = 48,SYS_getlogin = 49,SYS_setlogin = 50,SYS_acct = 51,SYS_sigpending = 52,SYS_sigaltstack = 53,SYS_ioctl = 54,SYS_reboot = 55,SYS_revoke = 56,SYS_symlink = 57,SYS_readlink = 58,SYS_execve = 59,SYS_umask = 60,SYS_chroot = 61,SYS_msync = 65,SYS_vfork = 66,SYS_munmap = 73,SYS_mprotect = 74,SYS_madvise = 75,SYS_mincore = 78,SYS_getgroups = 79,SYS_setgroups = 80,SYS_getpgrp = 81,SYS_setpgid = 82,SYS_setitimer = 83,SYS_swapon = 85,SYS_getitimer = 86,SYS_getdtablesize = 89,SYS_dup2 = 90,SYS_fcntl = 92,SYS_select = 93,SYS_fsync = 95,SYS_setpriority = 96,SYS_socket = 97,SYS_connect = 98,SYS_getpriority = 100,SYS_bind = 104,SYS_setsockopt = 105,SYS_listen = 106,SYS_sigsuspend = 111,SYS_gettimeofday = 116,SYS_getrusage = 117,SYS_getsockopt = 118,SYS_readv = 120,SYS_writev = 121,SYS_settimeofday = 122,SYS_fchown = 123,SYS_fchmod = 124,SYS_setreuid = 126,SYS_setregid = 127,SYS_rename = 128,SYS_flock = 131,SYS_mkfifo = 132,SYS_sendto = 133,SYS_shutdown = 134,SYS_socketpair = 135,SYS_mkdir = 136,SYS_rmdir = 137,SYS_utimes = 138,SYS_futimes = 139,SYS_adjtime = 140,SYS_gethostuuid = 142,SYS_setsid = 147,SYS_getpgid = 151,SYS_setprivexec = 152,SYS_pread = 153,SYS_pwrite = 154,SYS_nfssvc = 155,SYS_statfs = 157,SYS_fstatfs = 158,SYS_unmount = 159,SYS_getfh = 161,SYS_quotactl = 165,SYS_mount = 167,SYS_csops = 169,SYS_csops_audittoken = 170,SYS_waitid = 173,SYS_kdebug_typefilter = 177,SYS_kdebug_trace_string = 178,SYS_kdebug_trace64 = 179,SYS_kdebug_trace = 180,SYS_setgid = 181,SYS_setegid = 182,SYS_seteuid = 183,SYS_sigreturn = 184,SYS_thread_selfcounts = 186,SYS_fdatasync = 187,SYS_stat = 188,SYS_fstat = 189,SYS_lstat = 190,SYS_pathconf = 191,SYS_fpathconf = 192,SYS_getrlimit = 194,SYS_setrlimit = 195,SYS_getdirentries = 196,SYS_mmap = 197,SYS_lseek = 199,SYS_truncate = 200,SYS_ftruncate = 201,SYS_sysctl = 202,SYS_mlock = 203,SYS_munlock = 204,SYS_undelete = 205,SYS_open_dprotected_np = 216,SYS_fsgetpath_ext = 217,SYS_getattrlist = 220,SYS_setattrlist = 221,SYS_getdirentriesattr = 222,SYS_exchangedata = 223,SYS_searchfs = 225,SYS_delete = 226,SYS_copyfile = 227,SYS_fgetattrlist = 228,SYS_fsetattrlist = 229,SYS_poll = 230,SYS_getxattr = 234,SYS_fgetxattr = 235,SYS_setxattr = 236,SYS_fsetxattr = 237,SYS_removexattr = 238,SYS_fremovexattr = 239,SYS_listxattr = 240,SYS_flistxattr = 241,SYS_fsctl = 242,SYS_initgroups = 243,SYS_posix_spawn = 244,SYS_ffsctl = 245,SYS_nfsclnt = 247,SYS_fhopen = 248,SYS_minherit = 250,SYS_semsys = 251,SYS_msgsys = 252,SYS_shmsys = 253,SYS_semctl = 254,SYS_semget = 255,SYS_semop = 256,SYS_msgctl = 258,SYS_msgget = 259,SYS_msgsnd = 260,SYS_msgrcv = 261,SYS_shmat = 262,SYS_shmctl = 263,SYS_shmdt = 264,SYS_shmget = 265,SYS_shm_open = 266,SYS_shm_unlink = 267,SYS_sem_open = 268,SYS_sem_close = 269,SYS_sem_unlink = 270,SYS_sem_wait = 271,SYS_sem_trywait = 272,SYS_sem_post = 273,SYS_sysctlbyname = 274,SYS_open_extended = 277,SYS_umask_extended = 278,SYS_stat_extended = 279,SYS_lstat_extended = 280,SYS_fstat_extended = 281,SYS_chmod_extended = 282,SYS_fchmod_extended = 283,SYS_access_extended = 284,SYS_settid = 285,SYS_gettid = 286,SYS_setsgroups = 287,SYS_getsgroups = 288,SYS_setwgroups = 289,SYS_getwgroups = 290,SYS_mkfifo_extended = 291,SYS_mkdir_extended = 292,SYS_identitysvc = 293,SYS_shared_region_check_np = 294,SYS_vm_pressure_monitor = 296,SYS_psynch_rw_longrdlock = 297,SYS_psynch_rw_yieldwrlock = 298,SYS_psynch_rw_downgrade = 299,SYS_psynch_rw_upgrade = 300,SYS_psynch_mutexwait = 301,SYS_psynch_mutexdrop = 302,SYS_psynch_cvbroad = 303,SYS_psynch_cvsignal = 304,SYS_psynch_cvwait = 305,SYS_psynch_rw_rdlock = 306,SYS_psynch_rw_wrlock = 307,SYS_psynch_rw_unlock = 308,SYS_psynch_rw_unlock2 = 309,SYS_getsid = 310,SYS_settid_with_pid = 311,SYS_psynch_cvclrprepost = 312,SYS_aio_fsync = 313,SYS_aio_return = 314,SYS_aio_suspend = 315,SYS_aio_cancel = 316,SYS_aio_error = 317,SYS_aio_read = 318,SYS_aio_write = 319,SYS_lio_listio = 320,SYS_iopolicysys = 322,SYS_process_policy = 323,SYS_mlockall = 324,SYS_munlockall = 325,SYS_issetugid = 327,SYS___pthread_kill = 328,SYS___pthread_sigmask = 329,SYS___sigwait = 330,SYS___disable_threadsignal = 331,SYS___pthread_markcancel = 332,SYS___pthread_canceled = 333,SYS___semwait_signal = 334,SYS_proc_info = 336,SYS_sendfile = 337,SYS_stat64 = 338,SYS_fstat64 = 339,SYS_lstat64 = 340,SYS_stat64_extended = 341,SYS_lstat64_extended = 342,SYS_fstat64_extended = 343,SYS_getdirentries64 = 344,SYS_statfs64 = 345,SYS_fstatfs64 = 346,SYS_getfsstat64 = 347,SYS___pthread_chdir = 348,SYS___pthread_fchdir = 349,SYS_audit = 350,SYS_auditon = 351,SYS_getauid = 353,SYS_setauid = 354,SYS_getaudit_addr = 357,SYS_setaudit_addr = 358,SYS_auditctl = 359,SYS_bsdthread_create = 360,SYS_bsdthread_terminate = 361,SYS_kqueue = 362,SYS_kevent = 363,SYS_lchown = 364,SYS_bsdthread_register = 366,SYS_workq_open = 367,SYS_workq_kernreturn = 368,SYS_kevent64 = 369,SYS___old_semwait_signal = 370,SYS___old_semwait_signal_nocancel = 371,SYS_thread_selfid = 372,SYS_ledger = 373,SYS_kevent_qos = 374,SYS_kevent_id = 375,SYS___mac_execve = 380,SYS___mac_syscall = 381,SYS___mac_get_file = 382,SYS___mac_set_file = 383,SYS___mac_get_link = 384,SYS___mac_set_link = 385,SYS___mac_get_proc = 386,SYS___mac_set_proc = 387,SYS___mac_get_fd = 388,SYS___mac_set_fd = 389,SYS___mac_get_pid = 390,SYS_pselect = 394,SYS_pselect_nocancel = 395,SYS_read_nocancel = 396,SYS_write_nocancel = 397,SYS_open_nocancel = 398,SYS_close_nocancel = 399,SYS_wait4_nocancel = 400,SYS_recvmsg_nocancel = 401,SYS_sendmsg_nocancel = 402,SYS_recvfrom_nocancel = 403,SYS_accept_nocancel = 404,SYS_msync_nocancel = 405,SYS_fcntl_nocancel = 406,SYS_select_nocancel = 407,SYS_fsync_nocancel = 408,SYS_connect_nocancel = 409,SYS_sigsuspend_nocancel = 410,SYS_readv_nocancel = 411,SYS_writev_nocancel = 412,SYS_sendto_nocancel = 413,SYS_pread_nocancel = 414,SYS_pwrite_nocancel = 415,SYS_waitid_nocancel = 416,SYS_poll_nocancel = 417,SYS_msgsnd_nocancel = 418,SYS_msgrcv_nocancel = 419,SYS_sem_wait_nocancel = 420,SYS_aio_suspend_nocancel = 421,SYS___sigwait_nocancel = 422,SYS___semwait_signal_nocancel = 423,SYS___mac_mount = 424,SYS___mac_get_mount = 425,SYS___mac_getfsstat = 426,SYS_fsgetpath = 427,SYS_audit_session_self = 428,SYS_audit_session_join = 429,SYS_fileport_makeport = 430,SYS_fileport_makefd = 431,SYS_audit_session_port = 432,SYS_pid_suspend = 433,SYS_pid_resume = 434,SYS_pid_hibernate = 435,SYS_pid_shutdown_sockets = 436,SYS_shared_region_map_and_slide_np = 438,SYS_kas_info = 439,SYS_memorystatus_control = 440,SYS_guarded_open_np = 441,SYS_guarded_close_np = 442,SYS_guarded_kqueue_np = 443,SYS_change_fdguard_np = 444,SYS_usrctl = 445,SYS_proc_rlimit_control = 446,SYS_connectx = 447,SYS_disconnectx = 448,SYS_peeloff = 449,SYS_socket_delegate = 450,SYS_telemetry = 451,SYS_proc_uuid_policy = 452,SYS_memorystatus_get_level = 453,SYS_system_override = 454,SYS_vfs_purge = 455,SYS_sfi_ctl = 456,SYS_sfi_pidctl = 457,SYS_coalition = 458,SYS_coalition_info = 459,SYS_necp_match_policy = 460,SYS_getattrlistbulk = 461,SYS_clonefileat = 462,SYS_openat = 463,SYS_openat_nocancel = 464,SYS_renameat = 465,SYS_faccessat = 466,SYS_fchmodat = 467,SYS_fchownat = 468,SYS_fstatat = 469,SYS_fstatat64 = 470,SYS_linkat = 471,SYS_unlinkat = 472,SYS_readlinkat = 473,SYS_symlinkat = 474,SYS_mkdirat = 475,SYS_getattrlistat = 476,SYS_proc_trace_log = 477,SYS_bsdthread_ctl = 478,SYS_openbyid_np = 479,SYS_recvmsg_x = 480,SYS_sendmsg_x = 481,SYS_thread_selfusage = 482,SYS_csrctl = 483,SYS_guarded_open_dprotected_np = 484,SYS_guarded_write_np = 485,SYS_guarded_pwrite_np = 486,SYS_guarded_writev_np = 487,SYS_renameatx_np = 488,SYS_mremap_encrypted = 489,SYS_netagent_trigger = 490,SYS_stack_snapshot_with_config = 491,SYS_microstackshot = 492,SYS_grab_pgo_data = 493,SYS_persona = 494,SYS_mach_eventlink_signal = 496,SYS_mach_eventlink_wait_until = 497,SYS_mach_eventlink_signal_wait_until = 498,SYS_work_interval_ctl = 499,SYS_getentropy = 500,SYS_necp_open = 501,SYS_necp_client_action = 502,SYS___nexus_open = 503,SYS___nexus_register = 504,SYS___nexus_deregister = 505,SYS___nexus_create = 506,SYS___nexus_destroy = 507,SYS___nexus_get_opt = 508,SYS___nexus_set_opt = 509,SYS___channel_open = 510,SYS___channel_get_info = 511,SYS___channel_sync = 512,SYS___channel_get_opt = 513,SYS___channel_set_opt = 514,SYS_ulock_wait = 515,SYS_ulock_wake = 516,SYS_fclonefileat = 517,SYS_fs_snapshot = 518,SYS_terminate_with_payload = 520,SYS_abort_with_payload = 521,SYS_necp_session_open = 522,SYS_necp_session_action = 523,SYS_setattrlistat = 524,SYS_net_qos_guideline = 525,SYS_fmount = 526,SYS_ntp_adjtime = 527,SYS_ntp_gettime = 528,SYS_os_fault_with_payload = 529,SYS_kqueue_workloop_ctl = 530,SYS___mach_bridge_remote_time = 531,SYS_coalition_ledger = 532,SYS_log_data = 533,SYS_memorystatus_available_memory = 534,SYS_shared_region_map_and_slide_2_np = 536,SYS_pivot_root = 537,SYS_task_inspect_for_pid = 538,SYS_task_read_for_pid = 539,SYS_preadv = 540,SYS_pwritev = 541,SYS_preadv_nocancel = 542,SYS_pwritev_nocancel = 543,SYS_ulock_wait2 = 544,SYS_proc_info_extended_id = 545,SYS_MAXSYSCALL = 546,SYS_invalid = 63,};
enum MACRO_TCP {TCP_MAX_SACK = 4,TCP_MSS = 512,TCP_MINMSS = 216,};
enum MACRO_TID {TID_NULL = 0,THR_ACT_NULL = 0,IPC_SPACE_NULL = 0,IPC_SPACE_READ_NULL = 0,IPC_SPACE_INSPECT_NULL = 0,COALITION_NULL = 0,HOST_NULL = 0,HOST_PRIV_NULL = 0,HOST_SECURITY_NULL = 0,PROCESSOR_SET_NULL = 0,PROCESSOR_NULL = 0,SEMAPHORE_NULL = 0,LOCK_SET_NULL = 0,LEDGER_NULL = 0,ALARM_NULL = 0,CLOCK_NULL = 0,UND_SERVER_NULL = 0,ARCADE_REG_NULL = 0,MACH_EVENTLINK_NULL = 0,IPC_EVENTLINK_NULL = 0,SUID_CRED_NULL = 0,};
enum MACRO_TMP {TMP_MAX = 308915776,};
enum MACRO_TRY {TRY_AGAIN = 2,};
enum MACRO_TTY {TTY_ON = 0x1,TTY_SECURE = 0x2,};
enum MACRO_U16 {U16_SURROGATE_OFFSET = 0x35FDC00,U16_MAX_LENGTH = 0x2,};
enum MACRO_UDP {UDP_NOCKSUM = 0x1,};
enum MACRO_USE {USE_NON_APPLE_STANDARD_DATATYPES = 1,};
enum MACRO_UTF {UTF_SIZE = 16,};
enum MACRO_VFS {VFS_GENERIC = 0,VFS_NUMMNTOPS = 1,VFS_MAXTYPENUM = 1,VFS_CONF = 2,};
enum MACRO_VIS {VIS_OCTAL = 0x1,VIS_CSTYLE = 0x2,VIS_SP = 0x4,VIS_TAB = 0x8,VIS_NL = 0x10,VIS_SAFE = 0x20,VIS_NOSLASH = 0x40,VIS_HTTP1808 = 0x80,VIS_HTTPSTYLE = 0x80,VIS_GLOB = 0x100,VIS_MIMESTYLE = 0x200,VIS_HTTP1866 = 0x400,VIS_NOESCAPE = 0x800,};
enum MACRO_VOL {VOL_CAPABILITIES_FORMAT = 0,VOL_CAPABILITIES_INTERFACES = 1,VOL_CAPABILITIES_RESERVED1 = 2,VOL_CAPABILITIES_RESERVED2 = 3,};
enum MACRO_VT0 {VT0 = 0x0,VT1 = 0x10000,};
enum MACRO_XML {XML_DETECT_IDS = 2,XML_COMPLETE_ATTRS = 4,XML_SKIP_IDS = 8,XML_SAX2_MAGIC = 3740122799,XML_MAX_TEXT_LENGTH = 10000000,XML_MAX_NAME_LENGTH = 50000,XML_MAX_DICTIONARY_LIMIT = 10000000,XML_MAX_LOOKUP_LIMIT = 10000000,XML_MAX_NAMELEN = 100,};
enum MACRO_ZOP {ZOP_ALLOC = 1,ZOP_FREE = 0,};
enum MACRO__CS {_CS_PATH = 1,};
enum MACRO__LC {_LC_LAST = 7,};
enum MACRO__OS {_OS_WORKGROUP_ATTR_SIG_DEFAULT_INIT = 0x2FA863B4,_OS_WORKGROUP_ATTR_SIG_EMPTY_INIT = 0x2FA863C4,_OS_WORKGROUP_INTERVAL_DATA_SIG_INIT = 0x52A74C4D,};
enum MACRO__PC {_PC_LINK_MAX = 1,_PC_MAX_CANON = 2,_PC_MAX_INPUT = 3,_PC_NAME_MAX = 4,_PC_PATH_MAX = 5,_PC_PIPE_BUF = 6,_PC_CHOWN_RESTRICTED = 7,_PC_NO_TRUNC = 8,_PC_VDISABLE = 9,_PC_NAME_CHARS_MAX = 10,_PC_CASE_SENSITIVE = 11,_PC_CASE_PRESERVING = 12,_PC_EXTENDED_SECURITY_NP = 13,_PC_AUTH_OPAQUE_NP = 14,_PC_2_SYMLINKS = 15,_PC_ALLOC_SIZE_MIN = 16,_PC_ASYNC_IO = 17,_PC_FILESIZEBITS = 18,_PC_PRIO_IO = 19,_PC_REC_INCR_XFER_SIZE = 20,_PC_REC_MAX_XFER_SIZE = 21,_PC_REC_MIN_XFER_SIZE = 22,_PC_REC_XFER_ALIGN = 23,_PC_SYMLINK_MAX = 24,_PC_SYNC_IO = 25,_PC_XATTR_SIZE_BITS = 26,_PC_MIN_HOLE_SIZE = 27,};
enum MACRO__PW {_PW_KEYBYNAME = 49,_PW_KEYBYNUM = 50,_PW_KEYBYUID = 51,};
enum MACRO__SC {_SC_ARG_MAX = 1,_SC_CHILD_MAX = 2,_SC_CLK_TCK = 3,_SC_NGROUPS_MAX = 4,_SC_OPEN_MAX = 5,_SC_JOB_CONTROL = 6,_SC_SAVED_IDS = 7,_SC_VERSION = 8,_SC_BC_BASE_MAX = 9,_SC_BC_DIM_MAX = 10,_SC_BC_SCALE_MAX = 11,_SC_BC_STRING_MAX = 12,_SC_COLL_WEIGHTS_MAX = 13,_SC_EXPR_NEST_MAX = 14,_SC_LINE_MAX = 15,_SC_RE_DUP_MAX = 16,_SC_2_VERSION = 17,_SC_2_C_BIND = 18,_SC_2_C_DEV = 19,_SC_2_CHAR_TERM = 20,_SC_2_FORT_DEV = 21,_SC_2_FORT_RUN = 22,_SC_2_LOCALEDEF = 23,_SC_2_SW_DEV = 24,_SC_2_UPE = 25,_SC_STREAM_MAX = 26,_SC_TZNAME_MAX = 27,_SC_ASYNCHRONOUS_IO = 28,_SC_PAGESIZE = 29,_SC_MEMLOCK = 30,_SC_MEMLOCK_RANGE = 31,_SC_MEMORY_PROTECTION = 32,_SC_MESSAGE_PASSING = 33,_SC_PRIORITIZED_IO = 34,_SC_PRIORITY_SCHEDULING = 35,_SC_REALTIME_SIGNALS = 36,_SC_SEMAPHORES = 37,_SC_FSYNC = 38,_SC_SHARED_MEMORY_OBJECTS = 39,_SC_SYNCHRONIZED_IO = 40,_SC_TIMERS = 41,_SC_AIO_LISTIO_MAX = 42,_SC_AIO_MAX = 43,_SC_AIO_PRIO_DELTA_MAX = 44,_SC_DELAYTIMER_MAX = 45,_SC_MQ_OPEN_MAX = 46,_SC_MAPPED_FILES = 47,_SC_RTSIG_MAX = 48,_SC_SEM_NSEMS_MAX = 49,_SC_SEM_VALUE_MAX = 50,_SC_SIGQUEUE_MAX = 51,_SC_TIMER_MAX = 52,_SC_NPROCESSORS_CONF = 57,_SC_NPROCESSORS_ONLN = 58,_SC_2_PBS = 59,_SC_2_PBS_ACCOUNTING = 60,_SC_2_PBS_CHECKPOINT = 61,_SC_2_PBS_LOCATE = 62,_SC_2_PBS_MESSAGE = 63,_SC_2_PBS_TRACK = 64,_SC_ADVISORY_INFO = 65,_SC_BARRIERS = 66,_SC_CLOCK_SELECTION = 67,_SC_CPUTIME = 68,_SC_FILE_LOCKING = 69,_SC_GETGR_R_SIZE_MAX = 70,_SC_GETPW_R_SIZE_MAX = 71,_SC_HOST_NAME_MAX = 72,_SC_LOGIN_NAME_MAX = 73,_SC_MONOTONIC_CLOCK = 74,_SC_MQ_PRIO_MAX = 75,_SC_READER_WRITER_LOCKS = 76,_SC_REGEXP = 77,_SC_SHELL = 78,_SC_SPAWN = 79,_SC_SPIN_LOCKS = 80,_SC_SPORADIC_SERVER = 81,_SC_THREAD_ATTR_STACKADDR = 82,_SC_THREAD_ATTR_STACKSIZE = 83,_SC_THREAD_CPUTIME = 84,_SC_THREAD_DESTRUCTOR_ITERATIONS = 85,_SC_THREAD_KEYS_MAX = 86,_SC_THREAD_PRIO_INHERIT = 87,_SC_THREAD_PRIO_PROTECT = 88,_SC_THREAD_PRIORITY_SCHEDULING = 89,_SC_THREAD_PROCESS_SHARED = 90,_SC_THREAD_SAFE_FUNCTIONS = 91,_SC_THREAD_SPORADIC_SERVER = 92,_SC_THREAD_STACK_MIN = 93,_SC_THREAD_THREADS_MAX = 94,_SC_TIMEOUTS = 95,_SC_THREADS = 96,_SC_TRACE = 97,_SC_TRACE_EVENT_FILTER = 98,_SC_TRACE_INHERIT = 99,_SC_TRACE_LOG = 100,_SC_TTY_NAME_MAX = 101,_SC_TYPED_MEMORY_OBJECTS = 102,_SC_V6_ILP32_OFF32 = 103,_SC_V6_ILP32_OFFBIG = 104,_SC_V6_LP64_OFF64 = 105,_SC_V6_LPBIG_OFFBIG = 106,_SC_IPV6 = 118,_SC_RAW_SOCKETS = 119,_SC_SYMLOOP_MAX = 120,_SC_ATEXIT_MAX = 107,_SC_IOV_MAX = 56,_SC_XOPEN_CRYPT = 108,_SC_XOPEN_ENH_I18N = 109,_SC_XOPEN_LEGACY = 110,_SC_XOPEN_REALTIME = 111,_SC_XOPEN_REALTIME_THREADS = 112,_SC_XOPEN_SHM = 113,_SC_XOPEN_STREAMS = 114,_SC_XOPEN_UNIX = 115,_SC_XOPEN_VERSION = 116,_SC_XOPEN_XCU_VERSION = 121,_SC_XBS5_ILP32_OFF32 = 122,_SC_XBS5_ILP32_OFFBIG = 123,_SC_XBS5_LP64_OFF64 = 124,_SC_XBS5_LPBIG_OFFBIG = 125,_SC_SS_REPL_MAX = 126,_SC_TRACE_EVENT_NAME_MAX = 127,_SC_TRACE_NAME_MAX = 128,_SC_TRACE_SYS_MAX = 129,_SC_TRACE_USER_EVENT_MAX = 130,_SC_PASS_MAX = 131,_SC_PHYS_PAGES = 200,};
enum MACRO__SS {_SS_MAXSIZE = 128,};
enum MACRO___R {__R_UNUSED = 2,};
enum MACRO_err {err_none = 0,};
enum MACRO_exc {exc_MSG_COUNT = 3,};
struct MKMapSize {double width;double height;};
enum MKMapType {MKMapTypeStandard = 0x0,MKMapTypeSatellite = 0x1,MKMapTypeHybrid = 0x2,MKMapTypeSatelliteFlyover = 0x3,MKMapTypeHybridFlyover = 0x4,MKMapTypeMutedStandard = 0x5,};
struct MPSOrigin {double x;double y;double z;};
struct NSDecimal {int _exponent : 8;unsigned int _length : 4;unsigned int _isNegative : 1;unsigned int _isCompact : 1;unsigned int _reserved : 18;unsigned short _mantissa[8];};
typedef long long NSInteger;
typedef __SecACL *SecACLRef;
typedef __SecKey *SecKeyRef;
typedef unsigned char *StringPtr;
enum UProperty {UCHAR_ALPHABETIC = 0x0,UCHAR_BINARY_START = 0x0,UCHAR_ASCII_HEX_DIGIT = 0x1,UCHAR_BIDI_CONTROL = 0x2,UCHAR_BIDI_MIRRORED = 0x3,UCHAR_DASH = 0x4,UCHAR_DEFAULT_IGNORABLE_CODE_POINT = 0x5,UCHAR_DEPRECATED = 0x6,UCHAR_DIACRITIC = 0x7,UCHAR_EXTENDER = 0x8,UCHAR_FULL_COMPOSITION_EXCLUSION = 0x9,UCHAR_GRAPHEME_BASE = 0xA,UCHAR_GRAPHEME_EXTEND = 0xB,UCHAR_GRAPHEME_LINK = 0xC,UCHAR_HEX_DIGIT = 0xD,UCHAR_HYPHEN = 0xE,UCHAR_ID_CONTINUE = 0xF,UCHAR_ID_START = 0x10,UCHAR_IDEOGRAPHIC = 0x11,UCHAR_IDS_BINARY_OPERATOR = 0x12,UCHAR_IDS_TRINARY_OPERATOR = 0x13,UCHAR_JOIN_CONTROL = 0x14,UCHAR_LOGICAL_ORDER_EXCEPTION = 0x15,UCHAR_LOWERCASE = 0x16,UCHAR_MATH = 0x17,UCHAR_NONCHARACTER_CODE_POINT = 0x18,UCHAR_QUOTATION_MARK = 0x19,UCHAR_RADICAL = 0x1A,UCHAR_SOFT_DOTTED = 0x1B,UCHAR_TERMINAL_PUNCTUATION = 0x1C,UCHAR_UNIFIED_IDEOGRAPH = 0x1D,UCHAR_UPPERCASE = 0x1E,UCHAR_WHITE_SPACE = 0x1F,UCHAR_XID_CONTINUE = 0x20,UCHAR_XID_START = 0x21,UCHAR_CASE_SENSITIVE = 0x22,UCHAR_S_TERM = 0x23,UCHAR_VARIATION_SELECTOR = 0x24,UCHAR_NFD_INERT = 0x25,UCHAR_NFKD_INERT = 0x26,UCHAR_NFC_INERT = 0x27,UCHAR_NFKC_INERT = 0x28,UCHAR_SEGMENT_STARTER = 0x29,UCHAR_PATTERN_SYNTAX = 0x2A,UCHAR_PATTERN_WHITE_SPACE = 0x2B,UCHAR_POSIX_ALNUM = 0x2C,UCHAR_POSIX_BLANK = 0x2D,UCHAR_POSIX_GRAPH = 0x2E,UCHAR_POSIX_PRINT = 0x2F,UCHAR_POSIX_XDIGIT = 0x30,UCHAR_CASED = 0x31,UCHAR_CASE_IGNORABLE = 0x32,UCHAR_CHANGES_WHEN_LOWERCASED = 0x33,UCHAR_CHANGES_WHEN_UPPERCASED = 0x34,UCHAR_CHANGES_WHEN_TITLECASED = 0x35,UCHAR_CHANGES_WHEN_CASEFOLDED = 0x36,UCHAR_CHANGES_WHEN_CASEMAPPED = 0x37,UCHAR_CHANGES_WHEN_NFKC_CASEFOLDED = 0x38,UCHAR_EMOJI = 0x39,UCHAR_EMOJI_PRESENTATION = 0x3A,UCHAR_EMOJI_MODIFIER = 0x3B,UCHAR_EMOJI_MODIFIER_BASE = 0x3C,UCHAR_EMOJI_COMPONENT = 0x3D,UCHAR_REGIONAL_INDICATOR = 0x3E,UCHAR_PREPENDED_CONCATENATION_MARK = 0x3F,UCHAR_EXTENDED_PICTOGRAPHIC = 0x40,UCHAR_BINARY_LIMIT = 0x41,UCHAR_BIDI_CLASS = 0x1000,UCHAR_INT_START = 0x1000,UCHAR_BLOCK = 0x1001,UCHAR_CANONICAL_COMBINING_CLASS = 0x1002,UCHAR_DECOMPOSITION_TYPE = 0x1003,UCHAR_EAST_ASIAN_WIDTH = 0x1004,UCHAR_GENERAL_CATEGORY = 0x1005,UCHAR_JOINING_GROUP = 0x1006,UCHAR_JOINING_TYPE = 0x1007,UCHAR_LINE_BREAK = 0x1008,UCHAR_NUMERIC_TYPE = 0x1009,UCHAR_SCRIPT = 0x100A,UCHAR_HANGUL_SYLLABLE_TYPE = 0x100B,UCHAR_NFD_QUICK_CHECK = 0x100C,UCHAR_NFKD_QUICK_CHECK = 0x100D,UCHAR_NFC_QUICK_CHECK = 0x100E,UCHAR_NFKC_QUICK_CHECK = 0x100F,UCHAR_LEAD_CANONICAL_COMBINING_CLASS = 0x1010,UCHAR_TRAIL_CANONICAL_COMBINING_CLASS = 0x1011,UCHAR_GRAPHEME_CLUSTER_BREAK = 0x1012,UCHAR_SENTENCE_BREAK = 0x1013,UCHAR_WORD_BREAK = 0x1014,UCHAR_BIDI_PAIRED_BRACKET_TYPE = 0x1015,UCHAR_INDIC_POSITIONAL_CATEGORY = 0x1016,UCHAR_INDIC_SYLLABIC_CATEGORY = 0x1017,UCHAR_VERTICAL_ORIENTATION = 0x1018,UCHAR_INT_LIMIT = 0x1019,UCHAR_GENERAL_CATEGORY_MASK = 0x2000,UCHAR_MASK_START = 0x2000,UCHAR_MASK_LIMIT = 0x2001,UCHAR_NUMERIC_VALUE = 0x3000,UCHAR_DOUBLE_START = 0x3000,UCHAR_DOUBLE_LIMIT = 0x3001,UCHAR_AGE = 0x4000,UCHAR_STRING_START = 0x4000,UCHAR_BIDI_MIRRORING_GLYPH = 0x4001,UCHAR_CASE_FOLDING = 0x4002,UCHAR_ISO_COMMENT = 0x4003,UCHAR_LOWERCASE_MAPPING = 0x4004,UCHAR_NAME = 0x4005,UCHAR_SIMPLE_CASE_FOLDING = 0x4006,UCHAR_SIMPLE_LOWERCASE_MAPPING = 0x4007,UCHAR_SIMPLE_TITLECASE_MAPPING = 0x4008,UCHAR_SIMPLE_UPPERCASE_MAPPING = 0x4009,UCHAR_TITLECASE_MAPPING = 0x400A,UCHAR_UNICODE_1_NAME = 0x400B,UCHAR_UPPERCASE_MAPPING = 0x400C,UCHAR_BIDI_PAIRED_BRACKET = 0x400D,UCHAR_STRING_LIMIT = 0x400E,UCHAR_SCRIPT_EXTENSIONS = 0x7000,UCHAR_OTHER_PROPERTY_START = 0x7000,UCHAR_OTHER_PROPERTY_LIMIT = 0x7001,UCHAR_INVALID_CODE = 0xFFFFFFFF,};
typedef float VNDegrees;
enum XML_Error {XML_ERROR_NONE = 0x0,XML_ERROR_NO_MEMORY = 0x1,XML_ERROR_SYNTAX = 0x2,XML_ERROR_NO_ELEMENTS = 0x3,XML_ERROR_INVALID_TOKEN = 0x4,XML_ERROR_UNCLOSED_TOKEN = 0x5,XML_ERROR_PARTIAL_CHAR = 0x6,XML_ERROR_TAG_MISMATCH = 0x7,XML_ERROR_DUPLICATE_ATTRIBUTE = 0x8,XML_ERROR_JUNK_AFTER_DOC_ELEMENT = 0x9,XML_ERROR_PARAM_ENTITY_REF = 0xA,XML_ERROR_UNDEFINED_ENTITY = 0xB,XML_ERROR_RECURSIVE_ENTITY_REF = 0xC,XML_ERROR_ASYNC_ENTITY = 0xD,XML_ERROR_BAD_CHAR_REF = 0xE,XML_ERROR_BINARY_ENTITY_REF = 0xF,XML_ERROR_ATTRIBUTE_EXTERNAL_ENTITY_REF = 0x10,XML_ERROR_MISPLACED_XML_PI = 0x11,XML_ERROR_UNKNOWN_ENCODING = 0x12,XML_ERROR_INCORRECT_ENCODING = 0x13,XML_ERROR_UNCLOSED_CDATA_SECTION = 0x14,XML_ERROR_EXTERNAL_ENTITY_HANDLING = 0x15,XML_ERROR_NOT_STANDALONE = 0x16,XML_ERROR_UNEXPECTED_STATE = 0x17,XML_ERROR_ENTITY_DECLARED_IN_PE = 0x18,XML_ERROR_FEATURE_REQUIRES_XML_DTD = 0x19,XML_ERROR_CANT_CHANGE_FEATURE_ONCE_PARSING = 0x1A,XML_ERROR_UNBOUND_PREFIX = 0x1B,XML_ERROR_UNDECLARING_PREFIX = 0x1C,XML_ERROR_INCOMPLETE_PE = 0x1D,XML_ERROR_XML_DECL = 0x1E,XML_ERROR_TEXT_DECL = 0x1F,XML_ERROR_PUBLICID = 0x20,XML_ERROR_SUSPENDED = 0x21,XML_ERROR_NOT_SUSPENDED = 0x22,XML_ERROR_ABORTED = 0x23,XML_ERROR_FINISHED = 0x24,XML_ERROR_SUSPEND_PE = 0x25,XML_ERROR_RESERVED_PREFIX_XML = 0x26,XML_ERROR_RESERVED_PREFIX_XMLNS = 0x27,XML_ERROR_RESERVED_NAMESPACE_URI = 0x28,XML_ERROR_INVALID_ARGUMENT = 0x29,};
typedef long long XML_Index;
typedef char XML_LChar;
struct __CFArray;
struct __CFError;
struct __CTFrame;
struct __double2 {double __sinval;double __cosval;};
typedef short __int16_t;
typedef int __int32_t;
typedef long long __int64_t;
enum __ns_flag {ns_f_qr = 0x0,ns_f_opcode = 0x1,ns_f_aa = 0x2,ns_f_tc = 0x3,ns_f_rd = 0x4,ns_f_ra = 0x5,ns_f_z = 0x6,ns_f_ad = 0x7,ns_f_cd = 0x8,ns_f_rcode = 0x9,ns_f_max = 0xA,};
enum __ns_sect {ns_s_qd = 0x0,ns_s_zn = 0x0,ns_s_an = 0x1,ns_s_pr = 0x1,ns_s_ns = 0x2,ns_s_ud = 0x2,ns_s_ar = 0x3,ns_s_max = 0x4,};
enum __ns_type {ns_t_invalid = 0x0,ns_t_a = 0x1,ns_t_ns = 0x2,ns_t_md = 0x3,ns_t_mf = 0x4,ns_t_cname = 0x5,ns_t_soa = 0x6,ns_t_mb = 0x7,ns_t_mg = 0x8,ns_t_mr = 0x9,ns_t_null = 0xA,ns_t_wks = 0xB,ns_t_ptr = 0xC,ns_t_hinfo = 0xD,ns_t_minfo = 0xE,ns_t_mx = 0xF,ns_t_txt = 0x10,ns_t_rp = 0x11,ns_t_afsdb = 0x12,ns_t_x25 = 0x13,ns_t_isdn = 0x14,ns_t_rt = 0x15,ns_t_nsap = 0x16,ns_t_nsap_ptr = 0x17,ns_t_sig = 0x18,ns_t_key = 0x19,ns_t_px = 0x1A,ns_t_gpos = 0x1B,ns_t_aaaa = 0x1C,ns_t_loc = 0x1D,ns_t_nxt = 0x1E,ns_t_eid = 0x1F,ns_t_nimloc = 0x20,ns_t_srv = 0x21,ns_t_atma = 0x22,ns_t_naptr = 0x23,ns_t_kx = 0x24,ns_t_cert = 0x25,ns_t_a6 = 0x26,ns_t_dname = 0x27,ns_t_sink = 0x28,ns_t_opt = 0x29,ns_t_tkey = 0xF9,ns_t_tsig = 0xFA,ns_t_ixfr = 0xFB,ns_t_axfr = 0xFC,ns_t_mailb = 0xFD,ns_t_maila = 0xFE,ns_t_any = 0xFF,ns_t_zxfr = 0x100,ns_t_max = 0x10000,};
typedef unsigned char __uint8_t;
struct _xmlMutex;
enum acl_tag_t {ACL_UNDEFINED_TAG = 0x0,ACL_EXTENDED_ALLOW = 0x1,ACL_EXTENDED_DENY = 0x2,};
typedef au_mask au_mask_t;
typedef audit_stat au_stat_t;
enum auth_stat {AUTH_OK = 0x0,AUTH_BADCRED = 0x1,AUTH_REJECTEDCRED = 0x2,AUTH_BADVERF = 0x3,AUTH_REJECTEDVERF = 0x4,AUTH_TOOWEAK = 0x5,AUTH_INVALIDRESP = 0x6,AUTH_FAILED = 0x7,};
typedef int boolean_t;
typedef char *bp_path_t;
struct bz_stream {char *next_in;unsigned int avail_in;unsigned int total_in_lo32;unsigned int total_in_hi32;char *next_out;unsigned int avail_out;unsigned int total_out_lo32;unsigned int total_out_hi32;void *state;void *(*bzalloc)(void *, int, int);void (*bzfree)(void *, void *);void *opaque;};
enum clnt_stat {RPC_SUCCESS = 0x0,RPC_CANTENCODEARGS = 0x1,RPC_CANTDECODERES = 0x2,RPC_CANTSEND = 0x3,RPC_CANTRECV = 0x4,RPC_TIMEDOUT = 0x5,RPC_VERSMISMATCH = 0x6,RPC_AUTHERROR = 0x7,RPC_PROGUNAVAIL = 0x8,RPC_PROGVERSMISMATCH = 0x9,RPC_PROCUNAVAIL = 0xA,RPC_CANTDECODEARGS = 0xB,RPC_SYSTEMERROR = 0xC,RPC_UNKNOWNHOST = 0xD,RPC_UNKNOWNPROTO = 0x11,RPC_PMAPFAILURE = 0xE,RPC_PROGNOTREGISTERED = 0xF,RPC_FAILED = 0x10,};
enum clockid_t {_CLOCK_REALTIME = 0x0,_CLOCK_MONOTONIC = 0x6,_CLOCK_MONOTONIC_RAW = 0x4,_CLOCK_MONOTONIC_RAW_APPROX = 0x5,_CLOCK_UPTIME_RAW = 0x8,_CLOCK_UPTIME_RAW_APPROX = 0x9,_CLOCK_PROCESS_CPUTIME_ID = 0xC,_CLOCK_THREAD_CPUTIME_ID = 0x10,};
struct clockinfo {int hz;int tick;int tickadj;int stathz;int profhz;};
typedef unsigned short fexcept_t;
typedef fhandle fhandle_t;
typedef _filesec *filesec_t;
typedef short float16_t;
typedef float float32_t;
typedef double float64_t;
typedef gz_header_s gz_header;
struct inpcbinfo;
struct inpcbport;
union __attribute__((aligned(8))) int16x4_t {char i8[8];short i16[4];int i32[2];unsigned char u8[8];unsigned short u16[4];unsigned int u32[2];};
union __attribute__((aligned(16))) int16x8_t {char i8[16];short i16[8];int i32[4];long long i64[2];unsigned char u8[16];unsigned short u16[8];unsigned int u32[4];unsigned long long u64[2];};
union __attribute__((aligned(8))) int32x2_t {char i8[8];short i16[4];int i32[2];unsigned char u8[8];unsigned short u16[4];unsigned int u32[2];};
union __attribute__((aligned(16))) int32x4_t {char i8[16];short i16[8];int i32[4];long long i64[2];unsigned char u8[16];unsigned short u16[8];unsigned int u32[4];unsigned long long u64[2];};
union __attribute__((aligned(8))) int64x1_t {char i8[8];short i16[4];int i32[2];unsigned char u8[8];unsigned short u16[4];unsigned int u32[2];};
union __attribute__((aligned(16))) int64x2_t {char i8[16];short i16[8];int i32[4];long long i64[2];unsigned char u8[16];unsigned short u16[8];unsigned int u32[4];unsigned long long u64[2];};
union __attribute__((aligned(16))) int8x16_t {char i8[16];short i16[8];int i32[4];long long i64[2];unsigned char u8[16];unsigned short u16[8];unsigned int u32[4];unsigned long long u64[2];};
typedef int integer_t;
struct ip_addr_t {char net;char host;char lh;char impno;};
enum klm_stats {klm_granted = 0x0,klm_denied = 0x1,klm_denied_nolocks = 0x2,klm_working = 0x3,};
typedef unsigned long long la_hint_t;
typedef unsigned long long la_norm_t;
typedef void *marg_list;
typedef mountbody *mountlist;
typedef unsigned long long msgqnum_t;
enum nlm_stats {nlm_granted = 0x0,nlm_denied = 0x1,nlm_denied_nolocks = 0x2,nlm_blocked = 0x3,nlm_denied_grace_period = 0x4,nlm_deadlck = 0x5,};
typedef NSObject *nw_path_t;
struct objc_ivar;
union __attribute__((aligned(8))) poly8x8_t {char i8[8];short i16[4];int i32[2];unsigned char u8[8];unsigned short u16[4];unsigned int u32[2];};
typedef long long ptrdiff_t;
typedef rb_node rb_node_t;
typedef rb_tree rb_tree_t;
struct res_9_sym {int number; char *name; char *humanname;};
typedef __siginfo siginfo_t;
typedef char simd_bool;
typedef int simd_int1;
union __attribute__((aligned(8))) simd_int2 {char i8[8];short i16[4];int i32[2];unsigned char u8[8];unsigned short u16[4];unsigned int u32[2];};
union __attribute__((aligned(16))) simd_int3 {char i8[16];short i16[8];int i32[4];long long i64[2];unsigned char u8[16];unsigned short u16[8];unsigned int u32[4];unsigned long long u64[2];};
union __attribute__((aligned(16))) simd_int4 {char i8[16];short i16[8];int i32[4];long long i64[2];unsigned char u8[16];unsigned short u16[8];unsigned int u32[4];unsigned long long u64[2];};
union __attribute__((aligned(16))) simd_int8 {char i8[32];short i16[16];int i32[8];long long i64[4];__int128 i128[2];unsigned char u8[32];unsigned short u16[16];unsigned int u32[8];unsigned long long u64[4];__uint128 u128[2];};
struct sm_status {char *mon_name;int state;char priv[16];};
struct stat_chge {char *mon_name;int state;};
struct tseg_qent;
typedef unsigned short u_int16_t;
typedef unsigned int u_int32_t;
typedef unsigned long long u_int64_t;
union __attribute__((aligned(8))) uint8x8_t {char i8[8];short i16[4];int i32[2];unsigned char u8[8];unsigned short u16[4];unsigned int u32[2];};
typedef unsigned long long uintmax_t;
typedef unsigned long long uintptr_t;
typedef int vm_prot_t;
typedef unsigned int vm_sync_t;
enum xlinkShow {XLINK_SHOW_NONE = 0x0,XLINK_SHOW_NEW = 0x1,XLINK_SHOW_EMBED = 0x2,XLINK_SHOW_REPLACE = 0x3,};
enum xlinkType {XLINK_TYPE_NONE = 0x0,XLINK_TYPE_SIMPLE = 0x1,XLINK_TYPE_EXTENDED = 0x2,XLINK_TYPE_EXTENDED_SET = 0x3,};
typedef _xmlBuffer xmlBuffer;
typedef _xmlEntity xmlEntity;
typedef struct _xmlModule xmlModule;
typedef struct _xmlRMutex xmlRMutex;
typedef struct _xmlRegexp xmlRegexp;
typedef _xmlSchema xmlSchema;
enum xprt_stat {XPRT_DIED = 0x0,XPRT_MOREREQS = 0x1,XPRT_IDLE = 0x2,};
enum ypreqtype {YPREQ_KEY = 0x1,YPREQ_NOKEY = 0x2,YPREQ_MAP_PARMS = 0x3,};
enum ypxfrstat {YPXFR_SUCC = 0x1,YPXFR_AGE = 0x2,YPXFR_NOMAP = 0xFFFFFFFF,YPXFR_NODOM = 0xFFFFFFFE,YPXFR_RSRC = 0xFFFFFFFD,YPXFR_RPC = 0xFFFFFFFC,YPXFR_MADDR = 0xFFFFFFFB,YPXFR_YPERR = 0xFFFFFFFA,YPXFR_BADARGS = 0xFFFFFFF9,YPXFR_DBM = 0xFFFFFFF8,YPXFR_FILE = 0xFFFFFFF7,YPXFR_SKEW = 0xFFFFFFF6,YPXFR_CLEAR = 0xFFFFFFF5,YPXFR_FORCE = 0xFFFFFFF4,YPXFR_XFRERR = 0xFFFFFFF3,YPXFR_REFUSED = 0xFFFFFFF2,};
struct zone_name {char zn_name[80];};
typedef AAHeader_impl *AAHeader;
enum ADAdType {ADAdTypeBanner = 0x0,ADAdTypeMediumRectangle = 0x1,};
typedef float ALCfloat;
typedef short ALCshort;
typedef int ALCsizei;
typedef unsigned char ALCubyte;
typedef double ALdouble;
typedef unsigned short ALushort;
typedef void (*BNNSFree)(void *);
typedef  __CFBag *CFBagRef;
typedef  __CFSet *CFSetRef;
typedef unsigned long long CFTypeID;
typedef  __CFURL *CFURLRef;
enum CGPDFBox {kCGPDFMediaBox = 0x0,kCGPDFCropBox = 0x1,kCGPDFBleedBox = 0x2,kCGPDFTrimBox = 0x3,kCGPDFArtBox = 0x4,};
typedef int CIFormat;
typedef  __CTRun *CTRunRef;
typedef objc_category *Category;
enum ENStatus {ENStatusUnknown = 0x0,ENStatusActive = 0x1,ENStatusDisabled = 0x2,ENStatusBluetoothOff = 0x3,ENStatusRestricted = 0x4,ENStatusPaused = 0x5,ENStatusUnauthorized = 0x6,};
typedef int FFTRadix;
typedef OpaqueFFTSetup *FFTSetup;
typedef float GLclampf;
struct IUnknown {IUnknown_vtbl *__vftable ;};
struct JSScript;
enum LAPolicy {LAPolicyDeviceOwnerAuthenticationWithBiometrics = 0x1,LAPolicyDeviceOwnerAuthentication = 0x2,LAPolicyDeviceOwnerAuthenticationWithWatch = 0x3,LAPolicyDeviceOwnerAuthenticationWithBiometricsOrWatch = 0x4,};
enum MACRO_AF {AF_UNSPEC = 0,AF_UNIX = 1,AF_INET = 2,AF_IMPLINK = 3,AF_PUP = 4,AF_CHAOS = 5,AF_NS = 6,AF_ISO = 7,AF_ECMA = 8,AF_DATAKIT = 9,AF_CCITT = 10,AF_SNA = 11,AF_DECnet = 12,AF_DLI = 13,AF_LAT = 14,AF_HYLINK = 15,AF_APPLETALK = 16,AF_ROUTE = 17,AF_LINK = 18,};
enum MACRO_AI {AI_PASSIVE = 0x1,AI_CANONNAME = 0x2,AI_NUMERICHOST = 0x4,AI_NUMERICSERV = 0x1000,AI_ALL = 0x100,AI_V4MAPPED_CFG = 0x200,AI_ADDRCONFIG = 0x400,AI_V4MAPPED = 0x800,AI_UNUSABLE = 0x10000000,};
enum MACRO_AL {AL_INVALID = -1,AL_NONE = 0,AL_FALSE = 0,AL_TRUE = 1,AL_SOURCE_RELATIVE = 514,AL_CONE_INNER_ANGLE = 4097,AL_CONE_OUTER_ANGLE = 4098,AL_PITCH = 4099,AL_POSITION = 4100,AL_DIRECTION = 4101,AL_VELOCITY = 4102,AL_LOOPING = 4103,AL_BUFFER = 4105,AL_GAIN = 4106,AL_MIN_GAIN = 4109,AL_MAX_GAIN = 4110,AL_ORIENTATION = 4111,AL_SOURCE_STATE = 4112,AL_INITIAL = 4113,AL_PLAYING = 4114,AL_PAUSED = 4115,AL_STOPPED = 4116,AL_BUFFERS_QUEUED = 4117,AL_BUFFERS_PROCESSED = 4118,AL_SEC_OFFSET = 4132,AL_SAMPLE_OFFSET = 4133,AL_BYTE_OFFSET = 4134,AL_SOURCE_TYPE = 4135,AL_STATIC = 4136,AL_STREAMING = 4137,AL_UNDETERMINED = 4144,AL_FORMAT_MONO8 = 4352,AL_FORMAT_MONO16 = 4353,AL_FORMAT_STEREO8 = 4354,AL_FORMAT_STEREO16 = 4355,AL_REFERENCE_DISTANCE = 4128,AL_ROLLOFF_FACTOR = 4129,AL_CONE_OUTER_GAIN = 4130,AL_MAX_DISTANCE = 4131,AL_FREQUENCY = 8193,AL_BITS = 8194,AL_CHANNELS = 8195,AL_SIZE = 8196,AL_UNUSED = 8208,AL_PENDING = 8209,AL_PROCESSED = 8210,AL_INVALID_NAME = 40961,AL_INVALID_ENUM = 40962,AL_INVALID_VALUE = 40963,AL_INVALID_OPERATION = 40964,AL_OUT_OF_MEMORY = 40965,AL_VENDOR = 45057,AL_VERSION = 45058,AL_RENDERER = 45059,AL_EXTENSIONS = 45060,AL_DOPPLER_FACTOR = 49152,AL_DOPPLER_VELOCITY = 49153,AL_SPEED_OF_SOUND = 49155,AL_DISTANCE_MODEL = 53248,AL_INVERSE_DISTANCE = 53249,AL_INVERSE_DISTANCE_CLAMPED = 53250,AL_LINEAR_DISTANCE = 53251,AL_LINEAR_DISTANCE_CLAMPED = 53252,AL_EXPONENT_DISTANCE = 53253,AL_EXPONENT_DISTANCE_CLAMPED = 53254,};
enum MACRO_AQ {AQ_HIWATER = 100,AQ_MAXHIGH = 10000,AQ_LOWATER = 10,AQ_MAXBUFSZ = 1048576,};
enum MACRO_AT {AT_FDCWD = -2,AT_EACCESS = 16,AT_SYMLINK_NOFOLLOW = 32,AT_SYMLINK_FOLLOW = 64,AT_REMOVEDIR = 128,AT_REALDEV = 512,AT_FDONLY = 1024,};
enum MACRO_AU {AU_DEFAUDITID = 4294967295,AU_DEFAUDITSID = 0,AU_ASSIGN_ASID = -1,};
enum MACRO_B0 {B0 = 0,B50 = 50,};
enum MACRO_BC {BC_BASE_MAX = 99,BC_DIM_MAX = 2048,BC_SCALE_MAX = 99,BC_STRING_MAX = 1000,};
enum MACRO_BZ {BZ_RUN = 0,BZ_FLUSH = 1,BZ_FINISH = 2,BZ_OK = 0,BZ_RUN_OK = 1,BZ_FLUSH_OK = 2,BZ_FINISH_OK = 3,BZ_STREAM_END = 4,BZ_SEQUENCE_ERROR = -1,BZ_PARAM_ERROR = -2,BZ_MEM_ERROR = -3,BZ_DATA_ERROR = -4,BZ_DATA_ERROR_MAGIC = -5,BZ_IO_ERROR = -6,BZ_UNEXPECTED_EOF = -7,BZ_OUTBUFF_FULL = -8,BZ_CONFIG_ERROR = -9,BZ_MAX_UNUSED = 5000,};
enum MACRO_CA {CA_PREFER_FIXED_POINT = 1,};
enum MACRO_CC {CC_MD2_DIGEST_LENGTH = 16,CC_MD2_BLOCK_BYTES = 64,CC_MD4_DIGEST_LENGTH = 16,CC_MD4_BLOCK_BYTES = 64,CC_MD5_DIGEST_LENGTH = 16,CC_MD5_BLOCK_BYTES = 64,CC_SHA1_DIGEST_LENGTH = 20,CC_SHA1_BLOCK_BYTES = 64,CC_SHA224_DIGEST_LENGTH = 28,CC_SHA224_BLOCK_BYTES = 64,CC_SHA256_DIGEST_LENGTH = 32,CC_SHA256_BLOCK_BYTES = 64,CC_SHA384_DIGEST_LENGTH = 48,CC_SHA384_BLOCK_BYTES = 128,CC_SHA512_DIGEST_LENGTH = 64,CC_SHA512_BLOCK_BYTES = 128,CC_HMAC_CONTEXT_SIZE = 96,};
enum MACRO_CF {CF_USE_OSBYTEORDER_H = 1,};
enum MACRO_CG {CG_HDR_BT_2100 = 1,};
enum MACRO_DB {DB_LOCK = 0x20000000,DB_SHMEM = 0x40000000,DB_TXN = 0x80000000,};
enum MACRO_DT {DT_UNKNOWN = 0,DT_FIFO = 1,DT_CHR = 2,DT_DIR = 4,DT_BLK = 6,DT_REG = 8,DT_LNK = 10,DT_SOCK = 12,DT_WHT = 14,};
enum MACRO_EF {EF_MAY_SHARE_BLOCKS = 0x1,EF_NO_XATTRS = 0x2,EF_IS_SYNC_ROOT = 0x4,EF_IS_PURGEABLE = 0x8,EF_IS_SPARSE = 0x10,};
enum MACRO_EN {EN_FEATURE_GENERAL = 1,};
enum MACRO_EV {EV_ADD = 0x1,EV_DELETE = 0x2,EV_ENABLE = 0x4,EV_DISABLE = 0x8,EV_ONESHOT = 0x10,EV_CLEAR = 0x20,EV_RECEIPT = 0x40,EV_DISPATCH = 0x80,EV_UDATA_SPECIFIC = 0x100,EV_VANISHED = 0x200,EV_SYSFLAGS = 0xF000,EV_FLAG0 = 0x1000,EV_FLAG1 = 0x2000,EV_EOF = 0x8000,EV_ERROR = 0x4000,};
enum MACRO_EX {EX_OK = 0,EX__BASE = 64,EX_USAGE = 64,EX_DATAERR = 65,EX_NOINPUT = 66,EX_NOUSER = 67,EX_NOHOST = 68,EX_UNAVAILABLE = 69,EX_SOFTWARE = 70,EX_OSERR = 71,EX_OSFILE = 72,EX_CANTCREAT = 73,EX_IOERR = 74,EX_TEMPFAIL = 75,EX_PROTOCOL = 76,EX_NOPERM = 77,EX_CONFIG = 78,EX__MAX = 78,};
enum MACRO_FE {FE_INEXACT = 0x10,FE_UNDERFLOW = 0x8,FE_OVERFLOW = 0x4,FE_DIVBYZERO = 0x2,FE_INVALID = 0x1,FE_FLUSHTOZERO = 0x80,FE_ALL_EXCEPT = 0x9F,FE_TONEAREST = 0x0,FE_UPWARD = 0x400000,FE_DOWNWARD = 0x800000,FE_TOWARDZERO = 0xC00000,};
enum MACRO_FP {FP_NAN = 1,FP_INFINITE = 2,FP_ZERO = 3,FP_NORMAL = 4,FP_SUBNORMAL = 5,FP_SUPERNORMAL = 6,FP_FAST_FMA = 1,FP_FAST_FMAF = 1,FP_FAST_FMAL = 1,FP_ILOGB0 = -2147483648,FP_ILOGBNAN = -2147483648,};
enum MACRO_GK {GK_VERSION = 92000000,OS_LOCK_API_VERSION = 20160309,};
enum MACRO_GL {GL_ES_VERSION_2_0 = 1,GL_DEPTH_BUFFER_BIT = 256,GL_STENCIL_BUFFER_BIT = 1024,GL_COLOR_BUFFER_BIT = 16384,GL_FALSE = 0,GL_TRUE = 1,GL_POINTS = 0,GL_LINES = 1,GL_LINE_LOOP = 2,GL_LINE_STRIP = 3,GL_TRIANGLES = 4,GL_TRIANGLE_STRIP = 5,GL_TRIANGLE_FAN = 6,GL_ZERO = 0,GL_ONE = 1,GL_SRC_COLOR = 768,GL_ONE_MINUS_SRC_COLOR = 769,GL_SRC_ALPHA = 770,GL_ONE_MINUS_SRC_ALPHA = 771,GL_DST_ALPHA = 772,GL_ONE_MINUS_DST_ALPHA = 773,GL_DST_COLOR = 774,GL_ONE_MINUS_DST_COLOR = 775,GL_SRC_ALPHA_SATURATE = 776,GL_FUNC_ADD = 32774,GL_BLEND_EQUATION = 32777,GL_BLEND_EQUATION_RGB = 32777,GL_BLEND_EQUATION_ALPHA = 34877,GL_FUNC_SUBTRACT = 32778,GL_FUNC_REVERSE_SUBTRACT = 32779,GL_BLEND_DST_RGB = 32968,GL_BLEND_SRC_RGB = 32969,GL_BLEND_DST_ALPHA = 32970,GL_BLEND_SRC_ALPHA = 32971,GL_CONSTANT_COLOR = 32769,GL_ONE_MINUS_CONSTANT_COLOR = 32770,GL_CONSTANT_ALPHA = 32771,GL_ONE_MINUS_CONSTANT_ALPHA = 32772,GL_BLEND_COLOR = 32773,GL_ARRAY_BUFFER = 34962,GL_ELEMENT_ARRAY_BUFFER = 34963,GL_ARRAY_BUFFER_BINDING = 34964,GL_ELEMENT_ARRAY_BUFFER_BINDING = 34965,GL_STREAM_DRAW = 35040,GL_STATIC_DRAW = 35044,GL_DYNAMIC_DRAW = 35048,GL_BUFFER_SIZE = 34660,GL_BUFFER_USAGE = 34661,GL_CURRENT_VERTEX_ATTRIB = 34342,GL_FRONT = 1028,GL_BACK = 1029,GL_FRONT_AND_BACK = 1032,GL_TEXTURE_2D = 3553,GL_CULL_FACE = 2884,GL_BLEND = 3042,GL_DITHER = 3024,GL_STENCIL_TEST = 2960,GL_DEPTH_TEST = 2929,GL_SCISSOR_TEST = 3089,GL_POLYGON_OFFSET_FILL = 32823,GL_SAMPLE_ALPHA_TO_COVERAGE = 32926,GL_SAMPLE_COVERAGE = 32928,GL_NO_ERROR = 0,GL_INVALID_ENUM = 1280,GL_INVALID_VALUE = 1281,GL_INVALID_OPERATION = 1282,GL_OUT_OF_MEMORY = 1285,GL_CW = 2304,GL_CCW = 2305,GL_LINE_WIDTH = 2849,GL_ALIASED_POINT_SIZE_RANGE = 33901,GL_ALIASED_LINE_WIDTH_RANGE = 33902,GL_CULL_FACE_MODE = 2885,GL_FRONT_FACE = 2886,GL_DEPTH_RANGE = 2928,GL_DEPTH_WRITEMASK = 2930,GL_DEPTH_CLEAR_VALUE = 2931,GL_DEPTH_FUNC = 2932,GL_STENCIL_CLEAR_VALUE = 2961,GL_STENCIL_FUNC = 2962,GL_STENCIL_FAIL = 2964,GL_STENCIL_PASS_DEPTH_FAIL = 2965,GL_STENCIL_PASS_DEPTH_PASS = 2966,GL_STENCIL_REF = 2967,GL_STENCIL_VALUE_MASK = 2963,GL_STENCIL_WRITEMASK = 2968,GL_STENCIL_BACK_FUNC = 34816,GL_STENCIL_BACK_FAIL = 34817,GL_STENCIL_BACK_PASS_DEPTH_FAIL = 34818,GL_STENCIL_BACK_PASS_DEPTH_PASS = 34819,GL_STENCIL_BACK_REF = 36003,GL_STENCIL_BACK_VALUE_MASK = 36004,GL_STENCIL_BACK_WRITEMASK = 36005,GL_VIEWPORT = 2978,GL_SCISSOR_BOX = 3088,GL_COLOR_CLEAR_VALUE = 3106,GL_COLOR_WRITEMASK = 3107,GL_UNPACK_ALIGNMENT = 3317,GL_PACK_ALIGNMENT = 3333,GL_MAX_TEXTURE_SIZE = 3379,GL_MAX_VIEWPORT_DIMS = 3386,GL_SUBPIXEL_BITS = 3408,GL_RED_BITS = 3410,GL_GREEN_BITS = 3411,GL_BLUE_BITS = 3412,GL_ALPHA_BITS = 3413,GL_DEPTH_BITS = 3414,GL_STENCIL_BITS = 3415,GL_POLYGON_OFFSET_UNITS = 10752,GL_POLYGON_OFFSET_FACTOR = 32824,GL_TEXTURE_BINDING_2D = 32873,GL_SAMPLE_BUFFERS = 32936,GL_SAMPLES = 32937,GL_SAMPLE_COVERAGE_VALUE = 32938,GL_SAMPLE_COVERAGE_INVERT = 32939,GL_NUM_COMPRESSED_TEXTURE_FORMATS = 34466,GL_COMPRESSED_TEXTURE_FORMATS = 34467,GL_DONT_CARE = 4352,GL_FASTEST = 4353,GL_NICEST = 4354,GL_GENERATE_MIPMAP_HINT = 33170,GL_BYTE = 5120,GL_UNSIGNED_BYTE = 5121,GL_SHORT = 5122,GL_UNSIGNED_SHORT = 5123,GL_INT = 5124,GL_UNSIGNED_INT = 5125,GL_FLOAT = 5126,GL_FIXED = 5132,GL_DEPTH_COMPONENT = 6402,GL_ALPHA = 6406,GL_RGB = 6407,GL_RGBA = 6408,GL_LUMINANCE = 6409,GL_LUMINANCE_ALPHA = 6410,GL_UNSIGNED_SHORT_4_4_4_4 = 32819,GL_UNSIGNED_SHORT_5_5_5_1 = 32820,GL_UNSIGNED_SHORT_5_6_5 = 33635,GL_FRAGMENT_SHADER = 35632,GL_VERTEX_SHADER = 35633,GL_MAX_VERTEX_ATTRIBS = 34921,GL_MAX_VERTEX_UNIFORM_VECTORS = 36347,GL_MAX_VARYING_VECTORS = 36348,GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS = 35661,GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS = 35660,GL_MAX_TEXTURE_IMAGE_UNITS = 34930,GL_MAX_FRAGMENT_UNIFORM_VECTORS = 36349,GL_SHADER_TYPE = 35663,GL_DELETE_STATUS = 35712,GL_LINK_STATUS = 35714,GL_VALIDATE_STATUS = 35715,GL_ATTACHED_SHADERS = 35717,GL_ACTIVE_UNIFORMS = 35718,GL_ACTIVE_UNIFORM_MAX_LENGTH = 35719,GL_ACTIVE_ATTRIBUTES = 35721,GL_ACTIVE_ATTRIBUTE_MAX_LENGTH = 35722,GL_SHADING_LANGUAGE_VERSION = 35724,GL_CURRENT_PROGRAM = 35725,GL_NEVER = 512,GL_LESS = 513,GL_EQUAL = 514,GL_LEQUAL = 515,GL_GREATER = 516,GL_NOTEQUAL = 517,GL_GEQUAL = 518,GL_ALWAYS = 519,GL_KEEP = 7680,GL_REPLACE = 7681,GL_INCR = 7682,GL_DECR = 7683,GL_INVERT = 5386,GL_INCR_WRAP = 34055,GL_DECR_WRAP = 34056,GL_VENDOR = 7936,GL_RENDERER = 7937,GL_VERSION = 7938,GL_EXTENSIONS = 7939,GL_NEAREST = 9728,GL_LINEAR = 9729,GL_NEAREST_MIPMAP_NEAREST = 9984,GL_LINEAR_MIPMAP_NEAREST = 9985,GL_NEAREST_MIPMAP_LINEAR = 9986,GL_LINEAR_MIPMAP_LINEAR = 9987,GL_TEXTURE_MAG_FILTER = 10240,GL_TEXTURE_MIN_FILTER = 10241,GL_TEXTURE_WRAP_S = 10242,GL_TEXTURE_WRAP_T = 10243,GL_TEXTURE = 5890,GL_TEXTURE_CUBE_MAP = 34067,GL_TEXTURE_BINDING_CUBE_MAP = 34068,GL_TEXTURE_CUBE_MAP_POSITIVE_X = 34069,GL_TEXTURE_CUBE_MAP_NEGATIVE_X = 34070,GL_TEXTURE_CUBE_MAP_POSITIVE_Y = 34071,GL_TEXTURE_CUBE_MAP_NEGATIVE_Y = 34072,GL_TEXTURE_CUBE_MAP_POSITIVE_Z = 34073,GL_TEXTURE_CUBE_MAP_NEGATIVE_Z = 34074,GL_MAX_CUBE_MAP_TEXTURE_SIZE = 34076,GL_TEXTURE0 = 33984,GL_TEXTURE1 = 33985,GL_TEXTURE2 = 33986,GL_TEXTURE3 = 33987,GL_TEXTURE4 = 33988,GL_TEXTURE5 = 33989,GL_TEXTURE6 = 33990,GL_TEXTURE7 = 33991,GL_TEXTURE8 = 33992,GL_TEXTURE9 = 33993,GL_TEXTURE10 = 33994,GL_TEXTURE11 = 33995,GL_TEXTURE12 = 33996,GL_TEXTURE13 = 33997,GL_TEXTURE14 = 33998,GL_TEXTURE15 = 33999,GL_TEXTURE16 = 34000,GL_TEXTURE17 = 34001,GL_TEXTURE18 = 34002,GL_TEXTURE19 = 34003,GL_TEXTURE20 = 34004,GL_TEXTURE21 = 34005,GL_TEXTURE22 = 34006,GL_TEXTURE23 = 34007,GL_TEXTURE24 = 34008,GL_TEXTURE25 = 34009,GL_TEXTURE26 = 34010,GL_TEXTURE27 = 34011,GL_TEXTURE28 = 34012,GL_TEXTURE29 = 34013,GL_TEXTURE30 = 34014,GL_TEXTURE31 = 34015,GL_ACTIVE_TEXTURE = 34016,GL_REPEAT = 10497,GL_CLAMP_TO_EDGE = 33071,GL_MIRRORED_REPEAT = 33648,GL_FLOAT_VEC2 = 35664,GL_FLOAT_VEC3 = 35665,GL_FLOAT_VEC4 = 35666,GL_INT_VEC2 = 35667,GL_INT_VEC3 = 35668,GL_INT_VEC4 = 35669,GL_BOOL = 35670,GL_BOOL_VEC2 = 35671,GL_BOOL_VEC3 = 35672,GL_BOOL_VEC4 = 35673,GL_FLOAT_MAT2 = 35674,GL_FLOAT_MAT3 = 35675,GL_FLOAT_MAT4 = 35676,GL_SAMPLER_2D = 35678,GL_SAMPLER_CUBE = 35680,GL_VERTEX_ATTRIB_ARRAY_ENABLED = 34338,GL_VERTEX_ATTRIB_ARRAY_SIZE = 34339,GL_VERTEX_ATTRIB_ARRAY_STRIDE = 34340,GL_VERTEX_ATTRIB_ARRAY_TYPE = 34341,GL_VERTEX_ATTRIB_ARRAY_NORMALIZED = 34922,GL_VERTEX_ATTRIB_ARRAY_POINTER = 34373,GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING = 34975,GL_IMPLEMENTATION_COLOR_READ_TYPE = 35738,GL_IMPLEMENTATION_COLOR_READ_FORMAT = 35739,GL_COMPILE_STATUS = 35713,GL_INFO_LOG_LENGTH = 35716,GL_SHADER_SOURCE_LENGTH = 35720,GL_SHADER_COMPILER = 36346,GL_SHADER_BINARY_FORMATS = 36344,GL_NUM_SHADER_BINARY_FORMATS = 36345,GL_LOW_FLOAT = 36336,GL_MEDIUM_FLOAT = 36337,GL_HIGH_FLOAT = 36338,GL_LOW_INT = 36339,GL_MEDIUM_INT = 36340,GL_HIGH_INT = 36341,GL_FRAMEBUFFER = 36160,GL_RENDERBUFFER = 36161,GL_RGBA4 = 32854,GL_RGB5_A1 = 32855,GL_RGB565 = 36194,GL_DEPTH_COMPONENT16 = 33189,GL_STENCIL_INDEX8 = 36168,GL_RENDERBUFFER_WIDTH = 36162,GL_RENDERBUFFER_HEIGHT = 36163,GL_RENDERBUFFER_INTERNAL_FORMAT = 36164,GL_RENDERBUFFER_RED_SIZE = 36176,GL_RENDERBUFFER_GREEN_SIZE = 36177,GL_RENDERBUFFER_BLUE_SIZE = 36178,GL_RENDERBUFFER_ALPHA_SIZE = 36179,GL_RENDERBUFFER_DEPTH_SIZE = 36180,GL_RENDERBUFFER_STENCIL_SIZE = 36181,GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE = 36048,GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME = 36049,GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL = 36050,GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE = 36051,GL_COLOR_ATTACHMENT0 = 36064,GL_DEPTH_ATTACHMENT = 36096,GL_STENCIL_ATTACHMENT = 36128,GL_NONE = 0,GL_FRAMEBUFFER_COMPLETE = 36053,GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT = 36054,GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT = 36055,GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS = 36057,GL_FRAMEBUFFER_UNSUPPORTED = 36061,GL_FRAMEBUFFER_BINDING = 36006,GL_RENDERBUFFER_BINDING = 36007,GL_MAX_RENDERBUFFER_SIZE = 34024,GL_INVALID_FRAMEBUFFER_OPERATION = 1286,};
enum MACRO_HW {HW_MACHINE = 1,HW_MODEL = 2,HW_NCPU = 3,HW_BYTEORDER = 4,HW_PHYSMEM = 5,HW_USERMEM = 6,HW_PAGESIZE = 7,HW_DISKNAMES = 8,HW_DISKSTATS = 9,HW_EPOCH = 10,HW_FLOATINGPT = 11,HW_MACHINE_ARCH = 12,HW_VECTORUNIT = 13,HW_BUS_FREQ = 14,HW_CPU_FREQ = 15,HW_CACHELINE = 16,HW_L1ICACHESIZE = 17,HW_L1DCACHESIZE = 18,HW_L2SETTINGS = 19,HW_L2CACHESIZE = 20,HW_L3SETTINGS = 21,HW_L3CACHESIZE = 22,HW_TB_FREQ = 23,HW_MEMSIZE = 24,HW_AVAILCPU = 25,HW_TARGET = 26,HW_PRODUCT = 27,HW_MAXID = 28,};
enum MACRO_ID {ID_TYPE_UID = 0,ID_TYPE_GID = 1,ID_TYPE_SID = 3,ID_TYPE_USERNAME = 4,ID_TYPE_GROUPNAME = 5,ID_TYPE_UUID = 6,ID_TYPE_GROUP_NFS = 7,ID_TYPE_USER_NFS = 8,ID_TYPE_GSS_EXPORT_NAME = 10,ID_TYPE_X509_DN = 11,ID_TYPE_KERBEROS = 12,};
enum MACRO_IF {IF_NAMESIZE = 16,};
enum MACRO_IN {IN_CLASSA_NET = 0xFF000000,IN_CLASSA_NSHIFT = 0x18,IN_CLASSA_HOST = 0xFFFFFF,IN_CLASSA_MAX = 0x80,IN_CLASSB_NET = 0xFFFF0000,IN_CLASSB_NSHIFT = 0x10,IN_CLASSB_HOST = 0xFFFF,IN_CLASSB_MAX = 0x10000,IN_CLASSC_NET = 0xFFFFFF00,IN_CLASSC_NSHIFT = 0x8,IN_CLASSC_HOST = 0xFF,IN_CLASSD_NET = 0xF0000000,IN_CLASSD_NSHIFT = 0x1C,IN_CLASSD_HOST = 0xFFFFFFF,};
enum MACRO_IO {IO_NUM_PRIORITIES = 4,};
enum MACRO_IP {IP_OPTIONS = 1,IP_HDRINCL = 2,IP_TOS = 3,IP_TTL = 4,IP_RECVOPTS = 5,IP_RECVRETOPTS = 6,IP_RECVDSTADDR = 7,IP_RETOPTS = 8,IP_MULTICAST_IF = 9,IP_MULTICAST_TTL = 10,IP_MULTICAST_LOOP = 11,IP_ADD_MEMBERSHIP = 12,IP_DROP_MEMBERSHIP = 13,IP_MULTICAST_VIF = 14,IP_RSVP_ON = 15,IP_RSVP_OFF = 16,IP_RSVP_VIF_ON = 17,IP_RSVP_VIF_OFF = 18,IP_PORTRANGE = 19,IP_RECVIF = 20,IP_IPSEC_POLICY = 21,IP_FAITH = 22,IP_STRIPHDR = 23,IP_RECVTTL = 24,IP_BOUND_IF = 25,IP_PKTINFO = 26,IP_RECVTOS = 27,IP_DONTFRAG = 28,IP_FW_ADD = 40,IP_FW_DEL = 41,IP_FW_FLUSH = 42,IP_FW_ZERO = 43,IP_FW_GET = 44,IP_FW_RESETLOG = 45,IP_OLD_FW_ADD = 50,IP_OLD_FW_DEL = 51,IP_OLD_FW_FLUSH = 52,IP_OLD_FW_ZERO = 53,IP_OLD_FW_GET = 54,IP_NAT__XXX = 55,IP_OLD_FW_RESETLOG = 56,IP_DUMMYNET_CONFIGURE = 60,IP_DUMMYNET_DEL = 61,IP_DUMMYNET_FLUSH = 62,IP_DUMMYNET_GET = 64,IP_TRAFFIC_MGT_BACKGROUND = 65,IP_MULTICAST_IFINDEX = 66,IP_ADD_SOURCE_MEMBERSHIP = 70,IP_DROP_SOURCE_MEMBERSHIP = 71,IP_BLOCK_SOURCE = 72,IP_UNBLOCK_SOURCE = 73,IP_MSFILTER = 74,};
enum MACRO_LA {LA_DEFAULT_ATTRIBUTES = 0,LA_ATTRIBUTE_ENABLE_LOGGING = 1,LA_SUCCESS = 0,LA_WARNING_POORLY_CONDITIONED = 1000,LA_INTERNAL_ERROR = -1000,LA_INVALID_PARAMETER_ERROR = -1001,LA_DIMENSION_MISMATCH_ERROR = -1002,LA_PRECISION_MISMATCH_ERROR = -1003,LA_SINGULAR_ERROR = -1004,LA_SLICE_OUT_OF_BOUNDS_ERROR = -1005,LA_SCALAR_TYPE_FLOAT = 32768,LA_SCALAR_TYPE_DOUBLE = 16384,LA_NO_HINT = 0,LA_SHAPE_DIAGONAL = 1,LA_SHAPE_LOWER_TRIANGULAR = 2,LA_SHAPE_UPPER_TRIANGULAR = 4,LA_FEATURE_SYMMETRIC = 65536,LA_FEATURE_POSITIVE_DEFINITE = 131072,LA_FEATURE_DIAGONALLY_DOMINANT = 262144,LA_L1_NORM = 1,LA_L2_NORM = 2,LA_LINF_NORM = 3,};
enum MACRO_LC {LC_ALL = 0,LC_COLLATE = 1,LC_CTYPE = 2,LC_MONETARY = 3,LC_NUMERIC = 4,LC_TIME = 5,LC_MESSAGES = 6,};
enum MACRO_LM {LM_MAXSTRLEN = 1024,};
enum MACRO_MB {MB_LEN_MAX = 6,SCHAR_MAX = 127,};
enum MACRO_MH {MH_MAGIC = 0xFEEDFACE,MH_CIGAM = 0xCEFAEDFE,MH_MAGIC_64 = 0xFEEDFACF,MH_CIGAM_64 = 0xCFFAEDFE,MH_OBJECT = 0x1,MH_EXECUTE = 0x2,MH_FVMLIB = 0x3,MH_CORE = 0x4,MH_PRELOAD = 0x5,MH_DYLIB = 0x6,MH_DYLINKER = 0x7,MH_BUNDLE = 0x8,MH_DYLIB_STUB = 0x9,MH_DSYM = 0xA,MH_KEXT_BUNDLE = 0xB,MH_FILESET = 0xC,MH_NOUNDEFS = 0x1,MH_INCRLINK = 0x2,MH_DYLDLINK = 0x4,MH_BINDATLOAD = 0x8,MH_PREBOUND = 0x10,MH_SPLIT_SEGS = 0x20,MH_LAZY_INIT = 0x40,MH_TWOLEVEL = 0x80,MH_FORCE_FLAT = 0x100,MH_NOMULTIDEFS = 0x200,MH_NOFIXPREBINDING = 0x400,MH_PREBINDABLE = 0x800,MH_ALLMODSBOUND = 0x1000,MH_SUBSECTIONS_VIA_SYMBOLS = 0x2000,MH_CANONICAL = 0x4000,MH_WEAK_DEFINES = 0x8000,MH_BINDS_TO_WEAK = 0x10000,MH_ALLOW_STACK_EXECUTION = 0x20000,MH_ROOT_SAFE = 0x40000,MH_SETUID_SAFE = 0x80000,MH_NO_REEXPORTED_DYLIBS = 0x100000,MH_PIE = 0x200000,MH_DEAD_STRIPPABLE_DYLIB = 0x400000,MH_HAS_TLV_DESCRIPTORS = 0x800000,MH_NO_HEAP_EXECUTION = 0x1000000,MH_APP_EXTENSION_SAFE = 0x2000000,MH_NLIST_OUTOFSYNC_WITH_DYLDINFO = 0x4000000,MH_SIM_SUPPORT = 0x8000000,MH_DYLIB_IN_CACHE = 0x80000000,};
enum MACRO_MM {MM_HARD = 0x1,MM_SOFT = 0x2,MM_FIRM = 0x4,MM_APPL = 0x10,MM_UTIL = 0x20,MM_OPSYS = 0x40,MM_PRINT = 0x100,MM_CONSOLE = 0x200,MM_RECOVER = 0x1000,MM_NRECOV = 0x2000,MM_NOSEV = 0x0,MM_HALT = 0x1,MM_ERROR = 0x2,MM_WARNING = 0x3,MM_INFO = 0x4,MM_NULLLBL = 0x0,MM_NULLSEV = 0x0,MM_NULLMC = 0x0,MM_NULLTXT = 0x0,MM_NULLACT = 0x0,MM_NULLTAG = 0x0,MM_OK = 0x0,MM_NOMSG = 0x1,MM_NOCON = 0x2,MM_NOTOK = 0x3,};
enum MACRO_MP {MP_HAS_UIKIT = 0,};
enum MACRO_MS {MS_ASYNC = 0x1,MS_INVALIDATE = 0x2,MS_SYNC = 0x10,MS_KILLPAGES = 0x4,MS_DEACTIVATE = 0x8,};
enum MACRO_ND {ND_ROUTER_SOLICIT = 133,ND_ROUTER_ADVERT = 134,ND_NEIGHBOR_SOLICIT = 135,ND_NEIGHBOR_ADVERT = 136,ND_REDIRECT = 137,};
enum MACRO_NI {NI_MAXHOST = 1025,NI_MAXSERV = 32,NI_NOFQDN = 1,NI_NUMERICHOST = 2,NI_NAMEREQD = 4,NI_NUMERICSERV = 8,NI_NUMERICSCOPE = 256,NI_DGRAM = 16,NI_WITHSCOPEID = 32,};
enum MACRO_NL {NL_ARGMAX = 9,NL_LANGMAX = 14,NL_MSGMAX = 32767,NL_NMAX = 1,NL_SETMAX = 255,NL_TEXTMAX = 2048,};
enum MACRO_NO {NO_RECOVERY = 3,NO_DATA = 4,};
enum MACRO_NS {NS_ENFORCE_NSOBJECT_DESIGNATED_INITIALIZER = 1,};
enum MACRO_NW {NW_NOT_i386_MAC = 1,};
enum MACRO_OK {F_OK = 0,X_OK = 1,W_OK = 2,R_OK = 4,_READ_OK = 512,_WRITE_OK = 1024,_EXECUTE_OK = 2048,_DELETE_OK = 4096,_APPEND_OK = 8192,_RMFILE_OK = 16384,_RATTR_OK = 32768,_WATTR_OK = 65536,_REXT_OK = 131072,_WEXT_OK = 262144,_RPERM_OK = 524288,_WPERM_OK = 1048576,_CHOWN_OK = 2097152,};
enum MACRO_OS {OS_OBJECT_HAVE_OBJC_SUPPORT = 1,OS_OBJECT_USE_OBJC = 1,OS_OBJECT_SWIFT3 = 0,};
enum MACRO_PA {PA_FLAG_MASK = 0xFF0000,PA_FLAG_LONG_LONG = 0x10000,PA_FLAG_LONG = 0x20000,PA_FLAG_SHORT = 0x40000,PA_FLAG_PTR = 0x80000,PA_FLAG_QUAD = 0x100000,PA_FLAG_INTMAX = 0x200000,PA_FLAG_SIZE = 0x400000,PA_FLAG_PTRDIFF = 0x800000,};
enum MACRO_PF {PF_VLAN = 1986814318,PF_BOND = 1651469924,};
enum MACRO_QF {QF_VERSION = 1,QF_USERS_PER_GB = 256,QF_MIN_USERS = 2048,QF_MAX_USERS = 2097152,QF_GROUPS_PER_GB = 32,QF_MIN_GROUPS = 2048,QF_MAX_GROUPS = 262144,};
enum MACRO_RB {RB_DIR_LEFT = 0,RB_DIR_RIGHT = 1,};
enum MACRO_RQ {RQ_PATHLEN = 1024,};
enum MACRO_SA {SA_ONSTACK = 0x1,SA_RESTART = 0x2,SA_RESETHAND = 0x4,SA_NOCLDSTOP = 0x8,SA_NODEFER = 0x10,SA_NOCLDWAIT = 0x20,SA_SIGINFO = 0x40,SA_USERTRAMP = 0x100,SA_64REGSET = 0x200,};
enum MACRO_SF {SF_SUPPORTED = 0x9F0000,SF_SETTABLE = 0x3FFF0000,SF_SYNTHETIC = 0xC0000000,SF_ARCHIVED = 0x10000,SF_IMMUTABLE = 0x20000,SF_APPEND = 0x40000,SF_RESTRICTED = 0x80000,SF_NOUNLINK = 0x100000,SF_FIRMLINK = 0x800000,SF_DATALESS = 0x40000000,};
enum MACRO_SG {SG_HIGHVM = 0x1,SG_FVMLIB = 0x2,SG_NORELOC = 0x4,SG_PROTECTED_VERSION_1 = 0x8,SG_READ_ONLY = 0x10,};
enum MACRO_SI {SI_USER = 0x10001,SI_QUEUE = 0x10002,SI_TIMER = 0x10003,SI_ASYNCIO = 0x10004,SI_MESGQ = 0x10005,};
enum MACRO_SK {SK_VERSION = 43000000,};
enum MACRO_SM {SM_COW = 1,SM_PRIVATE = 2,SM_EMPTY = 3,SM_SHARED = 4,SM_TRUESHARED = 5,SM_PRIVATE_ALIASED = 6,SM_SHARED_ALIASED = 7,SM_LARGE_PAGE = 8,};
enum MACRO_SO {SO_DEBUG = 0x1,SO_ACCEPTCONN = 0x2,SO_REUSEADDR = 0x4,SO_KEEPALIVE = 0x8,SO_DONTROUTE = 0x10,SO_BROADCAST = 0x20,SO_USELOOPBACK = 0x40,SO_LINGER = 0x80,SO_OOBINLINE = 0x100,SO_REUSEPORT = 0x200,SO_TIMESTAMP = 0x400,SO_TIMESTAMP_MONOTONIC = 0x800,SO_DONTTRUNC = 0x2000,SO_WANTMORE = 0x4000,SO_WANTOOBFLAG = 0x8000,SO_SNDBUF = 0x1001,SO_RCVBUF = 0x1002,SO_SNDLOWAT = 0x1003,SO_RCVLOWAT = 0x1004,SO_SNDTIMEO = 0x1005,SO_RCVTIMEO = 0x1006,SO_ERROR = 0x1007,SO_TYPE = 0x1008,SO_LABEL = 0x1010,SO_PEERLABEL = 0x1011,SO_NREAD = 0x1020,SO_NKE = 0x1021,SO_NOSIGPIPE = 0x1022,SO_NOADDRERR = 0x1023,SO_NWRITE = 0x1024,SO_REUSESHAREUID = 0x1025,SO_NOTIFYCONFLICT = 0x1026,SO_UPCALLCLOSEWAIT = 0x1027,SO_LINGER_SEC = 0x1080,SO_RANDOMPORT = 0x1082,SO_NP_EXTENSIONS = 0x1083,SO_NUMRCVPKT = 0x1112,SO_NET_SERVICE_TYPE = 0x1116,SO_NETSVC_MARKING_LEVEL = 0x1119,};
enum MACRO_SS {SS_ONSTACK = 0x1,SS_DISABLE = 0x4,};
enum MACRO_ST {ST_RDONLY = 0x1,ST_NOSUID = 0x2,};
enum MACRO_TF {TF_LP64 = 0x1,TF_64B_DATA = 0x2,};
enum MACRO_TH {TH_USAGE_SCALE = 1000,TH_STATE_RUNNING = 1,TH_STATE_STOPPED = 2,TH_STATE_WAITING = 3,TH_STATE_UNINTERRUPTIBLE = 4,TH_STATE_HALTED = 5,TH_FLAGS_SWAPPED = 1,TH_FLAGS_IDLE = 2,TH_FLAGS_GLOBAL_FORCED_IDLE = 4,};
enum MACRO_U8 {U8_MAX_LENGTH = 4,};
enum MACRO_UF {UF_SETTABLE = 0xFFFF,UF_NODUMP = 0x1,UF_IMMUTABLE = 0x2,UF_APPEND = 0x4,UF_OPAQUE = 0x8,UF_COMPRESSED = 0x20,UF_TRACKED = 0x40,UF_DATAVAULT = 0x80,UF_HIDDEN = 0x8000,};
enum MACRO_UL {UL_GETFSIZE = 1,UL_SETFSIZE = 2,};
enum MACRO_VM {VM_PROT_NONE = 0x0,VM_PROT_READ = 0x1,VM_PROT_WRITE = 0x2,VM_PROT_EXECUTE = 0x4,VM_PROT_NO_CHANGE = 0x8,VM_PROT_COPY = 0x10,VM_PROT_WANTS_COPY = 0x10,VM_PROT_IS_MASK = 0x40,VM_PROT_STRIP_READ = 0x80,VM_MAP_NULL = 0x0,VM_MAP_INSPECT_NULL = 0x0,VM_MAP_READ_NULL = 0x0,};
enum MACRO_VQ {VQ_NOTRESP = 0x1,VQ_NEEDAUTH = 0x2,VQ_LOWDISK = 0x4,VQ_MOUNT = 0x8,VQ_UNMOUNT = 0x10,VQ_DEAD = 0x20,VQ_ASSIST = 0x40,VQ_NOTRESPLOCK = 0x80,VQ_UPDATE = 0x100,VQ_VERYLOWDISK = 0x200,VQ_SYNCEVENT = 0x400,VQ_SERVEREVENT = 0x800,VQ_QUOTA = 0x1000,VQ_NEARLOWDISK = 0x2000,VQ_DESIRED_DISK = 0x4000,VQ_FREE_SPACE_CHANGE = 0x8000,VQ_FLAG10000 = 0x10000,};
enum MACRO__C {_C_ID = 64,_C_CLASS = 35,_C_SEL = 58,_C_CHR = 99,_C_UCHR = 67,_C_SHT = 115,_C_USHT = 83,_C_INT = 105,_C_UINT = 73,_C_LNG = 108,_C_ULNG = 76,_C_LNG_LNG = 113,_C_ULNG_LNG = 81,_C_FLT = 102,_C_DBL = 100,_C_BFLD = 98,_C_BOOL = 66,_C_VOID = 118,_C_UNDEF = 63,_C_PTR = 94,_C_CHARPTR = 42,_C_ATOM = 37,_C_ARY_B = 91,_C_ARY_E = 93,_C_UNION_B = 40,_C_UNION_E = 41,_C_STRUCT_B = 123,_C_STRUCT_E = 125,_C_VECTOR = 33,_C_CONST = 114,};
typedef NSArray MPSShape;
typedef __NSModule *NSModule;
typedef void *NSString;
typedef __NSSymbol *NSSymbol;
typedef unsigned short OldUChar;
typedef Point *PointPtr;
struct Protocol;
typedef TimeBaseRecord *TimeBase;
typedef unsigned char XML_Bool;
typedef char XML_Char;
typedef unsigned long long XML_Size;
struct __CFData;
struct __CFDate;
struct __CFHost;
struct __CFNull;
struct __CFTree;
struct __CFUUID;
struct __CTFont;
struct __CTLine;
struct __GLsync;
struct __SecACL;
struct __SecKey;
struct __float2 {float __sinval;float __cosval;};
typedef char __int8_t;
struct __sFILEX;
typedef char _fhandle[32];
struct _filesec;
struct _telldir;
struct _uconv_t {UConverter *uconv;UConverter *utf8;};
struct _xlocale;
struct _xmlDict;
struct _xmlLink;
struct _xmlList;
struct au_qctrl {int aq_hiwater;int aq_lowater;int aq_bufsz;int aq_delay;int aq_minfree;};
typedef au_tid au_tid_t;
struct au_token;
struct axr_data;
typedef unsigned char bitstr_t;
typedef double double_t;
enum fsh_mode {fsm_DN = 0x0,fsm_DR = 0x1,fsm_DW = 0x2,fsm_DRW = 0x3,};
typedef fstore fstore_t;
enum idtype_t {P_ALL = 0x0,P_PID = 0x1,P_PGID = 0x2,};
struct ifdevmtu {int ifdm_current;int ifdm_min;int ifdm_max;};
struct ifmaddrs {ifmaddrs *ifma_next;sockaddr *ifma_name;sockaddr *ifma_addr;sockaddr *ifma_lladdr;};
union __attribute__((aligned(8))) int8x8_t {char i8[8];short i16[4];int i32[2];unsigned char u8[8];unsigned short u16[4];unsigned int u32[2];};
typedef long long intmax_t;
typedef _xlocale *locale_t;
enum msg_type {CALL = 0x0,REPLY = 0x1,};
typedef unsigned long long msglen_t;
struct os_log_s;
typedef NSObject *os_log_t;
typedef int (*out_func)(void *, unsigned char *, unsigned int);
typedef char *peername;
typedef int policy_t;
struct protoent {char *p_name;char **p_aliases;int p_proto;};
typedef unsigned int rpc_uint;
typedef unsigned short shmatt_t;
struct sigstack {char *ss_sp;int ss_onstack;};
typedef  char *string_t;
typedef unsigned long long tcflag_t;
struct timezone {int tz_minuteswest;int tz_dsttime;};
typedef unsigned char u_int8_t;
typedef unsigned short uint16_t;
typedef unsigned int uint32_t;
typedef unsigned long long uint64_t;
struct x_passwd {char *pw_name;char *pw_passwd;int pw_uid;int pw_gid;char *pw_gecos;char *pw_dir;char *pw_shell;};
typedef _xmlError xmlError;
typedef struct _xmlMutex xmlMutex;
typedef z_stream_s z_stream;
enum AAFlags {AA_FLAG_IGNORE_EPERM = 0x1,AA_FLAG_ARCHIVE_DEDUPLICATE_DAT = 0x2,AA_FLAG_ARCHIVE_NO_RESOLVE_ACL_QUALIFIERS = 0x4,AA_FLAG_REPLACE_ATTRIBUTES = 0x8,AA_FLAG_EXTRACT_NO_AUTO_DEDUP = 0x10,AA_FLAG_EXTRACT_NO_AUTO_SPARSE = 0x20,AA_FLAG_CROSS_VOLUME_BOUNDARIES = 0x40,AA_FLAG_EXTRACT_AUTO_DEDUP_AS_HARD_LINKS = 0x80,AA_FLAG_DECODE_INSERT_IDX = 0x100,AA_FLAG_EXCLUDE_METADATA_ENTRIES = 0x200,AA_FLAG_VERBOSITY_0 = 0x0,AA_FLAG_VERBOSITY_1 = 0x4000000000000000,AA_FLAG_VERBOSITY_2 = 0x8000000000000000,AA_FLAG_VERBOSITY_3 = 0xC000000000000000,};
enum ADError {ADErrorUnknown = 0x0,ADErrorServerFailure = 0x1,ADErrorLoadingThrottled = 0x2,ADErrorInventoryUnavailable = 0x3,ADErrorConfigurationError = 0x4,ADErrorBannerVisibleWithoutContent = 0x5,ADErrorApplicationInactive = 0x6,ADErrorAdUnloaded = 0x7,ADErrorAssetLoadFailure = 0x8,ADErrorAdResponseValidateFailure = 0x9,ADErrorAdAssetLoadPending = 0xA,};
typedef char ALCbyte;
typedef char ALCchar;
typedef int ALCenum;
typedef unsigned int ALCuint;
typedef void ALCvoid;
typedef float ALfloat;
typedef short ALshort;
typedef int ALsizei;
typedef unsigned char ALubyte;
typedef OpaqueAUGraph *AUGraph;
typedef float AUValue;
enum AVError {AVErrorUnknown = 0xFFFFFFFFFFFFD1E8,AVErrorOutOfMemory = 0xFFFFFFFFFFFFD1E7,AVErrorSessionNotRunning = 0xFFFFFFFFFFFFD1E5,AVErrorDeviceAlreadyUsedByAnotherSession = 0xFFFFFFFFFFFFD1E4,AVErrorNoDataCaptured = 0xFFFFFFFFFFFFD1E3,AVErrorSessionConfigurationChanged = 0xFFFFFFFFFFFFD1E2,AVErrorDiskFull = 0xFFFFFFFFFFFFD1E1,AVErrorDeviceWasDisconnected = 0xFFFFFFFFFFFFD1E0,AVErrorMediaChanged = 0xFFFFFFFFFFFFD1DF,AVErrorMaximumDurationReached = 0xFFFFFFFFFFFFD1DE,AVErrorMaximumFileSizeReached = 0xFFFFFFFFFFFFD1DD,AVErrorMediaDiscontinuity = 0xFFFFFFFFFFFFD1DC,AVErrorMaximumNumberOfSamplesForFileFormatReached = 0xFFFFFFFFFFFFD1DB,AVErrorDeviceNotConnected = 0xFFFFFFFFFFFFD1DA,AVErrorDeviceInUseByAnotherApplication = 0xFFFFFFFFFFFFD1D9,AVErrorDeviceLockedForConfigurationByAnotherProcess = 0xFFFFFFFFFFFFD1D7,AVErrorSessionWasInterrupted = 0xFFFFFFFFFFFFD1D6,AVErrorMediaServicesWereReset = 0xFFFFFFFFFFFFD1D5,AVErrorExportFailed = 0xFFFFFFFFFFFFD1D4,AVErrorDecodeFailed = 0xFFFFFFFFFFFFD1D3,AVErrorInvalidSourceMedia = 0xFFFFFFFFFFFFD1D2,AVErrorFileAlreadyExists = 0xFFFFFFFFFFFFD1D1,AVErrorCompositionTrackSegmentsNotContiguous = 0xFFFFFFFFFFFFD1D0,AVErrorInvalidCompositionTrackSegmentDuration = 0xFFFFFFFFFFFFD1CF,AVErrorInvalidCompositionTrackSegmentSourceStartTime = 0xFFFFFFFFFFFFD1CE,AVErrorInvalidCompositionTrackSegmentSourceDuration = 0xFFFFFFFFFFFFD1CD,AVErrorFileFormatNotRecognized = 0xFFFFFFFFFFFFD1CC,AVErrorFileFailedToParse = 0xFFFFFFFFFFFFD1CB,AVErrorMaximumStillImageCaptureRequestsExceeded = 0xFFFFFFFFFFFFD1CA,AVErrorContentIsProtected = 0xFFFFFFFFFFFFD1C9,AVErrorNoImageAtTime = 0xFFFFFFFFFFFFD1C8,AVErrorDecoderNotFound = 0xFFFFFFFFFFFFD1C7,AVErrorEncoderNotFound = 0xFFFFFFFFFFFFD1C6,AVErrorContentIsNotAuthorized = 0xFFFFFFFFFFFFD1C5,AVErrorApplicationIsNotAuthorized = 0xFFFFFFFFFFFFD1C4,AVErrorDeviceIsNotAvailableInBackground = 0xFFFFFFFFFFFFD1C3,AVErrorOperationNotSupportedForAsset = 0xFFFFFFFFFFFFD1C2,AVErrorDecoderTemporarilyUnavailable = 0xFFFFFFFFFFFFD1C1,AVErrorEncoderTemporarilyUnavailable = 0xFFFFFFFFFFFFD1C0,AVErrorInvalidVideoComposition = 0xFFFFFFFFFFFFD1BF,AVErrorReferenceForbiddenByReferencePolicy = 0xFFFFFFFFFFFFD1BE,AVErrorInvalidOutputURLPathExtension = 0xFFFFFFFFFFFFD1BD,AVErrorScreenCaptureFailed = 0xFFFFFFFFFFFFD1BC,AVErrorDisplayWasDisabled = 0xFFFFFFFFFFFFD1BB,AVErrorTorchLevelUnavailable = 0xFFFFFFFFFFFFD1BA,AVErrorOperationInterrupted = 0xFFFFFFFFFFFFD1B9,AVErrorIncompatibleAsset = 0xFFFFFFFFFFFFD1B8,AVErrorFailedToLoadMediaData = 0xFFFFFFFFFFFFD1B7,AVErrorServerIncorrectlyConfigured = 0xFFFFFFFFFFFFD1B6,AVErrorApplicationIsNotAuthorizedToUseDevice = 0xFFFFFFFFFFFFD1B4,AVErrorFailedToParse = 0xFFFFFFFFFFFFD1B3,AVErrorFileTypeDoesNotSupportSampleReferences = 0xFFFFFFFFFFFFD1B2,AVErrorUndecodableMediaData = 0xFFFFFFFFFFFFD1B1,AVErrorAirPlayControllerRequiresInternet = 0xFFFFFFFFFFFFD1B0,AVErrorAirPlayReceiverRequiresInternet = 0xFFFFFFFFFFFFD1AF,AVErrorVideoCompositorFailed = 0xFFFFFFFFFFFFD1AE,AVErrorRecordingAlreadyInProgress = 0xFFFFFFFFFFFFD1AD,AVErrorCreateContentKeyRequestFailed = 0xFFFFFFFFFFFFD1AC,AVErrorUnsupportedOutputSettings = 0xFFFFFFFFFFFFD1AB,AVErrorOperationNotAllowed = 0xFFFFFFFFFFFFD1AA,AVErrorContentIsUnavailable = 0xFFFFFFFFFFFFD1A9,AVErrorFormatUnsupported = 0xFFFFFFFFFFFFD1A8,AVErrorMalformedDepth = 0xFFFFFFFFFFFFD1A7,AVErrorContentNotUpdated = 0xFFFFFFFFFFFFD1A6,AVErrorNoLongerPlayable = 0xFFFFFFFFFFFFD1A5,AVErrorNoCompatibleAlternatesForExternalDisplay = 0xFFFFFFFFFFFFD1A4,AVErrorNoSourceTrack = 0xFFFFFFFFFFFFD1A3,AVErrorExternalPlaybackNotSupportedForAsset = 0xFFFFFFFFFFFFD1A2,AVErrorOperationNotSupportedForPreset = 0xFFFFFFFFFFFFD1A1,AVErrorSessionHardwareCostOverage = 0xFFFFFFFFFFFFD1A0,AVErrorUnsupportedDeviceActiveFormat = 0xFFFFFFFFFFFFD19F,AVErrorIncorrectlyConfigured = 0xFFFFFFFFFFFFD19D,AVErrorSegmentStartedWithNonSyncSample = 0xFFFFFFFFFFFFD19C,};
typedef unsigned char Boolean;
enum CBError {CBErrorUnknown = 0x0,CBErrorInvalidParameters = 0x1,CBErrorInvalidHandle = 0x2,CBErrorNotConnected = 0x3,CBErrorOutOfSpace = 0x4,CBErrorOperationCancelled = 0x5,CBErrorConnectionTimeout = 0x6,CBErrorPeripheralDisconnected = 0x7,CBErrorUUIDNotAllowed = 0x8,CBErrorAlreadyAdvertising = 0x9,CBErrorConnectionFailed = 0xA,CBErrorConnectionLimitReached = 0xB,CBErrorUnkownDevice = 0xC,CBErrorUnknownDevice = 0xC,CBErrorOperationNotSupported = 0xD,CBErrorPeerRemovedPairingInformation = 0xE,CBErrorEncryptionTimedOut = 0xF,};
typedef long long CFIndex;
struct CGColor;
enum CGError {kCGErrorSuccess = 0x0,kCGErrorFailure = 0x3E8,kCGErrorIllegalArgument = 0x3E9,kCGErrorInvalidConnection = 0x3EA,kCGErrorInvalidContext = 0x3EB,kCGErrorCannotComplete = 0x3EC,kCGErrorNotImplemented = 0x3EE,kCGErrorRangeCheck = 0x3EF,kCGErrorTypeCheck = 0x3F0,kCGErrorInvalidOperation = 0x3F2,kCGErrorNoneAvailable = 0x3F3,};
typedef double CGFloat;
struct CGImage;
struct CGLayer;
enum CLError {kCLErrorLocationUnknown = 0x0,kCLErrorDenied = 0x1,kCLErrorNetwork = 0x2,kCLErrorHeadingFailure = 0x3,kCLErrorRegionMonitoringDenied = 0x4,kCLErrorRegionMonitoringFailure = 0x5,kCLErrorRegionMonitoringSetupDelayed = 0x6,kCLErrorRegionMonitoringResponseDelayed = 0x7,kCLErrorGeocodeFoundNoResult = 0x8,kCLErrorGeocodeFoundPartialResult = 0x9,kCLErrorGeocodeCanceled = 0xA,kCLErrorDeferredFailed = 0xB,kCLErrorDeferredNotUpdatingLocation = 0xC,kCLErrorDeferredAccuracyTooLow = 0xD,kCLErrorDeferredDistanceFiltered = 0xE,kCLErrorDeferredCanceled = 0xF,kCLErrorRangingUnavailable = 0x10,kCLErrorRangingFailure = 0x11,kCLErrorPromptDeclined = 0x12,};
enum CMError {CMErrorNULL = 0x64,CMErrorDeviceRequiresMovement = 0x65,CMErrorTrueNorthNotAvailable = 0x66,CMErrorUnknown = 0x67,CMErrorMotionActivityNotAvailable = 0x68,CMErrorMotionActivityNotAuthorized = 0x69,CMErrorMotionActivityNotEntitled = 0x6A,CMErrorInvalidParameter = 0x6B,CMErrorInvalidAction = 0x6C,CMErrorNotAvailable = 0x6D,CMErrorNotEntitled = 0x6E,CMErrorNotAuthorized = 0x6F,CMErrorNilData = 0x70,CMErrorSize = 0x71,};
typedef DSPComplex COMPLEX;
enum DCError {DCErrorUnknownSystemFailure = 0x0,DCErrorFeatureUnsupported = 0x1,DCErrorInvalidInput = 0x2,DCErrorInvalidKey = 0x3,DCErrorServerUnavailable = 0x4,};
typedef dl_info Dl_info;
typedef float Float32;
typedef double Float64;
typedef float GLfloat;
enum LAError {LAErrorAuthenticationFailed = 0xFFFFFFFFFFFFFFFF,LAErrorUserCancel = 0xFFFFFFFFFFFFFFFE,LAErrorUserFallback = 0xFFFFFFFFFFFFFFFD,LAErrorSystemCancel = 0xFFFFFFFFFFFFFFFC,LAErrorPasscodeNotSet = 0xFFFFFFFFFFFFFFFB,LAErrorTouchIDNotAvailable = 0xFFFFFFFFFFFFFFFA,LAErrorTouchIDNotEnrolled = 0xFFFFFFFFFFFFFFF9,LAErrorTouchIDLockout = 0xFFFFFFFFFFFFFFF8,LAErrorAppCancel = 0xFFFFFFFFFFFFFFF7,LAErrorInvalidContext = 0xFFFFFFFFFFFFFFF6,LAErrorBiometryNotAvailable = 0xFFFFFFFFFFFFFFFA,LAErrorBiometryNotEnrolled = 0xFFFFFFFFFFFFFFF9,LAErrorBiometryLockout = 0xFFFFFFFFFFFFFFF8,LAErrorNotInteractive = 0xFFFFFFFFFFFFFC14,LAErrorWatchNotAvailable = 0xFFFFFFFFFFFFFFF5,};
enum MACRO_A {A_OLDGETPOLICY = 2,A_OLDSETPOLICY = 3,A_GETKMASK = 4,A_SETKMASK = 5,A_OLDGETQCTRL = 6,A_OLDSETQCTRL = 7,A_GETCWD = 8,A_GETCAR = 9,A_GETSTAT = 12,A_SETSTAT = 13,A_SETUMASK = 14,A_SETSMASK = 15,A_OLDGETCOND = 20,A_OLDSETCOND = 21,A_GETCLASS = 22,A_SETCLASS = 23,A_GETPINFO = 24,A_SETPMASK = 25,A_SETFSIZE = 26,A_GETFSIZE = 27,A_GETPINFO_ADDR = 28,A_GETKAUDIT = 29,A_SETKAUDIT = 30,A_SENDTRIGGER = 31,A_GETSINFO_ADDR = 32,A_GETPOLICY = 33,A_SETPOLICY = 34,A_GETQCTRL = 35,A_SETQCTRL = 36,A_GETCOND = 37,A_SETCOND = 38,A_GETSFLAGS = 39,A_SETSFLAGS = 40,A_GETCTLMODE = 41,A_SETCTLMODE = 42,A_GETEXPAFTER = 43,A_SETEXPAFTER = 44,};
enum MACRO_C {C_ISSOCK = 0xC000,C_ISLNK = 0xA000,C_ISCTG = 0x9000,C_ISREG = 0x8000,C_ISBLK = 0x6000,C_ISDIR = 0x4000,C_ISCHR = 0x2000,C_ISFIFO = 0x1000,C_ISUID = 0x800,C_ISGID = 0x400,C_ISVTX = 0x200,C_IRUSR = 0x100,C_IWUSR = 0x80,C_IXUSR = 0x40,C_IRGRP = 0x20,C_IWGRP = 0x10,C_IXGRP = 0x8,C_IROTH = 0x4,C_IWOTH = 0x2,C_IXOTH = 0x1,};
enum MACRO_D {D_T_FMT = 1,D_FMT = 2,};
enum MACRO_E {E_UNEXPECTED = 0x8000FFFF,E_NOTIMPL = 0x80000001,E_OUTOFMEMORY = 0x80000002,E_INVALIDARG = 0x80000003,E_NOINTERFACE = 0x80000004,E_POINTER = 0x80000005,E_HANDLE = 0x80000006,E_ABORT = 0x80000007,E_FAIL = 0x80000008,E_ACCESSDENIED = 0x80000009,};
enum MACRO_F {F_ULOCK = 0,F_LOCK = 1,F_TLOCK = 2,F_TEST = 3,};
enum MACRO_H {NSLAYOUTCONSTRAINT_H = 1,NSLAYOUTANCHOR_H = 1,};
enum MACRO_L {L_tmpnam = 1024,};
enum MACRO_N {N_STAB = 0xE0,N_PEXT = 0x10,N_TYPE = 0xE,N_EXT = 0x1,N_UNDF = 0x0,N_ABS = 0x2,N_SECT = 0xE,N_PBUD = 0xC,N_INDR = 0xA,};
enum MACRO_O {O_RDONLY = 0x0,O_WRONLY = 0x1,O_RDWR = 0x2,O_ACCMODE = 0x3,};
enum MACRO_P {P_ADVLOCK = 0x1,P_CONTROLT = 0x2,P_LP64 = 0x4,P_NOCLDSTOP = 0x8,P_PPWAIT = 0x10,P_PROFIL = 0x20,P_SELECT = 0x40,P_CONTINUED = 0x80,P_SUGID = 0x100,P_SYSTEM = 0x200,P_TIMEOUT = 0x400,P_TRACED = 0x800,P_DISABLE_ASLR = 0x1000,P_WEXIT = 0x2000,P_EXEC = 0x4000,P_OWEUPC = 0x8000,P_AFFINITY = 0x10000,P_TRANSLATED = 0x20000,P_DELAYIDLESLEEP = 0x40000,P_CHECKOPENEVT = 0x80000,P_DEPENDENCY_CAPABLE = 0x100000,P_REBOOT = 0x200000,P_RESV6 = 0x400000,P_RESV7 = 0x800000,P_THCWD = 0x1000000,P_RESV9 = 0x2000000,P_ADOPTPERSONA = 0x4000000,P_RESV11 = 0x8000000,P_NOSHLIB = 0x10000000,P_FORCEQUOTA = 0x20000000,P_NOCLDWAIT = 0x40000000,P_NOREMOTEHANG = 0x80000000,P_INMEM = 0x0,P_NOSWAP = 0x0,P_PHYSIO = 0x0,P_FSTRACE = 0x0,P_SSTEP = 0x0,P_DIRTY_TRACK = 0x1,P_DIRTY_ALLOW_IDLE_EXIT = 0x2,P_DIRTY_DEFER = 0x4,P_DIRTY = 0x8,P_DIRTY_SHUTDOWN = 0x10,P_DIRTY_TERMINATED = 0x20,P_DIRTY_BUSY = 0x40,P_DIRTY_MARKED = 0x80,P_DIRTY_AGING_IN_PROGRESS = 0x100,P_DIRTY_LAUNCH_IN_PROGRESS = 0x200,P_DIRTY_DEFER_ALWAYS = 0x400,};
enum MACRO_Q {Q_QUOTAON = 0x100,Q_QUOTAOFF = 0x200,Q_GETQUOTA = 0x300,Q_SETQUOTA = 0x400,Q_SETUSE = 0x500,Q_SYNC = 0x600,Q_QUOTASTAT = 0x700,};
enum MACRO_R {R_CURSOR = 1,};
enum MACRO_S {S_IFIFO = 0x1000,S_IFCHR = 0x2000,S_IFDIR = 0x4000,S_IFBLK = 0x6000,S_IFREG = 0x8000,S_IFLNK = 0xA000,S_IFSOCK = 0xC000,S_IFWHT = 0xE000,S_IRWXU = 0x1C0,S_IRUSR = 0x100,S_IWUSR = 0x80,S_IXUSR = 0x40,S_IRWXG = 0x38,S_IRGRP = 0x20,S_IWGRP = 0x10,S_IXGRP = 0x8,S_IRWXO = 0x7,S_IROTH = 0x4,S_IWOTH = 0x2,S_IXOTH = 0x1,S_ISUID = 0x800,S_ISGID = 0x400,S_ISVTX = 0x200,};
enum MACRO_T {T_FMT = 3,T_FMT_AMPM = 4,};
enum MACRO_U {U_DEBUG = 0,};
enum MACRO_Z {Z_NO_FLUSH = 0,Z_PARTIAL_FLUSH = 1,Z_SYNC_FLUSH = 2,Z_FULL_FLUSH = 3,Z_FINISH = 4,Z_BLOCK = 5,Z_TREES = 6,Z_OK = 0,Z_STREAM_END = 1,Z_NEED_DICT = 2,Z_ERRNO = -1,Z_STREAM_ERROR = -2,Z_DATA_ERROR = -3,Z_MEM_ERROR = -4,Z_BUF_ERROR = -5,Z_VERSION_ERROR = -6,Z_NO_COMPRESSION = 0,Z_BEST_SPEED = 1,Z_BEST_COMPRESSION = 9,Z_DEFAULT_COMPRESSION = -1,Z_FILTERED = 1,Z_HUFFMAN_ONLY = 2,Z_RLE = 3,Z_FIXED = 4,Z_DEFAULT_STRATEGY = 0,Z_BINARY = 0,Z_TEXT = 1,Z_UNKNOWN = 2,Z_DEFLATED = 8,Z_NULL = 0,};
struct MPSSize {double width;double height;double depth;};
struct NSImage;
typedef _NSRange NSRange;
typedef void *PRefCon;
typedef float Pixel_F;
typedef long long (*ProcPtr)(void);
typedef Rect *RectPtr;
typedef void *SRefCon;
typedef void *URefCon;
typedef wide *WidePtr;
struct _NSZone;
struct __CFBag;
struct __CFSet;
struct __CFURL;
struct __CTRun;
struct _xmlBuf;
struct _xmlURI {char *scheme;char *opaque;char *authority;char *server;char *user;int port;char *path;char *query;char *fragment;int cleanup;char *query_raw;};
struct au_mask {unsigned int am_success;unsigned int am_failure;};
struct cache_s;
typedef struct cache_s cache_t;
typedef char *caddr_t;
struct ctlname {char *ctl_name;int ctl_type;};
typedef char *dirpath;
struct dl_info { char *dli_fname;void *dli_fbase; char *dli_sname;void *dli_saddr;};
struct dst_key;
typedef int errno_t;
typedef exportnode *exports;
struct fhandle {unsigned int fh_len;unsigned char fh_data[128];};
typedef float float_t;
typedef gss_OID_desc_struct *gss_OID;
struct hostent {char *h_name;char **h_aliases;int h_addrtype;int h_length;char **h_addr_list;};
typedef void *iconv_t;
struct ifaddrs {ifaddrs *ifa_next;char *ifa_name;unsigned int ifa_flags;sockaddr *ifa_addr;sockaddr *ifa_netmask;sockaddr *ifa_dstaddr;void *ifa_data;};
struct ifqueue {void *ifq_head;void *ifq_tail;int ifq_len;int ifq_maxlen;int ifq_drops;};
typedef unsigned int (*in_func)(void *, unsigned char **);
typedef short int16_t;
typedef int int32_t;
typedef long long int64_t;
typedef int jmp_buf[48];
struct lldiv_t {long long quot;long long rem;};
typedef char *mapname;
typedef mount *mount_t;
struct msginfo {int msgmax;int msgmni;int msgmnb;int msgtql;int msgssz;int msgseg;};
typedef __nl_cat_d *nl_catd;
struct rb_node {void *opaque[3];};
struct rb_tree {void *opaque[8];};
struct re_guts;
typedef int rpc_int;
typedef semun semun_t;
struct servent {char *s_name;char **s_aliases;int s_port;char *s_proto;};
struct session;
struct sf_hdtr {iovec *headers;int hdr_cnt;iovec *trailers;int trl_cnt;};
struct sigacts;
struct sm_name {char *mon_name;};
struct sm_stat {int state;};
typedef unsigned long long speed_t;
struct sqlite3;
typedef __darwin_sigaltstack stack_t;
typedef struct au_token token_t;
struct ttysize {unsigned short ts_lines;unsigned short ts_cols;unsigned short ts_xxx;unsigned short ts_yyy;};
typedef unsigned int u_int32;
typedef unsigned short u_short;
typedef _uconv_t uconv_t;
typedef unsigned char uint8_t;
typedef unsigned short unichar;
struct utmparr {utmp **uta_arr;int uta_cnt;};
struct utsname {char sysname[256];char nodename[256];char release[256];char version[256];char machine[256];};
union __attribute__((aligned(16))) vBool32 {char i8[16];short i16[8];int i32[4];long long i64[2];unsigned char u8[16];unsigned short u16[8];unsigned int u32[4];unsigned long long u64[2];};
union __attribute__((aligned(16))) vDouble {double f64[2];};
union __attribute__((aligned(16))) vSInt16 {char i8[16];short i16[8];int i32[4];long long i64[2];unsigned char u8[16];unsigned short u16[8];unsigned int u32[4];unsigned long long u64[2];};
union __attribute__((aligned(16))) vSInt32 {char i8[16];short i16[8];int i32[4];long long i64[2];unsigned char u8[16];unsigned short u16[8];unsigned int u32[4];unsigned long long u64[2];};
union __attribute__((aligned(16))) vSInt64 {char i8[16];short i16[8];int i32[4];long long i64[2];unsigned char u8[16];unsigned short u16[8];unsigned int u32[4];unsigned long long u64[2];};
union __attribute__((aligned(16))) vUInt16 {char i8[16];short i16[8];int i32[4];long long i64[2];unsigned char u8[16];unsigned short u16[8];unsigned int u32[4];unsigned long long u64[2];};
union __attribute__((aligned(16))) vUInt32 {char i8[16];short i16[8];int i32[4];long long i64[2];unsigned char u8[16];unsigned short u16[8];unsigned int u32[4];unsigned long long u64[2];};
union __attribute__((aligned(16))) vUInt64 {char i8[16];short i16[8];int i32[4];long long i64[2];unsigned char u8[16];unsigned short u16[8];unsigned int u32[4];unsigned long long u64[2];};
typedef vnode *vnode_t;
struct winsize {unsigned short ws_row;unsigned short ws_col;unsigned short ws_xpixel;unsigned short ws_ypixel;};
typedef _xmlAttr xmlAttr;
typedef unsigned char xmlChar;
typedef struct _xmlDict xmlDict;
typedef struct _xmlLink xmlLink;
typedef struct _xmlList xmlList;
typedef _xmlNode xmlNode;
typedef unsigned long long z_crc_t;
enum ACTION {FIND = 0x0,ENTER = 0x1,};
typedef int ALCint;
typedef char ALbyte;
typedef char ALchar;
typedef int ALenum;
typedef unsigned int ALuint;
typedef void ALvoid;
typedef void BZFILE;
struct CGFont;
struct CGPath;
enum DBTYPE {DB_BTREE = 0x0,DB_HASH = 0x1,DB_RECNO = 0x2,};
enum EKSpan {EKSpanThisEvent = 0x0,EKSpanFutureEvents = 0x1,};
typedef _ftsent FTSENT;
struct GKGame;
typedef char GLchar;
typedef __GLsync *GLsync;
typedef void GLvoid;
typedef unsigned short JSChar;
enum JSType {kJSTypeUndefined = 0x0,kJSTypeNull = 0x1,kJSTypeBoolean = 0x2,kJSTypeNumber = 0x3,kJSTypeString = 0x4,kJSTypeObject = 0x5,kJSTypeSymbol = 0x6,};
typedef void *LPVOID;
typedef objc_method *Method;
struct NSHost;
typedef struct _NSZone NSZone;
typedef CFUUIDBytes REFIID;
typedef short SInt16;
typedef int SInt32;
typedef long long SInt64;
typedef unsigned char Str255[256];
struct UCPMap;
typedef unsigned short UInt16;
typedef unsigned int UInt32;
typedef unsigned long long UInt64;
struct __sbuf {unsigned char *_base;int _size;};
struct fenv_t {unsigned long long __fpsr;unsigned long long __fpcr;};
typedef fsid fsid_t;
typedef groupnode *groups;
union guid_t {unsigned char g_guid[16];unsigned int g_guid_asint[4];};
typedef gzFile_s *gzFile;
struct ifstat {char ifs_name[16];char ascii[801];};
typedef char int8_t;
typedef int kmod_t;
struct ldiv_t {long long quot;long long rem;};
struct linger {int l_onoff;int l_linger;};
struct netobj {unsigned int n_len;char *n_bytes;};
typedef unsigned int nfds_t;
struct option { char *name;int has_arg;int *flag;int val;};
struct pollfd {int fd;short events;short revents;};
struct rpcent {char *r_name;char **r_aliases;int r_number;};
struct sembuf {unsigned short sem_num;short sem_op;short sem_flg;};
union sigval {int sival_int;void *sival_ptr;};
struct sigvec {void (*sv_handler)(int);int sv_mask;int sv_flags;};
enum sm_res {stat_succ = 0x0,stat_fail = 0x1,};
struct ttyent {char *ty_name;char *ty_getty;char *ty_type;int ty_status;char *ty_window;char *ty_onerror;char *ty_onoption;char *ty_comment;};
typedef unsigned char u_char;
typedef unsigned long long u_long;
enum uio_rw {UIO_READ = 0x0,UIO_WRITE = 0x1,};
typedef unsigned short ushort;
union __attribute__((aligned(16))) vFloat {float f32[4];char i8[16];short i16[8];int i32[4];long long i64[2];unsigned char u8[16];unsigned short u16[8];unsigned int u32[4];unsigned long long u64[2];};
union __attribute__((aligned(16))) vSInt8 {char i8[16];short i16[8];int i32[4];long long i64[2];unsigned char u8[16];unsigned short u16[8];unsigned int u32[4];unsigned long long u64[2];};
union __attribute__((aligned(16))) vUInt8 {char i8[16];short i16[8];int i32[4];long long i64[2];unsigned char u8[16];unsigned short u16[8];unsigned int u32[4];unsigned long long u64[2];};
typedef  void *voidpc;
typedef void *voidpf;
enum xdr_op {XDR_ENCODE = 0x0,XDR_DECODE = 0x1,XDR_FREE = 0x2,};
typedef struct _xmlBuf xmlBuf;
typedef _xmlDoc xmlDoc;
typedef _xmlDtd xmlDtd;
typedef _xmlRef xmlRef;
typedef _xmlURI xmlURI;
enum ypstat {YP_TRUE = 0x1,YP_NOMORE = 0x2,YP_FALSE = 0x0,YP_NOMAP = 0xFFFFFFFF,YP_NODOM = 0xFFFFFFFE,YP_NOKEY = 0xFFFFFFFD,YP_BADOP = 0xFFFFFFFC,YP_BADDB = 0xFFFFFFFB,YP_YPERR = 0xFFFFFFFA,YP_BADARGS = 0xFFFFFFF9,YP_VERS = 0xFFFFFFF8,};
typedef int ALint;
struct ARRay;
typedef objc_class *Class;
typedef entry ENTRY;
struct FSRef;
struct Point {short v;short h;};
typedef char SInt8;
typedef unsigned char Str15[16];
typedef unsigned char Str27[28];
typedef unsigned char Str31[32];
typedef unsigned char Str32[33];
typedef unsigned char Str63[64];
typedef unsigned char Style;
typedef double UDate;
typedef unsigned char UInt8;
enum VISIT {preorder = 0x0,postorder = 0x1,endorder = 0x2,leaf = 0x3,};
typedef _acl *acl_t;
typedef char charf;
struct div_t {int quot;int rem;};
struct entry {char *key;void *data;};
struct fstab {char *fs_spec;char *fs_file;char *fs_vfstype;char *fs_mntops;char *fs_type;int fs_freq;int fs_passno;};
struct klist {knote *slh_first;};
struct knote;
struct label;
struct lconv {char *decimal_point;char *thousands_sep;char *grouping;char *int_curr_symbol;char *currency_symbol;char *mon_decimal_point;char *mon_thousands_sep;char *mon_grouping;char *positive_sign;char *negative_sign;char int_frac_digits;char frac_digits;char p_cs_precedes;char p_sep_by_space;char n_cs_precedes;char n_sep_by_space;char p_sign_posn;char n_sign_posn;char int_p_cs_precedes;char int_n_cs_precedes;char int_p_sep_by_space;char int_n_sep_by_space;char int_p_sign_posn;char int_n_sign_posn;};
struct mount;
struct my_id {char *my_name;int my_prog;int my_vers;int my_proc;};
struct mymsg {long long mtype;char mtext[1];};
typedef ru_utmp rutmp;
typedef int sem_t;
union semun {int val;__semid_ds_new *buf;unsigned short *array;};
typedef void (*sig_t)(int);
struct timex {unsigned int modes;long long offset;long long freq;long long maxerror;long long esterror;int status;long long constant;long long precision;long long tolerance;long long ppsfreq;long long jitter;int shift;long long stabil;long long jitcnt;long long calcnt;long long errcnt;long long stbcnt;};
typedef unsigned long long uLong;
typedef unsigned int u_int;
struct ucred;
struct vnode;
typedef void *voidp;
typedef _xmlID xmlID;
typedef _xmlNs xmlNs;
typedef char BOOL;
typedef __sFILE FILE;
typedef objc_ivar *Ivar;
struct Rect {short top;short left;short bottom;short right;};
typedef long long Size;
struct USet;
struct _acl;
typedef unsigned char cc_t;
typedef int intf;
struct mbuf;
typedef char *name;
struct pgrp;
struct proc;
typedef unsigned int uInt;
typedef unsigned int uint;
struct user;
struct utmp;
typedef _bkt BKT;
struct DBM {char __opaque[68];};
struct FTW {int base;int level;};
typedef void (*IMP)(void);
typedef char *Ptr;
typedef  char *SEL;
typedef __rpc_xdr XDR;
typedef __db DB;
typedef void *id;
struct tm {int tm_sec;int tm_min;int tm_hour;int tm_mday;int tm_mon;int tm_year;int tm_wday;int tm_yday;int tm_isdst;long long tm_gmtoff;char *tm_zone;};
struct std____1__chrono__time_point_std__chrono__steady_clock__std__chrono__duration_long_long__std__ratio_1__1000000000___ {std____1__chrono__time_point_std__chrono__steady_clock__std__chrono__duration_long_long__std__ratio_1__1000000000_____duration __d_;};
struct std____1__chrono__time_point_std__chrono__system_clock__std__chrono__duration_long_long__std__ratio_1__1000000000___ {std____1__chrono__time_point_std__chrono__system_clock__std__chrono__duration_long_long__std__ratio_1__1000000000_____duration __d_;};
struct std____1__chrono__time_point_std__chrono__system_clock__std__chrono__duration_long_long__std__ratio_1__1000000___ {std____1__chrono__time_point_std__chrono__system_clock__std__chrono__duration_long_long__std__ratio_1__1000000_____duration __d_;};
typedef std____1__allocator_char16_t___pointer std____1____pointer_type_imp____pointer_type_char16_t__std__allocator_char16_t___true___type;
typedef std____1__allocator_char32_t___pointer std____1____pointer_type_imp____pointer_type_char32_t__std__allocator_char32_t___true___type;
typedef std____1__allocator_wchar_t___pointer std____1____pointer_type_imp____pointer_type_wchar_t__std__allocator_wchar_t___true___type;
typedef std____1__allocator_char16_t___const_pointer std____1____const_pointer_char16_t__char16_t__P__std__allocator_char16_t___true___type;
typedef std____1__allocator_char32_t___const_pointer std____1____const_pointer_char32_t__char32_t__P__std__allocator_char32_t___true___type;
typedef std____1__allocator_char___pointer std____1____pointer_type_imp____pointer_type_char__std__allocator_char___true___type;
struct std____1__basic_string_char16_t_____short___F258D7DED934BF0EB39F60A209D311FC { std____1____padding_char16_t__2_ cppsuper0;unsigned char __size_;};
struct std____1__basic_string_char32_t_____short___4BCC28CA51C261F04D7FA0FC5D6C1490 { std____1____padding_char32_t__4_ cppsuper0;unsigned char __size_;};
struct std____1__basic_string_wchar_t_____short___FF41AE7C12FB3515350232ED16A8A858 { std____1____padding_wchar_t__4_ cppsuper0;unsigned char __size_;};
typedef std____1__conditional_false__const_unsigned_long__P__unsigned_long__P___type std____1____bit_iterator_std____bitset_0__0___false__0_____storage_pointer;
typedef std____1__conditional_true__const_unsigned_long__P__unsigned_long__P___type std____1____bit_iterator_std____bitset_0__0___true__0_____storage_pointer;
struct std____1__basic_string_char_____short___654DBF3D633A6121C0B197AC38B89F76 { std____1____padding_char__1_ cppsuper0;unsigned char __size_;};
struct std____1____compressed_pair_elem_std__allocator_char16_t___1__true_ { std____1__allocator_char16_t_ cppsuper0;};
struct std____1____compressed_pair_elem_std__allocator_char32_t___1__true_ { std____1__allocator_char32_t_ cppsuper0;};
typedef std____1____const_pointer_char16_t__char16_t__P__std__allocator_char16_t___true___type std____1__allocator_traits_std__allocator_char16_t____const_pointer;
typedef std____1____const_pointer_char32_t__char32_t__P__std__allocator_char32_t___true___type std____1__allocator_traits_std__allocator_char32_t____const_pointer;
typedef std____1__conditional_false__std____bit_const_reference_std____bitset_0__0____std____bit_reference_std____bitset_0__0___true____type std____1____bit_iterator_std____bitset_0__0___false__0___reference;
struct std____1____compressed_pair_elem_std__allocator_wchar_t___1__true_ { std____1__allocator_wchar_t_ cppsuper0;};
typedef std____1____pointer_type_imp____pointer_type_char16_t__std__allocator_char16_t___true___type std____1____pointer_type_char16_t__std__allocator_char16_t____type;
typedef std____1____pointer_type_imp____pointer_type_char32_t__std__allocator_char32_t___true___type std____1____pointer_type_char32_t__std__allocator_char32_t____type;
struct std____1__chrono__duration_long_double__std__ratio_1__1000000000__ {std____1__chrono__duration_long_double__std__ratio_1__1000000000____rep __rep_;};
typedef std____1__conditional_true__std____bit_const_reference_std____bitset_0__0____std____bit_reference_std____bitset_0__0___true____type std____1____bit_iterator_std____bitset_0__0___true__0___reference;
typedef std____1____pointer_type_imp____pointer_type_wchar_t__std__allocator_wchar_t___true___type std____1____pointer_type_wchar_t__std__allocator_wchar_t____type;
struct std____1__chrono__duration_long_long__std__ratio_1__1000000000__ {std____1__chrono__duration_long_long__std__ratio_1__1000000000____rep __rep_;};
struct std____1____compressed_pair_elem_std__allocator_char___1__true_ { std____1__allocator_char_ cppsuper0;};
struct std____1__chrono__duration_long_double__std__ratio_1__1000000__ {std____1__chrono__duration_long_double__std__ratio_1__1000000____rep __rep_;};
struct MPSIntersectionDistancePrimitiveIndexInstanceIndexCoordinates {float distance;unsigned int primitiveIndex;unsigned int instanceIndex;vector_float2 coordinates;};
typedef std____1____pointer_type_char16_t__std__allocator_char16_t____type std____1__allocator_traits_std__allocator_char16_t____pointer;
typedef std____1____pointer_type_char32_t__std__allocator_char32_t____type std____1__allocator_traits_std__allocator_char32_t____pointer;
struct std____1__chrono__duration_long_long__std__ratio_1__1000000__ {std____1__chrono__duration_long_long__std__ratio_1__1000000____rep __rep_;};
typedef ptrdiff_t std____1__iterator_traits_const_char16_t__P___difference_type;
typedef ptrdiff_t std____1__iterator_traits_const_char32_t__P___difference_type;
typedef std____1____pointer_type_wchar_t__std__allocator_wchar_t____type std____1__allocator_traits_std__allocator_wchar_t____pointer;
struct std____1__chrono__duration_long_double__std__ratio_1__1000__ {std____1__chrono__duration_long_double__std__ratio_1__1000____rep __rep_;};
struct std____1__chrono__duration_long_double__std__ratio_3600__1__ {std____1__chrono__duration_long_double__std__ratio_3600__1____rep __rep_;};
typedef ptrdiff_t std____1__iterator_traits_const_wchar_t__P___difference_type;
typedef std____1__time_base__dateorder std____1__time_get_byname__CharT___InputIterator___dateorder;
struct dyld_shared_cache_ranges___C6EA7859B0EAEDB620D074CEA3C16F57 {uintptr_t start;uintptr_t length;};
typedef std____1____pointer_type_imp____pointer_type_char__std__allocator_char___true___type std____1____pointer_type_char__std__allocator_char____type;
struct std____1__chrono__duration_long_double__std__ratio_60__1__ {std____1__chrono__duration_long_double__std__ratio_60__1____rep __rep_;};
struct std____1__chrono__duration_long_long__std__ratio_1__1000__ {std____1__chrono__duration_long_long__std__ratio_1__1000____rep __rep_;};
typedef std____1__iterator_traits_const_char16_t__P___difference_type std____1____wrap_iter_const_char16_t__P___difference_type;
typedef std____1__iterator_traits_const_char32_t__P___difference_type std____1____wrap_iter_const_char32_t__P___difference_type;
typedef std____1____pointer_type_char__std__allocator_char____type std____1__allocator_traits_std__allocator_char____pointer;
typedef ptrdiff_t std____1__iterator_traits_const_char__P___difference_type;
typedef NSUInteger NSPersistentCloudKitContainerSchemaInitializationOptions;
typedef std____1__iterator_traits_const_char16_t__P___reference std____1__reverse_iterator_const_char16_t__P___reference;
typedef std____1__iterator_traits_const_char32_t__P___reference std____1__reverse_iterator_const_char32_t__P___reference;
struct std____1____bit_iterator_std____bitset_0__0___false__0_ {std____1____bit_iterator_std____bitset_0__0___false__0_____storage_pointer __seg_;unsigned int __ctz_;};
typedef ptrdiff_t std____1__iterator_traits_char16_t__P___difference_type;
typedef ptrdiff_t std____1__iterator_traits_char32_t__P___difference_type;
typedef std____1__iterator_traits_const_wchar_t__P___reference std____1__reverse_iterator_const_wchar_t__P___reference;
struct std____1____bit_iterator_std____bitset_0__0___true__0_ {std____1____bit_iterator_std____bitset_0__0___true__0_____storage_pointer __seg_;unsigned int __ctz_;};
typedef std____1__iterator_traits_const_char16_t__P___pointer std____1__reverse_iterator_const_char16_t__P___pointer;
typedef std____1__iterator_traits_const_char32_t__P___pointer std____1__reverse_iterator_const_char32_t__P___pointer;
typedef std____1__basic_string_view_char16_t___const_pointer std____1__basic_string_view_char16_t___const_iterator;
typedef std____1__basic_string_view_char32_t___const_pointer std____1__basic_string_view_char32_t___const_iterator;
struct std____1__chrono__duration_long__std__ratio_3600__1__ {std____1__chrono__duration_long__std__ratio_3600__1____rep __rep_;};
typedef std____1__iterator_traits_const_wchar_t__P___pointer std____1__reverse_iterator_const_wchar_t__P___pointer;
typedef std____1__time_base__dateorder std____1__time_get__CharT___InputIterator___dateorder;
typedef std____1__basic_string_view_wchar_t___const_pointer std____1__basic_string_view_wchar_t___const_iterator;
typedef std____1__iterator_traits_const_char__P___reference std____1__reverse_iterator_const_char__P___reference;
union _MPSPackedFloat3___39DC2D7EDDF348CEA81137C15E26DB7E {_393C16A032292777F0C3725FFB2C0008 __anonymous0;float elements[3];};
union _MTLPackedFloat3___39DC2D7EDDF348CEA81137C15E26DB7E {_393C16A032292777F0C3725FFB2C0008 __anonymous0;float elements[3];};
typedef std____1__iterator_traits_char16_t__P___difference_type std____1____wrap_iter_char16_t__P___difference_type;
typedef std____1__iterator_traits_char32_t__P___difference_type std____1____wrap_iter_char32_t__P___difference_type;
typedef std____1__iterator_traits_const_char16_t__P___reference std____1____wrap_iter_const_char16_t__P___reference;
typedef std____1__iterator_traits_const_char32_t__P___reference std____1____wrap_iter_const_char32_t__P___reference;
struct std____1__chrono__duration_long__std__ratio_60__1__ {std____1__chrono__duration_long__std__ratio_60__1____rep __rep_;};
struct std____1____libcpp_is_integral_unsigned_long_long_ { std____1__true_type cppsuper0;};
typedef std____1__iterator_traits_const_char__P___pointer std____1__reverse_iterator_const_char__P___pointer;
struct _GLKQuaternion___44B881517778DCFD8543672A2FEF14EA {GLKVector3 v;float s;};
struct std____1____atomic_base_unsigned_long_long__true_ { std____1____atomic_base_unsigned_long_long__false_ cppsuper0;};
struct std____1____libcpp_is_floating_point_long_double_ { std____1__true_type cppsuper0;};
typedef std____1__iterator_traits_const_char16_t__P___pointer std____1____wrap_iter_const_char16_t__P___pointer;
typedef std____1__iterator_traits_const_char32_t__P___pointer std____1____wrap_iter_const_char32_t__P___pointer;
typedef  std____1__basic_string_char16_t___value_type *std____1__basic_string_char16_t___const_reference;
typedef  std____1__basic_string_char32_t___value_type *std____1__basic_string_char32_t___const_reference;
typedef std____1__basic_string_view_char___const_pointer std____1__basic_string_view_char___const_iterator;
struct MPSIntersectionDistancePrimitiveIndexCoordinates {float distance;unsigned int primitiveIndex;vector_float2 coordinates;};
union arm_amx_state___E7A5EE9080EE8402944F8D536A1F0C4F {arm_amx_state_v1_t as_v1;};
typedef NSUInteger NSDateComponentsFormatterZeroFormattingBehavior;
typedef NSUInteger NSOrderedCollectionDifferenceCalculationOptions;
typedef NSUInteger QLThumbnailGenerationRequestRepresentationTypes;
typedef std____1__allocator_traits_std__allocator_char16_t____const_pointer std____1__basic_string_char16_t___const_pointer;
typedef std____1__allocator_traits_std__allocator_char32_t____const_pointer std____1__basic_string_char32_t___const_pointer;
typedef NSString *AVContentKeySessionServerPlaybackContextOption;
typedef NSString *AVPlayerItemLegibleOutputTextStylingResolution;
struct std____1____libcpp_is_integral_unsigned_short_ { std____1__true_type cppsuper0;};
struct std____1____scalar_hash_unsigned_long_long__1_ { std____1__unary_function_unsigned_long_long__unsigned_long_ cppsuper0;};
typedef NSString *ASAuthorizationProviderAuthorizationOperation;
typedef SLComposeViewControllerCompletionHandler TWTweetComposeViewControllerCompletionHandler;
union bp_address___3B940BBAFE206A608BBBF7EC1987BA49 {ip_addr_t ip_addr;};
union sadb_x_sa2___0B8F6C7C603ED8E5ADDF6AC271DF4C5E {u_int16_t sadb_x_sa2_reserved2;};
union sadb_x_sa2___BE0BF66556B3A07F217BF5ED388C8220 {u_int8_t sadb_x_sa2_reserved1;};
struct std____1____atomic_base_unsigned_short__true_ { std____1____atomic_base_unsigned_short__false_ cppsuper0;};
struct std____1____is_nullptr_t_impl_std__nullptr_t_ { std____1__true_type cppsuper0;};
struct std____1____libcpp_is_integral_unsigned_char_ { std____1__true_type cppsuper0;};
struct std____1____libcpp_is_integral_unsigned_long_ { std____1__true_type cppsuper0;};
struct std____1____scalar_hash_unsigned___int128__2_ { std____1__unary_function_unsigned___int128__unsigned_long_ cppsuper0;};
typedef std____1__iterator_traits_char16_t__P___reference std____1____wrap_iter_char16_t__P___reference;
typedef std____1__iterator_traits_char32_t__P___reference std____1____wrap_iter_char32_t__P___reference;
struct std____1__reverse_iterator_const_char16_t__P_ { std____1__iterator_std__random_access_iterator_tag__char16_t__long__const_char16_t__P__const_char16_t__R_ cppsuper0; short *__t; short *current;};
struct std____1__reverse_iterator_const_char32_t__P_ { std____1__iterator_std__random_access_iterator_tag__char32_t__long__const_char32_t__P__const_char32_t__R_ cppsuper0; int *__t; int *current;};
typedef NSString *UIAccessibilityAssistiveTechnologyIdentifier;
struct des_block___E577A72923D02C4B0C353C58593774EC {u_int32 high;u_int32 low;};
union ranlib_64___3D81D97140096141A6E59905565A4088 {uint64_t ran_strx;};
struct std____1____atomic_base_unsigned_char__true_ { std____1____atomic_base_unsigned_char__false_ cppsuper0;};
struct std____1____atomic_base_unsigned_long__true_ { std____1____atomic_base_unsigned_long__false_ cppsuper0;};
struct std____1____libcpp_is_floating_point_double_ { std____1__true_type cppsuper0;};
struct std____1____libcpp_is_integral_unsigned_int_ { std____1__true_type cppsuper0;};
struct std____1__is_error_condition_enum_std__errc_ { std____1__true_type cppsuper0;};
struct std____1__reverse_iterator_const_wchar_t__P_ { std____1__iterator_std__random_access_iterator_tag__wchar_t__long__const_wchar_t__P__const_wchar_t__R_ cppsuper0; int *__t; int *current;};
struct MPSRayOriginMinDistanceDirectionMaxDistance {MPSPackedFloat3 origin;float minDistance;MPSPackedFloat3 direction;float maxDistance;};
union fhstatus___30CF5BCCDA22B93749F2B0C0553C9F0B {_fhandle fhs_fhandle;};
union nlist_64___4D543BF749BB09F4875D250FEC3C43C7 {uint32_t n_strx;};
struct std____1____atomic_base_unsigned_int__true_ { std____1____atomic_base_unsigned_int__false_ cppsuper0;};
struct std____1____libcpp_is_floating_point_float_ { std____1__true_type cppsuper0;};
struct std____1____libcpp_is_integral___uint128_t_ { std____1__true_type cppsuper0;};
struct std____1____libcpp_is_integral_signed_char_ { std____1__true_type cppsuper0;};
typedef std____1__iterator_traits_char16_t__P___pointer std____1____wrap_iter_char16_t__P___pointer;
typedef std____1__iterator_traits_char32_t__P___pointer std____1____wrap_iter_char32_t__P___pointer;
typedef std____1__basic_string_char16_t___value_type *std____1__basic_string_char16_t___reference;
typedef std____1__basic_string_char32_t___value_type *std____1__basic_string_char32_t___reference;
struct unwind_info_section_header_lsda_index_entry {uint32_t functionOffset;uint32_t lsdaOffset;};
typedef AHTRestoreReturn (*AHTRestoreUpdateDeviceWithOverridesFuncPtr)( char *,  __CFData *,  __CFDictionary *);
typedef NSUInteger MPSNNConvolutionAccumulatorPrecisionOption;
struct MTLAccelerationStructureInstanceDescriptor {MTLPackedFloat4x3 transformationMatrix;unsigned int flags;unsigned int mask;unsigned int intersectionFunctionTableOffset;unsigned int accelerationStructureIndex;};
typedef NSString *NSAttributedStringDocumentReadingOptionKey;
struct std____1____atomic_base_signed_char__true_ { std____1____atomic_base_signed_char__false_ cppsuper0;};
struct std____1____libcpp_is_integral___int128_t_ { std____1__true_type cppsuper0;};
struct std____1__is_error_code_enum_std__io_errc_ { std____1__true_type cppsuper0;};
typedef NSString *UIActivityItemsConfigurationPreviewIntent;
union ifconf___5DC96BFAC5DE8146297FC415464D4A33 {caddr_t ifcu_buf;ifreq *ifcu_req;};
union ranlib___24EC4077698CAAE5404246A0B9CA27DF {uint32_t ran_strx;};
typedef ptrdiff_t std____1____bitset_0__0___difference_type;
struct std____1____libcpp_is_integral_long_long_ { std____1__true_type cppsuper0;};
typedef std____1__char_traits_char___int_type std____1__basic_streambuf_char___int_type;
typedef std____1__allocator_traits_std__allocator_char16_t____pointer std____1__basic_string_char16_t___pointer;
typedef std____1__allocator_traits_std__allocator_char32_t____pointer std____1__basic_string_char32_t___pointer;
typedef std____1__char_traits_char___int_type std____1__basic_stringbuf_char___int_type;
struct std____1__reverse_iterator_const_char__P_ { std____1__iterator_std__random_access_iterator_tag__char__long__const_char__P__const_char__R_ cppsuper0; char *__t; char *current;};
struct MTLDispatchThreadgroupsIndirectArguments {uint32_t threadgroupsPerGrid[3];};
typedef ALint (*alcOutputCapturerAvailableSamplesProcPtr)(void);
union inpcb___7D460B6C0767DE165AC6133441A5769E {u_char inp4_route[20];u_char inp6_route[32];};
union nlist___4D543BF749BB09F4875D250FEC3C43C7 {uint32_t n_strx;};
struct std____1____atomic_base_long_long__true_ { std____1____atomic_base_long_long__false_ cppsuper0;};
struct std____1____libcpp_is_integral_char16_t_ { std____1__true_type cppsuper0;};
struct std____1____libcpp_is_integral_char32_t_ { std____1__true_type cppsuper0;};
struct std____1____wrap_iter_const_char16_t__P_ {std____1____wrap_iter_const_char16_t__P___iterator_type __i;};
struct std____1____wrap_iter_const_char32_t__P_ {std____1____wrap_iter_const_char32_t__P___iterator_type __i;};
typedef std____1__allocator_traits_std__allocator_wchar_t____pointer std____1__basic_string_wchar_t___pointer;
typedef std____1__streamoff std____1__char_traits_wchar_t___off_type;
typedef std____1__streampos std____1__char_traits_wchar_t___pos_type;
struct std____1__ctype_byname_char__vtbl_layout; 
typedef NSString *UIActivityItemsConfigurationInteraction;
typedef NSString *UIActivityItemsConfigurationMetadataKey;
struct std____1____atomic_base_char16_t__true_ { std____1____atomic_base_char16_t__false_ cppsuper0;};
struct std____1____atomic_base_char32_t__true_ { std____1____atomic_base_char32_t__false_ cppsuper0;};
struct std____1____libcpp_is_integral_wchar_t_ { std____1__true_type cppsuper0;};
struct std____1____scalar_hash_long_double__1_ { std____1__unary_function_long_double__unsigned_long_ cppsuper0;};
struct std____1__chrono__duration_long_double_ {std____1__chrono__duration_long_double___rep __rep_;};
typedef NSString *AVAssetDownloadedAssetEvictionPriority;
struct MTLIndirectCommandBufferExecutionRange {uint32_t location;uint32_t length;};
typedef NSString *NSAttributedStringDocumentAttributeKey;
typedef NSUInteger NSPersonNameComponentsFormatterOptions;
typedef NSString *UIApplicationOpenExternalURLOptionsKey;
typedef ALint (*alcMacOSXGetMixerMaxiumumBussesProcPtr)(void);
struct std____1____atomic_base_wchar_t__true_ { std____1____atomic_base_wchar_t__false_ cppsuper0;};
struct unwind_info_section_header_index_entry {uint32_t functionOffset;uint32_t secondLevelPagesSectionOffset;uint32_t lsdaIndexArraySectionOffset;};
typedef NSUInteger EAWiFiUnconfiguredAccessoryProperties;
typedef void (*MTAudioProcessingTapUnprepareCallback)(MTAudioProcessingTapRef);
typedef NSUInteger MTLAccelerationStructureGeometryFlags;
typedef NSUInteger MTLAccelerationStructureInstanceFlags;
typedef NSString *UIApplicationExtensionPointIdentifier;
typedef NSString *VSAccountProviderAuthenticationScheme;
struct std____1____libcpp_is_integral_short_ { std____1__true_type cppsuper0;};
struct std____1____scalar_hash_long_long__1_ { std____1__unary_function_long_long__unsigned_long_ cppsuper0;};
typedef std____1__allocator_traits_std__allocator_char____pointer std____1__basic_string_char___pointer;
typedef std____1__streamoff std____1__char_traits_char___off_type;
typedef std____1__streampos std____1__char_traits_char___pos_type;
struct std____1__chrono__duration_long_long_ {std____1__chrono__duration_long_long___rep __rep_;};
struct AudioPacketRangeByteCountTranslation {SInt64 mPacket;SInt64 mPacketCount;SInt64 mByteCountUpperBound;};
struct MPSRayOriginMaskDirectionMaxDistance {MPSPackedFloat3 origin;unsigned int mask;MPSPackedFloat3 direction;float maxDistance;};
typedef void (*MTAudioProcessingTapFinalizeCallback)(MTAudioProcessingTapRef);
typedef NSUInteger NSAttributedStringEnumerationOptions;
typedef NSString *NSURLUbiquitousItemDownloadingStatus;
typedef NSString *NSURLUbiquitousSharedItemPermissions;
typedef NSString *SKCloudServiceSetupMessageIdentifier;
typedef NSString *UITransitionContextViewControllerKey;
typedef ALint (*alMacOSXGetRenderChannelCountProcPtr)(void);
struct std____1____atomic_base_short__true_ { std____1____atomic_base_short__false_ cppsuper0;};
struct std____1____libcpp_is_integral_bool_ { std____1__true_type cppsuper0;};
struct std____1____libcpp_is_integral_char_ { std____1__true_type cppsuper0;};
struct std____1____libcpp_is_integral_long_ { std____1__true_type cppsuper0;};
struct std____1____scalar_hash___int128__2_ { std____1__unary_function___int128__unsigned_long_ cppsuper0;};
struct std____1__atomic_unsigned_long_long_ { std____1____atomic_base_unsigned_long_long__true_ cppsuper0;};
struct std____1__hash_std__error_condition_ { std____1__unary_function_std__error_condition__unsigned_long_ cppsuper0;};
typedef NSString *AVAssetWriterInputMediaDataLocation;
typedef CFStringRef (*CFDictionaryCopyDescriptionCallBack)( void *);
typedef NSUInteger CLKComplicationTimeTravelDirections;
typedef CMFormatDescriptionRef CMClosedCaptionFormatDescriptionRef;
typedef SInt32 ExtAudioFilePacketTableInfoOverride;
typedef NSUInteger NSFileManagerItemReplacementOptions;
typedef NSString *NSStringEncodingDetectionOptionsKey;
typedef NSString *SCNSceneSourceAnimationImportPolicy;
typedef NSInteger UIDocumentBrowserActionAvailability;
typedef ALint (*alcMacOSXGetRenderingQualityProcPtr)(void);
typedef uint32_t mach_voucher_attr_value_reference_t;
struct os_workgroup_interval_data_opaque_s {uint32_t sig;char opaque[56];};
struct std____1____atomic_base_char__true_ { std____1____atomic_base_char__false_ cppsuper0;};
struct std____1____atomic_base_long__true_ { std____1____atomic_base_long__false_ cppsuper0;};
struct std____1____libcpp_is_integral_int_ { std____1__true_type cppsuper0;};
typedef std____1__char_traits_char___int_type std____1__basic_ios_char___int_type;
struct std____1__is_scalar_std__nullptr_t_ { std____1__true_type cppsuper0;};
typedef UInt32 AudioComponentInstantiationOptions;
struct AudioPacketRollDistanceTranslation {SInt64 mPacket;SInt64 mRollDistance;};
typedef CFStringRef (*CFAllocatorCopyDescriptionCallBack)( void *);
struct MTLDrawPrimitivesIndirectArguments {uint32_t vertexCount;uint32_t instanceCount;uint32_t vertexStart;uint32_t baseInstance;};
struct MTLTriangleTessellationFactorsHalf {uint16_t edgeTessellationFactor[3];uint16_t insideTessellationFactor;};
typedef NSString *NSUserActivityPersistentIdentifier;
typedef SLComposeViewControllerResult TWTweetComposeViewControllerResult;
typedef NSUInteger UIGuidedAccessAccessibilityFeature;
typedef ALdouble (*alcMacOSXGetMixerOutputRateProcPtr)(void);
typedef void (*axr_encoder_storage_destroy_proc_t)(axr_encoder_storage_t);
struct dyld_cache_accelerator_initializer {uint32_t functionOffset;uint32_t imageIndex;};
typedef uint32_t mach_voucher_attr_recipe_command_t;
struct std____1____atomic_base_int__true_ { std____1____atomic_base_int__false_ cppsuper0;};
struct std____1____scalar_hash_double__1_ { std____1__unary_function_double__unsigned_long_ cppsuper0;};
struct std____1____wrap_iter_char16_t__P_ {std____1____wrap_iter_char16_t__P___iterator_type __i;};
struct std____1____wrap_iter_char32_t__P_ {std____1____wrap_iter_char32_t__P___iterator_type __i;};
struct std____1__hash_unsigned_long_long_ { std____1____scalar_hash_unsigned_long_long__1_ cppsuper0;};
typedef void (*std____1__ios_base__event_callback)(std____1__ios_base__event, std____1__ios_base *, int);
struct _2480E168A8CF38FB319C7F302A3EC51F {uint32_t x;uint32_t y;};
struct _267FA10EEE474E805B8C8A97DF30A983 {u_int16_t nscount;u_int16_t nstimes[3];int nssocks[3];__res_9_state_ext *ext;};
union _79F3AB6A34861CC03A68F8EA0BB70127 {CGFloat vec[4];CGFloat *ptr;};
struct _8991E2D102B0A4682EC5E58EBA9CEC64 {_0F86A902432A6AC29AEC495AB2D22C1F x;_0F86A902432A6AC29AEC495AB2D22C1F y;};
struct _F11DCF9AB84521AF9E41C64324B37A66 {NSRange _range;};
typedef NSString *AVAssetImageGeneratorApertureMode;
typedef NSUInteger AVAudioSessionInterruptionOptions;
struct AudioIndependentPacketTranslation {SInt64 mPacket;SInt64 mIndependentlyDecodablePacket;};
typedef void (*CFMessagePortInvalidationCallBack)(CFMessagePortRef, void *);
struct GCExtendedGamepadSnapShotDataV100 {uint16_t version;uint16_t size;float dpadX;float dpadY;float buttonA;float buttonB;float buttonX;float buttonY;float leftShoulder;float rightShoulder;float leftThumbstickX;float leftThumbstickY;float rightThumbstickX;float rightThumbstickY;float leftTrigger;float rightTrigger;};
typedef NSUInteger INTemporalEventTriggerTypeOptions;
typedef uint32_t MTAudioProcessingTapCreationFlags;
struct MTLStageInRegionIndirectArguments {uint32_t stageInOrigin[3];uint32_t stageInSize[3];};
struct MTLVertexAmplificationViewMapping {uint32_t viewportArrayIndexOffset;uint32_t renderTargetArrayIndexOffset;};
typedef NSUInteger NSMeasurementFormatterUnitOptions;
typedef NSUInteger NSStringEncodingConversionOptions;
typedef NSUInteger UISwipeGestureRecognizerDirection;
typedef NSUInteger UNNotificationPresentationOptions;
typedef uint32_t mach_voucher_attr_control_flags_t;
typedef uint32_t mach_voucher_attr_importance_refs;
struct std____1____scalar_hash_float__0_ { std____1__unary_function_float__unsigned_long_ cppsuper0;};
struct std____1__ctype_char__vtbl_layout; 
struct std____1__ctype_byname_char__vtbl; 
struct std____1__unique_lock_std__mutex_ {std____1__unique_lock_std__mutex___mutex_type *__m_;char __owns_;};
typedef void (*AudioSessionInterruptionListener)(void *, UInt32);
typedef CFOptionFlags CFURLBookmarkFileCreationOptions;
typedef CFStringRef CMClosedCaptionDescriptionFlavor;
typedef NSUInteger HMHomeManagerAuthorizationStatus;
typedef NSUInteger MKLocalSearchCompleterResultType;
typedef void (*MTAudioProcessingTapInitCallback)(MTAudioProcessingTapRef, void *, void **);
struct MTLCounterResultStageUtilization {uint64_t totalCycles;uint64_t vertexCycles;uint64_t tessellationCycles;uint64_t postTessellationVertexCycles;uint64_t fragmentCycles;uint64_t renderTargetCycles;};
typedef NSUInteger NSURLBookmarkFileCreationOptions;
typedef void (*XML_ProcessingInstructionHandler)(void *,  XML_Char *,  XML_Char *);
typedef uint32_t mach_voucher_attr_content_size_t;
typedef uint64_t mach_voucher_attr_value_handle_t;
struct os_workgroup_join_token_opaque_s {uint32_t sig;char opaque[36];};
struct std____1____libcpp_is_void_void_ { std____1__true_type cppsuper0;};
struct std____1__atomic_unsigned_short_ { std____1____atomic_base_unsigned_short__true_ cppsuper0;};
typedef ptrdiff_t std____1__messages_base__catalog;
typedef NSUInteger AVAudioSessionActivationOptions;
typedef NSString *AVSemanticSegmentationMatteType;
typedef UInt32 AudioBytePacketTranslationFlags;
typedef NSString *CBConnectionEventMatchingOption;
typedef void (*CFPlugInDynamicRegisterFunction)(CFPlugInRef);
typedef CFOptionFlags CFPropertyListMutabilityOptions;
typedef CGFloat (*CTRunDelegateGetDescentCallback)(void *);
typedef NSUInteger EKCalendarEventAvailabilityMask;
typedef NSUInteger MPSCNNConvolutionGradientOption;
typedef NSUInteger NSFileCoordinatorReadingOptions;
typedef NSUInteger NSFileCoordinatorWritingOptions;
typedef NSUInteger NSPropertyListMutabilityOptions;
typedef NSString *NSStreamNetworkServiceTypeValue;
typedef NSString *NSStreamSOCKSProxyConfiguration;
typedef NSString * PDFAppearanceCharacteristicsKey;
typedef NSUInteger UIAccessibilityHearingDeviceEar;
typedef NSUInteger UICloudSharingPermissionOptions;
typedef uint32_t VTCompressionSessionOptionFlags;
typedef uint32_t mach_voucher_attr_value_flags_t;
typedef void (*objc_uncaught_exception_handler)(id);
struct std____1____lazy_and_impl_true_ { std____1__true_type cppsuper0;};
struct std____1____lazy_or_impl_false_ { std____1__false_type cppsuper0;};
struct std____1__atomic_unsigned_char_ { std____1____atomic_base_unsigned_char__true_ cppsuper0;};
struct std____1__atomic_unsigned_long_ { std____1____atomic_base_unsigned_long__true_ cppsuper0;};
struct std____1__hash_std__error_code_ { std____1__unary_function_std__error_code__unsigned_long_ cppsuper0;};
struct std____1__is_destructible_void_ { std____1__false_type cppsuper0;};
typedef int (*AAArchiveStreamWriteHeaderProc)(void *, AAHeader);
typedef NSString *ASAuthorizationOpenIDOperation;
typedef void (*AUInputSamplesInOutputCallback)(void *,  AudioTimeStamp *, Float64, Float64);
typedef NSUInteger AVAudioPlayerNodeBufferOptions;
typedef NSUInteger AVAudioSessionSetActiveOptions;
typedef NSUInteger AVCaptureSystemPressureFactors;
typedef NSString *AVContentKeyRequestRetryReason;
typedef CFStringRef (*CFArrayCopyDescriptionCallBack)( void *);
typedef void (*CFMachPortInvalidationCallBack)(CFMachPortRef, void *);
typedef CFOptionFlags CFURLBookmarkResolutionOptions;
typedef void (*CGPDFDictionaryApplierFunction)( char *, CGPDFObjectRef, void *);
typedef CMFormatDescriptionRef CMMetadataFormatDescriptionRef;
typedef CMFormatDescriptionRef CMTimeCodeFormatDescriptionRef;
typedef CGFloat (*CTRunDelegateGetAscentCallback)(void *);
struct GCMicroGamepadSnapShotDataV100 {uint16_t version;uint16_t size;float dpadX;float dpadY;float buttonA;float buttonX;};
typedef NSString *HKCharacteristicTypeIdentifier;
typedef NSUInteger INChargingConnectorTypeOptions;
struct MTLQuadTessellationFactorsHalf {uint16_t edgeTessellationFactor[4];uint16_t insideTessellationFactor[2];};
typedef NSString *NSAttributedStringDocumentType;
typedef NSString *NSFileProviderDomainIdentifier;
typedef NSUInteger NSFileProviderItemCapabilities;
typedef NSUInteger NSURLBookmarkResolutionOptions;
typedef NSUInteger PHContentEditingInputRequestID;
typedef NSString *UIApplicationOpenURLOptionsKey;
typedef NSUInteger UICollectionViewScrollPosition;
typedef uint32_t UIFontDescriptorSymbolicTraits;
typedef NSString *UIImagePickerControllerInfoKey;
typedef NSString *UIPageViewControllerOptionsKey;
typedef NSUInteger UIViewKeyframeAnimationOptions;
typedef Class (*_objc_swiftMetadataInitializer)(Class, void *);
struct dyld_cache_local_symbols_entry {uint32_t dylibOffset;uint32_t nlistStartIndex;uint32_t nlistCount;};
typedef dyld_kernel_image_info_t *dyld_kernel_image_info_array_t;
typedef uint8_t *mach_voucher_attr_raw_recipe_t;
struct std____1__atomic_unsigned_int_ { std____1____atomic_base_unsigned_int__true_ cppsuper0;};
struct std____1__forward_iterator_tag { std____1__input_iterator_tag cppsuper0;};
struct std____1__hash_unsigned_short_ { std____1__unary_function_unsigned_short__unsigned_long_ cppsuper0;};
typedef int (*AAArchiveStreamReadHeaderProc)(void *, AAHeader *);
typedef AHTRestoreReturn (*AHTRestoreUpdateDeviceFuncPtr)( char *,  __CFData *, unsigned int);
typedef NSUInteger AVAudioSessionCategoryOptions;
struct AudioUnitFrequencyResponseBin {Float64 mFrequency;Float64 mMagnitude;};
struct AudioUnitParameterHistoryInfo {Float32 updatesPerSecond;Float32 historyDurationInSeconds;};
typedef CFStringRef (*CFTreeCopyDescriptionCallBack)( void *);
typedef int32_t CMBufferQueueTriggerCondition;
typedef CGFloat (*CTRunDelegateGetWidthCallback)(void *);
typedef NSUInteger INShortcutAvailabilityOptions;
typedef NSUInteger MPSAccelerationStructureUsage;
typedef NSUInteger MPSCNNBatchNormalizationFlags;
typedef NSUInteger MTLAccelerationStructureUsage;
struct MTLDrawPatchIndirectArguments {uint32_t patchCount;uint32_t instanceCount;uint32_t patchStart;uint32_t baseInstance;};
typedef NSUInteger NSDirectoryEnumerationOptions;
typedef NSUInteger NSFileVersionReplacingOptions;
typedef NSString *NSURLUbiquitousSharedItemRole;
typedef NSString * PDFAnnotationHighlightingMode;
typedef NSString *PKPassLibraryNotificationName;
typedef NSString *SKCloudServiceSetupOptionsKey;
typedef NSString *UIAccessibilityTextualContext;
typedef NSString *UIApplicationLaunchOptionsKey;
typedef NSString *UIConfigurationStateCustomKey;
typedef NSString *UIFontDescriptorAttributeName;
typedef NSUInteger UNNotificationCategoryOptions;
typedef void (*XML_StartNamespaceDeclHandler)(void *,  XML_Char *,  XML_Char *);
typedef void (*XML_UnparsedEntityDeclHandler)(void *,  XML_Char *,  XML_Char *,  XML_Char *,  XML_Char *,  XML_Char *);
typedef ALvoid (*alcOutputCapturerStartProcPtr)(void);
struct dyld_cache_local_symbols_info {uint32_t nlistOffset;uint32_t nlistCount;uint32_t stringsOffset;uint32_t stringsSize;uint32_t entriesOffset;uint32_t entriesCount;};
struct std____1____shared_weak_count { std____1____shared_count cppsuper0;long long __shared_weak_owners_;};
struct std____1__atomic_signed_char_ { std____1____atomic_base_signed_char__true_ cppsuper0;};
struct std____1__hash_unsigned_char_ { std____1__unary_function_unsigned_char__unsigned_long_ cppsuper0;};
struct std____1__hash_unsigned_long_ { std____1__unary_function_unsigned_long__unsigned_long_ cppsuper0;};
typedef UInt32 AUSpatialMixerRenderingFlags;
typedef NSUInteger AVAssetReferenceRestrictions;
typedef NSUInteger AVAudioSpatializationFormats;
typedef NSString *AVCaptureSystemPressureLevel;
typedef UInt32 AudioFileStreamPropertyFlags;
typedef UInt32 AudioQueueProcessingTapFlags;
typedef UInt32 AudioSessionInterruptionType;
typedef CFStringRef (*CFBagCopyDescriptionCallBack)( void *);
typedef CFOptionFlags CFNumberFormatterOptionFlags;
typedef CFStringRef (*CFSetCopyDescriptionCallBack)( void *);
typedef CFOptionFlags CFURLBookmarkCreationOptions;
typedef void (*CGPatternDrawPatternCallback)(void *, CGContextRef);
typedef uint32_t CMAudioFormatDescriptionMask;
typedef void (*CMBufferQueueTriggerCallback)(void *, CMBufferQueueTriggerToken);
typedef NSUInteger GKMeshGraphTriangulationMode;
typedef UInt16 JustPCUnconditionalAddAction;
typedef NSUInteger NSComparisonPredicateOptions;
typedef NSString *NSFileProviderItemIdentifier;
typedef NSUInteger NSURLBookmarkCreationOptions;
typedef NSString *NSURLThumbnailDictionaryItem;
typedef NSString * PDFAnnotationLineEndingStyle;
typedef int32_t PHAssetResourceDataRequestID;
typedef NSString *PKPassLibraryNotificationKey;
struct SFNTLookupBinarySearchHeader {UInt16 unitSize;UInt16 nUnits;UInt16 searchRange;UInt16 entrySelector;UInt16 rangeShift;};
typedef uint32_t UIAccessibilityNotifications;
typedef NSString *UIFontDescriptorSystemDesign;
typedef NSString *UIPasteboardDetectionPattern;
typedef CGFloat UIScrollViewDecelerationRate;
struct __darwin_arm_exception_state {__uint32_t __exception;__uint32_t __fsr;__uint32_t __far;};
typedef ALvoid (*alcOutputCapturerStopProcPtr)(void);
struct dyld_chained_import_addend64 {unsigned long long lib_ordinal : 16;unsigned long long weak_import : 1;unsigned long long reserved : 15;unsigned long long name_offset : 32;uint64_t addend;};
struct dyld_chained_starts_in_image {uint32_t seg_count;uint32_t seg_info_offset[1];};
typedef uint32_t ipc_pthread_priority_value_t;
typedef void (*processingInstructionSAXFunc)(void *,  xmlChar *,  xmlChar *);
struct std____1__hash_unsigned_int_ { std____1__unary_function_unsigned_int__unsigned_long_ cppsuper0;};
typedef uint32_t ABPersonCompositeNameFormat;
typedef NSString *AVMetadataExtraAttributeKey;
typedef void (*AudioFileStream_PacketsProc)(void *, UInt32, UInt32,  void *, AudioStreamPacketDescription *);
typedef void (*CFDictionaryReleaseCallBack)(CFAllocatorRef,  void *);
typedef NSString *CIImageAutoAdjustmentOption;
typedef NSString *CIImageRepresentationOption;
typedef CMFormatDescriptionRef CMAudioFormatDescriptionRef;
typedef CFStringRef CMMetadataDescriptionFlavor;
typedef CMFormatDescriptionRef CMMuxedFormatDescriptionRef;
typedef CFStringRef CMTimeCodeDescriptionFlavor;
typedef CMFormatDescriptionRef CMVideoFormatDescriptionRef;
typedef uint32_t CTFontCollectionCopyOptions;
typedef NSString *HKCorrelationTypeIdentifier;
typedef NSString *ICCameraItemThumbnailOption;
typedef NSUInteger MPSMatrixRandomDistribution;
struct MPSRayPackedOriginDirection {MPSPackedFloat3 origin;MPSPackedFloat3 direction;};
typedef NSUInteger MTLCommandBufferErrorOption;
typedef NSUInteger NSDataBase64DecodingOptions;
typedef NSUInteger NSDataBase64EncodingOptions;
typedef NSUInteger NSFileManagerUnmountOptions;
typedef NSUInteger NSFileWrapperReadingOptions;
typedef NSUInteger NSFileWrapperWritingOptions;
typedef NSString *NSProgressFileOperationKind;
typedef NSString *NSStreamSocketSecurityLevel;
typedef NSUInteger SCNPhysicsCollisionCategory;
typedef NSString *SCNSceneSourceLoadingOption;
typedef NSString *SCNShaderModifierEntryPoint;
typedef CFOptionFlags SecAccessControlCreateFlags;
typedef id UIScribbleElementIdentifier;
typedef NSUInteger UNNotificationActionOptions;
typedef void (*XML_EndNamespaceDeclHandler)(void *,  XML_Char *);
typedef void (*XML_StartDoctypeDeclHandler)(void *,  XML_Char *,  XML_Char *,  XML_Char *, int);
typedef void (*axr_data_provider_release_t)(uintptr_t);
struct dyld_chained_starts_offsets {uint32_t pointer_format;uint32_t starts_count;uint32_t chain_starts[1];};
typedef uint32_t mach_voucher_attr_command_t;
typedef uint8_t *mach_voucher_attr_content_t;
typedef id (*objc_exception_preprocessor)(id);
typedef uintptr_t ptrauth_generic_signature_t;
struct std____1__atomic_long_long_ { std____1____atomic_base_long_long__true_ cppsuper0;};
struct std____1__bad_function_call { std__exception cppsuper0;};
struct std____1__hash___uint128_t_ { std____1____scalar_hash_unsigned___int128__2_ cppsuper0;};
struct std____1__hash_long_double_ { std____1____scalar_hash_long_double__1_ cppsuper0;};
struct std____1__hash_signed_char_ { std____1__unary_function_signed_char__unsigned_long_ cppsuper0;};
typedef thread_state_flavor_t *thread_state_flavor_array_t;
typedef UInt32 AUScheduledAudioSliceFlags;
struct AVAudio3DVectorOrientation {AVAudio3DVector forward;AVAudio3DVector up;};
typedef NSString *AVAudioSessionPolarPattern;
typedef NSUInteger AVMusicSequenceLoadOptions;
typedef UInt32 AudioUnitRenderActionFlags;
struct BNNSOptimizerRMSPropFields {float learning_rate;float alpha;float epsilon;char centered;float momentum;float gradient_scale;float regularization_scale;char clip_gradients;float clip_gradients_min;float clip_gradients_max;BNNSOptimizerRegularizationFunction regularization_func;};
typedef NSString *CAAnimationCalculationMode;
typedef NSString *CAEmitterLayerEmitterShape;
typedef NSUInteger CBCharacteristicProperties;
typedef  void *(*CFDictionaryRetainCallBack)(CFAllocatorRef,  void *);
typedef CFOptionFlags CFFileSecurityClearOptions;
typedef CFOptionFlags CFISO8601DateFormatOptions;
typedef void (*CFNetServiceClientCallBack)(CFNetServiceRef, CFStreamError *, void *);
typedef CFOptionFlags CFStringTokenizerTokenType;
typedef void (*CGFunctionEvaluateCallback)(void *,  CGFloat *, CGFloat *);
typedef NSString *CHHapticDynamicParameterID;
typedef NSUInteger CKQuerySubscriptionOptions;
typedef CMFormatDescriptionRef CMTextFormatDescriptionRef;
typedef int64_t CXCallDirectoryPhoneNumber;
struct GCMicroGamepadSnapshotData {uint16_t version;uint16_t size;float dpadX;float dpadY;float buttonA;float buttonX;};
typedef NSString *ICCameraItemMetadataOption;
typedef uint32_t IOSurfacePurgeabilityState;
struct JustPCGlyphRepeatAddAction {UInt16 flags;UInt16 glyph;};
struct MIDICIDeviceIdentification {uint8_t manufacturer[3];uint8_t family[2];uint8_t modelNumber[2];uint8_t revisionLevel[4];uint8_t reserved[5];};
typedef uint64_t MLCGraphCompilationOptions;
typedef uint32_t MPSFunctionConstantInMetal;
typedef NSString *MTKTextureLoaderCubeLayout;
typedef NSUInteger NSFileVersionAddingOptions;
typedef NSUInteger NSISO8601DateFormatOptions;
typedef NSUInteger NSKeyValueObservingOptions;
typedef NSUInteger NSPropertyListWriteOptions;
typedef NSUInteger NSRegularExpressionOptions;
typedef NSUInteger NSStringEnumerationOptions;
typedef NSUInteger NSVolumeEnumerationOptions;
typedef int64_t OSAtomic_int64_aligned64_t;
typedef NSString * PDFAnnotationWidgetSubtype;
typedef uint32_t SCNetworkReachabilityFlags;
struct SRAmbientLightChromaticity {Float32 x;Float32 y;};
typedef CFStringRef SecKeyKeyExchangeParameter;
typedef NSUInteger TKSmartCardPINConfirmation;
typedef id TKTokenOperationConstraint;
typedef NSUInteger UIBackgroundTaskIdentifier;
typedef NSString *UIFontDescriptorFeatureKey;
typedef NSUInteger UIInterfaceOrientationMask;
typedef NSString *UITransitionContextViewKey;
typedef int (*XML_UnknownEncodingHandler)(void *,  XML_Char *, XML_Encoding *);
struct _MPSAxisAlignedBoundingBox {vector_float3 min;vector_float3 max;};
struct __darwin_arm_debug_state64 {__uint64_t __bvr[16];__uint64_t __bcr[16];__uint64_t __wvr[16];__uint64_t __wcr[16];__uint64_t __mdscr_el1;};
typedef void (*axr_user_data_destructor_t)( void *, uintptr_t);
struct dyld_chained_fixups_header {uint32_t fixups_version;uint32_t starts_offset;uint32_t imports_offset;uint32_t symbols_offset;uint32_t imports_count;uint32_t imports_format;uint32_t symbols_format;};
struct dyld_chained_import_addend {unsigned int lib_ordinal : 8;unsigned int weak_import : 1;unsigned int name_offset : 23;int32_t addend;};
struct encryption_info_command_64 {uint32_t cmd;uint32_t cmdsize;uint32_t cryptoff;uint32_t cryptsize;uint32_t cryptid;uint32_t pad;};
typedef exception_behavior_t *exception_behavior_array_t;
struct host_can_has_debugger_info {boolean_t can_has_debugger;};
typedef void (*ignorableWhitespaceSAXFunc)(void *,  xmlChar *, int);
typedef ipc_info_tree_name_t *ipc_info_tree_name_array_t;
typedef int64_t mach_exception_data_type_t;
typedef mach_voucher_attr_recipe_data_t *mach_voucher_attr_recipe_t;
struct os_workgroup_attr_opaque_s {uint32_t sig;char opaque[60];};
struct std____1__atomic_char16_t_ { std____1____atomic_base_char16_t__true_ cppsuper0;};
struct std____1__atomic_char32_t_ { std____1____atomic_base_char32_t__true_ cppsuper0;};
struct std____1__ctype_char__vtbl; 
typedef __uint32_t std____1__ctype_base__mask;
struct std____1__hash___int128_t_ { std____1____scalar_hash___int128__2_ cppsuper0;};
struct unwind_info_section_header {uint32_t version;uint32_t commonEncodingsArraySectionOffset;uint32_t commonEncodingsArrayCount;uint32_t personalityArraySectionOffset;uint32_t personalityArrayCount;uint32_t indexSectionOffset;uint32_t indexCount;};
typedef xmlSchemaAttributeGroup *xmlSchemaAttributeGroupPtr;
typedef xmlSchematronParserCtxt *xmlSchematronParserCtxtPtr;
typedef NSUInteger AUHostTransportStateFlags;
typedef NSString *AVAudioSessionOrientation;
typedef NSString *AVAudioTimePitchAlgorithm;
struct AudioCodecMagicCookieInfo {UInt32 mMagicCookieSize; void *mMagicCookie;};
typedef UInt32 AudioFileStreamParseFlags;
typedef UInt32 AudioFileStreamPropertyID;
struct AudioQueueLevelMeterState {Float32 mAveragePower;Float32 mPeakPower;};
typedef UInt32 AudioUnitParameterOptions;
typedef NSString *CAEmitterLayerEmitterMode;
typedef NSString *CAMediaTimingFunctionName;
typedef NSString *CATextLayerTruncationMode;
typedef Boolean (*CFDictionaryEqualCallBack)( void *,  void *);
typedef CFOptionFlags CFNetServiceRegisterFlags;
typedef int32_t CTUnderlineStyleModifiers;
struct GCGamepadSnapShotDataV100 {uint16_t version;uint16_t size;float dpadX;float dpadY;float buttonA;float buttonB;float buttonX;float buttonY;float leftShoulder;float rightShoulder;};
typedef NSUInteger INMessageAttributeOptions;
typedef NSUInteger INRideFeedbackTypeOptions;
struct MDLAxisAlignedBoundingBox {vector_float3 maxBounds;vector_float3 minBounds;};
typedef NSUInteger MKDirectionsTransportType;
typedef NSString *MKPointOfInterestCategory;
typedef NSString *MLFeatureValueImageOption;
typedef uint64_t MPMediaEntityPersistentID;
struct MPSImageKeypointRangeInfo {NSUInteger maximumKeypoints;float minimumThresholdValue;};
typedef uint32_t MTAudioProcessingTapFlags;
struct MTLCounterResultStatistic {uint64_t tessellationInputPatches;uint64_t vertexInvocations;uint64_t postTessellationVertexInvocations;uint64_t clipperInvocations;uint64_t clipperPrimitivesOut;uint64_t fragmentInvocations;uint64_t fragmentsPassed;uint64_t computeKernelInvocations;};
struct MTLCounterResultTimestamp {uint64_t timestamp;};
struct MTLTextureSwizzleChannels {MTLTextureSwizzle red;MTLTextureSwizzle green;MTLTextureSwizzle blue;MTLTextureSwizzle alpha;};
typedef NSUInteger NSByteCountFormatterUnits;
typedef NSString *NSFileProviderServiceName;
typedef NSInteger NSItemProviderFileOptions;
typedef NSUInteger NSLinguisticTaggerOptions;
typedef NSUInteger NSPointerFunctionsOptions;
typedef NSPropertyListMutabilityOptions NSPropertyListReadOptions;
typedef NSString *NSStreamSOCKSProxyVersion;
typedef NSString * PDFAnnotationTextIconType;
typedef NSUInteger PHAssetBurstSelectionType;
typedef NSUInteger PKSuppressionRequestToken;
typedef NSString *SCNGeometrySourceSemantic;
typedef uint32_t SCPreferencesNotification;
typedef NSString *SKCloudServiceSetupAction;
typedef NSString *VNRecognizedPointGroupKey;
struct __darwin_arm_cpmu_state64 {__uint64_t __ctrs[16];};
struct __darwin_arm_thread_state {__uint32_t __r[13];__uint32_t __sp;__uint32_t __lr;__uint32_t __pc;__uint32_t __cpsr;};
typedef __darwin_natural_t __darwin_mach_port_name_t;
struct __objc_instance_vars_list {uint32_t count;};
typedef uint32_t compact_unwind_encoding_t;
struct dns_raw_resource_record_t {uint16_t length;char *data;};
typedef uint64_t nw_browse_result_change_t;
struct os_activity_scope_state_s {uint64_t opaque[2];};
typedef integer_t processor_set_info_data_t[1024];
typedef __ns_update_operation res_9_ns_update_operation;
struct scattered_relocation_info {unsigned int r_address : 24;unsigned int r_type : 4;unsigned int r_length : 2;unsigned int r_pcrel : 1;unsigned int r_scattered : 1;int32_t r_value;};
struct std____1__atomic_wchar_t_ { std____1____atomic_base_wchar_t__true_ cppsuper0;};
struct std____1__basic_ios_char_ {std____1__basic_ostream_char_ *__tie_;std____1__basic_ios_char___int_type __fill_;};
struct std____1__hash_long_long_ { std____1____scalar_hash_long_long__1_ cppsuper0;};
typedef uint32_t task_exc_guard_behavior_t;
struct task_inspect_basic_counts {uint64_t instructions;uint64_t cycles;};
typedef void (*unparsedEntityDeclSAXFunc)(void *,  xmlChar *,  xmlChar *,  xmlChar *,  xmlChar *);
typedef xmlCharEncodingHandler *xmlCharEncodingHandlerPtr;
typedef xmlSchemaAttributeLink *xmlSchemaAttributeLinkPtr;
typedef xmlSchematronValidCtxt *xmlSchematronValidCtxtPtr;
typedef UInt32 AudioConverterPropertyID;
typedef UInt32 AudioFileStreamSeekFlags;
typedef Float32 AudioQueueParameterValue;
typedef NSString *CAEmitterLayerRenderMode;
typedef NSString *CATextLayerAlignmentMode;
typedef CFHashCode (*CFDictionaryHashCallBack)( void *);
typedef CFOptionFlags CFNetServiceBrowserFlags;
typedef uint32_t CGGradientDrawingOptions;
typedef NSString *CHHapticEventParameterID;
typedef NSUInteger CKApplicationPermissions;
typedef NSUInteger CKRecordZoneCapabilities;
typedef NSUInteger CMAttitudeReferenceFrame;
typedef CFStringRef CMImageDescriptionFlavor;
typedef CFStringRef CMSoundDescriptionFlavor;
typedef int8_t CMTextJustificationValue;
typedef NSUInteger CPLimitableUserInterface;
typedef NSString *HKCategoryTypeIdentifier;
typedef NSString *HKClinicalTypeIdentifier;
typedef NSString *HKDocumentTypeIdentifier;
typedef NSString *HKQuantityTypeIdentifier;
typedef void (*JSObjectFinalizeCallback)(JSObjectRef);
typedef NSUInteger MPMediaPlaylistAttribute;
struct MPSIntegerDivisionParams {uint16_t divisor;uint16_t recip;uint16_t addend;uint16_t shift;};
typedef NSUInteger NSBinarySearchingOptions;
typedef NSInteger NSControlCharacterAction;
typedef NSUInteger NSFetchRequestResultType;
typedef NSString *NSHTTPCookieStringPolicy;
struct NSMapTableValueCallBacks {void (*retain)(NSMapTable *,  void *);void (*release)(NSMapTable *, void *);NSString *(*describe)(NSMapTable *,  void *);};
typedef NSUInteger NSNotificationCoalescing;
struct NSOperatingSystemVersion {NSInteger majorVersion;NSInteger minorVersion;NSInteger patchVersion;};
typedef NSUInteger NSTextStorageEditActions;
typedef NSString * PHLivePhotoEditingOption;
typedef NSString *SCNPhysicsTestSearchMode;
typedef uint32_t SCNetworkConnectionFlags;
typedef NSUInteger SKCloudServiceCapability;
typedef NSString *SRDeviceUsageCategoryKey;
struct SecKeychainAttributeInfo {UInt32 count;UInt32 *tag;UInt32 *format;};
struct SecKeychainAttributeList {UInt32 count;SecKeychainAttribute *attr;};
typedef NSUInteger TKSmartCardPINCompletion;
typedef NSString *UIFontDescriptorTraitKey;
typedef NSUInteger UIRemoteNotificationType;
typedef NSUInteger UITableViewCellStateMask;
typedef void (*XML_CharacterDataHandler)(void *,  XML_Char *, int);
typedef void (*XML_SkippedEntityHandler)(void *,  XML_Char *, int);
struct __arm_legacy_debug_state {__uint32_t __bvr[16];__uint32_t __bcr[16];__uint32_t __wvr[16];__uint32_t __wcr[16];};
typedef thread_state_flavor_t *exception_flavor_array_t;
typedef hash_info_bucket_t *hash_info_bucket_array_t;
typedef mach_exception_data_type_t mach_exception_subcode_t;
typedef mach_memory_info_t *mach_memory_info_array_t;
typedef mig_routine_descriptor *mig_routine_descriptor_t;
typedef  char *(*objc_hook_lazyClassNamer)(Class);
struct std____1__hash_char16_t_ { std____1__unary_function_char16_t__unsigned_long_ cppsuper0;};
struct std____1__hash_char32_t_ { std____1__unary_function_char32_t__unsigned_long_ cppsuper0;};
struct std____1__pointer_safety {std____1__pointer_safety____lx __v_;};
struct thread_background_policy {integer_t priority;};
struct thread_precedence_policy {integer_t importance;};
struct vImageChannelDescription {CGFloat min;CGFloat zero;CGFloat full;CGFloat max;};
typedef void (*xmlParserInputDeallocate)(xmlChar *);
typedef xmlXPathParserContext *xmlXPathParserContextPtr;
typedef UInt32 AU3DMixerRenderingFlags;
struct AudioConverterPrimeInfo {UInt32 leadingFrames;UInt32 trailingFrames;};
typedef UInt32 AudioServicesPropertyID;
typedef Float32 AudioUnitParameterValue;
struct BNNSOptimizerAdamFields {float learning_rate;float beta1;float beta2;float time_step;float epsilon;float gradient_scale;float regularization_scale;char clip_gradients;float clip_gradients_min;float clip_gradients_max;BNNSOptimizerRegularizationFunction regularization_func;};
typedef NSString *CAAnimationRotationMode;
typedef NSString *CAScrollLayerScrollMode;
typedef NSUInteger CBCentralManagerFeature;
typedef uint32_t CCPseudoRandomAlgorithm;
typedef NSUInteger CHHapticAudioResourceID;
typedef CFStringRef CMTextDescriptionFlavor;
typedef NSString *ICDeviceLocationOptions;
typedef NSUInteger INCallCapabilityOptions;
typedef NSUInteger INCallRecordTypeOptions;
typedef NSUInteger INPhotoAttributeOptions;
typedef NSString *INWorkoutNameIdentifier;
typedef NSUInteger MKLocalSearchResultType;
struct MPSImageReadWriteParams {NSUInteger featureChannelOffset;NSUInteger numberOfFeatureChannelsToReadWrite;};
struct MTLMapIndirectArguments {uint32_t regionOriginX;uint32_t regionOriginY;uint32_t regionOriginZ;uint32_t regionSizeWidth;uint32_t regionSizeHeight;uint32_t regionSizeDepth;uint32_t mipMapLevel;uint32_t sliceId;};
typedef UInt32 MortLigatureActionEntry;
typedef UInt32 MusicDeviceInstrumentID;
typedef uint8_t NFCISO15693ResponseFlag;
struct NSDirectionalEdgeInsets {CGFloat top;CGFloat leading;CGFloat bottom;CGFloat trailing;};
typedef NSString *NSHTTPCookiePropertyKey;
typedef NSString *NSURLFileProtectionType;
typedef NumVersionVariantPtr *NumVersionVariantHandle;
typedef NSUInteger PHLivePhotoBadgeOptions;
typedef NSUInteger UICollisionBehaviorMode;
typedef NSUInteger UIMenuElementAttributes;
typedef NSUInteger UIPopoverArrowDirection;
typedef NSString *UNNotificationSoundName;
typedef NSString *VNVideoProcessingOption;
typedef NSUInteger WKAudiovisualMediaTypes;
typedef void (*XML_NotationDeclHandler)(void *,  XML_Char *,  XML_Char *,  XML_Char *,  XML_Char *);
typedef void (*XML_StartElementHandler)(void *,  XML_Char *,  XML_Char **);
struct __objc_class_struct_ext {void *isa;char *super_class;char *name;long long version;long long info;long long instance_size;void *ivars;void *methods;long long cache;void *protocols; uint8_t *ivar_layout;void *ext;};
struct __objc_method_desc_list {uint32_t count;};
typedef long long (*axr_encoder_seek_proc_t)(axr_encoder_storage_t, unsigned long long);
struct dylib_table_of_contents {uint32_t symbol_index;uint32_t module_index;};
struct encryption_info_command {uint32_t cmd;uint32_t cmdsize;uint32_t cryptoff;uint32_t cryptsize;uint32_t cryptid;};
typedef mach_port_options_t *mach_port_options_ptr_t;
typedef uint32_t mach_voucher_attr_key_t;
typedef uint32_t mach_voucher_selector_t;
struct objc_method_description {SEL name;char *types;};
struct processor_set_load_info {int task_count;int thread_count;integer_t load_average;integer_t mach_factor;};
struct std____1__atomic_short_ { std____1____atomic_base_short__true_ cppsuper0;};
struct std____1__hash_wchar_t_ { std____1__unary_function_wchar_t__unsigned_long_ cppsuper0;};
struct std____1__locale__facet { std____1____shared_count cppsuper0;};
typedef integer_t thread_throughput_qos_t;
struct vImage_YpCbCrPixelRange {int32_t Yp_bias;int32_t CbCr_bias;int32_t YpRangeMax;int32_t CbCrRangeMax;int32_t YpMax;int32_t YpMin;int32_t CbCrMax;int32_t CbCrMin;};
struct vm_region_extended_info {vm_prot_t protection;unsigned int user_tag;unsigned int pages_resident;unsigned int pages_shared_now_private;unsigned int pages_swapped_out;unsigned int pages_dirtied;unsigned int ref_count;unsigned short shadow_depth;unsigned char external_pager;unsigned char share_mode;unsigned int pages_reusable;};
typedef xmlParserInputBuffer *xmlParserInputBufferPtr;
typedef xmlParserNodeInfoSeq *xmlParserNodeInfoSeqPtr;
typedef xmlRelaxNGParserCtxt *xmlRelaxNGParserCtxtPtr;
typedef uint32_t AACompressionAlgorithm;
typedef int32_t ABMultiValueIdentifier;
typedef CFTypeRef ABMutableMultiValueRef;
typedef NSString *AVAudioSessionCategory;
typedef NSString *AVAudioSessionLocation;
typedef NSString *AVCaptureSessionPreset;
typedef NSString *AVOutputSettingsPreset;
typedef NSString *AVTrackAssociationType;
typedef UInt32 AudioSessionPropertyID;
typedef NSString *CALayerContentsGravity;
typedef NSUInteger CBAttributePermissions;
typedef void (*CFArrayReleaseCallBack)(CFAllocatorRef,  void *);
typedef void (*CFPlugInUnloadFunction)(CFPlugInRef);
typedef void (*CFRunLoopTimerCallBack)(CFRunLoopTimerRef, void *);
typedef CFOptionFlags CFURLEnumeratorOptions;
typedef uint32_t CGPDFAccessPermissions;
struct CLLocationCoordinate2D {CLLocationDegrees latitude;CLLocationDegrees longitude;};
typedef NSInteger CPManeuverDisplayStyle;
typedef UInt32 ExtAudioFilePropertyID;
struct KerxControlPointAction {UInt16 markControlPoint;UInt16 currControlPoint;};
typedef ALCcontext *(*LPALCGETCURRENTCONTEXT)(void);
typedef NSString *MTKTextureLoaderOption;
typedef NSString *MTKTextureLoaderOrigin;
typedef NSUInteger MTLIndirectCommandType;
typedef UInt32 MusicSequenceFileFlags;
typedef UInt32 MusicSequenceLoadFlags;
typedef uint8_t NFCISO15693RequestFlag;
struct NSFastEnumerationState {unsigned long long state;id *itemsPtr;unsigned long long *mutationsPtr;unsigned long long extra[5];};
typedef NSUInteger NSSearchPathDomainMask;
typedef NSUInteger NSStringCompareOptions;
typedef NSInteger NSStringDrawingOptions;
typedef NSString *NSTextLayoutSectionKey;
typedef NSString *NSValueTransformerName;
typedef NSUInteger NSXPCConnectionOptions;
typedef NSUInteger OSLogEnumeratorOptions;
typedef NSString *PDFDocumentWriteOption;
typedef NSString *UIFocusSoundIdentifier;
typedef NSWritingDirection UITextWritingDirection;
typedef NSUInteger UIUserNotificationType;
typedef NSUInteger UIViewAnimationOptions;
typedef NSUInteger UNAuthorizationOptions;
typedef int64_t UTextMapOffsetToNative( UText *);
typedef void (*XML_AttlistDeclHandler)(void *,  XML_Char *,  XML_Char *,  XML_Char *,  XML_Char *, int);
struct __darwin_arm_vfp_state {__uint32_t __r[64];__uint32_t __fpscr;};
typedef exception_mask_t *exception_mask_array_t;
typedef lockgroup_info_t *lockgroup_info_array_t;
typedef mach_zone_info_t *mach_zone_info_array_t;
typedef mach_zone_name_t *mach_zone_name_array_t;
typedef void (*objc_exception_handler)(id, void *);
struct policy_timeshare_limit {integer_t max_priority;};
typedef integer_t *processor_info_array_t;
struct sqlite3_rtree_geometry {void *pContext;int nParam;sqlite3_rtree_dbl *aParam;void *pUser;void (*xDelUser)(void *);};
typedef void (*startElementNsSAX2Func)(void *,  xmlChar *,  xmlChar *,  xmlChar *, int,  xmlChar **, int, int,  xmlChar **);
struct std____1____do_message { std____1__error_category cppsuper0;};
struct std____1__atomic_bool_ { std____1____atomic_base_bool__false_ cppsuper0;};
struct std____1__atomic_char_ { std____1____atomic_base_char__true_ cppsuper0;};
struct std____1__atomic_long_ { std____1____atomic_base_long__true_ cppsuper0;};
struct std____1__bad_weak_ptr { std__exception cppsuper0;};
struct std____1__hash_double_ { std____1____scalar_hash_double__1_ cppsuper0;};
struct task_absolutetime_info {uint64_t total_user;uint64_t total_system;uint64_t threads_user;uint64_t threads_system;};
struct task_affinity_tag_info {integer_t set_count;integer_t min;integer_t max;integer_t task_count;};
struct task_kernelmemory_info {uint64_t total_palloc;uint64_t total_pfree;uint64_t total_salloc;uint64_t total_sfree;};
struct task_thread_times_info {time_value_t user_time;time_value_t system_time;};
struct task_trace_memory_info {uint64_t user_memory_address;uint64_t buffer_size;uint64_t mailbox_array_size;};
typedef task_zone_info_t *task_zone_info_array_t;
struct thread_affinity_policy {integer_t affinity_tag;};
struct thread_extended_policy {boolean_t timeshare;};
struct thread_identifier_info {uint64_t thread_id;uint64_t thread_handle;uint64_t dispatch_qaddr;};
struct twolevel_hints_command {uint32_t cmd;uint32_t cmdsize;uint32_t offset;uint32_t nhints;};
struct vImageTransferFunction {CGFloat c0;CGFloat c1;CGFloat c2;CGFloat c3;CGFloat gamma;CGFloat cutoff;CGFloat c4;CGFloat c5;};
typedef vm_info_object_t *vm_info_object_array_t;
typedef u_int32_t vol_capabilities_set_t[4];
typedef xmlRelaxNGValidCtxt *xmlRelaxNGValidCtxtPtr;
typedef xmlSchemaParserCtxt *xmlSchemaParserCtxtPtr;
typedef xmlSchemaWildcardNs *xmlSchemaWildcardNsPtr;
typedef NSUInteger ARSceneReconstruction;
typedef NSString *AVMediaCharacteristic;
typedef NSUInteger AVMovieWritingOptions;
typedef NSString *AVPlayerWaitingReason;
typedef UInt32 AudioChannelLayoutTag;
typedef SInt64 (*AudioFile_GetSizeProc)(void *);
typedef UInt32 AudioFormatPropertyID;
typedef UInt32 AudioQueueParameterID;
struct AudioValueTranslation {void *mInputData;UInt32 mInputDataSize;void *mOutputData;UInt32 mOutputDataSize;};
typedef NSString *CALayerContentsFilter;
typedef NSString *CALayerContentsFormat;
typedef NSString *CAMediaTimingFillMode;
typedef  void *(*CFArrayRetainCallBack)(CFAllocatorRef,  void *);
typedef CFIndex CFNetDiagnosticStatus;
typedef void (*CGPDFOperatorCallback)(CGPDFScannerRef, void *);
typedef CFTypeRef CMAttachmentBearerRef;
typedef ConstStr63Param ConstStrFileNameParam;
typedef NSString *ICAuthorizationStatus;
struct KernOrderedListHeader {UInt16 nPairs;UInt16 searchRange;UInt16 entrySelector;UInt16 rangeShift;UInt16 table[1];};
typedef KernTableHeaderPtr *KernTableHeaderHandle;
struct KerxAnchorPointAction {UInt16 markAnchorPoint;UInt16 currAnchorPoint;};
struct KerxControlPointEntry {UInt16 newState;UInt16 flags;UInt16 actionIndex;};
struct KerxOrderedListHeader {UInt32 nPairs;UInt32 searchRange;UInt32 entrySelector;UInt32 rangeShift;UInt32 table[1];};
typedef KerxTableHeaderPtr *KerxTableHeaderHandle;
typedef NSInteger MLUpdateProgressEvent;
struct MPSRayOriginDirection {vector_float3 origin;vector_float3 direction;};
typedef NSString *MTKTextureLoaderError;
typedef NSUInteger MTLStoreActionOptions;
typedef UInt32 MortSubtableMaskFlags;
typedef NSUInteger NLTokenizerAttributes;
typedef NSString *NSAttributedStringKey;
typedef NSUInteger NSDirectionalRectEdge;
typedef NSUInteger NSLayoutFormatOptions;
typedef NSString *NSLinguisticTagScheme;
typedef NSString *NSProgressUserInfoKey;
typedef NSString *NSURLFileResourceType;
typedef NSString *SCNPhysicsShapeOption;
typedef UInt16 SFNTLookupTableFormat;
typedef SFNTLookupTablePtr *SFNTLookupTableHandle;
typedef uint32_t UCharIteratorGetState( UCharIterator *);
typedef int32_t UCharIteratorReserved(UCharIterator *, int32_t);
typedef uint64_t UIAccessibilityTraits;
typedef NSString *UIContentSizeCategory;
typedef NSUInteger UIDirectionalRectEdge;
typedef NSUInteger UIFontDescriptorClass;
typedef void (*XML_EndElementHandler)(void *,  XML_Char *);
typedef void (*XML_EntityDeclHandler)(void *,  XML_Char *, int,  XML_Char *, int,  XML_Char *,  XML_Char *,  XML_Char *,  XML_Char *);
typedef simd_bool __SIMD_BOOLEAN_TYPE__;
struct __objc2_class_rw1_ext { __objc2_class_ro *ro;__objc2_meth_list *methods;__objc2_prop_list *properties;__objc2_prot_list *protocols;char *demangledName;uint32_t version;};
struct _xmlParserNodeInfoSeq {unsigned long long maximum;unsigned long long length;xmlParserNodeInfo *buffer;};
struct build_version_command {uint32_t cmd;uint32_t cmdsize;uint32_t platform;uint32_t minos;uint32_t sdk;uint32_t ntools;};
struct dyld_cache_slide_info {uint32_t version;uint32_t toc_offset;uint32_t toc_count;uint32_t entries_offset;uint32_t entries_count;uint32_t entries_size;};
typedef integer_t exception_data_type_t;
typedef void (*externalSubsetSAXFunc)(void *,  xmlChar *,  xmlChar *,  xmlChar *);
typedef void (*internalSubsetSAXFunc)(void *,  xmlChar *,  xmlChar *,  xmlChar *);
typedef ipc_info_name_t *ipc_info_name_array_t;
struct linkedit_data_command {uint32_t cmd;uint32_t cmdsize;uint32_t dataoff;uint32_t datasize;};
struct linker_option_command {uint32_t cmd;uint32_t cmdsize;uint32_t count;};
typedef mach_exception_data_type_t mach_exception_code_t;
typedef mach_exception_data_type_t *mach_exception_data_t;
struct policy_timeshare_base {integer_t base_priority;};
struct prebind_cksum_command {uint32_t cmd;uint32_t cmdsize;uint32_t cksum;};
typedef integer_t processor_info_data_t[1024];
typedef int (*removefile_callback_t)(removefile_state_t,  char *, void *);
struct std____1__atomic_int_ { std____1____atomic_base_int__true_ cppsuper0;};
struct std____1__hash_float_ { std____1____scalar_hash_float__0_ cppsuper0;};
struct std____1__hash_short_ { std____1__unary_function_short__unsigned_long_ cppsuper0;};
struct std__nested_exception {std__nested_exception_vtbl *__vftable ;std__exception_ptr __ptr_;};
typedef integer_t task_throughput_qos_t;
struct vol_capabilities_attr {vol_capabilities_set_t capabilities;vol_capabilities_set_t valid;};
typedef xmlSchemaAttribute *xmlSchemaAttributePtr;
typedef xmlSchemaFacetLink *xmlSchemaFacetLinkPtr;
typedef xmlSchemaValidCtxt *xmlSchemaValidCtxtPtr;
typedef zone_btrecord_t *zone_btrecord_array_t;
typedef uint32_t ABPersonSortOrdering;
typedef NSString *ARBlendShapeLocation;
typedef NSString *ASAuthorizationScope;
typedef int64_t AVAudioFramePosition;
typedef NSString *AVMetadataIdentifier;
typedef NSString *AVMetadataObjectType;
typedef UInt32 AudioCodecPropertyID;
typedef UInt32 AudioFileRegionFlags;
typedef UInt32 AudioQueuePropertyID;
typedef UInt32 AudioUnitParameterID;
typedef NSString *CAShapeLayerFillRule;
typedef NSString *CAShapeLayerLineJoin;
typedef Boolean (*CFArrayEqualCallBack)( void *,  void *);
typedef void (*CFBagReleaseCallBack)(CFAllocatorRef,  void *);
typedef CFStringRef CFCalendarIdentifier;
typedef CFComparisonResult (*CFComparatorFunction)( void *,  void *, void *);
typedef CFOptionFlags CFGregorianUnitFlags;
typedef CFStringRef CFNumberFormatterKey;
typedef void (*CFSetReleaseCallBack)(CFAllocatorRef,  void *);
typedef CFOptionFlags CFSocketCallBackType;
typedef CFOptionFlags CFStringCompareFlags;
typedef CFTypeRef CMClockOrTimebaseRef;
typedef uint32_t CTFontStylisticClass;
typedef uint32_t CTFontSymbolicTraits;
typedef NSString *FPUIActionIdentifier;
typedef NSString *INPersonRelationship;
typedef uint32_t IOSurfaceLockOptions;
typedef NSString *IOSurfacePropertyKey;
struct KerxCoordinateAction {UInt16 markX;UInt16 markY;UInt16 currX;UInt16 currY;};
typedef UInt32 KerxSubtableCoverage;
typedef NSUInteger MPMovieMediaTypeMask;
struct MPSImageKeypointData {vector_ushort2 keypointCoordinate;float keypointColorValue;};
struct MPSMatrixCopyOffsets {uint32_t sourceRowOffset;uint32_t sourceColumnOffset;uint32_t destinationRowOffset;uint32_t destinationColumnOffset;};
typedef AudioComponentInstance MusicDeviceComponent;
typedef NSString *NSCalendarIdentifier;
typedef NSUInteger NSDataReadingOptions;
typedef NSUInteger NSDataWritingOptions;
typedef NSUInteger NSEnumerationOptions;
typedef NSString *NSFileProtectionType;
typedef NSUInteger NSJSONReadingOptions;
typedef NSUInteger NSJSONWritingOptions;
typedef NSString * PDFAnnotationSubtype;
typedef NSString *PDFDocumentAttribute;
typedef int32_t PHLivePhotoRequestID;
typedef NSUInteger PKMerchantCapability;
typedef NSString *SCNPhysicsTestOption;
typedef NSString *TKTokenDriverClassID;
typedef NSString *VNRecognizedPointKey;
struct __CLPK_doublecomplex {__CLPK_doublereal r;__CLPK_doublereal i;};
typedef __darwin_mach_port_name_t __darwin_mach_port_t;
struct __darwin_sigaltstack {void *ss_sp;__darwin_size_t ss_size;int ss_flags;};
typedef __int32_t __darwin_suseconds_t;
struct __objc_property_list {uint32_t entrysize;uint32_t count;};
struct _xmlSchemaWildcardNs {_xmlSchemaWildcardNs *next; xmlChar *value;};
typedef qos_class_t dispatch_qos_class_t;
typedef void (*endElementNsSAX2Func)(void *,  xmlChar *,  xmlChar *,  xmlChar *);
struct __attribute__((packed)) __attribute__((aligned(4))) processor_cpu_stat64 {uint64_t irq_ex_cnt;uint64_t ipi_cnt;uint64_t timer_cnt;uint64_t undef_ex_cnt;uint64_t unaligned_cnt;uint64_t vfp_cnt;uint64_t vfp_shortv_cnt;uint64_t data_ex_cnt;uint64_t instr_ex_cnt;uint64_t pmi_cnt;};
typedef integer_t *processor_set_info_t;
typedef __darwin_pthread_rwlockattr_t pthread_rwlockattr_t;
typedef uintptr_t ptrauth_extra_data_t;
struct std____1____time_get {locale_t __loc_;};
struct std____1____time_put {locale_t __loc_;};
struct std____1__hash_bool_ { std____1__unary_function_bool__unsigned_long_ cppsuper0;};
struct std____1__hash_char_ { std____1__unary_function_char__unsigned_long_ cppsuper0;};
struct std____1__hash_long_ { std____1__unary_function_long__unsigned_long_ cppsuper0;};
typedef ptrdiff_t std____1__streamsize;
struct task_category_policy {task_role_t role;};
typedef integer_t thread_latency_qos_t;
typedef uint32_t vImageBufferTypeCode;
struct __attribute__((aligned(8))) vm_extmod_statistics {int64_t task_for_pid_count;int64_t task_for_pid_caller_count;int64_t thread_creation_count;int64_t thread_creation_caller_count;int64_t thread_set_state_count;int64_t thread_set_state_caller_count;};
typedef xmlAttributeTable *xmlAttributeTablePtr;
typedef xmlElementContent *xmlElementContentPtr;
typedef xmlParserNodeInfo *xmlParserNodeInfoPtr;
typedef xmlSchemaNotation *xmlSchemaNotationPtr;
typedef xmlSchemaTypeLink *xmlSchemaTypeLinkPtr;
typedef xmlSchemaWildcard *xmlSchemaWildcardPtr;
typedef NSUInteger ARHitTestResultType;
typedef NSUInteger ARSessionRunOptions;
typedef NSString *ARSkeletonJointName;
typedef uint32_t AUAudioChannelCount;
typedef uint32_t AVAudioChannelCount;
typedef NSString *AVCaptureDeviceType;
typedef NSString *AVLayerVideoGravity;
typedef NSString *AVVideoApertureMode;
struct AudioCodecPrimeInfo {UInt32 leadingFrames;UInt32 trailingFrames;};
typedef UInt32 AudioComponentFlags;
typedef UInt32 AudioFilePropertyID;
typedef UInt32 AudioTimeStampFlags;
typedef UInt32 AudioUnitPropertyID;
typedef SInt32 AudioUnitSampleType;
typedef NSString *CAGradientLayerType;
typedef NSString *CAShapeLayerLineCap;
typedef NSString *CATransitionSubtype;
typedef NSString *CAValueFunctionName;
typedef uint32_t CCWrappingAlgorithm;
typedef  void *(*CFBagRetainCallBack)(CFAllocatorRef,  void *);
typedef  void *(*CFSetRetainCallBack)(CFAllocatorRef,  void *);
typedef CFStringRef CFStreamPropertyKey;
typedef NSString *CLSErrorUserInfoKey;
typedef NSString *CLSPredicateKeyPath;
typedef int32_t CMPersistentTrackID;
typedef CFOptionFlags CTLineBoundsOptions;
typedef int32_t DNSServiceErrorType;
typedef NSUInteger HKStatisticsOptions;
typedef NSString *INPersonHandleLabel;
typedef void (*LPALCDESTROYCONTEXT)(ALCcontext *);
typedef void (*LPALCPROCESSCONTEXT)(ALCcontext *);
typedef void (*LPALCSUSPENDCONTEXT)(ALCcontext *);
typedef void (*LPALDOPPLERVELOCITY)(ALfloat);
struct LcarCaretClassEntry {UInt16 count;UInt16 partials[1];};
typedef uint64_t MLCExecutionOptions;
typedef NSUInteger MPSAliasingStrategy;
typedef int64_t MPSFunctionConstant;
typedef NSUInteger MPSNNComparisonType;
typedef NSString * MTLCommonCounterSet;
struct MixerDistanceParams {Float32 mReferenceDistance;Float32 mMaxDistance;Float32 mMaxAttenuation;};
typedef NSUInteger NSDataSearchOptions;
typedef NSString *NSFileAttributeType;
typedef NSString *NSKeyValueChangeKey;
typedef NSUInteger NSNetServiceOptions;
typedef NSUInteger NSSnapshotEventType;
typedef NSString *NSStreamPropertyKey;
typedef uint64_t NSTextCheckingTypes;
typedef NSUInteger PHAssetMediaSubtype;
struct ProcessSerialNumber {UInt32 highLongOfPSN;UInt32 lowLongOfPSN;};
typedef NSString *SCNParticleProperty;
typedef NSString *SCNPhysicsShapeType;
typedef NSUInteger SKTileAdjacencyMask;
typedef NSUInteger TKSmartCardProtocol;
typedef NSUInteger UIDataDetectorTypes;
typedef NSString *VSCheckAccessOption;
typedef NSUInteger WKDataDetectorTypes;
typedef __uint32_t __darwin_useconds_t;
typedef uintptr_t (*cache_key_hash_cb_t)(void *, void *);
typedef int (*copyfile_callback_t)(int, int, copyfile_state_t,  char *,  char *, void *);
struct mach_zone_info_data {uint64_t mzi_count;uint64_t mzi_cur_size;uint64_t mzi_max_size;uint64_t mzi_elem_size;uint64_t mzi_alloc_size;uint64_t mzi_sum_size;uint64_t mzi_exhaustible;uint64_t mzi_collectable;};
typedef void (*notationDeclSAXFunc)(void *,  xmlChar *,  xmlChar *,  xmlChar *);
typedef nw_protocol_metadata_t nw_framer_message_t;
typedef __darwin_pthread_mutexattr_t pthread_mutexattr_t;
typedef __ns_cert_types res_9_ns_cert_types;
typedef void (*startElementSAXFunc)(void *,  xmlChar *,  xmlChar **);
struct std____1__hash_int_ { std____1__unary_function_int__unsigned_long_ cppsuper0;};
typedef integer_t *task_inspect_info_t;
struct task_zone_info_data {uint64_t tzi_count;uint64_t tzi_cur_size;uint64_t tzi_max_size;uint64_t tzi_elem_size;uint64_t tzi_alloc_size;uint64_t tzi_sum_size;uint64_t tzi_exhaustible;uint64_t tzi_collectable;uint64_t tzi_caller_acct;uint64_t tzi_task_alloc;uint64_t tzi_task_free;};
struct vImage_ARGBToYpCbCr {__attribute__((aligned(16))) uint8_t opaque[128];};
struct vImage_YpCbCrToARGB {__attribute__((aligned(16))) uint8_t opaque[128];};
struct version_min_command {uint32_t cmd;uint32_t cmdsize;uint32_t version;uint32_t sdk;};
struct vol_attributes_attr {attribute_set_t validattr;attribute_set_t nativeattr;};
typedef xmlAutomataState *xmlAutomataStatePtr;
typedef xmlEntitiesTable *xmlEntitiesTablePtr;
typedef xmlNotationTable *xmlNotationTablePtr;
typedef xmlSchemaElement *xmlSchemaElementPtr;
typedef xmlSchemaSAXPlugStruct *xmlSchemaSAXPlugPtr;
typedef xmlXPathCompExpr *xmlXPathCompExprPtr;
typedef xmlXPathVariable *xmlXPathVariablePtr;
typedef uint32_t AAACEQualifierType;
typedef uint64_t AUParameterAddress;
typedef uint32_t AVAudioPacketCount;
typedef NSString *AVAudioSessionMode;
typedef NSString *AVAudioSessionPort;
typedef NSString *AVContentKeySystem;
typedef NSString *AVMetadataKeySpace;
struct AVPixelAspectRatio {NSInteger horizontalSpacing;NSInteger verticalSpacing;};
typedef UInt32 AudioChannelBitmap;
typedef UInt32 AudioSettingsFlags;
struct Block_descriptor_1 {uintptr_t reserved;uintptr_t size;};
typedef NSString *CALayerCornerCurve;
typedef Boolean (*CFBagEqualCallBack)( void *,  void *);
typedef CFStringRef CFDateFormatterKey;
typedef CFStringRef CFLocaleIdentifier;
typedef CFStringRef CFNotificationName;
typedef Boolean (*CFSetEqualCallBack)( void *,  void *);
typedef NSString *CHHapticPatternKey;
typedef uint16_t CLBeaconMajorValue;
typedef uint16_t CLBeaconMinorValue;
typedef uintptr_t CMBaseClassVersion;
typedef uint32_t CMBlockBufferFlags;
typedef uint32_t CMTextDisplayFlags;
typedef uint32_t CTFontTableOptions;
typedef uint32_t DNSServiceProtocol;
struct DenseMatrix_Double {int rowCount;int columnCount;int columnStride;SparseAttributes_t attributes;double *data;};
struct ExtendedTempoEvent {Float64 bpm;};
typedef NSString *HKFHIRResourceType;
typedef NSString *HMSignificantEvent;
typedef NSString *ICDeviceCapability;
typedef NSUInteger INCarSignalOptions;
typedef NSUInteger INDayOfWeekOptions;
typedef UInt16 JustificationFlags;
struct KernVersion0Header {UInt16 version;UInt16 nTables;UInt16 firstSubtable[1];};
typedef void *(*LPALGETPROCADDRESS)( ALchar *);
struct MIDIChannelMessage {UInt8 status;UInt8 data1;UInt8 data2;UInt8 reserved;};
typedef NSString *MLModelMetadataKey;
struct MPSImageCoordinate {NSUInteger x;NSUInteger y;NSUInteger channel;};
typedef NSUInteger MPSNNPaddingMethod;
typedef NSUInteger MPSNNTrainingStyle;
typedef NSUInteger MTLFunctionOptions;
typedef NSUInteger MTLResourceOptions;
typedef UInt32 MusicDeviceGroupID;
typedef NSString *NSErrorUserInfoKey;
typedef NSString *NSFileAttributeKey;
typedef id NSFileProviderItem;
typedef NSUInteger NSHashTableOptions;
typedef NSString *NSKeyValueOperator;
typedef NSString *NSNotificationName;
typedef uint64_t NSTextCheckingType;
typedef NSString *NSTextTabOptionKey;
typedef NSString *PKEncryptionScheme;
typedef NFCFeliCaPollingRequestCode PollingRequestCode;
typedef UInt16 PropCharProperties;
typedef SCNetworkInterfaceRef SCBondInterfaceRef;
typedef SCNetworkInterfaceRef SCVLANInterfaceRef;
struct SparseGMRESOptions {void (*reportError)( char *);SparseGMRESVariant_t variant;int nvec;int maxIterations;double atol;double rtol;void (*reportStatus)( char *);};
typedef NSString *UIActionIdentifier;
typedef NSInteger UIKeyModifierFlags;
typedef NSString *UIPasteboardOption;
typedef NSString *UISceneSessionRole;
typedef NSUInteger UIViewAutoresizing;
typedef UInt32 UnicodeScalarValue;
typedef NSString *VNAnimalIdentifier;
typedef NSString *VNBarcodeSymbology;
typedef uint32_t VTDecodeFrameFlags;
typedef void (*XML_CommentHandler)(void *,  XML_Char *);
typedef void (*XML_DefaultHandler)(void *,  XML_Char *, int);
typedef void (*XML_XmlDeclHandler)(void *,  XML_Char *,  XML_Char *, int);
struct _MTLPackedFloat4x3 {MTLPackedFloat3 columns[4];};
typedef __int32_t __darwin_blksize_t;
typedef __uint32_t __darwin_socklen_t;
struct __objc_method_list {uint32_t entrysize;uint32_t count;};
struct __rpc_xdr__xdr_ops {int (*x_getlong)(__rpc_xdr *, int *);int (*x_putlong)(__rpc_xdr *,  int *);int (*x_getbytes)(__rpc_xdr *, char *, unsigned int);int (*x_putbytes)(__rpc_xdr *,  char *, unsigned int);unsigned int (*x_getpostn)(__rpc_xdr *);int (*x_setpostn)(__rpc_xdr *, unsigned int);int32_t *(*x_inline)(__rpc_xdr *, unsigned int);void (*x_destroy)(__rpc_xdr *);int (*x_control)(__rpc_xdr *, int, void *);};
typedef u_int64_t acl_permset_mask_t;
struct build_tool_version {uint32_t tool;uint32_t version;};
struct dns_AFSDB_record_t {uint32_t subtype;char *hostname;};
typedef  gss_buffer_desc *gss_const_buffer_t;
struct host_priority_info {integer_t kernel_priority;integer_t system_priority;integer_t server_priority;integer_t user_priority;integer_t depress_priority;integer_t idle_priority;integer_t minimum_priority;integer_t maximum_priority;};
typedef xmlParserNodeInfo htmlParserNodeInfo;
typedef u_int32_t kauth_ace_rights_t;
typedef integer_t mach_msg_options_t;
struct mach_timebase_info {uint32_t numer;uint32_t denom;};
typedef kern_return_t (*mig_impl_routine_t)(void);
struct objc_classheader_t {int32_t clsOffset;int32_t hiOffset;};
struct processor_cpu_stat {uint32_t irq_ex_cnt;uint32_t ipi_cnt;uint32_t timer_cnt;uint32_t undef_ex_cnt;uint32_t unaligned_cnt;uint32_t vfp_cnt;uint32_t vfp_shortv_cnt;uint32_t data_ex_cnt;uint32_t instr_ex_cnt;};
typedef __darwin_pthread_condattr_t pthread_condattr_t;
typedef uint32_t removefile_flags_t;
typedef __ns_key_types res_9_ns_key_types;
struct sfntFontRunFeature {UInt16 featureType;UInt16 setting;};
struct std____1____and___ { std____1__true_type cppsuper0;};
struct std__bad_exception { std__exception cppsuper0;};
typedef integer_t task_latency_qos_t;
typedef integer_t thread_info_data_t[32];
typedef uint64_t vm_object_offset_t;
typedef xmlChRangeGroup *xmlChRangeGroupPtr;
typedef xmlElementTable *xmlElementTablePtr;
typedef void (*xmlHashDeallocator)(void *, xmlChar *);
typedef void (*xmlHashScannerFull)(void *, void *,  xmlChar *,  xmlChar *,  xmlChar *);
typedef xmlOutputBuffer *xmlOutputBufferPtr;
typedef xmlSAXHandlerV1 *xmlSAXHandlerV1Ptr;
typedef xmlXIncludeCtxt *xmlXIncludeCtxtPtr;
typedef xmlXPathContext *xmlXPathContextPtr;
typedef NSUInteger AEAutocorrectMode;
typedef NSUInteger ALAssetsGroupType;
typedef uint32_t AUAudioFrameCount;
typedef int64_t AUEventSampleTime;
typedef uint32_t AVAudioFrameCount;
typedef NSString *AVFileTypeProfile;
typedef UInt32 AudioChannelFlags;
typedef UInt32 AudioChannelLabel;
typedef UInt32 BslnBaselineClass;
struct __attribute__((packed)) CAFOverviewSample {SInt16 mMinValue;SInt16 mMaxValue;};
typedef CFHashCode (*CFBagHashCallBack)( void *);
typedef CFOptionFlags CFDataSearchFlags;
typedef CFTypeRef CFPropertyListRef;
typedef CFOptionFlags CFRunLoopActivity;
typedef CFHashCode (*CFSetHashCallBack)( void *);
typedef CFOptionFlags CFStreamEventType;
struct CGAffineTransform {CGFloat a;CGFloat b;CGFloat c;CGFloat d;CGFloat tx;CGFloat ty;};
typedef NSString *CHHapticEventType;
typedef NSString *CIRAWFilterOption;
struct CMVideoDimensions {int32_t width;int32_t height;};
struct CSLocalizedString {NSString super;};
struct DenseMatrix_Float {int rowCount;int columnCount;int columnStride;SparseAttributes_t attributes;float *data;};
typedef NSString *GCHapticsLocality;
typedef GKInviteRecipientResponse GKInviteeResponse;
typedef NSString *ICDeviceTransport;
typedef void (*LPALCCAPTURESTART)(ALCdevice *);
typedef void (*LPALDISTANCEMODEL)(ALenum);
typedef void (*LPALDOPPLERFACTOR)(ALfloat);
typedef uint8_t MIDIChannelNumber;
struct MPSDimensionSlice {NSUInteger start;NSUInteger length;};
struct MPSNDArrayOffsets {NSInteger dimensions[16];};
typedef NSUInteger MPSRayMaskOptions;
typedef NSUInteger MTLColorWriteMask;
typedef NSUInteger MTLPipelineOption;
typedef uint64_t NSActivityOptions;
typedef NSUInteger NSCalendarOptions;
typedef NSUInteger NSMachPortOptions;
typedef NSUInteger NSMapTableOptions;
typedef NSUInteger NSMatchingOptions;
typedef NSString *NSStringTransform;
typedef NSString *NSTextCheckingKey;
typedef NSString *NSTextEffectStyle;
typedef NSInteger PDFAreaOfInterest;
typedef NSUInteger PHAssetSourceType;
typedef NSString *PKPaymentErrorKey;
struct PropLookupSegment {UInt16 lastGlyph;UInt16 firstGlyph;UInt16 value;};
typedef NSString *SCNSceneAttribute;
struct SFNTLookupSegment {UInt16 lastGlyph;UInt16 firstGlyph;UInt16 value[1];};
typedef UInt32 SecKeychainStatus;
struct SparseLSMROptions {void (*reportError)( char *);double lambda;int nvec;SparseLSMRConvergenceTest_t convergenceTest;double atol;double rtol;double btol;double conditionLimit;int maxIterations;void (*reportStatus)( char *);};
typedef NSString *TKTokenInstanceID;
typedef uint32_t UCPMapValueFilter( void *, uint32_t);
typedef NSInteger UIEventButtonMask;
typedef NSInteger UIPrinterJobTypes;
typedef NSString *UITextContentType;
typedef NSInteger UITextDragOptions;
typedef NSInteger UITouchProperties;
typedef int64_t UTextNativeLength(UText *);
typedef UInt32 VTDecodeInfoFlags;
typedef UInt32 VTEncodeInfoFlags;
typedef __int64_t __darwin_blkcnt_t;
typedef __uint32_t __darwin_sigset_t;
typedef __uint32_t __darwin_wctype_t;
struct __objc2_ivar_list {uint32_t entrysize;uint32_t count;};
struct __objc2_meth_list {uint32_t entrysize;uint32_t count;};
struct __objc2_prop_list {uint32_t entrysize;uint32_t count;};
struct __objc2_prot_list {uint64_t count;};
struct _inpcb_list_entry {u_int32_t le_next;u_int32_t le_prev;};
typedef void (*cdataBlockSAXFunc)(void *,  xmlChar *, int);
typedef void (*charactersSAXFunc)(void *,  xmlChar *, int);
struct dyld_info_command {uint32_t cmd;uint32_t cmdsize;uint32_t rebase_off;uint32_t rebase_size;uint32_t bind_off;uint32_t bind_size;uint32_t weak_bind_off;uint32_t weak_bind_size;uint32_t lazy_bind_off;uint32_t lazy_bind_size;uint32_t export_off;uint32_t export_size;};
typedef void (*endElementSAXFunc)(void *,  xmlChar *);
typedef void (*entityDeclSAXFunc)(void *,  xmlChar *, int,  xmlChar *,  xmlChar *, xmlChar *);
typedef  gss_OID_set_desc *gss_const_OID_set;
typedef htmlEntityDesc *htmlEntityDescPtr;
typedef uint64_t hv_memory_flags_t;
struct kauth_cache_sizes {u_int32_t kcs_group_size;u_int32_t kcs_id_size;};
typedef kmod_info_t *kmod_info_array_t;
typedef kern_return_t kmod_start_func_t(kmod_info *, void *);
struct mach_core_details {uint64_t gzip_offset;uint64_t gzip_length;char core_name[16];};
typedef integer_t mach_msg_option_t;
typedef kern_return_t mach_msg_return_t;
typedef integer_t mach_port_delta_t;
typedef uint64_t mach_vm_address_t;
struct policy_fifo_limit {integer_t max_priority;};
struct res_9_ns_tsig_key {char name[1025];char alg[1025];unsigned char *data;int len;};
struct sfntCMapSubHeader {UInt16 format;UInt16 length;UInt16 languageID;};
struct std____1____or___ { std____1__false_type cppsuper0;};
struct vm_purgeable_info {vm_purgeable_stat_t fifo_data[8];vm_purgeable_stat_t obsolete_data;vm_purgeable_stat_t lifo_data[8];};
struct vm_purgeable_stat {uint64_t count;uint64_t size;};
typedef xmlDOMWrapCtxt *xmlDOMWrapCtxtPtr;
typedef xmlEnumeration *xmlEnumerationPtr;
typedef xmlGlobalState *xmlGlobalStatePtr;
typedef xmlLocationSet *xmlLocationSetPtr;
typedef xmlParserInput *xmlParserInputPtr;
typedef xmlRegExecCtxt *xmlRegExecCtxtPtr;
typedef xmlSchemaAnnot *xmlSchemaAnnotPtr;
typedef xmlSchemaFacet *xmlSchemaFacetPtr;
typedef xmlXPathObject *xmlXPathObjectPtr;
typedef zone_info_t *zone_info_array_t;
typedef zone_name_t *zone_name_array_t;
typedef CFTypeRef ABAddressBookRef;
typedef NSUInteger ARFrameSemantics;
typedef NSUInteger ARPlaneDetection;
typedef NSString *AVMetadataFormat;
typedef Float64 AVMusicTimeStamp;
typedef NSString *AVVideoCodecType;
typedef UInt32 AudioFormatFlags;
struct AudioQueueBuffer { UInt32 mAudioDataBytesCapacity;void * mAudioData;UInt32 mAudioDataByteSize;void *mUserData; UInt32 mPacketDescriptionCapacity;AudioStreamPacketDescription * mPacketDescriptions;UInt32 mPacketDescriptionCount;};
typedef UInt32 AudioUnitElement;
typedef NSString *CATransitionType;
typedef uint32_t CCPBKDFAlgorithm;
struct CFGregorianUnits {SInt32 years;SInt32 months;SInt32 days;SInt32 hours;SInt32 minutes;double seconds;};
typedef UInt32 CFStringEncoding;
struct CFSwappedFloat32 {uint32_t v;};
struct CFSwappedFloat64 {uint64_t v;};
typedef CFStringRef CGPDFTagProperty;
typedef NSString *CKRecordFieldKey;
typedef NSString *CKSubscriptionID;
typedef uint32_t CMAttachmentMode;
typedef int32_t CTUnderlineStyle;
typedef CVBufferRef CVImageBufferRef;
typedef CVImageBufferRef CVPixelBufferRef;
typedef uint32_t CVSMPTETimeFlags;
typedef uint64_t CVTimeStampFlags;
typedef uint32_t ENIntervalNumber;
typedef uint8_t ENRiskLevelValue;
typedef UInt32 FontLanguageCode;
typedef UInt32 FontPlatformCode;
typedef NSString *ICDownloadOption;
typedef NSString *ICSessionOptions;
typedef UInt16 JustPCActionType;
typedef SInt16 KernKerningValue;
typedef UInt16 KernSubtableInfo;
typedef void (*LPALCCAPTURESTOP)(ALCdevice *);
typedef void (*LPALSOURCEREWIND)(ALuint);
typedef void (*LPALSPEEDOFSOUND)(ALfloat);
struct MKCoordinateSpan {CLLocationDegrees latitudeDelta;CLLocationDegrees longitudeDelta;};
typedef NSUInteger MPMovieLoadState;
typedef NSUInteger MPSDeviceOptions;
typedef NSUInteger MPSKernelOptions;
typedef NSString * MTLCommonCounter;
typedef NSUInteger MTLResourceUsage;
typedef NSInteger NFCPollingOption;
struct NSHashEnumerator {NSUInteger _pi;NSUInteger _si;void *_bs;};
typedef NSUInteger NSStringEncoding;
typedef NSString *NSURLResourceKey;
typedef NSInteger NSUnderlineStyle;
typedef NSString * PDFAnnotationKey;
typedef int32_t PHImageRequestID;
typedef NSString *PKPaymentNetwork;
typedef NSUInteger SCNBillboardAxis;
typedef NSString *SCNHitTestOption;
typedef NSString *SCNLightingModel;
typedef UInt16 SFNTLookupOffset;
struct SFNTLookupSingle {UInt16 glyph;UInt16 value[1];};
typedef SLRequestHandler TWRequestHandler;
typedef NSString *UIMenuIdentifier;
typedef NSString *UIPasteboardName;
typedef NSInteger UIScrollTypeMask;
typedef ProcPtr UniversalProcPtr;
struct _MPSPackedFloat3 {_MPSPackedFloat3___39DC2D7EDDF348CEA81137C15E26DB7E __anonymous0;};
struct _MTLPackedFloat3 {_MPSPackedFloat3___39DC2D7EDDF348CEA81137C15E26DB7E __anonymous0;};
typedef _Unwind_Reason_Code (*_Unwind_Trace_Fn)(_Unwind_Context *, void *);
typedef __uint64_t __darwin_ino64_t;
typedef __builtin_va_list __darwin_va_list;
struct __objc2_class_ro {uint32_t flags;uint32_t ivar_base_start;uint32_t ivar_base_size;uint32_t reserved;void *ivar_lyt;char *name;__objc2_meth_list *base_meths;__objc2_prot_list *base_prots;__objc2_ivar_list *ivars;void *weak_ivar_lyt;__objc2_prop_list *base_props;};
struct __objc2_class_rw {uint32_t flags;uint32_t version;__objc2_class_ro *ro;__objc2_meth_list *methods;__objc2_prop_list *properties;__objc2_prot_list *protocols;__objc2_class *firstSubclass;__objc2_class *nextSiblingClass;char *demangledName;};
typedef void (*attributeSAXFunc)(void *,  xmlChar *,  xmlChar *);
struct axr_layer_info_t { char *name; uint32_t *channels;unsigned long long channelCount;};
typedef uint32_t copyfile_flags_t;
typedef integer_t cpu_threadtype_t;
struct dns_SOA_record_t {char *mname;char *rname;uint32_t serial;uint32_t refresh;uint32_t retry;uint32_t expire;uint32_t minimum;};
struct dns_SRV_record_t {uint16_t priority;uint16_t weight;uint16_t port;char *target;};
struct dns_TXT_record_t {uint32_t string_count;char **strings;};
struct dysymtab_command {uint32_t cmd;uint32_t cmdsize;uint32_t ilocalsym;uint32_t nlocalsym;uint32_t iextdefsym;uint32_t nextdefsym;uint32_t iundefsym;uint32_t nundefsym;uint32_t tocoff;uint32_t ntoc;uint32_t modtaboff;uint32_t nmodtab;uint32_t extrefsymoff;uint32_t nextrefsyms;uint32_t indirectsymoff;uint32_t nindirectsyms;uint32_t extreloff;uint32_t nextrel;uint32_t locreloff;uint32_t nlocrel;};
typedef exception_data_type_t *exception_data_t;
typedef integer_t host_info_data_t[1024];
typedef kern_return_t kmod_stop_func_t(kmod_info *, void *);
typedef integer_t *mach_port_info_t;
typedef uint64_t mach_vm_offset_t;
struct objc_headeropt_t {uint32_t count;uint32_t entsize;};
typedef uint64_t os_activity_id_t;
typedef uint64_t os_signpost_id_t;
struct os_unfair_lock_s {uint32_t _os_unfair_lock_opaque;};
struct policy_fifo_base {integer_t base_priority;};
typedef integer_t *processor_info_t;
typedef __darwin_pthread_rwlock_t pthread_rwlock_t;
typedef void (*referenceSAXFunc)(void *,  xmlChar *);
struct routines_command {uint32_t cmd;uint32_t cmdsize;uint32_t init_address;uint32_t init_module;uint32_t reserved1;uint32_t reserved2;uint32_t reserved3;uint32_t reserved4;uint32_t reserved5;uint32_t reserved6;};
struct so_np_extensions {u_int32_t npx_flags;u_int32_t npx_mask;};
typedef uint64_t sparse_dimension;
struct task_events_info {integer_t faults;integer_t pageins;integer_t cow_faults;integer_t messages_sent;integer_t messages_received;integer_t syscalls_mach;integer_t syscalls_unix;integer_t csw;};
struct task_extmod_info {unsigned char task_uuid[16];vm_extmod_statistics_data_t extmod_statistics;};
typedef integer_t task_info_data_t[1024];
typedef uint32_t vImageMatrixType;
typedef uint32_t vm32_object_id_t;
typedef uint64_t vm_map_address_t;
typedef uint64_t vm_object_size_t;
typedef xmlParserCtxt *xmlParserCtxtPtr;
typedef xmlSAXHandler *xmlSAXHandlerPtr;
typedef xmlSAXLocator *xmlSAXLocatorPtr;
typedef xmlSchemaType *xmlSchemaTypePtr;
typedef xmlSchematron *xmlSchematronPtr;
typedef xmlStreamCtxt *xmlStreamCtxtPtr;
typedef xmlTextReader *xmlTextReaderPtr;
typedef xmlTextWriter *xmlTextWriterPtr;
typedef xmlValidState *xmlValidStatePtr;
typedef void (*xmlXPathEvalFunc)(xmlXPathParserContextPtr, int);
typedef void (*xmlXPathFunction)(xmlXPathParserContextPtr, int);
typedef CFTypeRef ABMultiValueRef;
typedef NSInteger AVPlayerHDRMode;
typedef UInt32 AudioFileTypeID;
typedef SInt16 AudioSampleType;
struct AudioValueRange {Float64 mMinimum;Float64 mMaximum;};
typedef NSString *BCParameterName;
struct BslnFormat0Part {SInt16 deltas[32];};
typedef UInt16 BslnTableFormat;
typedef int32_t CCCryptorStatus;
typedef uint32_t CCHmacAlgorithm;
typedef NSString *CIContextOption;
typedef NSString *CLSContextTopic;
typedef uintptr_t CMStructVersion;
typedef uint32_t DNSServiceFlags;
typedef uint32_t ENActivityFlags;
typedef id JSValueProperty;
typedef UInt16 KernArrayOffset;
struct KernKerningPair {UInt16 left;UInt16 right;};
typedef UInt8 KernTableFormat;
typedef UInt32 KerxArrayOffset;
struct KerxKerningPair {UInt16 left;UInt16 right;};
typedef void (*LPALSOURCEPAUSE)(ALuint);
struct LtagStringRange {UInt16 offset;UInt16 length;};
struct MPSMatrixOffset {uint32_t rowOffset;uint32_t columnOffset;};
struct MPSNDArraySizes {NSUInteger dimensions[16];};
typedef NSUInteger MTLBarrierScope;
typedef NSUInteger MTLRenderStages;
struct MTLSizeAndAlign {NSUInteger size;NSUInteger align;};
typedef NSUInteger MTLTextureUsage;
typedef NSUInteger NLTaggerOptions;
typedef NSString *NSDataAssetName;
typedef NSString *NSExceptionName;
typedef NSInteger NSGlyphProperty;
typedef NSString *NSLinguisticTag;
struct NSMapEnumerator {NSUInteger _pi;NSUInteger _si;void *_bs;};
typedef NSUInteger NSMatchingFlags;
struct NSMutableString {NSString super;};
struct NSSimpleCString {NSString super;char *bytes;int numBytes;int _unused;};
typedef UInt16 OpbdTableFormat;
typedef NFCFeliCaPollingTimeSlot PollingTimeSlot;
typedef NSUInteger SCNDebugOptions;
typedef UInt16 SFNTLookupValue;
struct SVCXPRT__xp_ops {int (*xp_recv)(int, ...);xprt_stat (*xp_stat)(int, ...);int (*xp_getargs)(int, ...);int (*xp_reply)(int, ...);int (*xp_freeargs)(int, ...);void (*xp_destroy)(int, ...);};
typedef CFStringRef SecKeyAlgorithm;
typedef id TKTokenObjectID;
typedef SLRequestMethod TWRequestMethod;
typedef NSUInteger UIControlEvents;
typedef NSUInteger UIDocumentState;
typedef NSString *UIFontTextStyle;
typedef NSString *UINibOptionsKey;
typedef NSInteger UITextDirection;
typedef UniCharCount *UniCharCountPtr;
struct __attribute__((packed)) _OSUnalignedU16 {uint16_t __val;};
struct __attribute__((packed)) _OSUnalignedU32 {uint32_t __val;};
struct __attribute__((packed)) _OSUnalignedU64 {uint64_t __val;};
typedef __uint16_t __darwin_mode_t;
typedef __darwin_wchar_t __darwin_rune_t;
struct _xmlEnumeration {_xmlEnumeration *next; xmlChar *name;};
struct _xmlLocationSet {int locNr;int locMax;xmlXPathObjectPtr *locTab;};
typedef uint64_t dispatch_time_t;
struct dns_MX_record_t {uint16_t preference;char *name;};
struct dns_RT_record_t {uint16_t preference;char *intermediate;};
typedef xmlParserInput docbParserInput;
struct dyld_image_info { mach_header *imageLoadAddress; char *imageFilePath;uintptr_t imageFileModDate;};
struct gpu_energy_data {uint64_t task_gpu_utilisation;uint64_t task_gpu_stat_reserved0;uint64_t task_gpu_stat_reserved1;uint64_t task_gpu_stat_reserved2;};
struct host_sched_info {integer_t min_timeout;integer_t min_quantum;};
typedef htmlElemDesc *htmlElemDescPtr;
typedef xmlParserInput htmlParserInput;
typedef int64_t ledger_amount_t;
struct objc_image_info {uint32_t version;uint32_t flags;};
typedef uint32_t os_breadcrumb_t;
struct policy_rr_limit {integer_t max_priority;};
typedef int printf_function(FILE *,  printf_info *,  void * *);
typedef __darwin_pthread_mutex_t pthread_mutex_t;
struct relocation_info {int32_t r_address;unsigned int r_symbolnum : 24;unsigned int r_pcrel : 1;unsigned int r_length : 2;unsigned int r_extern : 1;unsigned int r_type : 4;};
typedef __ns_opcode res_9_ns_opcode;
struct std__bad_typeid { std__exception cppsuper0;};
typedef uint32_t suid_cred_uid_t;
struct task_flags_info {uint32_t flags;};
struct task_power_info {uint64_t total_user;uint64_t total_system;uint64_t task_interrupt_wakeups;uint64_t task_platform_idle_wakeups;uint64_t task_timer_wakeups_bin_1;uint64_t task_timer_wakeups_bin_2;};
typedef u_int32_t text_encoding_t;
typedef integer_t *thread_policy_t;
typedef uint64_t vm_map_offset_t;
typedef xlinkHandler *xlinkHandlerPtr;
typedef xmlAttribute *xmlAttributePtr;
typedef xmlHashTable *xmlHashTablePtr;
typedef xmlSchemaVal *xmlSchemaValPtr;
typedef xmlShellCtxt *xmlShellCtxtPtr;
typedef xmlValidCtxt *xmlValidCtxtPtr;
typedef xmlXPathAxis *xmlXPathAxisPtr;
typedef xmlXPathFunct *xmlXPathFuncPtr;
typedef xmlXPathType *xmlXPathTypePtr;
typedef uint32_t AAEntryMessage;
typedef uint32_t AAHashFunction;
typedef uint32_t ABPropertyType;
struct ALMXGlyphEntry {SInt16 GlyphIndexOffset;SInt16 HorizontalAdvance;SInt16 XOffsetToHOrigin;SInt16 VerticalAdvance;SInt16 YOffsetToVOrigin;};
typedef NSUInteger AVAudioNodeBus;
typedef UInt32 AudioFileFlags;
typedef uint32_t AudioSessionID;
typedef UInt32 AudioUnitScope;
typedef UInt32 CAFFormatFlags;
struct __attribute__((packed)) CAFInfoStrings {UInt32 mNumEntries;};
typedef UInt32 CAFRegionFlags;
typedef CFTimeInterval CFAbsoluteTime;
typedef CFOptionFlags CFCalendarUnit;
typedef NSUInteger CPContentStyle;
typedef NSInteger CPPanDirection;
typedef uint32_t CTFontPriority;
typedef UInt32 FontScriptCode;
typedef NSUInteger HKQueryOptions;
typedef NSString *ICDeleteResult;
typedef NSString *ICDeviceStatus;
typedef NSString *ICUploadOption;
struct KernStateEntry {UInt16 newState;UInt16 flags;};
struct KerxStateEntry {UInt16 newState;UInt16 flags;UInt16 valueIndex;};
typedef void (*LPALSOURCEPLAY)(ALuint);
typedef void (*LPALSOURCESTOP)(ALuint);
struct MPSImageRegion {MPSImageCoordinate offset;MPSImageCoordinate size;};
struct MTLScissorRect {NSUInteger x;NSUInteger y;NSUInteger width;NSUInteger height;};
typedef UInt32 MusicEventType;
typedef Float64 MusicTimeStamp;
typedef NSUInteger NSCalendarUnit;
typedef NSString *NSProgressKind;
typedef NSRange *NSRangePointer;
typedef UInt32 NoteInstanceID;
struct OpbdSideValues {SInt16 leftSideShift;SInt16 topSideShift;SInt16 rightSideShift;SInt16 bottomSideShift;};
typedef NSUInteger PKAddressField;
typedef NSString *PKContactField;
typedef int16_t Pixel_ARGB_16S[4];
typedef uint16_t Pixel_ARGB_16U[4];
struct ROTAGlyphEntry {SInt16 GlyphIndexOffset;SInt16 HBaselineOffset;SInt16 VBaselineOffset;};
typedef UInt32 SFNTLookupKind;
typedef UInt32 SMPTETimeFlags;
typedef CFTimeInterval SRAbsoluteTime;
typedef uint16_t SSLCipherSuite;
typedef NSString *UIActivityType;
typedef NSUInteger UIControlState;
typedef NSUInteger UIFocusHeading;
struct _RuneCharClass {char __name[14];__uint32_t __mask;};
struct __CLPK_complex {__CLPK_real r;__CLPK_real i;};
typedef __int32_t __darwin_dev_t;
typedef __uint32_t __darwin_gid_t;
typedef __darwin_ino64_t __darwin_ino_t;
typedef __int64_t __darwin_off_t;
typedef __int32_t __darwin_pid_t;
typedef __uint32_t __darwin_uid_t;
typedef __builtin_va_list __gnuc_va_list;
struct _xmlSAXLocator { xmlChar *(*getPublicId)(void *); xmlChar *(*getSystemId)(void *);int (*getLineNumber)(void *);int (*getColumnNumber)(void *);};
typedef void (*commentSAXFunc)(void *,  xmlChar *);
struct dns_question_t {char *name;uint16_t dnstype;uint16_t dnsclass;};
typedef xmlParserCtxt docbParserCtxt;
typedef xmlSAXHandler docbSAXHandler;
struct dwarf_eh_bases {uintptr_t tbase;uintptr_t dbase;uintptr_t func;};
struct host_load_info {integer_t avenrun[3];integer_t mach_factor[3];};
typedef xmlParserCtxt htmlParserCtxt;
typedef xmlSAXHandler htmlSAXHandler;
struct __attribute__((packed)) ip6_opt_router {u_int8_t ip6or_type;u_int8_t ip6or_len;u_int8_t ip6or_value[2];};
struct __attribute__((packed)) ip6_opt_tunnel {u_int8_t ip6ot_type;u_int8_t ip6ot_len;u_int8_t ip6ot_encap_limit;};
struct lockgroup_info {char lockgroup_name[64];uint64_t lockgroup_attr;uint64_t lock_spin_cnt;uint64_t lock_spin_util_cnt;uint64_t lock_spin_held_cnt;uint64_t lock_spin_miss_cnt;uint64_t lock_spin_held_max;uint64_t lock_spin_held_cum;uint64_t lock_mtx_cnt;uint64_t lock_mtx_util_cnt;uint64_t lock_mtx_held_cnt;uint64_t lock_mtx_miss_cnt;uint64_t lock_mtx_wait_cnt;uint64_t lock_mtx_held_max;uint64_t lock_mtx_held_cum;uint64_t lock_mtx_wait_max;uint64_t lock_mtx_wait_cum;uint64_t lock_rw_cnt;uint64_t lock_rw_util_cnt;uint64_t lock_rw_held_cnt;uint64_t lock_rw_miss_cnt;uint64_t lock_rw_wait_cnt;uint64_t lock_rw_held_max;uint64_t lock_rw_held_cum;uint64_t lock_rw_wait_max;uint64_t lock_rw_wait_cum;};
typedef uint64_t mach_vm_size_t;
struct net_event_data {u_int32_t if_family;u_int32_t if_unit;char if_name[16];};
typedef integer_t *policy_limit_t;
struct policy_rr_base {integer_t base_priority;integer_t quantum;};
typedef __darwin_pthread_attr_t pthread_attr_t;
typedef __darwin_pthread_cond_t pthread_cond_t;
typedef __darwin_pthread_once_t pthread_once_t;
typedef __ns_class res_9_ns_class;
typedef __ns_rcode res_9_ns_rcode;
struct sfntNameRecord {UInt16 platformID;UInt16 scriptID;UInt16 languageID;UInt16 nameID;UInt16 length;UInt16 offset;};
struct simd_double2x2 {simd_double2 columns[2];};
struct simd_double2x3 {simd_double3 columns[2];};
struct simd_double2x4 {simd_double4 columns[2];};
struct simd_double3x2 {simd_double2 columns[3];};
struct simd_double3x3 {simd_double3 columns[3];};
struct simd_double3x4 {simd_double4 columns[3];};
struct simd_double4x2 {simd_double2 columns[4];};
struct simd_double4x3 {simd_double3 columns[4];};
struct simd_double4x4 {simd_double4 columns[4];};
typedef sqlite_uint64 sqlite3_uint64;
struct std__bad_alloc { std__exception cppsuper0;};
struct std__type_info {std__type_info_vtbl *__vftable ;uintptr_t __type_name;};
struct symseg_command {uint32_t cmd;uint32_t cmdsize;uint32_t offset;uint32_t size;};
struct symtab_command {uint32_t cmd;uint32_t cmdsize;uint32_t symoff;uint32_t nsyms;uint32_t stroff;uint32_t strsize;};
struct thread_command {uint32_t cmd;uint32_t cmdsize;};
typedef uint16_t uint_least16_t;
typedef uint32_t uint_least32_t;
typedef uint64_t uint_least64_t;
typedef uint32_t vm32_address_t;
typedef xmlAutomata *xmlAutomataPtr;
typedef xmlChLRange *xmlChLRangePtr;
typedef xmlChSRange *xmlChSRangePtr;
typedef void (*xmlHashScanner)(void *, void *, xmlChar *);
typedef xmlNotation *xmlNotationPtr;
typedef xmlRefTable *xmlRefTablePtr;
typedef xmlSaveCtxt *xmlSaveCtxtPtr;
struct ypresp_maplist {ypstat stat;ypmaplist *maps;};
struct AUChannelInfo {SInt16 inChannels;SInt16 outChannels;};
typedef NSString *AVMetadataKey;
typedef UInt32 AudioFormatID;
struct BNNSLayerData { void *data;BNNSDataType data_type;float data_scale;float data_bias; float *data_table;};
struct CATransform3D {CGFloat m11;CGFloat m12;CGFloat m13;CGFloat m14;CGFloat m21;CGFloat m22;CGFloat m23;CGFloat m24;CGFloat m31;CGFloat m32;CGFloat m33;CGFloat m34;CGFloat m41;CGFloat m42;CGFloat m43;CGFloat m44;};
struct CCHmacContext {uint32_t ctx[96];};
typedef uint32_t CCModeOptions;
typedef CFStringRef CFErrorDomain;
typedef CFStringRef CFRunLoopMode;
struct CGPathElement {CGPathElementType type;CGPoint *points;};
typedef NSString *CIImageOption;
typedef NSString *CKOperationID;
typedef CFOptionFlags CTFontOptions;
typedef uint64_t CVOptionFlags;
typedef uint8_t ENAttenuation;
typedef NSString *HKFHIRRelease;
typedef NSString *ICDeleteError;
typedef vector_int4 MDLVoxelIndex;
typedef UInt32 MIDIObjectRef;
typedef UInt64 MIDITimeStamp;
typedef uint32_t MPSDeviceCaps;
typedef NSString *MTKModelError;
typedef NSUInteger MTLBlitOption;
typedef NSString *NSErrorDomain;
typedef NSString *NSRunLoopMode;
typedef NSUInteger NSSortOptions;
typedef NSUInteger NSStreamEvent;
typedef NSString *SCNViewOption;
typedef UInt16 STXEntryIndex;
typedef UInt16 STXStateIndex;
typedef ShortFixed *ShortFixedPtr;
typedef UInt32 SystemSoundID;
typedef NSUInteger UIMenuOptions;
typedef CGFloat UIWindowLevel;
typedef UInt32 UnsignedFixed;
typedef NSString *VNImageOption;
typedef __uint32_t __darwin_id_t;
struct __objc_method {void *method_name;char *method_types;IMP method_imp;};
struct arm_state_hdr {uint32_t flavor;uint32_t count;};
typedef uint32_t bank_action_t;
typedef integer_t cpu_subtype_t;
struct float16x4x2_t {float16x4_t val[2];};
struct float16x4x3_t {float16x4_t val[3];};
struct float16x4x4_t {float16x4_t val[4];};
struct float16x8x2_t {float16x8_t val[2];};
struct float16x8x3_t {float16x8_t val[3];};
struct float16x8x4_t {float16x8_t val[4];};
typedef u_int32_t fsfile_type_t;
typedef  gss_OID_desc *gss_const_OID;
typedef integer_t host_flavor_t;
typedef integer_t *host_info64_t;
typedef uint64_t hv_vm_space_t;
struct ident_command {uint32_t cmd;uint32_t cmdsize;};
typedef int16_t int_least16_t;
typedef int32_t int_least32_t;
typedef int64_t int_least64_t;
struct io_stat_entry {uint64_t count;uint64_t size;};
struct __attribute__((packed)) ip6_opt_jumbo {u_int8_t ip6oj_type;u_int8_t ip6oj_len;u_int8_t ip6oj_jumbo_len[4];};
typedef integer_t mach_msg_id_t;
struct mach_timespec {unsigned int tv_sec;clock_res_t tv_nsec;};
typedef mig_stub_routine_t mig_routine_t;
typedef integer_t *policy_base_t;
typedef integer_t *policy_info_t;
typedef __darwin_pthread_key_t pthread_key_t;
typedef __ns_flag res_9_ns_flag;
typedef __ns_sect res_9_ns_sect;
struct rstat_timeval {u_int tv_sec;u_int tv_usec;};
typedef __uint32_t sae_associd_t;
typedef simd_double1 simd__double1;
typedef simd_ushort1 simd__ushort1;
struct simd_float2x2 {simd_float2 columns[2];};
struct simd_float2x3 {simd_float3 columns[2];};
struct simd_float2x4 {simd_float4 columns[2];};
struct simd_float3x2 {simd_float2 columns[3];};
struct simd_float3x3 {simd_float3 columns[3];};
struct simd_float3x4 {simd_float4 columns[3];};
struct simd_float4x2 {simd_float2 columns[4];};
struct simd_float4x3 {simd_float3 columns[4];};
struct simd_float4x4 {simd_float4 columns[4];};
typedef int64_t sparse_stride;
typedef sqlite_int64 sqlite3_int64;
struct std__bad_cast { std__exception cppsuper0;};
typedef u_int64_t syscall_arg_t;
typedef integer_t *task_policy_t;
struct tcpstat_local {u_int64_t badformat;u_int64_t unspecv6;u_int64_t synfin;u_int64_t badformatipsec;u_int64_t noconnnolist;u_int64_t noconnlist;u_int64_t listbadsyn;u_int64_t icmp6unreach;u_int64_t deprecate6;u_int64_t ooopacket;u_int64_t rstinsynrcv;u_int64_t dospacket;u_int64_t cleanup;u_int64_t synwindow;};
typedef integer_t *thread_info_t;
typedef uint16_t uint_fast16_t;
typedef uint32_t uint_fast32_t;
typedef uint64_t uint_fast64_t;
typedef uint8_t uint_least8_t;
struct unw_context_t {uint64_t data[167];};
typedef __darwin_uuid_string_t uuid_string_t;
typedef simd_ulong1 vector_ulong1;
typedef uint32_t vm32_offset_t;
typedef uint64_t vm_map_size_t;
typedef uint64_t xattr_flags_t;
typedef xmlCatalog *xmlCatalogPtr;
typedef xmlElement *xmlElementPtr;
typedef xmlExpCtxt *xmlExpCtxtPtr;
typedef xmlExpNode *xmlExpNodePtr;
typedef void *(*xmlHashCopier)(void *, xmlChar *);
typedef xmlIDTable *xmlIDTablePtr;
typedef xmlNodeSet *xmlNodeSetPtr;
typedef xmlPattern *xmlPatternPtr;
typedef xmlRelaxNG *xmlRelaxNGPtr;
typedef uint64_t AAACEFlagSet;
typedef uint64_t AAACEPermSet;
typedef int32_t ABPropertyID;
typedef uint32_t ABRecordType;
struct AVEdgeWidths {CGFloat left;CGFloat top;CGFloat right;CGFloat bottom;};
struct Block_layout {void *isa;int32_t flags;int32_t reserved;void (*invoke)(void *, ...);Block_descriptor_1 *descriptor;};
typedef NSUInteger CACornerMask;
struct __attribute__((packed)) CAFUMIDChunk {UInt8 mBytes[64];};
typedef uint32_t CGBitmapInfo;
typedef NSString *CKRecordType;
typedef NSUInteger EKEntityMask;
typedef NFCFeliCaEncryptionId EncryptionId;
struct Float32Point {Float32 x;Float32 y;};
typedef UInt32 FontNameCode;
typedef UInt32 FourCharCode;
typedef ALenum (*LPALGETERROR)(void);
typedef MIDIObjectRef MIDISetupRef;
typedef SInt32 MIDIUniqueID;
struct MIDIValueMap {UInt8 value[128];};
typedef uint64_t MTLTimestamp;
typedef NSString * PDFBorderKey;
typedef uint16_t Pixel_16U16U[2];
typedef NSInteger SCNColorMask;
typedef NSString *SCNLightType;
typedef UInt8 STEntryIndex;
typedef StringPtr *StringHandle;
struct UIEdgeInsets {CGFloat top;CGFloat left;CGFloat bottom;CGFloat right;};
struct UIFloatRange {CGFloat minimum;CGFloat maximum;};
typedef CGFloat UIFontWeight;
typedef NSUInteger UIRectCorner;
typedef uint8_t UVersionInfo[4];
struct UnsignedWide {UInt32 lo;UInt32 hi;};
typedef NFCVASErrorCode VASErrorCode;
struct VTInt32Point {int32_t x;int32_t y;};
typedef CFTypeRef VTSessionRef;
struct _AVBeatRange {AVMusicTimeStamp start;AVMusicTimeStamp length;};
struct __objc2_meth {char *name;char *types;IMP imp;};
struct __objc2_prot {void *isa;char *name;__objc2_prot_list *prots;__objc2_meth_list *inst_meths;__objc2_meth_list *class_meths;__objc2_meth_list *opt_inst_meths;__objc2_meth_list *opt_class_meths;__objc2_prop_list *inst_props;uint32_t cb;uint32_t flags;};
struct _xmlNotation { xmlChar *name; xmlChar *PublicID; xmlChar *SystemID;};
struct axr_origin_t {uint32_t x;uint32_t y;};
struct dns_header_t {uint16_t xid;uint16_t flags;uint16_t qdcount;uint16_t ancount;uint16_t nscount;uint16_t arcount;};
struct dylib_module {uint32_t module_name;uint32_t iextdefsym;uint32_t nextdefsym;uint32_t irefsym;uint32_t nrefsym;uint32_t ilocalsym;uint32_t nlocalsym;uint32_t iextrel;uint32_t nextrel;uint32_t iinit_iterm;uint32_t ninit_nterm;uint32_t objc_module_info_addr;uint32_t objc_module_info_size;};
typedef u_int32_t fsobj_type_t;
struct icmp6_filter {u_int32_t icmp6_filt[8];};
struct icmp_ra_addr {u_int32_t ira_addr;u_int32_t ira_preference;};
typedef int16_t int_fast16_t;
typedef int32_t int_fast32_t;
typedef int64_t int_fast64_t;
typedef int8_t int_least8_t;
struct io_stat_info {io_stat_entry disk_reads;io_stat_entry io_priority[4];io_stat_entry paging;io_stat_entry metadata;io_stat_entry total_io;};
struct __attribute__((packed)) ip6_opt_nsap {u_int8_t ip6on_type;u_int8_t ip6on_len;u_int8_t ip6on_src_nsap_len;u_int8_t ip6on_dst_nsap_len;};
struct load_command {uint32_t cmd;uint32_t cmdsize;};
typedef kern_return_t mach_error_t;
struct __attribute__((packed)) nd_opt_nonce {u_int8_t nd_opt_nonce_type;u_int8_t nd_opt_nonce_len;u_int8_t nd_opt_nonce[6];};
struct poly16x4x2_t {poly16x4_t val[2];};
struct poly16x4x3_t {poly16x4_t val[3];};
struct poly16x4x4_t {poly16x4_t val[4];};
struct poly16x8x2_t {poly16x8_t val[2];};
struct poly16x8x3_t {poly16x8_t val[3];};
struct poly16x8x4_t {poly16x8_t val[4];};
struct poly64x1x2_t {poly64x1_t val[2];};
struct poly64x1x3_t {poly64x1_t val[3];};
struct poly64x1x4_t {poly64x1_t val[4];};
struct poly64x2x2_t {poly64x2_t val[2];};
struct poly64x2x3_t {poly64x2_t val[3];};
struct poly64x2x4_t {poly64x2_t val[4];};
struct poly8x16x2_t {poly8x16_t val[2];};
struct poly8x16x3_t {poly8x16_t val[3];};
struct poly8x16x4_t {poly8x16_t val[4];};
typedef __uint32_t sae_connid_t;
typedef simd_float1 simd__float1;
typedef simd_short1 simd__short1;
typedef simd_uchar1 simd__uchar1;
typedef simd_ulong1 simd__ulong1;
typedef int64_t sparse_index;
struct spraytimeval {u_int sec;u_int usec;};
struct uint16x4x2_t {uint16x4_t val[2];};
struct uint16x4x3_t {uint16x4_t val[3];};
struct uint16x4x4_t {uint16x4_t val[4];};
struct uint16x8x2_t {uint16x8_t val[2];};
struct uint16x8x3_t {uint16x8_t val[3];};
struct uint16x8x4_t {uint16x8_t val[4];};
struct uint32x2x2_t {uint32x2_t val[2];};
struct uint32x2x3_t {uint32x2_t val[3];};
struct uint32x2x4_t {uint32x2_t val[4];};
struct uint32x4x2_t {uint32x4_t val[2];};
struct uint32x4x3_t {uint32x4_t val[3];};
struct uint32x4x4_t {uint32x4_t val[4];};
struct uint64x1x2_t {uint64x1_t val[2];};
struct uint64x1x3_t {uint64x1_t val[3];};
struct uint64x1x4_t {uint64x1_t val[4];};
struct uint64x2x2_t {uint64x2_t val[2];};
struct uint64x2x3_t {uint64x2_t val[3];};
struct uint64x2x4_t {uint64x2_t val[4];};
struct uint8x16x2_t {uint8x16_t val[2];};
struct uint8x16x3_t {uint8x16_t val[3];};
struct uint8x16x4_t {uint8x16_t val[4];};
typedef uint8_t uint_fast8_t;
struct unw_cursor_t {uint64_t data[179];};
typedef int64_t user_ssize_t;
typedef u_int64_t user_ulong_t;
typedef uint32_t vImage_Flags;
typedef simd_long1 vector_long1;
typedef xmlBuffer *xmlBufferPtr;
typedef xmlEntity *xmlEntityPtr;
typedef xmlModule *xmlModulePtr;
typedef xmlRMutex *xmlRMutexPtr;
typedef xmlRegexp *xmlRegexpPtr;
typedef xmlSchema *xmlSchemaPtr;
typedef uint32_t AAEntryType;
typedef uint32_t AAFieldType;
typedef CFTypeRef ABRecordRef;
typedef NSString *AVMediaType;
struct AnchorPoint {SInt16 x;SInt16 y;};
struct AudioBuffer {UInt32 mNumberChannels;UInt32 mDataByteSize;void *mData;};
typedef uint32_t CCAlgorithm;
typedef uint32_t CCOperation;
typedef CCCryptorStatus CCRNGStatus;
typedef CFIndex CFByteOrder;
typedef CFStringRef CFLocaleKey;
struct CFUUIDBytes {UInt8 byte0;UInt8 byte1;UInt8 byte2;UInt8 byte3;UInt8 byte4;UInt8 byte5;UInt8 byte6;UInt8 byte7;UInt8 byte8;UInt8 byte9;UInt8 byte10;UInt8 byte11;UInt8 byte12;UInt8 byte13;UInt8 byte14;UInt8 byte15;};
typedef CFTypeRef CMBufferRef;
typedef CFIndex CMItemCount;
typedef CFIndex CMItemIndex;
typedef FourCharCode CMMediaType;
typedef int64_t CMTimeEpoch;
typedef uint32_t CMTimeFlags;
typedef int32_t CMTimeScale;
typedef int64_t CMTimeValue;
typedef uint32_t CTRunStatus;
typedef int32_t CVTimeFlags;
typedef uint8_t ENRiskLevel;
typedef uint8_t ENRiskScore;
typedef uint32_t IOSurfaceID;
typedef void (*LPALDISABLE)(ALenum);
typedef MIDIObjectRef MIDIPortRef;
typedef CGFloat MKZoomScale;
typedef NSUInteger MPMediaType;
typedef NSString *NLTagScheme;
typedef NSString *NSLocaleKey;
typedef int16_t Pixel_16Q12;
typedef NFCISO15693RequestFlag RequestFlag;
struct STEntryZero {UInt16 newState;UInt16 flags;};
typedef Str63 StrFileName;
typedef SInt64 TimeValue64;
struct VTInt32Size {int32_t width;int32_t height;};
typedef VersRecPtr *VersRecHndl;
union _GLKMatrix2 {_GLKMatrix2___9B57ABAB53129359FC278B413DD04FEA __anonymous0;float m2[2][2];float m[4];};
union _GLKMatrix3 {_GLKMatrix3___BB947FF03F7651DA078F6D1ECDA4F9F6 __anonymous0;float m[9];};
union __attribute__((aligned(16))) _GLKMatrix4 {_GLKMatrix4___149E04C8607449E2E7257C0CA95EBF69 __anonymous0;float m[16];};
typedef __CLPK_logical (*__CLPK_L_fp)(void);
typedef asl_object_t aslresponse;
typedef u_int32_t attrgroup_t;
typedef u_int64_t au_asflgs_t;
struct audit_fstat {u_int64_t af_filesz;u_int64_t af_currsz;};
struct dns_reply_t {uint32_t status;sockaddr *server;dns_header_t *header;dns_question_t **question;dns_resource_record_t **answer;dns_resource_record_t **authority;dns_resource_record_t **additional;};
union __attribute__((aligned(8))) float32x2_t {float32_t f32[2];char i8[8];short i16[4];int i32[2];unsigned char u8[8];unsigned short u16[4];unsigned int u32[2];};
union __attribute__((aligned(16))) float32x4_t {float32_t f32[4];char i8[16];short i16[8];int i32[4];long long i64[2];unsigned char u8[16];unsigned short u16[8];unsigned int u32[4];unsigned long long u64[2];};
union __attribute__((aligned(8))) float64x1_t {float64_t f64[1];};
union __attribute__((aligned(16))) float64x2_t {float64_t f64[2];};
typedef u_int32_t fsobj_tag_t;
typedef integer_t *host_info_t;
typedef mach_error_t hv_return_t;
struct int16x4x2_t {int16x4_t val[2];};
struct int16x4x3_t {int16x4_t val[3];};
struct int16x4x4_t {int16x4_t val[4];};
struct int16x8x2_t {int16x8_t val[2];};
struct int16x8x3_t {int16x8_t val[3];};
struct int16x8x4_t {int16x8_t val[4];};
struct int32x2x2_t {int32x2_t val[2];};
struct int32x2x3_t {int32x2_t val[3];};
struct int32x2x4_t {int32x2_t val[4];};
struct int32x4x2_t {int32x4_t val[2];};
struct int32x4x3_t {int32x4_t val[3];};
struct int32x4x4_t {int32x4_t val[4];};
struct int64x1x2_t {int64x1_t val[2];};
struct int64x1x3_t {int64x1_t val[3];};
struct int64x1x4_t {int64x1_t val[4];};
struct int64x2x2_t {int64x2_t val[2];};
struct int64x2x3_t {int64x2_t val[3];};
struct int64x2x4_t {int64x2_t val[4];};
struct int8x16x2_t {int8x16_t val[2];};
struct int8x16x3_t {int8x16_t val[3];};
struct int8x16x4_t {int8x16_t val[4];};
typedef int8_t int_fast8_t;
typedef __darwin_mach_port_t mach_port_t;
struct nlm4_notify {char *name;int32_t state;};
struct objc_object {Class isa;};
struct opaque_auth {int oa_flavor;caddr_t oa_base;unsigned int oa_length;};
struct poly8x8x2_t {poly8x8_t val[2];};
struct poly8x8x3_t {poly8x8_t val[3];};
struct poly8x8x4_t {poly8x8_t val[4];};
typedef mach_port_t processor_t;
struct rusers_utmp {char *ut_user;char *ut_line;char *ut_host;int ut_type;int ut_time;u_int ut_idle;};
typedef __uint8_t sa_family_t;
typedef mach_port_t semaphore_t;
typedef simd_char1 simd__char1;
typedef simd_long1 simd__long1;
typedef simd_uint1 simd__uint1;
struct sm_stat_res {sm_res res_stat;int state;};
struct sockaddr_un {unsigned char sun_len;sa_family_t sun_family;char sun_path[104];};
typedef mach_port_t suid_cred_t;
typedef __darwin_suseconds_t suseconds_t;
typedef integer_t *task_info_t;
typedef mach_port_t task_name_t;
typedef mach_port_t task_read_t;
struct tsegqe_head {u_int32_t lh_first;};
struct uint8x8x2_t {uint8x8_t val[2];};
struct uint8x8x3_t {uint8x8_t val[3];};
struct uint8x8x4_t {uint8x8_t val[4];};
typedef u_int64_t user_addr_t;
typedef int64_t user_long_t;
typedef u_int64_t user_size_t;
typedef int64_t user_time_t;
struct vDSP_uint24 {uint8_t bytes[3];};
typedef uint32_t vm32_size_t;
typedef uintptr_t vm_offset_t;
typedef xmlError *xmlErrorPtr;
typedef xmlMutex *xmlMutexPtr;
union AAFieldKey {char skey[4];uint32_t ikey;};
typedef int32_t ABRecordID;
typedef UInt32 ATSFontRef;
typedef NSString *AVFileType;
typedef AudioComponentInstance AudioCodec;
typedef uint16_t CBL2CAPPSM;
struct GKTriangle {vector_float3 points[3];};
typedef uint32_t GLbitfield;
typedef void (*LPALENABLE)(ALenum);
typedef NSString *NLLanguage;
struct NumVersion {UInt8 nonRelRev;UInt8 stage;UInt8 minorAndBugRev;UInt8 majorRev;};
typedef int32_t OSSpinLock;
typedef UInt32 OptionBits;
typedef NSString *PKPushType;
typedef uint8_t Pixel_8888[4];
typedef ProcPtr *ProcHandle;
typedef SInt16 RegionCode;
struct STEntryOne {UInt16 newState;UInt16 flags;UInt16 offset1;};
struct STEntryTwo {UInt16 newState;UInt16 flags;UInt16 offset1;UInt16 offset2;};
typedef SInt16 ScriptCode;
typedef uint32_t SecPadding;
typedef SInt8 SignedByte;
typedef Style StyleField;
typedef NSUInteger UIRectEdge;
typedef u_int32_t au_class_t;
typedef u_int16_t au_event_t;
struct axr_rect_t {axr_origin_t origin;axr_origin_t axr_size_t;};
struct axr_size_t {uint32_t width;uint32_t height;};
struct bp_address {int address_type;bp_address___3B940BBAFE206A608BBBF7EC1987BA49 bp_address_u;};
typedef integer_t cpu_type_t;
struct diskextent {u_int32_t startblock;u_int32_t blockcount;};
struct ether_addr {u_char octet[6];};
struct fat_header {uint32_t magic;uint32_t nfat_arch;};
typedef __darwin_fsblkcnt_t fsblkcnt_t;
typedef __darwin_fsfilcnt_t fsfilcnt_t;
typedef uint32_t gss_uint32;
typedef gz_header *gz_headerp;
struct int8x8x2_t {int8x8_t val[2];};
struct int8x8x3_t {int8x8_t val[3];};
struct int8x8x4_t {int8x8_t val[4];};
struct klm_holder {int exclusive;int svid;u_int l_offset;u_int l_len;};
typedef mach_port_t lock_set_t;
struct __attribute__((packed)) nd_opt_hdr {u_int8_t nd_opt_type;u_int8_t nd_opt_len;};
struct nlm_notify {char *name;rpc_int state;};
struct objc_cache {unsigned int mask;unsigned int occupied;Method buckets[1];};
struct objc_class {Class isa;};
typedef int64_t register_t;
typedef simd_int1 simd__int1;
struct simd_quatd {simd_double4 vector;};
struct simd_quatf {simd_float4 vector;};
struct time_value {integer_t seconds;integer_t microseconds;};
typedef uintptr_t unw_word_t;
typedef __darwin_useconds_t useconds_t;
typedef int64_t user_off_t;
struct utmp_array {u_int utmp_array_len;rusers_utmp *utmp_array_val;};
struct vDSP_int24 {uint8_t bytes[3];};
typedef xmlChar *xlinkTitle;
typedef xmlAttr *xmlAttrPtr;
typedef xmlDict *xmlDictPtr;
typedef xmlLink *xmlLinkPtr;
typedef xmlList *xmlListPtr;
typedef xmlNode *xmlNodePtr;
typedef uint64_t AAFlagSet;
typedef AudioComponentInstance AudioUnit;
typedef uint32_t CCOptions;
typedef uint32_t CCPadding;
typedef uint64_t CC_LONG64;
typedef CGFloat CGPDFReal;
typedef CFIndex GCKeyCode;
typedef uint8_t GLboolean;
struct MPSOffset {NSInteger x;NSInteger y;NSInteger z;};
struct MTLOrigin {NSUInteger x;NSUInteger y;NSUInteger z;};
typedef uint32_t OM_uint32;
typedef uint64_t OM_uint64;
typedef UInt32 PBVersion;
typedef NSString *PKInkType;
typedef int16_t Pixel_16S;
typedef uint16_t Pixel_16U;
typedef uint32_t Pixel_32U;
struct STXHeader {UInt32 nClasses;UInt32 classTableOffset;UInt32 stateArrayOffset;UInt32 entryTableOffset;};
typedef SInt32 TimeScale;
typedef SInt32 TimeValue;
typedef SInt16 TrakValue;
typedef UInt16 UTF16Char;
typedef UInt32 UTF32Char;
struct __rpc_xdr {xdr_op x_op; __rpc_xdr__xdr_ops *x_ops;char *x_public;void *x_private;char *x_base;unsigned int x_handy;};
struct _xmlError {int domain;int code;char *message;xmlErrorLevel level;char *file;int line;char *str1;char *str2;char *str3;int int1;int int2;void *ctxt;void *node;};
typedef asl_object_t aslclient;
struct at_size_t {uint32_t x;uint32_t y;uint32_t z;};
typedef u_int16_t au_emod_t;
struct axr_box2i {int32_t xMin;int32_t xMax;int32_t yMin;int32_t yMax;};
typedef __darwin_blksize_t blksize_t;
struct call_body {unsigned int cb_rpcvers;unsigned int cb_prog;unsigned int cb_vers;unsigned int cb_proc;opaque_auth cb_cred;opaque_auth cb_verf;};
typedef __darwin_ct_rune_t ct_rune_t;
union des_block {des_block___E577A72923D02C4B0C353C58593774EC key;char c[8];};
struct dqfilehdr {u_int32_t dqh_magic;u_int32_t dqh_version;u_int32_t dqh_maxentries;u_int32_t dqh_entrycnt;u_int32_t dqh_flags;u_int32_t dqh_chktime;u_int32_t dqh_btime;u_int32_t dqh_itime;char dqh_string[16];u_int32_t dqh_spare[4];};
typedef void (*free_func)(voidpf, voidpf);
typedef u_int32_t fsvolid_t;
typedef OM_uint32 gss_qop_t;
struct imaxdiv_t {intmax_t quot;intmax_t rem;};
typedef __uint32_t in_addr_t;
typedef __uint16_t in_port_t;
struct __attribute__((packed)) ip6_rthdr {u_int8_t ip6r_nxt;u_int8_t ip6r_len;u_int8_t ip6r_type;u_int8_t ip6r_segleft;};
typedef __darwin_mbstate_t mbstate_t;
typedef __darwin_natural_t natural_t;
struct nlm4_stat {nlm4_stats stat;};
typedef vm_offset_t pointer_t;
typedef __uint128_t poly128_t;
typedef __darwin_pthread_t pthread_t;
typedef __darwin_socklen_t socklen_t;
struct sockproto {__uint16_t sp_family;__uint16_t sp_protocol;};
struct timeval32 {__int32_t tv_sec;__int32_t tv_usec;};
struct timeval64 {__int64_t tv_sec;__int64_t tv_usec;};
typedef uintptr_t vm_size_t;
typedef __darwin_wctrans_t wctrans_t;
typedef int (*xdrproc_t)(XDR *, void *, unsigned int);
typedef xmlChar *xlinkHRef;
typedef xmlChar *xlinkRole;
typedef xmlBuf *xmlBufPtr;
typedef xmlDoc *xmlDocPtr;
typedef xmlDtd *xmlDtdPtr;
typedef xmlElementType xmlNsType;
typedef xmlRef *xmlRefPtr;
typedef xmlURI *xmlURIPtr;
struct ypmaplist {mapname map;ypmaplist *next;};
typedef z_stream *z_streamp;
typedef acl_tag_t AAACETag;
typedef int32_t CCStatus;
struct CGVector {CGFloat dx;CGFloat dy;};
typedef int32_t CVReturn;
typedef uint16_t DERShort;
typedef SInt32 Duration;
typedef int32_t GLclampx;
typedef uint64_t GLuint64;
typedef uint16_t GLushort;
typedef SInt16 LangCode;
struct NSObject {Class isa;};
struct NSShadow {NSObject super;};
struct NSStream {NSObject super;};
typedef SInt32 OSStatus;
struct PHChange {NSObject super;};
struct PHObject {NSObject super;};
struct PKObject {NSObject super;};
struct PKStroke {NSObject super;};
typedef uint8_t Pixel_88[2];
struct SCNLight {NSObject super;};
struct SCNScene {NSObject super;};
struct SKAction {NSObject super;};
struct SKRegion {NSObject super;};
struct SKShader {NSObject super;};
struct SRDevice {NSObject super;};
typedef NSString *SRSensor;
typedef UInt16 STXClass;
typedef UInt64 TKTLVTag;
struct UIDevice {NSObject super;};
struct UIOffset {CGFloat horizontal;CGFloat vertical;};
struct UIRegion {NSObject super;};
struct UIScreen {NSObject super;};
typedef UInt8 UTF8Char;
typedef SInt8 VHSelect;
struct VNCircle {NSObject super;};
struct VNVector {NSObject super;};
struct _NSRange {NSUInteger location;NSUInteger length;};
typedef uint64_t addr64_t;
struct addrinfo {int ai_flags;int ai_family;int ai_socktype;int ai_protocol;socklen_t ai_addrlen;char *ai_canonname;sockaddr *ai_addr;addrinfo *ai_next;};
typedef __darwin_blkcnt_t blkcnt_t;
struct fsobj_id {u_int32_t fid_objno;u_int32_t fid_generation;};
struct fts5_api {int iVersion;int (*xCreateTokenizer)(fts5_api *,  char *, void *, fts5_tokenizer *, void (*)(void *));int (*xFindTokenizer)(fts5_api *,  char *, void **, fts5_tokenizer *);int (*xCreateFunction)(fts5_api *,  char *, void *, fts5_extension_function, void (*)(void *));};
typedef __darwin_intptr_t intptr_t;
struct __attribute__((packed)) ip6_dest {u_int8_t ip6d_nxt;u_int8_t ip6d_len;};
struct klm_stat {klm_stats stat;};
typedef mach_port_t ledger_t;
struct nlm_stat {nlm_stats stat;};
typedef uint16_t poly16_t;
typedef uint64_t poly64_t;
typedef __darwin_off_t regoff_t;
struct sadb_ext {u_int16_t sadb_ext_len;u_int16_t sadb_ext_type;};
struct sadb_key {u_int16_t sadb_key_len;u_int16_t sadb_key_exttype;u_int16_t sadb_key_bits;u_int16_t sadb_key_reserved;};
typedef __darwin_sigset_t sigset_t;
struct sprayarr {u_int sprayarr_len;char *sprayarr_val;};
typedef mach_port_t thread_t;
struct timespec {__darwin_time_t tv_sec;long long tv_nsec;};
typedef u_int64_t u_quad_t;
struct vfsquery {u_int32_t vq_flags;u_int32_t vq_spare[31];};
typedef mach_port_t vm_map_t;
typedef __darwin_wctype_t wctype_t;
typedef xmlID *xmlIDPtr;
typedef xmlNs *xmlNsPtr;
struct yppasswd {char *oldpass;x_passwd newpw;};
struct ARFrame {NSObject super;};
struct AVAsset {NSObject super;AVAssetInternal *_asset;};
struct AVMovie {AVAsset super;AVMovieInternal *_movie;};
typedef UInt8 *BytePtr;
typedef uint32_t CC_LONG;
struct CFRange {CFIndex location;CFIndex length;};
typedef CGFontIndex CGGlyph;
struct CGPoint {CGFloat x;CGFloat y;};
struct CIColor {NSObject super;void *_priv;void *_pad[3];};
struct CIImage {NSObject super;void *_priv;};
struct CKAsset {NSObject super;};
struct CKQuery {NSObject super;};
struct CLFloor {NSObject super;};
struct CLVisit {NSObject super;};
struct CNGroup {NSObject super;};
struct CTError {SInt32 domain;SInt32 error;};
typedef uint8_t DERByte;
struct GCColor {NSObject super;};
struct GCMouse {NSObject super;};
struct GKGraph {NSObject super;};
struct GKMatch {NSObject super;};
struct GKNoise {NSObject super;};
struct GKRTree {NSObject super;};
struct GKScene {NSObject super;};
struct GKScore {NSObject super;};
struct GKState {NSObject super;};
struct GLKMesh {NSObject super;};
typedef int32_t GLfixed;
typedef int64_t GLint64;
typedef int16_t GLshort;
typedef int32_t GLsizei;
typedef uint8_t GLubyte;
struct HKQuery {NSObject super;};
struct HMEvent {NSObject super;};
typedef SInt32 HRESULT;
struct INColor {NSObject super;};
struct INImage {NSObject super;};
struct JSValue {NSObject super;};
struct MKRoute {NSObject super;};
struct MKShape {NSObject super;};
struct MLModel {NSObject super;};
struct MTKMesh {NSObject super;};
struct MTLSize {NSUInteger width;NSUInteger height;NSUInteger depth;};
struct MTLType {NSObject super;};
struct NKIssue {NSObject super;};
struct NLModel {NSObject super;};
struct NSArray {NSObject super;};
struct NSCoder {NSObject super;};
struct NSProxy {Class isa;};
struct NSTimer {NSObject super;};
struct NSValue {NSObject super;};
struct PDFPage {NSObject super;PDFPagePrivate *_private;};
struct PHAsset {PHObject super;};
typedef uint8_t Pixel_8;
typedef FourCharCode ResType;
struct SCNNode {NSObject super;};
struct SKRange {NSObject super;};
struct SRVisit {NSObject super;};
typedef UInt8 STClass;
struct TKToken {NSObject super;};
typedef int32_t UChar32;
struct UIColor {NSObject super;};
struct UIEvent {NSObject super;};
struct UIImage {NSObject super;};
struct UIPress {NSObject super;};
struct UITouch {NSObject super;};
typedef UInt16 UniChar;
typedef NFCVASMode VASMode;
struct VNPoint {NSObject super;};
typedef mach_port_t alarm_t;
typedef __darwin_clock_t clock_t;
struct cmsghdr {socklen_t cmsg_len;int cmsg_level;int cmsg_type;};
typedef int32_t daddr_t;
typedef __int32_t fd_mask;
typedef u_int32_t fixpt_t;
struct in_addr {in_addr_t s_addr;};
typedef __darwin_ino64_t ino64_t;
struct __attribute__((packed)) ip6_ext {u_int8_t ip6e_nxt;u_int8_t ip6e_len;};
struct __attribute__((packed)) ip6_hbh {u_int8_t ip6h_nxt;u_int8_t ip6h_len;};
struct __attribute__((packed)) ip6_opt {u_int8_t ip6o_type;u_int8_t ip6o_len;};
struct ip_mreq {in_addr imr_multiaddr;in_addr imr_interface;};
struct ip_opts {in_addr ip_dst;char ip_opts[40];};
struct loadavg {fixpt_t ldavg[3];long long fscale;};
typedef __uint16_t n_short;
typedef __darwin_nl_item nl_item;
typedef __uint16_t nlink_t;
typedef __ns_type ns_type;
typedef uint8_t poly8_t;
typedef uint32_t ppnum_t;
typedef u_int32_t recno_t;
typedef uint32_t reg64_t;
typedef __darwin_size_t rsize_t;
struct ru_utmp {char ut_line[8];char ut_name[8];char ut_host[16];rpc_int ut_time;};
struct section {char sectname[16];char segname[16];uint32_t addr;uint32_t size;uint32_t offset;uint32_t align;uint32_t reloff;uint32_t nreloc;uint32_t flags;uint32_t reserved1;uint32_t reserved2;};
typedef int32_t segsz_t;
typedef __darwin_ssize_t ssize_t;
typedef int32_t swblk_t;
typedef __uint32_t tcp_seq;
struct vfsconf {uint32_t vfc_reserved1;char vfc_name[15];int vfc_typenum;int vfc_refcount;int vfc_flags;uint32_t vfc_reserved2;uint32_t vfc_reserved3;};
typedef SInt32 AUNode;
struct BGTask {NSObject super;};
struct CBPeer {NSObject super;};
struct CBUUID {NSObject super;};
typedef uint32_t CCMode;
struct CGSize {CGFloat width;CGFloat height;};
struct CLIENT {AUTH *cl_auth;CLIENT__clnt_ops *cl_ops;caddr_t cl_private;};
struct CPTrip {NSObject super;};
struct CXCall {NSObject super;};
typedef uint64_t DERTag;
struct GKGoal {NSObject super;};
struct GKPath {NSObject super;};
struct GKQuad {vector_float2 quadMin;vector_float2 quadMax;};
struct GKRule {NSObject super;};
typedef int8_t GLbyte;
typedef uint32_t GLenum;
typedef uint16_t GLhalf;
typedef uint32_t GLuint;
struct HEADER {unsigned int id : 16;unsigned int rd : 1;unsigned int tc : 1;unsigned int aa : 1;unsigned int opcode : 4;unsigned int qr : 1;unsigned int rcode : 4;unsigned int cd : 1;unsigned int ad : 1;unsigned int unused : 1;unsigned int ra : 1;unsigned int qdcount : 16;unsigned int ancount : 16;unsigned int nscount : 16;unsigned int arcount : 16;};
struct HKUnit {NSObject super;};
struct HMHome {NSObject super;};
struct HMRoom {NSObject super;};
struct HMUser {NSObject super;};
struct HMZone {NSObject super;};
typedef Ptr *Handle;
struct INFile {NSObject super;};
struct INNote {NSObject super;};
struct INSeat {NSObject super;};
struct INTask {NSObject super;};
struct MLTask {NSObject super;};
struct NSData {NSObject super;};
struct NSDate {NSObject super;};
struct NSLock {NSObject super;void *_priv;};
struct NSNull {NSObject super;};
struct NSPipe {NSObject super;};
struct NSPort {NSObject super;};
struct NSUUID {NSObject super;};
struct NWPath {NSObject super;};
typedef FourCharCode OSType;
struct PKPass {PKObject super;};
struct PKTool {NSObject super;};
typedef NSUInteger UIAxis;
struct UIFont {NSObject super;};
struct UTType {NSObject super;};
typedef asl_object_t aslmsg;
struct fd_set {__int32_t fds_bits[32];};
typedef __darwin_off_t fpos_t;
typedef mach_port_t host_t;
struct ifconf {int ifc_len;ifconf___5DC96BFAC5DE8146297FC415464D4A33 ifc_ifcu;};
typedef u_int16_t indx_t;
struct keydat {u_int keydat_len;char *keydat_val;};
union lc_str {uint32_t offset;};
typedef __darwin_mode_t mode_t;
struct mon_id {char *mon_name;my_id my_id;};
struct msghdr {void *msg_name;socklen_t msg_namelen;iovec *msg_iov;int msg_iovlen;void *msg_control;socklen_t msg_controllen;int msg_flags;};
typedef __uint32_t n_long;
typedef __uint32_t n_time;
struct netent {char *n_name;char **n_aliases;int n_addrtype;uint32_t n_net;};
typedef u_int32_t pgno_t;
typedef int64_t quad_t;
typedef __uint64_t rlim_t;
struct rlimit {rlim_t rlim_cur;rlim_t rlim_max;};
struct rquota {int rq_bsize;int rq_active;u_int rq_bhardlimit;u_int rq_bsoftlimit;u_int rq_curblocks;u_int rq_fhardlimit;u_int rq_fsoftlimit;u_int rq_curfiles;u_int rq_btimeleft;u_int rq_ftimeleft;};
typedef __darwin_rune_t rune_t;
typedef __darwin_size_t size_t;
typedef mach_port_t task_t;
typedef __uint32_t tcp_cc;
struct tcphdr {unsigned short th_sport;unsigned short th_dport;tcp_seq th_seq;tcp_seq th_ack;unsigned int th_x2 : 4;unsigned int th_off : 4;unsigned char th_flags;unsigned short th_win;unsigned short th_sum;unsigned short th_urp;};
typedef __darwin_time_t time_t;
typedef uLong uLongf;
struct udphdr {u_short uh_sport;u_short uh_dport;u_short uh_ulen;u_short uh_sum;};
typedef __darwin_uuid_t uuid_t;
struct valdat {u_int valdat_len;char *valdat_val;};
typedef __darwin_wint_t wint_t;
typedef UInt32 CFBit;
typedef SInt32 Fixed;
typedef SInt32 Fract;
struct GKBox {vector_float3 boxMin;vector_float3 boxMax;};
typedef int32_t GLint;
struct INCar {NSObject super;};
struct MLKey {NSObject super;};
typedef NSString *NLTag;
struct NSSet {NSObject super;};
typedef SInt16 OSErr;
struct PKInk {NSObject super;};
typedef int8_t UBool;
typedef uint16_t UChar;
struct UIKey {NSObject super;};
struct UINib {NSObject super;};
typedef UInt32 ULONG;
struct datum {void *dptr;size_t dsize;};
typedef __darwin_dev_t dev_t;
typedef __darwin_gid_t gid_t;
struct group {char *gr_name;char *gr_passwd;gid_t gr_gid;char **gr_mem;};
struct ifdrv {char ifd_name[16];unsigned long long ifd_cmd;size_t ifd_len;void *ifd_data;};
struct ifkpi {unsigned int ifk_module_id;unsigned int ifk_type;ifkpi___41FCD958378792E4BAD3BFA006FE005B ifk_data;};
typedef __darwin_ino_t ino_t;
struct iovec {void *iov_base;size_t iov_len;};
typedef __int32_t key_t;
typedef __darwin_off_t off_t;
typedef __darwin_pid_t pid_t;
struct stats {int cp_time[4];int dk_xfer[4];u_int v_pgpgin;u_int v_pgpgout;u_int v_pswpin;u_int v_pswpout;u_int v_intr;int if_ipackets;int if_ierrors;int if_oerrors;int if_collisions;int if_opackets;};
struct timeb {time_t time;unsigned short millitm;short timezone;short dstflag;};
typedef uInt uIntf;
typedef __darwin_uid_t uid_t;
typedef mach_port_t upl_t;
typedef UInt8 Byte;
struct __db {DBTYPE type;int (*close)(__db *);int (*del)( __db *,  DBT *, unsigned int);int (*get)( __db *,  DBT *, DBT *, unsigned int);int (*put)( __db *, DBT *,  DBT *, unsigned int);int (*seq)( __db *, DBT *, DBT *, unsigned int);int (*sync)( __db *, unsigned int);void *internal;int (*fd)( __db *);};
struct fsid {int32_t val[2];};
typedef __darwin_id_t id_t;
struct DBT {void *data;size_t size;};
struct DIR {int __dd_fd;long long __dd_loc;long long __dd_size;char *__dd_buf;int __dd_len;long long __dd_seek;long long __padding;int __dd_flags;__darwin_pthread_mutex_t __dd_lock;_telldir *__dd_td;};
struct mon {mon_id mon_id;char priv[16];};
struct msg {msg *msg_next;long long msg_type;unsigned short msg_ts;short msg_spot;label *label;};
struct sem {unsigned short semval;pid_t sempid;unsigned short semncnt;unsigned short semzcnt;};
struct tms {clock_t tms_utime;clock_t tms_stime;clock_t tms_cutime;clock_t tms_cstime;};
struct std____1__reverse_iterator_std____wrap_iter_const_char16_t__P__ { std____1__iterator_std__random_access_iterator_tag__char16_t__long__const_char16_t__P__const_char16_t__R_ cppsuper0;std____1____wrap_iter_const_char16_t__P_ __t;std____1____wrap_iter_const_char16_t__P_ current;};
struct std____1__reverse_iterator_std____wrap_iter_const_char32_t__P__ { std____1__iterator_std__random_access_iterator_tag__char32_t__long__const_char32_t__P__const_char32_t__R_ cppsuper0;std____1____wrap_iter_const_char32_t__P_ __t;std____1____wrap_iter_const_char32_t__P_ current;};
union arm_unified_thread_state___9FA5E432098BAEED883302D0D647C3FA {arm_thread_state32_t ts_32;arm_thread_state64_t ts_64;};
struct std____1__reverse_iterator_std____wrap_iter_char16_t__P__ { std____1__iterator_std__random_access_iterator_tag__char16_t_ cppsuper0;std____1____wrap_iter_char16_t__P_ __t;std____1____wrap_iter_char16_t__P_ current;};
struct std____1__reverse_iterator_std____wrap_iter_char32_t__P__ { std____1__iterator_std__random_access_iterator_tag__char32_t_ cppsuper0;std____1____wrap_iter_char32_t__P_ __t;std____1____wrap_iter_char32_t__P_ current;};
struct axr_decoder_info_t___A147FA619674AD8F0C1DA22DD7FB259D {_2480E168A8CF38FB319C7F302A3EC51F origin;axr_size_t size;};
union AAEntryAttributes___EFADEFB9DC9004767965205374614248 {uint32_t bits;_678A87172BFFCBF6A0FE0078F3A89BFB __anonymous0;};
struct axr_part_info_t___C2A9D52C59000E92D946D3240063F922 {axr_size_t size; uint8_t *rgbaData;};
union rejected_reply___FEB4F6CB395C7E44573402E2A32E10A3 {_AC186CABF9007C2DA87CD3BECABD7D45 RJ_versions;auth_stat RJ_why;};
struct __res_9_state___74FC9BA5E222057206531471DD26DEFB {in_addr addr;u_int32_t mask;};
struct unwind_info_compressed_second_level_page_header {uint32_t kind;uint16_t entryPageOffset;uint16_t entryCount;uint16_t encodingsPageOffset;uint16_t encodingsCount;};
struct std____1__messages_byname_wchar_t__vtbl_layout; 
struct std____1__time_put_byname_wchar_t__vtbl_layout; 
union ypbind_resp___CD49527FE086EB7F6D0E69C2C3AD50AC {u_int ypbind_error;ypbind_binding ypbind_bindinfo;};
struct std____1__codecvt_char16_t__char__mbstate_t_ { std____1__locale__facet cppsuper0;std____1__codecvt_base cppsuper1;};
struct std____1__codecvt_char32_t__char__mbstate_t_ { std____1__locale__facet cppsuper0;std____1__codecvt_base cppsuper1;};
struct unwind_info_regular_second_level_page_header {uint32_t kind;uint16_t entryPageOffset;uint16_t entryCount;};
struct std____1__ctype_byname_wchar_t__vtbl_layout; 
struct std____1__messages_byname_char__vtbl_layout; 
struct std____1__time_put_byname_char__vtbl_layout; 
struct MTLDrawIndexedPrimitivesIndirectArguments {uint32_t indexCount;uint32_t instanceCount;uint32_t indexStart;int32_t baseVertex;uint32_t baseInstance;};
struct std____1__basic_string_char16_t_____short {std____1__basic_string_char16_t___value_type __data_[11];std____1__basic_string_char16_t_____short___F258D7DED934BF0EB39F60A209D311FC __anonymous0;};
struct std____1__basic_string_char32_t_____short {std____1__basic_string_char32_t___value_type __data_[5];std____1__basic_string_char32_t_____short___4BCC28CA51C261F04D7FA0FC5D6C1490 __anonymous0;};
typedef size_t (*CGDataProviderGetBytesAtPositionCallback)(void *, void *, off_t, size_t);
struct inpcb___A3F4421969B6E37110B41AEAB8712ABC {u_char inp4_ip_tos;u_int32_t inp4_options;u_int32_t inp4_moptions;};
struct std____1__basic_string_wchar_t_____short {std____1__basic_string_wchar_t___value_type __data_[5];std____1__basic_string_wchar_t_____short___FF41AE7C12FB3515350232ED16A8A858 __anonymous0;};
struct std____1__codecvt_char__char__mbstate_t_ { std____1__locale__facet cppsuper0;std____1__codecvt_base cppsuper1;};
typedef CFComparisonResult (*CTFontCollectionSortDescriptorsCallback)(CTFontDescriptorRef, CTFontDescriptorRef, void *);
struct std____1__messages_wchar_t__vtbl_layout; 
struct std____1__messages_byname_wchar_t__vtbl; 
struct std____1__time_put_wchar_t__vtbl_layout; 
struct std____1__time_put_byname_wchar_t__vtbl; 
typedef void (*CFProxyAutoConfigurationResultCallback)(void *, CFArrayRef, CFErrorRef);
struct std____1__collate_wchar_t__vtbl_layout; 
struct std____1__istreambuf_iterator_wchar_t_ { std____1__iterator_std__input_iterator_tag__wchar_t__long_long__wchar_t__P__wchar_t_ cppsuper0;std____1__istreambuf_iterator_wchar_t___streambuf_type *__sbuf_;};
struct std____1__num_get_wchar_t__vtbl_layout; 
struct std____1__num_put_wchar_t__vtbl_layout; 
struct std____1__ostreambuf_iterator_wchar_t_ { std____1__iterator_std__output_iterator_tag__void__void__void__void_ cppsuper0;std____1__ostreambuf_iterator_wchar_t___streambuf_type *__sbuf_;};
struct unwind_info_regular_second_level_entry {uint32_t functionOffset;compact_unwind_encoding_t encoding;};
typedef xmlParserInputBufferPtr (*xmlParserInputBufferCreateFilenameFunc)( char *, xmlCharEncoding);
typedef OSStatus (*AudioCodecProduceOutputBufferListProc)(void *, AudioBufferList *, UInt32 *, AudioStreamPacketDescription *, UInt32 *);
struct std____1__basic_string_char_____short {std____1__basic_string_char___value_type __data_[23];std____1__basic_string_char_____short___654DBF3D633A6121C0B197AC38B89F76 __anonymous0;};
struct AudioPacketDependencyInfoTranslation {SInt64 mPacket;UInt32 mIsIndependentlyDecodable;UInt32 mNumberPrerollPackets;};
struct std____1__ctype_wchar_t__vtbl_layout; 
struct std____1__ctype_byname_wchar_t__vtbl; 
struct std____1__messages_char__vtbl_layout; 
struct std____1__messages_byname_char__vtbl; 
struct std____1__time_put_char__vtbl_layout; 
struct std____1__time_put_byname_char__vtbl; 
typedef OSStatus (*AudioCodecAppendInputBufferListProc)(void *,  AudioBufferList *, UInt32 *,  AudioStreamPacketDescription *, UInt32 *);
typedef OSStatus (*CMSampleBufferMakeDataReadyCallback)(CMSampleBufferRef, void *);
typedef void (*MTAudioProcessingTapPrepareCallback)(MTAudioProcessingTapRef, CMItemCount,  AudioStreamBasicDescription *);
typedef ALvoid (*alcMacOSXMixerMaxiumumBussesProcPtr)(ALint);
struct ip_timestamp__ipt_timestamp__ipt_ta {in_addr ipt_addr;n_long ipt_time;};
struct std____1__collate_char__vtbl_layout; 
struct std____1__istreambuf_iterator_char_ { std____1__iterator_std__input_iterator_tag__char__long_long__char__P__char_ cppsuper0;std____1__istreambuf_iterator_char___streambuf_type *__sbuf_;};
struct std____1__num_get_char__vtbl_layout; 
struct std____1__num_put_char__vtbl_layout; 
struct std____1__ostreambuf_iterator_char_ { std____1__iterator_std__output_iterator_tag__void__void__void__void_ cppsuper0;std____1__ostreambuf_iterator_char___streambuf_type *__sbuf_;};
typedef OSStatus (*AudioCodecProduceOutputPacketsProc)(void *, void *, UInt32 *, UInt32 *, AudioStreamPacketDescription *, UInt32 *);
typedef ALint (*alSourceGetRenderingQualityProcPtr)(ALuint);
struct std____1__basic_streambuf_wchar_t_ {std____1__basic_streambuf_wchar_t__vtbl *__vftable ;std____1__locale __loc_;std____1__basic_streambuf_wchar_t___char_type *__binp_;std____1__basic_streambuf_wchar_t___char_type *__ninp_;std____1__basic_streambuf_wchar_t___char_type *__einp_;std____1__basic_streambuf_wchar_t___char_type *__bout_;std____1__basic_streambuf_wchar_t___char_type *__nout_;std____1__basic_streambuf_wchar_t___char_type *__eout_;};
struct _1948E5937AB2C1104C85847A9E0DBADF {UInt32 bufferOffset;AudioUnitParameterValue value;};
union _97632B3213A37D6762BB025878435371 {_F11DCF9AB84521AF9E41C64324B37A66 _singleRange;_C9F83CCA9902694B07BD70569193FE6A _multipleRanges;};
struct _BFD7413E14FC21CAB05150D69A0647C0 {caddr_t where;xdrproc_t proc;};
typedef ALvoid (*alMacOSXRenderChannelCountProcPtr)(ALint);
struct std____1__collate_byname_wchar_t_ { std____1__collate_wchar_t_ cppsuper0;locale_t __l;};
typedef xmlOutputBufferPtr (*xmlOutputBufferCreateFilenameFunc)( char *, xmlCharEncodingHandlerPtr, int);
typedef CFIndex (*CFAllocatorPreferredSizeCallBack)(CFIndex, CFOptionFlags, void *);
typedef void (*CMSampleBufferInvalidateCallback)(CMSampleBufferRef, uint64_t);
typedef ALvoid (*alcMacOSXRenderingQualityProcPtr)(ALint);
struct std____1__messages_wchar_t__vtbl; 
struct std____1__time_put_wchar_t__vtbl; 
typedef OSStatus (*AudioUnitScheduleParametersProc)(void *,  AudioUnitParameterEvent *, UInt32);
typedef ALvoid (*alcMacOSXMixerOutputRateProcPtr)(ALdouble);
struct std____1__basic_streambuf_char_ {std____1__basic_streambuf_char__vtbl *__vftable ;std____1__locale __loc_;std____1__basic_streambuf_char___char_type *__binp_;std____1__basic_streambuf_char___char_type *__ninp_;std____1__basic_streambuf_char___char_type *__einp_;std____1__basic_streambuf_char___char_type *__bout_;std____1__basic_streambuf_char___char_type *__nout_;std____1__basic_streambuf_char___char_type *__eout_;};
struct std____1__collate_wchar_t__vtbl; 
struct std____1__num_get_wchar_t__vtbl; 
struct std____1__num_put_wchar_t__vtbl; 
typedef void (*AudioQueuePropertyListenerProc)(void *, AudioQueueRef, AudioQueuePropertyID);
struct BNNSOptimizerSGDMomentumFields {float learning_rate;float momentum;float gradient_scale;float regularization_scale;char clip_gradients;float clip_gradients_min;float clip_gradients_max;char nesterov;BNNSOptimizerRegularizationFunction regularization_func;BNNSOptimizerSGDMomentumVariant sgd_momentum_variant;};
struct CMBlockBufferCustomBlockSource {uint32_t version;void *(*AllocateBlock)(void *, size_t);void (*FreeBlock)(void *, void *, size_t);void *refCon;};
struct __darwin_arm_exception_state64 {__uint64_t __far;__uint32_t __esr;__uint32_t __exception;};
struct std____1__collate_byname_char_ { std____1__collate_char_ cppsuper0;locale_t __l;};
typedef OSStatus (*AudioCodecAppendInputDataProc)(void *,  void *, UInt32 *, UInt32 *,  AudioStreamPacketDescription *);
typedef void *(*CFAllocatorReallocateCallBack)(void *, CFIndex, CFOptionFlags, void *);
typedef void (*DNSServiceSleepKeepaliveReply)(DNSServiceRef, DNSServiceErrorType, void *);
struct GCExtendedGamepadSnapshotData {uint16_t version;uint16_t size;float dpadX;float dpadY;float buttonA;float buttonB;float buttonX;float buttonY;float leftShoulder;float rightShoulder;float leftThumbstickX;float leftThumbstickY;float rightThumbstickX;float rightThumbstickY;float leftTrigger;float rightTrigger;BOOL supportsClickableThumbsticks;BOOL leftThumbstickButton;BOOL rightThumbstickButton;};
typedef void (*SCNetworkReachabilityCallBack)(SCNetworkReachabilityRef, SCNetworkReachabilityFlags, void *);
struct proc_rlimit_control_wakeupmon {uint32_t wm_flags;int32_t wm_rate;};
struct std____1__ctype_wchar_t__vtbl; 
struct std____1__messages_char__vtbl; 
struct std____1__time_put_char__vtbl; 
struct thread_time_constraint_policy {uint32_t period;uint32_t computation;uint32_t constraint;boolean_t preemptible;};
struct AudioOutputUnitMIDICallbacks {void *userData;void (*MIDIEventProc)(void *, UInt32, UInt32, UInt32, UInt32);void (*MIDISysExProc)(void *,  UInt8 *, UInt32);};
typedef void (*AudioSessionPropertyListener)(void *, AudioSessionPropertyID, UInt32,  void *);
struct AudioStreamPacketDescription {SInt64 mStartOffset;UInt32 mVariableFramesInPacket;UInt32 mDataByteSize;};
typedef Boolean (*CVFillExtendedPixelsCallBack)(CVPixelBufferRef, void *);
typedef OSStatus (*HostCallback_GetBeatAndTempo)(void *, Float64 *, Float64 *);
struct SCNetworkReachabilityContext {CFIndex version;void *info; void *(*retain)( void *);void (*release)( void *);CFStringRef (*copyDescription)( void *);};
struct SFNTLookupTrimmedArrayHeader {UInt16 firstGlyph;UInt16 count;SFNTLookupValue valueArray[1];};
typedef int (*XML_ExternalEntityRefHandler)(XML_Parser,  XML_Char *,  XML_Char *,  XML_Char *,  XML_Char *);
typedef void (*pthread_introspection_hook_t)(unsigned int, pthread_t, void *, size_t);
struct quadrature_integrate_options {quadrature_integrator integrator;double abs_tolerance;double rel_tolerance;size_t qag_points_per_interval;size_t max_intervals;};
struct std____1__collate_char__vtbl; 
struct std____1__num_get_char__vtbl; 
struct std____1__num_put_char__vtbl; 
struct AudioFramePacketTranslation {SInt64 mFrame;SInt64 mPacket;UInt32 mFrameOffsetInPacket;};
struct AudioQueueChannelAssignment {CFStringRef mDeviceUID;UInt32 mChannelNumber;};
typedef void *(*CFAllocatorAllocateCallBack)(CFIndex, CFOptionFlags, void *);
typedef void (*CFWriteStreamClientCallBack)(CFWriteStreamRef, CFStreamEventType, void *);
typedef void (*SCNetworkConnectionCallBack)(SCNetworkConnectionRef, SCNetworkConnectionStatus, void *);
struct SKProductSubscriptionPeriod {NSObject super;id _internal;};
struct __darwin_arm_thread_state64 {__uint64_t __x[29];__uint64_t __fp;__uint64_t __lr;__uint64_t __sp;__uint64_t __pc;__uint32_t __cpsr;__uint32_t __pad;};
struct dyld_cache_accelerator_info {uint32_t version;uint32_t imageExtrasCount;uint32_t imagesExtrasOffset;uint32_t bottomUpListOffset;uint32_t dylibTrieOffset;uint32_t dylibTrieSize;uint32_t initializersOffset;uint32_t initializersCount;uint32_t dofSectionsOffset;uint32_t dofSectionsCount;uint32_t reExportListOffset;uint32_t reExportCount;uint32_t depListOffset;uint32_t depListCount;uint32_t rangeTableOffset;uint32_t rangeTableCount;uint64_t dyldSectionAddr;};
struct dyld_cache_image_info_extra {uint64_t exportsTrieAddr;uint64_t weakBindingsAddr;uint32_t exportsTrieSize;uint32_t weakBindingsSize;uint32_t dependentsStartArrayIndex;uint32_t reExportsStartArrayIndex;};
struct gss_channel_bindings_struct {OM_uint32 initiator_addrtype;gss_buffer_desc initiator_address;OM_uint32 acceptor_addrtype;gss_buffer_desc acceptor_address;gss_buffer_desc application_data;};
union ip_timestamp__ipt_timestamp {n_long ipt_time[1];ip_timestamp__ipt_timestamp__ipt_ta ipt_ta[1];};
struct std____1__fpos___mbstate_t_ {__mbstate_t __st_;std____1__streamoff __off_;};
struct CFBinaryHeapCompareContext {CFIndex version;void *info; void *(*retain)( void *);void (*release)( void *);CFStringRef (*copyDescription)( void *);};
typedef void (*CFReadStreamClientCallBack)(CFReadStreamRef, CFStreamEventType, void *);
typedef void (*CFUserNotificationCallBack)(CFUserNotificationRef, CFOptionFlags);
typedef Boolean (*CMBufferGetBooleanCallback)(CMBufferRef, void *);
typedef void (*JSObjectInitializeCallback)(JSContextRef, JSObjectRef);
struct JustPCConditionalAddAction {Fixed substThreshold;UInt16 addGlyph;UInt16 substGlyph;};
struct SCNetworkConnectionContext {CFIndex version;void *info; void *(*retain)( void *);void (*release)( void *);CFStringRef (*copyDescription)( void *);};
struct SparseNumericFactorOptions {SparseControl_t control;SparseScaling_t scalingMethod;void *scaling;double pivotTolerance;double zeroTolerance;};
typedef UBool URegexFindProgressCallback( void *, int64_t);
typedef int32_t UTextMapNativeIndexToUTF16( UText *, int64_t);
struct __darwin_arm_debug_state32 {__uint32_t __bvr[16];__uint32_t __bcr[16];__uint32_t __wvr[16];__uint32_t __wcr[16];__uint64_t __mdscr_el1;};
struct dyld_aot_shared_cache_info { uintptr_t cacheBaseAddress;uuid_t cacheUUID;};
struct dyld_cache_accelerator_dof {uint64_t sectionAddress;uint32_t sectionSize;uint32_t imageIndex;};
struct gss_buffer_set_desc_struct {size_t count;gss_buffer_desc *elements;};
struct gss_iov_buffer_desc_struct {OM_uint32 type;gss_buffer_desc buffer;};
typedef xmlXPathObjectPtr (*xmlXPathVariableLookupFunc)(void *,  xmlChar *,  xmlChar *);
struct AudioComponentDescription {OSType componentType;OSType componentSubType;OSType componentManufacturer;UInt32 componentFlags;UInt32 componentFlagsMask;};
typedef void (*CFRunLoopObserverCallBack)(CFRunLoopObserverRef, CFRunLoopActivity, void *);
struct CMCalibratedMagneticField {CMMagneticField field;CMMagneticFieldCalibrationAccuracy accuracy;};
struct JustPCDecompositionAction {Fixed lowerLimit;Fixed upperLimit;UInt16 order;UInt16 count;UInt16 glyphs[1];};
struct NSUbiquitousKeyValueStore {NSObject super;id _private1;id _private2;id _private3;void *_private4;void *_reserved[3];int _daemonWakeToken;};
struct __attribute__((aligned(64))) __darwin_arm_amx_state_v1 {__uint8_t __x[8][64];__uint8_t __y[8][64];__uint8_t __z[64][64];__uint64_t __amx_state_t_el1;};
struct __darwin_arm_neon_state64 {__uint128_t __v[32];__uint32_t __fpsr;__uint32_t __fpcr;};
typedef xmlEntityPtr (*getParameterEntitySAXFunc)(void *,  xmlChar *);
struct memory_object_behave_info {memory_object_copy_strategy_t copy_strategy;boolean_t temporary;boolean_t invalidate;boolean_t silent_overwrite;boolean_t advisory_pageout;};
struct sfntCMapExtendedSubHeader {UInt16 format;UInt16 reserved;UInt32 length;UInt32 language;};
typedef void (*ABExternalChangeCallback)(ABAddressBookRef, CFDictionaryRef, void *);
typedef OSStatus (*AudioCodecInitializeProc)(void *,  AudioStreamBasicDescription *,  AudioStreamBasicDescription *,  void *, UInt32);
struct AudioFilePacketTableInfo {SInt64 mNumberValidFrames;SInt32 mPrimingFrames;SInt32 mRemainderFrames;};
struct AudioFileTypeAndFormatID {AudioFileTypeID mFileType;UInt32 mFormatID;};
typedef void (*AudioQueueOutputCallback)(void *, AudioQueueRef, AudioQueueBufferRef);
struct AudioQueueParameterEvent {AudioQueueParameterID mID;AudioQueueParameterValue mValue;};
struct BNNSImageStackDescriptor {size_t width;size_t height;size_t channels;size_t row_stride;size_t image_stride;BNNSDataType data_type;float data_scale;float data_bias;};
typedef void (*CFFileDescriptorCallBack)(CFFileDescriptorRef, CFOptionFlags, void *);
struct CFRunLoopObserverContext {CFIndex version;void *info; void *(*retain)( void *);void (*release)( void *);CFStringRef (*copyDescription)( void *);};
typedef void (*LPALSOURCEUNQUEUEBUFFERS)(ALuint, ALsizei, ALuint *);
typedef OSStatus (*MusicDeviceMIDIEventProc)(void *, UInt32, UInt32, UInt32, UInt32);
struct MusicDeviceStdNoteParams {UInt32 argCount;Float32 mPitch;Float32 mVelocity;};
typedef ALvoid (*alSourceNotificationProc)(ALuint, ALuint, ALvoid *);
struct arm_unified_thread_state {arm_state_hdr_t ash;arm_unified_thread_state___9FA5E432098BAEED883302D0D647C3FA uts;};
typedef long long (*axr_data_provider_read_t)(void *, size_t, unsigned long long, axr_size_t, uintptr_t);
struct dyld_shared_cache_ranges {uintptr_t sharedRegionsCount;dyld_shared_cache_ranges___C6EA7859B0EAEDB620D074CEA3C16F57 ranges[4];};
struct gss_krb5_rfc1964_keydata {OM_uint32 sign_alg;OM_uint32 seal_alg;gss_krb5_lucid_key_t ctx_key;};
struct host_preferred_user_arch {cpu_type_t cpu_type;cpu_subtype_t cpu_subtype;};
struct sqlite3_rtree_query_info {void *pContext;int nParam;sqlite3_rtree_dbl *aParam;void *pUser;void (*xDelUser)(void *);sqlite3_rtree_dbl *aCoord;unsigned int *anQueue;int nCoord;int iLevel;int mxLevel;sqlite3_int64 iRowid;sqlite3_rtree_dbl rParentScore;int eParentWithin;int eWithin;sqlite3_rtree_dbl rScore;sqlite3_value **apSqlParam;};
struct std____1__ctype_wchar_t_ { std____1__locale__facet cppsuper0;std____1__ctype_base cppsuper1;};
struct AUSamplerBankPresetData {CFURLRef bankURL;UInt8 bankMSB;UInt8 bankLSB;UInt8 presetID;UInt8 reserved;};
struct AUSamplerInstrumentData {CFURLRef fileURL;UInt8 instrumentType;UInt8 bankMSB;UInt8 bankLSB;UInt8 presetID;};
struct AudioUnitExternalBuffer {Byte *buffer;UInt32 size;};
struct AudioUnitNodeConnection {AUNode sourceNode;UInt32 sourceOutputNumber;AUNode destNode;UInt32 destInputNumber;};
struct CFFileDescriptorContext {CFIndex version;void *info;void *(*retain)(void *);void (*release)(void *);CFStringRef (*copyDescription)(void *);};
typedef void *(*CFPlugInFactoryFunction)(CFAllocatorRef, CFUUIDRef);
typedef CFComparisonResult (*CMBufferCompareCallback)(CMBufferRef, CMBufferRef, void *);
typedef size_t (*CMBufferGetSizeCallback)(CMBufferRef, void *);
struct CTParagraphStyleSetting {CTParagraphStyleSpecifier spec;size_t valueSize; void *value;};
struct ICScannerFunctionalUnit {NSObject super;id _fuProps;};
typedef ALCboolean (*LPALCCAPTURECLOSEDEVICE)(ALCdevice *);
typedef ALCboolean (*LPALCMAKECONTEXTCURRENT)(ALCcontext *);
struct SFNTLookupSegmentHeader {SFNTLookupBinarySearchHeader binSearch;SFNTLookupSegment segments[1];};
struct __darwin_arm_neon_state {__uint128_t __v[16];__uint32_t __fpsr;__uint32_t __fpcr;};
struct dyld_cache_mapping_info {uint64_t address;uint64_t size;uint64_t fileOffset;uint32_t maxProt;uint32_t initProt;};
struct gss_OID_set_desc_struct {size_t count;gss_OID elements;};
typedef xmlParserInputPtr (*xmlExternalEntityLoader)( char *,  char *, xmlParserCtxtPtr);
struct AVAudioConnectionPoint {NSObject super;AVAudioNode *_node;AVAudioNodeBus _bus;void *_reserved;};
struct AudioUnitMeterClipping {Float32 peakValueSinceLastCall;Boolean sawInfinity;Boolean sawNotANumber;};
struct AudioUnitRenderContext {os_workgroup_t workgroup;uint32_t reserved[6];};
struct GKPeerPickerController {NSObject super;id _picker;};
typedef ALCdevice *(*LPALCGETCONTEXTSDEVICE)(ALCcontext *);
typedef ALboolean (*LPALISEXTENSIONPRESENT)( ALchar *);
typedef void (*LPALSOURCEQUEUEBUFFERS)(ALuint, ALsizei,  ALuint *);
struct MorxContextualSubtable {STXHeader header;UInt32 substitutionTableOffset;};
struct NSPersonNameComponents {NSObject super;id _private;};
struct NoteParamsControlValue {AudioUnitParameterID mID;AudioUnitParameterValue mValue;};
typedef void (*SCDynamicStoreCallBack)(SCDynamicStoreRef, CFArrayRef, void *);
struct SFNTLookupSingleHeader {SFNTLookupBinarySearchHeader binSearch;SFNTLookupSingle entries[1];};
struct SFNTLookupVectorHeader {UInt16 valueSize;UInt16 firstGlyph;UInt16 count;UInt8 values[1];};
typedef void (*XML_ElementDeclHandler)(void *,  XML_Char *, XML_Content *);
struct dyld_cache_range_entry {uint64_t startAddress;uint32_t size;uint32_t imageIndex;};
struct dyld_cache_slide_info2 {uint32_t version;uint32_t page_size;uint32_t page_starts_offset;uint32_t page_starts_count;uint32_t page_extras_offset;uint32_t page_extras_count;uint64_t delta_mask;uint64_t value_add;};
struct dyld_cache_slide_info3 {uint32_t version;uint32_t page_size;uint32_t page_starts_count;uint32_t padding;uint64_t auth_value_add;};
typedef int (*objc_exception_matcher)(Class, id);
typedef BOOL (*objc_hook_getImageName)(Class,  char **);
struct prebound_dylib_command {uint32_t cmd;uint32_t cmdsize;lc_str name;uint32_t nmodules;lc_str linked_modules;};
struct sfntFontFeatureSetting {UInt16 setting;SInt16 nameID;};
struct source_version_command {uint32_t cmd;uint32_t cmdsize;uint64_t version;};
typedef void (*xmlEntityReferenceFunc)(xmlEntityPtr, xmlNodePtr, xmlNodePtr);
typedef void (*xmlTextReaderErrorFunc)(void *,  char *, xmlParserSeverities, xmlTextReaderLocatorPtr);
typedef xmlXPathFunction (*xmlXPathFuncLookupFunc)(void *,  xmlChar *,  xmlChar *);
typedef ssize_t (*AAByteStreamWriteProc)(void *,  void *, size_t);
struct ALAssetRepresentation {NSObject super;id _internal;};
typedef OSStatus (*AudioFile_SetSizeProc)(void *, SInt64);
struct CFRunLoopTimerContext {CFIndex version;void *info; void *(*retain)( void *);void (*release)( void *);CFStringRef (*copyDescription)( void *);};
struct CFStreamClientContext {CFIndex version;void *info;void *(*retain)(void *);void (*release)(void *);CFStringRef (*copyDescription)(void *);};
struct CVPlanarComponentInfo {int32_t offset;uint32_t rowBytes;};
struct JustPCDuctilityAction {UInt32 ductilityAxis;Fixed minimumLimit;Fixed noStretchValue;Fixed maximumLimit;};
struct KernSimpleArrayHeader {UInt16 rowWidth;UInt16 leftOffsetTable;UInt16 rightOffsetTable;KernArrayOffset theArray;UInt16 firstTable[1];};
struct KerxSimpleArrayHeader {UInt32 rowWidth;UInt32 leftOffsetTable;UInt32 rightOffsetTable;KerxArrayOffset theArray;UInt32 firstTable[1];};
struct MorxInsertionSubtable {STXHeader header;UInt32 insertionGlyphTableOffset;};
struct SCDynamicStoreContext {CFIndex version;void *info; void *(*retain)( void *);void (*release)( void *);CFStringRef (*copyDescription)( void *);};
typedef void (*SCPreferencesCallBack)(SCPreferencesRef, SCPreferencesNotification, void *);
struct SparseMatrixStructure {int rowCount;int columnCount;long long *columnStarts;int *rowIndices;SparseAttributes_t attributes;uint8_t blockSize;};
typedef int32_t UCharIteratorGetIndex(UCharIterator *, UCharIteratorOrigin);
typedef void UCharIteratorSetState(UCharIterator *, uint32_t, UErrorCode *);
struct dyld_cache_image_info {uint64_t address;uint64_t modTime;uint64_t inode;uint32_t pathFileOffset;uint32_t pad;};
struct policy_timeshare_info {integer_t max_priority;integer_t base_priority;integer_t cur_priority;boolean_t depressed;integer_t depress_priority;};
struct sub_framework_command {uint32_t cmd;uint32_t cmdsize;lc_str umbrella;};
typedef ssize_t (*AAByteStreamReadProc)(void *, void *, size_t);
struct AUDependentParameter {AudioUnitScope mScope;AudioUnitParameterID mParameterID;};
typedef OSStatus (*AUMIDIOutputCallback)(void *,  AudioTimeStamp *, UInt32,  MIDIPacketList *);
struct AVAudioChannelLayout {NSObject super;AudioChannelLayoutTag _layoutTag;AudioChannelLayout *_layout;void *_reserved;};
struct BNNSVectorDescriptor {size_t size;BNNSDataType data_type;float data_scale;float data_bias;};
typedef void (*CFHostClientCallBack)(CFHostRef, CFHostInfoType,  CFStreamError *, void *);
struct CFMessagePortContext {CFIndex version;void *info; void *(*retain)( void *);void (*release)( void *);CFStringRef (*copyDescription)( void *);};
struct KernOrderedListEntry {KernKerningPair pair;KernKerningValue value;};
struct KerxIndexArrayHeader {UInt32 flags;UInt16 rowCount;UInt16 columnCount;UInt32 rowIndexTableOffset;UInt32 columnIndexTableOffset;UInt32 kerningArrayOffset;UInt32 kerningVectorOffset;};
struct KerxOrderedListEntry {KerxKerningPair pair;KernKerningValue value;};
struct MorxLigatureSubtable {STXHeader header;UInt32 ligatureActionTableOffset;UInt32 componentTableOffset;UInt32 ligatureTableOffset;};
struct SCPreferencesContext {CFIndex version;void *info; void *(*retain)( void *);void (*release)( void *);CFStringRef (*copyDescription)( void *);};
struct SKPaymentTransaction {NSObject super;id _internal;};
typedef void (*attributeDeclSAXFunc)(void *,  xmlChar *,  xmlChar *, int, int,  xmlChar *, xmlEnumerationPtr);
struct gss_krb5_cfx_keydata {OM_uint32 have_acceptor_subkey;gss_krb5_lucid_key_t ctx_key;gss_krb5_lucid_key_t acceptor_subkey;};
struct mach_core_fileheader {uint64_t signature;uint64_t log_offset;uint64_t log_length;uint64_t num_files;mach_core_details files[16];};
typedef xmlParserInputPtr (*resolveEntitySAXFunc)(void *,  xmlChar *,  xmlChar *);
struct std____1__locale__id {std____1__once_flag __flag_;int32_t __id_;};
struct sub_umbrella_command {uint32_t cmd;uint32_t cmdsize;lc_str sub_umbrella;};
struct task_wait_state_info {uint64_t total_wait_state_time;uint64_t total_wait_sfi_state_time;uint32_t _reserved[4];};
struct thread_extended_info {uint64_t pth_user_time;uint64_t pth_system_time;int32_t pth_cpu_usage;int32_t pth_policy;int32_t pth_run_state;int32_t pth_flags;int32_t pth_sleep_time;int32_t pth_curpri;int32_t pth_priority;int32_t pth_maxpriority;char pth_name[64];};
struct AudioUnitConnection {AudioUnit sourceAudioUnit;UInt32 sourceOutputNumber;UInt32 destInputNumber;};
struct CGFunctionCallbacks {unsigned int version;CGFunctionEvaluateCallback evaluate;CGFunctionReleaseInfoCallback releaseInfo;};
typedef void *(*LPALCGETPROCADDRESS)(ALCdevice *,  ALCchar *);
struct NSNetServiceBrowser {NSObject super;id _netServiceBrowser;id _delegate;void *_reserved;};
struct NSNotificationQueue {NSObject super;id _notificationCenter;id _asapQueue;id _asapObs;id _idleQueue;id _idleObs;};
typedef UBool URegexMatchCallback( void *, int32_t);
union at_block_features_t {uint64_t bits;at_block_features_t___95F68058DEB3F3BE2E9E414B0815CF1B __anonymous0;};
struct dyld_aot_image_info { mach_header *x86LoadAddress; mach_header *aotLoadAddress; uint64_t aotImageSize; uint8_t aotImageKey[32];};
typedef void (*dyld_image_notifier)(dyld_image_mode, uint32_t, dyld_image_info *       );
struct entry_point_command {uint32_t cmd;uint32_t cmdsize;uint64_t entryoff;uint64_t stacksize;};
struct persona_modify_info {uint32_t persona_id;uint64_t unique_pid;};
struct routines_command_64 {uint32_t cmd;uint32_t cmdsize;uint64_t init_address;uint64_t init_module;uint64_t reserved1;uint64_t reserved2;uint64_t reserved3;uint64_t reserved4;uint64_t reserved5;uint64_t reserved6;};
struct sadb_x_ipsecrequest {u_int16_t sadb_x_ipsecrequest_len;u_int16_t sadb_x_ipsecrequest_proto;u_int8_t sadb_x_ipsecrequest_mode;u_int8_t sadb_x_ipsecrequest_level;u_int16_t sadb_x_ipsecrequest_reqid;};
struct sub_library_command {uint32_t cmd;uint32_t cmdsize;lc_str sub_library;};
typedef void (*xmlRegExecCallbacks)(xmlRegExecCtxtPtr,  xmlChar *, void *, void *);
typedef void (*CFMachPortCallBack)(CFMachPortRef, void *, CFIndex, void *);
struct CGPatternCallbacks {unsigned int version;CGPatternDrawPatternCallback drawPattern;CGPatternReleaseInfoCallback releaseInfo;};
struct GKVoiceChatService {NSObject super;id _voiceChatService;};
struct MKCoordinateRegion {CLLocationCoordinate2D center;MKCoordinateSpan span;};
struct MusicEventUserData {UInt32 length;UInt8 data[1];};
struct MusicTrackLoopInfo {MusicTimeStamp loopDuration;SInt32 numberOfLoops;};
struct SKProductsResponse {NSObject super;id _internal;};
struct compression_stream {uint8_t *dst_ptr;size_t dst_size; uint8_t *src_ptr;size_t src_size;void *state;};
struct data_in_code_entry {uint32_t offset;uint16_t length;uint16_t kind;};
typedef void (*elementDeclSAXFunc)(void *,  xmlChar *, int, xmlElementContentPtr);
struct fbootstraptransfer {off_t fbt_offset;size_t fbt_length;void *fbt_buffer;};
struct mach_msg_trailer_t {mach_msg_trailer_type_t msgh_trailer_type;mach_msg_trailer_size_t msgh_trailer_size;};
struct mach_vm_read_entry {mach_vm_address_t address;mach_vm_size_t size;};
typedef BOOL (*objc_hook_getClass)( char *, Class *);
struct sfntDirectoryEntry {FourCharCode tableTag;UInt32 checkSum;UInt32 offset;UInt32 length;};
struct sfntFontDescriptor {FourCharCode name;Fixed value;};
struct sqlite3_index_info {int nConstraint;sqlite3_index_info__sqlite3_index_constraint *aConstraint;int nOrderBy;sqlite3_index_info__sqlite3_index_orderby *aOrderBy;sqlite3_index_info__sqlite3_index_constraint_usage *aConstraintUsage;int idxNum;char *idxStr;int needToFreeIdxStr;int orderByConsumed;double estimatedCost;sqlite3_int64 estimatedRows;int idxFlags;sqlite3_uint64 colUsed;};
struct std__runtime_error { std__exception cppsuper0;std____1____libcpp_refstring __imp_;};
struct sub_client_command {uint32_t cmd;uint32_t cmdsize;lc_str client;};
struct vm_page_info_basic {int disposition;int ref_count;vm_object_id_t object_id;memory_object_offset_t offset;int depth;int __pad;};
struct CFMachPortContext {CFIndex version;void *info; void *(*retain)( void *);void (*release)( void *);CFStringRef (*copyDescription)( void *);};
struct CFSocketSignature {SInt32 protocolFamily;SInt32 socketType;SInt32 protocol;CFDataRef address;};
struct CLLocationManager {NSObject super;id _internal;};
typedef void (*LPALDELETEBUFFERS)(ALsizei,  ALuint *);
typedef void (*LPALDELETESOURCES)(ALsizei,  ALuint *);
typedef void (*LPALGETLISTENER3F)(ALenum, ALfloat *, ALfloat *, ALfloat *);
typedef void (*LPALGETLISTENER3I)(ALenum, ALint *, ALint *, ALint *);
typedef void (*LPALGETLISTENERFV)(ALenum, ALfloat *);
typedef void (*LPALGETLISTENERIV)(ALenum, ALint *);
typedef void (*LPALSOURCEREWINDV)(ALsizei,  ALuint *);
struct MKTileOverlayPath {NSInteger x;NSInteger y;NSInteger z;CGFloat contentScaleFactor;};
union NumVersionVariant {NumVersion parts;UInt32 whole;};
struct SKPaymentDiscount {NSObject super;id _internal;};
struct SKProductDiscount {NSObject super;id _internal;};
typedef int32_t UCharIteratorMove(UCharIterator *, int32_t, UCharIteratorOrigin);
struct UIDictationPhrase {NSObject super;NSString *_text;NSArray *_alternativeInterpretations;};
struct XML_ParsingStatus {XML_Parsing parsing;XML_Bool finalBuffer;};
struct __objc2_class_rw1 {uint32_t flags;uint16_t witness;uint16_t index;void *ro_or_rw_ext;__objc2_class *firstSubclass;__objc2_class *nextSiblingClass;};
struct _xmlXPathVariable { xmlChar *name;xmlXPathObjectPtr value;};
struct at_texel_region_t {void *texels;at_size_t validSize;size_t rowBytes;size_t sliceBytes;};
struct kev_dl_proto_data {net_event_data link_data;u_int32_t proto_family;u_int32_t proto_remaining_count;};
struct __attribute__((packed)) nd_opt_route_info {u_int8_t nd_opt_rti_type;u_int8_t nd_opt_rti_len;u_int8_t nd_opt_rti_prefixlen;u_int8_t nd_opt_rti_flags;u_int32_t nd_opt_rti_lifetime;};
struct objc_stringhash_t {uint32_t capacity;uint32_t occupied;uint32_t shift;uint32_t mask;uint32_t unused1;uint32_t unused2;uint64_t salt;uint32_t scramble[256];};
struct AnchorPointTable {UInt32 nPoints;AnchorPoint points[1];};
struct AudioBalanceFade {Float32 mLeftRightBalance;Float32 mBackFrontFade;AudioBalanceFadeType mType; AudioChannelLayout *mChannelLayout;};
struct __attribute__((packed)) CAFOverviewChunk {UInt32 mEditCount;UInt32 mNumFramesPerOVWSample;CAFOverviewSample mData[1];};
struct ICScannerFeature {NSObject super;id _sfProps;};
typedef ALCboolean (*LPALCCLOSEDEVICE)(ALCdevice *);
typedef ALenum (*LPALGETENUMVALUE)( ALchar *);
typedef void (*LPALGETLISTENERF)(ALenum, ALfloat *);
typedef void (*LPALGETLISTENERI)(ALenum, ALint *);
typedef void (*LPALSOURCEPAUSEV)(ALsizei,  ALuint *);
struct MIDINotification {MIDINotificationMessageID messageID;UInt32 messageSize;};
struct MortFeatureEntry {UInt16 featureType;UInt16 featureSelector;MortSubtableMaskFlags enableFlags;MortSubtableMaskFlags disableFlags;};
struct PropLookupSingle {UInt16 glyph;PropCharProperties props;};
typedef UChar (*UNESCAPE_CHAR_AT)(int32_t, void *);
struct __objc_class_ext {uint32_t size; uint8_t *weak_ivar_layout;void *property_lists;};
struct _xmlChRangeGroup {int nbShortRange;int nbLongRange; xmlChSRange *shortRange; xmlChLRange *longRange;};
struct dns_LOC_record_t {uint8_t version;uint8_t size;uint8_t horizontal_precision;uint8_t vertical_precision;uint32_t latitude;uint32_t longitude;uint32_t altitude;};
struct dylinker_command {uint32_t cmd;uint32_t cmdsize;lc_str name;};
typedef xmlEntityPtr (*getEntitySAXFunc)(void *,  xmlChar *);
struct policy_fifo_info {integer_t max_priority;integer_t base_priority;boolean_t depressed;integer_t depress_priority;};
struct sadb_x_kmprivate {u_int16_t sadb_x_kmprivate_len;u_int16_t sadb_x_kmprivate_exttype;u_int32_t sadb_x_kmprivate_reserved;};
struct sfntCMapEncoding {UInt16 platformID;UInt16 scriptID;UInt32 offset;};
struct std__logic_error { std__exception cppsuper0;std____1____libcpp_refstring __imp_;};
typedef xmlXPathObjectPtr (*xmlXPathAxisFunc)(xmlXPathParserContextPtr, xmlXPathObjectPtr);
struct ALAssetsLibrary {NSObject super;id _internal;};
struct AudioBufferList {UInt32 mNumberBuffers;AudioBuffer mBuffers[1];};
struct BslnFormat2Part {UInt16 stdGlyph;SInt16 ctlPoints[32];};
struct __attribute__((packed)) CAFPositionPeak {Float32 mValue;UInt64 mFrameNumber;};
struct CAValueFunction {NSObject super;NSString *_string;void *_impl;};
struct CFGregorianDate {SInt32 year;SInt8 month;SInt8 day;SInt8 hour;SInt8 minute;double second;};
struct CFSocketContext {CFIndex version;void *info; void *(*retain)( void *);void (*release)( void *);CFStringRef (*copyDescription)( void *);};
struct CMMotionManager {NSObject super;id _internal;};
struct ICDeviceBrowser {NSObject super;id _privateData;};
struct KernOffsetTable {UInt16 firstGlyph;UInt16 nGlyphs;KernArrayOffset offsetTable[1];};
struct KerxTableHeader {Fixed version;UInt32 nTables;UInt32 firstSubtable[1];};
typedef ALCdevice *(*LPALCOPENDEVICE)( ALCchar *);
typedef void (*LPALGETBOOLEANV)(ALenum, ALboolean *);
typedef void (*LPALGETINTEGERV)(ALenum, ALint *);
typedef void (*LPALSOURCEPLAYV)(ALsizei,  ALuint *);
typedef void (*LPALSOURCESTOPV)(ALsizei,  ALuint *);
struct MIDIEventPacket {MIDITimeStamp timeStamp;UInt32 wordCount;UInt32 words[64];};
struct MIDINoteMessage {UInt8 channel;UInt8 note;UInt8 velocity;UInt8 releaseVelocity;Float32 duration;};
struct au_expire_after {time_t age;size_t size;unsigned char op_type;};
struct dylib_module_64 {uint32_t module_name;uint32_t iextdefsym;uint32_t nextdefsym;uint32_t irefsym;uint32_t nrefsym;uint32_t ilocalsym;uint32_t nlocalsym;uint32_t iextrel;uint32_t nextrel;uint32_t iinit_iterm;uint32_t ninit_nterm;uint32_t objc_module_info_size;uint64_t objc_module_info_addr;};
struct fvmfile_command {uint32_t cmd;uint32_t cmdsize;lc_str name;uint32_t header_addr;};
struct icmp__ih_rtradv {u_char irt_num_addrs;u_char irt_wpa;u_int16_t irt_lifetime;};
struct __attribute__((aligned(8))) sadb_session_id {u_int16_t sadb_session_id_len;u_int16_t sadb_session_id_exttype;u_int64_t sadb_session_id_v[2];};
struct segment_command {uint32_t cmd;uint32_t cmdsize;char segname[16];uint32_t vmaddr;uint32_t vmsize;uint32_t fileoff;uint32_t filesize;vm_prot_t maxprot;vm_prot_t initprot;uint32_t nsects;uint32_t flags;};
struct task_qos_policy {task_latency_qos_t task_latency_qos_tier;task_throughput_qos_t task_throughput_qos_tier;};
struct unw_proc_info_t {unw_word_t start_ip;unw_word_t end_ip;unw_word_t lsda;unw_word_t handler;unw_word_t gp;unw_word_t flags;uint32_t format;uint32_t unwind_info_size;unw_word_t unwind_info;unw_word_t extra;};
struct __attribute__((aligned(8))) vm_statistics64 {natural_t free_count;natural_t active_count;natural_t inactive_count;natural_t wire_count;uint64_t zero_fill_count;uint64_t reactivations;uint64_t pageins;uint64_t pageouts;uint64_t faults;uint64_t cow_faults;uint64_t lookups;uint64_t hits;uint64_t purges;natural_t purgeable_count;natural_t speculative_count;uint64_t decompressions;uint64_t compressions;uint64_t swapins;uint64_t swapouts;natural_t compressor_page_count;natural_t throttled_count;natural_t external_page_count;natural_t internal_page_count;uint64_t total_uncompressed_pages_in_compressor;};
struct ALAssetsFilter {NSObject super;id _internal;};
struct BNNSActivation {BNNSActivationFunction function;float alpha;float beta;int32_t iscale;int32_t ioffset;int32_t ishift; int32_t *iscale_per_channel; int32_t *ioffset_per_channel; int32_t *ishift_per_channel;};
struct __attribute__((packed)) CAFChunkHeader {UInt32 mChunkType;SInt64 mChunkSize;};
struct __attribute__((packed)) CAF_SMPTE_Time {SInt8 mHours;SInt8 mMinutes;SInt8 mSeconds;SInt8 mFrames;UInt32 mSubFrameSampleOffset;};
struct CC_MD4state_st {CC_LONG A;CC_LONG B;CC_LONG C;CC_LONG D;CC_LONG Nl;CC_LONG Nh;CC_LONG data[16];uint32_t num;};
typedef void (*LPALGENBUFFERS)(ALsizei, ALuint *);
typedef void (*LPALGENSOURCES)(ALsizei, ALuint *);
typedef ALboolean (*LPALGETBOOLEAN)(ALenum);
typedef void (*LPALGETDOUBLEV)(ALenum, ALdouble *);
typedef ALint (*LPALGETINTEGER)(ALenum);
typedef void (*LPALLISTENER3F)(ALenum, ALfloat, ALfloat, ALfloat);
typedef void (*LPALLISTENER3I)(ALenum, ALint, ALint, ALint);
typedef void (*LPALLISTENERFV)(ALenum,  ALfloat *);
typedef void (*LPALLISTENERIV)(ALenum,  ALint *);
struct NSMetadataItem {NSObject super;id _item;void *_reserved;};
struct NSURLQueryItem {NSObject super;NSString *_name;NSString *_value;};
struct NSXPCInterface {NSObject super;Protocol *_protocol;void *_reserved2;id _reserved1;};
struct SKPaymentQueue {NSObject super;id _internal;};
struct TrakTableEntry {Fixed track;UInt16 nameTableIndex;UInt16 sizesOffset;};
union __attribute__((aligned(16))) _GLKQuaternion {SCNVector4 __anonymous0;_GLKQuaternion___44B881517778DCFD8543672A2FEF14EA __anonymous3;float q[4];};
struct _malloc_zone_t {void *reserved1;void *reserved2;size_t (*size)(_malloc_zone_t *,  void *);void *(*malloc)(_malloc_zone_t *, size_t);void *(*calloc)(_malloc_zone_t *, size_t, size_t);void *(*valloc)(_malloc_zone_t *, size_t);void (*free)(_malloc_zone_t *, void *);void *(*realloc)(_malloc_zone_t *, void *, size_t);void (*destroy)(_malloc_zone_t *); char *zone_name;unsigned int (*batch_malloc)(_malloc_zone_t *, size_t, void **, unsigned int);void (*batch_free)(_malloc_zone_t *, void **, unsigned int);malloc_introspection_t *introspect;unsigned int version;void *(*memalign)(_malloc_zone_t *, size_t, size_t);void (*free_definite_size)(_malloc_zone_t *, void *, size_t);size_t (*pressure_relief)(_malloc_zone_t *, size_t);boolean_t (*claimed_address)(_malloc_zone_t *, void *);};
struct _xmlXPathFunct { xmlChar *name;xmlXPathEvalFunc func;};
struct au_evclass_map {au_event_t ec_number;au_class_t ec_class;};
struct axr_property_t { char *name; char *type;size_t size; void *value;axr_property_flags_t flags;};
struct bp_getfile_arg {bp_machine_name_t client_name;bp_fileid_t file_id;};
struct policy_rr_info {integer_t max_priority;integer_t base_priority;integer_t quantum;boolean_t depressed;integer_t depress_priority;};
struct rejected_reply {reject_stat rj_stat;rejected_reply___FEB4F6CB395C7E44573402E2A32E10A3 ru;};
typedef res_9_sendhookact (*res_send_qhook)(sockaddr * *,  u_char **, int *, u_char *, int, int *);
typedef res_9_sendhookact (*res_send_rhook)( sockaddr *,  u_char *, int, u_char *, int, int *);
struct rusage_info_v0 {uint8_t ri_uuid[16];uint64_t ri_user_time;uint64_t ri_system_time;uint64_t ri_pkg_idle_wkups;uint64_t ri_interrupt_wkups;uint64_t ri_pageins;uint64_t ri_wired_size;uint64_t ri_resident_size;uint64_t ri_phys_footprint;uint64_t ri_proc_start_abstime;uint64_t ri_proc_exit_abstime;};
struct rusage_info_v1 {uint8_t ri_uuid[16];uint64_t ri_user_time;uint64_t ri_system_time;uint64_t ri_pkg_idle_wkups;uint64_t ri_interrupt_wkups;uint64_t ri_pageins;uint64_t ri_wired_size;uint64_t ri_resident_size;uint64_t ri_phys_footprint;uint64_t ri_proc_start_abstime;uint64_t ri_proc_exit_abstime;uint64_t ri_child_user_time;uint64_t ri_child_system_time;uint64_t ri_child_pkg_idle_wkups;uint64_t ri_child_interrupt_wkups;uint64_t ri_child_pageins;uint64_t ri_child_elapsed_abstime;};
struct rusage_info_v2 {uint8_t ri_uuid[16];uint64_t ri_user_time;uint64_t ri_system_time;uint64_t ri_pkg_idle_wkups;uint64_t ri_interrupt_wkups;uint64_t ri_pageins;uint64_t ri_wired_size;uint64_t ri_resident_size;uint64_t ri_phys_footprint;uint64_t ri_proc_start_abstime;uint64_t ri_proc_exit_abstime;uint64_t ri_child_user_time;uint64_t ri_child_system_time;uint64_t ri_child_pkg_idle_wkups;uint64_t ri_child_interrupt_wkups;uint64_t ri_child_pageins;uint64_t ri_child_elapsed_abstime;uint64_t ri_diskio_bytesread;uint64_t ri_diskio_byteswritten;};
struct rusage_info_v3 {uint8_t ri_uuid[16];uint64_t ri_user_time;uint64_t ri_system_time;uint64_t ri_pkg_idle_wkups;uint64_t ri_interrupt_wkups;uint64_t ri_pageins;uint64_t ri_wired_size;uint64_t ri_resident_size;uint64_t ri_phys_footprint;uint64_t ri_proc_start_abstime;uint64_t ri_proc_exit_abstime;uint64_t ri_child_user_time;uint64_t ri_child_system_time;uint64_t ri_child_pkg_idle_wkups;uint64_t ri_child_interrupt_wkups;uint64_t ri_child_pageins;uint64_t ri_child_elapsed_abstime;uint64_t ri_diskio_bytesread;uint64_t ri_diskio_byteswritten;uint64_t ri_cpu_time_qos_default;uint64_t ri_cpu_time_qos_maintenance;uint64_t ri_cpu_time_qos_background;uint64_t ri_cpu_time_qos_utility;uint64_t ri_cpu_time_qos_legacy;uint64_t ri_cpu_time_qos_user_initiated;uint64_t ri_cpu_time_qos_user_interactive;uint64_t ri_billed_system_time;uint64_t ri_serviced_system_time;};
struct rusage_info_v4 {uint8_t ri_uuid[16];uint64_t ri_user_time;uint64_t ri_system_time;uint64_t ri_pkg_idle_wkups;uint64_t ri_interrupt_wkups;uint64_t ri_pageins;uint64_t ri_wired_size;uint64_t ri_resident_size;uint64_t ri_phys_footprint;uint64_t ri_proc_start_abstime;uint64_t ri_proc_exit_abstime;uint64_t ri_child_user_time;uint64_t ri_child_system_time;uint64_t ri_child_pkg_idle_wkups;uint64_t ri_child_interrupt_wkups;uint64_t ri_child_pageins;uint64_t ri_child_elapsed_abstime;uint64_t ri_diskio_bytesread;uint64_t ri_diskio_byteswritten;uint64_t ri_cpu_time_qos_default;uint64_t ri_cpu_time_qos_maintenance;uint64_t ri_cpu_time_qos_background;uint64_t ri_cpu_time_qos_utility;uint64_t ri_cpu_time_qos_legacy;uint64_t ri_cpu_time_qos_user_initiated;uint64_t ri_cpu_time_qos_user_interactive;uint64_t ri_billed_system_time;uint64_t ri_serviced_system_time;uint64_t ri_logical_writes;uint64_t ri_lifetime_max_phys_footprint;uint64_t ri_instructions;uint64_t ri_cycles;uint64_t ri_billed_energy;uint64_t ri_serviced_energy;uint64_t ri_interval_max_phys_footprint;uint64_t ri_runnable_time;};
struct sadb_supported {u_int16_t sadb_supported_len;u_int16_t sadb_supported_exttype;u_int32_t sadb_supported_reserved;};
struct sfntCMapHeader {UInt16 version;UInt16 numTables;sfntCMapEncoding encoding[1];};
struct sfntNameHeader {UInt16 format;UInt16 count;UInt16 stringOffset;sfntNameRecord rec[1];};
struct yppushresp_xfr {u_int transid;yppush_status status;};
struct ALAssetsGroup {NSObject super;id _internal;};
struct AVAudioPlayer {NSObject super;id _impl;};
struct CABarBeatTime {SInt32 bar;UInt16 beat;UInt16 subbeat;UInt16 subbeatDivisor;UInt16 reserved;};
struct CAEmitterCell {NSObject super;void *_attr[2];void *_state;uint32_t _flags;};
struct __attribute__((packed)) CAFFileHeader {UInt32 mFileType;UInt16 mFileVersion;UInt16 mFileFlags;};
struct CFStreamError {CFIndex domain;SInt32 error;};
struct CIFilterShape {NSObject super;uint32_t _pad;void *_priv;};
struct FontVariation {FourCharCode name;Fixed value;};
typedef ALCenum (*LPALCGETERROR)(ALCdevice *);
typedef ALdouble (*LPALGETDOUBLE)(ALenum);
typedef void (*LPALGETFLOATV)(ALenum, ALfloat *);
typedef  ALchar *(*LPALGETSTRING)(ALenum);
typedef ALboolean (*LPALISENABLED)(ALenum);
typedef void (*LPALLISTENERF)(ALenum, ALfloat);
typedef void (*LPALLISTENERI)(ALenum, ALint);
struct MIDIMetaEvent {UInt8 metaEventType;UInt8 unused1;UInt8 unused2;UInt8 unused3;UInt32 dataLength;UInt8 data[1];};
struct MIDITransform {MIDITransformType transform;SInt16 param;};
struct NSMeasurement {NSObject super;id _unit;double _doubleValue;};
struct NSMessagePort {NSPort super;void *_port;id _delegate;};
struct _CALayerIvars {int32_t refcount;uint32_t magic;void *layer;};
struct _xmlXPathAxis { xmlChar *name;xmlXPathAxisFunc func;};
struct arm_amx_state {arm_state_hdr_t ash;arm_amx_state___E7A5EE9080EE8402944F8D536A1F0C4F uas;};
struct attrreference {int32_t attr_dataoffset;u_int32_t attr_length;};
struct bp_whoami_res {bp_machine_name_t client_name;bp_machine_name_t domain_name;bp_address router_address;};
struct mach_port_qos {unsigned int name : 1;unsigned int prealloc : 1;int pad1 : 30;natural_t len;};
struct __attribute__((packed)) ni_reply_fqdn {u_int32_t ni_fqdn_ttl;u_int8_t ni_fqdn_namelen;u_int8_t ni_fqdn_name[3];};
struct nlm4_shareres {netobj cookie;nlm4_stats stat;int sequence;};
struct rpath_command {uint32_t cmd;uint32_t cmdsize;lc_str path;};
struct sadb_spirange {u_int16_t sadb_spirange_len;u_int16_t sadb_spirange_exttype;u_int32_t sadb_spirange_min;u_int32_t sadb_spirange_max;u_int32_t sadb_spirange_reserved;};
struct vImage_Buffer {void *data;vImagePixelCount height;vImagePixelCount width;size_t rowBytes;};
struct ypresp_master {ypstat stat;peername peer;};
struct zone_btrecord {uint32_t ref_count;uint32_t operation_type;uint64_t bt[15];};
struct __attribute__((packed)) CAFDataChunk {UInt32 mEditCount;UInt8 mData[1];};
struct __attribute__((packed)) CAFPeakChunk {UInt32 mEditCount;CAFPositionPeak mPeaks[1];};
typedef ALfloat (*LPALGETFLOAT)(ALenum);
typedef ALboolean (*LPALISBUFFER)(ALuint);
typedef ALboolean (*LPALISSOURCE)(ALuint);
struct NSNetService {NSObject super;id _netService;id _delegate;id _reserved;};
struct STClassTable {UInt16 firstGlyph;UInt16 nGlyphs;STClass classes[1];};
struct STXEntryZero {STXStateIndex newState;UInt16 flags;};
struct __objc2_ivar {int32_t *offs;char *name;char *type;uint32_t align;uint32_t size;};
struct ether_header {u_char ether_dhost[6];u_char ether_shost[6];u_short ether_type;};
struct image_offset {uuid_t uuid;uint32_t offset;};
struct in_addr_4in6 {u_int32_t ia46_pad32[3];in_addr ia46_addr4;};
struct ip_timestamp {u_char ipt_code;u_char ipt_len;u_char ipt_ptr;unsigned int ipt_flg : 4;unsigned int ipt_oflw : 4;ip_timestamp__ipt_timestamp ipt_timestamp;};
struct netfs_status {u_int32_t ns_status;char ns_mountopts[512];uint32_t ns_waittime;uint32_t ns_threadcount;};
struct nlm_shareres {netobj cookie;nlm_stats stat;int sequence;};
struct note_command {uint32_t cmd;uint32_t cmdsize;char data_owner[16];uint64_t offset;uint64_t size;};
struct sadb_address {u_int16_t sadb_address_len;u_int16_t sadb_address_exttype;u_int8_t sadb_address_proto;u_int8_t sadb_address_prefixlen;u_int16_t sadb_address_reserved;};
struct sfntInstance {SInt16 nameID;SInt16 flags;Fixed coord[1];};
struct uuid_command {uint32_t cmd;uint32_t cmdsize;uint8_t uuid[16];};
struct ypresp_order {ypstat stat;u_int ordernum;};
struct Block_byref {void *isa;Block_byref *forwarding;int32_t flags;uint32_t size;};
struct CAAnimation {NSObject super;void *_attr;uint32_t _flags;};
struct __attribute__((packed)) CAFStringID {UInt32 mStringID;SInt64 mStringStartByteOffset;};
struct CVSMPTETime {SInt16 subframes;SInt16 subframeDivisor;UInt32 counter;UInt32 type;UInt32 flags;SInt16 hours;SInt16 minutes;SInt16 seconds;SInt16 frames;};
struct MIDIRawData {UInt32 length;UInt8 data[1];};
struct NSIndexPath {NSObject super;NSUInteger *_indexes;NSUInteger _length;void *_reserved;};
struct NSXMLParser {NSObject super;id _reserved0;id _delegate;id _reserved1;id _reserved2;id _reserved3;};
struct STXEntryOne {STXStateIndex newState;UInt16 flags;UInt16 index1;};
struct STXEntryTwo {STXStateIndex newState;UInt16 flags;UInt16 index1;UInt16 index2;};
struct UParseError {int32_t line;int32_t offset;UChar preContext[16];UChar postContext[16];};
typedef UBool UTextAccess(UText *, int64_t, UBool);
struct XML_Feature {XML_FeatureEnum feature; XML_LChar *name;long long value;};
union __attribute__((aligned(8))) _GLKVector2 {AVCaptureWhiteBalanceChromaticityValues __anonymous0;_GLKVector2___EA2C0D501FE1607857099885D8D2A78D __anonymous4;float v[2];};
struct au_tid_addr {dev_t at_port;u_int32_t at_type;u_int32_t at_addr[4];};
struct fsignatures {off_t fs_file_start;void *fs_blob_start;size_t fs_blob_size;size_t fs_fsignatures_size;char fs_cdhash[20];int fs_hash_type;};
struct fsupplement {off_t fs_file_start;off_t fs_blob_start;size_t fs_blob_size;int fs_orig_fd;};
struct iconv_hooks {iconv_unicode_char_hook uc_hook;iconv_wide_char_hook wc_hook;void *data;};
struct __attribute__((aligned(8))) sadb_sastat {u_int16_t sadb_sastat_len;u_int16_t sadb_sastat_exttype;u_int32_t sadb_sastat_dir;u_int32_t sadb_sastat_reserved;u_int32_t sadb_sastat_list_len;};
struct __attribute__((packed)) searchstate {uint32_t ss_union_flags;uint32_t ss_union_layer;u_char ss_fsstate[548];};
struct sockaddr_dl {u_char sdl_len;u_char sdl_family;u_short sdl_index;u_char sdl_type;u_char sdl_nlen;u_char sdl_alen;u_char sdl_slen;char sdl_data[12];};
struct sqlite3_vfs {int iVersion;int szOsFile;int mxPathname;sqlite3_vfs *pNext; char *zName;void *pAppData;int (*xOpen)(sqlite3_vfs *,  char *, sqlite3_file *, int, int *);int (*xDelete)(sqlite3_vfs *,  char *, int);int (*xAccess)(sqlite3_vfs *,  char *, int, int *);int (*xFullPathname)(sqlite3_vfs *,  char *, int, char *);void *(*xDlOpen)(sqlite3_vfs *,  char *);void (*xDlError)(sqlite3_vfs *, int, char *);void (*(*xDlSym)(sqlite3_vfs *, void *,  char *))(void);void (*xDlClose)(sqlite3_vfs *, void *);int (*xRandomness)(sqlite3_vfs *, int, char *);int (*xSleep)(sqlite3_vfs *, int);int (*xCurrentTime)(sqlite3_vfs *, double *);int (*xGetLastError)(sqlite3_vfs *, int, char *);int (*xCurrentTimeInt64)(sqlite3_vfs *, sqlite3_int64 *);int (*xSetSystemCall)(sqlite3_vfs *,  char *, sqlite3_syscall_ptr);sqlite3_syscall_ptr (*xGetSystemCall)(sqlite3_vfs *,  char *); char *(*xNextSystemCall)(sqlite3_vfs *,  char *);};
typedef int (*xmlShellCmd)(xmlShellCtxtPtr, char *, xmlNodePtr, xmlNodePtr);
struct ypbind_resp {ypbind_resptype ypbind_status;ypbind_resp___CD49527FE086EB7F6D0E69C2C3AD50AC ypbind_resp_u;};
struct ypreq_nokey {domainname domain;mapname map;};
struct __attribute__((packed)) CAFStrings {UInt32 mNumEntries;CAFStringID mStringsIDs[1];};
struct CLLocation {NSObject super;id _internal;};
struct CMAttitude {NSObject super;id _internal;};
struct NSXPCCoder {NSCoder super;id _userInfo;id _reserved1;};
struct SKDownload {NSObject super;id _internal;};
typedef UText *UTextClone(UText *,  UText *, UBool, UErrorCode *);
struct _RuneEntry {__darwin_rune_t __min;__darwin_rune_t __max;__darwin_rune_t __map;__uint32_t *__types;};
struct _xmlBuffer {xmlChar *content;unsigned int use;unsigned int size;xmlBufferAllocationScheme alloc;xmlChar *contentIO;};
typedef voidpf (*alloc_func)(voidpf, uInt, uInt);
struct au_session {auditinfo_addr_t *as_aia_p;au_mask_t as_mask;};
struct __attribute__((packed)) ip6_rthdr0 {u_int8_t ip6r0_nxt;u_int8_t ip6r0_len;u_int8_t ip6r0_type;u_int8_t ip6r0_segleft;u_int32_t ip6r0_reserved;};
struct nlm_holder {int exclusive;int svid;netobj oh;u_int l_offset;u_int l_len;};
struct objc_super {id receiver;Class super_class;};
struct sadb_ident {u_int16_t sadb_ident_len;u_int16_t sadb_ident_exttype;u_int16_t sadb_ident_type;u_int16_t sadb_ident_reserved;u_int64_t sadb_ident_id;};
struct section_64 {char sectname[16];char segname[16];uint64_t addr;uint64_t size;uint32_t offset;uint32_t align;uint32_t reloff;uint32_t nreloc;uint32_t flags;uint32_t reserved1;uint32_t reserved2;uint32_t reserved3;};
struct spraycumul {u_int counter;spraytimeval clock;};
struct statsswtch {int cp_time[4];int dk_xfer[4];u_int v_pgpgin;u_int v_pgpgout;u_int v_pswpin;u_int v_pswpout;u_int v_intr;int if_ipackets;int if_ierrors;int if_oerrors;int if_collisions;u_int v_swtch;u_int avenrun[3];rstat_timeval boottime;int if_opackets;};
struct vfs_server {int32_t vs_minutes;u_int8_t vs_server_name[768];};
struct ypresp_val {ypstat stat;valdat val;};
struct ypresp_xfr {u_int transid;ypxfrstat xfrstat;};
struct AnkrTable {UInt16 version;UInt16 flags;UInt32 lookupTableOffset;UInt32 anchorPointTableOffset;};
struct CLHeading {NSObject super;id _internal;};
struct CMLogItem {NSObject super;id _internalLogItem;};
struct GKSession {NSObject super;id _session;};
struct JustTable {Fixed version;UInt16 format;UInt16 horizHeaderOffset;UInt16 vertHeaderOffset;};
struct LtagTable {UInt32 version;UInt32 flags;UInt32 numTags;LtagStringRange tagRange[1];};
struct MKMapRect {MKMapPoint origin;MKMapSize size;};
struct MPSRegion {MPSOrigin origin;MPSSize size;};
struct MTLRegion {MTLOrigin origin;MTLSize size;};
struct NSRunLoop {NSObject super;id _rl;id _dperf;id _perft;id _info;id _ports;void *_reserved[6];};
struct SKPayment {NSObject super;id _internal;};
struct SKProduct {NSObject super;id _internal;};
struct SKRequest {NSObject super;id _requestInternal;};
struct TrakTable {Fixed version;UInt16 format;UInt16 horizOffset;UInt16 vertOffset;};
struct groupnode {name gr_name;groups gr_next;};
struct ranlib_64 {ranlib_64___3D81D97140096141A6E59905565A4088 ran_un;uint64_t ran_off;};
struct sadb_prop {u_int16_t sadb_prop_len;u_int16_t sadb_prop_exttype;u_int8_t sadb_prop_replay;u_int8_t sadb_prop_reserved[3];};
struct sigaction {__sigaction_u __sigaction_u;sigset_t sa_mask;int sa_flags;};
struct statstime {int cp_time[4];int dk_xfer[4];u_int v_pgpgin;u_int v_pgpgout;u_int v_pswpin;u_int v_pswpout;u_int v_intr;int if_ipackets;int if_ierrors;int if_oerrors;int if_collisions;u_int v_swtch;int avenrun[3];rstat_timeval boottime;rstat_timeval curtime;int if_opackets;};
struct zone_info {integer_t zi_count;vm_size_t zi_cur_size;vm_size_t zi_max_size;vm_size_t zi_elem_size;vm_size_t zi_alloc_size;integer_t zi_pageable;integer_t zi_sleepable;integer_t zi_exhaustible;integer_t zi_collectable;};
struct AUPreset {SInt32 presetNumber;CFStringRef presetName;};
struct HASHINFO {unsigned int bsize;unsigned int ffactor;unsigned int nelem;unsigned int cachesize;u_int32_t (*hash)( void *, size_t);int lorder;};
struct fchecklv {off_t lv_file_start;size_t lv_error_message_size;void *lv_error_message;};
struct fhstatus {u_int fhs_status;fhstatus___30CF5BCCDA22B93749F2B0C0553C9F0B fhstatus_u;};
struct klm_lock {char *server_name;netobj fh;int pid;u_int l_offset;u_int l_len;};
struct nlm4_res {netobj cookie;nlm4_stat stat;};
struct nlm_lock {char *caller_name;netobj fh;netobj oh;int svid;u_int l_offset;u_int l_len;};
struct nt_sid_t {u_int8_t sid_kind;u_int8_t sid_authcount;u_int8_t sid_authority[6];u_int32_t sid_authorities[16];};
struct sadb_alg {u_int8_t sadb_alg_id;u_int8_t sadb_alg_ivlen;u_int16_t sadb_alg_minbits;u_int16_t sadb_alg_maxbits;u_int16_t sadb_alg_reserved;};
struct sigevent {int sigev_notify;int sigev_signo;sigval sigev_value;void (*sigev_notify_function)(sigval);pthread_attr_t *sigev_notify_attributes;};
struct sockaddr {__uint8_t sa_len;sa_family_t sa_family;char sa_data[14];};
struct xsockbuf {u_int32_t sb_cc;u_int32_t sb_hiwat;u_int32_t sb_mbcnt;u_int32_t sb_mbmax;int32_t sb_lowat;short sb_flags;short sb_timeo;};
struct ALAsset {NSObject super;id _internal;};
struct CALayer {NSObject super;_CALayerIvars _attr;};
struct Float80 {SInt16 exp;UInt16 man[4];};
struct Float96 {SInt16 exp[2];UInt16 man[4];};
struct NSCache {NSObject super;id _delegate;void *_private[5];void *_reserved;};
struct VersRec {NumVersion numericVersion;short countryCode;Str255 shortVersion;Str255 reserved;};
struct __sFILE {unsigned char *_p;int _r;int _w;short _flags;short _file;__sbuf _bf;int _lbfsize;void *_cookie;int (*_close)(void *);int (*_read)(void *, char *, int);fpos_t (*_seek)(void *, fpos_t, int);int (*_write)(void *,  char *, int);__sbuf _ub;__sFILEX *_extra;int _ur;unsigned char _ubuf[3];unsigned char _nbuf[1];__sbuf _lb;int _blksize;fpos_t _offset;};
struct _xmlDoc {void *_private;xmlElementType type;char *name;_xmlNode *children;_xmlNode *last;_xmlNode *parent;_xmlNode *next;_xmlNode *prev;_xmlDoc *doc;int compression;int standalone;_xmlDtd *intSubset;_xmlDtd *extSubset;_xmlNs *oldNs; xmlChar *version; xmlChar *encoding;void *ids;void *refs; xmlChar *URL;int charset;_xmlDict *dict;void *psvi;int parseFlags;int properties;};
struct _xmlDtd {void *_private;xmlElementType type; xmlChar *name;_xmlNode *children;_xmlNode *last;_xmlDoc *parent;_xmlNode *next;_xmlNode *prev;_xmlDoc *doc;void *notations;void *elements;void *attributes;void *entities; xmlChar *ExternalID; xmlChar *SystemID;void *pentities;};
struct _xmlRef {_xmlRef *next; xmlChar *value;xmlAttrPtr attr; xmlChar *name;int lineno;};
struct nlm_res {netobj cookie;nlm_stat stat;};
struct ntsid_t {u_int8_t sid_kind;u_int8_t sid_authcount;u_int8_t sid_authority[6];u_int32_t sid_authorities[16];};
struct statvfs {unsigned long long f_bsize;unsigned long long f_frsize;fsblkcnt_t f_blocks;fsblkcnt_t f_bfree;fsblkcnt_t f_bavail;fsfilcnt_t f_files;fsfilcnt_t f_ffree;fsfilcnt_t f_favail;unsigned long long f_fsid;unsigned long long f_flag;unsigned long long f_namemax;};
struct svc_req {unsigned int rq_prog;unsigned int rq_vers;unsigned int rq_proc;opaque_auth rq_cred;caddr_t rq_clntcred;SVCXPRT *rq_xprt;};
struct tcpstat {u_int32_t tcps_connattempt;u_int32_t tcps_accepts;u_int32_t tcps_connects;u_int32_t tcps_drops;u_int32_t tcps_conndrops;u_int32_t tcps_closed;u_int32_t tcps_segstimed;u_int32_t tcps_rttupdated;u_int32_t tcps_delack;u_int32_t tcps_timeoutdrop;u_int32_t tcps_rexmttimeo;u_int32_t tcps_persisttimeo;u_int32_t tcps_keeptimeo;u_int32_t tcps_keepprobe;u_int32_t tcps_keepdrops;u_int32_t tcps_sndtotal;u_int32_t tcps_sndpack;u_int32_t tcps_sndbyte;u_int32_t tcps_sndrexmitpack;u_int32_t tcps_sndrexmitbyte;u_int32_t tcps_sndacks;u_int32_t tcps_sndprobe;u_int32_t tcps_sndurg;u_int32_t tcps_sndwinup;u_int32_t tcps_sndctrl;u_int32_t tcps_rcvtotal;u_int32_t tcps_rcvpack;u_int32_t tcps_rcvbyte;u_int32_t tcps_rcvbadsum;u_int32_t tcps_rcvbadoff;u_int32_t tcps_rcvmemdrop;u_int32_t tcps_rcvshort;u_int32_t tcps_rcvduppack;u_int32_t tcps_rcvdupbyte;u_int32_t tcps_rcvpartduppack;u_int32_t tcps_rcvpartdupbyte;u_int32_t tcps_rcvoopack;u_int32_t tcps_rcvoobyte;u_int32_t tcps_rcvpackafterwin;u_int32_t tcps_rcvbyteafterwin;u_int32_t tcps_rcvafterclose;u_int32_t tcps_rcvwinprobe;u_int32_t tcps_rcvdupack;u_int32_t tcps_rcvacktoomuch;u_int32_t tcps_rcvackpack;u_int32_t tcps_rcvackbyte;u_int32_t tcps_rcvwinupd;u_int32_t tcps_pawsdrop;u_int32_t tcps_predack;u_int32_t tcps_preddat;u_int32_t tcps_pcbcachemiss;u_int32_t tcps_cachedrtt;u_int32_t tcps_cachedrttvar;u_int32_t tcps_cachedssthresh;u_int32_t tcps_usedrtt;u_int32_t tcps_usedrttvar;u_int32_t tcps_usedssthresh;u_int32_t tcps_persistdrop;u_int32_t tcps_badsyn;u_int32_t tcps_mturesent;u_int32_t tcps_listendrop;u_int32_t tcps_synchallenge;u_int32_t tcps_rstchallenge;u_int32_t tcps_minmssdrops;u_int32_t tcps_sndrexmitbad;u_int32_t tcps_badrst;u_int32_t tcps_sc_added;u_int32_t tcps_sc_retransmitted;u_int32_t tcps_sc_dupsyn;u_int32_t tcps_sc_dropped;u_int32_t tcps_sc_completed;u_int32_t tcps_sc_bucketoverflow;u_int32_t tcps_sc_cacheoverflow;u_int32_t tcps_sc_reset;u_int32_t tcps_sc_stale;u_int32_t tcps_sc_aborted;u_int32_t tcps_sc_badack;u_int32_t tcps_sc_unreach;u_int32_t tcps_sc_zonefail;u_int32_t tcps_sc_sendcookie;u_int32_t tcps_sc_recvcookie;u_int32_t tcps_hc_added;u_int32_t tcps_hc_bucketoverflow;u_int32_t tcps_sack_recovery_episode;u_int32_t tcps_sack_rexmits;u_int32_t tcps_sack_rexmit_bytes;u_int32_t tcps_sack_rcv_blocks;u_int32_t tcps_sack_send_blocks;u_int32_t tcps_sack_sboverflow;u_int32_t tcps_bg_rcvtotal;u_int32_t tcps_rxtfindrop;u_int32_t tcps_fcholdpacket;u_int32_t tcps_limited_txt;u_int32_t tcps_early_rexmt;u_int32_t tcps_sack_ackadv;u_int32_t tcps_rcv_swcsum;u_int32_t tcps_rcv_swcsum_bytes;u_int32_t tcps_rcv6_swcsum;u_int32_t tcps_rcv6_swcsum_bytes;u_int32_t tcps_snd_swcsum;u_int32_t tcps_snd_swcsum_bytes;u_int32_t tcps_snd6_swcsum;u_int32_t tcps_snd6_swcsum_bytes;u_int32_t tcps_unused_1;u_int32_t tcps_unused_2;u_int32_t tcps_unused_3;u_int32_t tcps_invalid_mpcap;u_int32_t tcps_invalid_joins;u_int32_t tcps_mpcap_fallback;u_int32_t tcps_join_fallback;u_int32_t tcps_estab_fallback;u_int32_t tcps_invalid_opt;u_int32_t tcps_mp_outofwin;u_int32_t tcps_mp_reducedwin;u_int32_t tcps_mp_badcsum;u_int32_t tcps_mp_oodata;u_int32_t tcps_mp_switches;u_int32_t tcps_mp_rcvtotal;u_int32_t tcps_mp_rcvbytes;u_int32_t tcps_mp_sndpacks;u_int32_t tcps_mp_sndbytes;u_int32_t tcps_join_rxmts;u_int32_t tcps_tailloss_rto;u_int32_t tcps_reordered_pkts;u_int32_t tcps_recovered_pkts;u_int32_t tcps_pto;u_int32_t tcps_rto_after_pto;u_int32_t tcps_tlp_recovery;u_int32_t tcps_tlp_recoverlastpkt;u_int32_t tcps_ecn_client_success;u_int32_t tcps_ecn_recv_ece;u_int32_t tcps_ecn_sent_ece;u_int32_t tcps_detect_reordering;u_int32_t tcps_delay_recovery;u_int32_t tcps_avoid_rxmt;u_int32_t tcps_unnecessary_rxmt;u_int32_t tcps_nostretchack;u_int32_t tcps_rescue_rxmt;u_int32_t tcps_pto_in_recovery;u_int32_t tcps_pmtudbh_reverted;u_int32_t tcps_dsack_disable;u_int32_t tcps_dsack_ackloss;u_int32_t tcps_dsack_badrexmt;u_int32_t tcps_dsack_sent;u_int32_t tcps_dsack_recvd;u_int32_t tcps_dsack_recvd_old;u_int32_t tcps_mp_sel_symtomsd;u_int32_t tcps_mp_sel_rtt;u_int32_t tcps_mp_sel_rto;u_int32_t tcps_mp_sel_peer;u_int32_t tcps_mp_num_probes;u_int32_t tcps_mp_verdowngrade;u_int32_t tcps_drop_after_sleep;u_int32_t tcps_probe_if;u_int32_t tcps_probe_if_conflict;u_int32_t tcps_ecn_client_setup;u_int32_t tcps_ecn_server_setup;u_int32_t tcps_ecn_server_success;u_int32_t tcps_ecn_lost_synack;u_int32_t tcps_ecn_lost_syn;u_int32_t tcps_ecn_not_supported;u_int32_t tcps_ecn_recv_ce;u_int32_t tcps_ecn_conn_recv_ce;u_int32_t tcps_ecn_conn_recv_ece;u_int32_t tcps_ecn_conn_plnoce;u_int32_t tcps_ecn_conn_pl_ce;u_int32_t tcps_ecn_conn_nopl_ce;u_int32_t tcps_ecn_fallback_synloss;u_int32_t tcps_ecn_fallback_reorder;u_int32_t tcps_ecn_fallback_ce;u_int32_t tcps_tfo_syn_data_rcv;u_int32_t tcps_tfo_cookie_req_rcv;u_int32_t tcps_tfo_cookie_sent;u_int32_t tcps_tfo_cookie_invalid;u_int32_t tcps_tfo_cookie_req;u_int32_t tcps_tfo_cookie_rcv;u_int32_t tcps_tfo_syn_data_sent;u_int32_t tcps_tfo_syn_data_acked;u_int32_t tcps_tfo_syn_loss;u_int32_t tcps_tfo_blackhole;u_int32_t tcps_tfo_cookie_wrong;u_int32_t tcps_tfo_no_cookie_rcv;u_int32_t tcps_tfo_heuristics_disable;u_int32_t tcps_tfo_sndblackhole;u_int32_t tcps_mss_to_default;u_int32_t tcps_mss_to_medium;u_int32_t tcps_mss_to_low;u_int32_t tcps_ecn_fallback_droprst;u_int32_t tcps_ecn_fallback_droprxmt;u_int32_t tcps_ecn_fallback_synrst;u_int32_t tcps_mptcp_rcvmemdrop;u_int32_t tcps_mptcp_rcvduppack;u_int32_t tcps_mptcp_rcvpackafterwin;u_int32_t tcps_timer_drift_le_1_ms;u_int32_t tcps_timer_drift_le_10_ms;u_int32_t tcps_timer_drift_le_20_ms;u_int32_t tcps_timer_drift_le_50_ms;u_int32_t tcps_timer_drift_le_100_ms;u_int32_t tcps_timer_drift_le_200_ms;u_int32_t tcps_timer_drift_le_500_ms;u_int32_t tcps_timer_drift_le_1000_ms;u_int32_t tcps_timer_drift_gt_1000_ms;u_int32_t tcps_mptcp_handover_attempt;u_int32_t tcps_mptcp_interactive_attempt;u_int32_t tcps_mptcp_aggregate_attempt;u_int32_t tcps_mptcp_fp_handover_attempt;u_int32_t tcps_mptcp_fp_interactive_attempt;u_int32_t tcps_mptcp_fp_aggregate_attempt;u_int32_t tcps_mptcp_heuristic_fallback;u_int32_t tcps_mptcp_fp_heuristic_fallback;u_int32_t tcps_mptcp_handover_success_wifi;u_int32_t tcps_mptcp_handover_success_cell;u_int32_t tcps_mptcp_interactive_success;u_int32_t tcps_mptcp_aggregate_success;u_int32_t tcps_mptcp_fp_handover_success_wifi;u_int32_t tcps_mptcp_fp_handover_success_cell;u_int32_t tcps_mptcp_fp_interactive_success;u_int32_t tcps_mptcp_fp_aggregate_success;u_int32_t tcps_mptcp_handover_cell_from_wifi;u_int32_t tcps_mptcp_handover_wifi_from_cell;u_int32_t tcps_mptcp_interactive_cell_from_wifi;u_int64_t tcps_mptcp_handover_cell_bytes;u_int64_t tcps_mptcp_interactive_cell_bytes;u_int64_t tcps_mptcp_aggregate_cell_bytes;u_int64_t tcps_mptcp_handover_all_bytes;u_int64_t tcps_mptcp_interactive_all_bytes;u_int64_t tcps_mptcp_aggregate_all_bytes;u_int32_t tcps_mptcp_back_to_wifi;u_int32_t tcps_mptcp_wifi_proxy;u_int32_t tcps_mptcp_cell_proxy;u_int32_t tcps_ka_offload_drops;u_int32_t tcps_mptcp_triggered_cell;};
struct timeval {__darwin_time_t tv_sec;__darwin_suseconds_t tv_usec;};
struct vmspace {int32_t dummy;caddr_t dummy2;int32_t dummy3[5];caddr_t dummy4[3];};
struct CGRect {CGPoint origin;CGSize size;};
struct CTCall {NSObject super;NSString *_callState;NSString *_callID;};
struct CVTime {int64_t timeValue;int32_t timeScale;int32_t flags;};
struct NSUnit {NSObject super;NSString *_symbol;};
struct _pcred {char pc_lock[72];ucred *pc_ucred;uid_t p_ruid;uid_t p_svuid;gid_t p_rgid;gid_t p_svgid;int p_refcnt;};
struct _xmlID {_xmlID *next; xmlChar *value;xmlAttrPtr attr; xmlChar *name;int lineno;_xmlDoc *doc;};
struct _xmlNs {_xmlNs *next;xmlNsType type; xmlChar *href; xmlChar *prefix;void *_private;_xmlDoc *context;};
struct au_tid {dev_t port;u_int32_t machine;};
struct fvmlib {lc_str name;uint32_t minor_version;uint32_t header_addr;};
struct glob_t {size_t gl_pathc;int gl_matchc;size_t gl_offs;int gl_flags;char **gl_pathv;glob_t___19FCDAD5B7B8F1E3E1965FC150EC2E21 __anonymous0;void (*gl_closedir)(void *);dirent *(*gl_readdir)(void *);void *(*gl_opendir)( char *);int (*gl_lstat)( char *, stat *);int (*gl_stat)( char *, stat *);};
struct ranlib {ranlib___24EC4077698CAAE5404246A0B9CA27DF ran_un;uint32_t ran_off;};
struct NSURL {NSObject super;NSString *_urlString;NSURL *_baseURL;void *_clients;void *_reserved;};
struct dqblk {u_int64_t dqb_bhardlimit;u_int64_t dqb_bsoftlimit;u_int64_t dqb_curbytes;u_int32_t dqb_ihardlimit;u_int32_t dqb_isoftlimit;u_int32_t dqb_curinodes;u_int32_t dqb_btime;u_int32_t dqb_itime;u_int32_t dqb_id;u_int32_t dqb_spare[4];};
struct dylib {lc_str name;uint32_t timestamp;uint32_t current_version;uint32_t compatibility_version;};
struct flock {off_t l_start;off_t l_len;pid_t l_pid;short l_type;short l_whence;};
union wait {int w_status;wait___7577FAE843D32618A04985FDB883FD87 w_T;wait___D2BE3D1E9784782BB73F97C8AEDA900E w_S;};
struct wide {UInt32 lo;SInt32 hi;};
struct FTS {_ftsent *fts_cur;_ftsent *fts_child;_ftsent **fts_array;dev_t fts_dev;char *fts_path;int fts_rfd;int fts_pathlen;int fts_nitems;FTS___0F1278270169A806A3DDB076936BA357 __anonymous0;int fts_options;};
struct std____1__numpunct_byname_wchar_t__vtbl_layout; 
struct std____1__collate_byname_wchar_t__vtbl_layout; 
union icmp6_hdr___D19D92B5F4F43A148CE7ABC3DA9CAAC9 {u_int32_t icmp6_un_data32[1];u_int16_t icmp6_un_data16[2];u_int8_t icmp6_un_data8[4];};
union in6_addr___330434928707C706902F20BE7BA89EB4 {__uint8_t __u6_addr8[16];__uint16_t __u6_addr16[8];__uint32_t __u6_addr32[4];};
struct std____1__codecvt_wchar_t__char__mbstate_t_ { std____1__locale__facet cppsuper0;std____1__codecvt_base cppsuper1;locale_t __l;};
struct std____1__numpunct_byname_char__vtbl_layout; 
union rpc_err___30A4560269546B25A76610837B21C9C6 {int RE_errno;auth_stat RE_why;_AC186CABF9007C2DA87CD3BECABD7D45 RE_vers;_BF7AC7AAFAE2A9D4F26CD1E6B816F6B2 RE_lb;};
struct std____1__collate_byname_char__vtbl_layout; 
struct std____1__money_get_wchar_t__vtbl_layout; 
struct std____1__money_put_wchar_t__vtbl_layout; 
struct std____1__numpunct_wchar_t__vtbl_layout; 
struct std____1__numpunct_byname_wchar_t__vtbl; 
struct std____1__collate_byname_wchar_t__vtbl; 
struct std____1__money_get_char__vtbl_layout; 
struct std____1__money_put_char__vtbl_layout; 
typedef void (*AudioFileStream_PropertyListenerProc)(void *, AudioFileStreamID, AudioFileStreamPropertyID, AudioFileStreamPropertyFlags *);
typedef Boolean (*CFPlugInInstanceGetInterfaceFunction)(CFPlugInInstanceRef, CFStringRef, void **);
struct std____1__error_category_vtbl_layout; 
struct std____1__numpunct_char__vtbl_layout; 
struct std____1__numpunct_byname_char__vtbl; 
typedef void (*MTAudioProcessingTapProcessCallback)(MTAudioProcessingTapRef, CMItemCount, MTAudioProcessingTapFlags, AudioBufferList *, CMItemCount *, MTAudioProcessingTapFlags *);
struct std____1__collate_byname_char__vtbl; 
typedef OSStatus (*AudioConverterComplexInputDataProc)(AudioConverterRef, UInt32 *, AudioBufferList *, AudioStreamPacketDescription **, void *);
struct NSMetadataQueryAttributeValueTuple {NSObject super;id _attr;id _value;NSUInteger _count;void *_reserved;};
struct std____1____do_message_vtbl_layout; 
struct _9CD7DB5FE14A2A04079DBE65AB72DE56 {SInt32 startBufferOffset;UInt32 durationInFrames;AudioUnitParameterValue startValue;AudioUnitParameterValue endValue;};
struct AudioUnitParameterStringFromValue {AudioUnitParameterID inParamID; AudioUnitParameterValue *inValue;CFStringRef outString;};
struct AudioUnitParameterValueFromString {AudioUnitParameterID inParamID;CFStringRef inString;AudioUnitParameterValue outValue;};
struct BNNSFullyConnectedLayerParameters {size_t in_size;size_t out_size;BNNSLayerData weights;BNNSLayerData bias;BNNSActivation activation;};
typedef void (*CFNetServiceBrowserClientCallBack)(CFNetServiceBrowserRef, CFOptionFlags, CFTypeRef, CFStreamError *, void *);
struct SparseOpaquePreconditioner_Double {SparsePreconditioner_t type;void *mem;void (*apply)(void *, CBLAS_TRANSPOSE, DenseMatrix_Double, DenseMatrix_Double);};
typedef ALvoid (*alSourceRemoveNotificationProcPtr)(ALuint, ALuint, alSourceNotificationProc, ALvoid *);
struct std____1__money_get_wchar_t__vtbl; 
struct std____1__money_put_wchar_t__vtbl; 
typedef void (*JSObjectGetPropertyNamesCallback)(JSContextRef, JSObjectRef, JSPropertyNameAccumulatorRef);
struct SparseOpaquePreconditioner_Float {SparsePreconditioner_t type;void *mem;void (*apply)(void *, CBLAS_TRANSPOSE, DenseMatrix_Float, DenseMatrix_Float);};
struct std____1__numpunct_wchar_t__vtbl; 
struct std____1__time_get_wchar_t__vtbl; 
typedef void (*AudioQueueProcessingTapCallback)(void *, AudioQueueProcessingTapRef, UInt32, AudioTimeStamp *, AudioQueueProcessingTapFlags *, UInt32 *, AudioBufferList *);
typedef OSStatus (*HostCallback_GetTransportState2)(void *, Boolean *, Boolean *, Boolean *, Float64 *, Boolean *, Float64 *, Float64 *);
typedef ALvoid (*alSourceRenderingQualityProcPtr)(ALuint, ALint);
typedef ALvoid (*alcOutputCapturerSamplesProcPtr)(ALCvoid *, ALCsizei);
struct BNNSConvolutionLayerParameters {size_t x_stride;size_t y_stride;size_t x_padding;size_t y_padding;size_t k_width;size_t k_height;size_t in_channels;size_t out_channels;BNNSLayerData weights;BNNSLayerData bias;BNNSActivation activation;};
typedef OSStatus (*HostCallback_GetTransportState)(void *, Boolean *, Boolean *, Float64 *, Boolean *, Float64 *, Float64 *);
struct dyld_chained_starts_in_segment {uint32_t size;uint16_t page_size;uint16_t pointer_format;uint64_t segment_offset;uint32_t max_valid_pointer;uint16_t page_count;uint16_t page_start[1];};
struct std____1__money_get_char__vtbl; 
struct std____1__money_put_char__vtbl; 
typedef void (*VTDecompressionOutputCallback)(void *, void *, OSStatus, VTDecodeInfoFlags, CVImageBufferRef, CMTime, CMTime);
struct _GLKVertexAttributeParameters {GLenum type;GLint size;GLboolean normalized;};
struct std____1__error_category_vtbl; 
struct std____1__numpunct_char__vtbl; 
struct std____1__time_get_char__vtbl; 
typedef OSStatus (*AudioUnitProcessMultipleProc)(void *, AudioUnitRenderActionFlags *,  AudioTimeStamp *, UInt32, UInt32,  AudioBufferList **, UInt32, AudioBufferList **);
typedef OSStatus (*AudioConverterInputDataProc)(AudioConverterRef, UInt32 *, void **, void *);
typedef char (*JSObjectHasInstanceCallback)(JSContextRef, JSObjectRef, JSValueRef, JSValueRef *);
typedef char (*JSObjectHasPropertyCallback)(JSContextRef, JSObjectRef, JSStringRef);
struct SparseSymbolicFactorOptions {SparseControl_t control;SparseOrder_t orderMethod;int *order;int *ignoreRowsAndColumns;void *(*malloc)(size_t);void (*free)(void *);void (*reportError)( char *);};
typedef void (*VTCompressionOutputCallback)(void *, void *, OSStatus, VTEncodeInfoFlags, CMSampleBufferRef);
struct std____1____do_message_vtbl; 
struct std____1__numpunct_wchar_t_ { std____1__locale__facet cppsuper0;std____1__numpunct_wchar_t___char_type __decimal_point_;std____1__numpunct_wchar_t___char_type __thousands_sep_;std____1__string __grouping_;};
struct AudioBytePacketTranslation {SInt64 mByte;SInt64 mPacket;UInt32 mByteOffsetInPacket;AudioBytePacketTranslationFlags mFlags;};
typedef OSStatus (*AudioUnitComplexRenderProc)(void *, AudioUnitRenderActionFlags *,  AudioTimeStamp *, UInt32, UInt32, UInt32 *, AudioStreamPacketDescription *, AudioBufferList *, void *, UInt32 *);
struct AudioUnitParameterNameInfo {AudioUnitParameterID inID;SInt32 inDesiredLength;CFStringRef outName;};
typedef OSStatus (*CMBufferValidationCallback)(CMBufferQueueRef, CMBufferRef, void *);
struct NSMetadataQueryResultGroup {NSObject super;id _private[9];NSUInteger _private2[1];void *_reserved;};
struct dyld_cache_image_text_info {uuid_t uuid;uint64_t loadAddress;uint32_t textSegmentSize;uint32_t pathOffset;};
struct rpc_routine_arg_descriptor {routine_arg_type type;routine_arg_size size;routine_arg_size count;routine_arg_offset offset;};
typedef OSStatus (*AudioCodecGetPropertyProc)(void *, AudioCodecPropertyID, UInt32 *, void *);
typedef OSStatus (*AudioCodecSetPropertyProc)(void *, AudioCodecPropertyID, UInt32,  void *);
struct MPSCustomKernelSourceInfo {vector_short2 kernelOrigin;vector_ushort2 kernelPhase;vector_ushort2 kernelSize;vector_short2 offset;vector_ushort2 stride;vector_ushort2 dilationRate;uint16_t featureChannelOffset;uint16_t featureChannels;uint16_t imageArrayOffset;uint16_t imageArraySize;};
typedef void (*MusicSequenceUserCallback)(void *, MusicSequence, MusicTrack, MusicTimeStamp,  MusicEventUserData *, MusicTimeStamp, MusicTimeStamp);
struct AURecordedParameterEvent {uint64_t hostTime;AUParameterAddress address;AUValue value;};
typedef ALenum (*alcASAGetListenerProcPtr)(ALuint, ALvoid *, ALuint *);
typedef ALenum (*alcASASetListenerProcPtr)(ALuint, ALvoid *, ALuint);
typedef long long (*axr_encoder_write_proc_t)(axr_encoder_storage_t,  uint8_t *, size_t);
struct std____1__numpunct_char_ { std____1__locale__facet cppsuper0;std____1__numpunct_char___char_type __decimal_point_;std____1__numpunct_char___char_type __thousands_sep_;std____1__string __grouping_;};
struct AudioChannelDescription {AudioChannelLabel mChannelLabel;AudioChannelFlags mChannelFlags;Float32 mCoordinates[3];};
typedef void (*AudioQueueInputCallback)(void *, AudioQueueRef, AudioQueueBufferRef,  AudioTimeStamp *, UInt32,  AudioStreamPacketDescription *);
typedef void (*DNSServiceRegisterReply)(DNSServiceRef, DNSServiceFlags, DNSServiceErrorType,  char *,  char *,  char *, void *);
typedef ALCboolean (*LPALCISEXTENSIONPRESENT)(ALCdevice *,  ALCchar *);
struct NSLinkEditErrorHandlers {void (*undefined)( char *);NSModule (*multiple)(NSSymbol, NSModule, NSModule);void (*linkEdit)(NSLinkEditErrors, int,  char *,  char *);};
struct _xmlCharEncodingHandler {char *name;xmlCharEncodingInputFunc input;xmlCharEncodingOutputFunc output;uconv_t *uconv_in;uconv_t *uconv_out;};
typedef ssize_t (*AAByteStreamPWriteProc)(void *,  void *, size_t, off_t);
typedef void (*CFNotificationCallback)(CFNotificationCenterRef, void *, CFNotificationName,  void *, CFDictionaryRef);
struct KerxControlPointHeader {STXHeader header;UInt32 flags;UInt8 firstTable[1];};
struct NSMapTableKeyCallBacks {NSUInteger (*hash)(NSMapTable *,  void *);BOOL (*isEqual)(NSMapTable *,  void *,  void *);void (*retain)(NSMapTable *,  void *);void (*release)(NSMapTable *, void *);NSString *(*describe)(NSMapTable *,  void *); void *notAKeyMarker;};
typedef ALenum (*alcASAGetSourceProcPtr)(ALuint, ALuint, ALvoid *, ALuint *);
typedef ALenum (*alcASASetSourceProcPtr)(ALuint, ALuint, ALvoid *, ALuint);
struct rpc_routine_descriptor {mig_impl_routine_t impl_routine;mig_stub_routine_t stub_routine;unsigned int argc;unsigned int descr_count;rpc_routine_arg_descriptor_t arg_descr;unsigned int max_reply_msg;};
typedef ssize_t (*AAByteStreamPReadProc)(void *, void *, size_t, off_t);
typedef CFDataRef (*CFMessagePortCallBack)(CFMessagePortRef, SInt32, CFDataRef, void *);
struct JustPCActionSubrecord {UInt16 theClass;JustPCActionType theType;UInt32 length;UInt32 data;};
struct MPSImageHistogramInfo {NSUInteger numberOfHistogramEntries;BOOL histogramForAlpha;vector_float4 minPixelValue;vector_float4 maxPixelValue;};
struct MusicDeviceNoteParams {UInt32 argCount;Float32 mPitch;Float32 mVelocity;NoteParamsControlValue mControls[1];};
typedef _Unwind_Reason_Code (*__personality_routine)(int, _Unwind_Action, uint64_t, _Unwind_Exception *, _Unwind_Context *);
struct dns_resource_record_t {char *name;uint16_t dnstype;uint16_t dnsclass;uint32_t ttl;dns_resource_record_t___ACCCA089A96433C3C2E2A191C0A26330 data;};
struct fileset_entry_command {uint32_t cmd;uint32_t cmdsize;uint64_t vmaddr;uint64_t fileoff;lc_str entry_id;uint32_t reserved;};
struct std____1__ctype_char_ { std____1__locale__facet cppsuper0;std____1__ctype_base cppsuper1; std____1__ctype_base__mask *__tab_;char __del_;};
struct AudioFile_SMPTE_Time {SInt8 mHours;UInt8 mMinutes;UInt8 mSeconds;UInt8 mFrames;UInt32 mSubFrameSampleOffset;};
typedef OSStatus (*AudioUnitProcessProc)(void *, AudioUnitRenderActionFlags *,  AudioTimeStamp *, UInt32, AudioBufferList *);
struct __attribute__((packed)) CAFPacketTableHeader {SInt64 mNumberPackets;SInt64 mNumberValidFrames;SInt32 mPrimingFrames;SInt32 mRemainderFrames;UInt8 mPacketDescriptions[1];};
struct KernIndexArrayHeader {UInt16 glyphCount;UInt8 kernValueCount;UInt8 leftClassCount;UInt8 rightClassCount;UInt8 flags;SInt16 kernValue[1];UInt8 leftClass[1];UInt8 rightClass[1];UInt8 kernIndex[1];};
typedef OSStatus (*MusicDeviceSysExProc)(void *,  UInt8 *, UInt32);
struct NSHashTableCallBacks {NSUInteger (*hash)(NSHashTable *,  void *);BOOL (*isEqual)(NSHashTable *,  void *,  void *);void (*retain)(NSHashTable *,  void *);void (*release)(NSHashTable *, void *);NSString *(*describe)(NSHashTable *,  void *);};
struct processor_basic_info {cpu_type_t cpu_type;cpu_subtype_t cpu_subtype;boolean_t running;int slot_num;boolean_t is_master;};
struct sfntDescriptorHeader {Fixed version;SInt32 descriptorCount;sfntFontDescriptor descriptor[1];};
struct AURenderEventHeader {AURenderEvent *next;AUEventSampleTime eventSampleTime;AURenderEventType eventType;uint8_t reserved;};
typedef OSStatus (*AudioFile_WriteProc)(void *, SInt64, UInt32,  void *, UInt32 *);
typedef OSStatus (*AudioUnitRenderProc)(void *, AudioUnitRenderActionFlags *,  AudioTimeStamp *, UInt32, UInt32, AudioBufferList *);
struct __attribute__((packed)) CAFAudioDescription {Float64 mSampleRate;UInt32 mFormatID;CAFFormatFlags mFormatFlags;UInt32 mBytesPerPacket;UInt32 mFramesPerPacket;UInt32 mChannelsPerFrame;UInt32 mBitsPerChannel;};
struct JustWidthDeltaEntry {UInt32 justClass;Fixed beforeGrowLimit;Fixed beforeShrinkLimit;Fixed afterGrowLimit;Fixed afterShrinkLimit;JustificationFlags growFlags;JustificationFlags shrinkFlags;};
typedef void (*LPALCCAPTURESAMPLES)(ALCdevice *, ALCvoid *, ALCsizei);
struct MPSCustomKernelInfo {vector_ushort4 clipOrigin;vector_ushort4 clipSize;uint16_t destinationFeatureChannels;uint16_t destImageArraySize;uint16_t sourceImageCount;uint16_t threadgroupSize;uint16_t subbatchIndex;uint16_t subbatchStride;MPSIntegerDivisionParams idiv;};
struct __darwin_mcontext32 {__darwin_arm_exception_state __es;__darwin_arm_thread_state __ss;__darwin_arm_vfp_state __fs;};
struct __darwin_mcontext64 {__darwin_arm_exception_state64 __es;__darwin_arm_thread_state64 __ss;__darwin_arm_neon_state64 __ns;};
struct __darwin_ucontext64 {int uc_onstack;__darwin_sigset_t uc_sigmask;__darwin_sigaltstack uc_stack;__darwin_ucontext64 *uc_link;__darwin_size_t uc_mcsize;__darwin_mcontext64 *uc_mcontext64;};
struct ip6_hdr__ip6_hdrctl {u_int32_t ip6_un1_flow;u_int16_t ip6_un1_plen;u_int8_t ip6_un1_nxt;u_int8_t ip6_un1_hlim;};
struct tcp_connection_info {u_int8_t tcpi_state;u_int8_t tcpi_snd_wscale;u_int8_t tcpi_rcv_wscale;u_int8_t __pad1;u_int32_t tcpi_options;u_int32_t tcpi_flags;u_int32_t tcpi_rto;u_int32_t tcpi_maxseg;u_int32_t tcpi_snd_ssthresh;u_int32_t tcpi_snd_cwnd;u_int32_t tcpi_snd_wnd;u_int32_t tcpi_snd_sbbytes;u_int32_t tcpi_rcv_wnd;u_int32_t tcpi_rttcur;u_int32_t tcpi_srtt;u_int32_t tcpi_rttvar;unsigned int tcpi_tfo_cookie_req : 1;unsigned int tcpi_tfo_cookie_rcv : 1;unsigned int tcpi_tfo_syn_loss : 1;unsigned int tcpi_tfo_syn_data_sent : 1;unsigned int tcpi_tfo_syn_data_acked : 1;unsigned int tcpi_tfo_syn_data_rcv : 1;unsigned int tcpi_tfo_cookie_req_rcv : 1;unsigned int tcpi_tfo_cookie_sent : 1;unsigned int tcpi_tfo_cookie_invalid : 1;unsigned int tcpi_tfo_cookie_wrong : 1;unsigned int tcpi_tfo_no_cookie_rcv : 1;unsigned int tcpi_tfo_heuristics_disable : 1;unsigned int tcpi_tfo_send_blackhole : 1;unsigned int tcpi_tfo_recv_blackhole : 1;unsigned int tcpi_tfo_onebyte_proxy : 1;unsigned int __pad2 : 17;__attribute__((aligned(8))) u_int64_t tcpi_txpackets;__attribute__((aligned(8))) u_int64_t tcpi_txbytes;__attribute__((aligned(8))) u_int64_t tcpi_txretransmitbytes;__attribute__((aligned(8))) u_int64_t tcpi_rxpackets;__attribute__((aligned(8))) u_int64_t tcpi_rxbytes;__attribute__((aligned(8))) u_int64_t tcpi_rxoutoforderbytes;__attribute__((aligned(8))) u_int64_t tcpi_txretransmitpackets;};
typedef OSStatus (*AudioFile_ReadProc)(void *, SInt64, UInt32, void *, UInt32 *);
typedef OSStatus (*AudioUnitResetProc)(void *, AudioUnitScope, AudioUnitElement);
struct __attribute__((packed)) CAFInstrumentChunk {Float32 mBaseNote;UInt8 mMIDILowNote;UInt8 mMIDIHighNote;UInt8 mMIDILowVelocity;UInt8 mMIDIHighVelocity;Float32 mdBGain;UInt32 mStartRegionID;UInt32 mSustainRegionID;UInt32 mReleaseRegionID;UInt32 mInstrumentID;};
typedef ALCcontext *(*LPALCCREATECONTEXT)(ALCdevice *,  ALCint *);
struct NSFileAccessIntent {NSObject super;NSURL *_url;BOOL _isRead;NSInteger _options;};
typedef UBool UCharEnumTypeRange( void *, UChar32, UChar32, UCharCategory);
struct _xmlElementContent {xmlElementContentType type;xmlElementContentOccur ocur; xmlChar *name;_xmlElementContent *c1;_xmlElementContent *c2;_xmlElementContent *parent; xmlChar *prefix;};
struct _xmlSchemaNotation {xmlSchemaTypeType type; xmlChar *name;xmlSchemaAnnotPtr annot; xmlChar *identifier; xmlChar *targetNamespace;};
struct routine_descriptor {mig_impl_routine_t impl_routine;mig_stub_routine_t stub_routine;unsigned int argc;unsigned int descr_count;routine_arg_descriptor_t arg_descr;unsigned int max_reply_msg;};
struct segment_command_64 {uint32_t cmd;uint32_t cmdsize;char segname[16];uint64_t vmaddr;uint64_t vmsize;uint64_t fileoff;uint64_t filesize;vm_prot_t maxprot;vm_prot_t initprot;uint32_t nsects;uint32_t flags;};
struct task_power_info_v2 {task_power_info_data_t cpu_energy;gpu_energy_data gpu_energy;uint64_t task_energy;uint64_t task_ptime;uint64_t task_pset_switches;};
struct AAEntryAttributes {AAEntryAttributes___EFADEFB9DC9004767965205374614248 __anonymous0;uint32_t uid;uint32_t gid;uint32_t flg;uint32_t mod;timespec btm;timespec ctm;timespec mtm;};
typedef ALCenum (*LPALCGETENUMVALUE)(ALCdevice *,  ALCchar *);
struct NSFileCoordinator {NSObject super;id _accessArbiter;id _fileReactor;id _purposeID;NSURL *_recentFilePresenterURL;id _accessClaimIDOrIDs;BOOL _isCancelled;NSMutableDictionary *_movedItems;};
struct __attribute__((aligned(16))) _Unwind_Exception {uint64_t exception_class;void (*exception_cleanup)(_Unwind_Reason_Code, _Unwind_Exception *);uintptr_t private_1;uintptr_t private_2;};
struct __darwin_ucontext {int uc_onstack;__darwin_sigset_t uc_sigmask;__darwin_sigaltstack uc_stack;__darwin_ucontext *uc_link;__darwin_size_t uc_mcsize;__darwin_mcontext64 *uc_mcontext;};
struct sfntVariationAxis {FourCharCode axisTag;Fixed minValue;Fixed defaultValue;Fixed maxValue;SInt16 flags;SInt16 nameID;};
struct thread_basic_info {time_value_t user_time;time_value_t system_time;integer_t cpu_usage;policy_t policy;integer_t run_state;integer_t flags;integer_t suspend_count;integer_t sleep_time;};
typedef OSStatus (*AURenderCallback)(void *, AudioUnitRenderActionFlags *,  AudioTimeStamp *, UInt32, UInt32, AudioBufferList *);
struct AudioPanningInfo {AudioPanningMode mPanningMode;UInt32 mCoordinateFlags;Float32 mCoordinates[3];Float32 mGainScale; AudioChannelLayout *mOutputChannelMap;};
typedef void (*CFSocketCallBack)(CFSocketRef, CFSocketCallBackType, CFDataRef,  void *, void *);
struct CLIENT__clnt_ops {clnt_stat (*cl_call)(CLIENT *, unsigned int, xdrproc_t, void *, xdrproc_t, void *, timeval);void (*cl_abort)(void);void (*cl_geterr)(CLIENT *, rpc_err *);int (*cl_freeres)(CLIENT *, xdrproc_t, void *);void (*cl_destroy)(CLIENT *);int (*cl_control)(CLIENT *, int, char *);};
struct dns_WKS_record_t {in_addr addr;uint8_t protocol;uint32_t maplength;uint8_t *map;};
struct mach_memory_info {uint64_t flags;uint64_t site;uint64_t size;uint64_t free;uint64_t largest;uint64_t collectable_bytes;uint64_t mapped;uint64_t peak;uint16_t tag;uint16_t zone;uint16_t _resvA[2];uint64_t _resv[3];char name[80];};
struct sockaddr_storage {__uint8_t ss_len;sa_family_t ss_family;char __ss_pad1[6];__int64_t __ss_align;char __ss_pad2[112];};
struct KernTableHeader {Fixed version;SInt32 nTables;UInt16 firstSubtable[1];};
struct KerxStateHeader {STXHeader header;UInt32 valueTable;UInt8 firstTable[1];};
typedef void (*LPALGETBUFFER3F)(ALuint, ALenum, ALfloat *, ALfloat *, ALfloat *);
typedef void (*LPALGETBUFFER3I)(ALuint, ALenum, ALint *, ALint *, ALint *);
typedef void (*LPALGETBUFFERFV)(ALuint, ALenum, ALfloat *);
typedef void (*LPALGETBUFFERIV)(ALuint, ALenum, ALint *);
typedef void (*LPALGETSOURCE3F)(ALuint, ALenum, ALfloat *, ALfloat *, ALfloat *);
typedef void (*LPALGETSOURCE3I)(ALuint, ALenum, ALint *, ALint *, ALint *);
typedef void (*LPALGETSOURCEFV)(ALuint, ALenum, ALfloat *);
typedef void (*LPALGETSOURCEIV)(ALuint, ALenum, ALint *);
typedef _Unwind_Reason_Code (*_Unwind_Stop_Fn)(int, _Unwind_Action, uint64_t, _Unwind_Exception *, _Unwind_Context *, void *);
struct _xmlParserInput {xmlParserInputBufferPtr buf; char *filename; char *directory; xmlChar *base; xmlChar *cur; xmlChar *end;int length;int line;int col;unsigned long long consumed;xmlParserInputDeallocate free; xmlChar *encoding; xmlChar *version;int standalone;int id;};
struct _xmlXPathObject {xmlXPathObjectType type;xmlNodeSetPtr nodesetval;int boolval;double floatval;xmlChar *stringval;void *user;int index;void *user2;int index2;};
struct sfntFeatureName {UInt16 featureType;UInt16 settingCount;SInt32 offsetToSettings;UInt16 featureFlags;SInt16 nameID;};
typedef  ALCchar *(*LPALCGETSTRING)(ALCdevice *, ALCenum);
typedef void (*LPALGETBUFFERF)(ALuint, ALenum, ALfloat *);
typedef void (*LPALGETBUFFERI)(ALuint, ALenum, ALint *);
typedef void (*LPALGETSOURCEF)(ALuint, ALenum, ALfloat *);
typedef void (*LPALGETSOURCEI)(ALuint, ALenum, ALint *);
struct NSUserDefaults {NSObject super;id _kvo_;CFStringRef _identifier_;CFStringRef _container_;void *_reserved[2];};
struct bp_getfile_res {bp_machine_name_t server_name;bp_address server_address;bp_path_t server_path;};
struct mach_header_64 {uint32_t magic;cpu_type_t cputype;cpu_subtype_t cpusubtype;uint32_t filetype;uint32_t ncmds;uint32_t sizeofcmds;uint32_t flags;uint32_t reserved;};
struct task_dyld_info {mach_vm_address_t all_image_info_addr;mach_vm_size_t all_image_info_size;integer_t all_image_info_format;};
struct ypresp_key_val {ypstat stat;keydat key;valdat val;};
struct AUPresetEvent {AudioUnitScope scope;AudioUnitElement element;CFPropertyListRef preset;};
struct MIDIEventList {MIDIProtocolID protocol;UInt32 numPackets;MIDIEventPacket packet[1];};
struct NSFileWrapper {NSObject super;NSDictionary *_fileAttributes;NSString *_preferredFileName;NSString *_fileName;id _contents;id _icon;id _moreVars;};
struct NSProcessInfo {NSObject super;NSDictionary *environment;NSArray *arguments;NSString *hostName;NSString *name;NSInteger automaticTerminationOptOutCounter;};
struct NSUndoManager {NSObject super;id _undoStack;id _redoStack;NSArray *_runLoopModes;uint64_t _NSUndoManagerPrivate1;id _target;id _proxy;void *_NSUndoManagerPrivate2;void *_NSUndoManagerPrivate3;};
struct TrakTableData {UInt16 nTracks;UInt16 nSizes;UInt32 sizeTableOffset;TrakTableEntry trakTable[1];};
struct __attribute__((packed)) nd_opt_rd_hdr {u_int8_t nd_opt_rh_type;u_int8_t nd_opt_rh_len;u_int16_t nd_opt_rh_reserved1;u_int32_t nd_opt_rh_reserved2;};
struct policy_limits {policy_timeshare_limit_data_t ts;policy_rr_limit_data_t rr;policy_fifo_limit_data_t fifo;};
struct rb_tree_ops_t {rbto_compare_nodes_fn rbto_compare_nodes;rbto_compare_key_fn rbto_compare_key;size_t rbto_node_offset;void *rbto_context;};
struct sadb_lifetime {u_int16_t sadb_lifetime_len;u_int16_t sadb_lifetime_exttype;u_int32_t sadb_lifetime_allocations;u_int64_t sadb_lifetime_bytes;u_int64_t sadb_lifetime_addtime;u_int64_t sadb_lifetime_usetime;};
struct sadb_x_policy {u_int16_t sadb_x_policy_len;u_int16_t sadb_x_policy_exttype;u_int16_t sadb_x_policy_type;u_int8_t sadb_x_policy_dir;u_int8_t sadb_x_policy_reserved;u_int32_t sadb_x_policy_id;u_int32_t sadb_x_policy_reserved2;};
struct sfntDirectory {FourCharCode format;UInt16 numOffsets;UInt16 searchRange;UInt16 entrySelector;UInt16 rangeShift;sfntDirectoryEntry table[1];};
struct ypbind_setdom {domainname ypsetdom_domain;ypbind_binding ypsetdom_binding;u_int ypsetdom_vers;};
typedef void (*LPALBUFFER3F)(ALuint, ALenum, ALfloat, ALfloat, ALfloat);
typedef void (*LPALBUFFER3I)(ALuint, ALenum, ALint, ALint, ALint);
typedef void (*LPALBUFFERFV)(ALuint, ALenum,  ALfloat *);
typedef void (*LPALBUFFERIV)(ALuint, ALenum,  ALint *);
typedef void (*LPALSOURCE3F)(ALuint, ALenum, ALfloat, ALfloat, ALfloat);
typedef void (*LPALSOURCE3I)(ALuint, ALenum, ALint, ALint, ALint);
typedef void (*LPALSOURCEFV)(ALuint, ALenum,  ALfloat *);
typedef void (*LPALSOURCEIV)(ALuint, ALenum,  ALint *);
typedef OSStatus (*SSLWriteFunc)(SSLConnectionRef,  void *, size_t *);
struct ifma_msghdr2 {u_short ifmam_msglen;u_char ifmam_version;u_char ifmam_type;int ifmam_addrs;int ifmam_flags;u_short ifmam_index;int32_t ifmam_refcount;};
struct __attribute__((packed)) nd_opt_dnssl {u_int8_t nd_opt_dnssl_type;u_int8_t nd_opt_dnssl_len;u_int16_t nd_opt_dnssl_reserved;u_int32_t nd_opt_dnssl_lifetime;u_int8_t nd_opt_dnssl_domains[8];};
struct policy_bases {policy_timeshare_base_data_t ts;policy_rr_base_data_t rr;policy_fifo_base_data_t fifo;};
struct policy_infos {policy_timeshare_info_data_t ts;policy_rr_info_data_t rr;policy_fifo_info_data_t fifo;};
typedef void (*LPALBUFFERF)(ALuint, ALenum, ALfloat);
typedef void (*LPALBUFFERI)(ALuint, ALenum, ALint);
typedef void (*LPALSOURCEF)(ALuint, ALenum, ALfloat);
typedef void (*LPALSOURCEI)(ALuint, ALenum, ALint);
struct NSException {NSObject super;NSString *name;NSString *reason;NSDictionary *userInfo;id reserved;};
struct NSPredicate {NSObject super;_predicateFlags _predicateFlags;uint32_t reserved;};
typedef OSStatus (*SSLReadFunc)(SSLConnectionRef, void *, size_t *);
union _GLKVector3 {_393C16A032292777F0C3725FFB2C0008 __anonymous0;_GLKVector3___7B7AD9436E53DE341D9DDF6F0536A99B __anonymous6;_GLKVector3___13ED18E8C21063FF516926CE05468478 __anonymous7;float v[3];};
union __attribute__((aligned(16))) _GLKVector4 {SCNVector4 __anonymous0;_GLKVector4___43F634250C0E94E2A09AB0840E4770D1 __anonymous3;_GLKVector4___8049FD4CE32D3F768A2FD438003016CA __anonymous4;float v[4];};
struct __sigaction {__sigaction_u __sigaction_u;void (*sa_tramp)(void *, int, int, siginfo_t *, void *);sigset_t sa_mask;int sa_flags;};
struct mach_header {uint32_t magic;cpu_type_t cputype;cpu_subtype_t cpusubtype;uint32_t filetype;uint32_t ncmds;uint32_t sizeofcmds;uint32_t flags;};
struct nlm4_holder {int exclusive;u_int32_t svid;netobj oh;u_int64_t l_offset;u_int64_t l_len;};
struct printf_info {void *context;locale_t loc;int vsep;int prec;int width;int spec;int pad;int signchar;unsigned int is_long_double : 1;unsigned int is_char : 1;unsigned int is_short : 1;unsigned int is_long : 1;unsigned int alt : 1;unsigned int space : 1;unsigned int left : 1;unsigned int showsign : 1;unsigned int group : 1;unsigned int extra : 1;unsigned int wide : 1;unsigned int is_quad : 1;unsigned int is_intmax : 1;unsigned int is_ptrdiff : 1;unsigned int is_size : 1;unsigned int is_vec : 1;int sofar;unsigned int get_width;unsigned int get_prec; char *begin; char *end;void *arg[2];};
struct MIDIPacket {MIDITimeStamp timeStamp;UInt16 length;Byte data[256];};
struct NSIndexSet {NSObject super;_213D9A961E8B493221875F078C74556F _indexSetFlags;_97632B3213A37D6762BB025878435371 _internal;};
struct NXArchInfo { char *name;cpu_type_t cputype;cpu_subtype_t cpusubtype;NXByteOrder byteorder; char *description;};
struct TimeRecord {CompTimeValue value;TimeScale scale;TimeBase base;};
struct _xmlEntity {void *_private;xmlElementType type; xmlChar *name;_xmlNode *children;_xmlNode *last;_xmlDtd *parent;_xmlNode *next;_xmlNode *prev;_xmlDoc *doc;xmlChar *orig;xmlChar *content;int length;xmlEntityType etype; xmlChar *ExternalID; xmlChar *SystemID;_xmlEntity *nexte; xmlChar *URI;int owner;int checked;};
struct exportnode {dirpath ex_dir;groups ex_groups;exports ex_next;};
struct __attribute__((packed)) nd_opt_mtu {u_int8_t nd_opt_mtu_type;u_int8_t nd_opt_mtu_len;u_int16_t nd_opt_mtu_reserved;u_int32_t nd_opt_mtu_mtu;};
struct nlm4_share {char *caller_name;netobj fh;netobj oh;fsh_mode mode;fsh_access access;};
struct __attribute__((packed)) CAFMarker {UInt32 mType;Float64 mFramePosition;UInt32 mMarkerID;CAF_SMPTE_Time mSMPTETime;UInt32 mChannel;};
struct __attribute__((packed)) CAFRegion {UInt32 mRegionID;CAFRegionFlags mFlags;UInt32 mNumberMarkers;CAFMarker mMarkers[1];};
struct MorxChain {MortSubtableMaskFlags defaultFlags;UInt32 length;UInt32 nFeatures;UInt32 nSubtables;MortFeatureEntry featureEntries[1];};
struct MorxTable {Fixed version;UInt32 nChains;MorxChain chains[1];};
typedef void UTextCopy(UText *, int64_t, int64_t, int64_t, UBool, UErrorCode *);
struct __siginfo {int si_signo;int si_errno;int si_code;pid_t si_pid;uid_t si_uid;int si_status;void *si_addr;sigval si_value;long long si_band;unsigned long long __pad[7];};
struct __attribute__((packed)) icmp6_hdr {u_int8_t icmp6_type;u_int8_t icmp6_code;u_int16_t icmp6_cksum;icmp6_hdr___D19D92B5F4F43A148CE7ABC3DA9CAAC9 icmp6_dataun;};
struct kauth_ace {guid_t ace_applicable;u_int32_t ace_flags;kauth_ace_rights_t ace_rights;};
struct mountbody {name ml_hostname;dirpath ml_directory;mountlist ml_next;};
struct nlm4_lock {char *caller_name;netobj fh;netobj oh;u_int32_t svid;u_int64_t l_offset;u_int64_t l_len;};
struct nlm_share {char *caller_name;netobj fh;netobj oh;fsh_mode mode;fsh_access access;};
struct sadb_sens {u_int16_t sadb_sens_len;u_int16_t sadb_sens_exttype;u_int32_t sadb_sens_dpd;u_int8_t sadb_sens_sens_level;u_int8_t sadb_sens_sens_len;u_int8_t sadb_sens_integ_level;u_int8_t sadb_sens_integ_len;u_int32_t sadb_sens_reserved;};
struct xsw_usage {u_int64_t xsu_total;u_int64_t xsu_avail;u_int64_t xsu_used;u_int32_t xsu_pagesize;boolean_t xsu_encrypted;};
struct ypreq_key {domainname domain;mapname map;keydat key;};
struct CIVector {NSObject super;size_t _count;_79F3AB6A34861CC03A68F8EA0BB70127 _u;};
struct NSThread {NSObject super;id _private;uint8_t _bytes[44];};
struct STHeader {UInt8 filler;STClass nClasses;UInt16 classTableOffset;UInt16 stateArrayOffset;UInt16 entryTableOffset;};
struct __ns_msg { u_char *_msg; u_char *_eom;u_int16_t _id;u_int16_t _flags;u_int16_t _counts[4]; u_char *_sections[4];res_9_ns_sect _sect;int _rrnum; u_char *_msg_ptr;};
struct _xmlNode {void *_private;xmlElementType type; xmlChar *name;_xmlNode *children;_xmlNode *last;_xmlNode *parent;_xmlNode *next;_xmlNode *prev;_xmlDoc *doc;xmlNs *ns;xmlChar *content;_xmlAttr *properties;xmlNs *nsDef;void *psvi;unsigned short line;unsigned short extra;};
struct attrlist {u_short bitmapcount;u_int16_t reserved;attrgroup_t commonattr;attrgroup_t volattr;attrgroup_t dirattr;attrgroup_t fileattr;attrgroup_t forkattr;};
struct fat_arch {cpu_type_t cputype;cpu_subtype_t cpusubtype;uint32_t offset;uint32_t size;uint32_t align;};
struct __attribute__((packed)) ip6_frag {u_int8_t ip6f_nxt;u_int8_t ip6f_reserved;u_int16_t ip6f_offlg;u_int32_t ip6f_ident;};
struct sadb_msg {u_int8_t sadb_msg_version;u_int8_t sadb_msg_type;u_int8_t sadb_msg_errno;u_int8_t sadb_msg_satype;u_int16_t sadb_msg_len;u_int16_t sadb_msg_reserved;u_int32_t sadb_msg_seq;u_int32_t sadb_msg_pid;};
struct vfsidctl {int vc_vers;fsid_t vc_fsid;void *vc_ptr;size_t vc_len;u_int32_t vc_spare[12];};
struct NSError {NSObject super;void *_reserved;NSInteger _code;NSString *_domain;NSDictionary *_userInfo;};
struct _ftsent {_ftsent *fts_cycle;_ftsent *fts_parent;_ftsent *fts_link;long long fts_number;void *fts_pointer;char *fts_accpath;char *fts_path;int fts_errno;int fts_symfd;unsigned short fts_pathlen;unsigned short fts_namelen;ino_t fts_ino;dev_t fts_dev;nlink_t fts_nlink;short fts_level;unsigned short fts_info;unsigned short fts_flags;unsigned short fts_instr;stat *fts_statp;char fts_name[1];};
struct if_data {u_char ifi_type;u_char ifi_typelen;u_char ifi_physical;u_char ifi_addrlen;u_char ifi_hdrlen;u_char ifi_recvquota;u_char ifi_xmitquota;u_char ifi_unused1;u_int32_t ifi_mtu;u_int32_t ifi_metric;u_int32_t ifi_baudrate;u_int32_t ifi_ipackets;u_int32_t ifi_ierrors;u_int32_t ifi_opackets;u_int32_t ifi_oerrors;u_int32_t ifi_collisions;u_int32_t ifi_ibytes;u_int32_t ifi_obytes;u_int32_t ifi_imcasts;u_int32_t ifi_omcasts;u_int32_t ifi_iqdrops;u_int32_t ifi_noproto;u_int32_t ifi_recvtiming;u_int32_t ifi_xmittiming;timeval32 ifi_lastchange;u_int32_t ifi_unused2;u_int32_t ifi_hwassist;u_int32_t ifi_reserved1;u_int32_t ifi_reserved2;};
struct sadb_sa {u_int16_t sadb_sa_len;u_int16_t sadb_sa_exttype;u_int32_t sadb_sa_spi;u_int8_t sadb_sa_replay;u_int8_t sadb_sa_state;u_int8_t sadb_sa_auth;u_int8_t sadb_sa_encrypt;u_int32_t sadb_sa_flags;};
struct termios {tcflag_t c_iflag;tcflag_t c_oflag;tcflag_t c_cflag;tcflag_t c_lflag;cc_t c_cc[20];speed_t c_ispeed;speed_t c_ospeed;};
struct _ucred {int32_t cr_ref;uid_t cr_uid;short cr_ngroups;gid_t cr_groups[16];};
struct dirent {__uint64_t d_ino;__uint64_t d_seekoff;__uint16_t d_reclen;__uint16_t d_namlen;__uint8_t d_type;char d_name[1024];};
struct passwd {char *pw_name;char *pw_passwd;uid_t pw_uid;gid_t pw_gid;__darwin_time_t pw_change;char *pw_class;char *pw_gecos;char *pw_dir;char *pw_shell;__darwin_time_t pw_expire;};
struct xucred {u_int cr_version;uid_t cr_uid;short cr_ngroups;gid_t cr_groups[16];};
struct MPOOL {MPOOL___lqh lqh;MPOOL___hqh hqh[128];pgno_t curcache;pgno_t maxcache;pgno_t npages;unsigned long long pagesize;int fd;void (*pgin)(void *, pgno_t, void *);void (*pgout)(void *, pgno_t, void *);void *pgcookie;};
struct aiocb {int aio_fildes;off_t aio_offset;void *aio_buf;size_t aio_nbytes;int aio_reqprio;sigevent aio_sigevent;int aio_lio_opcode;};
struct utmpx {char ut_user[256];char ut_id[4];char ut_line[32];pid_t ut_pid;short ut_type;timeval ut_tv;char ut_host[256];__uint32_t ut_pad[16];};
struct AUTH {opaque_auth ah_cred;opaque_auth ah_verf;des_block ah_key;AUTH__auth_ops *ah_ops;caddr_t ah_private;};
struct _bkt {_bkt___880F21833111A601F09DBE5770BB9990 hq;_bkt___880F21833111A601F09DBE5770BB9990 q;void *page;pgno_t pgno;u_int8_t flags;};
struct ip {unsigned int ip_hl : 4;unsigned int ip_v : 4;u_char ip_tos;u_short ip_len;u_short ip_id;u_short ip_off;u_char ip_ttl;u_char ip_p;u_short ip_sum;in_addr ip_src;in_addr ip_dst;};
union SparseIterativeMethod___55D3F39CA3A5B677629EB14D504DE9DB {_SparseIterativeMethodBaseOptions base;SparseCGOptions cg;SparseGMRESOptions gmres;SparseLSMROptions lsmr;char padding[256];};
struct std____1__moneypunct_byname_wchar_t__false__vtbl_layout; 
struct std____1__moneypunct_byname_wchar_t__true__vtbl_layout; 
struct std____1__moneypunct_byname_char__false__vtbl_layout; 
struct std____1__moneypunct_byname_char__true__vtbl_layout; 
struct std____1__moneypunct_wchar_t__false__vtbl_layout; 
struct std____1__moneypunct_byname_wchar_t__false__vtbl; 
struct std____1__moneypunct_wchar_t__true__vtbl_layout; 
struct std____1__moneypunct_byname_wchar_t__true__vtbl; 
struct std____1__time_get_byname_wchar_t__vtbl_layout; 
struct std____1__moneypunct_char__false__vtbl_layout; 
struct std____1__moneypunct_byname_char__false__vtbl; 
struct std____1__moneypunct_char__true__vtbl_layout; 
struct std____1__moneypunct_byname_char__true__vtbl; 
struct std____1__moneypunct_byname_wchar_t__false_ {std____1__moneypunct_byname_wchar_t__false___char_type __decimal_point_;std____1__moneypunct_byname_wchar_t__false___char_type __thousands_sep_;std____1__string __grouping_;std____1__moneypunct_byname_wchar_t__false___string_type __curr_symbol_;std____1__moneypunct_byname_wchar_t__false___string_type __positive_sign_;std____1__moneypunct_byname_wchar_t__false___string_type __negative_sign_;int __frac_digits_;std____1__moneypunct_byname__CharT___International___pattern __pos_format_;std____1__moneypunct_byname__CharT___International___pattern __neg_format_;};
struct std____1__time_get_byname_char__vtbl_layout; 
struct std____1__moneypunct_byname_wchar_t__true_ {std____1__moneypunct_byname_wchar_t__true___char_type __decimal_point_;std____1__moneypunct_byname_wchar_t__true___char_type __thousands_sep_;std____1__string __grouping_;std____1__moneypunct_byname_wchar_t__true___string_type __curr_symbol_;std____1__moneypunct_byname_wchar_t__true___string_type __positive_sign_;std____1__moneypunct_byname_wchar_t__true___string_type __negative_sign_;int __frac_digits_;std____1__moneypunct_byname__CharT___International___pattern __pos_format_;std____1__moneypunct_byname__CharT___International___pattern __neg_format_;};
struct std____1__moneypunct_wchar_t__false__vtbl; 
struct inpcb___63812C9EE20CEA811C29254429EC420D {u_int32_t inp6_options;u_int8_t inp6_hlim;u_int8_t unused_uint8_1;ushort unused_uint16_1;u_int32_t inp6_outputopts;u_int32_t inp6_moptions;u_int32_t inp6_icmp6filt;int inp6_cksum;u_short inp6_ifindex;short inp6_hops;};
struct std____1__moneypunct_wchar_t__true__vtbl; 
struct std____1__moneypunct_byname_char__false_ {std____1__moneypunct_byname_char__false___char_type __decimal_point_;std____1__moneypunct_byname_char__false___char_type __thousands_sep_;std____1__string __grouping_;std____1__moneypunct_byname_char__false___string_type __curr_symbol_;std____1__moneypunct_byname_char__false___string_type __positive_sign_;std____1__moneypunct_byname_char__false___string_type __negative_sign_;int __frac_digits_;std____1__moneypunct_byname__CharT___International___pattern __pos_format_;std____1__moneypunct_byname__CharT___International___pattern __neg_format_;};
struct std____1__moneypunct_byname_char__true_ {std____1__moneypunct_byname_char__true___char_type __decimal_point_;std____1__moneypunct_byname_char__true___char_type __thousands_sep_;std____1__string __grouping_;std____1__moneypunct_byname_char__true___string_type __curr_symbol_;std____1__moneypunct_byname_char__true___string_type __positive_sign_;std____1__moneypunct_byname_char__true___string_type __negative_sign_;int __frac_digits_;std____1__moneypunct_byname__CharT___International___pattern __pos_format_;std____1__moneypunct_byname__CharT___International___pattern __neg_format_;};
struct std____1__time_get_wchar_t__vtbl_layout; 
struct std____1__time_get_byname_wchar_t__vtbl; 
struct std____1__moneypunct_char__false__vtbl; 
struct std____1__moneypunct_char__true__vtbl; 
struct std____1__time_get_char__vtbl_layout; 
struct std____1__time_get_byname_char__vtbl; 
typedef OSStatus (*HostCallback_GetMusicalTimeLocation)(void *, UInt32 *, Float32 *, UInt32 *, Float64 *);
struct std____1__basic_stringbuf_wchar_t_ { std____1__basic_streambuf_wchar_t_ cppsuper0;std____1__basic_stringbuf_wchar_t___string_type __str_;std____1__basic_stringbuf_wchar_t___char_type *__hm_;std____1__ios_base__openmode __mode_;};
typedef void (*CFNetServiceMonitorClientCallBack)(CFNetServiceMonitorRef, CFNetServiceRef, CFNetServiceMonitorType, CFDataRef, CFStreamError *, void *);
typedef JSObjectRef (*JSObjectCallAsConstructorCallback)(JSContextRef, JSObjectRef, size_t, JSValueRef *       , JSValueRef *);
struct MIDIObjectAddRemoveNotification {MIDINotificationMessageID messageID;UInt32 messageSize;MIDIObjectRef parent;MIDIObjectType parentType;MIDIObjectRef child;MIDIObjectType childType;};
typedef ALvoid (*alcOutputCapturerPrepareProcPtr)(ALCuint, ALCenum, ALCsizei);
struct std____1__basic_stringbuf_char_ { std____1__basic_streambuf_char_ cppsuper0;std____1__basic_stringbuf_char___string_type __str_;std____1__basic_stringbuf_char___char_type *__hm_;std____1__ios_base__openmode __mode_;};
typedef JSValueRef (*JSObjectCallAsFunctionCallback)(JSContextRef, JSObjectRef, JSObjectRef, size_t, JSValueRef *       , JSValueRef *);
typedef char (*JSObjectDeletePropertyCallback)(JSContextRef, JSObjectRef, JSStringRef, JSValueRef *);
typedef ALenum (*alSourceAddNotificationProcPtr)(ALuint, ALuint, alSourceNotificationProc, ALvoid *);
typedef OSStatus (*AudioCodecGetPropertyInfoProc)(void *, AudioCodecPropertyID, UInt32 *, Boolean *);
typedef void (*AudioUnitPropertyListenerProc)(void *, AudioUnit, AudioUnitPropertyID, AudioUnitScope, AudioUnitElement);
struct CGDataProviderDirectCallbacks {unsigned int version;CGDataProviderGetBytePointerCallback getBytePointer;CGDataProviderReleaseBytePointerCallback releaseBytePointer;CGDataProviderGetBytesAtPositionCallback getBytesAtPosition;CGDataProviderReleaseInfoCallback releaseInfo;};
typedef void (*DNSServiceRegisterRecordReply)(DNSServiceRef, DNSRecordRef, DNSServiceFlags, DNSServiceErrorType, void *);
typedef JSValueRef (*JSObjectConvertToTypeCallback)(JSContextRef, JSObjectRef, JSType, JSValueRef *);
struct AudioStreamBasicDescription {Float64 mSampleRate;AudioFormatID mFormatID;AudioFormatFlags mFormatFlags;UInt32 mBytesPerPacket;UInt32 mFramesPerPacket;UInt32 mBytesPerFrame;UInt32 mChannelsPerFrame;UInt32 mBitsPerChannel;UInt32 mReserved;};
typedef JSValueRef (*JSObjectGetPropertyCallback)(JSContextRef, JSObjectRef, JSStringRef, JSValueRef *);
typedef char (*JSObjectSetPropertyCallback)(JSContextRef, JSObjectRef, JSStringRef, JSValueRef, JSValueRef *);
typedef xmlNsPtr (*xmlDOMWrapAcquireNsFunction)(xmlDOMWrapCtxtPtr, xmlNodePtr,  xmlChar *,  xmlChar *);
struct AUParameterAutomationEvent {uint64_t hostTime;AUParameterAddress address;AUValue value;AUParameterAutomationEventType eventType;uint64_t reserved;};
struct BNNSPoolingLayerParameters {size_t x_stride;size_t y_stride;size_t x_padding;size_t y_padding;size_t k_width;size_t k_height;size_t in_channels;size_t out_channels;BNNSPoolingFunction pooling_function;BNNSLayerData bias;BNNSActivation activation;};
typedef void (*DNSServiceGetAddrInfoReply)(DNSServiceRef, DNSServiceFlags, uint32_t, DNSServiceErrorType,  char *,  sockaddr *, uint32_t, void *);
struct CFNetServiceClientContext {CFIndex version;void *info;CFAllocatorRetainCallBack retain;CFAllocatorReleaseCallBack release;CFAllocatorCopyDescriptionCallBack copyDescription;};
typedef void (*DNSServiceDomainEnumReply)(DNSServiceRef, DNSServiceFlags, uint32_t, DNSServiceErrorType,  char *, void *);
typedef ALvoid (*alBufferDataStaticProcPtr)(ALint, ALenum,  ALvoid *, ALsizei, ALsizei);
struct gss_krb5_lucid_context_v1 {OM_uint32 version;OM_uint32 initiate;OM_uint32 endtime;OM_uint64 send_seq;OM_uint64 recv_seq;OM_uint32 protocol;gss_krb5_rfc1964_keydata_t rfc1964_kd;gss_krb5_cfx_keydata_t cfx_kd;};
typedef OSStatus (*MusicDeviceStopNoteProc)(void *, MusicDeviceGroupID, NoteInstanceID, UInt32);
struct dyld_kernel_image_info {uuid_t uuid;fsobj_id_t fsobjid;fsid_t fsid;uint64_t load_addr;};
struct BNNSNDArrayDescriptor {BNNSNDArrayFlags flags;BNNSDataLayout layout;size_t size[8];size_t stride[8];void *data;BNNSDataType data_type;void *table_data;BNNSDataType table_data_type;float data_scale;float data_bias;};
struct CFBinaryHeapCallBacks {CFIndex version; void *(*retain)(CFAllocatorRef,  void *);void (*release)(CFAllocatorRef,  void *);CFStringRef (*copyDescription)( void *);CFComparisonResult (*compare)( void *,  void *, void *);};
typedef void (*DNSServiceBrowseReply)(DNSServiceRef, DNSServiceFlags, uint32_t, DNSServiceErrorType,  char *,  char *,  char *, void *);
struct NSFileProviderService {NSObject super;NSFileProviderServiceName _name;id _endpointCreatingProxy;dispatch_group_t _requestFinishedGroup;};
struct _xmlParserInputBuffer {void *context;xmlInputReadCallback readcallback;xmlInputCloseCallback closecallback;xmlCharEncodingHandlerPtr encoder;xmlBufPtr buffer;xmlBufPtr raw;int compressed;int error;unsigned long long rawconsumed;};
struct AAAccessControlEntry {AAACETag tag;AAACEPermSet perms;AAACEFlagSet flags;AAACEQualifierType qualifier_type;};
struct CFStringInlineBuffer {UniChar buffer[64];CFStringRef theString; UniChar *directUniCharBuffer; char *directCStringBuffer;CFRange rangeToBuffer;CFIndex bufferedRangeStart;CFIndex bufferedRangeEnd;};
struct IUnknown_vtbl_layout; 
struct MIDIControlTransform {MIDITransformControlType controlType;MIDITransformControlType remappedControlType;UInt16 controlNumber;MIDITransformType transform;SInt16 param;};
struct mach_task_basic_info {mach_vm_size_t virtual_size;mach_vm_size_t resident_size;mach_vm_size_t resident_size_max;time_value_t user_time;time_value_t system_time;policy_t policy;integer_t suspend_count;};
struct task_basic_info_64_2 {integer_t suspend_count;mach_vm_size_t virtual_size;mach_vm_size_t resident_size;time_value_t user_time;time_value_t system_time;policy_t policy;};
struct CFHostClientContext {CFIndex version;void *info;CFAllocatorRetainCallBack retain;CFAllocatorReleaseCallBack release;CFAllocatorCopyDescriptionCallBack copyDescription;};
struct ExtendedNoteOnEvent {MusicDeviceInstrumentID instrumentID;MusicDeviceGroupID groupID;Float32 duration;MusicDeviceNoteParams extendedParams;};
struct MPSStateTextureInfo {NSUInteger width;NSUInteger height;NSUInteger depth;NSUInteger arrayLength;MTLPixelFormat pixelFormat;MTLTextureType textureType;MTLTextureUsage usage;NSUInteger _reserved[4];};
struct ipsec_wake_pkt_info {u_int8_t wake_pkt[100];uuid_string_t wake_uuid;u_int32_t wake_pkt_spi;u_int32_t wake_pkt_seq;u_int16_t wake_pkt_len;};
struct sfntVariationHeader {Fixed version;UInt16 offsetToData;UInt16 countSizePairs;UInt16 axisCount;UInt16 axisSize;UInt16 instanceCount;UInt16 instanceSize;sfntVariationAxis axis[1];sfntInstance instance[1];};
typedef void (*xlinkSimpleLinkFunk)(void *, xmlNodePtr,  xlinkHRef,  xlinkRole,  xlinkTitle);
struct AudioChannelLayout {AudioChannelLayoutTag mChannelLayoutTag;AudioChannelBitmap mChannelBitmap;UInt32 mNumberChannelDescriptions;AudioChannelDescription mChannelDescriptions[1];};
struct AudioUnitParameter {AudioUnit mAudioUnit;AudioUnitParameterID mParameterID;AudioUnitScope mScope;AudioUnitElement mElement;};
struct NSLinguisticTagger {NSObject super;NSArray *_schemes;NSUInteger _options;NSString *_string;id _orthographyArray;id _tokenArray;void *_reserved;};
struct axr_decoder_info_t {axr_data *data;uint32_t partIndex;axr_level_mode_t levelMode;uint32_t levelIndex;axr_size_t levelSize;axr_decoder_info_t___A147FA619674AD8F0C1DA22DD7FB259D subregion;};
struct __attribute__((packed)) icmp6_router_renum {icmp6_hdr rr_hdr;u_int8_t rr_segnum;u_int8_t rr_flags;u_int16_t rr_maxdelay;u_int32_t rr_reserved;};
struct task_basic_info_32 {integer_t suspend_count;natural_t virtual_size;natural_t resident_size;time_value_t user_time;time_value_t system_time;policy_t policy;};
struct task_basic_info_64 {integer_t suspend_count;mach_vm_size_t virtual_size;mach_vm_size_t resident_size;time_value_t user_time;time_value_t system_time;policy_t policy;};
struct AudioUnitProperty {AudioUnit mAudioUnit;AudioUnitPropertyID mPropertyID;AudioUnitScope mScope;AudioUnitElement mElement;};
struct GLKEffectProperty {NSObject super;GLint _location;GLchar *_nameString;GLKEffectPropertyPrvPtr _prv;};
struct proc_persona_info {uint64_t unique_pid;int32_t pid;uint32_t flags;uint32_t pidversion;uint32_t persona_id;uint32_t uid;uint32_t gid;uint8_t macho_uuid[16];};
struct HostCallbackInfo {void *hostUserData;HostCallback_GetBeatAndTempo beatAndTempoProc;HostCallback_GetMusicalTimeLocation musicalTimeLocationProc;HostCallback_GetTransportState transportStateProc;HostCallback_GetTransportState2 transportStateProc2;};
typedef void (*LPALCGETINTEGERV)(ALCdevice *, ALCenum, ALCsizei, ALCint *);
typedef UBool UEnumCharNamesFn(void *, UChar32, UCharNameChoice,  char *, int32_t);
struct _xmlOutputBuffer {void *context;xmlOutputWriteCallback writecallback;xmlOutputCloseCallback closecallback;xmlCharEncodingHandlerPtr encoder;xmlBufPtr buffer;xmlBufPtr conv;int written;int error;};
struct GLKSkyboxEffect {NSObject super;GLKVector3 _center;GLfloat _xSize;GLfloat _ySize;GLfloat _zSize;GLKEffectPropertyTexture *_textureCubeMap;GLKEffectPropertyTransform *_transform;NSString *_label;};
struct NSMetadataQuery {NSObject super;NSUInteger _flags;NSTimeInterval _interval;id _private[11];void *_reserved;};
struct kmod_info_32_v1 {uint32_t next_addr;int32_t info_version;uint32_t id;uint8_t name[64];uint8_t version[64];int32_t reference_count;uint32_t reference_list_addr;uint32_t address;uint32_t size;uint32_t hdr_size;uint32_t start_addr;uint32_t stop_addr;};
struct task_basic_info {integer_t suspend_count;vm_size_t virtual_size;vm_size_t resident_size;time_value_t user_time;time_value_t system_time;policy_t policy;};
typedef void (*LPALBUFFERDATA)(ALuint, ALenum,  ALvoid *, ALsizei, ALsizei);
struct ParameterEvent {AudioUnitParameterID parameterID;AudioUnitScope scope;AudioUnitElement element;AudioUnitParameterValue value;};
struct vm_info_object {natural_t vio_object;natural_t vio_size;unsigned int vio_ref_count;unsigned int vio_resident_page_count;unsigned int vio_absent_count;natural_t vio_copy;natural_t vio_shadow;natural_t vio_shadow_offset;natural_t vio_paging_offset;memory_object_copy_strategy_t vio_copy_strategy;vm_offset_t vio_last_alloc;unsigned int vio_paging_in_progress;boolean_t vio_pager_created;boolean_t vio_pager_initialized;boolean_t vio_pager_ready;boolean_t vio_can_persist;boolean_t vio_internal;boolean_t vio_temporary;boolean_t vio_alive;boolean_t vio_purgable;boolean_t vio_purgable_volatile;};
struct vm_info_region {natural_t vir_start;natural_t vir_end;natural_t vir_object;natural_t vir_offset;boolean_t vir_needs_copy;vm_prot_t vir_protection;vm_prot_t vir_max_protection;vm_inherit_t vir_inheritance;natural_t vir_wired_count;natural_t vir_user_wired_count;};
struct CFTreeContext {CFIndex version;void *info;CFTreeRetainCallBack retain;CFTreeReleaseCallBack release;CFTreeCopyDescriptionCallBack copyDescription;};
struct IUnknown_vtbl; 
struct NSFileVersion {NSObject super;NSURL *_fileURL;id _addition;id _deadVersionIdentifier;id _nonLocalVersion;NSURL *_contentsURL;BOOL _isBackup;NSString *_localizedName;NSString *_localizedComputerName;NSDate *_modificationDate;BOOL _isResolved;BOOL _contentsURLIsAccessed;id _reserved;NSString *_name;};
struct fssearchblock {attrlist *returnattrs;void *returnbuffer;size_t returnbuffersize;u_long maxmatches;timeval timelimit;void *searchparams1;size_t sizeofsearchparams1;void *searchparams2;size_t sizeofsearchparams2;attrlist searchattrs;};
struct IUnknownVTbl {void *_reserved;HRESULT (*QueryInterface)(void *, REFIID, LPVOID *);ULONG (*AddRef)(void *);ULONG (*Release)(void *);};
struct NSExpression {NSObject super;_expressionFlags _expressionFlags;uint32_t reserved;NSExpressionType _expressionType;};
typedef int32_t UTextExtract(UText *, int64_t, int64_t, UChar *, int32_t, UErrorCode *);
typedef int32_t UTextReplace(UText *, int64_t, int64_t,  UChar *, int32_t, UErrorCode *);
struct AUMIDIEvent {AURenderEvent *next;AUEventSampleTime eventSampleTime;AURenderEventType eventType;uint8_t reserved;uint16_t length;uint8_t cable;uint8_t data[3];};
struct _RuneLocale {char __magic[8];char __encoding[32];__darwin_rune_t (*__sgetrune)( char *, __darwin_size_t,  char **);int (*__sputrune)(__darwin_rune_t, char *, __darwin_size_t, char **);__darwin_rune_t __invalid_rune;__uint32_t __runetype[256];__darwin_rune_t __maplower[256];__darwin_rune_t __mapupper[256];_RuneRange __runetype_ext;_RuneRange __maplower_ext;_RuneRange __mapupper_ext;void *__variable;int __variable_len;int __ncharclasses;_RuneCharClass *__charclasses;};
struct fat_arch_64 {cpu_type_t cputype;cpu_subtype_t cpusubtype;uint64_t offset;uint64_t size;uint32_t align;uint32_t reserved;};
struct sockaddr_in {__uint8_t sin_len;sa_family_t sin_family;in_port_t sin_port;in_addr sin_addr;char sin_zero[8];};
struct __attribute__((packed)) sockaddr_vm {__uint8_t svm_len;sa_family_t svm_family;__uint16_t svm_reserved1;__uint32_t svm_port;__uint32_t svm_cid;};
struct ypmap_parms {domainname domain;mapname map;u_int ordernum;peername peer;};
struct NSMachPort {NSPort super;id _delegate;NSUInteger _flags;uint32_t _machPort;NSUInteger _reserved;};
struct EASession {NSObject super;EAAccessory *_accessory;uint32_t _sessionID;NSString *_protocolString;NSInputStream *_inputStream;NSOutputStream *_outputStream;BOOL _openCompleted;};
struct MortChain {MortSubtableMaskFlags defaultFlags;UInt32 length;UInt16 nFeatures;UInt16 nSubtables;MortFeatureEntry featureEntries[1];};
struct SMPTETime {SInt16 mSubframes;SInt16 mSubframeDivisor;UInt32 mCounter;SMPTETimeType mType;SMPTETimeFlags mFlags;SInt16 mHours;SInt16 mMinutes;SInt16 mSeconds;SInt16 mFrames;};
struct if_data64 {u_char ifi_type;u_char ifi_typelen;u_char ifi_physical;u_char ifi_addrlen;u_char ifi_hdrlen;u_char ifi_recvquota;u_char ifi_xmitquota;u_char ifi_unused1;u_int32_t ifi_mtu;u_int32_t ifi_metric;u_int64_t ifi_baudrate;u_int64_t ifi_ipackets;u_int64_t ifi_ierrors;u_int64_t ifi_opackets;u_int64_t ifi_oerrors;u_int64_t ifi_collisions;u_int64_t ifi_ibytes;u_int64_t ifi_obytes;u_int64_t ifi_imcasts;u_int64_t ifi_omcasts;u_int64_t ifi_iqdrops;u_int64_t ifi_noproto;u_int32_t ifi_recvtiming;u_int32_t ifi_xmittiming;timeval32 ifi_lastchange;};
struct sadb_comb {u_int8_t sadb_comb_auth;u_int8_t sadb_comb_encrypt;u_int16_t sadb_comb_flags;u_int16_t sadb_comb_auth_minbits;u_int16_t sadb_comb_auth_maxbits;u_int16_t sadb_comb_encrypt_minbits;u_int16_t sadb_comb_encrypt_maxbits;u_int32_t sadb_comb_reserved;u_int32_t sadb_comb_soft_allocations;u_int32_t sadb_comb_hard_allocations;u_int64_t sadb_comb_soft_bytes;u_int64_t sadb_comb_hard_bytes;u_int64_t sadb_comb_soft_addtime;u_int64_t sadb_comb_hard_addtime;u_int64_t sadb_comb_soft_usetime;u_int64_t sadb_comb_hard_usetime;};
struct _xmlAttr {void *_private;xmlElementType type; xmlChar *name;_xmlNode *children;_xmlNode *last;_xmlNode *parent;_xmlAttr *next;_xmlAttr *prev;_xmlDoc *doc;xmlNs *ns;xmlAttributeType atype;void *psvi;};
struct ipc_perm {uid_t uid;gid_t gid;uid_t cuid;gid_t cgid;mode_t mode;unsigned short _seq;key_t _key;};
struct nlist_64 {nlist_64___4D543BF749BB09F4875D250FEC3C43C7 n_un;uint8_t n_type;uint8_t n_sect;uint16_t n_desc;uint64_t n_value;};
struct __ns_rr {char name[1025];u_int16_t type;u_int16_t rr_class;u_int32_t ttl;u_int16_t rdlength; u_char *rdata;};
struct CMTime {CMTimeValue value;CMTimeScale timescale;CMTimeFlags flags;CMTimeEpoch epoch;};
struct XML_cp {XML_Content_Type type;XML_Content_Quant quant;XML_Char *name;unsigned int numchildren;XML_Content *children;};
struct UText {uint32_t magic;int32_t flags;int32_t providerProperties;int32_t sizeOfStruct;int64_t chunkNativeLimit;int32_t extraSize;int32_t nativeIndexingLimit;int64_t chunkNativeStart;int32_t chunkOffset;int32_t chunkLength; UChar *chunkContents; UTextFuncs *pFuncs;void *pExtra; void *context; void *p; void *q; void *r;void *privP;int64_t a;int32_t b;int32_t c;int64_t privA;int32_t privB;int32_t privC;};
struct nlist {nlist___4D543BF749BB09F4875D250FEC3C43C7 n_un;uint8_t n_type;uint8_t n_sect;int16_t n_desc;uint32_t n_value;};
union ifreq___E0FC42874A550D533741D474A8188B08 {sockaddr ifru_addr;sockaddr ifru_dstaddr;sockaddr ifru_broadaddr;short ifru_flags;int ifru_metric;int ifru_mtu;int ifru_phys;int ifru_media;int ifru_intval;caddr_t ifru_data;ifdevmtu ifru_devmtu;ifkpi ifru_kpi;u_int32_t ifru_wake_flags;u_int32_t ifru_route_refcnt;int ifru_cap[2];u_int32_t ifru_functional_type;};
struct MIDIObjectPropertyChangeNotification {MIDINotificationMessageID messageID;UInt32 messageSize;MIDIObjectRef object;MIDIObjectType objectType;CFStringRef propertyName;};
struct SparseOpaqueSymbolicFactorization {SparseStatus_t status;int rowCount;int columnCount;SparseAttributes_t attributes;uint8_t blockSize;SparseFactorization_t type;void *factorization;size_t workspaceSize_Float;size_t workspaceSize_Double;size_t factorSize_Float;size_t factorSize_Double;};
struct MTAudioProcessingTapCallbacks {int version;void *clientInfo;MTAudioProcessingTapInitCallback init;MTAudioProcessingTapFinalizeCallback finalize;MTAudioProcessingTapPrepareCallback prepare;MTAudioProcessingTapUnprepareCallback unprepare;MTAudioProcessingTapProcessCallback process;};
struct CFDictionaryValueCallBacks {CFIndex version;CFDictionaryRetainCallBack retain;CFDictionaryReleaseCallBack release;CFDictionaryCopyDescriptionCallBack copyDescription;CFDictionaryEqualCallBack equal;};
typedef void (*DNSServiceQueryRecordReply)(DNSServiceRef, DNSServiceFlags, uint32_t, DNSServiceErrorType,  char *, uint16_t, uint16_t, uint16_t,  void *, uint32_t, void *);
typedef OSStatus (*AudioUnitGetParameterProc)(void *, AudioUnitParameterID, AudioUnitScope, AudioUnitElement, AudioUnitParameterValue *);
typedef OSStatus (*AudioUnitGetPropertyProc)(void *, AudioUnitPropertyID, AudioUnitScope, AudioUnitElement, void *, UInt32 *);
typedef OSStatus (*AudioUnitSetPropertyProc)(void *, AudioUnitPropertyID, AudioUnitScope, AudioUnitElement,  void *, UInt32);
struct GLKEffectPropertyTexture {GLKEffectProperty super;GLboolean _enabled;GLuint _name;GLKTextureTarget _target;GLKTextureEnvMode _envMode;};
union KerxFormatSpecificHeader {KerxOrderedListHeader orderedList;KerxStateHeader stateTable;KerxSimpleArrayHeader simpleArray;KerxIndexArrayHeader indexArray;KerxControlPointHeader controlPoint;};
typedef OSStatus (*MusicDeviceStartNoteProc)(void *, MusicDeviceInstrumentID, MusicDeviceGroupID, NoteInstanceID *, UInt32,  MusicDeviceNoteParams *);
struct dyld_kernel_process_info {dyld_kernel_image_info cache_image_info;uint64_t timestamp;uint32_t imageCount;uint32_t initialImageCount;uint8_t dyldState;boolean_t no_cache;boolean_t private_cache;};
typedef void (*xlinkExtendedLinkSetFunk)(void *, xmlNodePtr, int,  xlinkHRef *,  xlinkRole *, int,  xlinkTitle *,  xmlChar **);
struct vm_region_basic_info_64 {vm_prot_t protection;vm_prot_t max_protection;vm_inherit_t inheritance;boolean_t shared;boolean_t reserved;memory_object_offset_t offset;vm_behavior_t behavior;unsigned short user_wired_count;};
struct CTRunDelegateCallbacks {CFIndex version;CTRunDelegateDeallocateCallback dealloc;CTRunDelegateGetAscentCallback getAscent;CTRunDelegateGetDescentCallback getDescent;CTRunDelegateGetWidthCallback getWidth;};
typedef void (*DNSServiceResolveReply)(DNSServiceRef, DNSServiceFlags, uint32_t, DNSServiceErrorType,  char *,  char *, uint16_t, uint16_t,  unsigned char *, void *);
struct GLKEffectPropertyLight {GLKEffectProperty super;GLboolean _enabled;GLKVector4 _position;GLKVector4 _ambientColor;GLKVector4 _diffuseColor;GLKVector4 _specularColor;GLKVector3 _spotDirection;GLfloat _spotExponent;GLfloat _spotCutoff;GLfloat _constantAttenuation;GLfloat _linearAttenuation;GLfloat _quadraticAttenuation;GLKEffectPropertyTransform *_transform;};
typedef ALCdevice *(*LPALCCAPTUREOPENDEVICE)( ALCchar *, ALCuint, ALCenum, ALCsizei);
struct _xmlXPathParserContext { xmlChar *cur; xmlChar *base;int error;xmlXPathContextPtr context;xmlXPathObjectPtr value;int valueNr;int valueMax;xmlXPathObjectPtr *valueTab;xmlXPathCompExprPtr comp;int xptr;xmlNodePtr ancestor;int valueFrame;};
struct GLKEffectPropertyFog {GLKEffectProperty super;GLboolean _enabled;GLint _mode;GLKVector4 _color;GLfloat _density;GLfloat _start;GLfloat _end;};
struct sqlite3_api_routines {void *(*aggregate_context)(sqlite3_context *, int);int (*aggregate_count)(sqlite3_context *);int (*bind_blob)(sqlite3_stmt *, int,  void *, int, void (*)(void *));int (*bind_double)(sqlite3_stmt *, int, double);int (*bind_int)(sqlite3_stmt *, int, int);int (*bind_int64)(sqlite3_stmt *, int, sqlite_int64);int (*bind_null)(sqlite3_stmt *, int);int (*bind_parameter_count)(sqlite3_stmt *);int (*bind_parameter_index)(sqlite3_stmt *,  char *); char *(*bind_parameter_name)(sqlite3_stmt *, int);int (*bind_text)(sqlite3_stmt *, int,  char *, int, void (*)(void *));int (*bind_text16)(sqlite3_stmt *, int,  void *, int, void (*)(void *));int (*bind_value)(sqlite3_stmt *, int,  sqlite3_value *);int (*busy_handler)(sqlite3 *, int (*)(void *, int), void *);int (*busy_timeout)(sqlite3 *, int);int (*changes)(sqlite3 *);int (*close)(sqlite3 *);int (*collation_needed)(sqlite3 *, void *, void (*)(void *, sqlite3 *, int,  char *));int (*collation_needed16)(sqlite3 *, void *, void (*)(void *, sqlite3 *, int,  void *)); void *(*column_blob)(sqlite3_stmt *, int);int (*column_bytes)(sqlite3_stmt *, int);int (*column_bytes16)(sqlite3_stmt *, int);int (*column_count)(sqlite3_stmt *); char *(*column_database_name)(sqlite3_stmt *, int); void *(*column_database_name16)(sqlite3_stmt *, int); char *(*column_decltype)(sqlite3_stmt *, int); void *(*column_decltype16)(sqlite3_stmt *, int);double (*column_double)(sqlite3_stmt *, int);int (*column_int)(sqlite3_stmt *, int);sqlite_int64 (*column_int64)(sqlite3_stmt *, int); char *(*column_name)(sqlite3_stmt *, int); void *(*column_name16)(sqlite3_stmt *, int); char *(*column_origin_name)(sqlite3_stmt *, int); void *(*column_origin_name16)(sqlite3_stmt *, int); char *(*column_table_name)(sqlite3_stmt *, int); void *(*column_table_name16)(sqlite3_stmt *, int); unsigned char *(*column_text)(sqlite3_stmt *, int); void *(*column_text16)(sqlite3_stmt *, int);int (*column_type)(sqlite3_stmt *, int);sqlite3_value *(*column_value)(sqlite3_stmt *, int);void *(*commit_hook)(sqlite3 *, int (*)(void *), void *);int (*complete)( char *);int (*complete16)( void *);int (*create_collation)(sqlite3 *,  char *, int, void *, int (*)(void *, int,  void *, int,  void *));int (*create_collation16)(sqlite3 *,  void *, int, void *, int (*)(void *, int,  void *, int,  void *));int (*create_function)(sqlite3 *,  char *, int, int, void *, void (*)(sqlite3_context *, int, sqlite3_value **), void (*)(sqlite3_context *, int, sqlite3_value **), void (*)(sqlite3_context *));int (*create_function16)(sqlite3 *,  void *, int, int, void *, void (*)(sqlite3_context *, int, sqlite3_value **), void (*)(sqlite3_context *, int, sqlite3_value **), void (*)(sqlite3_context *));int (*create_module)(sqlite3 *,  char *,  sqlite3_module *, void *);int (*data_count)(sqlite3_stmt *);sqlite3 *(*db_handle)(sqlite3_stmt *);int (*declare_vtab)(sqlite3 *,  char *);int (*enable_shared_cache)(int);int (*errcode)(sqlite3 *); char *(*errmsg)(sqlite3 *); void *(*errmsg16)(sqlite3 *);int (*exec)(sqlite3 *,  char *, sqlite3_callback, void *, char **);int (*expired)(sqlite3_stmt *);int (*finalize)(sqlite3_stmt *);void (*free)(void *);void (*free_table)(char **);int (*get_autocommit)(sqlite3 *);void *(*get_auxdata)(sqlite3_context *, int);int (*get_table)(sqlite3 *,  char *, char ***, int *, int *, char **);int (*global_recover)(void);void (*interruptx)(sqlite3 *);sqlite_int64 (*last_insert_rowid)(sqlite3 *); char *(*libversion)(void);int (*libversion_number)(void);void *(*malloc)(int);char *(*mprintf)( char *, ...);int (*open)( char *, sqlite3 **);int (*open16)( void *, sqlite3 **);int (*prepare)(sqlite3 *,  char *, int, sqlite3_stmt **,  char **);int (*prepare16)(sqlite3 *,  void *, int, sqlite3_stmt **,  void **);void *(*profile)(sqlite3 *, void (*)(void *,  char *, sqlite_uint64), void *);void (*progress_handler)(sqlite3 *, int, int (*)(void *), void *);void *(*realloc)(void *, int);int (*reset)(sqlite3_stmt *);void (*result_blob)(sqlite3_context *,  void *, int, void (*)(void *));void (*result_double)(sqlite3_context *, double);void (*result_error)(sqlite3_context *,  char *, int);void (*result_error16)(sqlite3_context *,  void *, int);void (*result_int)(sqlite3_context *, int);void (*result_int64)(sqlite3_context *, sqlite_int64);void (*result_null)(sqlite3_context *);void (*result_text)(sqlite3_context *,  char *, int, void (*)(void *));void (*result_text16)(sqlite3_context *,  void *, int, void (*)(void *));void (*result_text16be)(sqlite3_context *,  void *, int, void (*)(void *));void (*result_text16le)(sqlite3_context *,  void *, int, void (*)(void *));void (*result_value)(sqlite3_context *, sqlite3_value *);void *(*rollback_hook)(sqlite3 *, void (*)(void *), void *);int (*set_authorizer)(sqlite3 *, int (*)(void *, int,  char *,  char *,  char *,  char *), void *);void (*set_auxdata)(sqlite3_context *, int, void *, void (*)(void *));char *(*xsnprintf)(int, char *,  char *, ...);int (*step)(sqlite3_stmt *);int (*table_column_metadata)(sqlite3 *,  char *,  char *,  char *,  char **,  char **, int *, int *, int *);void (*thread_cleanup)(void);int (*total_changes)(sqlite3 *);void *(*trace)(sqlite3 *, void (*)(void *,  char *), void *);int (*transfer_bindings)(sqlite3_stmt *, sqlite3_stmt *);void *(*update_hook)(sqlite3 *, void (*)(void *, int,  char *,  char *, sqlite_int64), void *);void *(*user_data)(sqlite3_context *); void *(*value_blob)(sqlite3_value *);int (*value_bytes)(sqlite3_value *);int (*value_bytes16)(sqlite3_value *);double (*value_double)(sqlite3_value *);int (*value_int)(sqlite3_value *);sqlite_int64 (*value_int64)(sqlite3_value *);int (*value_numeric_type)(sqlite3_value *); unsigned char *(*value_text)(sqlite3_value *); void *(*value_text16)(sqlite3_value *); void *(*value_text16be)(sqlite3_value *); void *(*value_text16le)(sqlite3_value *);int (*value_type)(sqlite3_value *);char *(*vmprintf)( char *, va_list);int (*overload_function)(sqlite3 *,  char *, int);int (*prepare_v2)(sqlite3 *,  char *, int, sqlite3_stmt **,  char **);int (*prepare16_v2)(sqlite3 *,  void *, int, sqlite3_stmt **,  void **);int (*clear_bindings)(sqlite3_stmt *);int (*create_module_v2)(sqlite3 *,  char *,  sqlite3_module *, void *, void (*)(void *));int (*bind_zeroblob)(sqlite3_stmt *, int, int);int (*blob_bytes)(sqlite3_blob *);int (*blob_close)(sqlite3_blob *);int (*blob_open)(sqlite3 *,  char *,  char *,  char *, sqlite3_int64, int, sqlite3_blob **);int (*blob_read)(sqlite3_blob *, void *, int, int);int (*blob_write)(sqlite3_blob *,  void *, int, int);int (*create_collation_v2)(sqlite3 *,  char *, int, void *, int (*)(void *, int,  void *, int,  void *), void (*)(void *));int (*file_control)(sqlite3 *,  char *, int, void *);sqlite3_int64 (*memory_highwater)(int);sqlite3_int64 (*memory_used)(void);sqlite3_mutex *(*mutex_alloc)(int);void (*mutex_enter)(sqlite3_mutex *);void (*mutex_free)(sqlite3_mutex *);void (*mutex_leave)(sqlite3_mutex *);int (*mutex_try)(sqlite3_mutex *);int (*open_v2)( char *, sqlite3 **, int,  char *);int (*release_memory)(int);void (*result_error_nomem)(sqlite3_context *);void (*result_error_toobig)(sqlite3_context *);int (*sleep)(int);void (*soft_heap_limit)(int);sqlite3_vfs *(*vfs_find)( char *);int (*vfs_register)(sqlite3_vfs *, int);int (*vfs_unregister)(sqlite3_vfs *);int (*xthreadsafe)(void);void (*result_zeroblob)(sqlite3_context *, int);void (*result_error_code)(sqlite3_context *, int);int (*test_control)(int, ...);void (*randomness)(int, void *);sqlite3 *(*context_db_handle)(sqlite3_context *);int (*extended_result_codes)(sqlite3 *, int);int (*limit)(sqlite3 *, int, int);sqlite3_stmt *(*next_stmt)(sqlite3 *, sqlite3_stmt *); char *(*sql)(sqlite3_stmt *);int (*status)(int, int *, int *, int);int (*backup_finish)(sqlite3_backup *);sqlite3_backup *(*backup_init)(sqlite3 *,  char *, sqlite3 *,  char *);int (*backup_pagecount)(sqlite3_backup *);int (*backup_remaining)(sqlite3_backup *);int (*backup_step)(sqlite3_backup *, int); char *(*compileoption_get)(int);int (*compileoption_used)( char *);int (*create_function_v2)(sqlite3 *,  char *, int, int, void *, void (*)(sqlite3_context *, int, sqlite3_value **), void (*)(sqlite3_context *, int, sqlite3_value **), void (*)(sqlite3_context *), void (*)(void *));int (*db_config)(sqlite3 *, int, ...);sqlite3_mutex *(*db_mutex)(sqlite3 *);int (*db_status)(sqlite3 *, int, int *, int *, int);int (*extended_errcode)(sqlite3 *);void (*log)(int,  char *, ...);sqlite3_int64 (*soft_heap_limit64)(sqlite3_int64); char *(*sourceid)(void);int (*stmt_status)(sqlite3_stmt *, int, int);int (*strnicmp)( char *,  char *, int);int (*unlock_notify)(sqlite3 *, void (*)(void **, int), void *);int (*wal_autocheckpoint)(sqlite3 *, int);int (*wal_checkpoint)(sqlite3 *,  char *);void *(*wal_hook)(sqlite3 *, int (*)(void *, sqlite3 *,  char *, int), void *);int (*blob_reopen)(sqlite3_blob *, sqlite3_int64);int (*vtab_config)(sqlite3 *, int, ...);int (*vtab_on_conflict)(sqlite3 *);int (*close_v2)(sqlite3 *); char *(*db_filename)(sqlite3 *,  char *);int (*db_readonly)(sqlite3 *,  char *);int (*db_release_memory)(sqlite3 *); char *(*errstr)(int);int (*stmt_busy)(sqlite3_stmt *);int (*stmt_readonly)(sqlite3_stmt *);int (*stricmp)( char *,  char *);int (*uri_boolean)( char *,  char *, int);sqlite3_int64 (*uri_int64)( char *,  char *, sqlite3_int64); char *(*uri_parameter)( char *,  char *);char *(*xvsnprintf)(int, char *,  char *, va_list);int (*wal_checkpoint_v2)(sqlite3 *,  char *, int, int *, int *);int (*auto_extension)(void (*)(void));int (*bind_blob64)(sqlite3_stmt *, int,  void *, sqlite3_uint64, void (*)(void *));int (*bind_text64)(sqlite3_stmt *, int,  char *, sqlite3_uint64, void (*)(void *), unsigned char);int (*cancel_auto_extension)(void (*)(void));int (*load_extension)(sqlite3 *,  char *,  char *, char **);void *(*malloc64)(sqlite3_uint64);sqlite3_uint64 (*msize)(void *);void *(*realloc64)(void *, sqlite3_uint64);void (*reset_auto_extension)(void);void (*result_blob64)(sqlite3_context *,  void *, sqlite3_uint64, void (*)(void *));void (*result_text64)(sqlite3_context *,  char *, sqlite3_uint64, void (*)(void *), unsigned char);int (*strglob)( char *,  char *);sqlite3_value *(*value_dup)( sqlite3_value *);void (*value_free)(sqlite3_value *);int (*result_zeroblob64)(sqlite3_context *, sqlite3_uint64);int (*bind_zeroblob64)(sqlite3_stmt *, int, sqlite3_uint64);unsigned int (*value_subtype)(sqlite3_value *);void (*result_subtype)(sqlite3_context *, unsigned int);int (*status64)(int, sqlite3_int64 *, sqlite3_int64 *, int);int (*strlike)( char *,  char *, unsigned int);int (*db_cacheflush)(sqlite3 *);int (*system_errno)(sqlite3 *);int (*trace_v2)(sqlite3 *, unsigned int, int (*)(unsigned int, void *, void *, void *), void *);char *(*expanded_sql)(sqlite3_stmt *);void (*set_last_insert_rowid)(sqlite3 *, sqlite3_int64);int (*prepare_v3)(sqlite3 *,  char *, int, unsigned int, sqlite3_stmt **,  char **);int (*prepare16_v3)(sqlite3 *,  void *, int, unsigned int, sqlite3_stmt **,  void **);int (*bind_pointer)(sqlite3_stmt *, int, void *,  char *, void (*)(void *));void (*result_pointer)(sqlite3_context *, void *,  char *, void (*)(void *));void *(*value_pointer)(sqlite3_value *,  char *);int (*vtab_nochange)(sqlite3_context *);int (*value_nochange)(sqlite3_value *); char *(*vtab_collation)(sqlite3_index_info *, int);int (*keyword_count)(void);int (*keyword_name)(int,  char **, int *);int (*keyword_check)( char *, int);sqlite3_str *(*str_new)(sqlite3 *);char *(*str_finish)(sqlite3_str *);void (*str_appendf)(sqlite3_str *,  char *, ...);void (*str_vappendf)(sqlite3_str *,  char *, va_list);void (*str_append)(sqlite3_str *,  char *, int);void (*str_appendall)(sqlite3_str *,  char *);void (*str_appendchar)(sqlite3_str *, int, char);void (*str_reset)(sqlite3_str *);int (*str_errcode)(sqlite3_str *);int (*str_length)(sqlite3_str *);char *(*str_value)(sqlite3_str *);int (*create_window_function)(sqlite3 *,  char *, int, int, void *, void (*)(sqlite3_context *, int, sqlite3_value **), void (*)(sqlite3_context *), void (*)(sqlite3_context *), void (*)(sqlite3_context *, int, sqlite3_value **), void (*)(void *)); char *(*normalized_sql)(sqlite3_stmt *);int (*stmt_isexplain)(sqlite3_stmt *);int (*value_frombind)(sqlite3_value *);int (*drop_modules)(sqlite3 *,  char **);sqlite3_int64 (*hard_heap_limit64)(sqlite3_int64); char *(*uri_key)( char *, int); char *(*filename_database)( char *); char *(*filename_journal)( char *); char *(*filename_wal)( char *);char *(*create_filename)( char *,  char *,  char *, int,  char **);void (*free_filename)(char *);sqlite3_file *(*database_file_object)( char *);};
struct vImage_CGImageFormat {uint32_t bitsPerComponent;uint32_t bitsPerPixel;CGColorSpaceRef colorSpace;CGBitmapInfo bitmapInfo;uint32_t version; CGFloat *decode;CGColorRenderingIntent renderingIntent;};
struct vm_region_basic_info {vm_prot_t protection;vm_prot_t max_protection;vm_inherit_t inheritance;boolean_t shared;boolean_t reserved;uint32_t offset;vm_behavior_t behavior;unsigned short user_wired_count;};
struct NSRegularExpression {NSObject super;NSString *_pattern;NSUInteger _options;void *_internal;id _reserved1;int32_t _checkout;int32_t _reserved2;};
typedef OSStatus (*CoreEndianFlipProc)(OSType, OSType, SInt16, void *, ByteCount, Boolean, void *);
struct _xmlSchemaWildcard {xmlSchemaTypeType type; xmlChar *id;xmlSchemaAnnotPtr annot;xmlNodePtr node;int minOccurs;int maxOccurs;int processContents;int any;xmlSchemaWildcardNsPtr nsSet;xmlSchemaWildcardNsPtr negNsSet;int flags;};
struct axr_channel_info_t {axr_type_t sampleType;axr_channel_type_t channelType;uint32_t sampleBits;uint32_t xSampling;uint32_t ySampling;uint8_t pLinear;uint8_t _reserved[3];char name[256];};
struct std____1__ios_base {std____1__ios_base_vtbl *__vftable ;std____1__ios_base__fmtflags __fmtflags_;std____1__streamsize __precision_;std____1__streamsize __width_;std____1__ios_base__iostate __rdstate_;std____1__ios_base__iostate __exceptions_;void *__rdbuf_;void *__loc_;std____1__ios_base__event_callback *__fn_;int *__index_;size_t __event_size_;size_t __event_cap_;long long *__iarray_;size_t __iarray_size_;size_t __iarray_cap_;void **__parray_;size_t __parray_size_;size_t __parray_cap_;};
struct sfntFeatureHeader {SInt32 version;UInt16 featureNameCount;UInt16 featureSetCount;SInt32 reserved;sfntFeatureName names[1];sfntFontFeatureSetting settings[1];sfntFontRunFeature runs[1];};
struct vm_info_region_64 {natural_t vir_start;natural_t vir_end;natural_t vir_object;memory_object_offset_t vir_offset;boolean_t vir_needs_copy;vm_prot_t vir_protection;vm_prot_t vir_max_protection;vm_inherit_t vir_inheritance;natural_t vir_wired_count;natural_t vir_user_wired_count;};
struct CFArrayCallBacks {CFIndex version;CFArrayRetainCallBack retain;CFArrayReleaseCallBack release;CFArrayCopyDescriptionCallBack copyDescription;CFArrayEqualCallBack equal;};
struct NSSortDescriptor {NSObject super;NSUInteger _sortDescriptorFlags;NSString *_key;SEL _selector;id _selectorOrBlock;};
struct kmod_info_64_v1 {uint64_t next_addr;int32_t info_version;uint32_t id;uint8_t name[64];uint8_t version[64];int32_t reference_count;uint64_t reference_list_addr;uint64_t address;uint64_t size;uint64_t hdr_size;uint64_t start_addr;uint64_t stop_addr;};
struct AudioTimeStamp {Float64 mSampleTime;UInt64 mHostTime;Float64 mRateScalar;UInt64 mWordClockTime;SMPTETime mSMPTETime;AudioTimeStampFlags mFlags;UInt32 mReserved;};
struct __shmid_ds_new {ipc_perm shm_perm;size_t shm_segsz;pid_t shm_lpid;pid_t shm_cpid;shmatt_t shm_nattch;time_t shm_atime;time_t shm_dtime;time_t shm_ctime;void *shm_internal;};
struct GLKBaseEffect {NSObject super;GLboolean _colorMaterialEnabled;GLboolean _fogEnabled;GLKEffectPropertyTransform *_transform;GLKLightingType _lightingType;GLKEffectPropertyLight *_light0;GLKEffectPropertyLight *_light1;GLKEffectPropertyLight *_light2;GLKEffectPropertyMaterial *_material;GLKEffectPropertyTexture *_texture2d0;GLKEffectPropertyTexture *_texture2d1;NSArray *_textureOrder;GLKVector4 _constantColor;GLKEffectPropertyFog *_fog;NSString *_label;};
struct _xmlAttribute {void *_private;xmlElementType type; xmlChar *name;_xmlNode *children;_xmlNode *last;_xmlDtd *parent;_xmlNode *next;_xmlNode *prev;_xmlDoc *doc;_xmlAttribute *nexth;xmlAttributeType atype;xmlAttributeDefault def; xmlChar *defaultValue;xmlEnumerationPtr tree; xmlChar *prefix; xmlChar *elem;};
struct _xmlShellCtxt {char *filename;xmlDocPtr doc;xmlNodePtr node;xmlXPathContextPtr pctxt;int loaded;FILE *output;xmlShellReadlineFunc input;};
struct task_vm_info {mach_vm_size_t virtual_size;integer_t region_count;integer_t page_size;mach_vm_size_t resident_size;mach_vm_size_t resident_size_peak;mach_vm_size_t device;mach_vm_size_t device_peak;mach_vm_size_t internal;mach_vm_size_t internal_peak;mach_vm_size_t external;mach_vm_size_t external_peak;mach_vm_size_t reusable;mach_vm_size_t reusable_peak;mach_vm_size_t purgeable_volatile_pmap;mach_vm_size_t purgeable_volatile_resident;mach_vm_size_t purgeable_volatile_virtual;mach_vm_size_t compressed;mach_vm_size_t compressed_peak;mach_vm_size_t compressed_lifetime;mach_vm_size_t phys_footprint;mach_vm_address_t min_address;mach_vm_address_t max_address;int64_t ledger_phys_footprint_peak;int64_t ledger_purgeable_nonvolatile;int64_t ledger_purgeable_novolatile_compressed;int64_t ledger_purgeable_volatile;int64_t ledger_purgeable_volatile_compressed;int64_t ledger_tag_network_nonvolatile;int64_t ledger_tag_network_nonvolatile_compressed;int64_t ledger_tag_network_volatile;int64_t ledger_tag_network_volatile_compressed;int64_t ledger_tag_media_footprint;int64_t ledger_tag_media_footprint_compressed;int64_t ledger_tag_media_nofootprint;int64_t ledger_tag_media_nofootprint_compressed;int64_t ledger_tag_graphics_footprint;int64_t ledger_tag_graphics_footprint_compressed;int64_t ledger_tag_graphics_nofootprint;int64_t ledger_tag_graphics_nofootprint_compressed;int64_t ledger_tag_neural_footprint;int64_t ledger_tag_neural_footprint_compressed;int64_t ledger_tag_neural_nofootprint;int64_t ledger_tag_neural_nofootprint_compressed;uint64_t limit_bytes_remaining;integer_t decompressions;};
struct CVTimeStamp {uint32_t version;int32_t videoTimeScale;int64_t videoTime;uint64_t hostTime;double rateScalar;int64_t videoRefreshPeriod;CVSMPTETime smpteTime;uint64_t flags;uint64_t reserved;};
struct _xmlSchema { xmlChar *name; xmlChar *targetNamespace; xmlChar *version; xmlChar *id;xmlDocPtr doc;xmlSchemaAnnotPtr annot;int flags;xmlHashTablePtr typeDecl;xmlHashTablePtr attrDecl;xmlHashTablePtr attrgrpDecl;xmlHashTablePtr elemDecl;xmlHashTablePtr notaDecl;xmlHashTablePtr schemasImports;void *_private;xmlHashTablePtr groupDecl;xmlDictPtr dict;void *includes;int preserve;int counter;xmlHashTablePtr idcDef;void *volatiles;};
struct kevent64_s {uint64_t ident;int16_t filter;uint16_t flags;uint32_t fflags;int64_t data;uint64_t udata;uint64_t ext[2];};
struct sadb_x_sa2 {u_int16_t sadb_x_sa2_len;u_int16_t sadb_x_sa2_exttype;u_int8_t sadb_x_sa2_mode;sadb_x_sa2___BE0BF66556B3A07F217BF5ED388C8220 __anonymous0;sadb_x_sa2___0B8F6C7C603ED8E5ADDF6AC271DF4C5E __anonymous1;u_int32_t sadb_x_sa2_sequence;u_int32_t sadb_x_sa2_reqid;};
struct vfsstatfs {uint32_t f_bsize;size_t f_iosize;uint64_t f_blocks;uint64_t f_bfree;uint64_t f_bavail;uint64_t f_bused;uint64_t f_files;uint64_t f_ffree;fsid_t f_fsid;uid_t f_owner;uint64_t f_flags;char f_fstypename[16];char f_mntonname[1024];char f_mntfromname[1024];uint32_t f_fssubtype;void *f_reserved[2];};
struct xsocket {u_int32_t xso_len;u_int32_t xso_so;short so_type;short so_options;short so_linger;short so_state;u_int32_t so_pcb;int xso_protocol;int xso_family;short so_qlen;short so_incqlen;short so_qlimit;short so_timeo;u_short so_error;pid_t so_pgid;u_int32_t so_oobmark;xsockbuf so_rcv;xsockbuf so_snd;uid_t so_uid;};
struct kevent {uintptr_t ident;int16_t filter;uint16_t flags;uint32_t fflags;intptr_t data;void *udata;};
struct statfs {uint32_t f_bsize;int32_t f_iosize;uint64_t f_blocks;uint64_t f_bfree;uint64_t f_bavail;uint64_t f_files;uint64_t f_ffree;fsid_t f_fsid;uid_t f_owner;uint32_t f_type;uint32_t f_flags;uint32_t f_fssubtype;char f_fstypename[16];char f_mntonname[1024];char f_mntfromname[1024];uint32_t f_flags_ext;uint32_t f_reserved[7];};
struct vm_region_submap_short_info_64 {vm_prot_t protection;vm_prot_t max_protection;vm_inherit_t inheritance;memory_object_offset_t offset;unsigned int user_tag;unsigned int ref_count;unsigned short shadow_depth;unsigned char external_pager;unsigned char share_mode;boolean_t is_submap;vm_behavior_t behavior;vm32_object_id_t object_id;unsigned short user_wired_count;};
typedef void (*DNSServiceNATPortMappingReply)(DNSServiceRef, DNSServiceFlags, uint32_t, DNSServiceErrorType, uint32_t, DNSServiceProtocol, uint16_t, uint16_t, uint32_t, void *);
typedef OSStatus (*AudioUnitGetPropertyInfoProc)(void *, AudioUnitPropertyID, AudioUnitScope, AudioUnitElement, UInt32 *, Boolean *);
typedef OSStatus (*AudioUnitSetParameterProc)(void *, AudioUnitParameterID, AudioUnitScope, AudioUnitElement, AudioUnitParameterValue, UInt32);
struct CFDictionaryKeyCallBacks {CFIndex version;CFDictionaryRetainCallBack retain;CFDictionaryReleaseCallBack release;CFDictionaryCopyDescriptionCallBack copyDescription;CFDictionaryEqualCallBack equal;CFDictionaryHashCallBack hash;};
struct CFRunLoopSourceContext1 {CFIndex version;void *info; void *(*retain)( void *);void (*release)( void *);CFStringRef (*copyDescription)( void *);Boolean (*equal)( void *,  void *);CFHashCode (*hash)( void *);mach_port_t (*getPort)(void *);void *(*perform)(void *, CFIndex, CFAllocatorRef, void *);};
struct AudioUnitParameterInfo {char name[52];CFStringRef unitName;UInt32 clumpID;CFStringRef cfNameString;AudioUnitParameterUnit unit;AudioUnitParameterValue minValue;AudioUnitParameterValue maxValue;AudioUnitParameterValue defaultValue;AudioUnitParameterOptions flags;};
struct CFRunLoopSourceContext {CFIndex version;void *info; void *(*retain)( void *);void (*release)( void *);CFStringRef (*copyDescription)( void *);Boolean (*equal)( void *,  void *);CFHashCode (*hash)( void *);void (*schedule)(void *, CFRunLoopRef, CFRunLoopMode);void (*cancel)(void *, CFRunLoopRef, CFRunLoopMode);void (*perform)(void *);};
struct vm_region_submap_info {vm_prot_t protection;vm_prot_t max_protection;vm_inherit_t inheritance;uint32_t offset;unsigned int user_tag;unsigned int pages_resident;unsigned int pages_shared_now_private;unsigned int pages_swapped_out;unsigned int pages_dirtied;unsigned int ref_count;unsigned short shadow_depth;unsigned char external_pager;unsigned char share_mode;boolean_t is_submap;vm_behavior_t behavior;vm32_object_id_t object_id;unsigned short user_wired_count;};
struct mach_vm_info_region {mach_vm_offset_t vir_start;mach_vm_offset_t vir_end;mach_vm_offset_t vir_object;memory_object_offset_t vir_offset;boolean_t vir_needs_copy;vm_prot_t vir_protection;vm_prot_t vir_max_protection;vm_inherit_t vir_inheritance;natural_t vir_wired_count;natural_t vir_user_wired_count;};
struct AUParameterEvent {AURenderEvent *next;AUEventSampleTime eventSampleTime;AURenderEventType eventType;uint8_t reserved[3];AUAudioFrameCount rampDurationSampleFrames;AUParameterAddress parameterAddress;AUValue value;};
struct CMBufferHandlers {uintptr_t version;CMBufferGetTimeHandler getDecodeTimeStamp;CMBufferGetTimeHandler getPresentationTimeStamp;CMBufferGetTimeHandler getDuration;CMBufferGetBooleanHandler isDataReady;CMBufferCompareHandler compare;CFStringRef dataBecameReadyNotification;CMBufferGetSizeHandler getSize;};
struct AudioFileMarker {Float64 mFramePosition;CFStringRef mName;SInt32 mMarkerID;AudioFile_SMPTE_Time mSMPTETime;UInt32 mType;UInt16 mReserved;UInt16 mChannel;};
struct _xmlSchemaFacet {xmlSchemaTypeType type;_xmlSchemaFacet *next; xmlChar *value; xmlChar *id;xmlSchemaAnnotPtr annot;xmlNodePtr node;int fixed;int whitespace;xmlSchemaValPtr val;xmlRegexpPtr regexp;};
struct host_basic_info {integer_t max_cpus;integer_t avail_cpus;natural_t memory_size;cpu_type_t cpu_type;cpu_subtype_t cpu_subtype;cpu_threadtype_t cpu_threadtype;integer_t physical_cpu;integer_t physical_cpu_max;integer_t logical_cpu;integer_t logical_cpu_max;uint64_t max_mem;};
struct CFBagCallBacks {CFIndex version;CFBagRetainCallBack retain;CFBagReleaseCallBack release;CFBagCopyDescriptionCallBack copyDescription;CFBagEqualCallBack equal;CFBagHashCallBack hash;};
struct CFSetCallBacks {CFIndex version;CFSetRetainCallBack retain;CFSetReleaseCallBack release;CFSetCopyDescriptionCallBack copyDescription;CFSetEqualCallBack equal;CFSetHashCallBack hash;};
struct GLKTextureInfo {NSObject super;GLuint name;GLenum target;GLuint width;GLuint height;GLuint depth;GLKTextureInfoAlphaState alphaState;GLKTextureInfoOrigin textureOrigin;BOOL containsMipmaps;GLuint mimapLevelCount;GLuint arrayLength;};
struct __msqid_ds_new {ipc_perm msg_perm;__int32_t msg_first;__int32_t msg_last;msglen_t msg_cbytes;msgqnum_t msg_qnum;msglen_t msg_qbytes;pid_t msg_lspid;pid_t msg_lrpid;time_t msg_stime;__int32_t msg_pad1;time_t msg_rtime;__int32_t msg_pad2;time_t msg_ctime;__int32_t msg_pad3;__int32_t msg_pad4[4];};
struct _xmlElement {void *_private;xmlElementType type; xmlChar *name;_xmlNode *children;_xmlNode *last;_xmlDtd *parent;_xmlNode *next;_xmlNode *prev;_xmlDoc *doc;xmlElementTypeVal etype;xmlElementContentPtr content;xmlAttributePtr attributes; xmlChar *prefix;xmlRegexpPtr contModel;};
struct tcpcb {tsegqe_head t_segq;int t_dupacks;u_int32_t unused;int t_timer[4];u_int32_t t_inpcb;int t_state;u_int t_flags;int t_force;tcp_seq snd_una;tcp_seq snd_max;tcp_seq snd_nxt;tcp_seq snd_up;tcp_seq snd_wl1;tcp_seq snd_wl2;tcp_seq iss;tcp_seq irs;tcp_seq rcv_nxt;tcp_seq rcv_adv;u_int32_t rcv_wnd;tcp_seq rcv_up;u_int32_t snd_wnd;u_int32_t snd_cwnd;u_int32_t snd_ssthresh;u_int t_maxopd;u_int32_t t_rcvtime;u_int32_t t_starttime;int t_rtttime;tcp_seq t_rtseq;int t_rxtcur;u_int t_maxseg;int t_srtt;int t_rttvar;int t_rxtshift;u_int t_rttmin;u_int32_t t_rttupdated;u_int32_t max_sndwnd;int t_softerror;char t_oobflags;char t_iobc;u_char snd_scale;u_char rcv_scale;u_char request_r_scale;u_char requested_s_scale;u_int32_t ts_recent;u_int32_t ts_recent_age;tcp_seq last_ack_sent;tcp_cc cc_send;tcp_cc cc_recv;tcp_seq snd_recover;u_int32_t snd_cwnd_prev;u_int32_t snd_ssthresh_prev;u_int32_t t_badrxtwin;};
struct _xmlSchemaAttributeGroup {xmlSchemaTypeType type;_xmlSchemaAttribute *next; xmlChar *name; xmlChar *id; xmlChar *ref; xmlChar *refNs;xmlSchemaAnnotPtr annot;xmlSchemaAttributePtr attributes;xmlNodePtr node;int flags;xmlSchemaWildcardPtr attributeWildcard; xmlChar *refPrefix;xmlSchemaAttributeGroupPtr refItem; xmlChar *targetNamespace;void *attrUses;};
struct kauth_identity_extlookup {u_int32_t el_seqno;u_int32_t el_result;u_int32_t el_flags;__darwin_pid_t el_info_pid;u_int64_t el_extend;u_int32_t el_info_reserved_1;uid_t el_uid;guid_t el_uguid;u_int32_t el_uguid_valid;ntsid_t el_usid;u_int32_t el_usid_valid;gid_t el_gid;guid_t el_gguid;u_int32_t el_gguid_valid;ntsid_t el_gsid;u_int32_t el_gsid_valid;u_int32_t el_member_valid;u_int32_t el_sup_grp_cnt;gid_t el_sup_groups[16];};
struct vm_region_submap_info_64 {vm_prot_t protection;vm_prot_t max_protection;vm_inherit_t inheritance;memory_object_offset_t offset;unsigned int user_tag;unsigned int pages_resident;unsigned int pages_shared_now_private;unsigned int pages_swapped_out;unsigned int pages_dirtied;unsigned int ref_count;unsigned short shadow_depth;unsigned char external_pager;unsigned char share_mode;boolean_t is_submap;vm_behavior_t behavior;vm32_object_id_t object_id;unsigned short user_wired_count;unsigned int pages_reusable;vm_object_id_t object_id_full;};
typedef void (*xlinkExtendedLinkFunk)(void *, xmlNodePtr, int,  xlinkHRef *,  xlinkRole *, int,  xlinkRole *,  xlinkRole *, xlinkShow *, xlinkActuate *, int,  xlinkTitle *,  xmlChar **);
struct dyld_all_image_infos {uint32_t version;uint32_t infoArrayCount; dyld_image_info *infoArray;dyld_image_notifier notification;char processDetachedFromSharedRegion;char libSystemInitialized; mach_header *dyldImageLoadAddress;void *jitInfo; char *dyldVersion; char *errorMessage;uintptr_t terminationFlags;void *coreSymbolicationShmPage;uintptr_t systemOrderFlag;uintptr_t uuidArrayCount; dyld_uuid_info *uuidArray;dyld_all_image_infos *dyldAllImageInfosAddress;uintptr_t initialImageCount;uintptr_t errorKind; char *errorClientOfDylibPath; char *errorTargetDylibPath; char *errorSymbol;uintptr_t sharedCacheSlide;uint8_t sharedCacheUUID[16];uintptr_t sharedCacheBaseAddress;uint64_t infoArrayChangeTimestamp; char *dyldPath;mach_port_t notifyPorts[8];uintptr_t reserved[9];uintptr_t compact_dyld_image_info_addr;size_t compact_dyld_image_info_size;uint32_t platform;uint32_t aotInfoCount; dyld_aot_image_info *aotInfoArray;uint64_t aotInfoArrayChangeTimestamp;uintptr_t aotSharedCacheBaseAddress;uint8_t aotSharedCacheUUID[16];};
struct _xmlSchemaAttribute {xmlSchemaTypeType type;_xmlSchemaAttribute *next; xmlChar *name; xmlChar *id; xmlChar *ref; xmlChar *refNs; xmlChar *typeName; xmlChar *typeNs;xmlSchemaAnnotPtr annot;xmlSchemaTypePtr base;int occurs; xmlChar *defValue;xmlSchemaTypePtr subtypes;xmlNodePtr node; xmlChar *targetNamespace;int flags; xmlChar *refPrefix;xmlSchemaValPtr defVal;xmlSchemaAttributePtr refDecl;};
struct kinfo_proc__eproc {proc *e_paddr;session *e_sess;_pcred e_pcred;_ucred e_ucred;vmspace e_vm;pid_t e_ppid;pid_t e_pgid;short e_jobc;dev_t e_tdev;pid_t e_tpgid;session *e_tsess;char e_wmesg[8];segsz_t e_xsize;short e_xrssize;short e_xccount;short e_xswrss;int32_t e_flag;char e_login[12];int32_t e_spare[4];};
struct _xmlValidCtxt {void *userData;xmlValidityErrorFunc error;xmlValidityWarningFunc warning;xmlNodePtr node;int nodeNr;int nodeMax;xmlNodePtr *nodeTab;unsigned int finishDtd;xmlDocPtr doc;int valid;xmlValidState *vstate;int vstateNr;int vstateMax;xmlValidState *vstateTab;xmlAutomataPtr am;xmlAutomataStatePtr state;};
struct ostat {__uint16_t st_dev;ino_t st_ino;mode_t st_mode;nlink_t st_nlink;__uint16_t st_uid;__uint16_t st_gid;__uint16_t st_rdev;__int32_t st_size;timespec st_atimespec;timespec st_mtimespec;timespec st_ctimespec;__int32_t st_blksize;__int32_t st_blocks;__uint32_t st_flags;__uint32_t st_gen;};
struct CFAllocatorContext {CFIndex version;void *info;CFAllocatorRetainCallBack retain;CFAllocatorReleaseCallBack release;CFAllocatorCopyDescriptionCallBack copyDescription;CFAllocatorAllocateCallBack allocate;CFAllocatorReallocateCallBack reallocate;CFAllocatorDeallocateCallBack deallocate;CFAllocatorPreferredSizeCallBack preferredSize;};
struct cache_attributes_s {uint32_t version;cache_key_hash_cb_t key_hash_cb;cache_key_is_equal_cb_t key_is_equal_cb;cache_key_retain_cb_t key_retain_cb;cache_release_cb_t key_release_cb;cache_release_cb_t value_release_cb;cache_value_make_nonpurgeable_cb_t value_make_nonpurgeable_cb;cache_value_make_purgeable_cb_t value_make_purgeable_cb;void *user_data;cache_value_retain_cb_t value_retain_cb;};
struct _xmlSchemaElement {xmlSchemaTypeType type;_xmlSchemaType *next; xmlChar *name; xmlChar *id; xmlChar *ref; xmlChar *refNs;xmlSchemaAnnotPtr annot;xmlSchemaTypePtr subtypes;xmlSchemaAttributePtr attributes;xmlNodePtr node;int minOccurs;int maxOccurs;int flags; xmlChar *targetNamespace; xmlChar *namedType; xmlChar *namedTypeNs; xmlChar *substGroup; xmlChar *substGroupNs; xmlChar *scope; xmlChar *value;_xmlSchemaElement *refDecl;xmlRegexpPtr contModel;xmlSchemaContentType contentType; xmlChar *refPrefix;xmlSchemaValPtr defVal;void *idcs;};
struct UTextFuncs {int32_t tableSize;int32_t reserved1;int32_t reserved2;int32_t reserved3;UTextClone *clone;UTextNativeLength *nativeLength;UTextAccess *access;UTextExtract *extract;UTextReplace *replace;UTextCopy *copy;UTextMapOffsetToNative *mapOffsetToNative;UTextMapNativeIndexToUTF16 *mapNativeIndexToUTF16;UTextClose *close;UTextClose *spare1;UTextClose *spare2;UTextClose *spare3;};
struct JSClassDefinition {int version;JSClassAttributes attributes; char *className;JSClassRef parentClass; JSStaticValue *staticValues; JSStaticFunction *staticFunctions;JSObjectInitializeCallback initialize;JSObjectFinalizeCallback finalize;JSObjectHasPropertyCallback hasProperty;JSObjectGetPropertyCallback getProperty;JSObjectSetPropertyCallback setProperty;JSObjectDeletePropertyCallback deleteProperty;JSObjectGetPropertyNamesCallback getPropertyNames;JSObjectCallAsFunctionCallback callAsFunction;JSObjectCallAsConstructorCallback callAsConstructor;JSObjectHasInstanceCallback hasInstance;JSObjectConvertToTypeCallback convertToType;};
struct _xmlParserCtxt {_xmlSAXHandler *sax;void *userData;xmlDocPtr myDoc;int wellFormed;int replaceEntities; xmlChar *version; xmlChar *encoding;int standalone;int html;xmlParserInputPtr input;int inputNr;int inputMax;xmlParserInputPtr *inputTab;xmlNodePtr node;int nodeNr;int nodeMax;xmlNodePtr *nodeTab;int record_info;xmlParserNodeInfoSeq node_seq;int errNo;int hasExternalSubset;int hasPErefs;int external;int valid;int validate;xmlValidCtxt vctxt;xmlParserInputState instate;int token;char *directory; xmlChar *name;int nameNr;int nameMax; xmlChar **nameTab;long long nbChars;long long checkIndex;int keepBlanks;int disableSAX;int inSubset; xmlChar *intSubName;xmlChar *extSubURI;xmlChar *extSubSystem;int *space;int spaceNr;int spaceMax;int *spaceTab;int depth;xmlParserInputPtr entity;int charset;int nodelen;int nodemem;int pedantic;void *_private;int loadsubset;int linenumbers;void *catalogs;int recovery;int progressive;xmlDictPtr dict; xmlChar **atts;int maxatts;int docdict; xmlChar *str_xml; xmlChar *str_xmlns; xmlChar *str_xml_ns;int sax2;int nsNr;int nsMax; xmlChar **nsTab;int *attallocs;void **pushTab;xmlHashTablePtr attsDefault;xmlHashTablePtr attsSpecial;int nsWellFormed;int options;int dictNames;int freeElemsNr;xmlNodePtr freeElems;int freeAttrsNr;xmlAttrPtr freeAttrs;xmlError lastError;xmlParserMode parseMode;unsigned long long nbentities;unsigned long long sizeentities;xmlParserNodeInfo *nodeInfo;int nodeInfoNr;int nodeInfoMax;xmlParserNodeInfo *nodeInfoTab;int input_id;unsigned long long sizeentcopy;};
struct _xmlSchemaType {xmlSchemaTypeType type;_xmlSchemaType *next; xmlChar *name; xmlChar *id; xmlChar *ref; xmlChar *refNs;xmlSchemaAnnotPtr annot;xmlSchemaTypePtr subtypes;xmlSchemaAttributePtr attributes;xmlNodePtr node;int minOccurs;int maxOccurs;int flags;xmlSchemaContentType contentType; xmlChar *base; xmlChar *baseNs;xmlSchemaTypePtr baseType;xmlSchemaFacetPtr facets;_xmlSchemaType *redef;int recurse;xmlSchemaAttributeLinkPtr *attributeUses;xmlSchemaWildcardPtr attributeWildcard;int builtInType;xmlSchemaTypeLinkPtr memberTypes;xmlSchemaFacetLinkPtr facetSet; xmlChar *refPrefix;xmlSchemaTypePtr contentTypeDef;xmlRegexpPtr contModel; xmlChar *targetNamespace;void *attrUses;};
struct stat {dev_t st_dev;mode_t st_mode;nlink_t st_nlink;__darwin_ino64_t st_ino;uid_t st_uid;gid_t st_gid;dev_t st_rdev;timespec st_atimespec;timespec st_mtimespec;timespec st_ctimespec;timespec st_birthtimespec;off_t st_size;blkcnt_t st_blocks;blksize_t st_blksize;__uint32_t st_flags;__uint32_t st_gen;__int32_t st_lspare;__int64_t st_qspare[2];};
typedef std____1____wrap_iter_const_char16_t__P___difference_type std____1____iterator_traits_impl_std____wrap_iter_const_char16_t__P___true___difference_type;
typedef std____1____wrap_iter_const_char32_t__P___difference_type std____1____iterator_traits_impl_std____wrap_iter_const_char32_t__P___true___difference_type;
typedef std____1____wrap_iter_char16_t__P___difference_type std____1____iterator_traits_impl_std____wrap_iter_char16_t__P___true___difference_type;
typedef std____1____wrap_iter_char32_t__P___difference_type std____1____iterator_traits_impl_std____wrap_iter_char32_t__P___true___difference_type;
typedef std____1____wrap_iter_const_char16_t__P___reference std____1____iterator_traits_impl_std____wrap_iter_const_char16_t__P___true___reference;
typedef std____1____wrap_iter_const_char32_t__P___reference std____1____iterator_traits_impl_std____wrap_iter_const_char32_t__P___true___reference;
typedef std____1____wrap_iter_const_char16_t__P___pointer std____1____iterator_traits_impl_std____wrap_iter_const_char16_t__P___true___pointer;
typedef std____1____wrap_iter_const_char32_t__P___pointer std____1____iterator_traits_impl_std____wrap_iter_const_char32_t__P___true___pointer;
typedef std____1____wrap_iter_char16_t__P___reference std____1____iterator_traits_impl_std____wrap_iter_char16_t__P___true___reference;
typedef std____1____wrap_iter_char32_t__P___reference std____1____iterator_traits_impl_std____wrap_iter_char32_t__P___true___reference;
typedef std____1____iterator_traits_impl_std____wrap_iter_const_char16_t__P___true___difference_type std____1__reverse_iterator_std____wrap_iter_const_char16_t__P____difference_type;
typedef std____1____iterator_traits_impl_std____wrap_iter_const_char32_t__P___true___difference_type std____1__reverse_iterator_std____wrap_iter_const_char32_t__P____difference_type;
typedef std____1____wrap_iter_char16_t__P___pointer std____1____iterator_traits_impl_std____wrap_iter_char16_t__P___true___pointer;
typedef std____1____wrap_iter_char32_t__P___pointer std____1____iterator_traits_impl_std____wrap_iter_char32_t__P___true___pointer;
typedef std____1____iterator_traits_impl_std____wrap_iter_char16_t__P___true___difference_type std____1__reverse_iterator_std____wrap_iter_char16_t__P____difference_type;
typedef std____1____iterator_traits_impl_std____wrap_iter_char32_t__P___true___difference_type std____1__reverse_iterator_std____wrap_iter_char32_t__P____difference_type;
typedef std____1____iterator_traits_impl_std____wrap_iter_const_char16_t__P___true___reference std____1__reverse_iterator_std____wrap_iter_const_char16_t__P____reference;
typedef std____1____iterator_traits_impl_std____wrap_iter_const_char32_t__P___true___reference std____1__reverse_iterator_std____wrap_iter_const_char32_t__P____reference;
typedef std____1____bitset_0__0___difference_type std____1____bit_iterator_std____bitset_0__0___false__0___difference_type;
typedef std____1____iterator_traits_impl_std____wrap_iter_const_char16_t__P___true___pointer std____1__reverse_iterator_std____wrap_iter_const_char16_t__P____pointer;
typedef std____1____iterator_traits_impl_std____wrap_iter_const_char32_t__P___true___pointer std____1__reverse_iterator_std____wrap_iter_const_char32_t__P____pointer;
typedef std____1____bitset_0__0___difference_type std____1____bit_iterator_std____bitset_0__0___true__0___difference_type;
typedef std____1____iterator_traits_impl_std____wrap_iter_char16_t__P___true___reference std____1__reverse_iterator_std____wrap_iter_char16_t__P____reference;
typedef std____1____iterator_traits_impl_std____wrap_iter_char32_t__P___true___reference std____1__reverse_iterator_std____wrap_iter_char32_t__P____reference;
typedef std____1____iterator_traits_impl_std____wrap_iter_char16_t__P___true___pointer std____1__reverse_iterator_std____wrap_iter_char16_t__P____pointer;
typedef std____1____iterator_traits_impl_std____wrap_iter_char32_t__P___true___pointer std____1__reverse_iterator_std____wrap_iter_char32_t__P____pointer;
typedef std____1__iterator_traits_const_char16_t__P___difference_type std____1__reverse_iterator_const_char16_t__P___difference_type;
typedef std____1__iterator_traits_const_char32_t__P___difference_type std____1__reverse_iterator_const_char32_t__P___difference_type;
typedef std____1__iterator_traits_const_wchar_t__P___difference_type std____1__reverse_iterator_const_wchar_t__P___difference_type;
typedef std____1__iterator_traits_const_char__P___difference_type std____1__reverse_iterator_const_char__P___difference_type;
struct MTLResourceStatePassSampleBufferAttachmentDescriptorArray {NSObject super;};
struct UICollectionViewDiffableDataSourceSectionSnapshotHandlers {NSObject super;};
typedef mbstate_t std____1__codecvt_char16_t__char__mbstate_t___state_type;
typedef mbstate_t std____1__codecvt_char32_t__char__mbstate_t___state_type;
typedef size_t std____1__basic_string_view__CharT___Traits___size_type;
typedef mbstate_t std____1__codecvt_wchar_t__char__mbstate_t___state_type;
struct ASAuthorizationProviderExtensionAuthorizationRequest {NSObject super;};
struct MTLResourceStatePassSampleBufferAttachmentDescriptor {NSObject super;};
struct UICollectionViewDiffableDataSourceReorderingHandlers {NSObject super;};
typedef mbstate_t std____1__codecvt_char__char__mbstate_t___state_type;
struct MTLComputePassSampleBufferAttachmentDescriptorArray {NSObject super;};
struct MTLTileRenderPipelineColorAttachmentDescriptorArray {NSObject super;};
struct ASWebAuthenticationSessionWebBrowserSessionManager {NSObject super;};
struct MTLRenderPassSampleBufferAttachmentDescriptorArray {NSObject super;};
union axr_part_info_t___9F129DB9CDBDC1B09F866A34CEF265DD {_8991E2D102B0A4682EC5E58EBA9CEC64 chromaticities;};
struct MTLBlitPassSampleBufferAttachmentDescriptorArray {NSObject super;};
struct UICollectionViewCompositionalLayoutConfiguration {NSObject super;};
union __res_9_state___E1C47136107487A623680D4B7EE68AB7 {char pad[40];_267FA10EEE474E805B8C8A97DF30A983 _ext;};
union getquota_rslt___93D720EECC4BDA120269F9F7BB40A95B {rquota gqr_rquota;};
union nlm4_testrply___5672F96DA0F1B9BE5DC546E200F63A51 {nlm4_holder holder;};
typedef size_t std____1__basic_string_view_char16_t___size_type;
typedef size_t std____1__basic_string_view_char32_t___size_type;
struct AVAssetResourceLoadingContentInformationRequest {NSObject super;AVAssetResourceLoadingContentInformationRequestInternal *_contentInformationRequest;};
struct AVAudioEnvironmentDistanceAttenuationParameters {NSObject super;void *_impl;};
struct MTLRenderPipelineColorAttachmentDescriptorArray {NSObject super;};
union klm_testrply___25A6F5B59BE8949FB52C1CBCE60C93A0 {klm_holder holder;};
union nlm_testrply___9560609B77CA2DE28561BE781A7E7270 {nlm_holder holder;};
typedef size_t std____1__basic_string_view_wchar_t___size_type;
struct AVCompositionTrackFormatDescriptionReplacement {NSObject super;};
struct MTLComputePassSampleBufferAttachmentDescriptor {NSObject super;};
struct MTLTileRenderPipelineColorAttachmentDescriptor {NSObject super;};
struct ASAccountAuthenticationModificationController {NSObject super;};
struct MTLRenderPassSampleBufferAttachmentDescriptor {NSObject super;};
union ypresp_all___438EB5C0F713AEE99C9EADC1C626DC0A {ypresp_key_val val;};
typedef std____1__char_traits_wchar_t___off_type std____1__basic_streambuf_wchar_t___off_type;
typedef std____1__char_traits_wchar_t___pos_type std____1__basic_streambuf_wchar_t___pos_type;
typedef size_t std____1__basic_string_view_char___size_type;
typedef std____1__char_traits_wchar_t___off_type std____1__basic_stringbuf_wchar_t___off_type;
typedef std____1__char_traits_wchar_t___pos_type std____1__basic_stringbuf_wchar_t___pos_type;
struct MTLBlitPassSampleBufferAttachmentDescriptor {NSObject super;};
struct MTLRenderPassColorAttachmentDescriptorArray {NSObject super;};
struct ASAccountAuthenticationModificationRequest {NSObject super;};
struct MTLAccelerationStructureGeometryDescriptor {NSObject super;};
struct MTLRenderPipelineColorAttachmentDescriptor {NSObject super;};
struct UIAccessibilityCustomRotorSearchPredicate {NSObject super;};
struct UICollectionViewLayoutInvalidationContext {NSObject super;};
struct UICollectionViewSupplementaryRegistration {NSObject super;};
typedef std____1__char_traits_char___off_type std____1__basic_streambuf_char___off_type;
typedef std____1__char_traits_char___pos_type std____1__basic_streambuf_char___pos_type;
typedef std____1__char_traits_char___off_type std____1__basic_stringbuf_char___off_type;
typedef std____1__char_traits_char___pos_type std____1__basic_stringbuf_char___pos_type;
typedef uint_least16_t std____1__char_traits_char16_t___int_type;
typedef uint_least32_t std____1__char_traits_char32_t___int_type;
typedef mach_voucher_attr_recipe_command_t *mach_voucher_attr_recipe_command_array_t;
typedef size_t std____1__allocator_char16_t___size_type;
typedef size_t std____1__allocator_char32_t___size_type;
typedef wint_t std____1__char_traits_wchar_t___int_type;
typedef void (*CVPixelBufferReleasePlanarBytesCallback)(void *,  void *, size_t, size_t,  void **);
struct NEVPNIKEv2SecurityAssociationParameters {NSObject super;};
struct UIFontPickerViewControllerConfiguration {NSObject super;};
typedef size_t std____1__allocator_wchar_t___size_type;
struct AVAssetDownloadStorageManagementPolicy {NSObject super;AVAssetDownloadStorageManagementPolicyInternal *_storageManagementPolicy;};
typedef void (*AudioServicesSystemSoundCompletionProc)(SystemSoundID, void *);
struct CPMessageListItemTrailingConfiguration {NSObject super;};
struct MTLIntersectionFunctionTableDescriptor {NSObject super;};
struct NSDiffableDataSourceSectionTransaction {NSObject super;};
struct PKIssuerProvisioningExtensionPassEntry {NSObject super;};
typedef void (*ScheduledAudioFileRegionCompletionProc)(void *, ScheduledAudioFileRegion *, OSStatus);
typedef mach_voucher_attr_value_handle_t *mach_voucher_attr_value_handle_array_t;
typedef std____1__char_traits_wchar_t___int_type std____1__basic_ios_wchar_t___int_type;
struct ASAuthorizationSingleSignOnCredential {NSObject super;};
struct AVAssetSegmentReportSampleInformation {NSObject super;};
struct AVAsynchronousCIImageFilteringRequest {NSObject super;AVAsynchronousCIImageFilteringRequestInternal *_internal;};
struct AVAsynchronousVideoCompositionRequest {NSObject super;AVAsynchronousVideoCompositionRequestInternal *_internal;};
struct CKFetchRecordZoneChangesConfiguration {NSObject super;};
struct CPMessageListItemLeadingConfiguration {NSObject super;};
struct CVPlanarPixelBufferInfo_YCbCrBiPlanar {CVPlanarComponentInfo componentInfoY;CVPlanarComponentInfo componentInfoCbCr;};
struct HKElectrocardiogramVoltageMeasurement {NSObject super;};
struct MPSMatrixRandomDistributionDescriptor {NSObject super;};
struct PKDisbursementAuthorizationController {NSObject super;};
struct PKPaymentRequestMerchantSessionUpdate {NSObject super;};
struct UIDocumentBrowserTransitionController {NSObject super;};
struct AUInputSamplesInOutputCallbackStruct {AUInputSamplesInOutputCallback inputToOutputCallback;void *userData;};
struct AVAssetWriterInputPixelBufferAdaptor {NSObject super;AVAssetWriterInputPixelBufferAdaptorInternal *_internal;};
struct AVCaptureBracketedStillImageSettings {NSObject super;};
struct BNNSLayerParametersTensorContraction { char *operation;float alpha;float beta;BNNSNDArrayDescriptor iA_desc;BNNSNDArrayDescriptor iB_desc;BNNSNDArrayDescriptor o_desc;};
struct MTLVertexBufferLayoutDescriptorArray {NSObject super;};
struct NSPersistentCloudKitContainerOptions {NSObject super;};
struct PKAddPaymentPassRequestConfiguration {NSObject super;};
struct PKIssuerProvisioningExtensionHandler {NSObject super;};
struct UIAccessibilityCustomRotorItemResult {NSObject super;};
struct UIPercentDrivenInteractiveTransition {NSObject super;};
typedef mach_voucher_attr_raw_recipe_t mach_voucher_attr_raw_recipe_array_t;
typedef pthread_mutex_t std____1____libcpp_recursive_mutex_t;
typedef size_t std____1__allocator_char___size_type;
struct std____1__bidirectional_iterator_tag { std____1__forward_iterator_tag cppsuper0;};
struct std____1__random_access_iterator_tag { std____1__bidirectional_iterator_tag cppsuper0;};
struct ASAuthorizationSingleSignOnProvider {NSObject super;};
struct AVAudioSessionDataSourceDescription {NSObject super;void *_impl;};
struct AVCaptureSynchronizedDataCollection {NSObject super;AVCaptureSynchronizedDataCollectionInternal *_internal;};
struct AVVideoCompositionCoreAnimationTool {NSObject super;AVVideoCompositionCoreAnimationToolInternal *_videoCompositionTool;};
struct CVPlanarPixelBufferInfo_YCbCrPlanar {CVPlanarComponentInfo componentInfoY;CVPlanarComponentInfo componentInfoCb;CVPlanarComponentInfo componentInfoCr;};
struct HMCharacteristicThresholdRangeEvent {HMEvent super;};
struct INRestaurantGuestDisplayPreferences {NSObject super;};
struct MPNowPlayingInfoLanguageOptionGroup {NSObject super;};
struct MTLRasterizationRateLayerDescriptor {NSObject super;};
struct NSDiffableDataSourceSectionSnapshot {NSObject super;};
struct PHContentEditingInputRequestOptions {NSObject super;};
struct PKAddSecureElementPassConfiguration {NSObject super;};
struct PKIssuerProvisioningExtensionStatus {NSObject super;};
struct SFSafariViewControllerConfiguration {NSObject super;};
struct UICollectionLayoutListConfiguration {NSObject super;};
struct VTDecompressionOutputCallbackRecord {VTDecompressionOutputCallback decompressionOutputCallback;void *decompressionOutputRefCon;};
typedef size_t std____1____bitset_0__0___size_type;
typedef uint_fast32_t std____1____rs_default__result_type;
typedef size_t std____1__allocator__Tp___size_type;
struct AVAssetReaderOutputMetadataAdaptor {NSObject super;AVAssetReaderOutputMetadataAdaptorInternal *_internal;};
struct AVAudioEnvironmentReverbParameters {NSObject super;void *_impl;};
struct AVVideoCompositionLayerInstruction {NSObject super;AVVideoCompositionLayerInstructionInternal *_layerInstruction;};
struct BNNSLayerParametersBroadcastMatMul {float alpha;float beta;char transA;char transB;char quadratic;char a_is_weights;char b_is_weights;BNNSNDArrayDescriptor iA_desc;BNNSNDArrayDescriptor iB_desc;BNNSNDArrayDescriptor o_desc;};
struct CHHapticParameterCurveControlPoint {NSObject super;};
struct EAWiFiUnconfiguredAccessoryBrowser {NSObject super;};
struct MTLAccelerationStructureDescriptor {NSObject super;};
struct MTLIndirectCommandBufferDescriptor {NSObject super;};
struct NSPersistentCloudKitContainerEvent {NSObject super;};
struct NSURLSessionTaskTransactionMetrics {NSObject super;};
struct PKBarcodeEventConfigurationRequest {NSObject super;};
struct PKPaymentInformationEventExtension {NSObject super;};
struct UICollectionViewDiffableDataSource {NSObject super;};
struct std____1__numpunct_byname_wchar_t_ { std____1__numpunct_wchar_t_ cppsuper0;};
struct ASWebAuthenticationSessionRequest {NSObject super;};
struct AVAssetResourceLoadingDataRequest {NSObject super;AVAssetResourceLoadingDataRequestInternal *_dataRequest;};
struct AVAssetWriterInputMetadataAdaptor {NSObject super;AVAssetWriterInputMetadataAdaptorInternal *_internal;};
struct AVAssetWriterInputPassDescription {NSObject super;AVAssetWriterInputPassDescriptionInternal *_internal;};
typedef void (*CGDataProviderReleaseDataCallback)(void *,  void *, size_t);
typedef off_t (*CGDataProviderSkipForwardCallback)(void *, off_t);
struct MPSGraphConvolution2DOpDescriptor {NSObject super;};
struct MTLRasterizationRateMapDescriptor {NSObject super;};
struct MTLRenderPassAttachmentDescriptor {NSObject super;};
struct MTLVertexAttributeDescriptorArray {NSObject super;};
struct MTLVisibleFunctionTableDescriptor {NSObject super;};
struct NSCollectionLayoutGroupCustomItem {NSObject super;};
struct SKProductStorePromotionController {NSObject super;};
struct STScreenTimeConfigurationObserver {NSObject super;};
struct UIAccessibilityLocationDescriptor {NSObject super;};
typedef pthread_once_t std____1____libcpp_exec_once_flag;
struct ASAuthorizationAppleIDCredential {NSObject super;};
struct AVAudioSessionChannelDescription {NSObject super;void *_impl;};
struct AVSampleBufferRenderSynchronizer {NSObject super;AVSampleBufferRenderSynchronizerInternal *_synchronizerInternal;};
struct MTLCounterSampleBufferDescriptor {NSObject super;};
struct MTLPipelineBufferDescriptorArray {NSObject super;};
struct PKPaymentAuthorizationController {NSObject super;};
struct UICollectionViewCellRegistration {NSObject super;};
struct UICollectionViewLayoutAttributes {NSObject super;};
struct UISceneDestructionRequestOptions {NSObject super;};
struct VSSubscriptionRegistrationCenter {NSObject super;};
struct std____1__basic_istream_wchar_t_ {std____1__basic_istream_wchar_t__vtbl *__vftable ;std____1__streamsize __gc_;};
struct ASAuthorizationPasswordProvider {NSObject super;};
struct AVAssetResourceLoadingRequestor {NSObject super;AVAssetResourceLoadingRequestorInternal *_requestor;};
struct AVCaptureDataOutputSynchronizer {NSObject super;AVCaptureDataOutputSynchronizerInternal *_internal;};
struct AVCaptureDeviceDiscoverySession {NSObject super;};
struct AVVideoCompositionRenderContext {NSObject super;AVVideoCompositionRenderContextInternal *_internal;};
struct CKFetchRecordZoneChangesOptions {NSObject super;};
struct MLCMultiheadAttentionDescriptor {NSObject super;};
struct MPMediaPlaylistCreationMetadata {NSObject super;};
struct MPPlayableContentManagerContext {NSObject super;};
struct MTLRasterizationRateSampleArray {NSObject super;};
struct MTLTileRenderPipelineDescriptor {NSObject super;};
struct MTLVertexBufferLayoutDescriptor {NSObject super;};
struct NSCoreDataCoreSpotlightDelegate {NSObject super;};
struct NSDiffableDataSourceTransaction {NSObject super;};
struct PKAddShareablePassConfiguration {PKAddSecureElementPassConfiguration super;};
struct PKBarcodeEventSignatureResponse {NSObject super;};
struct SLComposeSheetConfigurationItem {NSObject super;};
struct UIDocumentInteractionController {NSObject super;};
struct UILargeContentViewerInteraction {NSObject super;};
struct UISceneActivationRequestOptions {NSObject super;};
typedef void (*iconv_unicode_mb_to_uc_fallback)( char *, size_t, void (*)( unsigned int *, size_t, void *), void *, void *);
typedef void (*iconv_unicode_uc_to_mb_fallback)(unsigned int, void (*)( char *, size_t, void *), void *, void *);
struct std____1____widen_from_utf8_16_ { std____1__codecvt_char16_t__char__mbstate_t_ cppsuper0;};
struct std____1____widen_from_utf8_32_ { std____1__codecvt_char32_t__char__mbstate_t_ cppsuper0;};
struct std____1__numpunct_byname_char_ { std____1__numpunct_char_ cppsuper0;};
struct std__initializer_list_char16_t_ {short *__begin_;size_t __size_;};
struct std__initializer_list_char32_t_ {int *__begin_;size_t __size_;};
struct ASAuthorizationAppleIDProvider {NSObject super;};
struct ASCredentialIdentityStoreState {NSObject super;};
struct AVAudioSessionRouteDescription {NSObject super;void *_impl;};
struct AVCaptureResolvedPhotoSettings {NSObject super;AVCaptureResolvedPhotoSettingsInternal *_internal;};
struct AVPlayerItemMediaDataCollector {NSObject super;AVPlayerItemMediaDataCollectorInternal *_collectorInternal;};
struct AVPlayerMediaSelectionCriteria {NSObject super;void *_criteriaInternal;};
typedef size_t (*CGDataConsumerPutBytesCallback)(void *,  void *, size_t);
typedef size_t (*CGDataProviderGetBytesCallback)(void *, void *, size_t);
struct CPTripPreviewTextConfiguration {NSObject super;};
struct CSIndexExtensionRequestHandler {NSObject super;};
struct INRestaurantReservationBooking {NSObject super;};
struct MKLocalPointsOfInterestRequest {NSObject super;};
struct MPNowPlayingInfoLanguageOption {NSObject super;};
struct MPSSVGFDefaultTextureAllocator {NSObject super;};
struct MTLBufferLayoutDescriptorArray {NSObject super;};
struct MTLRasterizationRateLayerArray {NSObject super;};
struct MTLResourceStatePassDescriptor {NSObject super;};
struct NSFetchIndexElementDescription {NSObject super;};
struct NSPersistentHistoryTransaction {NSObject super;};
struct PHAssetResourceCreationOptions {NSObject super;};
struct PKBarcodeEventMetadataResponse {NSObject super;};
struct PKBarcodeEventSignatureRequest {NSObject super;};
struct UIBarButtonItemStateAppearance {NSObject super;};
struct UNNotificationServiceExtension {NSObject super;};
struct gss_krb5_lucid_context_version {OM_uint32 version;};
struct std____1____narrow_to_utf8_16_ { std____1__codecvt_char16_t__char__mbstate_t_ cppsuper0;};
struct std____1____narrow_to_utf8_32_ { std____1__codecvt_char32_t__char__mbstate_t_ cppsuper0;};
struct ASCredentialServiceIdentifier {NSObject super;};
struct AVAssetDownloadStorageManager {NSObject super;};
struct AVAssetResourceLoadingRequest {NSObject super;AVAssetResourceLoadingRequestInternal *_loadingRequest;};
struct AVAssetResourceRenewalRequest {AVAssetResourceLoadingRequest super;};
struct AVAudioSessionPortDescription {NSObject super;void *_impl;};
struct AVAudioUnitEQFilterParameters {NSObject super;void *_impl;};
struct AVPlayerItemMetadataCollector {AVPlayerItemMediaDataCollector super;AVPlayerItemMetadataCollectorInternal *_metadataCollectorInternal;};
struct AVVideoCompositionInstruction {NSObject super;AVVideoCompositionInstructionInternal *_instruction;};
struct HKQuantitySeriesSampleBuilder {NSObject super;};
struct MDLMaterialPropertyConnection {NSObject super;};
struct MPSAccelerationStructureGroup {NSObject super;};
struct MPSGraphPooling2DOpDescriptor {NSObject super;};
struct MTLStageInputOutputDescriptor {NSObject super;};
struct NEFilterProviderConfiguration {NSObject super;};
struct NEHotspotConfigurationManager {NSObject super;};
struct NSCollectionLayoutEdgeSpacing {NSObject super;};
struct NSOrderedCollectionDifference {NSObject super;};
struct PHAssetResourceRequestOptions {NSObject super;};
struct PKBarcodeEventMetadataRequest {NSObject super;};
struct SCNParticlePropertyController {NSObject super;};
struct UIIndirectScribbleInteraction {NSObject super;};
struct UISceneOpenExternalURLOptions {NSObject super;};
struct UIStoryboardUnwindSegueSource {NSObject super;};
struct UITableViewDiffableDataSource {NSObject super;};
typedef void (*iconv_wchar_mb_to_wc_fallback)( char *, size_t, void (*)( int *, size_t, void *), void *, void *);
typedef void (*iconv_wchar_wc_to_mb_fallback)(int, void (*)( char *, size_t, void *), void *, void *);
typedef mach_voucher_attr_key_t *mach_voucher_attr_key_array_t;
struct std____1__basic_istream_char_ {std____1__basic_istream_char__vtbl *__vftable ;std____1__streamsize __gc_;};
typedef int (*AAArchiveStreamWriteBlobProc)(void *, AAFieldKey,  void *, size_t);
struct ASPasswordCredentialIdentity {NSObject super;};
struct AUAudioUnitViewConfiguration {NSObject super;};
struct AVCaptureSystemPressureState {NSObject super;AVCaptureSystemPressureStateInternal *_internal;};
struct AVPictureInPictureController {NSObject super;};
struct AVVideoCompositionRenderHint {NSObject super;AVVideoCompositionRenderHintInternal *_internal;};
struct CLKComplicationTimelineEntry {NSObject super;};
struct CSSearchableItemAttributeSet {NSObject super;};
struct MPMusicPlayerControllerQueue {NSObject super;};
struct MPMusicPlayerQueueDescriptor {NSObject super;};
struct MTLComputePipelineDescriptor {NSObject super;};
struct MTLComputePipelineReflection {NSObject super;};
struct MTLVertexAttributeDescriptor {NSObject super;};
struct NSDiffableDataSourceSnapshot {NSObject super;};
struct NSPersistentStoreCoordinator {NSObject super;};
struct NSPersistentStoreDescription {NSObject super;};
struct NSURLAuthenticationChallenge {NSObject super;NSURLAuthenticationChallengeInternal *_internal;};
struct NSURLSessionWebSocketMessage {NSObject super;};
struct PDFAppearanceCharacteristics {NSObject super;PDFAppearanceCharacteristicsPrivate *_private;};
struct PKAddCarKeyPassConfiguration {PKAddSecureElementPassConfiguration super;};
struct PKPaymentAuthorizationResult {NSObject super;};
struct QLThumbnailGenerationRequest {NSObject super;};
struct TKSmartCardATRInterfaceGroup {NSObject super;};
struct TKTokenKeyExchangeParameters {NSObject super;};
struct UIActivityItemsConfiguration {NSObject super;};
struct UIListContentImageProperties {NSObject super;};
struct UIPrintInteractionController {NSObject super;};
typedef natural_t memory_object_cluster_size_t;
typedef pthread_cond_t std____1____libcpp_condvar_t;
typedef pthread_t std____1____libcpp_thread_id;
struct std____1__basic_ios_wchar_t_ {std____1__basic_ostream_wchar_t_ *__tie_;std____1__basic_ios_wchar_t___int_type __fill_;};
struct std____1__condition_variable {std____1____libcpp_condvar_t __cv_;};
struct thread_throughput_qos_policy {thread_throughput_qos_t thread_throughput_qos_tier;};
typedef int (*AAArchiveStreamReadBlobProc)(void *, AAFieldKey, void *, size_t);
struct AVAudioUnitComponentManager {NSObject super;void *_impl;};
struct AVSampleBufferAudioRenderer {NSObject super;AVSampleBufferAudioRendererInternal *_audioRendererInternal;};
struct AVSemanticSegmentationMatte {NSObject super;};
struct BNNSMHAProjectionParameters {BNNSNDArrayDescriptor target_desc;BNNSNDArrayDescriptor weights;BNNSNDArrayDescriptor bias;};
struct CNContactVCardSerialization {NSObject super;};
typedef CVOptionFlags CVPixelBufferPoolFlushFlags;
struct EAWiFiUnconfiguredAccessory {NSObject super;};
struct HKAudiogramSensitivityPoint {NSObject super;};
struct HKFitzpatrickSkinTypeObject {NSObject super;};
struct HKQuantitySeriesSampleQuery {HKQuery super;};
struct HKStatisticsCollectionQuery {HKQuery super;};
struct MLDictionaryFeatureProvider {NSObject super;};
struct MLMultiArrayShapeConstraint {NSObject super;};
struct MPMusicPlayerPlayParameters {NSObject super;};
struct MPSCNNConvolutionDescriptor {NSObject super;};
struct MPSGraphExecutionDescriptor {NSObject super;};
struct MTLAttributeDescriptorArray {NSObject super;};
struct MTLPipelineBufferDescriptor {NSObject super;};
struct MTLRenderPipelineDescriptor {NSObject super;};
struct MTLRenderPipelineReflection {NSObject super;};
struct NSCollectionLayoutDimension {NSObject super;};
struct NSPropertyListSerialization {NSObject super;void *reserved[6];};
struct SRKeyboardProbabilityMetric {NSObject super;};
struct UIAccessibilityCustomAction {NSObject super;};
struct UICollectionViewPlaceholder {NSObject super;};
struct UIFocusAnimationCoordinator {NSObject super;};
struct UIListContentTextProperties {NSObject super;};
struct UILocalizedIndexedCollation {NSObject super;};
struct UISceneActivationConditions {NSObject super;};
struct UISwipeActionsConfiguration {NSObject super;};
struct UITabBarItemStateAppearance {NSObject super;};
struct UITextFormattingCoordinator {NSObject super;};
typedef mach_port_t mach_voucher_attr_control_t;
typedef mach_port_t mach_voucher_attr_manager_t;
typedef pthread_t std____1____libcpp_thread_t;
struct ASWebAuthenticationSession {NSObject super;};
struct AUMIDIOutputCallbackStruct {AUMIDIOutputCallback midiOutputCallback;void *userData;};
struct AVCaptureDeviceInputSource {NSObject super;AVCaptureDeviceInputSourceInternal *_internal;};
struct AVCaptureVideoPreviewLayer {CALayer super;AVCaptureVideoPreviewLayerInternal *_internal;};
struct AVMetadataItemValueRequest {NSObject super;AVMetadataItemValueRequestInternal *_valueRequest;};
struct AVPlayerItemAccessLogEvent {NSObject super;AVPlayerItemAccessLogEventInternal *_playerItemAccessLogEvent;};
struct AVSampleBufferDisplayLayer {CALayer super;AVSampleBufferDisplayLayerInternal *_sampleBufferDisplayLayerInternal;};
typedef OSStatus (*AudioCodecUninitializeProc)(void *);
struct CLBeaconIdentityConstraint {NSObject super;};
struct ENExposureDetectionSummary {NSObject super;};
struct MDLMeshBufferDataAllocator {NSObject super;};
struct MTLBinaryArchiveDescriptor {NSObject super;};
struct MTLCommandBufferDescriptor {NSObject super;};
struct NFCTagCommandConfiguration {NSObject super;};
struct NFCVASCommandConfiguration {NSObject super;};
struct NSFetchedResultsController {NSObject super;};
struct PHFetchResultChangeDetails {NSObject super;};
struct SFSpeechRecognitionRequest {NSObject super;};
struct SKOverlayTransitionContext {NSObject super;};
struct TKSmartCardUserInteraction {NSObject super;};
struct TKTokenDriverConfiguration {NSObject super;};
struct UIAccessibilityCustomRotor {NSObject super;};
struct UICollectionViewUpdateItem {NSObject super;};
struct UIContextMenuConfiguration {NSObject super;};
struct UIListContentConfiguration {NSObject super;};
struct UITextInputStringTokenizer {NSObject super;};
struct UIUserNotificationCategory {NSObject super;};
struct UIUserNotificationSettings {NSObject super;};
typedef mach_port_t ipc_voucher_attr_control_t;
typedef mach_port_t ipc_voucher_attr_manager_t;
typedef natural_t *memory_object_fault_info_t;
typedef pthread_mutex_t std____1____libcpp_mutex_t;
typedef pthread_key_t std____1____libcpp_tls_key;
struct AEAssessmentConfiguration {NSObject super;};
struct ASAuthorizationController {NSObject super;};
struct ASCredentialIdentityStore {NSObject super;};
struct AVAssetSegmentTrackReport {NSObject super;};
struct AVAudioConverterPrimeInfo {AVAudioFrameCount leadingFrames;AVAudioFrameCount trailingFrames;};
struct AVAudioMixInputParameters {NSObject super;AVAudioMixInputParametersInternal *_inputParameters;};
struct AVCaptureSynchronizedData {NSObject super;AVCaptureSynchronizedDataInternal *_synchronizedDataInternal;};
struct AVOutputSettingsAssistant {NSObject super;AVOutputSettingsAssistantInternal *_internal;};
struct AVPlayerItemErrorLogEvent {NSObject super;AVPlayerItemErrorLogEventInternal *_playerItemErrorLogEvent;};
typedef OSStatus (*AudioUnitUninitializeProc)(void *);
struct CLKComplicationDescriptor {NSObject super;};
struct CLKFullColorImageProvider {NSObject super;};
typedef FourCharCode CMClosedCaptionFormatType;
struct CMDyskineticSymptomResult {NSObject super;};
struct CMMovementDisorderManager {NSObject super;};
struct HMAccessoryOwnershipToken {NSObject super;};
struct MCNearbyServiceAdvertiser {NSObject super;};
struct MDLAnimationBindComponent {NSObject super;};
struct MTLBufferLayoutDescriptor {NSObject super;};
struct MTLDepthStencilDescriptor {NSObject super;};
struct MTLFunctionConstantValues {NSObject super;};
struct MortRearrangementSubtable {STHeader header;};
struct MorxRearrangementSubtable {STXHeader header;};
struct NSCollectionLayoutSection {NSObject super;};
struct NSCollectionLayoutSpacing {NSObject super;};
struct NSOrderedCollectionChange {NSObject super;};
struct NSPersistentHistoryChange {NSObject super;};
struct NSURLSessionConfiguration {NSObject super;};
struct PHLivePhotoEditingContext {NSObject super;};
struct PHLivePhotoRequestOptions {NSObject super;};
struct QLThumbnailRepresentation {NSObject super;};
struct SFSpeechRecognitionResult {NSObject super;};
struct STScreenTimeConfiguration {NSObject super;};
struct UIApplicationShortcutIcon {NSObject super;};
struct UIApplicationShortcutItem {NSObject super;};
struct UIBackgroundConfiguration {NSObject super;};
struct UIBarButtonItemAppearance {NSObject super;};
struct UIGraphicsRendererContext {NSObject super;};
struct UIPrinterPickerController {NSObject super;};
struct UISearchDisplayController {NSObject super;};
struct UISpringLoadedInteraction {NSObject super;};
struct UITextDragPreviewRenderer {NSObject super;};
struct VSAccountProviderResponse {NSObject super;};
struct WCSessionUserInfoTransfer {NSObject super;};
struct XML_Memory_Handling_Suite {void *(*malloc_fcn)(size_t);void *(*realloc_fcn)(void *, size_t);void (*free_fcn)(void *);};
struct ipsec_wake_pkt_event_data {uuid_string_t wake_uuid;};
typedef void (*quadrature_function_array)(void *, size_t,  double *, double *);
typedef void (*setDocumentLocatorSAXFunc)(void *, xmlSAXLocatorPtr);
struct std____1__recursive_mutex {std____1____libcpp_recursive_mutex_t __m_;};
struct std__bad_array_new_length { std__bad_alloc cppsuper0;};
struct thread_latency_qos_policy {thread_latency_qos_t thread_latency_qos_tier;};
struct AVAudioMixingDestination {NSObject super;void *_impl;};
typedef OSStatus (*AudioOutputUnitStartProc)(void *);
struct CHHapticDynamicParameter {NSObject super;};
struct CKLocationSortDescriptor {NSSortDescriptor super;};
struct CKOperationConfiguration {NSObject super;};
struct CKUserIdentityLookupInfo {NSObject super;};
struct CMHeadphoneMotionManager {NSObject super;};
struct GKAchievementDescription {NSObject super;};
struct GKTurnBasedExchangeReply {NSObject super;};
struct HKElectrocardiogramQuery {HKQuery super;};
struct HMCharacteristicMetadata {NSObject super;};
struct INIntentResolutionResult {NSObject super;};
struct INLengthResolutionResult {INIntentResolutionResult super;};
struct INObjectResolutionResult {INIntentResolutionResult super;};
struct INPersonResolutionResult {INIntentResolutionResult super;};
struct INStringResolutionResult {INIntentResolutionResult super;};
struct INVolumeResolutionResult {INIntentResolutionResult super;};
struct MDLMeshBufferZoneDefault {NSObject super;};
struct MDLRelativeAssetResolver {NSObject super;};
struct MLCConvolutionDescriptor {NSObject super;};
struct MLUpdateProgressHandlers {NSObject super;};
struct MPPlayableContentManager {NSObject super;};
struct MPSCNNLossDataDescriptor {NSObject super;};
struct MPSCNNYOLOLossDescriptor {NSObject super;};
struct MPSNNOptimizerDescriptor {NSObject super;};
struct MTLComputePassDescriptor {NSObject super;};
struct NEEvaluateConnectionRule {NSObject super;};
struct NSCollectionLayoutAnchor {NSObject super;};
struct NSFetchRequestExpression {NSExpression super;};
struct NSPersistentHistoryToken {NSObject super;};
struct NSPersistentStoreRequest {NSObject super;};
struct PKPaymentMerchantSession {NSObject super;};
struct RPBroadcastConfiguration {NSObject super;};
struct SKCloudServiceController {NSObject super;};
typedef UBool UCharIteratorHasPrevious(UCharIterator *);
struct UIContextMenuInteraction {NSObject super;};
struct UIGraphicsRendererFormat {NSObject super;};
struct UIPresentationController {NSObject super;};
struct UISceneConnectionOptions {NSObject super;};
struct UISpringTimingParameters {NSObject super;};
struct UITextInputAssistantItem {NSObject super;};
struct UITextInputPasswordRules {NSObject super;};
struct UIUserNotificationAction {NSObject super;};
struct UIViewConfigurationState {NSObject super;};
struct UNNotificationAttachment {NSObject super;};
struct UNUserNotificationCenter {NSObject super;};
struct VNSequenceRequestHandler {NSObject super;};
struct VSAccountMetadataRequest {NSObject super;};
struct WKContextMenuElementInfo {NSObject super;};
typedef ssize_t vImageCVImageFormatError;
typedef int (*xmlC14NIsVisibleCallback)(void *, xmlNodePtr, xmlNodePtr);
struct AVCameraCalibrationData {NSObject super;AVCameraCalibrationDataInternal *_internal;};
struct AVFragmentedAssetMinder {NSObject super;AVFragmentedAssetMinderInternal *_fragmentedAssetMinder;};
struct AVFragmentedMovieMinder {AVFragmentedAssetMinder super;};
typedef OSStatus (*AudioOutputUnitStopProc)(void *);
typedef OSStatus (*AudioUnitInitializeProc)(void *);
struct BNNSLayerParametersGram {float alpha;BNNSNDArrayDescriptor i_desc;BNNSNDArrayDescriptor o_desc;};
struct CLKComplicationTemplate {NSObject super;};
typedef CMTime (*CMBufferGetTimeCallback)(CMBufferRef, void *);
struct CMMotionActivityManager {NSObject super;};
struct CNInstantMessageAddress {NSObject super;};
struct CVPlanarPixelBufferInfo {CVPlanarComponentInfo componentInfo[1];};
struct CXCallDirectoryProvider {NSObject super;};
struct CXProviderConfiguration {NSObject super;};
struct ENExposureConfiguration {NSObject super;};
struct GKChallengeEventHandler {NSObject super;};
struct GKTurnBasedEventHandler {NSObject super;};
struct HKLiveWorkoutDataSource {NSObject super;};
struct HMAccessorySetupPayload {NSObject super;};
struct INRelevantShortcutStore {NSObject super;};
struct INSendMessageAttachment {NSObject super;};
struct INSpeedResolutionResult {INIntentResolutionResult super;};
struct MDLMaterialPropertyNode {NSObject super;};
struct MDLTransformTranslateOp {NSObject super;};
struct MKLocalSearchCompletion {NSObject super;};
struct MKPointOfInterestFilter {NSObject super;};
struct MLCActivationDescriptor {NSObject super;};
struct MPMoviePlayerController {NSObject super;};
struct MPMusicPlayerController {NSObject super;};
struct MPSMatrixCopyDescriptor {NSObject super;};
struct MTLRenderPassDescriptor {NSObject super;};
struct MTLTextureReferenceType {MTLType super;};
struct NEHotspotHelperResponse {NSObject super;};
struct NETunnelNetworkSettings {NSObject super;};
struct NSBundleResourceRequest {NSObject super;};
struct NSEntityMigrationPolicy {NSObject super;};
struct NSFetchIndexDescription {NSObject super;};
struct NSFileProviderExtension {NSObject super;};
struct NSPersistentStoreResult {NSObject super;};
struct NSURLSessionTaskMetrics {NSObject super;};
struct PKAddPaymentPassRequest {NSObject super;};
struct PKShareablePassMetadata {NSObject super;};
struct PKTransitPassProperties {NSObject super;};
struct SFAuthenticationSession {NSObject super;};
struct SFContentBlockerManager {NSObject super;};
struct SFSpeechRecognitionTask {NSObject super;};
struct SKReceiptRefreshRequest {SKRequest super;NSDictionary *_properties;};
struct SKStoreReviewController {NSObject super;};
struct TKTokenKeychainContents {NSObject super;};
struct UICubicTimingParameters {NSObject super;};
struct UIDocumentBrowserAction {NSObject super;};
struct UISceneSizeRestrictions {NSObject super;};
struct WKSnapshotConfiguration {NSObject super;};
struct WKUserContentController {NSObject super;};
typedef mach_port_t memory_object_control_t;
typedef mach_port_t memory_object_default_t;
typedef int printf_arginfo_function( printf_info *, size_t, int *);
typedef mach_port_t processor_set_control_t;
typedef mach_port_t task_suspension_token_t;
struct ARQuickLookPreviewItem {NSObject super;};
struct ASAuthorizationRequest {NSObject super;};
struct AURenderCallbackStruct {AURenderCallback inputProc;void *inputProcRefCon;};
struct AVCapturePhotoSettings {NSObject super;AVCapturePhotoSettingsInternal *_internal;};
struct AVMediaSelectionOption {NSObject super;AVMediaSelectionOptionInternal *_mediaSelectionOption;};
struct AVPortraitEffectsMatte {NSObject super;AVPortraitEffectsMatteInternal *_internal;};
struct AVSpeechSynthesisVoice {NSObject super;};
struct BNNSLSTMDataDescriptor {BNNSNDArrayDescriptor data_desc;BNNSNDArrayDescriptor hidden_desc;BNNSNDArrayDescriptor cell_state_desc;};
struct BigEndianUnsignedFixed {UnsignedFixed bigEndianValue;};
struct CHHapticEventParameter {NSObject super;};
struct CHHapticParameterCurve {NSObject super;};
struct CIImageProcessorKernel {NSObject super;};
struct CNContactsUserDefaults {NSObject super;};
struct CPSessionConfiguration {NSObject super;};
struct CTTelephonyNetworkInfo {NSObject super;};
typedef CVOptionFlags CVPixelBufferLockFlags;
struct CXCallDirectoryManager {NSObject super;};
struct ENTemporaryExposureKey {NSObject super;};
struct GCPhysicalInputProfile {NSObject super;};
struct GKMonteCarloStrategist {NSObject super;};
struct GKTurnBasedParticipant {NSObject super;};
struct GLKMeshBufferAllocator {NSObject super;};
struct HKActivitySummaryQuery {HKQuery super;};
struct HKHeartbeatSeriesQuery {HKQuery super;};
struct HKStatisticsCollection {NSObject super;};
struct HKWorkoutConfiguration {NSObject super;};
struct INEnumResolutionResult {INIntentResolutionResult super;};
struct INFileResolutionResult {INIntentResolutionResult super;};
struct INMassResolutionResult {INIntentResolutionResult super;};
struct INNoteResolutionResult {INIntentResolutionResult super;};
struct INRideCompletionStatus {NSObject super;};
struct INTaskResolutionResult {INIntentResolutionResult super;};
struct INTemporalEventTrigger {NSObject super;};
struct INUpcomingMediaManager {NSObject super;};
struct MCNearbyServiceBrowser {NSObject super;};
struct MDLBundleAssetResolver {NSObject super;};
struct MDLVertexAttributeData {NSObject super;};
struct MIDICIDiscoveryManager {NSObject super;};
struct MKLocalSearchCompleter {NSObject super;};
struct MLCEmbeddingDescriptor {NSObject super;};
struct MLCOptimizerDescriptor {NSObject super;};
struct MLDictionaryConstraint {NSObject super;};
struct MLModelCollectionEntry {NSObject super;};
struct MLMultiArrayConstraint {NSObject super;};
struct MLParameterDescription {NSObject super;};
struct MPNowPlayingInfoCenter {NSObject super;};
struct MTKMeshBufferAllocator {NSObject super;};
struct MTLAttributeDescriptor {NSObject super;};
struct MTLSharedEventListener {NSObject super;};
struct MTLSharedTextureHandle {NSObject super;MTLSharedTextureHandlePrivate *_priv;};
struct MXSignpostIntervalData {NSObject super;};
struct NEHotspotConfiguration {NSObject super;};
struct NEHotspotHelperCommand {NSObject super;};
struct NSAtomicStoreCacheNode {NSObject super;};
struct NSCollectionLayoutItem {NSObject super;};
struct NSCollectionLayoutSize {NSObject super;};
struct NSDecimalNumberHandler {NSObject super;int _scale;unsigned int _roundingMode;unsigned int _raiseOnExactness;unsigned int _raiseOnOverflow;unsigned int _raiseOnUnderflow;unsigned int _raiseOnDivideByZero;unsigned int _unused;void *_reserved2;void *_reserved;};
struct NSIncrementalStoreNode {NSObject super;};
struct NSManagedObjectContext {NSObject super;};
struct NSQueryGenerationToken {NSObject super;};
struct NSStringDrawingContext {NSObject super;};
struct NSURLCredentialStorage {NSObject super;NSURLCredentialStorageInternal *_internal;};
struct PHAssetResourceManager {NSObject super;};
struct PHContentEditingOutput {NSObject super;};
struct PKPaymentRequestUpdate {NSObject super;};
struct QLFileThumbnailRequest {NSObject super;};
struct SCNGeometryTessellator {NSObject super;};
struct SCNPhysicsVehicleWheel {NSObject super;};
struct SFTranscriptionSegment {NSObject super;};
struct SKOverlayConfiguration {NSObject super;};
struct SNClassificationResult {NSObject super;};
struct SNClassifySoundRequest {NSObject super;};
struct TKSmartCardSlotManager {NSObject super;};
struct UICollectionViewLayout {NSObject super;};
struct UIPointerRegionRequest {NSObject super;};
struct UISearchSuggestionItem {NSObject super;};
struct UITabBarItemAppearance {NSObject super;};
struct UITableViewPlaceholder {NSObject super;};
struct UIViewPropertyAnimator {NSObject super;};
struct UNNotificationCategory {NSObject super;};
struct UNNotificationResponse {NSObject super;};
struct UNNotificationSettings {NSObject super;};
struct VSAccountManagerResult {NSObject super;};
struct WKContentRuleListStore {NSObject super;};
struct WKWebViewConfiguration {NSObject super;};
typedef mach_port_t *exception_port_array_t;
struct gss_buffer_desc_struct {size_t length;void *value;};
typedef natural_t mach_msg_type_number_t;
struct std____1____destruct_n {size_t __size_;};
typedef natural_t thread_policy_flavor_t;
struct thread_standard_policy {natural_t no_data;};
typedef void (*xmlStructuredErrorFunc)(void *, xmlErrorPtr);
struct AVAssetImageGenerator {NSObject super;AVAssetImageGeneratorInternal *_priv;};
struct AVAssetResourceLoader {NSObject super;AVAssetResourceLoaderInternal *_resourceLoader;};
struct AVCaptureAudioChannel {NSObject super;AVCaptureAudioChannelInternal *_internal;};
struct AVCaptureDeviceFormat {NSObject super;AVCaptureDeviceFormatInternal *_internal;};
struct AVMediaSelectionGroup {NSObject super;AVMediaSelectionGroupInternal *_mediaSelectionGroup;};
struct AVPlayerItemAccessLog {NSObject super;AVPlayerItemAccessLogInternal *_playerItemAccessLog;};
struct AudioClassDescription {OSType mType;OSType mSubType;OSType mManufacturer;};
struct CAMediaTimingFunction {NSObject super;CAMediaTimingFunctionPrivate *_priv;};
struct CLKComplicationServer {NSObject super;};
struct CPDashboardController {NSObject super;};
struct CPInterfaceController {NSObject super;};
struct EKRecurrenceDayOfWeek {NSObject super;};
struct ENExposureSummaryItem {NSObject super;};
struct HKAnchoredObjectQuery {HKQuery super;};
struct HKBiologicalSexObject {NSObject super;};
struct HKWheelchairUseObject {NSObject super;};
struct HMAddAccessoryRequest {NSObject super;};
struct HMCharacteristicEvent {HMEvent super;};
struct INDateComponentsRange {NSObject super;};
struct INDefaultCardTemplate {NSObject super;};
struct INRidePartySizeOption {NSObject super;};
struct INSpatialEventTrigger {NSObject super;};
struct INURLResolutionResult {INIntentResolutionResult super;};
struct INVoiceShortcutCenter {NSObject super;};
struct MCAdvertiserAssistant {NSObject super;};
struct MDLScatteringFunction {NSObject super;};
struct MDLTransformRotateXOp {NSObject super;};
struct MDLTransformRotateYOp {NSObject super;};
struct MDLTransformRotateZOp {NSObject super;};
struct MDLVertexBufferLayout {NSObject super;};
struct MIDINetworkConnection {NSObject super;void *_imp;};
typedef MIDIObjectRef MIDIThruConnectionRef;
struct MKLocalSearchResponse {NSObject super;};
struct MLCYOLOLossDescriptor {NSObject super;};
struct MLImageSizeConstraint {NSObject super;};
struct MPMovieAccessLogEvent {NSObject super;};
struct MPRemoteCommandCenter {NSObject super;};
struct MPSNNNeuronDescriptor {NSObject super;};
struct MTLArgumentDescriptor {NSObject super;};
struct MTLBlitPassDescriptor {NSObject super;};
struct MTLFunctionDescriptor {NSObject super;};
struct MortInsertionSubtable {STHeader header;};
struct NEFilterPacketContext {NSObject super;};
struct NEHotspotHS20Settings {NSObject super;};
struct NSComparisonPredicate {NSPredicate super;void *_reserved2;NSPredicateOperator *_predicateOperator;NSExpression *_lhs;NSExpression *_rhs;};
struct NSFileProviderManager {NSObject super;};
struct NSPersistentContainer {NSObject super;};
struct NSPropertyDescription {NSObject super;};
struct NSXPCListenerEndpoint {NSObject super;void *_internal;};
struct OSLogMessageComponent {NSObject super;};
struct PHContentEditingInput {NSObject super;};
struct PHImageRequestOptions {NSObject super;};
struct PHObjectChangeDetails {NSObject super;};
struct PHPickerConfiguration {NSObject super;};
struct PHVideoRequestOptions {NSObject super;};
struct PKDisbursementRequest {NSObject super;};
struct PKDisbursementVoucher {NSObject super;};
struct PKSuicaPassProperties {PKTransitPassProperties super;};
struct RPBroadcastController {NSObject super;};
struct SFContentBlockerState {NSObject super;};
struct SFNTLookupArrayHeader {SFNTLookupValue lookupValues[1];};
struct SNAudioStreamAnalyzer {NSObject super;};
struct SRMessagesUsageReport {NSObject super;};
struct SparseIterativeMethod {int method;SparseIterativeMethod___55D3F39CA3A5B677629EB14D504DE9DB options;};
typedef UChar32 UCharIteratorPrevious(UCharIterator *);
struct UISceneOpenURLOptions {NSObject super;};
struct UIScribbleInteraction {NSObject super;};
struct UNNotificationContent {NSObject super;};
struct UNNotificationRequest {NSObject super;};
struct UNNotificationTrigger {NSObject super;};
struct VNImageRequestHandler {NSObject super;};
struct WCSessionFileTransfer {NSObject super;};
struct WKBackForwardListItem {NSObject super;};
typedef mach_port_t eventlink_port_pair_t[2];
struct kernel_resource_sizes {natural_t task;natural_t thread;natural_t port;natural_t memory_region;natural_t memory_object;};
typedef mach_port_t mem_entry_name_port_t;
struct std__bad_array_length { std__bad_alloc cppsuper0;};
struct std__invalid_argument { std__logic_error cppsuper0;};
typedef natural_t task_inspect_flavor_t;
typedef void (*xmlDeregisterNodeFunc)(xmlNodePtr);
typedef off_t (*AAByteStreamSeekProc)(void *, off_t, int);
struct ARSkeletonDefinition {NSObject super;};
struct ASPasswordCredential {NSObject super;};
struct AVAssetExportSession {NSObject super;AVAssetExportSessionInternal *_exportSession;};
struct AVAssetSegmentReport {NSObject super;};
struct AVAudioUnitComponent {NSObject super;void *_impl;};
struct AVContentKeyResponse {NSObject super;AVContentKeyResponseInternal *_keyResponse;};
struct AVMetadataItemFilter {NSObject super;AVMetadataItemFilterInternal *_itemFilterInternal;};
struct AVPlayerItemErrorLog {NSObject super;AVPlayerItemErrorLogInternal *_playerItemErrorLog;};
typedef OSStatus (*AudioComponentMethod)(void *, ...);
typedef FourCharCode CMMetadataFormatType;
typedef FourCharCode CMSubtitleFormatType;
typedef FourCharCode CMTimeCodeFormatType;
struct CNChangeHistoryEvent {NSObject super;};
struct CSCustomAttributeKey {NSObject super;};
typedef CVImageBufferRef CVOpenGLESTextureRef;
struct ENExposureDaySummary {NSObject super;};
struct GKNotificationBanner {NSObject super;};
struct GKRandomDistribution {NSObject super;};
struct INTermsAndConditions {NSObject super;};
struct MDLPathAssetResolver {NSObject super;};
struct MDLTransformMatrixOp {NSObject super;};
struct MDLTransformOrientOp {NSObject super;};
struct MDLTransformRotateOp {NSObject super;};
struct MIDICIDiscoveredNode {NSObject super;};
struct MKDirectionsResponse {NSObject super;};
struct MKLocalSearchRequest {NSObject super;};
struct MKMapCameraZoomRange {NSObject super;};
struct MKMapSnapshotOptions {NSObject super;};
struct MLArrayBatchProvider {NSObject super;};
struct MLCPoolingDescriptor {NSObject super;};
struct MLFeatureDescription {NSObject super;};
struct MLModelConfiguration {NSObject super;};
struct MLSequenceConstraint {NSObject super;};
struct MPMovieErrorLogEvent {NSObject super;};
struct MPRemoteCommandEvent {NSObject super;};
struct MPSCNNLossDescriptor {NSObject super;};
struct MPSNDArrayDescriptor {NSObject super;};
struct MPSStateResourceList {NSObject super;};
struct MTLCaptureDescriptor {NSObject super;};
struct MTLSamplerDescriptor {NSObject super;};
struct MTLSharedEventHandle {NSObject super;MTLSharedEventHandlePrivate *_priv;};
struct MTLStencilDescriptor {NSObject super;};
struct MTLTextureDescriptor {NSObject super;};
struct MXBackgroundExitData {NSObject super;};
struct MXForegroundExitData {NSObject super;};
struct NEDNSSettingsManager {NSObject super;};
struct NEHotspotEAPSettings {NSObject super;};
struct NLLanguageRecognizer {NSObject super;};
struct NLModelConfiguration {NSObject super;};
struct NSBatchDeleteRequest {NSPersistentStoreRequest super;};
struct NSBatchInsertRequest {NSPersistentStoreRequest super;};
struct NSBatchUpdateRequest {NSPersistentStoreRequest super;};
struct NSConstraintConflict {NSObject super;};
struct NSFileProviderDomain {NSObject super;};
struct NSManagedObjectModel {NSObject super;};
struct NSNotificationCenter {NSObject super;void *_impl;void *_callback;void *_pad[11];};
struct NSSaveChangesRequest {NSPersistentStoreRequest super;};
struct NSTextCheckingResult {NSObject super;};
struct NSURLProtectionSpace {NSObject super;NSURLProtectionSpaceInternal *_internal;};
struct PKPaymentSummaryItem {NSObject super;};
struct QLThumbnailGenerator {NSObject super;};
struct SRAmbientLightSample {NSObject super;};
struct TKSmartCardPINFormat {NSObject super;};
struct TKTokenAuthOperation {NSObject super;};
struct TKTokenConfiguration {NSObject super;};
typedef UChar32 UCharIteratorCurrent(UCharIterator *);
typedef UBool UCharIteratorHasNext(UCharIterator *);
struct UIBarButtonItemGroup {NSObject super;};
struct UIFocusUpdateContext {NSObject super;};
struct UIImageConfiguration {NSObject super;};
struct UIPasteConfiguration {NSObject super;};
struct UIPointerInteraction {NSObject super;};
struct UIPreviewActionGroup {NSObject super;};
struct UIPreviewInteraction {NSObject super;};
struct UISceneConfiguration {NSObject super;};
struct UITableViewRowAction {NSObject super;};
struct UNNotificationAction {NSObject super;};
struct VNDocumentCameraScan {NSObject super;};
struct VNFaceLandmarkRegion {NSObject super;};
struct WKNavigationResponse {NSObject super;};
struct WKPreviewElementInfo {NSObject super;};
struct WKWebpagePreferences {NSObject super;};
struct dns_address_record_t {in_addr addr;};
struct ipc_info_space_basic {natural_t iisb_genno_mask;natural_t iisb_table_size;natural_t iisb_table_next;natural_t iisb_table_inuse;natural_t iisb_reserved[2];};
typedef natural_t mach_msg_type_size_t;
typedef natural_t mach_port_msgcount_t;
typedef mach_port_t memory_object_name_t;
typedef mig_routine_t (*mig_server_routine_t)(mach_msg_header_t *);
typedef vm_offset_t *page_address_array_t;
struct std__underflow_error { std__runtime_error cppsuper0;};
typedef natural_t task_policy_flavor_t;
struct ACAccountCredential {NSObject super;};
struct AEAssessmentSession {NSObject super;};
struct APActivationPayload {NSObject super;};
struct ARCollaborationData {NSObject super;};
struct ARGeoTrackingStatus {NSObject super;};
struct ASIdentifierManager {NSObject super;};
struct AUAudioUnitBusArray {NSObject super;};
struct AVAssetReaderOutput {NSObject super;AVAssetReaderOutputInternal *_internal;};
struct AVCaptureConnection {NSObject super;AVCaptureConnectionInternal *_internal;};
struct AVContentKeyRequest {NSObject super;AVContentKeyRequestInternal *_contentKeyRequest;};
struct AVContentKeySession {NSObject super;AVContentKeySessionInternal *_session;};
struct AVSpeechSynthesizer {NSObject super;};
struct AVSynchronizedLayer {CALayer super;AVSynchronizedLayerInternal *_syncLayer;};
typedef OSStatus (*AudioCodecResetProc)(void *);
struct CAPropertyAnimation {CAAnimation super;};
struct CIBarcodeDescriptor {NSObject super;};
struct CIRenderDestination {NSObject super;void *_priv;};
struct CKServerChangeToken {NSObject super;};
struct CLKWatchFaceLibrary {NSObject super;};
struct CPNavigationSession {NSObject super;};
struct CPVoiceControlState {NSObject super;};
struct GCControllerElement {NSObject super;};
struct GKTurnBasedExchange {NSObject super;};
struct HKWorkoutRouteQuery {HKQuery super;};
struct HMAccessoryCategory {NSObject super;};
struct INRelevanceProvider {NSObject super;};
struct INReservationAction {NSObject super;};
struct MDLMaterialProperty {NSObject super;};
struct MDLTransformScaleOp {NSObject super;};
struct MDLVertexDescriptor {NSObject super;};
struct MDLVoxelIndexExtent {MDLVoxelIndex minimumExtent;MDLVoxelIndex maximumExtent;};
struct MKClusterAnnotation {NSObject super;};
struct MKDirectionsRequest {NSObject super;};
struct MKMapCameraBoundary {NSObject super;};
struct MLCMatMulDescriptor {NSObject super;};
struct MLCTensorDescriptor {NSObject super;};
struct MLNumericConstraint {NSObject super;};
struct MLPredictionOptions {NSObject super;};
struct MPMediaQuerySection {NSObject super;};
struct MPNowPlayingSession {NSObject super;};
struct MPSMatrixDescriptor {NSObject super;};
struct MPSNNDefaultPadding {NSObject super;};
struct MPSVectorDescriptor {NSObject super;};
struct MTLFunctionConstant {NSObject super;};
struct MTLVertexDescriptor {NSObject super;};
struct MXDiagnosticPayload {NSObject super;};
struct NSBatchDeleteResult {NSPersistentStoreResult super;};
struct NSBatchInsertResult {NSPersistentStoreResult super;};
struct NSBatchUpdateResult {NSPersistentStoreResult super;};
struct NSCachedURLResponse {NSObject super;NSCachedURLResponseInternal *_internal;};
struct NSEntityDescription {NSObject super;};
struct NSHTTPCookieStorage {NSObject super;NSHTTPCookieStorageInternal *_internal;};
struct NSJSONSerialization {NSObject super;void *reserved[6];};
struct PHObjectPlaceholder {PHObject super;};
struct PKSecureElementPass {PKPass super;};
struct QLThumbnailProvider {NSObject super;};
struct SCNCameraController {NSObject super;};
struct SCNMaterialProperty {NSObject super;};
struct SNAudioFileAnalyzer {NSObject super;};
struct SRDeviceUsageReport {NSObject super;};
struct SRNotificationUsage {NSObject super;};
typedef OSType SecKeychainAttrType;
struct SparseMatrix_Double {SparseMatrixStructure structure;double *data;};
struct TKTokenKeyAlgorithm {NSObject super;};
struct TKTokenKeychainItem {NSObject super;};
struct UIFeedbackGenerator {NSObject super;};
struct UIFocusMovementHint {NSObject super;};
struct UIGestureRecognizer {NSObject super;};
struct UILocalNotification {NSObject super;};
struct UIPencilInteraction {NSObject super;};
struct UIPopoverController {NSObject super;};
struct UIPreviewParameters {NSObject super;};
struct UIPrintPageRenderer {NSObject super;};
struct UIScreenshotService {NSObject super;};
struct UITextSelectionRect {NSObject super;};
struct UNNotificationSound {NSObject super;};
typedef UniversalProcPtr *UniversalProcHandle;
struct WKFindConfiguration {NSObject super;};
struct WKWebsiteDataRecord {NSObject super;};
struct _xmlSchemaFacetLink {_xmlSchemaFacetLink *next;xmlSchemaFacetPtr facet;};
typedef mach_port_t exception_handler_t;
struct gss_OID_desc_struct {OM_uint32 length;void *elements;};
typedef mach_port_t ipc_space_inspect_t;
typedef vm_offset_t mach_port_context_t;
typedef natural_t mach_port_mscount_t;
struct malloc_statistics_t {unsigned int blocks_in_use;size_t size_in_use;size_t max_size_in_use;size_t size_allocated;};
struct std__overflow_error { std__runtime_error cppsuper0;};
typedef natural_t thread_state_data_t[1296];
typedef void vm_range_recorder_t(task_t, void *, unsigned int, vm_range_t *, unsigned int);
typedef void (*xlinkNodeDetectFunc)(void *, xmlNodePtr);
typedef void (*xmlRegisterNodeFunc)(xmlNodePtr);
typedef int (*xmlXPathConvertFunc)(xmlXPathObjectPtr, int);
typedef int (*AAEntryMessageProc)(void *, AAEntryMessage,  char *, void *);
struct AVAssetWriterInput {NSObject super;AVAssetWriterInputInternal *_internal;};
struct AVCaptureInputPort {NSObject super;AVCaptureInputPortInternal *_internal;};
struct AVMediaDataStorage {NSObject super;AVMediaDataStorageInternal *_mediaDataStorageInternal;};
struct AVPlayerItemOutput {NSObject super;AVPlayerItemOutputInternal *_outputInternal;};
struct AVVideoComposition {NSObject super;AVVideoCompositionInternal *_videoComposition;};
struct Block_callbacks_RR {size_t size;void (*retain)( void *);void (*release)( void *);void (*destructInstance)( void *);};
typedef Fixed BslnBaselineRecord[32];
struct CIImageAccumulator {NSObject super;void *_state;};
struct CKNotificationInfo {NSObject super;};
struct CKShareParticipant {NSObject super;};
struct CMSampleTimingInfo {CMTime duration;CMTime presentationTimeStamp;CMTime decodeTimeStamp;};
struct CPNowPlayingButton {NSObject super;};
struct DCAppAttestService {NSObject super;};
struct EAAccessoryManager {NSObject super;NSMutableArray *_connectedAccessories;};
struct GKLeaderboardEntry {NSObject super;};
struct GKLeaderboardScore {NSObject super;};
struct GKMinmaxStrategist {NSObject super;};
struct HKCorrelationQuery {HKQuery super;};
struct HMAccessoryBrowser {NSObject super;};
struct HMAccessoryProfile {NSObject super;};
struct INCallRecordFilter {NSObject super;};
struct INMediaDestination {NSObject super;};
struct INObjectCollection {NSObject super;};
struct INRelevantShortcut {NSObject super;};
struct INRideFareLineItem {NSObject super;};
struct LPMetadataProvider {NSObject super;};
struct MDLObjectContainer {NSObject super;};
struct MDLSubmeshTopology {NSObject super;};
struct MDLVertexAttribute {NSObject super;};
struct MIDICIProfileState {NSObject super;};
struct MIDINetworkSession {NSObject super;void *_imp;};
struct MLCTensorParameter {NSObject super;};
struct MLModelDescription {NSObject super;};
struct MPMediaItemArtwork {NSObject super;};
struct MPSGraphShapedType {NSObject super;};
struct MPSGraphTensorData {NSObject super;};
struct MPSImageDescriptor {NSObject super;};
struct MPSeekCommandEvent {MPRemoteCommandEvent super;};
struct MTLLinkedFunctions {NSObject super;};
struct MTLVertexAttribute {NSObject super;};
struct NCWidgetController {NSObject super;};
struct NEPacketTunnelFlow {NSObject super;};
struct NSAssertionHandler {NSObject super;void *_reserved;};
struct NSAttributedString {NSObject super;};
struct NSExtensionContext {NSObject super;};
struct NSLayoutConstraint {NSObject super;};
struct NSMigrationManager {NSObject super;};
struct NSPointerFunctions {NSObject super;};
struct NSValueTransformer {NSObject super;};
struct RPBroadcastHandler {NSObject super;};
struct SCNAnimationPlayer {NSObject super;};
struct SCNGeometryElement {NSObject super;};
struct SCNPhysicsBehavior {NSObject super;};
struct SFSpeechRecognizer {NSObject super;};
struct SKKeyframeSequence {NSObject super;};
struct SKReachConstraints {NSObject super;};
struct SRApplicationUsage {NSObject super;};
struct SRPhoneUsageReport {NSObject super;};
struct SparseMatrix_Float {SparseMatrixStructure structure;float *data;};
struct TKTokenKeychainKey {TKTokenKeychainItem super;};
struct UICommandAlternate {NSObject super;};
struct UIContextualAction {NSObject super;};
struct UIDynamicItemGroup {NSObject super;};
struct UIGraphicsRenderer {NSObject super;};
struct UIPointerLockState {NSObject super;};
struct UIStatusBarManager {NSObject super;};
struct WKNavigationAction {NSObject super;};
struct WKPDFConfiguration {NSObject super;};
struct WKWebsiteDataStore {NSObject super;};
struct _xmlSchemaTypeLink {_xmlSchemaTypeLink *next;xmlSchemaTypePtr type;};
typedef xmlParserInputPtr docbParserInputPtr;
typedef mach_vm_offset_t *emulation_vector_t;
struct gss_krb5_lucid_key {OM_uint32 type;OM_uint32 length;void *data;};
struct host_cpu_load_info {natural_t cpu_ticks[4];};
typedef xmlParserInputPtr htmlParserInputPtr;
typedef natural_t mach_msg_timeout_t;
typedef natural_t mach_port_rights_t;
struct sqlite3_io_methods {int iVersion;int (*xClose)(sqlite3_file *);int (*xRead)(sqlite3_file *, void *, int, sqlite3_int64);int (*xWrite)(sqlite3_file *,  void *, int, sqlite3_int64);int (*xTruncate)(sqlite3_file *, sqlite3_int64);int (*xSync)(sqlite3_file *, int);int (*xFileSize)(sqlite3_file *, sqlite3_int64 *);int (*xLock)(sqlite3_file *, int);int (*xUnlock)(sqlite3_file *, int);int (*xCheckReservedLock)(sqlite3_file *, int *);int (*xFileControl)(sqlite3_file *, int, void *);int (*xSectorSize)(sqlite3_file *);int (*xDeviceCharacteristics)(sqlite3_file *);int (*xShmMap)(sqlite3_file *, int, int, int, void **);int (*xShmLock)(sqlite3_file *, int, int, int);void (*xShmBarrier)(sqlite3_file *);int (*xShmUnmap)(sqlite3_file *, int);int (*xFetch)(sqlite3_file *, sqlite3_int64, int, void **);int (*xUnfetch)(sqlite3_file *, sqlite3_int64, void *);};
typedef void (*xmlListDeallocator)(xmlLinkPtr);
struct ARGeometryElement {NSObject super;};
struct ARReferenceObject {NSObject super;};
typedef SCNDebugOptions ARSCNDebugOptions;
struct ATTrackingManager {NSObject super;};
struct AUAudioUnitPreset {NSObject super;};
typedef OSStatus AUAudioUnitStatus;
struct AVAssetTrackGroup {NSObject super;AVAssetTrackGroupInternal *_assetTrackGroup;};
struct AVDisplayCriteria {NSObject super;AVDisplayCriteriaInternal *_displayCriteria;};
struct AVFragmentedMovie {AVMovie super;};
struct AVPlayerItemTrack {NSObject super;AVPlayerItemTrackInternal *_playerItemTrack;};
struct AVSpeechUtterance {NSObject super;};
struct CAReplicatorLayer {CALayer super;};
struct CC_SHA256state_st {CC_LONG count[2];CC_LONG hash[8];CC_LONG wbuf[16];};
struct CC_SHA512state_st {CC_LONG64 count[2];CC_LONG64 hash[8];CC_LONG64 wbuf[16];};
struct CIFilterGenerator {NSObject super;CIFilterGeneratorStruct *_filterGeneratorStruct;};
typedef FourCharCode CMMuxedStreamType;
typedef FourCharCode CMPixelFormatType;
struct CNContactProperty {NSObject super;};
struct CNContactRelation {NSObject super;};
struct CPDashboardButton {NSObject super;};
struct CPInformationItem {NSObject super;};
struct CPNavigationAlert {NSObject super;};
struct CPPointOfInterest {NSObject super;};
struct CPTravelEstimates {NSObject super;};
struct CSSearchableIndex {NSObject super;};
typedef CVImageBufferRef CVMetalTextureRef;
struct GCExtendedGamepad {GCPhysicalInputProfile super;};
struct GKComponentSystem {NSObject super;};
struct GKNSPredicateRule {GKRule super;};
struct HKActivitySummary {NSObject super;};
struct HKBloodTypeObject {NSObject super;};
struct HKStatisticsQuery {HKQuery super;};
struct ICScannerBandData {NSObject super;};
struct INRestaurantOffer {NSObject super;};
struct INSpeakableString {NSObject super;};
struct MDLMatrix4x4Array {NSObject super;};
struct MDLMeshBufferData {NSObject super;};
struct MDLTextureSampler {NSObject super;};
struct MDLTransformStack {NSObject super;};
typedef MIDIObjectRef MIDIDeviceListRef;
struct MKOverlayRenderer {NSObject super;};
struct MKPointAnnotation {MKShape super;};
struct MKReverseGeocoder {NSObject super;};
struct MLCLSTMDescriptor {NSObject super;};
struct MLCLossDescriptor {NSObject super;};
struct MLImageConstraint {NSObject super;};
struct MLModelCollection {NSObject super;};
struct MPSGraphOperation {NSObject super;};
struct MTLCaptureManager {NSObject super;};
struct MTLCompileOptions {NSObject super;};
struct MTLHeapDescriptor {NSObject super;};
struct MXHistogramBucket {NSObject super;};
struct NEDNSProxyManager {NSObject super;};
struct NSAutoreleasePool {NSObject super;void *_token;void *_reserved3;void *_reserved2;void *_reserved;};
struct NSKeyedUnarchiver {NSCoder super;};
struct NSManagedObjectID {NSObject super;};
struct NSMethodSignature {NSObject super;};
struct NSMutableIndexSet {NSIndexSet super;void *_reserved;};
struct NSPersistentStore {NSObject super;};
struct NSPropertyMapping {NSObject super;};
struct PHCloudIdentifier {NSObject super;};
struct PKPushCredentials {NSObject super;};
struct SCNAnimationEvent {NSObject super;};
struct SCNGeometrySource {NSObject super;};
struct SCNParticleSystem {NSObject super;};
struct SCNPhysicsContact {NSObject super;};
struct SCNPhysicsVehicle {SCNPhysicsBehavior super;};
struct SCNTimingFunction {NSObject super;};
struct SFAcousticFeature {NSObject super;};
struct SRKeyboardMetrics {NSObject super;};
typedef UChar32 UCharIteratorNext(UCharIterator *);
struct UIDragInteraction {NSObject super;};
struct UIDropInteraction {NSObject super;};
struct UIDynamicAnimator {NSObject super;};
struct UIDynamicBehavior {NSObject super;};
struct UIGravityBehavior {UIDynamicBehavior super;};
struct UIStoryboardSegue {NSObject super;};
struct UITargetedPreview {NSObject super;};
struct UITextInteraction {NSObject super;};
struct UITextPlaceholder {NSObject super;};
struct UITraitCollection {NSObject super;};
struct VSAccountMetadata {NSObject super;};
struct WKBackForwardList {NSObject super;};
struct WKContentRuleList {NSObject super;};
struct WKHTTPCookieStore {NSObject super;};
typedef mach_port_t arcade_register_t;
struct at_block_buffer_t {void *blocks;size_t rowBytes;size_t sliceBytes;};
typedef xmlParserCtxtPtr docbParserCtxtPtr;
typedef xmlSAXHandlerPtr docbSAXHandlerPtr;
typedef xmlParserCtxtPtr htmlParserCtxtPtr;
typedef xmlSAXHandlerPtr htmlSAXHandlerPtr;
typedef mach_port_t *mach_port_array_t;
typedef natural_t mach_port_right_t;
typedef natural_t mach_port_seqno_t;
typedef natural_t mach_port_urefs_t;
struct __attribute__((packed)) nd_router_solicit {icmp6_hdr nd_rs_hdr;};
typedef processor_t *processor_array_t;
struct std__domain_error { std__logic_error cppsuper0;};
struct std__length_error { std__logic_error cppsuper0;};
struct std__out_of_range { std__logic_error cppsuper0;};
typedef mach_port_t task_policy_get_t;
typedef mach_port_t task_policy_set_t;
struct ADInterstitialAd {NSObject super;};
struct ARGeometrySource {NSObject super;};
struct ARMatteGenerator {NSObject super;};
struct ARReferenceImage {NSObject super;};
struct ARTrackedRaycast {NSObject super;};
struct AVAudioConverter {NSObject super;void *_impl;};
struct AVAudioSequencer {NSObject super;void *_impl;};
struct AVCaptureSession {NSObject super;AVCaptureSessionInternal *_internal;};
struct AVFrameRateRange {NSObject super;AVFrameRateRangeInternal *_internal;};
struct AVMediaSelection {NSObject super;AVMediaSelectionInternal *_mediaSelection;};
struct AVMetadataObject {NSObject super;AVMetadataObjectInternal *_objectInternal;};
struct BGAppRefreshTask {BGTask super;};
struct BGProcessingTask {BGTask super;};
struct CAAnimationGroup {CAAnimation super;};
struct CABasicAnimation {CAPropertyAnimation super;};
struct CATransformLayer {CALayer super;};
struct CKNotificationID {NSObject super;};
struct CKOperationGroup {NSObject super;};
struct CLKGaugeProvider {NSObject super;};
struct CLKImageProvider {NSObject super;};
typedef FourCharCode CMAudioCodecType;
struct CMMotionActivity {CMLogItem super;};
struct CMPedometerEvent {NSObject super;};
struct CMSensorDataList {NSObject super;};
struct CMSensorRecorder {NSObject super;};
typedef FourCharCode CMTextFormatType;
typedef FourCharCode CMVideoCodecType;
struct CSSearchableItem {NSObject super;};
struct CTSubscriberInfo {NSObject super;};
struct CXCallController {NSObject super;};
struct ENExposureWindow {NSObject super;};
struct Fts5ExtensionApi {int iVersion;void *(*xUserData)(Fts5Context *);int (*xColumnCount)(Fts5Context *);int (*xRowCount)(Fts5Context *, sqlite3_int64 *);int (*xColumnTotalSize)(Fts5Context *, int, sqlite3_int64 *);int (*xTokenize)(Fts5Context *,  char *, int, void *, int (*)(void *, int,  char *, int, int, int));int (*xPhraseCount)(Fts5Context *);int (*xPhraseSize)(Fts5Context *, int);int (*xInstCount)(Fts5Context *, int *);int (*xInst)(Fts5Context *, int, int *, int *, int *);sqlite3_int64 (*xRowid)(Fts5Context *);int (*xColumnText)(Fts5Context *, int,  char **, int *);int (*xColumnSize)(Fts5Context *, int, int *);int (*xQueryPhrase)(Fts5Context *, int, void *, int (*)( Fts5ExtensionApi *, Fts5Context *, void *));int (*xSetAuxdata)(Fts5Context *, void *, void (*)(void *));void *(*xGetAuxdata)(Fts5Context *, int);int (*xPhraseFirst)(Fts5Context *, int, Fts5PhraseIter *, int *, int *);void (*xPhraseNext)(Fts5Context *, Fts5PhraseIter *, int *, int *);int (*xPhraseFirstColumn)(Fts5Context *, int, Fts5PhraseIter *, int *);void (*xPhraseNextColumn)(Fts5Context *, Fts5PhraseIter *, int *);};
struct GKLeaderboardSet {NSObject super;};
struct GKTurnBasedMatch {NSObject super;};
struct GLKTextureLoader {NSObject super;};
struct HKSourceRevision {NSObject super;};
struct HKWorkoutBuilder {NSObject super;};
struct HKWorkoutSession {NSObject super;};
struct HMCharacteristic {NSObject super;};
struct INCurrencyAmount {NSObject super;};
struct INIntentResponse {NSObject super;};
struct INPaymentAccount {NSObject super;};
struct INRecurrenceRule {NSObject super;};
struct JSVirtualMachine {NSObject super;};
struct MDLAnimatedValue {NSObject super;};
struct MDLMeshBufferMap {NSObject super;};
struct MDLTextureFilter {NSObject super;};
struct MIDICIDeviceInfo {NSObject super;};
struct MKGeoJSONDecoder {NSObject super;};
struct MKGeoJSONFeature {NSObject super;};
struct MKMapSnapshotter {NSObject super;};
struct MPMediaPredicate {NSObject super;};
struct MPMovieAccessLog {NSObject super;};
struct MPSCommandBuffer {NSObject super;};
struct MPSPolygonBuffer {NSObject super;};
struct MPSRNNDescriptor {NSObject super;};
struct MSServiceAccount {NSObject super;};
struct MTKTextureLoader {NSObject super;};
struct NEAppPushManager {NSObject super;};
struct NEFilterSettings {NSObject super;};
struct NEHotspotNetwork {NSObject super;};
struct NFCReaderSession {NSObject super;};
struct NIDiscoveryToken {NSObject super;};
struct NSConstantString {NSSimpleCString super;};
struct NSDateComponents {NSObject super;};
struct NSOperationQueue {NSObject super;};
struct NSParagraphStyle {NSObject super;};
struct NSTextAttachment {NSObject super;};
struct NSURLSessionTask {NSObject super;};
struct PHAdjustmentData {NSObject super;};
struct PKPaymentRequest {NSObject super;};
struct PKShippingMethod {PKPaymentSummaryItem super;};
struct QLThumbnailReply {NSObject super;};
struct RPScreenRecorder {NSObject super;};
struct SCNHitTestResult {NSObject super;};
struct SCNLevelOfDetail {NSObject super;};
struct SCNReferenceNode {SCNNode super;};
struct SFVoiceAnalytics {NSObject super;};
struct SKAttributeValue {NSObject super;};
struct SKMutablePayment {SKPayment super;};
struct SKPhysicsContact {NSObject super;};
struct SKTileDefinition {NSObject super;};
struct SNClassification {NSObject super;};
struct SRDeletionRecord {NSObject super;};
struct SRWristDetection {NSObject super;};
struct TKSmartCardToken {TKToken super;};
struct UIFontDescriptor {NSObject super;};
struct UIMenuController {NSObject super;};
struct UINavigationItem {NSObject super;};
struct UIOpenURLContext {NSObject super;};
struct UIPrintFormatter {NSObject super;};
typedef UnsignedFixed *UnsignedFixedPtr;
struct VNRecognizedText {NSObject super;};
struct VNVideoProcessor {NSObject super;};
struct VSAccountManager {NSObject super;};
struct WKSecurityOrigin {NSObject super;};
struct WKWindowFeatures {NSObject super;};
struct axr_pixel_data_t {void *data;size_t rowBytes;};
typedef exception_handler_t exception_port_t;
struct hash_info_bucket {natural_t hib_count;};
typedef host_t host_name_port_t;
typedef mach_port_t ipc_space_read_t;
typedef mach_port_t mach_eventlink_t;
struct mach_port_limits {mach_port_msgcount_t mpl_qlimit;};
typedef natural_t mach_port_name_t;
typedef natural_t mach_port_type_t;
typedef processor_t processor_port_t;
typedef semaphore_t semaphore_port_t;
struct std____1___PairT {size_t first;size_t second;};
struct std__range_error { std__runtime_error cppsuper0;};
typedef mach_port_t thread_inspect_t;
typedef mach_port_t vm_map_inspect_t;
typedef mach_port_t vm_named_entry_t;
struct ARConfiguration {NSObject super;};
struct ARHitTestResult {NSObject super;};
struct ARLightEstimate {NSObject super;};
struct ARPlaneGeometry {NSObject super;};
struct ARRaycastResult {NSObject super;};
struct ASAuthorization {NSObject super;};
struct AUParameterNode {NSObject super;};
struct AVAudioRecorder {NSObject super;void *_impl;};
struct AVCaptureDevice {NSObject super;AVCaptureDeviceInternal *_internal;};
struct AVCaptureOutput {NSObject super;AVCaptureOutputInternal *_outputInternal;};
struct AVMetadataGroup {NSObject super;};
struct AVRouteDetector {NSObject super;AVRouteDetectorInternal *_routeDetectorInternal;};
struct AVTextStyleRule {NSObject super;AVTextStyleRuleInternal *_textStyleRule;};
struct AXCustomContent {NSObject super;};
struct BGTaskScheduler {NSObject super;};
struct BigEndianOSType {OSType bigEndianValue;};
struct CAGradientLayer {CALayer super;};
struct CC_SHA1state_st {CC_LONG h0;CC_LONG h1;CC_LONG h2;CC_LONG h3;CC_LONG h4;CC_LONG Nl;CC_LONG Nh;CC_LONG data[16];int num;};
struct CHHapticPattern {NSObject super;};
struct CKShareMetadata {NSObject super;};
struct CLKComplication {NSObject super;};
struct CLKTextProvider {NSObject super;};
struct CMPedometerData {NSObject super;};
struct CNPostalAddress {NSObject super;};
struct CNSocialProfile {NSObject super;};
struct EKRecurrenceEnd {NSObject super;};
struct GCDeviceBattery {NSObject super;};
struct GCDeviceHaptics {NSObject super;};
struct GCKeyboardInput {GCPhysicalInputProfile super;};
struct GKObstacleGraph {GKGraph super;};
struct HKDeletedObject {NSObject super;};
struct HKDocumentQuery {HKQuery super;};
struct HKObserverQuery {HKQuery super;};
struct HKSeriesBuilder {NSObject super;};
struct HMAccessControl {NSObject super;};
struct HMCameraControl {NSObject super;};
struct HMCameraProfile {HMAccessoryProfile super;};
struct HMLocationEvent {HMEvent super;};
struct HMPresenceEvent {HMEvent super;};
struct INBalanceAmount {NSObject super;};
struct INObjectSection {NSObject super;};
struct INPaymentAmount {NSObject super;};
struct INPaymentMethod {NSObject super;};
struct INPaymentRecord {NSObject super;};
struct INTicketedEvent {NSObject super;};
struct INVoiceShortcut {NSObject super;};
struct MIDICIResponder {NSObject super;};
typedef MIDIObjectRef MIDIEndpointRef;
struct MIDINetworkHost {NSObject super;void *_imp;};
struct MKMultiPolyline {MKShape super;};
struct MLUpdateContext {NSObject super;};
struct MPMovieErrorLog {NSObject super;};
struct MPRemoteCommand {NSObject super;};
struct MPSNNFilterNode {NSObject super;};
struct MPSSVGFDenoiser {NSObject super;};
struct MPTimedMetadata {NSObject super;};
struct MSMessageLayout {NSObject super;};
struct MTLStructMember {NSObject super;};
struct MXCallStackTree {NSObject super;};
struct MXMetricManager {NSObject super;};
struct MXMetricPayload {NSObject super;};
struct NEFilterManager {NSObject super;};
struct NEFilterVerdict {NSObject super;};
struct NEHotspotHelper {NSObject super;};
struct NEProxySettings {NSObject super;};
struct NEVPNConnection {NSObject super;};
struct NIConfiguration {NSObject super;};
struct NKAssetDownload {NSObject super;};
struct NSConditionLock {NSObject super;void *_priv;};
struct NSEntityMapping {NSObject super;};
struct NSExtensionItem {NSObject super;};
struct NSKeyedArchiver {NSCoder super;};
struct NSLayoutManager {NSObject super;};
struct NSManagedObject {NSObject super;};
struct NSMergeConflict {NSObject super;};
struct NSRecursiveLock {NSObject super;void *_priv;};
struct NSTextContainer {NSObject super;};
struct NSURLComponents {NSObject super;};
struct NSURLConnection {NSObject super;NSURLConnectionInternal *_internal;};
struct NSURLCredential {NSObject super;NSURLCredentialInternal *_internal;};
struct NSUnitConverter {NSObject super;};
struct NSXPCConnection {NSObject super;};
struct NWTCPConnection {NSObject super;};
struct NWTLSParameters {NSObject super;};
struct PHAssetResource {NSObject super;};
struct PHChangeRequest {NSObject super;};
struct PKPaymentMethod {NSObject super;};
struct SCNPhysicsField {NSObject super;};
struct SCNPhysicsShape {NSObject super;};
struct SCNPhysicsWorld {NSObject super;};
struct SFTranscription {NSObject super;};
struct SKArcadeService {NSObject super;};
struct SKTileGroupRule {NSObject super;};
struct TKSmartCardSlot {NSObject super;};
struct UIAccelerometer {NSObject super;};
struct UIBarAppearance {NSObject super;};
struct UICellAccessory {NSObject super;};
struct UIFieldBehavior {UIDynamicBehavior super;};
struct UIFocusDebugger {NSObject super;};
struct UIPointerEffect {NSObject super;};
struct UIPointerRegion {NSObject super;};
struct UIPreviewAction {NSObject super;};
struct UIPreviewTarget {NSObject super;};
struct UITextInputMode {NSObject super;};
struct VNDetectedPoint {VNPoint super;};
struct VNFaceLandmarks {NSObject super;};
struct VNGeometryUtils {NSObject super;};
struct WKScriptMessage {NSObject super;};
struct _xmlDOMWrapCtxt {void *_private;int type;void *namespaceMap;xmlDOMWrapAcquireNsFunction getNsForNodeFunc;};
struct _xmlSchemaAnnot {_xmlSchemaAnnot *next;xmlNodePtr content;};
typedef intptr_t dispatch_once_t;
struct ftrimactivefile {off_t fta_offset;off_t fta_length;};
typedef OM_uint32 *gss_status_id_t;
typedef mach_port_t host_security_t;
typedef mach_port_t ipc_eventlink_t;
typedef lock_set_t lock_set_port_t;
typedef mach_error_t (*mach_error_fn_t)(void);
typedef natural_t mach_msg_size_t;
typedef mach_port_t memory_object_t;
typedef mach_port_t processor_set_t;
struct short_hand_verf {opaque_auth new_cred;};
struct simd__double2x2 { simd_double2x2 cppsuper0;};
struct simd__double2x3 { simd_double2x3 cppsuper0;};
struct simd__double2x4 { simd_double2x4 cppsuper0;};
struct simd__double3x2 { simd_double3x2 cppsuper0;};
struct simd__double3x3 { simd_double3x3 cppsuper0;};
struct simd__double3x4 { simd_double3x4 cppsuper0;};
struct simd__double4x2 { simd_double4x2 cppsuper0;};
struct simd__double4x3 { simd_double4x3 cppsuper0;};
struct simd__double4x4 { simd_double4x4 cppsuper0;};
struct std____1__mutex {std____1____libcpp_mutex_t __m_;};
typedef natural_t thread_flavor_t;
typedef mach_port_t vm_task_entry_t;
struct ACAccountStore {NSObject super;};
struct ARFaceGeometry {NSObject super;};
struct ARMeshGeometry {NSObject super;};
struct ARRaycastQuery {NSObject super;};
struct AUAudioUnitBus {NSObject super;};
struct AVAudioSession {NSObject super;void *_impl;};
struct AVCaptureInput {NSObject super;AVCaptureInputInternal *_inputInternal;};
struct AVCapturePhoto {NSObject super;AVCapturePhotoInternal *_internal;};
struct AVMetadataItem {NSObject super;AVMetadataItemInternal *_priv;};
struct AVMutableMovie {AVMovie super;AVMutableMovieInternal *_mutableMovieInternal;};
struct AVPlayerLooper {NSObject super;AVPlayerLooperInternal *_looper;};
struct BigEndianFixed {Fixed bigEndianValue;};
struct CAEmitterLayer {CALayer super;};
struct CBL2CAPChannel {NSObject super;};
struct CC_MD2state_st {int num;unsigned char data[16];CC_LONG cksm[16];CC_LONG state[16];};
struct CC_MD5state_st {CC_LONG A;CC_LONG B;CC_LONG C;CC_LONG D;CC_LONG Nl;CC_LONG Nh;CC_LONG data[16];int num;};
struct CHHapticEngine {NSObject super;};
struct CKNotification {NSObject super;};
struct CKRecordZoneID {NSObject super;};
struct CKSubscription {NSObject super;};
struct CKUserIdentity {NSObject super;};
struct CMAltitudeData {CMLogItem super;};
struct CMTremorResult {NSObject super;};
struct CNContactStore {NSObject super;};
struct CNFetchRequest {NSObject super;};
struct CNLabeledValue {NSObject super;};
struct CNMutableGroup {CNGroup super;};
struct CPBaseListItem {NSObject super;};
typedef FourCharCode CTFontTableTag;
struct CXCallObserver {NSObject super;};
struct EAGLSharegroup {NSObject super;_EAGLSharegroupPrivate *_private;};
struct ENExposureInfo {NSObject super;};
struct ENScanInstance {NSObject super;};
struct GCMicroGamepad {GCPhysicalInputProfile super;};
struct GKDecisionNode {NSObject super;};
struct GKDecisionTree {NSObject super;};
struct GKMatchRequest {NSObject super;};
struct GKQuadtreeNode {NSObject super;};
struct GKRandomSource {NSObject super;};
struct GKStateMachine {NSObject super;};
struct HKFHIRResource {NSObject super;};
struct HKWorkoutEvent {NSObject super;};
struct HMCameraSource {NSObject super;};
struct HMCameraStream {HMCameraSource super;};
struct HMServiceGroup {NSObject super;};
struct INPersonHandle {NSObject super;};
struct JSManagedValue {NSObject super;};
struct LPLinkMetadata {NSObject super;};
struct MKMultiPolygon {MKShape super;};
struct MKUserLocation {NSObject super;};
struct MLFeatureValue {NSObject super;};
struct MLParameterKey {MLKey super;};
struct MPMediaLibrary {NSObject super;};
struct MPSCNNLossNode {MPSNNFilterNode super;};
struct MPSGraphDevice {NSObject super;};
struct MPSGraphTensor {NSObject super;};
struct MPSNNImageNode {NSObject super;};
struct MPSNNScaleNode {MPSNNFilterNode super;};
struct MPSNNStateNode {NSObject super;};
struct MSConversation {NSObject super;};
struct MSSetupSession {NSObject super;};
struct MTLPointerType {MTLType super;};
struct NEAppProxyFlow {NSObject super;};
struct NEFilterReport {NSObject super;};
struct NEFlowMetaData {NSObject super;};
struct NEIPv4Settings {NSObject super;};
struct NEIPv6Settings {NSObject super;};
struct NEOnDemandRule {NSObject super;};
struct NFCISO7816APDU {NSObject super;};
struct NFCNDEFMessage {NSObject super;};
struct NFCNDEFPayload {NSObject super;};
struct NFCVASResponse {NSObject super;};
struct NINearbyObject {NSObject super;};
struct NSCharacterSet {NSObject super;};
struct NSDateInterval {NSObject super;};
struct NSFetchRequest {NSPersistentStoreRequest super;};
struct NSFileSecurity {NSObject super;};
struct NSItemProvider {NSObject super;};
struct NSLayoutAnchor {NSObject super;};
struct NSMappingModel {NSObject super;};
struct NSMutableArray {NSArray super;};
struct NSNotification {NSObject super;};
struct NSOutputStream {NSStream super;};
struct NSPointerArray {NSObject super;};
struct NSUserActivity {NSObject super;};
struct PDFDestination {NSObject super;PDFDestinationPrivate *_private;};
struct PHFetchOptions {NSObject super;};
struct PHImageManager {NSObject super;};
struct PHPhotoLibrary {NSObject super;};
struct PHPickerFilter {NSObject super;};
struct PHPickerResult {NSObject super;};
struct PKLabeledValue {NSObject super;};
struct PKPaymentToken {NSObject super;};
struct PKPushRegistry {NSObject super;};
struct SCNAudioPlayer {NSObject super;};
struct SCNAudioSource {NSObject super;};
struct SCNPhysicsBody {NSObject super;};
struct SCNSceneSource {NSObject super;};
struct SCNTransaction {NSObject super;};
struct SKPhysicsJoint {NSObject super;};
struct SKPhysicsWorld {NSObject super;};
struct SKTextureAtlas {NSObject super;};
struct SKWarpGeometry {NSObject super;};
struct SRFetchRequest {NSObject super;};
struct SRSensorReader {NSObject super;};
struct TKSmartCardATR {NSObject super;};
struct TKTokenSession {NSObject super;};
struct TKTokenWatcher {NSObject super;};
struct UIAcceleration {NSObject super;};
struct UIDropProposal {NSObject super;};
struct UILexiconEntry {NSObject super;};
struct UIMotionEffect {NSObject super;};
struct UIPointerShape {NSObject super;};
struct UIPointerStyle {NSObject super;};
struct UIPressesEvent {UIEvent super;};
struct UIPushBehavior {UIDynamicBehavior super;};
struct UISceneSession {NSObject super;};
struct UISnapBehavior {UIDynamicBehavior super;};
struct UITextPosition {NSObject super;};
struct UIVisualEffect {NSObject super;};
struct UNNotification {NSObject super;};
struct VSSubscription {NSObject super;};
struct WKContentWorld {NSObject super;};
struct dyld_uuid_info { mach_header *imageLoadAddress;uuid_t imageUUID;};
struct icmp__ih_idseq {n_short icd_id;n_short icd_seq;};
struct ip_mreq_source {in_addr imr_multiaddr;in_addr imr_sourceaddr;in_addr imr_interface;};
struct ipc_info_space {natural_t iis_genno_mask;natural_t iis_table_size;natural_t iis_table_next;natural_t iis_tree_size;natural_t iis_tree_small;natural_t iis_tree_hash;};
struct klm_unlockargs {klm_lock alock;};
typedef ledger_t *ledger_array_t;
typedef mach_port_t mach_voucher_t;
struct simd__float2x2 { simd_float2x2 cppsuper0;};
struct simd__float2x3 { simd_float2x3 cppsuper0;};
struct simd__float2x4 { simd_float2x4 cppsuper0;};
struct simd__float3x2 { simd_float3x2 cppsuper0;};
struct simd__float3x3 { simd_float3x3 cppsuper0;};
struct simd__float3x4 { simd_float3x4 cppsuper0;};
struct simd__float4x2 { simd_float4x2 cppsuper0;};
struct simd__float4x3 { simd_float4x3 cppsuper0;};
struct simd__float4x4 { simd_float4x4 cppsuper0;};
struct sqlite3_module {int iVersion;int (*xCreate)(sqlite3 *, void *, int,  char * *, sqlite3_vtab **, char **);int (*xConnect)(sqlite3 *, void *, int,  char * *, sqlite3_vtab **, char **);int (*xBestIndex)(sqlite3_vtab *, sqlite3_index_info *);int (*xDisconnect)(sqlite3_vtab *);int (*xDestroy)(sqlite3_vtab *);int (*xOpen)(sqlite3_vtab *, sqlite3_vtab_cursor **);int (*xClose)(sqlite3_vtab_cursor *);int (*xFilter)(sqlite3_vtab_cursor *, int,  char *, int, sqlite3_value **);int (*xNext)(sqlite3_vtab_cursor *);int (*xEof)(sqlite3_vtab_cursor *);int (*xColumn)(sqlite3_vtab_cursor *, sqlite3_context *, int);int (*xRowid)(sqlite3_vtab_cursor *, sqlite3_int64 *);int (*xUpdate)(sqlite3_vtab *, int, sqlite3_value **, sqlite3_int64 *);int (*xBegin)(sqlite3_vtab *);int (*xSync)(sqlite3_vtab *);int (*xCommit)(sqlite3_vtab *);int (*xRollback)(sqlite3_vtab *);int (*xFindFunction)(sqlite3_vtab *, int,  char *, void (**)(sqlite3_context *, int, sqlite3_value **), void **);int (*xRename)(sqlite3_vtab *,  char *);int (*xSavepoint)(sqlite3_vtab *, int);int (*xRelease)(sqlite3_vtab *, int);int (*xRollbackTo)(sqlite3_vtab *, int);int (*xShadowName)( char *);};
typedef mach_port_t task_inspect_t;
typedef thread_t *thread_array_t;
typedef natural_t *thread_state_t;
typedef void *(*xmlReallocFunc)(void *, size_t);
struct ACAccountType {NSObject super;};
struct ARVideoFormat {NSObject super;};
struct AVAssetReader {NSObject super;AVAssetReaderInternal *_priv;};
struct AVAssetWriter {NSObject super;AVAssetWriterInternal *_internal;};
struct AVAudioBuffer {NSObject super;void *_impl;};
struct AVAudioEngine {NSObject super;void *_impl;};
struct AVComposition {AVAsset super;AVCompositionInternal *_priv;};
struct AVPlayerLayer {CALayer super;AVPlayerLayerInternal *_playerLayer;};
struct BGTaskRequest {NSObject super;};
struct CADisplayLink {NSObject super;void *_impl;};
struct CAScrollLayer {CALayer super;};
struct CATransaction {NSObject super;};
struct CHHapticEvent {NSObject super;};
struct CKQueryCursor {NSObject super;};
struct CMStepCounter {NSObject super;};
struct CNFetchResult {NSObject super;};
struct CNPhoneNumber {NSObject super;};
struct CNSaveRequest {NSObject super;};
struct CPAlertAction {NSObject super;};
struct CPListSection {NSObject super;};
struct CPRouteChoice {NSObject super;};
struct CSSearchQuery {NSObject super;};
struct CXTransaction {NSObject super;};
struct GCDeviceLight {NSObject super;};
struct GCXboxGamepad {GCExtendedGamepad super;};
struct GKAccessPoint {NSObject super;};
struct GKAchievement {NSObject super;};
struct GKGameSession {NSObject super;};
struct GKLeaderboard {NSObject super;};
struct GKNoiseSource {NSObject super;};
struct GLKMeshBuffer {NSObject super;};
struct HKCDADocument {NSObject super;};
struct HKFHIRVersion {NSObject super;};
struct HKHealthStore {NSObject super;};
struct HKQueryAnchor {NSObject super;};
struct HKSampleQuery {HKQuery super;};
struct HKSourceQuery {HKQuery super;};
struct HMHomeManager {NSObject super;};
struct HMNumberRange {NSObject super;};
struct INAirportGate {NSObject super;};
struct INBillDetails {NSObject super;};
struct INInteraction {NSObject super;};
struct INMediaSearch {NSObject super;};
struct INNoteContent {NSObject super;};
struct INPreferences {NSObject super;};
struct INReservation {NSObject super;};
struct INRideVehicle {NSObject super;};
struct INUserContext {NSObject super;};
struct MIDICIProfile {NSObject super;};
struct MIDICISession {NSObject super;};
typedef MIDIObjectRef MIDIClientRef;
typedef MIDIObjectRef MIDIDeviceRef;
typedef MIDIObjectRef MIDIEntityRef;
struct MKETAResponse {NSObject super;};
struct MKLocalSearch {NSObject super;};
struct MKMapSnapshot {NSObject super;};
struct MKTileOverlay {NSObject super;};
struct MLCTensorData {NSObject super;};
struct MPContentItem {NSObject super;};
struct MPMediaEntity {NSObject super;};
struct MTKMeshBuffer {NSObject super;};
struct MTLStructType {MTLType super;};
struct NEDNSSettings {NSObject super;};
struct NENetworkRule {NSObject super;};
struct NEProxyServer {NSObject super;};
struct NEVPNProtocol {NSObject super;};
struct NSAtomicStore {NSPersistentStore super;};
struct NSFileManager {NSObject super;};
struct NSInputStream {NSStream super;};
struct NSMergePolicy {NSObject super;};
struct NSMutableData {NSData super;};
struct NSOrthography {NSObject super;};
struct NSURLProtocol {NSObject super;NSURLProtocolInternal *_internal;};
struct NSURLResponse {NSObject super;NSURLResponseInternal *_internal;};
struct NSXPCListener {NSObject super;};
struct OSLogPosition {NSObject super;};
struct PDFAnnotation {NSObject super;PDFAnnotationPrivateVars *_private;};
struct PHFetchResult {NSObject super;};
struct PKPassLibrary {NSObject super;};
struct PKPaymentPass {PKSecureElementPass super;};
struct PKPushPayload {NSObject super;};
struct PKStrokePoint {NSObject super;};
struct SCNConstraint {NSObject super;};
struct SKPhysicsBody {NSObject super;};
struct SRFetchResult {NSObject super;};
struct SSReadingList {NSObject super;};
struct TKTokenDriver {NSObject super;};
struct UIAlertAction {NSObject super;};
struct UIDragPreview {NSObject super;};
struct UIFocusSystem {NSObject super;};
struct UIFontMetrics {NSObject super;};
struct UILayoutGuide {NSObject super;};
struct UIMenuElement {NSObject super;};
struct UISearchToken {NSObject super;};
struct UITextChecker {NSObject super;};
struct VNCoreMLModel {NSObject super;};
struct VNObservation {NSObject super;};
struct WCSessionFile {NSObject super;};
struct WKPreferences {NSObject super;};
struct WKProcessPool {NSObject super;};
struct attribute_set {attrgroup_t commonattr;attrgroup_t volattr;attrgroup_t dirattr;attrgroup_t fileattr;attrgroup_t forkattr;};
struct bp_whoami_arg {bp_address client_address;};
typedef mach_port_t clock_reply_t;
struct float32x2x2_t {float32x2_t val[2];};
struct float32x2x3_t {float32x2_t val[3];};
struct float32x2x4_t {float32x2_t val[4];};
struct float32x4x2_t {float32x4_t val[2];};
struct float32x4x3_t {float32x4_t val[3];};
struct float32x4x4_t {float32x4_t val[4];};
struct float64x1x2_t {float64x1_t val[2];};
struct float64x1x3_t {float64x1_t val[3];};
struct float64x1x4_t {float64x1_t val[4];};
struct float64x2x2_t {float64x2_t val[2];};
struct float64x2x3_t {float64x2_t val[3];};
struct float64x2x4_t {float64x2_t val[4];};
struct icmp__ih_pmtu {n_short ipm_void;n_short ipm_nextmtu;};
typedef mach_voucher_t ipc_voucher_t;
typedef natural_t ledger_item_t;
typedef ledger_t ledger_port_t;
typedef mach_port_t notify_port_t;
struct persona_token {proc_persona_info originator;proc_persona_info proximate;};
typedef natural_t task_flavor_t;
typedef thread_t thread_port_t;
typedef mach_port_t thread_read_t;
typedef mach_port_t vm_map_read_t;
struct vm_statistics {natural_t free_count;natural_t active_count;natural_t inactive_count;natural_t wire_count;natural_t zero_fill_count;natural_t reactivations;natural_t pageins;natural_t pageouts;natural_t faults;natural_t cow_faults;natural_t lookups;natural_t hits;natural_t purgeable_count;natural_t purges;natural_t speculative_count;};
typedef void *(*xmlMallocFunc)(size_t);
struct ARPointCloud {NSObject super;};
struct AVAssetCache {NSObject super;};
struct AVAssetTrack {NSObject super;AVAssetTrackInternal *_track;};
struct AVMIDIPlayer {NSObject super;void *_impl;};
struct AVMovieTrack {AVAssetTrack super;AVMovieTrackInternal *_movieTrackInternal;};
struct AVMusicTrack {NSObject super;void *_impl;};
struct AVPlayerItem {NSObject super;AVPlayerItemInternal *_playerItem;};
struct BCChatAction {NSObject super;};
struct CAMetalLayer {CALayer super;_CAMetalLayerPrivate *_priv;};
struct CAShapeLayer {CALayer super;};
struct CATiledLayer {CALayer super;};
struct CATransition {CAAnimation super;};
struct CBATTRequest {NSObject super;};
struct CBPeripheral {CBPeer super;};
struct CIRenderInfo {NSObject super;void *_priv;};
struct CIRenderTask {NSObject super;void *_priv;};
struct CKRecordZone {NSObject super;};
struct CLSDataStore {NSObject super;};
struct CPGridButton {NSObject super;};
struct CPTextButton {NSObject super;};
struct CTCallCenter {NSObject super;};
struct CTSubscriber {NSObject super;};
struct CXCallUpdate {NSObject super;};
struct EKEventStore {NSObject super;};
struct GCController {NSObject super;};
struct GCMouseInput {GCPhysicalInputProfile super;};
struct GKBasePlayer {NSObject super;};
struct GKMatchmaker {NSObject super;};
struct GKOctreeNode {NSObject super;};
struct GKRuleSystem {NSObject super;};
struct HKObjectType {NSObject super;};
struct HKSampleType {HKObjectType super;};
struct HKSeriesType {HKSampleType super;};
struct HKStatistics {NSObject super;};
struct ICCameraItem {NSObject super;};
struct INCallRecord {NSObject super;};
struct INPriceRange {NSObject super;};
struct INRestaurant {NSObject super;};
struct INRideOption {NSObject super;};
struct INRideStatus {NSObject super;};
struct INVocabulary {NSObject super;};
struct MDLTransform {NSObject super;};
struct MKDirections {NSObject super;};
struct MKMultiPoint {MKShape super;};
struct MLCOptimizer {NSObject super;};
struct MLMultiArray {NSObject super;};
struct MLUpdateTask {MLTask super;};
struct MPMediaQuery {NSObject super;};
struct MPSNNPadNode {MPSNNFilterNode super;};
struct MPSPredicate {NSObject super;};
struct MTLArrayType {MTLType super;};
struct MTLAttribute {NSObject super;};
struct MXDiagnostic {NSObject super;};
struct NEFilterFlow {NSObject super;};
struct NEFilterRule {NSObject super;};
struct NEVPNManager {NSObject super;};
struct NSDictionary {NSObject super;};
struct NSEnumerator {NSObject super;};
struct NSFileHandle {NSObject super;};
struct NSHTTPCookie {NSObject super;NSHTTPCookieInternal *_cookiePrivate;};
struct NSInvocation {NSObject super;};
struct NSMutableSet {NSSet super;};
struct NSOrderedSet {NSObject super;};
struct NSURLRequest {NSObject super;NSURLRequestInternal *_internal;};
struct NSURLSession {NSObject super;};
struct NWUDPSession {NSObject super;};
struct PDFSelection {NSObject super;PDFSelectionPrivate *_private;};
struct PHCollection {PHObject super;};
struct PKEraserTool {PKTool super;};
struct PKFloatRange {NSObject super;};
struct PKInkingTool {PKTool super;};
struct PKStrokePath {NSObject super;};
struct PKToolPicker {NSObject super;};
struct SCNAnimation {NSObject super;};
struct SCNTechnique {NSObject super;};
struct SKConstraint {NSObject super;};
struct SKStorefront {NSObject super;};
struct SKTransition {NSObject super;};
struct STWebHistory {NSObject super;};
struct UIBezierPath {NSObject super;};
struct UIBlurEffect {UIVisualEffect super;};
struct UIFocusGuide {UILayoutGuide super;};
struct UIImageAsset {NSObject super;};
struct UIMenuSystem {NSObject super;};
struct UIPasteboard {NSObject super;};
struct UIPrintPaper {NSObject super;};
struct UIScreenMode {NSObject super;};
struct UIStoryboard {NSObject super;};
typedef mach_port_t UNDServerRef;
struct WKFindResult {NSObject super;};
struct WKNavigation {NSObject super;};
struct WKUserScript {NSObject super;};
typedef alarm_t alarm_port_t;
typedef size_t cache_cost_t;
typedef mach_port_t clock_ctrl_t;
typedef mach_port_t clock_serv_t;
struct fgetsigsinfo {off_t fg_file_start;int fg_info_request;int fg_sig_is_platform;};
struct icmp6errstat {u_quad_t icp6errs_dst_unreach_noroute;u_quad_t icp6errs_dst_unreach_admin;u_quad_t icp6errs_dst_unreach_beyondscope;u_quad_t icp6errs_dst_unreach_addr;u_quad_t icp6errs_dst_unreach_noport;u_quad_t icp6errs_packet_too_big;u_quad_t icp6errs_time_exceed_transit;u_quad_t icp6errs_time_exceed_reassembly;u_quad_t icp6errs_paramprob_header;u_quad_t icp6errs_paramprob_nextheader;u_quad_t icp6errs_paramprob_option;u_quad_t icp6errs_redirect;u_quad_t icp6errs_unknown;};
struct klm_lockargs {int block;int exclusive;klm_lock alock;};
struct klm_testargs {int exclusive;klm_lock alock;};
struct msg_labels_t {mach_port_name_t sender;};
struct sa_endpoints {unsigned int sae_srcif; sockaddr *sae_srcaddr;socklen_t sae_srcaddrlen; sockaddr *sae_dstaddr;socklen_t sae_dstaddrlen;};
typedef task_t *task_array_t;
typedef mach_port_t thread_act_t;
typedef ssize_t vImage_Error;
typedef vm_offset_t vm_address_t;
struct ARDepthData {NSObject super;};
struct AUAudioUnit {NSObject super;};
struct AUParameter {AUParameterNode super;};
struct AVAudioFile {NSObject super;void *_impl;};
struct AVAudioNode {NSObject super;void *_impl;};
struct AVAudioUnit {AVAudioNode super;};
struct AVDepthData {NSObject super;AVDepthDataInternal *_internal;};
struct CAEAGLLayer {CALayer super;_CAEAGLNativeWindow *_win;};
struct CATextLayer {CALayer super;CATextLayerPrivate *_state;};
struct CBAttribute {NSObject super;};
struct CKContainer {NSObject super;};
struct CKReference {NSObject super;};
struct CLPlacemark {NSObject super;CLPlacemarkInternal *_internal;};
struct CMAltimeter {NSObject super;};
struct CMPedometer {NSObject super;};
struct CMTimeRange {CMTime start;CMTime duration;};
struct CNContainer {NSObject super;};
struct CPBarButton {NSObject super;};
struct CPMapButton {NSObject super;};
struct EAAccessory {NSObject super;EAAccessoryInternal *_internal;};
struct EAGLContext {NSObject super;_EAGLContextPrivate *_private;};
struct GKChallenge {NSObject super;};
struct GKComponent {NSObject super;};
struct GKGraphNode {NSObject super;};
struct GKGridGraph {GKGraph super;};
struct GKMeshGraph {GKGraph super;};
struct GKSavedGame {NSObject super;};
struct GKVoiceChat {NSObject super;};
struct HMAccessory {NSObject super;};
struct HMActionSet {NSObject super;};
struct HMTimeEvent {HMEvent super;};
struct INBillPayee {NSObject super;};
struct INExtension {NSObject super;};
struct INMediaItem {NSObject super;};
struct INParameter {NSObject super;};
struct INRentalCar {NSObject super;};
struct INTrainTrip {NSObject super;};
struct MDLMaterial {NSObject super;};
struct MKMapCamera {NSObject super;};
struct MKPlacemark {CLPlacemark super;};
struct MKRouteStep {NSObject super;};
struct MLImageSize {NSObject super;};
struct MLMetricKey {MLKey super;};
struct MPMediaItem {MPMediaEntity super;};
struct MTLArgument {NSObject super;};
struct MXHistogram {NSObject super;};
struct NEIPv4Route {NSObject super;};
struct NEIPv6Route {NSObject super;};
struct NLEmbedding {NSObject super;};
struct NLGazetteer {NSObject super;};
struct NLTokenizer {NSObject super;};
struct NSCondition {NSObject super;void *_priv;};
struct NSDataAsset {NSObject super;};
struct NSFormatter {NSObject super;};
struct NSHashTable {NSObject super;};
struct NSOperation {NSObject super;};
struct PDFDocument {NSObject super;PDFDocumentPrivate *_private;};
struct PHLivePhoto {NSObject super;};
struct PKLassoTool {PKTool super;};
struct SCNGeometry {NSObject super;};
struct SCNMaterial {NSObject super;};
struct SCNRenderer {NSObject super;};
struct SKAdNetwork {NSObject super;};
struct SKAttribute {NSObject super;};
struct SKTileGroup {NSObject super;};
struct TKSmartCard {NSObject super;};
struct TKTLVRecord {NSObject super;};
struct UIPrintInfo {NSObject super;};
struct UIResponder {NSObject super;};
struct UITextRange {NSObject super;};
struct WKFrameInfo {NSObject super;};
struct _stringlist {char **sl_str;size_t sl_max;size_t sl_cur;};
struct _xmlNodeSet {int nodeNr;int nodeMax;xmlNodePtr *nodeTab;};
typedef mach_port_t bootstrap_t;
typedef mach_port_t coalition_t;
typedef host_t host_name_t;
typedef mach_port_t host_priv_t;
typedef xmlNodePtr htmlNodePtr;
struct icmp__id_ip {ip idi_ip;};
struct icmp__id_ts {n_time its_otime;n_time its_rtime;n_time its_ttime;};
typedef mach_port_t io_master_t;
typedef mach_port_t ipc_space_t;
struct simd__quatd { simd_quatd cppsuper0;};
struct simd__quatf { simd_quatf cppsuper0;};
typedef task_t task_port_t;
typedef u_quad_t vsock_gen_t;
struct xdr_discrim {int value;xdrproc_t proc;};
struct ARSkeleton {NSObject super;};
struct ARWorldMap {NSObject super;};
struct AVAudioMix {NSObject super;AVAudioMixInternal *_audioMix;};
struct AVURLAsset {AVAsset super;AVURLAssetInternal *_URLAsset;};
struct CIDetector {NSObject super;};
struct CKDatabase {NSObject super;};
struct CKRecordID {NSObject super;};
struct CLGeocoder {NSObject super;CLGeocoderInternal *_internal;};
struct CPImageSet {NSObject super;};
struct CPListItem {CPBaseListItem super;};
struct CPManeuver {NSObject super;};
struct CPTemplate {NSObject super;};
struct CXProvider {NSObject super;};
struct FixedPoint {Fixed x;Fixed y;};
struct GCKeyboard {NSObject super;};
struct GKBehavior {NSObject super;};
struct GKNoiseMap {NSObject super;};
struct GKObstacle {NSObject super;};
struct GKQuadtree {NSObject super;};
struct GLKSubmesh {NSObject super;};
typedef intptr_t GLsizeiptr;
struct HKQuantity {NSObject super;};
struct INBoatTrip {NSObject super;};
struct INHeadUnit {NSObject super;};
struct INShortcut {NSObject super;};
struct INTaskList {NSObject super;};
struct MDLSubmesh {NSObject super;};
struct MDLTexture {NSObject super;};
struct MKPolyline {MKMultiPoint super;};
struct MLSequence {NSObject super;};
struct MPSNDArray {NSObject super;};
struct MTKSubmesh {NSObject super;};
struct MXMetaData {NSObject super;};
struct NEProvider {NSObject super;};
struct NSCalendar {NSObject super;};
struct NSMapTable {NSObject super;};
struct NSProgress {NSObject super;};
struct NSTimeZone {NSObject super;};
struct NSURLCache {NSObject super;NSURLCacheInternal *_internal;};
struct NWEndpoint {NSObject super;};
struct OSLogEntry {NSObject super;};
struct OSLogStore {NSObject super;};
struct PDFOutline {NSObject super;PDFOutlinePrivate *_private;};
typedef ResType *ResTypePtr;
struct SCNCapsule {SCNGeometry super;};
struct SCNMorpher {NSObject super;};
struct SCNProgram {NSObject super;};
struct SCNPyramid {SCNGeometry super;};
struct SCNSkinner {NSObject super;};
struct SKRenderer {NSObject super;};
struct SRWebUsage {NSObject super;};
struct UIActivity {NSObject super;};
struct UIDocument {NSObject super;};
struct UIDragItem {NSObject super;};
struct UIMenuItem {NSObject super;};
typedef UniChar *UniCharPtr;
typedef xmlDocPtr docbDocPtr;
struct fpunchhole {unsigned int fp_flags;unsigned int reserved;off_t fp_offset;off_t fp_length;};
typedef xmlDocPtr htmlDocPtr;
struct ifaliasreq {char ifra_name[16];sockaddr ifra_addr;sockaddr ifra_broadaddr;sockaddr ifra_mask;};
struct in_pktinfo {unsigned int ipi_ifindex;in_addr ipi_spec_dst;in_addr ipi_addr;};
struct ntptimeval {timespec time;long long maxerror;long long esterror;long long tai;int time_state;};
struct regmatch_t {regoff_t rm_so;regoff_t rm_eo;};
struct ypresp_all {int more;ypresp_all___438EB5C0F713AEE99C9EADC1C626DC0A ypresp_all_u;};
struct ACAccount {NSObject super;};
struct ARSession {NSObject super;};
typedef int (*BNNSAlloc)(void **, size_t, size_t);
struct BTREEINFO {unsigned long long flags;unsigned int cachesize;int maxkeypage;int minkeypage;unsigned int psize;int (*compare)( DBT *,  DBT *);size_t (*prefix)( DBT *,  DBT *);int lorder;};
struct CBCentral {CBPeer super;};
struct CBManager {NSObject super;};
struct CBService {CBAttribute super;};
struct CIContext {NSObject super;void *_priv;};
struct CIFeature {NSObject super;};
struct CISampler {NSObject super;void *_priv;};
struct CLSObject {NSObject super;};
struct CNContact {NSObject super;};
struct CPContact {NSObject super;};
struct CTCarrier {NSObject super;};
struct ENManager {NSObject super;};
struct FixedRect {Fixed left;Fixed top;Fixed right;Fixed bottom;};
struct GCGamepad {GCPhysicalInputProfile super;};
struct HMService {NSObject super;};
struct HMTrigger {NSObject super;};
struct INAirline {NSObject super;};
struct INAirport {NSObject super;};
struct INBusTrip {NSObject super;};
struct INMessage {NSObject super;};
struct IOSurface {NSObject super;void *_impl;};
struct JSContext {NSObject super;};
struct LAContext {NSObject super;};
struct MCSession {NSObject super;};
struct MDLObject {NSObject super;};
struct MKMapItem {NSObject super;};
struct MKPolygon {MKMultiPoint super;};
struct MLCDevice {NSObject super;};
struct MLCTensor {NSObject super;};
struct MPSKernel {NSObject super;};
struct MPSMatrix {NSObject super;};
struct MPSVector {NSObject super;};
struct MSMessage {NSObject super;};
struct MSSession {NSObject super;};
struct MSSticker {NSObject super;};
struct MXAverage {NSObject super;};
struct NEAppRule {NSObject super;};
struct NISession {NSObject super;};
struct NKLibrary {NSObject super;};
struct NSScanner {NSObject super;};
struct NSTextTab {NSObject super;};
typedef OSType *OSTypePtr;
struct OS_object {NSObject super;};
struct PDFAction {NSObject super;PDFActionPrivate *_private;};
struct PDFBorder {NSObject super;PDFBorderPrivateVars *_private;};
struct PKContact {NSObject super;};
struct PKDrawing {NSObject super;};
struct PKPayment {NSObject super;};
struct RECNOINFO {unsigned long long flags;unsigned int cachesize;unsigned int psize;int lorder;size_t reclen;unsigned char bval;char *bfname;};
struct SCNAction {NSObject super;};
struct SCNCamera {NSObject super;};
struct SCNSphere {SCNGeometry super;};
struct SKOverlay {NSObject super;};
struct SKTexture {NSObject super;};
struct SKTileSet {NSObject super;};
struct SKUniform {NSObject super;};
struct SLRequest {NSObject super;};
struct TWRequest {NSObject super;};
struct UIBarItem {NSObject super;};
struct UICommand {UIMenuElement super;};
struct UILexicon {NSObject super;};
struct UIPrinter {NSObject super;};
struct VNContour {NSObject super;};
struct VNRequest {NSObject super;};
struct WCSession {NSObject super;};
typedef pid_t au_asid_t;
struct fspecread {unsigned int fsr_flags;unsigned int reserved;off_t fsr_offset;off_t fsr_length;};
struct if_msghdr {unsigned short ifm_msglen;unsigned char ifm_version;unsigned char ifm_type;int ifm_addrs;int ifm_flags;unsigned short ifm_index;if_data ifm_data;};
typedef u_quad_t inp_gen_t;
struct ipsecstat {__attribute__((aligned(8))) u_quad_t in_success;__attribute__((aligned(8))) u_quad_t in_polvio;__attribute__((aligned(8))) u_quad_t in_nosa;__attribute__((aligned(8))) u_quad_t in_inval;__attribute__((aligned(8))) u_quad_t in_nomem;__attribute__((aligned(8))) u_quad_t in_badspi;__attribute__((aligned(8))) u_quad_t in_ahreplay;__attribute__((aligned(8))) u_quad_t in_espreplay;__attribute__((aligned(8))) u_quad_t in_ahauthsucc;__attribute__((aligned(8))) u_quad_t in_ahauthfail;__attribute__((aligned(8))) u_quad_t in_espauthsucc;__attribute__((aligned(8))) u_quad_t in_espauthfail;__attribute__((aligned(8))) u_quad_t in_esphist[256];__attribute__((aligned(8))) u_quad_t in_ahhist[256];__attribute__((aligned(8))) u_quad_t in_comphist[256];__attribute__((aligned(8))) u_quad_t out_success;__attribute__((aligned(8))) u_quad_t out_polvio;__attribute__((aligned(8))) u_quad_t out_nosa;__attribute__((aligned(8))) u_quad_t out_inval;__attribute__((aligned(8))) u_quad_t out_nomem;__attribute__((aligned(8))) u_quad_t out_noroute;__attribute__((aligned(8))) u_quad_t out_esphist[256];__attribute__((aligned(8))) u_quad_t out_ahhist[256];__attribute__((aligned(8))) u_quad_t out_comphist[256];};
struct itimerval {timeval it_interval;timeval it_value;};
struct radvisory {off_t ra_offset;int ra_count;};
struct wordexp_t {size_t we_wordc;char **we_wordv;size_t we_offs;};
struct ADClient {NSObject super;};
struct ARAnchor {NSObject super;};
struct ARBody2D {NSObject super;};
struct ARCamera {NSObject super;};
struct AVPlayer {NSObject super;AVPlayerInternal *_player;};
struct CIFilter {NSObject super;void *_priv[8];};
struct CIKernel {NSObject super;void *_priv;};
struct CKRecord {NSObject super;};
struct CLBeacon {NSObject super;CLBeaconInternal *_internal;};
struct CLRegion {NSObject super;CLRegionInternal *_internal;};
struct CPButton {NSObject super;};
struct CPEntity {NSObject super;};
struct CSPerson {NSObject super;};
struct CXAction {NSObject super;};
struct CXHandle {NSObject super;};
struct DCDevice {NSObject super;};
struct EKObject {NSObject super;};
struct EKSource {EKObject super;};
typedef Fixed *FixedPtr;
typedef Fract *FractPtr;
struct GCMotion {NSObject super;};
struct GKEntity {NSObject super;};
struct GKInvite {NSObject super;};
struct GKOctree {NSObject super;};
struct GKPlayer {GKBasePlayer super;};
typedef intptr_t GLintptr;
struct HKDevice {NSObject super;};
struct HKObject {NSObject super;};
struct HKSample {HKObject super;};
struct HKSource {NSObject super;};
struct HMAction {NSObject super;};
struct ICDevice {NSObject super;};
struct INFlight {NSObject super;};
struct INIntent {NSObject super;};
struct INObject {NSObject super;};
struct INPerson {NSObject super;};
struct MCPeerID {NSObject super;};
struct MDLAsset {NSObject super;};
struct MDLLight {MDLObject super;};
struct MKCircle {MKShape super;};
struct MLCGraph {NSObject super;};
struct MLCLayer {NSObject super;};
struct MPSGraph {NSObject super;};
struct MPSImage {NSObject super;};
struct MPSState {NSObject super;};
struct MXMetric {NSObject super;};
struct NEPacket {NSObject super;};
struct NLTagger {NSObject super;};
struct NSBundle {NSObject super;};
struct NSLocale {NSObject super;};
struct NSNumber {NSValue super;};
struct SCNFloor {SCNGeometry super;};
struct SCNPlane {SCNGeometry super;};
struct SCNShape {SCNGeometry super;};
struct SCNTorus {SCNGeometry super;};
struct UIAction {UIMenuElement super;};
struct gzFile_s {unsigned int have;unsigned char *next;off_t pos;};
struct in6_addr {in6_addr___330434928707C706902F20BE7BA89EB4 __u6_addr;};
struct ip_mreqn {in_addr imr_multiaddr;in_addr imr_address;int imr_ifindex;};
struct lastlogx {timeval ll_tv;char ll_line[32];char ll_host[256];};
struct log2phys {unsigned int l2p_flags;off_t l2p_contigbytes;off_t l2p_devoffset;};
typedef u_quad_t so_gen_t;
struct utmpidle {ru_utmp ui_utmp;unsigned int ui_idle;};
typedef size_t z_size_t;
struct CKShare {CKRecord super;};
typedef size_t DERSize;
struct EKAlarm {EKObject super;};
struct GKAgent {GKComponent super;};
struct MDLMesh {MDLObject super;};
struct MPSSVGF {MPSKernel super;};
struct SCNCone {SCNGeometry super;};
struct SCNText {SCNGeometry super;};
struct SCNTube {SCNGeometry super;};
struct UIScene {UIResponder super;};
typedef uid_t au_id_t;
typedef quad_t *qaddr_t;
struct regex_t {int re_magic;size_t re_nsub; char *re_endp;re_guts *re_g;};
struct utimbuf {time_t actime;time_t modtime;};
struct SCNBox {SCNGeometry super;};
struct SKNode {UIResponder super;};
struct UIMenu {UIMenuElement super;};
struct UIView {UIResponder super;};
struct fstore {unsigned int fst_flags;int fst_posmode;off_t fst_offset;off_t fst_length;off_t fst_bytesalloc;};
struct mstats {size_t bytes_total;size_t chunks_used;size_t bytes_used;size_t chunks_free;size_t bytes_free;};
struct rusage {timeval ru_utime;timeval ru_stime;long long ru_maxrss;long long ru_ixrss;long long ru_idrss;long long ru_isrss;long long ru_minflt;long long ru_majflt;long long ru_nswap;long long ru_inblock;long long ru_oublock;long long ru_msgsnd;long long ru_msgrcv;long long ru_nsignals;long long ru_nvcsw;long long ru_nivcsw;};
typedef Byte Bytef;
struct ifreq {char ifr_name[16];ifreq___E0FC42874A550D533741D474A8188B08 ifr_ifru;};
union AudioUnitParameterEvent___30DB46DA13B14C3192C3DF0E34A08043 {_9CD7DB5FE14A2A04079DBE65AB72DE56 ramp;_1948E5937AB2C1104C85847A9E0DBADF immediate;};
union mach_port_options___35CF9E4DD47DBA463F25D88A6280642A {uint64_t reserved[2];mach_port_name_t work_interval_port;};
union accepted_reply___31595615714680EC1AE1A80BF98BFB1C {_AC186CABF9007C2DA87CD3BECABD7D45 AR_versions;_BFD7413E14FC21CAB05150D69A0647C0 AR_results;};
union extern_proc___F477F83051F9A905E317A45D3B2D5518 {_883DE74D7D01918C60D70A31734D633A p_st1;timeval __p_starttime;};
struct ICScannerFunctionalUnitNegativeTransparency {ICScannerFunctionalUnit super;id _ntrProps;};
struct ICScannerFunctionalUnitPositiveTransparency {ICScannerFunctionalUnit super;id _ptrProps;};
union ip6_hdr___4B39ABADBFFE16DEF7AD006048FD8DAF {ip6_hdr__ip6_hdrctl ip6_un1;u_int8_t ip6_un2_vfc;};
union inpcb___8484DCF5CF4707A7FE251BC9B24F4E7E {in_addr_4in6 inp46_foreign;in6_addr inp6_foreign;};
union inpcb___C7595A3B4BE5971B51D33E1DD0735D09 {in_addr_4in6 inp46_local;in6_addr inp6_local;};
struct std____1__basic_istringstream_wchar_t_ { std____1__basic_istream_wchar_t_ cppsuper0;std____1__basic_stringbuf_wchar_t_ __sb_;};
struct std____1__basic_ostringstream_wchar_t_ { std____1__basic_ostream_wchar_t_ cppsuper0;std____1__basic_stringbuf_wchar_t_ __sb_;};
struct ICScannerFunctionalUnitDocumentFeeder {ICScannerFunctionalUnit super;id _dfProps;};
struct std____1__basic_string_view_char16_t_ { std____1__basic_string_view_char16_t___value_type *__data;std____1__basic_string_view__CharT___Traits___size_type __size;};
struct std____1__basic_string_view_char32_t_ { std____1__basic_string_view_char32_t___value_type *__data;std____1__basic_string_view__CharT___Traits___size_type __size;};
struct mach_msg_guarded_port_descriptor32_t {uint32_t context;mach_port_name_t name;unsigned int flags : 16;unsigned int disposition : 8;unsigned int type : 8;};
struct mach_msg_guarded_port_descriptor64_t {uint64_t context;unsigned int flags : 16;unsigned int disposition : 8;unsigned int type : 8;mach_port_name_t name;};
struct std____1__basic_string_view_wchar_t_ { std____1__basic_string_view_wchar_t___value_type *__data;std____1__basic_string_view__CharT___Traits___size_type __size;};
struct std____1__basic_istringstream_char_ { std____1__basic_istream_char_ cppsuper0;std____1__basic_stringbuf_char_ __sb_;};
struct std____1__basic_ostringstream_char_ { std____1__basic_ostream_char_ cppsuper0;std____1__basic_stringbuf_char_ __sb_;};
struct mach_msg_guarded_port_descriptor_t {mach_port_context_t context;unsigned int flags : 16;unsigned int disposition : 8;unsigned int type : 8;mach_port_name_t name;};
struct std____1__basic_stringstream_char_ { std____1__basic_iostream_char_ cppsuper0;std____1__basic_stringbuf_char_ __sb_;};
struct BNNSLayerParametersFullyConnected {BNNSNDArrayDescriptor i_desc;BNNSNDArrayDescriptor w_desc;BNNSNDArrayDescriptor o_desc;BNNSNDArrayDescriptor bias;BNNSActivation activation;};
struct mach_msg_ool_ports_descriptor32_t {uint32_t address;mach_msg_size_t count;int deallocate : 8;unsigned int copy : 8;unsigned int disposition : 8;unsigned int type : 8;};
struct mach_msg_ool_ports_descriptor64_t {uint64_t address;int deallocate : 8;unsigned int copy : 8;unsigned int disposition : 8;unsigned int type : 8;mach_msg_size_t count;};
struct std____1__basic_iostream_wchar_t_ { std____1__basic_istream_wchar_t_ cppsuper0;std____1__basic_ostream_wchar_t_ cppsuper1;};
struct std____1__basic_string_view_char_ { std____1__basic_string_view_char___value_type *__data;std____1__basic_string_view__CharT___Traits___size_type __size;};
struct AudioOutputUnitStartAtTimeParams {AudioTimeStamp mTimestamp;UInt32 mFlags;};
struct CVFillExtendedPixelsCallBackData {CFIndex version;CVFillExtendedPixelsCallBack fillCallBack;void *refCon;};
typedef OSStatus (*AudioUnitRemoveRenderNotifyProc)(void *, AURenderCallback, void *);
struct NSPersonNameComponentsFormatter {NSFormatter super;id _private;};
struct std____1__ctype_byname_wchar_t_ { std____1__ctype_wchar_t_ cppsuper0;locale_t __l;};
struct ICScannerFunctionalUnitFlatbed {ICScannerFunctionalUnit super;id _fbProps;};
struct BNNSLayerParametersArithmetic {BNNSArithmeticFunction arithmetic_function;void *arithmetic_function_fields;BNNSActivation activation;};
typedef OSStatus (*AudioUnitAddRenderNotifyProc)(void *, AURenderCallback, void *);
struct BNNSLayerParametersReduction {BNNSNDArrayDescriptor i_desc;BNNSNDArrayDescriptor o_desc;BNNSNDArrayDescriptor w_desc;BNNSReduceFunction reduce_func;float epsilon;};
struct std____1__ctype_byname_char_ { std____1__ctype_char_ cppsuper0;locale_t __l;};
struct ICScannerFeatureEnumeration {ICScannerFeature super;id _evProps;};
struct mach_msg_ool_descriptor32_t {uint32_t address;mach_msg_size_t size;int deallocate : 8;unsigned int copy : 8;unsigned int pad1 : 8;unsigned int type : 8;};
struct mach_msg_ool_descriptor64_t {uint64_t address;int deallocate : 8;unsigned int copy : 8;unsigned int pad1 : 8;unsigned int type : 8;mach_msg_size_t size;};
struct BNNSLayerParametersPermute {BNNSNDArrayDescriptor i_desc;BNNSNDArrayDescriptor o_desc;size_t permutation[8];};
struct MIDIThruConnectionEndpoint {MIDIEndpointRef endpointRef;MIDIUniqueID uniqueID;};
struct mach_msg_port_descriptor_t {mach_port_t name;mach_msg_size_t pad1;unsigned int pad2 : 16;unsigned int disposition : 8;unsigned int type : 8;};
struct mach_msg_type_descriptor_t {natural_t pad1;mach_msg_size_t pad2;unsigned int pad3 : 24;unsigned int type : 8;};
struct BNNSLayerParametersResize {BNNSInterpolationMethod method;BNNSNDArrayDescriptor i_desc;BNNSNDArrayDescriptor o_desc;char align_corners;};
struct ICScannerFeatureTemplate {ICScannerFeature super;id _tvProps;};
struct CGDataConsumerCallbacks {CGDataConsumerPutBytesCallback putBytes;CGDataConsumerReleaseInfoCallback releaseConsumer;};
struct ICScannerFeatureBoolean {ICScannerFeature super;id _bvProps;};
struct memory_object_perf_info {memory_object_cluster_size_t cluster_size;boolean_t may_cache;};
struct BNNSLSTMGateDescriptor {BNNSNDArrayDescriptor iw_desc[2];BNNSNDArrayDescriptor hw_desc;BNNSNDArrayDescriptor cw_desc;BNNSNDArrayDescriptor b_desc;BNNSActivation activation;};
struct __attribute__((packed)) CAFAudioFormatListItem {CAFAudioDescription mFormat;UInt32 mChannelLayoutTag;};
struct GLKReflectionMapEffect {GLKBaseEffect super;GLKEffectPropertyTexture *_textureCubeMap;GLKMatrix3 _matrix;};
struct MortContextualSubtable {STHeader header;UInt16 substitutionTableOffset;};
struct std____1__system_error { std__runtime_error cppsuper0;std____1__error_code __ec_;};
struct ICScannerFeatureRange {ICScannerFeature super;id _rvProps;};
struct std____1__timed_mutex {std____1__mutex __m_;std____1__condition_variable __cv_;char __locked_;};
struct BNNSArithmeticBinary {BNNSNDArrayDescriptor in1;BNNSDescriptorType in1_type;BNNSNDArrayDescriptor in2;BNNSDescriptorType in2_type;BNNSNDArrayDescriptor out;BNNSDescriptorType out_type;};
struct __attribute__((packed)) CAF_UUID_ChunkHeader {CAFChunkHeader mHeader;UInt8 mUUID[16];};
struct MortLigatureSubtable {STHeader header;UInt16 ligatureActionTableOffset;UInt16 componentTableOffset;UInt16 ligatureTableOffset;};
struct NSByteCountFormatter {NSFormatter super;unsigned int _allowedUnits;char _countStyle;BOOL _allowsNonnumericFormatting;BOOL _includesUnit;BOOL _includesCount;BOOL _includesActualByteCount;BOOL _adaptive;BOOL _zeroPadsFractionDigits;int _formattingContext;int _reserved[5];};
struct SecKeychainAttribute {SecKeychainAttrType tag;UInt32 length;void *data;};
struct AudioFileMarkerList {UInt32 mSMPTE_TimeType;UInt32 mNumberMarkers;AudioFileMarker mMarkers[1];};
struct AudioFormatListItem {AudioStreamBasicDescription mASBD;AudioChannelLayoutTag mChannelLayoutTag;};
struct BNNSArithmeticUnary {BNNSNDArrayDescriptor in;BNNSDescriptorType in_type;BNNSNDArrayDescriptor out;BNNSDescriptorType out_type;};
struct CMAccelerometerData {CMLogItem super;id _internal;};
struct JustWidthDeltaGroup {UInt32 count;JustWidthDeltaEntry entries[1];};
struct NSCompoundPredicate {NSPredicate super;void *_reserved2;NSUInteger _type;NSArray *_subpredicates;};
struct __attribute__((packed)) nd_neighbor_solicit {icmp6_hdr nd_ns_hdr;in6_addr nd_ns_target;};
struct CMMagnetometerData {CMLogItem super;id _internal;};
struct ipc_info_tree_name {ipc_info_name_t iitn_name;mach_port_name_t iitn_lchild;mach_port_name_t iitn_rchild;};
struct __attribute__((packed)) nd_neighbor_advert {icmp6_hdr nd_na_hdr;in6_addr nd_na_target;};
struct NSEnergyFormatter {NSFormatter super;void *_formatter;BOOL _isForFoodEnergyUse;void *_reserved[2];};
struct NSLengthFormatter {NSFormatter super;void *_formatter;BOOL _isForPersonHeight;void *_reserved[2];};
struct SKProductsRequest {SKRequest super;id _productsRequestInternal;};
struct JSStaticFunction { char *name;JSObjectCallAsFunctionCallback callAsFunction;JSPropertyAttributes attributes;};
struct group_source_req {uint32_t gsr_interface;sockaddr_storage gsr_group;sockaddr_storage gsr_source;};
struct __attribute__((packed)) nd_router_advert {icmp6_hdr nd_ra_hdr;u_int32_t nd_ra_reachable;u_int32_t nd_ra_retransmit;};
struct AudioFormatInfo {AudioStreamBasicDescription mASBD; void *mMagicCookie;UInt32 mMagicCookieSize;};
struct ICScannerDevice {ICDevice super;id _scannerProperties;};
struct NSMassFormatter {NSFormatter super;void *_formatter;BOOL _isForPersonMassUse;void *_reserved[2];};
struct nlm4_unlockargs {netobj cookie;nlm4_lock alock;};
struct __attribute__((packed)) CAFMarkerChunk {UInt32 mSMPTE_TimeType;UInt32 mNumberMarkers;CAFMarker mMarkers[1];};
struct __attribute__((packed)) CAFRegionChunk {UInt32 mSMPTE_TimeType;UInt32 mNumberRegions;CAFRegion mRegions[1];};
struct CMDeviceMotion {CMLogItem super;id _internal;};
struct MIDIPacketList {UInt32 numPackets;MIDIPacket packet[1];};
struct NSDataDetector {NSRegularExpression super;NSTextCheckingTypes _types;};
struct fvmlib_command {uint32_t cmd;uint32_t cmdsize;fvmlib fvmlib;};
struct __attribute__((packed)) icmp6_nodeinfo {icmp6_hdr icmp6_ni_hdr;u_int8_t icmp6_ni_nonce[8];};
struct nlm4_shareargs {netobj cookie;nlm4_share share;int reclaim;};
struct nlm_unlockargs {netobj cookie;nlm_lock alock;};
struct __msfilterreq {uint32_t msfr_ifindex;uint32_t msfr_fmode;uint32_t msfr_nsrcs;uint32_t __msfr_align;sockaddr_storage msfr_group;sockaddr_storage *msfr_srcs;};
struct _xmlXPathType { xmlChar *name;xmlXPathConvertFunc func;};
struct dylib_command {uint32_t cmd;uint32_t cmdsize;dylib dylib;};
struct getquota_rslt {gqr_status status;getquota_rslt___93D720EECC4BDA120269F9F7BB40A95B getquota_rslt_u;};
struct nlm4_cancargs {netobj cookie;int block;int exclusive;nlm4_lock alock;};
struct nlm4_lockargs {netobj cookie;int block;int exclusive;nlm4_lock alock;int reclaim;int state;};
struct nlm4_testargs {netobj cookie;int exclusive;nlm4_lock alock;};
struct nlm4_testrply {nlm4_stats stat;nlm4_testrply___5672F96DA0F1B9BE5DC546E200F63A51 nlm4_testrply_u;};
struct nlm_shareargs {netobj cookie;nlm_share share;int reclaim;};
struct rpc_signature {rpc_routine_descriptor rd;rpc_routine_arg_descriptor rad[1];};
struct vm_read_entry {vm_address_t address;vm_size_t size;};
struct JustPCAction {UInt32 actionCount;JustPCActionSubrecord actions[1];};
struct NSCountedSet {NSMutableSet super;id _table;void *_reserved;};
struct flocktimeout {flock fl;timespec timeout;};
struct klm_testrply {klm_stats stat;klm_testrply___25A6F5B59BE8949FB52C1CBCE60C93A0 klm_testrply_u;};
struct nlm4_testres {netobj cookie;nlm4_testrply stat;};
struct nlm_cancargs {netobj cookie;int block;int exclusive;nlm_lock alock;};
struct nlm_lockargs {netobj cookie;int block;int exclusive;nlm_lock alock;int reclaim;int state;};
struct nlm_testargs {netobj cookie;int exclusive;nlm_lock alock;};
struct nlm_testrply {nlm_stats stat;nlm_testrply___9560609B77CA2DE28561BE781A7E7270 nlm_testrply_u;};
struct AVAudioTime {NSObject super;AudioTimeStamp _ats;double _sampleRate;void *_reserved;};
struct NSDimension {NSUnit super;NSUInteger _reserved;NSUnitConverter *_converter;};
struct __attribute__((packed)) nd_redirect {icmp6_hdr nd_rd_hdr;in6_addr nd_rd_target;in6_addr nd_rd_dst;};
struct nlm_testres {netobj cookie;nlm_testrply stat;};
struct CMGyroData {CMLogItem super;id _internal;};
struct vm_range_t {vm_address_t address;vm_size_t size;};
struct group_req {uint32_t gr_interface;sockaddr_storage gr_group;};
struct icmp6stat {u_quad_t icp6s_error;u_quad_t icp6s_canterror;u_quad_t icp6s_toofreq;u_quad_t icp6s_outhist[256];u_quad_t icp6s_badcode;u_quad_t icp6s_tooshort;u_quad_t icp6s_checksum;u_quad_t icp6s_badlen;u_quad_t icp6s_reflect;u_quad_t icp6s_inhist[256];u_quad_t icp6s_nd_toomanyopt;icmp6errstat icp6s_outerrhist;u_quad_t icp6s_pmtuchg;u_quad_t icp6s_nd_badopt;u_quad_t icp6s_badns;u_quad_t icp6s_badna;u_quad_t icp6s_badrs;u_quad_t icp6s_badra;u_quad_t icp6s_badredirect;u_quad_t icp6s_rfc6980_drop;u_quad_t icp6s_badpkttoobig;};
struct kauth_acl {u_int32_t acl_entrycount;u_int32_t acl_flags;kauth_ace acl_ace[1];};
struct ypreq_xfr {ypmap_parms map_parms;u_int transid;u_int prog;u_int port;};
struct DERItem {DERByte *data;DERSize length;};
struct __attribute__((packed)) ip6_hdr {ip6_hdr___4B39ABADBFFE16DEF7AD006048FD8DAF ip6_ctlun;in6_addr ip6_src;in6_addr ip6_dst;};
struct __attribute__((packed)) mld_hdr {icmp6_hdr mld_icmp6_hdr;in6_addr mld_addr;};
struct rpc_err {clnt_stat re_status;rpc_err___30A4560269546B25A76610837B21C9C6 ru;};
struct sastat {u_int32_t spi;u_int32_t created;sadb_lifetime lft_c;};
typedef OSStatus (*AudioUnitRemovePropertyListenerWithUserDataProc)(void *, AudioUnitPropertyID, AudioUnitPropertyListenerProc, void *);
union ypresponse___6D34D2F64A3B31777223FA377120CA09 {ypresp_val yp_resp_valtype;ypresp_key_val yp_resp_key_valtype;ypmap_parms yp_resp_map_parmstype;};
union yprequest___6FDF785020AAFE35EF4D4B0B11050AAA {ypreq_key yp_req_keytype;ypreq_nokey yp_req_nokeytype;ypmap_parms yp_req_map_parmstype;};
struct BNNSLayerParametersLossSigmoidCrossEntropy {BNNSLossFunction function;BNNSNDArrayDescriptor i_desc;BNNSNDArrayDescriptor o_desc;BNNSLossReductionFunction reduction;float label_smooth;};
struct BNNSLayerParametersLossSoftmaxCrossEntropy {BNNSLossFunction function;BNNSNDArrayDescriptor i_desc;BNNSNDArrayDescriptor o_desc;BNNSLossReductionFunction reduction;float label_smooth;};
struct BNNSLayerParametersMultiheadAttention {BNNSMHAProjectionParameters query;BNNSMHAProjectionParameters key;BNNSMHAProjectionParameters value;char add_zero_attn;BNNSNDArrayDescriptor key_attn_bias;BNNSNDArrayDescriptor value_attn_bias;BNNSMHAProjectionParameters output;float dropout;uint32_t seed;};
typedef OSStatus (*AudioUnitRemovePropertyListenerProc)(void *, AudioUnitPropertyID, AudioUnitPropertyListenerProc);
typedef OSStatus (*AudioUnitAddPropertyListenerProc)(void *, AudioUnitPropertyID, AudioUnitPropertyListenerProc, void *);
struct BNNSLayerParametersNormalization {BNNSNDArrayDescriptor i_desc;BNNSNDArrayDescriptor o_desc;BNNSNDArrayDescriptor beta_desc;BNNSNDArrayDescriptor gamma_desc;BNNSNDArrayDescriptor moving_mean_desc;BNNSNDArrayDescriptor moving_variance_desc;float momentum;float epsilon;BNNSActivation activation;size_t num_groups;size_t normalization_axis;};
struct BNNSLayerParametersConvolution {BNNSNDArrayDescriptor i_desc;BNNSNDArrayDescriptor w_desc;BNNSNDArrayDescriptor o_desc;BNNSNDArrayDescriptor bias;BNNSActivation activation;size_t x_stride;size_t y_stride;size_t x_dilation_stride;size_t y_dilation_stride;size_t x_padding;size_t y_padding;size_t groups;size_t pad[4];};
struct BNNSLayerParametersActivation {BNNSNDArrayDescriptor i_desc;BNNSNDArrayDescriptor o_desc;BNNSActivation activation;uint32_t axis_flags;};
struct BNNSLayerParametersLossHuber {BNNSLossFunction function;BNNSNDArrayDescriptor i_desc;BNNSNDArrayDescriptor o_desc;BNNSLossReductionFunction reduction;float huber_delta;};
struct BNNSLayerParametersLossBase {BNNSLossFunction function;BNNSNDArrayDescriptor i_desc;BNNSNDArrayDescriptor o_desc;BNNSLossReductionFunction reduction;};
struct BNNSLayerParametersDropout {BNNSNDArrayDescriptor i_desc;BNNSNDArrayDescriptor o_desc;float rate;uint32_t seed;uint8_t control;};
struct CIDataMatrixCodeDescriptor {CIBarcodeDescriptor super;NSData *errorCorrectedPayload;NSInteger rowCount;NSInteger columnCount;CIDataMatrixCodeECCVersion eccVersion;};
struct GLKEffectPropertyTransform {GLKEffectProperty super;GLKMatrix4 _modelviewMatrix;GLKMatrix4 _projectionMatrix;GLKMatrix3 _normalMatrix;};
struct GLKEffectPropertyMaterial {GLKEffectProperty super;GLKVector4 _ambientColor;GLKVector4 _diffuseColor;GLKVector4 _specularColor;GLKVector4 _emissiveColor;GLfloat _shininess;};
struct mach_msg_seqno_trailer_t {mach_msg_trailer_type_t msgh_trailer_type;mach_msg_trailer_size_t msgh_trailer_size;mach_port_seqno_t msgh_seqno;};
struct ExtendedAudioFormatInfo {AudioStreamBasicDescription mASBD; void *mMagicCookie;UInt32 mMagicCookieSize;AudioClassDescription mClassDescription;};
struct memory_object_attr_info {memory_object_copy_strategy_t copy_strategy;memory_object_cluster_size_t cluster_size;boolean_t may_cache_object;boolean_t temporary;};
struct CIPDF417CodeDescriptor {CIBarcodeDescriptor super;NSData *errorCorrectedPayload;BOOL isCompact;NSInteger rowCount;NSInteger columnCount;};
struct NSISO8601DateFormatter {NSFormatter super;CFDateFormatterRef _formatter;NSTimeZone *_timeZone;NSISO8601DateFormatOptions _formatOptions;};
struct CIAztecCodeDescriptor {CIBarcodeDescriptor super;NSData *errorCorrectedPayload;BOOL isCompact;NSInteger layerCount;NSInteger dataCodewordCount;};
struct AUNodeRenderCallback {AUNode destNode;AudioUnitElement destInputNumber;AURenderCallbackStruct cback;};
struct CIRectangleFeature {CIFeature super;CGRect bounds;CGPoint topLeft;CGPoint topRight;CGPoint bottomLeft;CGPoint bottomRight;};
struct KerxSubtableHeader {UInt32 length;KerxSubtableCoverage stInfo;UInt32 tupleCount;KerxFormatSpecificHeader fsHeader;};
struct mach_port_info_ext {mach_port_status_t mpie_status;mach_port_msgcount_t mpie_boost_cnt;uint32_t reserved[6];};
struct __attribute__((packed)) nd_opt_prefix_info {u_int8_t nd_opt_pi_type;u_int8_t nd_opt_pi_len;u_int8_t nd_opt_pi_prefix_len;u_int8_t nd_opt_pi_flags_reserved;u_int32_t nd_opt_pi_valid_time;u_int32_t nd_opt_pi_preferred_time;u_int32_t nd_opt_pi_reserved2;in6_addr nd_opt_pi_prefix;};
struct mach_port_options {uint32_t flags;mach_port_limits_t mpl;mach_port_options___35CF9E4DD47DBA463F25D88A6280642A __anonymous0;};
struct __attribute__((packed)) icmp6_namelookup {icmp6_hdr icmp6_nl_hdr;u_int8_t icmp6_nl_nonce[8];int32_t icmp6_nl_ttl;};
struct CIQRCodeFeature {CIFeature super;CGRect bounds;CGPoint topLeft;CGPoint topRight;CGPoint bottomLeft;CGPoint bottomRight;CIQRCodeDescriptor *symbolDescriptor;};
struct KernStateHeader {STHeader header;UInt16 valueTable;UInt8 firstTable[1];};
struct NSDateFormatter {NSFormatter super;NSMutableDictionary *_attributes;CFDateFormatterRef _formatter;NSUInteger _counter;};
struct __semid_ds_new {ipc_perm sem_perm;__int32_t sem_base;unsigned short sem_nsems;time_t sem_otime;__int32_t sem_pad1;time_t sem_ctime;__int32_t sem_pad2;__int32_t sem_pad3[4];};
struct accepted_reply {opaque_auth ar_verf;accept_stat ar_stat;accepted_reply___31595615714680EC1AE1A80BF98BFB1C ru;};
union AURenderEvent {AURenderEventHeader head;AUParameterEvent parameter;AUMIDIEvent MIDI;};
struct AVAudioFormat {NSObject super;AudioStreamBasicDescription _asbd;AVAudioChannelLayout *_layout;AVAudioCommonFormat _commonFormat;void *_reserved;};
struct JSStaticValue { char *name;JSObjectGetPropertyCallback getProperty;JSObjectSetPropertyCallback setProperty;JSPropertyAttributes attributes;};
struct _xlinkHandler {xlinkSimpleLinkFunk simple;xlinkExtendedLinkFunk extended;xlinkExtendedLinkSetFunk set;};
struct kauth_filesec {u_int32_t fsec_magic;guid_t fsec_owner;guid_t fsec_group;kauth_acl fsec_acl;};
struct __attribute__((packed)) rr_pco_match {u_int8_t rpm_code;u_int8_t rpm_len;u_int8_t rpm_ordinal;u_int8_t rpm_matchlen;u_int8_t rpm_minlen;u_int8_t rpm_maxlen;u_int16_t rpm_reserved;in6_addr rpm_prefix;};
struct gz_header_s {int text;uLong time;int xflags;int os;Bytef *extra;uInt extra_len;uInt extra_max;Bytef *name;uInt name_max;Bytef *comment;uInt comm_max;int hcrc;int done;};
struct if_msghdr2 {u_short ifm_msglen;u_char ifm_version;u_char ifm_type;int ifm_addrs;int ifm_flags;u_short ifm_index;int ifm_snd_len;int ifm_snd_maxlen;int ifm_snd_drops;int ifm_timer;if_data64 ifm_data;};
struct __attribute__((packed)) rr_pco_use {u_int8_t rpu_uselen;u_int8_t rpu_keeplen;u_int8_t rpu_ramask;u_int8_t rpu_raflags;u_int32_t rpu_vltime;u_int32_t rpu_pltime;u_int32_t rpu_flags;in6_addr rpu_prefix;};
struct MortTable {Fixed version;UInt32 nChains;MortChain chains[1];};
struct SVCXPRT {int xp_sock;unsigned short xp_port;SVCXPRT__xp_ops *xp_ops;int xp_addrlen;sockaddr_in xp_raddr;opaque_auth xp_verf;caddr_t xp_p1;caddr_t xp_p2;};
union icmp___B235664BFCA97AAED3CE94418077D709 {icmp__id_ts id_ts;icmp__id_ip id_ip;icmp_ra_addr id_radv;u_int32_t id_mask;char id_data[1];};
struct CGDataProviderSequentialCallbacks {unsigned int version;CGDataProviderGetBytesCallback getBytes;CGDataProviderSkipForwardCallback skipForward;CGDataProviderRewindCallback rewind;CGDataProviderReleaseInfoCallback releaseInfo;};
struct SparseOpaqueFactorization_Double {SparseStatus_t status;SparseAttributes_t attributes;SparseOpaqueSymbolicFactorization symbolicFactorization;char userFactorStorage;void *numericFactorization;size_t solveWorkspaceRequiredStatic;size_t solveWorkspaceRequiredPerRHS;};
struct SparseOpaqueFactorization_Float {SparseStatus_t status;SparseAttributes_t attributes;SparseOpaqueSymbolicFactorization symbolicFactorization;char userFactorStorage;void *numericFactorization;size_t solveWorkspaceRequiredStatic;size_t solveWorkspaceRequiredPerRHS;};
struct std____1__recursive_timed_mutex {std____1__mutex __m_;std____1__condition_variable __cv_;size_t __count_;std____1____libcpp_thread_id __id_;};
struct AudioComponentPlugInInterface {OSStatus (*Open)(void *, AudioComponentInstance);OSStatus (*Close)(void *);AudioComponentMethod (*Lookup)(SInt16);void *reserved;};
struct SparseOpaqueSubfactor_Double {SparseAttributes_t attributes;SparseSubfactor_t contents;SparseOpaqueFactorization_Double factor;size_t workspaceRequiredStatic;size_t workspaceRequiredPerRHS;};
struct BNNSLayerParametersLossYolo {BNNSLossFunction function;BNNSNDArrayDescriptor i_desc;BNNSNDArrayDescriptor o_desc;BNNSLossReductionFunction reduction;float huber_delta;size_t number_of_grid_columns;size_t number_of_grid_rows;size_t number_of_anchor_boxes;size_t anchor_box_size;char rescore;float scale_xy;float scale_wh;float scale_object;float scale_no_object;float scale_classification;float object_minimum_iou;float no_object_maximum_iou;float *anchors_data;};
struct SparseOpaqueSubfactor_Float {SparseAttributes_t attributes;SparseSubfactor_t contents;SparseOpaqueFactorization_Float factor;size_t workspaceRequiredStatic;size_t workspaceRequiredPerRHS;};
struct mach_msg_security_trailer_t {mach_msg_trailer_type_t msgh_trailer_type;mach_msg_trailer_size_t msgh_trailer_size;mach_port_seqno_t msgh_seqno;security_token_t msgh_sender;};
struct BNNSLayerParametersPadding {BNNSNDArrayDescriptor i_desc;BNNSNDArrayDescriptor o_desc;size_t padding_size[8][2];BNNSPaddingMode padding_mode;uint32_t padding_value;};
struct BNNSLayerParametersPooling {BNNSNDArrayDescriptor i_desc;BNNSNDArrayDescriptor o_desc;BNNSNDArrayDescriptor bias;BNNSActivation activation;BNNSPoolingFunction pooling_function;size_t k_width;size_t k_height;size_t x_stride;size_t y_stride;size_t x_dilation_stride;size_t y_dilation_stride;size_t x_padding;size_t y_padding;size_t pad[4];};
union KernFormatSpecificHeader {KernOrderedListHeader orderedList;KernStateHeader stateTable;KernSimpleArrayHeader simpleArray;KernIndexArrayHeader indexArray;};
struct ScheduledAudioFileRegion {AudioTimeStamp mTimeStamp;ScheduledAudioFileRegionCompletionProc mCompletionProc;void *mCompletionProcUserData;OpaqueAudioFileID *mAudioFile;UInt32 mLoopCount;SInt64 mStartFrame;UInt32 mFramesToPlay;};
struct MIDIIOErrorNotification {MIDINotificationMessageID messageID;UInt32 messageSize;MIDIDeviceRef driverDevice;OSStatus errorCode;};
struct BNNSFilterParameters {uint32_t flags;size_t n_threads;BNNSAlloc alloc_memory;BNNSFree free_memory;};
struct ScheduledAudioSlice {AudioTimeStamp mTimeStamp;ScheduledAudioSliceCompletionProc mCompletionProc;void *mCompletionProcUserData;AUScheduledAudioSliceFlags mFlags;UInt32 mReserved;void *mReserved2;UInt32 mNumberFrames;AudioBufferList *mBufferList;};
struct CIQRCodeDescriptor {CIBarcodeDescriptor super;NSData *errorCorrectedPayload;NSInteger symbolVersion;uint8_t maskPattern;CIQRCodeErrorCorrectionLevel errorCorrectionLevel;};
struct KernSubtableHeader {SInt32 length;KernSubtableInfo stInfo;SInt16 tupleIndex;KernFormatSpecificHeader fsHeader;};
struct AudioFileRegion {UInt32 mRegionID;CFStringRef mName;AudioFileRegionFlags mFlags;UInt32 mNumberMarkers;AudioFileMarker mMarkers[1];};
struct NSPurgeableData {NSMutableData super;NSUInteger _length;int32_t _accessCount;uint8_t _private[32];void *_reserved;};
struct iconv_fallbacks {iconv_unicode_mb_to_uc_fallback mb_to_uc_fallback;iconv_unicode_uc_to_mb_fallback uc_to_mb_fallback;iconv_wchar_mb_to_wc_fallback mb_to_wc_fallback;iconv_wchar_wc_to_mb_fallback wc_to_mb_fallback;void *data;};
typedef kern_return_t memory_reader_t(task_t, vm_address_t, vm_size_t, void **);
struct CIFaceFeature {CIFeature super;CGRect bounds;BOOL hasLeftEyePosition;CGPoint leftEyePosition;BOOL hasRightEyePosition;CGPoint rightEyePosition;BOOL hasMouthPosition;CGPoint mouthPosition;BOOL hasTrackingID;int trackingID;BOOL hasTrackingFrameCount;int trackingFrameCount;BOOL hasFaceAngle;float faceAngle;BOOL hasSmile;BOOL leftEyeClosed;BOOL rightEyeClosed;};
struct rpc_subsystem {void *reserved;mach_msg_id_t start;mach_msg_id_t end;unsigned int maxsize;vm_address_t base_addr;rpc_routine_descriptor routine[1];rpc_routine_arg_descriptor arg_descriptor[1];};
struct __attribute__((packed)) nd_opt_rdnss {u_int8_t nd_opt_rdnss_type;u_int8_t nd_opt_rdnss_len;u_int16_t nd_opt_rdnss_reserved;u_int32_t nd_opt_rdnss_lifetime;in6_addr nd_opt_rdnss_addr[1];};
struct xvsockpgen {u_int32_t xvg_len;u_int64_t xvg_count;vsock_gen_t xvg_gen;so_gen_t xvg_sogen;};
struct auditinfo {au_id_t ai_auid;au_mask_t ai_mask;au_tid_t ai_termid;au_asid_t ai_asid;};
struct __attribute__((packed)) rr_result {u_int16_t rrr_flags;u_int8_t rrr_ordinal;u_int8_t rrr_matchedlen;u_int32_t rrr_ifid;in6_addr rrr_prefix;};
struct xinpgen {u_int32_t xig_len;u_int xig_count;inp_gen_t xig_gen;so_gen_t xig_sogen;};
struct std____1__codecvt_byname_char16_t__char__mbstate_t__vtbl_layout; 
struct std____1__codecvt_byname_char32_t__char__mbstate_t__vtbl_layout; 
struct std____1__codecvt_byname_wchar_t__char__mbstate_t__vtbl_layout; 
struct std____1__codecvt_byname_char__char__mbstate_t__vtbl_layout; 
struct std____1__codecvt_char16_t__char__mbstate_t__vtbl_layout; 
struct std____1__codecvt_char32_t__char__mbstate_t__vtbl_layout; 
struct std____1__codecvt_byname_char16_t__char__mbstate_t__vtbl; 
struct std____1__codecvt_byname_char32_t__char__mbstate_t__vtbl; 
struct std____1__codecvt_wchar_t__char__mbstate_t__vtbl_layout; 
struct std____1__codecvt_byname_wchar_t__char__mbstate_t__vtbl; 
struct std____1__codecvt_char__char__mbstate_t__vtbl_layout; 
struct std____1__codecvt_byname_char__char__mbstate_t__vtbl; 
struct std____1__codecvt_char16_t__char__mbstate_t__vtbl; 
struct std____1__codecvt_char32_t__char__mbstate_t__vtbl; 
struct std____1__codecvt_wchar_t__char__mbstate_t__vtbl; 
struct std____1__codecvt_char__char__mbstate_t__vtbl; 
struct std____1____widen_from_utf8_16__vtbl_layout; 
struct std____1____widen_from_utf8_32__vtbl_layout; 
struct std____1____narrow_to_utf8_16__vtbl_layout; 
struct std____1____narrow_to_utf8_32__vtbl_layout; 
union icmp___C4DAEE47A1B4C5B2D295BC56AED6DB45 {u_char ih_pptr;in_addr ih_gwaddr;icmp__ih_idseq ih_idseq;int ih_void;icmp__ih_pmtu ih_pmtu;icmp__ih_rtradv ih_rtradv;};
struct std____1____widen_from_utf8_16__vtbl; 
struct std____1____widen_from_utf8_32__vtbl; 
struct std____1____narrow_to_utf8_16__vtbl; 
struct std____1____narrow_to_utf8_32__vtbl; 
union SFNTLookupFormatSpecificHeader {SFNTLookupArrayHeader theArray;SFNTLookupSegmentHeader segment;SFNTLookupSingleHeader single;SFNTLookupTrimmedArrayHeader trimmedArray;SFNTLookupVectorHeader vector;};
struct MIDIThruConnectionParams {UInt32 version;UInt32 numSources;MIDIThruConnectionEndpoint sources[8];UInt32 numDestinations;MIDIThruConnectionEndpoint destinations[8];UInt8 channelMap[16];UInt8 lowVelocity;UInt8 highVelocity;UInt8 lowNote;UInt8 highNote;MIDITransform noteNumber;MIDITransform velocity;MIDITransform keyPressure;MIDITransform channelPressure;MIDITransform programChange;MIDITransform pitchBend;UInt8 filterOutSysEx;UInt8 filterOutMTC;UInt8 filterOutBeatClock;UInt8 filterOutTuneRequest;UInt8 reserved2[3];UInt8 filterOutAllControls;UInt16 numControlTransforms;UInt16 numMaps;UInt16 reserved3[4];};
struct mach_msg_audit_trailer_t {mach_msg_trailer_type_t msgh_trailer_type;mach_msg_trailer_size_t msgh_trailer_size;mach_port_seqno_t msgh_seqno;security_token_t msgh_sender;audit_token_t msgh_audit;};
struct AudioUnitParameterEvent {AudioUnitScope scope;AudioUnitElement element;AudioUnitParameterID parameter;AUParameterEventType eventType;AudioUnitParameterEvent___30DB46DA13B14C3192C3DF0E34A08043 eventValues;};
struct NSDateIntervalFormatter {NSFormatter super;NSLocale *_locale;NSCalendar *_calendar;NSTimeZone *_timeZone;NSString *_dateTemplate;NSString *_dateTemplateFromStyles;void *_formatter;NSDateIntervalFormatterStyle _dateStyle;NSDateIntervalFormatterStyle _timeStyle;BOOL _modified;BOOL _useTemplate;dispatch_semaphore_t _lock;void *_reserved[4];};
struct MIDISysexSendRequest {MIDIEndpointRef destination; Byte *data;UInt32 bytesToSend;Boolean complete;Byte reserved[3];MIDICompletionProc completionProc;void *completionRefCon;};
struct NSNumberFormatter {NSFormatter super;NSMutableDictionary *_attributes;CFNumberFormatterRef _formatter;NSUInteger _counter;NSNumberFormatterBehavior _behavior;NSRecursiveLock *_lock;unsigned long long _stateBitMask;NSInteger _cacheGeneration;void *_reserved[8];};
struct mach_msg_header_t {mach_msg_bits_t msgh_bits;mach_msg_size_t msgh_size;mach_port_t msgh_remote_port;mach_port_t msgh_local_port;mach_port_name_t msgh_voucher_port;mach_msg_id_t msgh_id;};
struct auditinfo_addr {au_id_t ai_auid;au_mask_t ai_mask;au_tid_addr_t ai_termid;au_asid_t ai_asid;au_asflgs_t ai_flags;};
struct ipc_info_name {mach_port_name_t iin_name;integer_t iin_collision;mach_port_type_t iin_type;mach_port_urefs_t iin_urefs;natural_t iin_object;natural_t iin_next;natural_t iin_hash;};
struct mig_subsystem {mig_server_routine_t server;mach_msg_id_t start;mach_msg_id_t end;mach_msg_size_t maxsize;vm_address_t reserved;mig_routine_descriptor routine[1];};
struct sockaddr_in6 {__uint8_t sin6_len;sa_family_t sin6_family;in_port_t sin6_port;__uint32_t sin6_flowinfo;in6_addr sin6_addr;__uint32_t sin6_scope_id;};
struct auditpinfo {pid_t ap_pid;au_id_t ap_auid;au_mask_t ap_mask;au_tid_t ap_termid;au_asid_t ap_asid;};
struct xvsockpcb {u_int32_t xv_len;u_int64_t xv_vsockpp;u_int32_t xvp_local_cid;u_int32_t xvp_local_port;u_int32_t xvp_remote_cid;u_int32_t xvp_remote_port;u_int32_t xvp_rxcnt;u_int32_t xvp_txcnt;u_int32_t xvp_peer_rxhiwat;u_int32_t xvp_peer_rxcnt;pid_t xvp_last_pid;vsock_gen_t xvp_gencnt;xsocket xv_socket;};
struct __Request__processor_set_policy_control_t {mach_msg_header_t Head;NDR_record_t NDR;processor_set_flavor_t flavor;mach_msg_type_number_t policy_infoCnt;integer_t policy_info[5];boolean_t change;};
struct __Reply__mach_port_kobject_description_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;natural_t object_type;mach_vm_address_t object_addr;mach_msg_type_number_t descriptionOffset;mach_msg_type_number_t descriptionCnt;char description[512];};
struct __Request__mach_voucher_attr_command_t {mach_msg_header_t Head;NDR_record_t NDR;mach_voucher_attr_key_t key;mach_voucher_attr_command_t command;mach_msg_type_number_t in_contentCnt;uint8_t in_content[4096];mach_msg_type_number_t out_contentCnt;};
struct __Request__mach_port_set_attributes_t {mach_msg_header_t Head;NDR_record_t NDR;mach_port_name_t name;mach_port_flavor_t flavor;mach_msg_type_number_t port_infoCnt;integer_t port_info[17];};
struct __Request__exception_raise_state_t {mach_msg_header_t Head;NDR_record_t NDR;exception_type_t exception;mach_msg_type_number_t codeCnt;integer_t code[2];int flavor;mach_msg_type_number_t old_stateCnt;natural_t old_state[1296];};
struct __Request__vm_machine_attribute_t {mach_msg_header_t Head;NDR_record_t NDR;vm_address_t address;vm_size_t size;vm_machine_attribute_t attribute;vm_machine_attribute_val_t value;};
struct __Reply__thread_policy_get_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;mach_msg_type_number_t policy_infoCnt;integer_t policy_info[16];boolean_t get_default;};
struct __Request__mach_port_peek_t {mach_msg_header_t Head;NDR_record_t NDR;mach_port_name_t name;mach_msg_trailer_type_t trailer_type;mach_port_seqno_t request_seqnop;mach_msg_type_number_t trailer_infopCnt;};
struct __Reply__task_policy_get_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;mach_msg_type_number_t policy_infoCnt;integer_t policy_info[16];boolean_t get_default;};
struct __Request__thread_policy_t {mach_msg_header_t Head;NDR_record_t NDR;policy_t policy;mach_msg_type_number_t baseCnt;integer_t base[5];boolean_t set_limit;};
struct mach_msg_context_trailer_t {mach_msg_trailer_type_t msgh_trailer_type;mach_msg_trailer_size_t msgh_trailer_size;mach_port_seqno_t msgh_seqno;security_token_t msgh_sender;audit_token_t msgh_audit;mach_port_context_t msgh_context;};
struct __Request__task_policy_t {mach_msg_header_t Head;NDR_record_t NDR;policy_t policy;mach_msg_type_number_t baseCnt;integer_t base[5];boolean_t set_limit;boolean_t change;};
struct BNNSLayerParametersLSTM {size_t input_size;size_t hidden_size;size_t batch_size;size_t num_layers;size_t seq_len;float dropout;uint32_t lstm_flags;BNNSNDArrayDescriptor sequence_descriptor;BNNSLSTMDataDescriptor input_descriptor;BNNSLSTMDataDescriptor output_descriptor;BNNSLSTMGateDescriptor input_gate;BNNSLSTMGateDescriptor forget_gate;BNNSLSTMGateDescriptor candidate_gate;BNNSLSTMGateDescriptor output_gate;BNNSActivation hidden_activation;};
struct __Request__vm_protect_t {mach_msg_header_t Head;NDR_record_t NDR;vm_address_t address;vm_size_t size;boolean_t set_maximum;vm_prot_t new_protection;};
struct CMBufferCallbacks {uint32_t version;void *refcon;CMBufferGetTimeCallback getDecodeTimeStamp;CMBufferGetTimeCallback getPresentationTimeStamp;CMBufferGetTimeCallback getDuration;CMBufferGetBooleanCallback isDataReady;CMBufferCompareCallback compare;CFStringRef dataBecameReadyNotification;CMBufferGetSizeCallback getSize;};
struct mach_port_status {mach_port_rights_t mps_pset;mach_port_seqno_t mps_seqno;mach_port_mscount_t mps_mscount;mach_port_msgcount_t mps_qlimit;mach_port_msgcount_t mps_msgcount;mach_port_rights_t mps_sorights;boolean_t mps_srights;boolean_t mps_pdrequest;boolean_t mps_nsrequest;natural_t mps_flags;};
struct auditpinfo_addr {pid_t ap_pid;au_id_t ap_auid;au_mask_t ap_mask;au_tid_addr_t ap_termid;au_asid_t ap_asid;au_asflgs_t ap_flags;};
struct z_stream_s {Bytef *next_in;uInt avail_in;uLong total_in;Bytef *next_out;uInt avail_out;uLong total_out;char *msg;internal_state *state;alloc_func zalloc;free_func zfree;voidpf opaque;int data_type;uLong adler;uLong reserved;};
struct std____1__basic_streambuf_char__vtbl_layout; 
struct std____1__basic_streambuf_char__vtbl; 
struct __Reply__vm_region_recurse_64_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;vm_address_t address;vm_size_t size;natural_t nesting_depth;mach_msg_type_number_t infoCnt;int info[19];};
struct __Reply__vm_region_recurse_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;vm_address_t address;vm_size_t size;natural_t nesting_depth;mach_msg_type_number_t infoCnt;int info[19];};
struct __Reply__mach_port_peek_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;mach_port_seqno_t request_seqnop;mach_msg_size_t msg_sizep;mach_msg_id_t msg_idp;mach_msg_type_number_t trailer_infopCnt;char trailer_infop[68];};
struct std____1__basic_stringbuf_char__vtbl_layout; 
struct std____1__basic_stringbuf_char__vtbl; 
struct mach_msg_mac_trailer_t {mach_msg_trailer_type_t msgh_trailer_type;mach_msg_trailer_size_t msgh_trailer_size;mach_port_seqno_t msgh_seqno;security_token_t msgh_sender;audit_token_t msgh_audit;mach_port_context_t msgh_context;mach_msg_filter_id msgh_ad;msg_labels_t msgh_labels;};
struct axr_part_info_t {axr_box2i_t dataWindow;axr_box2i_t displayWindow;axr_size_t tileSize;axr_compression_t compression;axr_line_order_t lineOrder;float pixelAspectRatio;axr_part_info_t___38C3DEC81229B66F67FB6D350D75FF5A screenWindowCenter;float screenWindowWidth;axr_part_info_t___9F129DB9CDBDC1B09F866A34CEF265DD __anonymous0;axr_part_info_t___C2A9D52C59000E92D946D3240063F922 preview; char *name; char *view;axr_level_mode_t levelMode;float xDensity;};
struct __res_9_state {int retrans;int retry;u_long options;int nscount;sockaddr_in nsaddr_list[3];u_short id;char *dnsrch[7];char defdname[256];u_long pfcode;unsigned int ndots : 4;unsigned int nsort : 4;char unused[3];__res_9_state___74FC9BA5E222057206531471DD26DEFB sort_list[10];res_send_qhook qhook;res_send_rhook rhook;int res_h_errno;int _vcsock;u_int _flags;u_int _pad;__res_9_state___E1C47136107487A623680D4B7EE68AB7 _u;};
struct kmod_info {kmod_info *next;int32_t info_version;uint32_t id;char name[64];char version[64];int32_t reference_count;kmod_reference_t *reference_list;vm_address_t address;vm_size_t size;vm_size_t hdr_size;kmod_start_func_t *start;kmod_stop_func_t *stop;};
struct NSDateComponentsFormatter {NSFormatter super;pthread_mutex_t _lock;void *_fmt;void *_unused;NSString *_fmtLocaleIdent;NSCalendar *_calendar;NSDate *_referenceDate;NSNumberFormatter *_unitFormatter;NSCalendarUnit _allowedUnits;NSFormattingContext _formattingContext;NSDateComponentsFormatterUnitsStyle _unitsStyle;NSDateComponentsFormatterZeroFormattingBehavior _zeroFormattingBehavior;NSInteger _maximumUnitCount;BOOL _allowsFractionalUnits;BOOL _collapsesLargestUnit;BOOL _includesApproximationPhrase;BOOL _includesTimeRemainingPhrase;void *_reserved;};
struct malloc_introspection_t {kern_return_t (*enumerator)(task_t, void *, unsigned int, vm_address_t, memory_reader_t, vm_range_recorder_t);size_t (*good_size)(malloc_zone_t *, size_t);boolean_t (*check)(malloc_zone_t *);void (*print)(malloc_zone_t *, boolean_t);void (*log)(malloc_zone_t *, void *);void (*force_lock)(malloc_zone_t *);void (*force_unlock)(malloc_zone_t *);void (*statistics)(malloc_zone_t *, malloc_statistics_t *);boolean_t (*zone_locked)(malloc_zone_t *);boolean_t (*enable_discharge_checking)(malloc_zone_t *);void (*disable_discharge_checking)(malloc_zone_t *);void (*discharge)(malloc_zone_t *, void *);void (*enumerate_discharged_pointers)(malloc_zone_t *, void *);void (*reinit_lock)(malloc_zone_t *);void (*print_task)(task_t, unsigned int, vm_address_t, memory_reader_t, print_task_printer_t);void (*task_statistics)(task_t, vm_address_t, memory_reader_t, malloc_statistics_t *);};
struct MIDIDriverInterface {void *_reserved;HRESULT (*QueryInterface)(void *, REFIID, LPVOID *);ULONG (*AddRef)(void *);ULONG (*Release)(void *);OSStatus (*FindDevices)(MIDIDriverRef, MIDIDeviceListRef);OSStatus (*Start)(MIDIDriverRef, MIDIDeviceListRef);OSStatus (*Stop)(MIDIDriverRef);OSStatus (*Configure)(MIDIDriverRef, MIDIDeviceRef);OSStatus (*Send)(MIDIDriverRef,  MIDIPacketList *, void *, void *);OSStatus (*EnableSource)(MIDIDriverRef, MIDIEndpointRef, Boolean);OSStatus (*Flush)(MIDIDriverRef, MIDIEndpointRef, void *, void *);OSStatus (*Monitor)(MIDIDriverRef, MIDIEndpointRef,  MIDIPacketList *);OSStatus (*SendPackets)(MIDIDriverRef,  MIDIEventList *, void *, void *);OSStatus (*MonitorEvents)(MIDIDriverRef, MIDIEndpointRef,  MIDIEventList *);};
struct UCharIterator { void *context;int32_t length;int32_t start;int32_t index;int32_t limit;int32_t reservedField;UCharIteratorGetIndex *getIndex;UCharIteratorMove *move;UCharIteratorHasNext *hasNext;UCharIteratorHasPrevious *hasPrevious;UCharIteratorCurrent *current;UCharIteratorNext *next;UCharIteratorPrevious *previous;UCharIteratorReserved *reservedFn;UCharIteratorGetState *getState;UCharIteratorSetState *setState;};
struct inpcb {_inpcb_list_entry inp_hash;in_addr reserved1;in_addr reserved2;u_short inp_fport;u_short inp_lport;_inpcb_list_entry inp_list;u_int32_t inp_ppcb;u_int32_t inp_pcbinfo;u_int32_t inp_socket;u_char nat_owner;u_int32_t nat_cookie;_inpcb_list_entry inp_portlist;u_int32_t inp_phd;inp_gen_t inp_gencnt;int inp_flags;u_int32_t inp_flow;u_char inp_vflag;u_char inp_ip_ttl;u_char inp_ip_p;inpcb___8484DCF5CF4707A7FE251BC9B24F4E7E inp_dependfaddr;inpcb___C7595A3B4BE5971B51D33E1DD0735D09 inp_dependladdr;inpcb___7D460B6C0767DE165AC6133441A5769E inp_dependroute;inpcb___A3F4421969B6E37110B41AEAB8712ABC inp_depend4;inpcb___63812C9EE20CEA811C29254429EC420D inp_depend6;int hash_element;u_int32_t inp_saved_ppcb;u_int32_t inp_sp;u_int32_t reserved[3];};
struct _xmlXPathContext {xmlDocPtr doc;xmlNodePtr node;int nb_variables_unused;int max_variables_unused;xmlHashTablePtr varHash;int nb_types;int max_types;xmlXPathTypePtr types;int nb_funcs_unused;int max_funcs_unused;xmlHashTablePtr funcHash;int nb_axis;int max_axis;xmlXPathAxisPtr axis;xmlNsPtr *namespaces;int nsNr;void *user;int contextSize;int proximityPosition;int xptr;xmlNodePtr here;xmlNodePtr origin;xmlHashTablePtr nsHash;xmlXPathVariableLookupFunc varLookupFunc;void *varLookupData;void *extra; xmlChar *function; xmlChar *functionURI;xmlXPathFuncLookupFunc funcLookupFunc;void *funcLookupData;xmlNsPtr *tmpNsList;int tmpNsNr;void *userData;xmlStructuredErrorFunc error;xmlError lastError;xmlNodePtr debugNode;xmlDictPtr dict;int flags;void *cache;};
struct extern_proc {extern_proc___F477F83051F9A905E317A45D3B2D5518 p_un;vmspace *p_vmspace;sigacts *p_sigacts;int p_flag;char p_stat;pid_t p_pid;pid_t p_oppid;int p_dupfd;caddr_t user_stack;void *exit_thread;int p_debugger;boolean_t sigwait;u_int p_estcpu;int p_cpticks;fixpt_t p_pctcpu;void *p_wchan;char *p_wmesg;u_int p_swtime;u_int p_slptime;itimerval p_realtimer;timeval p_rtime;u_quad_t p_uticks;u_quad_t p_sticks;u_quad_t p_iticks;int p_traceflag;vnode *p_tracep;int p_siglist;vnode *p_textvp;int p_holdcnt;sigset_t p_sigmask;sigset_t p_sigignore;sigset_t p_sigcatch;u_char p_priority;u_char p_usrpri;char p_nice;char p_comm[17];pgrp *p_pgrp;user *p_addr;u_short p_xstat;u_short p_acflag;rusage *p_ru;};
struct _xmlGlobalState { char *xmlParserVersion;xmlSAXLocator xmlDefaultSAXLocator;xmlSAXHandlerV1 xmlDefaultSAXHandler;xmlSAXHandlerV1 docbDefaultSAXHandler;xmlSAXHandlerV1 htmlDefaultSAXHandler;xmlFreeFunc xmlFree;xmlMallocFunc xmlMalloc;xmlStrdupFunc xmlMemStrdup;xmlReallocFunc xmlRealloc;xmlGenericErrorFunc xmlGenericError;xmlStructuredErrorFunc xmlStructuredError;void *xmlGenericErrorContext;int oldXMLWDcompatibility;xmlBufferAllocationScheme xmlBufferAllocScheme;int xmlDefaultBufferSize;int xmlSubstituteEntitiesDefaultValue;int xmlDoValidityCheckingDefaultValue;int xmlGetWarningsDefaultValue;int xmlKeepBlanksDefaultValue;int xmlLineNumbersDefaultValue;int xmlLoadExtDtdDefaultValue;int xmlParserDebugEntities;int xmlPedanticParserDefaultValue;int xmlSaveNoEmptyTags;int xmlIndentTreeOutput; char *xmlTreeIndentString;xmlRegisterNodeFunc xmlRegisterNodeDefaultValue;xmlDeregisterNodeFunc xmlDeregisterNodeDefaultValue;xmlMallocFunc xmlMallocAtomic;xmlError xmlLastError;xmlParserInputBufferCreateFilenameFunc xmlParserInputBufferCreateFilenameValue;xmlOutputBufferCreateFilenameFunc xmlOutputBufferCreateFilenameValue;void *xmlStructuredErrorContext;};
struct _xmlSAXHandlerV1 {internalSubsetSAXFunc internalSubset;isStandaloneSAXFunc isStandalone;hasInternalSubsetSAXFunc hasInternalSubset;hasExternalSubsetSAXFunc hasExternalSubset;resolveEntitySAXFunc resolveEntity;getEntitySAXFunc getEntity;entityDeclSAXFunc entityDecl;notationDeclSAXFunc notationDecl;attributeDeclSAXFunc attributeDecl;elementDeclSAXFunc elementDecl;unparsedEntityDeclSAXFunc unparsedEntityDecl;setDocumentLocatorSAXFunc setDocumentLocator;startDocumentSAXFunc startDocument;endDocumentSAXFunc endDocument;startElementSAXFunc startElement;endElementSAXFunc endElement;referenceSAXFunc reference;charactersSAXFunc characters;ignorableWhitespaceSAXFunc ignorableWhitespace;processingInstructionSAXFunc processingInstruction;commentSAXFunc comment;warningSAXFunc warning;errorSAXFunc error;fatalErrorSAXFunc fatalError;getParameterEntitySAXFunc getParameterEntity;cdataBlockSAXFunc cdataBlock;externalSubsetSAXFunc externalSubset;unsigned int initialized;};
struct _xmlSAXHandler {internalSubsetSAXFunc internalSubset;isStandaloneSAXFunc isStandalone;hasInternalSubsetSAXFunc hasInternalSubset;hasExternalSubsetSAXFunc hasExternalSubset;resolveEntitySAXFunc resolveEntity;getEntitySAXFunc getEntity;entityDeclSAXFunc entityDecl;notationDeclSAXFunc notationDecl;attributeDeclSAXFunc attributeDecl;elementDeclSAXFunc elementDecl;unparsedEntityDeclSAXFunc unparsedEntityDecl;setDocumentLocatorSAXFunc setDocumentLocator;startDocumentSAXFunc startDocument;endDocumentSAXFunc endDocument;startElementSAXFunc startElement;endElementSAXFunc endElement;referenceSAXFunc reference;charactersSAXFunc characters;ignorableWhitespaceSAXFunc ignorableWhitespace;processingInstructionSAXFunc processingInstruction;commentSAXFunc comment;warningSAXFunc warning;errorSAXFunc error;fatalErrorSAXFunc fatalError;getParameterEntitySAXFunc getParameterEntity;cdataBlockSAXFunc cdataBlock;externalSubsetSAXFunc externalSubset;unsigned int initialized;void *_private;startElementNsSAX2Func startElementNs;endElementNsSAX2Func endElementNs;xmlStructuredErrorFunc serror;};
struct ASAccountAuthenticationModificationReplacePasswordWithSignInWithAppleRequest {ASAccountAuthenticationModificationRequest super;};
struct ASAccountAuthenticationModificationUpgradePasswordToStrongPasswordRequest {ASAccountAuthenticationModificationRequest super;};
typedef std____1__allocator_char16_t___size_type std____1____size_type_std__allocator_char16_t___long__true___type;
typedef std____1__allocator_char32_t___size_type std____1____size_type_std__allocator_char32_t___long__true___type;
struct INGetAvailableRestaurantReservationBookingDefaultsIntentResponse {INIntentResponse super;};
typedef std____1__allocator_wchar_t___size_type std____1____size_type_std__allocator_wchar_t___long__true___type;
typedef std____1____size_type_std__allocator_char16_t___long__true___type std____1__allocator_traits_std__allocator_char16_t____size_type;
typedef std____1____size_type_std__allocator_char32_t___long__true___type std____1__allocator_traits_std__allocator_char32_t____size_type;
typedef std____1____size_type_std__allocator_wchar_t___long__true___type std____1__allocator_traits_std__allocator_wchar_t____size_type;
typedef std____1__allocator_char___size_type std____1____size_type_std__allocator_char___long__true___type;
struct INGetUserCurrentRestaurantReservationBookingsIntentResponse {INIntentResponse super;};
typedef std____1____size_type_std__allocator_char___long__true___type std____1__allocator_traits_std__allocator_char____size_type;
struct INGetAvailableRestaurantReservationBookingsIntentResponse {INIntentResponse super;};
struct INGetAvailableRestaurantReservationBookingDefaultsIntent {INIntent super;};
struct CLKComplicationTemplateGraphicRectangularStandardBody {CLKComplicationTemplate super;};
struct MTLAccelerationStructureBoundingBoxGeometryDescriptor {MTLAccelerationStructureGeometryDescriptor super;};
struct ASAccountAuthenticationModificationExtensionContext {NSExtensionContext super;};
struct CLKComplicationTemplateGraphicRectangularLargeImage {CLKComplicationTemplate super;};
struct INGetUserCurrentRestaurantReservationBookingsIntent {INIntent super;};
struct AVCaptureManualExposureBracketedStillImageSettings {AVCaptureBracketedStillImageSettings super;};
struct CLKComplicationTemplateGraphicRectangularFullImage {CLKComplicationTemplate super;};
struct CLKComplicationTemplateGraphicRectangularTextGauge {CLKComplicationTemplate super;};
struct MTLAccelerationStructureTriangleGeometryDescriptor {MTLAccelerationStructureGeometryDescriptor super;};
struct CLKComplicationTemplateGraphicCornerCircularImage {CLKComplicationTemplate super;};
struct INGetAvailableRestaurantReservationBookingsIntent {INIntent super;};
struct INTemporalEventTriggerTypeOptionsResolutionResult {INIntentResolutionResult super;};
struct __Request__task_register_dyld_get_process_state_t {mach_msg_header_t Head;};
struct AVCaptureAutoExposureBracketedStillImageSettings {AVCaptureBracketedStillImageSettings super;};
struct CLKComplicationTemplateGraphicExtraLargeCircular {CLKComplicationTemplate super;};
struct CLKComplicationTemplateUtilitarianSmallRingImage {CLKComplicationTemplate super;};
typedef std____1____libcpp_condvar_t *std____1__condition_variable__native_handle_type;
struct CLKComplicationTemplateCircularSmallSimpleImage {CLKComplicationTemplate super;};
struct CLKComplicationTemplateGraphicBezelCircularText {CLKComplicationTemplate super;};
struct CLKComplicationTemplateModularLargeStandardBody {CLKComplicationTemplate super;};
struct CLKComplicationTemplateUtilitarianSmallRingText {CLKComplicationTemplate super;};
struct CLKComplicationTemplateCircularSmallSimpleText {CLKComplicationTemplate super;};
struct CLKComplicationTemplateCircularSmallStackImage {CLKComplicationTemplate super;};
struct CLKComplicationTemplateGraphicCornerGaugeImage {CLKComplicationTemplate super;};
struct CLKComplicationTemplateModularSmallColumnsText {CLKComplicationTemplate super;};
struct CLKComplicationTemplateModularSmallSimpleImage {CLKComplicationTemplate super;};
struct AVMutableAssetDownloadStorageManagementPolicy {AVAssetDownloadStorageManagementPolicy super;};
struct CLKComplicationTemplateCircularSmallRingImage {CLKComplicationTemplate super;};
struct CLKComplicationTemplateCircularSmallStackText {CLKComplicationTemplate super;};
struct CLKComplicationTemplateGraphicCornerGaugeText {CLKComplicationTemplate super;};
struct CLKComplicationTemplateGraphicCornerStackText {CLKComplicationTemplate super;};
struct CLKComplicationTemplateGraphicCornerTextImage {CLKComplicationTemplate super;};
struct CLKComplicationTemplateModularSmallSimpleText {CLKComplicationTemplate super;};
struct CLKComplicationTemplateModularSmallStackImage {CLKComplicationTemplate super;};
struct CLKComplicationTemplateUtilitarianSmallSquare {CLKComplicationTemplate super;};
struct PKIssuerProvisioningExtensionPaymentPassEntry {PKIssuerProvisioningExtensionPassEntry super;};
struct UICollectionViewFlowLayoutInvalidationContext {UICollectionViewLayoutInvalidationContext super;};
struct __Request__host_virtual_physical_table_info_t {mach_msg_header_t Head;};
typedef std____1____libcpp_recursive_mutex_t *std____1__recursive_mutex__native_handle_type;
struct CLKComplicationTemplateCircularSmallRingText {CLKComplicationTemplate super;};
struct CLKComplicationTemplateExtraLargeColumnsText {CLKComplicationTemplate super;};
struct CLKComplicationTemplateExtraLargeSimpleImage {CLKComplicationTemplate super;};
struct CLKComplicationTemplateModularSmallRingImage {CLKComplicationTemplate super;};
struct CLKComplicationTemplateModularSmallStackText {CLKComplicationTemplate super;};
struct __Request__host_get_multiuser_config_flags_t {mach_msg_header_t Head;};
typedef std____1__char_traits_wchar_t___int_type std____1__basic_streambuf_wchar_t___int_type;
typedef std____1__char_traits_wchar_t___int_type std____1__basic_stringbuf_wchar_t___int_type;
struct CLKComplicationTemplateExtraLargeSimpleText {CLKComplicationTemplate super;};
struct CLKComplicationTemplateExtraLargeStackImage {CLKComplicationTemplate super;};
struct CLKComplicationTemplateModularLargeTallBody {CLKComplicationTemplate super;};
struct CLKComplicationTemplateModularSmallRingText {CLKComplicationTemplate super;};
struct CLKComplicationTemplateUtilitarianLargeFlat {CLKComplicationTemplate super;};
struct CLKComplicationTemplateUtilitarianSmallFlat {CLKComplicationTemplate super;};
struct CNChangeHistoryRemoveSubgroupFromGroupEvent {CNChangeHistoryEvent super;};
struct MTLPrimitiveAccelerationStructureDescriptor {MTLAccelerationStructureDescriptor super;};
typedef mach_msg_type_number_t mach_voucher_attr_value_handle_array_size_t;
typedef std____1__allocator_traits_std__allocator_char16_t____size_type std____1__basic_string_char16_t___size_type;
typedef std____1__allocator_traits_std__allocator_char32_t____size_type std____1__basic_string_char32_t___size_type;
struct CLKComplicationTemplateExtraLargeRingImage {CLKComplicationTemplate super;};
struct CLKComplicationTemplateExtraLargeStackText {CLKComplicationTemplate super;};
struct CLKComplicationTemplateModularLargeColumns {CLKComplicationTemplate super;};
struct HMMutableCharacteristicThresholdRangeEvent {HMCharacteristicThresholdRangeEvent super;};
struct MPMusicPlayerPlayParametersQueueDescriptor {MPMusicPlayerQueueDescriptor super;};
struct MTLInstanceAccelerationStructureDescriptor {MTLAccelerationStructureDescriptor super;};
struct NFCISO15693ReadMultipleBlocksConfiguration {NFCTagCommandConfiguration super;};
typedef std____1__allocator_traits_std__allocator_wchar_t____size_type std____1__basic_string_wchar_t___size_type;
struct AVMutableVideoCompositionLayerInstruction {AVVideoCompositionLayerInstruction super;AVMutableVideoCompositionLayerInstructionInternal *_mutableLayerInstruction;};
struct CLKComplicationTemplateExtraLargeRingText {CLKComplicationTemplate super;};
struct CNChangeHistoryRemoveMemberFromGroupEvent {CNChangeHistoryEvent super;};
struct INBookRestaurantReservationIntentResponse {INIntentResponse super;};
struct INMessageAttributeOptionsResolutionResult {INIntentResolutionResult super;};
struct INSetDefrosterSettingsInCarIntentResponse {INIntentResponse super;};
struct NSPersistentCloudKitContainerEventRequest {NSPersistentStoreRequest super;};
struct TKSmartCardUserInteractionForPINOperation {TKSmartCardUserInteraction super;};
struct __Request__host_get_atm_diagnostic_flag_t {mach_msg_header_t Head;};
typedef mach_msg_type_number_t mach_voucher_attr_raw_recipe_array_size_t;
struct CLKComplicationTemplateModularLargeTable {CLKComplicationTemplate super;};
struct MDLPhysicallyPlausibleScatteringFunction {MDLScatteringFunction super;};
struct MTLRenderPassStencilAttachmentDescriptor {MTLRenderPassAttachmentDescriptor super;};
struct NSPersistentCloudKitContainerEventResult {NSPersistentStoreResult super;};
struct __Request__task_get_exc_guard_behavior_t {mach_msg_header_t Head;};
typedef std____1____bitset_0__0___size_type std____1____bitset_0__0_____storage_type;
struct AVCaptureSynchronizedMetadataObjectData {AVCaptureSynchronizedData super;AVCaptureSynchronizedMetadataObjectDataInternal *_internal;};
struct INCallRecordTypeOptionsResolutionResult {INIntentResolutionResult super;};
struct INCarAirCirculationModeResolutionResult {INIntentResolutionResult super;};
struct INPlaybackQueueLocationResolutionResult {INIntentResolutionResult super;};
struct INSetClimateSettingsInCarIntentResponse {INIntentResponse super;};
struct MPSCNNNormalizationMeanAndVarianceState {MPSState super;};
struct __Request__mach_port_space_basic_info_t {mach_msg_header_t Head;};
struct std____1__basic_string_char16_t_____raw {std____1__basic_string_char16_t___size_type __words[3];};
struct std____1__basic_string_char32_t_____raw {std____1__basic_string_char32_t___size_type __words[3];};
typedef std____1__allocator_traits_std__allocator_char____size_type std____1__basic_string_char___size_type;
struct CLKComplicationTemplateGraphicCircular {CLKComplicationTemplate super;};
struct CNChangeHistoryAddSubgroupToGroupEvent {CNChangeHistoryEvent super;};
struct INGetCarPowerLevelStatusIntentResponse {INIntentResponse super;};
struct INSearchForNotebookItemsIntentResponse {INIntentResponse super;};
struct INSendMessageRecipientResolutionResult {INPersonResolutionResult super;};
struct INTemporalEventTriggerResolutionResult {INIntentResolutionResult super;};
struct MPSCNNConvolutionWeightsAndBiasesState {MPSState super;};
struct MTLRenderPassColorAttachmentDescriptor {MTLRenderPassAttachmentDescriptor super;};
struct MTLRenderPassDepthAttachmentDescriptor {MTLRenderPassAttachmentDescriptor super;};
struct UIWindowSceneDestructionRequestOptions {UISceneDestructionRequestOptions super;};
struct __Request__host_check_multiuser_mode_t {mach_msg_header_t Head;};
struct __Request__processor_set_stack_usage_t {mach_msg_header_t Head;};
struct __Request__task_get_dyld_image_infos_t {mach_msg_header_t Head;};
struct __Request__task_get_emulation_vector_t {mach_msg_header_t Head;};
struct std____1__basic_string_wchar_t_____raw {std____1__basic_string_wchar_t___size_type __words[3];};
struct AVCaptureSynchronizedSampleBufferData {AVCaptureSynchronizedData super;AVCaptureSynchronizedSampleBufferDataInternal *_internal;};
struct INCallDestinationTypeResolutionResult {INIntentResolutionResult super;};
struct INDateComponentsRangeResolutionResult {INIntentResolutionResult super;};
struct INGetReservationDetailsIntentResponse {INIntentResponse super;};
struct INOutgoingMessageTypeResolutionResult {INIntentResolutionResult super;};
struct INRequestPaymentPayerResolutionResult {INPersonResolutionResult super;};
struct INSpatialEventTriggerResolutionResult {INIntentResolutionResult super;};
struct INWorkoutGoalUnitTypeResolutionResult {INIntentResolutionResult super;};
struct INWorkoutLocationTypeResolutionResult {INIntentResolutionResult super;};
struct MPMusicPlayerMediaItemQueueDescriptor {MPMusicPlayerQueueDescriptor super;};
struct NFCISO15693CustomCommandConfiguration {NFCTagCommandConfiguration super;};
struct PKPaymentRequestShippingContactUpdate {PKPaymentRequestUpdate super;};
struct SFSpeechAudioBufferRecognitionRequest {SFSpeechRecognitionRequest super;};
struct __Request__processor_get_assignment_t {mach_msg_header_t Head;};
struct ASCredentialProviderExtensionContext {NSExtensionContext super;};
struct AVMutableVideoCompositionInstruction {AVVideoCompositionInstruction super;AVMutableVideoCompositionInstructionInternal *_mutableInstruction;};
struct CNChangeHistoryAddMemberToGroupEvent {CNChangeHistoryEvent super;};
struct INLocationSearchTypeResolutionResult {INIntentResolutionResult super;};
struct INPlaybackRepeatModeResolutionResult {INIntentResolutionResult super;};
struct INSetSeatSettingsInCarIntentResponse {INIntentResponse super;};
struct MPChangePlaybackPositionCommandEvent {MPRemoteCommandEvent super;};
struct MPSCNNDepthWiseConvolutionDescriptor {MPSCNNConvolutionDescriptor super;};
struct MPSCNNNormalizationGammaAndBetaState {MPSState super;};
struct NSSecureUnarchiveFromDataTransformer {NSValueTransformer super;};
struct PKPaymentRequestShippingMethodUpdate {PKPaymentRequestUpdate super;};
struct AVAssetReaderVideoCompositionOutput {AVAssetReaderOutput super;AVAssetReaderVideoCompositionOutputInternal *_videoCompositionOutputInternal;};
struct AVMetadataMachineReadableCodeObject {AVMetadataObject super;AVMetadataMachineReadableCodeObjectInternal *_internal;};
struct CPTemplateApplicationDashboardScene {UIScene super;};
struct INMediaAffinityTypeResolutionResult {INIntentResolutionResult super;};
struct INRelativeReferenceResolutionResult {INIntentResolutionResult super;};
struct INSetAudioSourceInCarIntentResponse {INIntentResponse super;};
struct INSetMessageAttributeIntentResponse {INIntentResponse super;};
struct INUpdateMediaAffinityIntentResponse {INIntentResponse super;};
struct MPMusicPlayerControllerMutableQueue {MPMusicPlayerControllerQueue super;};
struct MPSCNNSubPixelConvolutionDescriptor {MPSCNNConvolutionDescriptor super;};
struct NSCollectionLayoutSupplementaryItem {NSCollectionLayoutItem super;};
struct NSPersistentStoreAsynchronousResult {NSPersistentStoreResult super;};
struct PKPaymentRequestPaymentMethodUpdate {PKPaymentRequestUpdate super;};
struct UICollectionViewCompositionalLayout {UICollectionViewLayout super;};
typedef mach_msg_type_number_t mach_voucher_attr_raw_recipe_size_t;
struct std____1__basic_string_char_____raw {std____1__basic_string_char___size_type __words[3];};
typedef std____1____libcpp_mutex_t *std____1__mutex__native_handle_type;
struct AROrientationTrackingConfiguration {ARConfiguration super;};
struct AVAssetReaderSampleReferenceOutput {AVAssetReaderOutput super;AVAssetReaderSampleReferenceOutputInternal *_sampleReferenceOutputInternal;};
struct CNChangeHistoryDropEverythingEvent {CNChangeHistoryEvent super;};
struct INCarSignalOptionsResolutionResult {INIntentResolutionResult super;};
struct INGetRestaurantGuestIntentResponse {INIntentResponse super;};
struct INMediaDestinationResolutionResult {INIntentResolutionResult super;};
struct INMessageAttributeResolutionResult {INIntentResolutionResult super;};
struct INNotebookItemTypeResolutionResult {INIntentResolutionResult super;};
struct INRestaurantReservationUserBooking {INRestaurantReservationBooking super;};
struct INSendPaymentPayeeResolutionResult {INPersonResolutionResult super;};
struct INStartCallContactResolutionResult {INPersonResolutionResult super;};
struct INStartPhotoPlaybackIntentResponse {INIntentResponse super;};
struct MPChangeLanguageOptionCommandEvent {MPRemoteCommandEvent super;};
struct MPMusicPlayerApplicationController {MPMusicPlayerController super;};
struct UICellAccessoryDisclosureIndicator {UICellAccessory super;};
struct UICollectionViewFocusUpdateContext {UIFocusUpdateContext super;};
struct __Request__processor_set_default_t {mach_msg_header_t Head;};
struct __Request__processor_set_destroy_t {mach_msg_header_t Head;};
struct __Request__processor_set_threads_t {mach_msg_header_t Head;};
struct __Request__thread_assign_default_t {mach_msg_header_t Head;};
struct __Request__thread_get_assignment_t {mach_msg_header_t Head;};
struct ARPositionalTrackingConfiguration {ARConfiguration super;};
struct CNChangeHistoryDeleteContactEvent {CNChangeHistoryEvent super;};
struct CNChangeHistoryUpdateContactEvent {CNChangeHistoryEvent super;};
struct INActivateCarSignalIntentResponse {INIntentResponse super;};
struct INBookRestaurantReservationIntent {INIntent super;};
struct INDeleteTasksTaskResolutionResult {INTaskResolutionResult super;};
struct INNoteContentTypeResolutionResult {INIntentResolutionResult super;};
struct INRelativeSettingResolutionResult {INIntentResolutionResult super;};
struct INRestaurantGuestResolutionResult {INIntentResolutionResult super;};
struct INSearchCallHistoryIntentResponse {INIntentResponse super;};
struct INSearchForAccountsIntentResponse {INIntentResponse super;};
struct INSearchForMessagesIntentResponse {INIntentResponse super;};
struct INSetDefrosterSettingsInCarIntent {INIntent super;};
struct INSnoozeTasksTaskResolutionResult {INTaskResolutionResult super;};
struct INSpeakableStringResolutionResult {INIntentResolutionResult super;};
struct MPMusicPlayerStoreQueueDescriptor {MPMusicPlayerQueueDescriptor super;};
struct MTLIntersectionFunctionDescriptor {MTLFunctionDescriptor super;};
struct NETransparentProxyNetworkSettings {NETunnelNetworkSettings super;};
struct NSUnitElectricPotentialDifference {NSDimension super;};
struct UIMutableUserNotificationCategory {UIUserNotificationCategory super;};
struct UNTimeIntervalNotificationTrigger {UNNotificationTrigger super;};
struct __Request__mach_port_space_info_t {mach_msg_header_t Head;};
struct __Request__processor_set_create_t {mach_msg_header_t Head;};
struct __Request__task_generate_corpse_t {mach_msg_header_t Head;};
struct __Request__thread_depress_abort_t {mach_msg_header_t Head;};
struct __Request__vm_map_exec_lockdown_t {mach_msg_header_t Head;};
struct __Request__vm_mapped_pages_info_t {mach_msg_header_t Head;};
struct AVMutableAudioMixInputParameters {AVAudioMixInputParameters super;AVMutableAudioMixInputParametersInternal *_mutableInputParameters;};
struct GKLinearCongruentialRandomSource {GKRandomSource super;};
struct INCallCapabilityResolutionResult {INIntentResolutionResult super;};
struct INCallRecordTypeResolutionResult {INIntentResolutionResult super;};
struct INCarAudioSourceResolutionResult {INIntentResolutionResult super;};
struct INCurrencyAmountResolutionResult {INIntentResolutionResult super;};
struct INDateComponentsResolutionResult {INIntentResolutionResult super;};
struct INDateSearchTypeResolutionResult {INIntentResolutionResult super;};
struct INGetCarLockStatusIntentResponse {INIntentResponse super;};
struct INPaymentAccountResolutionResult {INIntentResolutionResult super;};
struct INSaveProfileInCarIntentResponse {INIntentResponse super;};
struct INSendRideFeedbackIntentResponse {INIntentResponse super;};
struct INSetCarLockStatusIntentResponse {INIntentResponse super;};
struct INSetTaskAttributeIntentResponse {INIntentResponse super;};
struct INVisualCodeTypeResolutionResult {INIntentResolutionResult super;};
struct MPChangePlaybackRateCommandEvent {MPRemoteCommandEvent super;};
struct NEOnDemandRuleEvaluateConnection {NEOnDemandRule super;};
struct NSCollectionLayoutDecorationItem {NSCollectionLayoutItem super;};
struct NSPersistentHistoryChangeRequest {NSPersistentStoreRequest super;};
struct TKTokenSmartCardPINAuthOperation {TKTokenAuthOperation super;};
struct UICellAccessoryOutlineDisclosure {UICellAccessory super;};
struct UICollectionViewTransitionLayout {UICollectionViewLayout super;};
struct UIMutableApplicationShortcutItem {UIApplicationShortcutItem super;};
struct __Request__host_kernel_version_t {mach_msg_header_t Head;};
struct __Request__host_lockgroup_info_t {mach_msg_header_t Head;};
struct __Request__host_processor_sets_t {mach_msg_header_t Head;};
struct __Request__processor_set_tasks_t {mach_msg_header_t Head;};
struct __Request__task_get_assignment_t {mach_msg_header_t Head;};
struct __Request__thread_abort_safely_t {mach_msg_header_t Head;};
struct CNChangeHistoryDeleteGroupEvent {CNChangeHistoryEvent super;};
struct CNChangeHistoryUpdateGroupEvent {CNChangeHistoryEvent super;};
struct CXCallDirectoryExtensionContext {NSExtensionContext super;};
struct INDailyRoutineRelevanceProvider {INRelevanceProvider super;};
struct INListRideOptionsIntentResponse {INIntentResponse super;};
struct INPaymentAmountResolutionResult {INIntentResolutionResult super;};
struct INPaymentMethodResolutionResult {INIntentResolutionResult super;};
struct INPaymentStatusResolutionResult {INIntentResolutionResult super;};
struct INSearchForPhotosIntentResponse {INIntentResponse super;};
struct INSetClimateSettingsInCarIntent {INIntent super;};
struct INSetProfileInCarIntentResponse {INIntentResponse super;};
struct INSetRadioStationIntentResponse {INIntentResponse super;};
struct MPChangePlaybackPositionCommand {MPRemoteCommand super;};
struct MPChangeShuffleModeCommandEvent {MPRemoteCommandEvent super;};
struct MPSCNNInstanceNormalizationNode {MPSNNFilterNode super;};
struct UICollectionViewDropPlaceholder {UICollectionViewPlaceholder super;};
struct UIMutableUserNotificationAction {UIUserNotificationAction super;};
struct UINotificationFeedbackGenerator {UIFeedbackGenerator super;};
struct UIPopoverPresentationController {UIPresentationController super;};
struct UNTextInputNotificationResponse {UNNotificationResponse super;};
struct VNCoreMLFeatureValueObservation {VNObservation super;};
struct __Request__host_get_UNDServer_t {mach_msg_header_t Head;};
struct __Request__host_get_boot_info_t {mach_msg_header_t Head;};
struct __Request__host_get_io_master_t {mach_msg_header_t Head;};
struct __Request__task_purgable_info_t {mach_msg_header_t Head;};
struct mach_msg_ool_ports_descriptor_t {void *address;int deallocate : 8;unsigned int copy : 8;unsigned int disposition : 8;unsigned int type : 8;mach_msg_size_t count;};
typedef mach_msg_type_number_t mach_voucher_attr_recipe_size_t;
struct ASAuthorizationPasswordRequest {ASAuthorizationRequest super;};
struct AVCaptureSynchronizedDepthData {AVCaptureSynchronizedData super;AVCaptureSynchronizedDepthDataInternal *_internal;};
struct AVPersistableContentKeyRequest {AVContentKeyRequest super;};
struct CLSProgressReportingCapability {CLSObject super;};
struct CNChangeHistoryAddContactEvent {CNChangeHistoryEvent super;};
struct CPNowPlayingAddToLibraryButton {CPNowPlayingButton super;};
struct CPNowPlayingPlaybackRateButton {CPNowPlayingButton super;};
struct INCarDefrosterResolutionResult {INIntentResolutionResult super;};
struct INCreateTaskListIntentResponse {INIntentResponse super;};
struct INGetCarPowerLevelStatusIntent {INIntent super;};
struct INRequestPaymentIntentResponse {INIntentResponse super;};
struct INSearchForBillsIntentResponse {INIntentResponse super;};
struct INSearchForMediaIntentResponse {INIntentResponse super;};
struct INSearchForNotebookItemsIntent {INIntent super;};
struct INStartAudioCallIntentResponse {INIntentResponse super;};
struct INStartVideoCallIntentResponse {INIntentResponse super;};
struct INTaskPriorityResolutionResult {INIntentResolutionResult super;};
struct INTimeIntervalResolutionResult {INIntentResolutionResult super;};
struct MPChangeRepeatModeCommandEvent {MPRemoteCommandEvent super;};
struct MPSNNGramMatrixCalculationNode {MPSNNFilterNode super;};
struct MPSNNMultiaryGradientStateNode {MPSNNStateNode super;};
struct MXDiskWriteExceptionDiagnostic {MXDiagnostic super;};
struct PHAssetCollectionChangeRequest {PHChangeRequest super;};
struct UIGraphicsImageRendererContext {UIGraphicsRendererContext super;};
struct __Request__mach_ports_lookup_t {mach_msg_header_t Head;};
struct ARObjectScanningConfiguration {ARConfiguration super;};
struct AVCapturePhotoBracketSettings {AVCapturePhotoSettings super;AVCapturePhotoBracketSettingsInternal *_bracketSettingsInternal;};
struct GKMersenneTwisterRandomSource {GKRandomSource super;};
struct HMNetworkConfigurationProfile {HMAccessoryProfile super;};
struct INAccountTypeResolutionResult {INIntentResolutionResult super;};
struct INBalanceTypeResolutionResult {INIntentResolutionResult super;};
struct INCancelWorkoutIntentResponse {INIntentResponse super;};
struct INGetReservationDetailsIntent {INIntent super;};
struct INGetRideStatusIntentResponse {INIntentResponse super;};
struct INGetVisualCodeIntentResponse {INIntentResponse super;};
struct INNoteContentResolutionResult {INIntentResolutionResult super;};
struct INResumeWorkoutIntentResponse {INIntentResponse super;};
struct INTemperatureResolutionResult {INIntentResolutionResult super;};
struct INTransferMoneyIntentResponse {INIntentResponse super;};
struct MLCInstanceNormalizationLayer {MLCLayer super;};
struct NEPacketTunnelNetworkSettings {NETunnelNetworkSettings super;};
struct NSPersistentCloudKitContainer {NSPersistentContainer super;};
struct PHCollectionListChangeRequest {PHChangeRequest super;};
struct SFSpeechURLRecognitionRequest {SFSpeechRecognitionRequest super;};
struct SKOverlayAppClipConfiguration {SKOverlayConfiguration super;};
struct UIGraphicsImageRendererFormat {UIGraphicsRendererFormat super;};
struct UITableViewFocusUpdateContext {UIFocusUpdateContext super;};
struct UNCalendarNotificationTrigger {UNNotificationTrigger super;};
struct UNLocationNotificationTrigger {UNNotificationTrigger super;};
struct UNTextInputNotificationAction {UNNotificationAction super;};
struct VNRecognizedPointsObservation {VNObservation super;};
struct __Request__mach_memory_info_t {mach_msg_header_t Head;};
struct __Request__thread_terminate_t {mach_msg_header_t Head;};
struct quadrature_integrate_function {quadrature_function_array fun;void *fun_arg;};
struct ARImageTrackingConfiguration {ARConfiguration super;};
struct ARWorldTrackingConfiguration {ARConfiguration super;};
struct ASAuthorizationOpenIDRequest {ASAuthorizationRequest super;};
struct AVAggregateAssetDownloadTask {NSURLSessionTask super;};
struct CAInterAppAudioTransportView {UIView super;};
struct CLKTimeIntervalGaugeProvider {CLKGaugeProvider super;};
struct CNChangeHistoryAddGroupEvent {CNChangeHistoryEvent super;};
struct HMMutableCharacteristicEvent {HMCharacteristicEvent super;};
struct INAppendToNoteIntentResponse {INIntentResponse super;};
struct INCallRecordResolutionResult {INIntentResolutionResult super;};
struct INPauseWorkoutIntentResponse {INIntentResponse super;};
struct INRestaurantResolutionResult {INIntentResolutionResult super;};
struct INSetSeatSettingsInCarIntent {INIntent super;};
struct INStartWorkoutIntentResponse {INIntentResponse super;};
struct INTaskStatusResolutionResult {INIntentResolutionResult super;};
struct MPSCNNBatchNormalizationNode {MPSNNFilterNode super;};
struct MPSCNNGroupNormalizationNode {MPSNNFilterNode super;};
struct MPSCNNUpsamplingBilinearNode {MPSNNFilterNode super;};
struct MPSNNBinaryGradientStateNode {MPSNNStateNode super;};
struct NSFetchedPropertyDescription {NSPropertyDescription super;};
struct TKTokenPasswordAuthOperation {TKTokenAuthOperation super;};
struct UICollectionViewDropProposal {UIDropProposal super;};
struct UIGraphicsPDFRendererContext {UIGraphicsRendererContext super;};
struct UILongPressGestureRecognizer {UIGestureRecognizer super;};
struct UISelectionFeedbackGenerator {UIFeedbackGenerator super;};
struct UNMutableNotificationContent {UNNotificationContent super;};
struct __Request___host_page_size_t {mach_msg_header_t Head;};
struct __Request__host_processors_t {mach_msg_header_t Head;};
struct __Request__mach_port_names_t {mach_msg_header_t Head;};
struct __Request__processor_start_t {mach_msg_header_t Head;};
typedef processor_set_t processor_set_control_port_t;
struct ARBodyTrackingConfiguration {ARConfiguration super;};
struct ARFaceTrackingConfiguration {ARConfiguration super;};
struct AVAssetReaderAudioMixOutput {AVAssetReaderOutput super;AVAssetReaderAudioMixOutputInternal *_audioMixOutputInternal;};
struct AVCaptureAudioPreviewOutput {AVCaptureOutput super;AVCaptureAudioPreviewOutputInternal *_internal;};
struct CAInterAppAudioSwitcherView {UIView super;};
struct CLKRelativeDateTextProvider {CLKTextProvider super;};
struct CLKTimeIntervalTextProvider {CLKTextProvider super;};
struct CMRecordedAccelerometerData {CMAccelerometerData super;};
struct CNChangeHistoryFetchRequest {CNFetchRequest super;};
struct HMCharacteristicWriteAction {HMAction super;};
struct INBillPayeeResolutionResult {INIntentResolutionResult super;};
struct INDeleteTasksIntentResponse {INIntentResponse super;};
struct INLocationRelevanceProvider {INRelevanceProvider super;};
struct INMediaItemResolutionResult {INIntentResolutionResult super;};
struct INPlacemarkResolutionResult {INIntentResolutionResult super;};
struct INRadioTypeResolutionResult {INIntentResolutionResult super;};
struct INRequestRideIntentResponse {INIntentResponse super;};
struct INSendMessageIntentResponse {INIntentResponse super;};
struct INSendPaymentIntentResponse {INIntentResponse super;};
struct INSetAudioSourceInCarIntent {INIntent super;};
struct INSetMessageAttributeIntent {INIntent super;};
struct INSnoozeTasksIntentResponse {INIntentResponse super;};
struct INUpdateMediaAffinityIntent {INIntent super;};
struct MDLPhysicallyPlausibleLight {MDLLight super;};
struct MPChangePlaybackRateCommand {MPRemoteCommand super;};
struct MPSCNNDilatedPoolingMaxNode {MPSNNFilterNode super;};
struct MPSCNNUpsamplingNearestNode {MPSNNFilterNode super;};
struct MPSImageNormalizedHistogram {MPSKernel super;};
struct MXUnitAveragePixelLuminance {NSDimension super;};
struct NSRelativeDateTimeFormatter {NSFormatter super;};
struct RPSystemBroadcastPickerView {UIView super;};
struct UIGraphicsPDFRendererFormat {UIGraphicsRendererFormat super;};
struct UIInterpolatingMotionEffect {UIMotionEffect super;};
struct UIRotationGestureRecognizer {UIGestureRecognizer super;};
struct UITableViewHeaderFooterView {UIView super;};
struct VNClassificationObservation {VNObservation super;};
struct VNDetectedObjectObservation {VNObservation super;};
struct VNImageAlignmentObservation {VNObservation super;};
struct __Request__clock_get_time_t {mach_msg_header_t Head;};
struct __Request__mach_zone_info_t {mach_msg_header_t Head;};
struct __Request__processor_exit_t {mach_msg_header_t Head;};
struct __Request__task_terminate_t {mach_msg_header_t Head;};
struct __Request__task_zone_info_t {mach_msg_header_t Head;};
struct __Request__thread_suspend_t {mach_msg_header_t Head;};
struct std____1__ios_base__failure { std____1__system_error cppsuper0;};
struct ARDirectionalLightEstimate {ARLightEstimate super;};
struct ARGeoTrackingConfiguration {ARConfiguration super;};
struct AVPlayerItemMetadataOutput {AVPlayerItemOutput super;AVPlayerItemMetadataOutputInternal *_metadataOutputInternal;};
struct CPTemplateApplicationScene {UIScene super;};
struct FPUIActionExtensionContext {NSExtensionContext super;};
struct INBillTypeResolutionResult {INIntentResolutionResult super;};
struct INCancelRideIntentResponse {INIntentResponse super;};
struct INCreateNoteIntentResponse {INIntentResponse super;};
struct INEndWorkoutIntentResponse {INIntentResponse super;};
struct INGetRestaurantGuestIntent {INIntent super;};
struct INStartPhotoPlaybackIntent {INIntent super;};
struct INTaskListResolutionResult {INIntentResolutionResult super;};
struct INTicketedEventReservation {INReservation super;};
struct MDLAnimatedQuaternionArray {MDLAnimatedValue super;};
struct MLCBatchNormalizationLayer {MLCLayer super;};
struct MLCGroupNormalizationLayer {MLCLayer super;};
struct MLCLayerNormalizationLayer {MLCLayer super;};
struct MLCMultiheadAttentionLayer {MLCLayer super;};
struct MPChangeShuffleModeCommand {MPRemoteCommand super;};
struct MPSNNMultiaryGradientState {MPSState super;};
struct MPSRNNMatrixInferenceLayer {MPSKernel super;};
struct MPSRNNRecurrentMatrixState {MPSState super;};
struct MPSRNNSingleGateDescriptor {MPSRNNDescriptor super;};
struct MPSkipIntervalCommandEvent {MPRemoteCommandEvent super;};
struct NEDNSProxyProviderProtocol {NEVPNProtocol super;};
struct NEFilterRemediationVerdict {NEFilterVerdict super;};
struct NSAsynchronousFetchRequest {NSPersistentStoreRequest super;};
struct SCNAvoidOccluderConstraint {SCNConstraint super;};
struct TKTokenKeychainCertificate {TKTokenKeychainItem super;};
struct UICellAccessoryMultiselect {UICellAccessory super;};
struct UICollectionViewFlowLayout {UICollectionViewLayout super;};
struct UIImageSymbolConfiguration {UIImageConfiguration super;};
struct UIMarkupTextPrintFormatter {UIPrintFormatter super;};
struct UISimpleTextPrintFormatter {UIPrintFormatter super;};
struct UITableViewDropPlaceholder {UITableViewPlaceholder super;};
struct __Request__kmod_get_info_t {mach_msg_header_t Head;};
struct __Request__task_suspend2_t {mach_msg_header_t Head;};
struct __Request__thread_create_t {mach_msg_header_t Head;};
struct __Request__thread_resume_t {mach_msg_header_t Head;};
typedef processor_set_t *processor_set_name_array_t;
struct AVAssetDownloadURLSession {NSURLSession super;};
struct AVAudioUnitMIDIInstrument {AVAudioUnit super;};
struct AVCaptureStillImageOutput {AVCaptureOutput super;AVCaptureStillImageOutputInternal *_internal;};
struct AVMutableVideoComposition {AVVideoComposition super;AVMutableVideoCompositionInternal *_mutableVideoComposition;};
struct AVPlayerItemLegibleOutput {AVPlayerItemOutput super;AVPlayerItemLegibleOutputInternal *_legibleOutputInternal;};
struct CPContactDirectionsButton {CPButton super;};
struct CPMessageComposeBarButton {CPBarButton super;};
struct CPNowPlayingShuffleButton {CPNowPlayingButton super;};
struct CPPointOfInterestTemplate {CPTemplate super;};
struct GCExtendedGamepadSnapshot {GCExtendedGamepad super;};
struct GKCheckerboardNoiseSource {GKNoiseSource super;};
struct INActivateCarSignalIntent {INIntent super;};
struct INBooleanResolutionResult {INIntentResolutionResult super;};
struct INCarSeatResolutionResult {INIntentResolutionResult super;};
struct INIntegerResolutionResult {INIntentResolutionResult super;};
struct INPlayMediaIntentResponse {INIntentResponse super;};
struct INSearchCallHistoryIntent {INIntent super;};
struct INSearchForAccountsIntent {INIntent super;};
struct INSearchForMessagesIntent {INIntent super;};
struct INStartCallIntentResponse {INIntentResponse super;};
struct MPChangeRepeatModeCommand {MPRemoteCommand super;};
struct MPSNNBinaryArithmeticNode {MPSNNFilterNode super;};
struct MPSRNNMatrixTrainingLayer {MPSKernel super;};
struct MPSRNNMatrixTrainingState {MPSState super;};
struct MPSRNNRecurrentImageState {MPSState super;};
struct MXAppResponsivenessMetric {MXMetric super;};
struct MXCellularConditionMetric {MXMetric super;};
struct NETransparentProxyManager {NEVPNManager super;};
struct NINearbyPeerConfiguration {NIConfiguration super;};
struct NSAsynchronousFetchResult {NSPersistentStoreAsynchronousResult super;};
struct NSMutableAttributedString {NSAttributedString super;};
struct NSPersistentHistoryResult {NSPersistentStoreResult super;};
struct NSRelationshipDescription {NSPropertyDescription super;};
struct NSURLSessionWebSocketTask {NSURLSessionTask super;};
struct PHEditingExtensionContext {NSExtensionContext super;};
struct RPBroadcastMP4ClipHandler {RPBroadcastHandler super;};
struct SCNAccelerationConstraint {SCNConstraint super;};
struct SCNPhysicsBallSocketJoint {SCNPhysicsBehavior super;};
struct SKOverlayAppConfiguration {SKOverlayConfiguration super;};
struct UICellAccessoryCustomView {UICellAccessory super;};
struct UIImpactFeedbackGenerator {UIFeedbackGenerator super;};
struct UINavigationBarAppearance {UIBarAppearance super;};
struct UNPushNotificationTrigger {UNNotificationTrigger super;};
struct VNFeaturePrintObservation {VNObservation super;};
struct __Request__task_resume2_t {mach_msg_header_t Head;};
struct __Request__task_suspend_t {mach_msg_header_t Head;};
struct __Request__task_threads_t {mach_msg_header_t Head;};
struct __Request__thread_abort_t {mach_msg_header_t Head;};
typedef exception_handler_t *exception_handler_array_t;
struct mach_msg_ool_descriptor_t {void *address;int deallocate : 8;unsigned int copy : 8;unsigned int pad1 : 8;unsigned int type : 8;mach_msg_size_t size;};
typedef processor_set_t processor_set_name_port_t;
struct AREnvironmentProbeAnchor {ARAnchor super;};
struct AVAssetReaderTrackOutput {AVAssetReaderOutput super;AVAssetReaderTrackOutputInternal *_trackOutputInternal;};
struct AVCaptureAudioDataOutput {AVCaptureOutput super;AVCaptureAudioDataOutputInternal *_internal;};
struct AVCaptureDepthDataOutput {AVCaptureOutput super;AVCaptureDepthDataOutputInternal *_internal;};
struct AVCaptureMultiCamSession {AVCaptureSession super;};
struct AVCaptureVideoDataOutput {AVCaptureOutput super;AVCaptureVideoDataOutputInternal *_internal;};
struct AVDateRangeMetadataGroup {AVMetadataGroup super;AVDateRangeMetadataGroupInternal *_priv;};
struct CKRecordZoneNotification {CKNotification super;};
struct CKRecordZoneSubscription {CKSubscription super;};
struct CNPostalAddressFormatter {NSFormatter super;};
struct CPNowPlayingRepeatButton {CPNowPlayingButton super;};
struct GCControllerDirectionPad {GCControllerElement super;};
struct HKHeartbeatSeriesBuilder {HKSeriesBuilder super;};
struct INAddMediaIntentResponse {INIntentResponse super;};
struct INAddTasksIntentResponse {INIntentResponse super;};
struct INDoubleResolutionResult {INIntentResolutionResult super;};
struct INEnergyResolutionResult {INIntentResolutionResult super;};
struct INGetCarLockStatusIntent {INIntent super;};
struct INListCarsIntentResponse {INIntentResponse super;};
struct INSaveProfileInCarIntent {INIntent super;};
struct INSendRideFeedbackIntent {INIntent super;};
struct INSetCarLockStatusIntent {INIntent super;};
struct INSetTaskAttributeIntent {INIntent super;};
struct MDLMaterialPropertyGraph {MDLMaterialPropertyNode super;};
struct MPMediaPropertyPredicate {MPMediaPredicate super;};
struct MPSAccelerationStructure {MPSKernel super;};
struct MPSNNBinaryGradientState {MPSState super;};
struct MPSNNInitialGradientNode {MPSNNFilterNode super;};
struct MXCPUExceptionDiagnostic {MXDiagnostic super;};
struct MXLocationActivityMetric {MXMetric super;};
struct NEOnDemandRuleDisconnect {NEOnDemandRule super;};
struct NETunnelProviderProtocol {NEVPNProtocol super;};
struct NFCISO15693ReaderSession {NFCReaderSession super;};
struct NSURLSessionDownloadTask {NSURLSessionTask super;};
struct NSUnitElectricResistance {NSDimension super;};
struct NSUnitInformationStorage {NSDimension super;};
struct NWBonjourServiceEndpoint {NWEndpoint super;};
struct RPBroadcastSampleHandler {RPBroadcastHandler super;};
struct SCNPhysicsConeTwistJoint {SCNPhysicsBehavior super;};
struct UICellAccessoryCheckmark {UICellAccessory super;};
struct UICellConfigurationState {UIViewConfigurationState super;};
struct UICollectionReusableView {UIView super;};
struct UIHoverGestureRecognizer {UIGestureRecognizer super;};
struct UIPinchGestureRecognizer {UIGestureRecognizer super;};
struct UIPointerHighlightEffect {UIPointerEffect super;};
struct UIStoryboardPopoverSegue {UIStoryboardSegue super;};
struct UISwipeGestureRecognizer {UIGestureRecognizer super;};
struct VNPixelBufferObservation {VNObservation super;};
struct __Request__task_resume_t {mach_msg_header_t Head;};
struct dns_in6_address_record_t {in6_addr addr;};
struct AVAssetWriterInputGroup {AVMediaSelectionGroup super;AVAssetWriterInputGroupInternal *_internal;};
struct AVAudioCompressedBuffer {AVAudioBuffer super;};
struct AVCaptureMetadataOutput {AVCaptureOutput super;AVCaptureMetadataOutputInternal *_internal;};
struct AVMetadataSalientObject {AVMetadataObject super;};
struct AVMutableMediaSelection {AVMediaSelection super;};
struct AVPlayerItemVideoOutput {AVPlayerItemOutput super;AVPlayerItemVideoOutputInternal *_videoOutputInternal;};
struct BGAppRefreshTaskRequest {BGTaskRequest super;};
struct BGProcessingTaskRequest {BGTaskRequest super;};
struct CPNowPlayingImageButton {CPNowPlayingButton super;};
struct GCControllerButtonInput {GCControllerElement super;};
struct HKElectrocardiogramType {HKSampleType super;};
struct HMCameraSettingsControl {HMCameraControl super;};
struct HMCameraSnapshotControl {HMCameraControl super;};
struct INDateRelevanceProvider {INRelevanceProvider super;};
struct INListRideOptionsIntent {INIntent super;};
struct INPayBillIntentResponse {INIntentResponse super;};
struct INRestaurantReservation {INReservation super;};
struct INSearchForPhotosIntent {INIntent super;};
struct INSetProfileInCarIntent {INIntent super;};
struct INSetRadioStationIntent {INIntent super;};
struct MDLAnimatedVector3Array {MDLAnimatedValue super;};
struct MDLPackedJointAnimation {MDLObject super;};
struct MPSCNNNormalizationNode {MPSNNFilterNode super;};
struct MPSMatrixMultiplication {MPSKernel super;};
struct MPSNDArrayGradientState {MPSState super;};
struct MPSNNGradientFilterNode {MPSNNFilterNode super;};
struct MPSNNMultiplicationNode {MPSNNBinaryArithmeticNode super;};
struct MPSNNUnaryReductionNode {MPSNNFilterNode super;};
struct MSMessageTemplateLayout {MSMessageLayout super;};
struct MXNetworkTransferMetric {MXMetric super;};
struct NETunnelProviderManager {NEVPNManager super;};
struct NETunnelProviderSession {NEVPNConnection super;};
struct NSCollectionLayoutGroup {NSCollectionLayoutItem super;};
struct NSExpressionDescription {NSPropertyDescription super;};
struct NSMutableParagraphStyle {NSParagraphStyle super;};
struct NSUnitConcentrationMass {NSDimension super;};
struct SCNReplicatorConstraint {SCNConstraint super;};
struct TKSmartCardTokenSession {TKTokenSession super;};
struct UIActivityIndicatorView {UIView super;};
struct UIDragPreviewParameters {UIPreviewParameters super;};
struct UIGraphicsImageRenderer {UIGraphicsRenderer super;};
struct UIPopoverBackgroundView {UIView super;};
struct UITableViewDropProposal {UIDropProposal super;};
struct VNTrajectoryObservation {VNObservation super;};
typedef exception_handler_array_t exception_port_arrary_t;
struct AVAudioEnvironmentNode {AVAudioNode super;};
struct AVCaptureMetadataInput {AVCaptureInput super;AVCaptureMetadataInputInternal *_internal;};
struct AVFragmentedAssetTrack {AVAssetTrack super;AVFragmentedAssetTrackInternal *_fragmentedAssetTrack;};
struct AVFragmentedMovieTrack {AVMovieTrack super;AVFragmentedMovieTrackInternal *_fragmentedMovieTrack;};
struct CKDatabaseNotification {CKNotification super;};
struct CKDatabaseSubscription {CKSubscription super;};
struct CLKSimpleGaugeProvider {CLKGaugeProvider super;};
struct CNMutablePostalAddress {CNPostalAddress super;};
struct CPContactMessageButton {CPButton super;};
struct CPNowPlayingMoreButton {CPNowPlayingButton super;};
struct CPVoiceControlTemplate {CPTemplate super;};
struct GCMicroGamepadSnapshot {GCMicroGamepad super;};
struct GKAchievementChallenge {GKChallenge super;};
struct GKCylindersNoiseSource {GKNoiseSource super;};
struct GKGaussianDistribution {GKRandomDistribution super;};
struct GKShuffledDistribution {GKRandomDistribution super;};
struct HMMutableLocationEvent {HMLocationEvent super;};
struct HMMutablePresenceEvent {HMPresenceEvent super;};
struct HMSignificantTimeEvent {HMTimeEvent super;};
struct INCreateTaskListIntent {INIntent super;};
struct INRentalCarReservation {INReservation super;};
struct INRequestPaymentIntent {INIntent super;};
struct INSearchForBillsIntent {INIntent super;};
struct INSearchForMediaIntent {INIntent super;};
struct INStartAudioCallIntent {INIntent super;};
struct INStartVideoCallIntent {INIntent super;};
struct MDLAnimatedScalarArray {MDLAnimatedValue super;};
struct MDLCheckerboardTexture {MDLTexture super;};
struct MLCFullyConnectedLayer {MLCLayer super;};
struct MPFeedbackCommandEvent {MPRemoteCommandEvent super;};
struct MPSNDArrayMultiaryBase {MPSKernel super;};
struct MPSNNBilinearScaleNode {MPSNNScaleNode super;};
struct MPSNNConcatenationNode {MPSNNFilterNode super;};
struct MPSNNGradientStateNode {MPSNNStateNode super;};
struct NEDNSOverHTTPSSettings {NEDNSSettings super;};
struct NEFilterNewFlowVerdict {NEFilterVerdict super;};
struct NSAttributeDescription {NSPropertyDescription super;};
struct NSMeasurementFormatter {NSFormatter super;void *_formatter;};
struct NSURLSessionStreamTask {NSURLSessionTask super;};
struct PHProjectChangeRequest {PHChangeRequest super;};
struct SCNBillboardConstraint {SCNConstraint super;};
struct SCNTransformConstraint {SCNConstraint super;};
struct TKSmartCardTokenDriver {TKTokenDriver super;};
struct UIAccessibilityElement {UIResponder super;};
struct UIActivityItemProvider {NSOperation super;};
struct UICellAccessoryReorder {UICellAccessory super;};
struct UIPanGestureRecognizer {UIGestureRecognizer super;};
struct UITapGestureRecognizer {UIGestureRecognizer super;};
struct VNFaceLandmarkRegion2D {VNFaceLandmarkRegion super;};
struct VNRectangleObservation {VNDetectedObjectObservation super;};
typedef mach_port_name_t *mach_port_name_array_t;
typedef mach_port_type_t *mach_port_type_array_t;
typedef processor_array_t processor_port_array_t;
struct ARCoachingOverlayView {UIView super;};
struct AVAudioUnitTimeEffect {AVAudioUnit super;};
struct AVMutableMetadataItem {AVMetadataItem super;AVMutableMetadataItemInternal *_mutablePriv;};
struct CLKSimpleTextProvider {CLKTextProvider super;};
struct CNContactFetchRequest {CNFetchRequest super;};
struct CPActionSheetTemplate {CPTemplate super;};
struct CPInformationTemplate {CPTemplate super;};
struct GCControllerAxisInput {GCControllerElement super;};
struct GKCoherentNoiseSource {GKNoiseSource super;};
struct GKConstantNoiseSource {GKNoiseSource super;};
struct HKActivitySummaryType {HKObjectType super;};
struct HKAudiogramSampleType {HKSampleType super;};
struct HKWorkoutRouteBuilder {HKSeriesBuilder super;};
struct HMCameraStreamControl {HMCameraControl super;};
struct INCancelWorkoutIntent {INIntent super;};
struct INGetRideStatusIntent {INIntent super;};
struct INGetVisualCodeIntent {INIntent super;};
struct INResumeWorkoutIntent {INIntent super;};
struct INTransferMoneyIntent {INIntent super;};
struct MDLAnimatedQuaternion {MDLAnimatedValue super;};
struct MDLColorSwatchTexture {MDLTexture super;};
struct MKOverlayPathRenderer {MKOverlayRenderer super;};
struct MKTileOverlayRenderer {MKOverlayRenderer super;};
struct MLCConcatenationLayer {MLCLayer super;};
struct MPMediaItemCollection {MPMediaEntity super;};
struct MPSCNNConvolutionNode {MPSNNFilterNode super;};
struct MPSImageFindKeypoints {MPSKernel super;};
struct MPSMatrixBinaryKernel {MPSKernel super;};
struct MPSNNLanczosScaleNode {MPSNNScaleNode super;};
struct MPSNNLossGradientNode {MPSNNGradientFilterNode super;};
struct MPSkipIntervalCommand {MPRemoteCommand super;};
struct NEOnDemandRuleConnect {NEOnDemandRule super;};
struct NSDirectoryEnumerator {NSEnumerator super;};
struct NSInvocationOperation {NSOperation super;};
struct NSMutableCharacterSet {NSCharacterSet super;};
struct NSUnitConverterLinear {NSUnitConverter super;double _coefficient;double _constant;};
struct NSUnitElectricCurrent {NSDimension super;};
struct PHCachingImageManager {PHImageManager super;};
struct SCNDistanceConstraint {SCNConstraint super;};
struct SCNPhysicsSliderJoint {SCNPhysicsBehavior super;};
struct SKPhysicsJointSliding {SKPhysicsJoint super;};
struct UICellAccessoryDelete {UICellAccessory super;};
struct UICellAccessoryInsert {UICellAccessory super;};
struct UIDeferredMenuElement {UIMenuElement super;};
struct UIDynamicItemBehavior {UIDynamicBehavior super;};
struct UIGraphicsPDFRenderer {UIGraphicsRenderer super;};
struct UITargetedDragPreview {UITargetedPreview super;};
struct VNContoursObservation {VNObservation super;};
struct mach_msg_empty_send_t {mach_msg_header_t header;};
typedef memory_object_t *memory_object_array_t;
typedef processor_set_t *processor_set_array_t;
struct AVAudioUnitGenerator {AVAudioUnit super;};
struct AVAudioUnitTimePitch {AVAudioUnitTimeEffect super;};
struct AVAudioUnitVarispeed {AVAudioUnitTimeEffect super;};
struct AVCaptureDeviceInput {AVCaptureInput super;AVCaptureDeviceInputInternal *_internal;};
struct AVCapturePhotoOutput {AVCaptureOutput super;AVCapturePhotoOutputInternal *_internal;};
struct AVCaptureScreenInput {AVCaptureInput super;AVCaptureScreenInputInternal *_internal;};
struct AVMetadataBodyObject {AVMetadataObject super;};
struct AVMetadataFaceObject {AVMetadataObject super;AVMetadataFaceObjectInternal *_internal;};
struct AVMutableComposition {AVComposition super;AVMutableCompositionInternal *_mutablePriv;};
struct AVTimedMetadataGroup {AVMetadataGroup super;AVTimedMetadataGroupInternal *_priv;};
struct CPNowPlayingTemplate {CPTemplate super;};
struct EKStructuredLocation {EKObject super;};
struct GCControllerTouchpad {GCControllerElement super;};
struct GKSpheresNoiseSource {GKNoiseSource super;};
struct GKVoronoiNoiseSource {GKNoiseSource super;};
struct HKCharacteristicType {HKObjectType super;};
struct HKLiveWorkoutBuilder {HKWorkoutBuilder super;};
struct HMCameraAudioControl {HMCameraControl super;};
struct INAppendToNoteIntent {INIntent super;};
struct INLodgingReservation {INReservation super;};
struct INPauseWorkoutIntent {INIntent super;};
struct INStartWorkoutIntent {INIntent super;};
struct MDLAnimatedMatrix4x4 {MDLAnimatedValue super;};
struct MKUserTrackingButton {UIView super;};
struct MPRatingCommandEvent {MPRemoteCommandEvent super;};
struct MPSBinaryImageKernel {MPSKernel super;};
struct MPSCNNLogSoftMaxNode {MPSNNFilterNode super;};
struct MPSCNNMultiaryKernel {MPSKernel super;};
struct MPSImageCopyToMatrix {MPSKernel super;};
struct MPSImageGuidedFilter {MPSKernel super;};
struct MPSMatrixCopyToImage {MPSKernel super;};
struct MPSMatrixUnaryKernel {MPSKernel super;};
struct MPSNNForwardLossNode {MPSNNFilterNode super;};
struct MPSNNPadGradientNode {MPSNNGradientFilterNode super;};
struct MPSNNSubtractionNode {MPSNNBinaryArithmeticNode super;};
struct MSStickerBrowserView {UIView super;};
struct NEDNSOverTLSSettings {NEDNSSettings super;};
struct NEOnDemandRuleIgnore {NEOnDemandRule super;};
struct NFCNDEFReaderSession {NFCReaderSession super;};
struct NSURLSessionDataTask {NSURLSessionTask super;};
struct NSUnitElectricCharge {NSDimension super;};
struct NSUnitFuelEfficiency {NSDimension super;};
struct PHAssetChangeRequest {PHChangeRequest super;};
struct SCNPhysicsHingeJoint {SCNPhysicsBehavior super;};
struct SKPhysicsJointSpring {SKPhysicsJoint super;};
struct UIAttachmentBehavior {UIDynamicBehavior super;};
struct UICellAccessoryLabel {UICellAccessory super;};
struct UICollectionViewCell {UICollectionReusableView super;};
struct UIPointerHoverEffect {UIPointerEffect super;};
struct UIViewPrintFormatter {UIPrintFormatter super;};
struct VNBarcodeObservation {VNRectangleObservation super;};
struct VNHorizonObservation {VNObservation super;};
typedef processor_set_t processor_set_name_t;
typedef processor_set_t processor_set_port_t;
struct ARParticipantAnchor {ARAnchor super;};
struct AUAudioUnitV2Bridge {AUAudioUnit super;};
struct AVAssetDownloadTask {NSURLSessionTask super;};
struct AVCaptureFileOutput {AVCaptureOutput super;AVCaptureFileOutputInternal *_fileOutputInternal;};
struct AVMutableMovieTrack {AVMovieTrack super;AVMutableMovieTrackInternal *_mutableMovieTrackInternal;};
struct CAKeyframeAnimation {CAPropertyAnimation super;};
struct CBPeripheralManager {CBManager super;};
struct CKQueryNotification {CKNotification super;};
struct CKQuerySubscription {CKSubscription super;};
struct CLKDateTextProvider {CLKTextProvider super;};
struct CLKTimeTextProvider {CLKTextProvider super;};
struct CPContactCallButton {CPButton super;};
struct GKBillowNoiseSource {GKCoherentNoiseSource super;};
struct GKCompositeBehavior {GKBehavior super;};
struct GKPerlinNoiseSource {GKCoherentNoiseSource super;};
struct GKRidgedNoiseSource {GKCoherentNoiseSource super;};
struct HKElectrocardiogram {HKSample super;};
struct HMHomeAccessControl {HMAccessControl super;};
struct INDeleteTasksIntent {INIntent super;};
struct INFlightReservation {INReservation super;};
struct INRequestRideIntent {INIntent super;};
struct INSendMessageIntent {INIntent super;};
struct INSendPaymentIntent {INIntent super;};
struct INSnoozeTasksIntent {INIntent super;};
struct MDLNormalMapTexture {MDLTexture super;};
struct MDLPhotometricLight {MDLPhysicallyPlausibleLight super;};
struct MKDistanceFormatter {NSFormatter super;};
struct MLCConvolutionLayer {MLCLayer super;};
struct MLCRMSPropOptimizer {MLCOptimizer super;};
struct MPSNNComparisonNode {MPSNNBinaryArithmeticNode super;};
struct MPSTemporaryNDArray {MPSNDArray super;};
struct MPSUnaryImageKernel {MPSKernel super;};
struct MSMessageLiveLayout {MSMessageLayout super;};
struct NEFilterBrowserFlow {NEFilterFlow super;};
struct NEFilterDataVerdict {NEFilterVerdict super;};
struct NFCTagReaderSession {NFCReaderSession super;};
struct NFCVASReaderSession {NFCReaderSession super;};
struct NSLayoutXAxisAnchor {NSLayoutAnchor super;};
struct NSLayoutYAxisAnchor {NSLayoutAnchor super;};
struct NSMutableDictionary {NSDictionary super;};
struct NSMutableOrderedSet {NSOrderedSet super;};
struct NSMutableURLRequest {NSURLRequest super;};
struct PDFActionRemoteGoTo {PDFAction super;PDFActionRemoteGoToPrivateVars *_private2;};
struct SCNLookAtConstraint {SCNConstraint super;};
struct SCNSliderConstraint {SCNConstraint super;};
struct SKPhysicsJointFixed {SKPhysicsJoint super;};
struct SKPhysicsJointLimit {SKPhysicsJoint super;};
struct UICollisionBehavior {UIDynamicBehavior super;};
struct UIDragPreviewTarget {UIPreviewTarget super;};
struct UIMotionEffectGroup {UIMotionEffect super;};
struct UIPointerLiftEffect {UIPointerEffect super;};
struct UIToolbarAppearance {UIBarAppearance super;};
struct VNImageBasedRequest {VNRequest super;};
typedef ledger_array_t ledger_port_array_t;
typedef mach_port_name_t mach_voucher_name_t;
typedef thread_array_t thread_port_array_t;
struct ARSCNPlaneGeometry {SCNGeometry super;};
struct AVAudioUnitSampler {AVAudioUnitMIDIInstrument super;};
struct AVCompositionTrack {AVAssetTrack super;AVCompositionTrackInternal *_priv;};
struct CNContactFormatter {NSFormatter super;};
struct CPListImageRowItem {CPBaseListItem super;};
struct GCDualShockGamepad {GCExtendedGamepad super;};
struct GKARC4RandomSource {GKRandomSource super;};
struct GKSCNNodeComponent {GKComponent super;};
struct HKActivityRingView {UIView super;};
struct INCancelRideIntent {INIntent super;};
struct INCreateNoteIntent {INIntent super;};
struct INEndWorkoutIntent {INIntent super;};
struct INImageNoteContent {INNoteContent super;};
struct INMediaUserContext {INUserContext super;};
struct INTrainReservation {INReservation super;};
struct MDLAnimatedVector2 {MDLAnimatedValue super;};
struct MDLAnimatedVector3 {MDLAnimatedValue super;};
struct MDLAnimatedVector4 {MDLAnimatedValue super;};
struct MKGeodesicPolyline {MKPolyline super;};
struct MKPolylineRenderer {MKOverlayPathRenderer super;};
struct MLCActivationLayer {MLCLayer super;};
struct MLCArithmeticLayer {MLCLayer super;};
struct MLCGramMatrixLayer {MLCLayer super;};
struct MPSCNNBinaryKernel {MPSKernel super;};
struct MPSCNNYOLOLossNode {MPSNNFilterNode super;};
struct MPSGraphVariableOp {MPSGraphOperation super;};
struct MPSImageArithmetic {MPSBinaryImageKernel super;};
struct MPSImageConversion {MPSUnaryImageKernel super;};
struct MPSKeyedUnarchiver {NSKeyedUnarchiver super;};
struct MPSNNGradientState {MPSState super;};
struct MPSTemporaryMatrix {MPSMatrix super;};
struct MPSTemporaryVector {MPSVector super;};
struct MXAppRunTimeMetric {MXMetric super;};
struct NEDNSProxyProvider {NEProvider super;};
struct NEFilterSocketFlow {NEFilterFlow super;};
struct NEVPNProtocolIPSec {NEVPNProtocol super;};
struct NSIncrementalStore {NSPersistentStore super;};
struct NSUnitAcceleration {NSDimension super;};
struct OSLogEntryActivity {OSLogEntry super;};
struct OSLogEntryBoundary {OSLogEntry super;};
struct OSLogEntrySignpost {OSLogEntry super;};
struct PDFActionResetForm {PDFAction super;PDFActionResetFormPrivateVars *_private2;};
struct SKWarpGeometryGrid {SKWarpGeometry super;};
struct TKCompactTLVRecord {TKTLVRecord super;};
struct UITabBarAppearance {UIBarAppearance super;};
struct UITextDropProposal {UIDropProposal super;};
struct UIVisualEffectView {UIView super;};
typedef thread_act_t *thread_act_array_t;
struct ARSCNFaceGeometry {SCNGeometry super;};
struct AVAudioPlayerNode {AVAudioNode super;};
struct AVAudioSourceNode {AVAudioNode super;};
struct AVAudioUnitEffect {AVAudioUnit super;};
struct AVAudioUnitReverb {AVAudioUnitEffect super;};
struct AVFragmentedAsset {AVURLAsset super;AVFragmentedAssetInternal *_fragmentedAsset;};
struct AVMutableAudioMix {AVAudioMix super;AVMutableAudioMixInternal *_mutableAudioMix;};
struct AVRoutePickerView {UIView super;};
struct CASpringAnimation {CABasicAnimation super;};
struct CPContactTemplate {CPTemplate super;};
struct CPMessageListItem {CPBaseListItem super;};
struct GCGamepadSnapshot {GCGamepad super;};
struct GKPolygonObstacle {GKObstacle super;};
struct GKSKNodeComponent {GKComponent super;};
struct HKAudiogramSample {HKSample super;};
struct HKCorrelationType {HKSampleType super;};
struct INBoatReservation {INReservation super;};
struct INPlayMediaIntent {INIntent super;};
struct INRestaurantGuest {INPerson super;};
struct INStartCallIntent {INIntent super;};
struct INTextNoteContent {INNoteContent super;};
struct MDLAnimatedScalar {MDLAnimatedValue super;};
struct MDLSkyCubeTexture {MDLTexture super;};
struct MKPolygonRenderer {MKOverlayPathRenderer super;};
struct MLCEmbeddingLayer {MLCLayer super;};
struct MLCInferenceGraph {MLCGraph super;};
struct MLCReductionLayer {MLCLayer super;};
struct MLCTransposeLayer {MLCLayer super;};
struct MPFeedbackCommand {MPRemoteCommand super;};
struct MPSCNNDropoutNode {MPSNNFilterNode super;};
struct MPSCNNPoolingNode {MPSNNFilterNode super;};
struct MPSCNNSoftMaxNode {MPSNNFilterNode super;};
struct MPSImageHistogram {MPSKernel super;};
struct MPSImageLaplacian {MPSUnaryImageKernel super;};
struct MPSImageTranspose {MPSUnaryImageKernel super;};
struct MPSLSTMDescriptor {MPSRNNDescriptor super;};
struct MPSMatrixFindTopK {MPSMatrixUnaryKernel super;};
struct MPSNNAdditionNode {MPSNNBinaryArithmeticNode super;};
struct MPSNNDivisionNode {MPSNNBinaryArithmeticNode super;};
struct MPSNNLossGradient {MPSCNNBinaryKernel super;};
struct MPSNNReduceBinary {MPSCNNBinaryKernel super;};
struct MPSRayIntersector {MPSKernel super;};
struct MPSTemporaryImage {MPSImage super;};
struct MXAnimationMetric {MXMetric super;};
struct MXAppLaunchMetric {MXMetric super;};
struct MXCrashDiagnostic {MXDiagnostic super;};
struct NEAppProxyTCPFlow {NEAppProxyFlow super;};
struct NEAppProxyUDPFlow {NEAppProxyFlow super;};
struct NEAppPushProvider {NEProvider super;};
struct NSHTTPURLResponse {NSURLResponse super;NSHTTPURLResponseInternal *_httpInternal;};
struct NSLayoutDimension {NSLayoutAnchor super;};
struct NSUnitIlluminance {NSDimension super;};
struct NSUnitTemperature {NSDimension super;};
struct PHAssetCollection {PHCollection super;};
struct SKPhysicsJointPin {SKPhysicsJoint super;};
struct TKSimpleTLVRecord {TKTLVRecord super;};
struct UIListContentView {UIView super;};
struct UIManagedDocument {UIDocument super;};
struct VNFaceLandmarks2D {VNFaceLandmarks super;};
struct VNFaceObservation {VNDetectedObjectObservation super;};
struct VNRecognizedPoint {VNDetectedPoint super;};
struct VNStatefulRequest {VNImageBasedRequest super;};
struct VNTextObservation {VNRectangleObservation super;};
struct VNTrackingRequest {VNImageBasedRequest super;};
typedef clock_ctrl_t clock_ctrl_port_t;
typedef clock_serv_t clock_serv_port_t;
typedef task_array_t task_port_array_t;
typedef thread_act_t thread_act_port_t;
struct AUParameterGroup {AUParameterNode super;};
struct AVAudioMixerNode {AVAudioNode super;};
struct AVAudioPCMBuffer {AVAudioBuffer super;};
struct AVAudioUnitDelay {AVAudioUnitEffect super;};
struct CBCentralManager {CBManager super;};
struct CBCharacteristic {CBAttribute super;};
struct CBMutableService {CBService super;};
struct CLCircularRegion {CLRegion super;};
struct CNMutableContact {CNContact super;};
struct CPSearchTemplate {CPTemplate super;};
struct CPTabBarTemplate {CPTemplate super;};
struct EKRecurrenceRule {EKObject super;};
struct GKCircleObstacle {GKObstacle super;};
struct GKScoreChallenge {GKChallenge super;};
struct GKSphereObstacle {GKObstacle super;};
struct HKCategorySample {HKSample super;};
struct HKClinicalRecord {HKSample super;};
struct HKDocumentSample {HKSample super;};
struct HKQuantitySample {HKSample super;};
struct HMCameraSnapshot {HMCameraSource super;};
struct INAddMediaIntent {INIntent super;};
struct INAddTasksIntent {INIntent super;};
struct INBusReservation {INReservation super;};
struct INListCarsIntent {INIntent super;};
struct MKAnnotationView {UIView super;};
struct MKCircleRenderer {MKOverlayPathRenderer super;};
struct MLCAdamOptimizer {MLCOptimizer super;};
struct MLCTrainingGraph {MLCGraph super;};
struct MLCUpsampleLayer {MLCLayer super;};
struct MPSCNNArithmetic {MPSCNNBinaryKernel super;};
struct MPSCNNLossLabels {MPSState super;};
struct MPSCNNNeuronNode {MPSNNFilterNode super;};
struct MPSGRUDescriptor {MPSRNNDescriptor super;};
struct MPSImageIntegral {MPSUnaryImageKernel super;};
struct MPSImageMultiply {MPSImageArithmetic super;};
struct MPSImageSubtract {MPSImageArithmetic super;};
struct MPSMatrixSoftMax {MPSMatrixUnaryKernel super;};
struct MPSMatrixSolveLU {MPSMatrixBinaryKernel super;};
struct MPSNNReshapeNode {MPSNNFilterNode super;};
struct MXHangDiagnostic {MXDiagnostic super;};
struct MXSignpostMetric {MXMetric super;};
struct MXUnitSignalBars {NSDimension super;};
struct NEFilterProvider {NEProvider super;};
struct NETunnelProvider {NEProvider super;};
struct NSBlockOperation {NSOperation super;};
struct NSUnitDispersion {NSDimension super;};
struct PDFThumbnailView {UIView super;PDFThumbnailViewPrivate *_private;};
struct PHCollectionList {PHCollection super;};
struct SKMutableTexture {SKTexture super;};
struct UIVibrancyEffect {UIVisualEffect super;};
struct UIViewController {UIResponder super;};
typedef ipc_space_t ipc_space_port_t;
struct AUParameterTree {AUParameterGroup super;};
struct AVAudioSinkNode {AVAudioNode super;};
struct CLSActivityItem {CLSObject super;};
struct CLSQuantityItem {CLSActivityItem super;};
struct CPAlertTemplate {CPTemplate super;};
struct GKGridGraphNode {GKGraphNode super;};
struct HMCalendarEvent {HMTimeEvent super;};
struct HMDurationEvent {HMTimeEvent super;};
struct INPayBillIntent {INIntent super;};
struct MDLNoiseTexture {MDLTexture super;};
struct MKCompassButton {UIView super;};
struct MLCDropoutLayer {MLCLayer super;};
struct MLCPaddingLayer {MLCLayer super;};
struct MLCPoolingLayer {MLCLayer super;};
struct MLCReshapeLayer {MLCLayer super;};
struct MLCSGDOptimizer {MLCOptimizer super;};
struct MLCSoftmaxLayer {MLCLayer super;};
struct MPMediaPlaylist {MPMediaItemCollection super;};
struct MPRatingCommand {MPRemoteCommand super;};
struct MPSImageAreaMax {MPSUnaryImageKernel super;};
struct MPSImageAreaMin {MPSImageAreaMax super;};
struct MPSImageEDLines {MPSKernel super;};
struct MPSImagePyramid {MPSUnaryImageKernel super;};
struct MPSMatrixNeuron {MPSMatrixUnaryKernel super;};
struct MPSMatrixRandom {MPSKernel super;};
struct MPSNNGridSample {MPSCNNBinaryKernel super;};
struct MPSNNLabelsNode {MPSNNStateNode super;};
struct MXAppExitMetric {MXMetric super;};
struct MXDisplayMetric {MXMetric super;};
struct NSDecimalNumber {NSNumber super;int _exponent;unsigned int _length;unsigned int _isNegative;unsigned int _isCompact;unsigned int _reserved;unsigned int _hasExternalRefCount;unsigned int _refs;unsigned short _mantissa[];};
struct NSListFormatter {NSFormatter super;};
struct NSUnitFrequency {NSDimension super;};
struct OSLogEnumerator {NSEnumerator super;};
struct OS_os_workgroup {OS_object super;};
struct PHLivePhotoView {UIView super;};
struct SCNIKConstraint {SCNConstraint super;};
struct SKReferenceNode {SKNode super;};
struct SKTransformNode {SKNode super;};
struct UIBarButtonItem {UIBarItem super;};
struct UINavigationBar {UIView super;};
struct UITableViewCell {UIView super;};
struct VNCoreMLRequest {VNImageBasedRequest super;};
struct mach_msg_body_t {mach_msg_size_t msgh_descriptor_count;};
struct ARObjectAnchor {ARAnchor super;};
struct CLBeaconRegion {CLRegion super;};
struct CPGridTemplate {CPTemplate super;};
struct CPListTemplate {CPTemplate super;};
struct EKCalendarItem {EKObject super;};
struct GCDeviceCursor {GCControllerDirectionPad super;};
struct HKCategoryType {HKSampleType super;};
struct HKClinicalType {HKSampleType super;};
struct HKDocumentType {HKSampleType super;};
struct HKQuantityType {HKSampleType super;};
struct HKSeriesSample {HKSample super;};
struct HKWorkoutRoute {HKSeriesSample super;};
struct HMEventTrigger {HMTrigger super;};
struct HMTimerTrigger {HMTrigger super;};
struct ICCameraDevice {ICDevice super;};
struct ICCameraFolder {ICCameraItem super;};
struct MKPitchControl {UIView super;};
struct MLCMatMulLayer {MLCLayer super;};
struct MPSCNNMultiply {MPSCNNArithmetic super;};
struct MPSCNNSubtract {MPSCNNArithmetic super;};
struct MPSImageDilate {MPSUnaryImageKernel super;};
struct MPSImageDivide {MPSImageArithmetic super;};
struct MPSImageMedian {MPSUnaryImageKernel super;};
struct MPSNNOptimizer {MPSKernel super;};
struct MXDiskIOMetric {MXMetric super;};
struct MXMemoryMetric {MXMetric super;};
struct NSUnitDuration {NSDimension super;};
struct NSUnitPressure {NSDimension super;};
struct NWHostEndpoint {NWEndpoint super;};
struct PDFActionNamed {PDFAction super;PDFActionNamedPrivateVars *_private2;};
struct TKBERTLVRecord {TKTLVRecord super;};
struct UIProgressView {UIView super;};
struct ARImageAnchor {ARAnchor super;};
struct ARPlaneAnchor {ARAnchor super;};
struct AVAudioIONode {AVAudioNode super;};
struct AVAudioUnitEQ {AVAudioUnitEffect super;};
struct AVQueuePlayer {AVPlayer super;AVQueuePlayerInternal *_queuePlayer;};
struct CIColorKernel {CIKernel super;};
struct CITextFeature {CIFeature super;};
struct CLSBinaryItem {CLSActivityItem super;};
struct CMTimeMapping {CMTimeRange source;CMTimeRange target;};
struct CPMapTemplate {CPTemplate super;};
struct EKParticipant {EKObject super;};
struct GKCloudPlayer {GKBasePlayer super;};
struct GKGraphNode2D {GKGraphNode super;};
struct GKGraphNode3D {GKGraphNode super;};
struct GKLocalPlayer {GKPlayer super;};
struct HKCorrelation {HKSample super;};
struct HKWorkoutType {HKSampleType super;};
struct MDLLightProbe {MDLLight super;};
struct MDLURLTexture {MDLTexture super;};
struct MDLVoxelArray {MDLObject super;};
struct MKOverlayView {UIView super;};
struct MKZoomControl {UIView super;};
struct MLCSliceLayer {MLCLayer super;};
struct MLCSplitLayer {MLCLayer super;};
struct MPSImageCanny {MPSUnaryImageKernel super;};
struct MPSImageErode {MPSImageDilate super;};
struct MPSImageScale {MPSUnaryImageKernel super;};
struct MPSImageSobel {MPSUnaryImageKernel super;};
struct MPSMatrixCopy {MPSKernel super;};
struct MPSTemporalAA {MPSKernel super;};
struct MSStickerView {UIView super;};
struct NSTextStorage {NSMutableAttributedString super;};
struct OSLogEntryLog {OSLogEntry super;};
struct PDFActionGoTo {PDFAction super;PDFActionGoToPrivateVars *_private2;};
struct SKEmitterNode {SKNode super;};
struct SKTileMapNode {SKNode super;};
struct UIActionSheet {UIView super;};
struct UIApplication {UIResponder super;};
struct UIWindowScene {UIScene super;};
struct ADBannerView {UIView super;};
struct ARBodyAnchor {ARAnchor super;};
struct ARFaceAnchor {ARAnchor super;};
struct ARMeshAnchor {ARAnchor super;};
struct ARSkeleton2D {ARSkeleton super;};
struct ARSkeleton3D {ARSkeleton super;};
struct CBDescriptor {CBAttribute super;};
struct CIWarpKernel {CIKernel super;};
struct CLSScoreItem {CLSActivityItem super;};
struct CXCallAction {CXAction super;};
struct HMCameraView {UIView super;};
struct ICCameraFile {ICCameraItem super;};
struct INRideDriver {INPerson super;};
struct MDLAreaLight {MDLPhysicallyPlausibleLight super;};
struct MLCLSTMLayer {MLCLayer super;};
struct MLCLossLayer {MLCLayer super;};
struct MPSCNNDivide {MPSCNNArithmetic super;};
struct MPSCNNKernel {MPSKernel super;};
struct MPSCNNNeuron {MPSCNNKernel super;};
struct MPSMatrixSum {MPSKernel super;};
struct MPSNNCompare {MPSCNNArithmetic super;};
struct MPSNNReshape {MPSCNNKernel super;};
struct MPVolumeView {UIView super;};
struct NSUnitEnergy {NSDimension super;};
struct NSUnitLength {NSDimension super;};
struct NSUnitVolume {NSDimension super;};
struct PDFActionURL {PDFAction super;PDFActionURLPrivateVars *_private2;};
struct SKCameraNode {SKNode super;};
struct SKEffectNode {SKNode super;};
struct SKSpriteNode {SKNode super;};
struct UIKeyCommand {UICommand super;};
struct UIPickerView {UIView super;};
struct UIScrollView {UIView super;};
struct UITabBarItem {UIBarItem super;};
struct ARGeoAnchor {ARAnchor super;};
struct CKOperation {NSOperation super;};
struct CLSActivity {CLSObject super;};
struct MDLSkeleton {MDLObject super;};
struct MKScaleView {UIView super;};
struct MPSImageAdd {MPSImageArithmetic super;};
struct MPSImageBox {MPSUnaryImageKernel super;};
struct MXCPUMetric {MXMetric super;};
struct MXGPUMetric {MXMetric super;};
struct NSUnitAngle {NSDimension super;};
struct NSUnitPower {NSDimension super;};
struct NSUnitSpeed {NSDimension super;};
struct SCNCylinder {SCNGeometry super;};
struct SKAudioNode {SKNode super;};
struct SKFieldNode {SKNode super;};
struct SKLabelNode {SKNode super;};
struct SKLightNode {SKNode super;};
struct SKShapeNode {SKNode super;};
struct SKVideoNode {SKNode super;};
struct UIAlertView {UIView super;};
struct UIImageView {UIView super;};
struct UIInputView {UIView super;};
struct UISearchBar {UIView super;};
struct UIStackView {UIView super;};
struct UITableView {UIScrollView super;};
struct in6_pktinfo {in6_addr ipi6_addr;unsigned int ipi6_ifindex;};
struct CLSContext {CLSObject super;};
struct EKCalendar {EKObject super;};
struct EKReminder {EKCalendarItem super;};
struct LPLinkView {UIView super;};
struct MPSCNNLoss {MPSCNNKernel super;};
struct MPSNNGraph {MPSKernel super;};
struct MPSNNSlice {MPSCNNKernel super;};
struct NSUnitArea {NSDimension super;};
struct NSUnitMass {NSDimension super;};
struct SKCropNode {SKNode super;};
struct UITextView {UIScrollView super;};
struct GKAgent2D {GKAgent super;};
struct GKAgent3D {GKAgent super;};
struct HKWorkout {HKSample super;};
struct MDLCamera {MDLObject super;};
struct MKMapView {UIView super;};
struct MPSCNNAdd {MPSCNNArithmetic super;};
struct PHProject {PHAssetCollection super;};
struct UIControl {UIView super;};
struct UIStepper {UIControl super;};
struct UIToolbar {UIView super;};
struct UIWebView {UIView super;};
struct WKWebView {UIView super;};
struct ipv6_mreq {in6_addr ipv6mr_multiaddr;unsigned int ipv6mr_interface;};
struct MPSNNPad {MPSCNNKernel super;};
struct SK3DNode {SKNode super;};
struct UIButton {UIControl super;};
struct UISlider {UIControl super;};
struct UISwitch {UIControl super;};
struct UITabBar {UIView super;};
struct UIWindow {UIView super;};
struct EKEvent {EKCalendarItem super;};
struct GLKView {UIView super;};
struct MTKView {UIView super;};
struct PDFView {UIView super;PDFViewPrivate *_private;};
struct SCNView {UIView super;};
struct SKScene {SKEffectNode super;};
struct UILabel {UIView super;};
struct SKView {UIView super;};
union AUNodeInteraction___E219FB71B0DE9D0AF0BF60B4604E2975 {AUNodeConnection connection;AUNodeRenderCallback inputCallback;};
struct __Request__mach_memory_entry_access_tracking_t {mach_msg_header_t Head;NDR_record_t NDR;int access_tracking;};
union reply_body___B1794D2A0DAD208A76987CA2B117700C {accepted_reply RP_ar;rejected_reply RP_dr;};
struct __Request__task_set_phys_footprint_limit_t {mach_msg_header_t Head;NDR_record_t NDR;int new_limit;};
struct __Request__processor_set_policy_enable_t {mach_msg_header_t Head;NDR_record_t NDR;int policy;};
struct std____1__basic_string_char16_t_____long {std____1__basic_string_char16_t___pointer __data_;std____1__basic_string_char16_t___size_type __size_;std____1__basic_string_char16_t___size_type __cap_;};
struct std____1__basic_string_char32_t_____long {std____1__basic_string_char32_t___pointer __data_;std____1__basic_string_char32_t___size_type __size_;std____1__basic_string_char32_t___size_type __cap_;};
struct std____1__basic_string_wchar_t_____long {std____1__basic_string_wchar_t___pointer __data_;std____1__basic_string_wchar_t___size_type __size_;std____1__basic_string_wchar_t___size_type __cap_;};
struct std____1__basic_stringstream_wchar_t_ { std____1__basic_iostream_wchar_t_ cppsuper0;std____1__basic_stringbuf_wchar_t_ __sb_;};
struct __Request__thread_get_special_port_t {mach_msg_header_t Head;NDR_record_t NDR;int which_port;};
struct std____1__basic_string_char_____long {std____1__basic_string_char___pointer __data_;std____1__basic_string_char___size_type __size_;std____1__basic_string_char___size_type __cap_;};
struct __Request__host_get_special_port_t {mach_msg_header_t Head;NDR_record_t NDR;int node;int which;};
struct __Request__task_get_special_port_t {mach_msg_header_t Head;NDR_record_t NDR;int which_port;};
struct __Request__lock_handoff_accept_t {mach_msg_header_t Head;NDR_record_t NDR;int lock_id;};
struct __Request__task_set_port_space_t {mach_msg_header_t Head;NDR_record_t NDR;int table_entries;};
struct __Request__lock_make_stable_t {mach_msg_header_t Head;NDR_record_t NDR;int lock_id;};
struct __Request__semaphore_create_t {mach_msg_header_t Head;NDR_record_t NDR;int policy;int value;};
struct mach_send_once_notification_t {mach_msg_header_t not_header;mach_msg_format_0_trailer_t trailer;};
struct __Request__lock_set_create_t {mach_msg_header_t Head;NDR_record_t NDR;int n_ulocks;int policy;};
struct __Request__lock_acquire_t {mach_msg_header_t Head;NDR_record_t NDR;int lock_id;};
struct __Request__lock_handoff_t {mach_msg_header_t Head;NDR_record_t NDR;int lock_id;};
struct __Request__lock_release_t {mach_msg_header_t Head;NDR_record_t NDR;int lock_id;};
struct __Request__host_reboot_t {mach_msg_header_t Head;NDR_record_t NDR;int options;};
struct __Request__lock_try_t {mach_msg_header_t Head;NDR_record_t NDR;int lock_id;};
struct mach_msg_empty_rcv_t {mach_msg_header_t header;mach_msg_trailer_t trailer;};
struct AVAssetTrackSegment {NSObject super;CMTimeMapping _timeMapping;};
struct AudioFileRegionList {UInt32 mSMPTE_TimeType;UInt32 mNumberRegions;AudioFileRegion mRegions[1];};
struct AUNodeInteraction {UInt32 nodeInteractionType;AUNodeInteraction___E219FB71B0DE9D0AF0BF60B4604E2975 nodeInteraction;};
union mach_msg_empty_t {mach_msg_empty_send_t send;mach_msg_empty_rcv_t rcv;};
struct SFNTLookupTable {SFNTLookupTableFormat format;SFNTLookupFormatSpecificHeader fsHeader;};
struct mach_msg_base_t {mach_msg_header_t header;mach_msg_body_t body;};
struct rpc_createerr {clnt_stat cf_stat;rpc_err cf_error;};
struct ip6_mtuinfo {sockaddr_in6 ip6m_addr;uint32_t ip6m_mtu;};
struct kinfo_proc {extern_proc kp_proc;kinfo_proc__eproc kp_eproc;};
struct reply_body {reply_stat rp_stat;reply_body___B1794D2A0DAD208A76987CA2B117700C ru;};
struct ypresponse {ypresptype yp_resptype;ypresponse___6D34D2F64A3B31777223FA377120CA09 ypresponse_u;};
struct yprequest {ypreqtype yp_reqtype;yprequest___6FDF785020AAFE35EF4D4B0B11050AAA yprequest_u;};
union std____1__basic_string_char16_t_____rep___B1BBB8AFCA68510948C54AD5ECDD08AF {std____1__basic_string_char16_t_____long __l;std____1__basic_string_char16_t_____short __s;std____1__basic_string_char16_t_____raw __r;};
union std____1__basic_string_char32_t_____rep___0FAB7A1DE5A04F8E060EE1A12296626F {std____1__basic_string_char32_t_____long __l;std____1__basic_string_char32_t_____short __s;std____1__basic_string_char32_t_____raw __r;};
union std____1__basic_string_wchar_t_____rep___7E5635CA808A9EE38F5B97749E9C5407 {std____1__basic_string_wchar_t_____long __l;std____1__basic_string_wchar_t_____short __s;std____1__basic_string_wchar_t_____raw __r;};
union std____1__basic_string_char_____rep___BBC8CF68AFD2118CFD95232F156F26A4 {std____1__basic_string_char_____long __l;std____1__basic_string_char_____short __s;std____1__basic_string_char_____raw __r;};
struct __Reply__host_register_well_known_mach_voucher_attr_manager_t {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t new_attr_control;};
struct __Reply__task_register_dyld_shared_cache_image_info_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;};
struct __Request__mach_voucher_extract_all_attr_recipes_t {mach_msg_header_t Head;NDR_record_t NDR;mach_msg_type_number_t recipesCnt;};
struct __Request__mach_memory_entry_purgable_control_t {mach_msg_header_t Head;NDR_record_t NDR;vm_purgable_t control;int state;};
struct __Request__task_register_dyld_set_dyld_state_t {mach_msg_header_t Head;NDR_record_t NDR;uint8_t dyld_state;char dyld_statePad[3];};
struct __Reply__mach_memory_entry_purgable_control_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;int state;};
struct __Reply__mach_memory_object_memory_entry_64_t {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t entry_handle;};
struct __Reply__task_register_dyld_set_dyld_state_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;};
struct __Request__host_set_multiuser_config_flags_t {mach_msg_header_t Head;NDR_record_t NDR;uint32_t multiuser_flags;};
struct __Request__processor_set_tasks_with_flavor_t {mach_msg_header_t Head;NDR_record_t NDR;mach_task_flavor_t flavor;};
struct __Reply__task_unregister_dyld_image_infos_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;};
struct __Reply__host_security_create_task_token_t {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t child_task;};
struct __Reply__host_set_multiuser_config_flags_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;};
struct __Reply__mach_memory_object_memory_entry_t {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t entry_handle;};
struct __Request__mach_port_kobject_description_t {mach_msg_header_t Head;NDR_record_t NDR;mach_port_name_t name;};
struct __Reply__mach_port_request_notification_t {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t previous;};
struct __Reply__task_register_dyld_image_infos_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;};
struct __Request__host_set_atm_diagnostic_flag_t {mach_msg_header_t Head;NDR_record_t NDR;uint32_t diagnostic_flag;};
struct __Request__processor_set_policy_disable_t {mach_msg_header_t Head;NDR_record_t NDR;int policy;boolean_t change_threads;};
struct __Reply__task_set_phys_footprint_limit_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;int old_limit;};
struct __Request__task_set_exc_guard_behavior_t {mach_msg_header_t Head;NDR_record_t NDR;task_exc_guard_behavior_t behavior;};
struct __Reply__host_security_set_task_token_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;};
struct __Reply__host_set_atm_diagnostic_flag_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;};
struct __Reply__processor_set_policy_control_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;};
struct __Reply__processor_set_policy_disable_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;};
struct __Request__processor_set_max_priority_t {mach_msg_header_t Head;NDR_record_t NDR;int max_priority;boolean_t change_threads;};
struct __Request__thread_get_exception_ports_t {mach_msg_header_t Head;NDR_record_t NDR;exception_mask_t exception_mask;};
struct __Reply__host_default_memory_manager_t {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t default_manager;};
struct __Reply__mach_memory_entry_ownership_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;};
struct __Reply__processor_set_policy_enable_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;};
struct __Reply__task_set_exc_guard_behavior_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;};
struct __Reply__mach_port_guard_with_flags_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;};
struct __Reply__processor_set_max_priority_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;};
struct __Reply__thread_set_exception_ports_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;};
struct __Request__host_get_exception_ports_t {mach_msg_header_t Head;NDR_record_t NDR;exception_mask_t exception_mask;};
struct __Request__mach_port_dnrequest_info_t {mach_msg_header_t Head;NDR_record_t NDR;mach_port_name_t name;};
struct __Request__mach_port_extract_member_t {mach_msg_header_t Head;NDR_record_t NDR;mach_port_name_t name;mach_port_name_t pset;};
struct __Request__mach_port_get_set_status_t {mach_msg_header_t Head;NDR_record_t NDR;mach_port_name_t name;};
struct __Request__task_get_exception_ports_t {mach_msg_header_t Head;NDR_record_t NDR;exception_mask_t exception_mask;};
struct __Request__thread_swap_mach_voucher_t {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t new_voucher;mach_msg_port_descriptor_t old_voucher;};
struct __Reply__host_request_notification_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;};
struct __Reply__task_set_emulation_vector_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;};
struct __Request__host_processor_set_priv_t {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t set_name;};
struct __Request__mach_port_insert_member_t {mach_msg_header_t Head;NDR_record_t NDR;mach_port_name_t name;mach_port_name_t pset;};
struct __Request__mach_port_kernel_object_t {mach_msg_header_t Head;NDR_record_t NDR;mach_port_name_t name;};
struct __Request__mach_zone_info_for_zone_t {mach_msg_header_t Head;NDR_record_t NDR;mach_zone_name_t name;};
struct __Request__task_map_corpse_info_64_t {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t corspe_task;};
struct __Request__thread_get_mach_voucher_t {mach_msg_header_t Head;NDR_record_t NDR;mach_voucher_selector_t which;};
struct __Request__thread_set_mach_voucher_t {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t voucher;};
struct __Reply__host_create_mach_voucher_t {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t voucher;};
struct __Reply__host_set_exception_ports_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;};
struct __Reply__mach_port_dnrequest_info_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;unsigned int dnr_total;unsigned int dnr_used;};
struct __Reply__mach_port_extract_member_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;};
struct __Reply__mach_port_set_attributes_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;};
struct __Reply__processor_get_assignment_t {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t assigned_set;};
struct __Reply__task_set_exception_ports_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;};
struct __Reply__thread_swap_mach_voucher_t {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t old_voucher;};
struct __Request__host_get_clock_control_t {mach_msg_header_t Head;NDR_record_t NDR;clock_id_t clock_id;};
struct __Request__host_get_clock_service_t {mach_msg_header_t Head;NDR_record_t NDR;clock_id_t clock_id;};
struct __Request__mach_vm_region_info_64_t {mach_msg_header_t Head;NDR_record_t NDR;vm_address_t address;};
struct __Request__task_swap_mach_voucher_t {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t new_voucher;mach_msg_port_descriptor_t old_voucher;};
struct __Reply__host_processor_set_priv_t {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t set;};
struct __Reply__mach_port_allocate_name_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;};
struct __Reply__mach_port_extract_right_t {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t poly;};
struct __Reply__mach_port_insert_member_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;};
struct __Reply__mach_port_kernel_object_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;unsigned int object_type;unsigned int object_addr;};
struct __Reply__thread_get_mach_voucher_t {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t voucher;};
struct __Reply__thread_get_special_port_t {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t special_port;};
struct __Reply__thread_set_mach_voucher_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;};
struct __Reply__thread_set_special_port_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;};
struct __Request__mach_port_get_context_t {mach_msg_header_t Head;NDR_record_t NDR;mach_port_name_t name;};
struct __Request__mach_port_get_srights_t {mach_msg_header_t Head;NDR_record_t NDR;mach_port_name_t name;};
struct __Request__mach_port_move_member_t {mach_msg_header_t Head;NDR_record_t NDR;mach_port_name_t member;mach_port_name_t after;};
struct __Request__task_get_mach_voucher_t {mach_msg_header_t Head;NDR_record_t NDR;mach_voucher_selector_t which;};
struct __Request__task_set_mach_voucher_t {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t voucher;};
struct __Reply__host_get_clock_control_t {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t clock_ctrl;};
struct __Reply__host_get_clock_service_t {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t clock_serv;};
struct __Reply__mach_port_insert_right_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;};
struct __Reply__task_swap_mach_voucher_t {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t old_voucher;};
struct __Request__mach_port_deallocate_t {mach_msg_header_t Head;NDR_record_t NDR;mach_port_name_t name;};
struct __Request__task_map_corpse_info_t {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t corspe_task;};
struct __Reply__host_get_special_port_t {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t port;};
struct __Reply__host_set_special_port_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;};
struct __Reply__mach_port_move_member_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;};
struct __Reply__mach_port_set_context_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;};
struct __Reply__mach_port_set_mscount_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;};
struct __Reply__processor_set_default_t {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t default_set;};
struct __Reply__processor_set_destroy_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;};
struct __Reply__task_create_suid_cred_t {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t delegation;};
struct __Reply__task_get_mach_voucher_t {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t voucher;};
struct __Reply__task_get_special_port_t {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t special_port;};
struct __Reply__task_set_mach_voucher_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;};
struct __Reply__task_set_special_port_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;};
struct __Reply__thread_assign_default_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;};
struct __Reply__thread_create_running_t {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t child_act;};
struct __Reply__thread_get_assignment_t {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t assigned_set;};
struct __Request__host_processor_info_t {mach_msg_header_t Head;NDR_record_t NDR;processor_flavor_t flavor;};
struct __Request__mach_vm_region_info_t {mach_msg_header_t Head;NDR_record_t NDR;vm_address_t address;};
struct __Request__task_assign_default_t {mach_msg_header_t Head;NDR_record_t NDR;boolean_t assign_threads;};
struct __Reply__clock_set_attributes_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;};
struct __Reply__mach_port_deallocate_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;};
struct __Reply__mach_port_swap_guard_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;};
struct __Reply__processor_set_create_t {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t new_set;mach_msg_port_descriptor_t new_name;};
struct __Reply__task_generate_corpse_t {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t corpse_task_port;};
struct __Reply__thread_depress_abort_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;};
struct __Reply__vm_map_exec_lockdown_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;};
struct __Request__host_set_UNDServer_t {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t server;};
struct __Request__mach_port_allocate_t {mach_msg_header_t Head;NDR_record_t NDR;mach_port_right_t right;};
struct __Request__processor_set_info_t {mach_msg_header_t Head;NDR_record_t NDR;int flavor;mach_msg_type_number_t info_outCnt;};
struct __Request__task_set_emulation_t {mach_msg_header_t Head;NDR_record_t NDR;vm_address_t routine_entry_pt;int routine_number;};
struct __Reply__lock_handoff_accept_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;};
struct __Reply__mach_port_set_seqno_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;};
struct __Reply__mach_ports_register_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;};
struct __Reply__task_assign_default_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;};
struct __Reply__task_get_assignment_t {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t assigned_set;};
struct __Reply__task_set_port_space_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;};
struct __Reply__thread_abort_safely_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;};
struct __Reply__vm_purgable_control_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;int state;};
struct __Request__etap_trace_thread_t {mach_msg_header_t Head;NDR_record_t NDR;boolean_t trace_status;};
struct __Request__mach_port_destroy_t {mach_msg_header_t Head;NDR_record_t NDR;mach_port_name_t name;};
struct __Request__mach_port_kobject_t {mach_msg_header_t Head;NDR_record_t NDR;mach_port_name_t name;};
struct __Request__semaphore_destroy_t {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t semaphore;};
struct __Request__vm_map_page_query_t {mach_msg_header_t Head;NDR_record_t NDR;vm_offset_t offset;};
struct __Reply__host_get_UNDServer_t {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t server;};
struct __Reply__host_get_io_master_t {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t io_master;};
struct __Reply__host_set_UNDServer_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;};
struct __Reply__mach_port_destruct_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;};
struct __Reply__mach_port_mod_refs_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;};
struct __Reply__task_set_emulation_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;};
struct __Request__lock_set_destroy_t {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t lock_set;};
struct __Request__mach_port_rename_t {mach_msg_header_t Head;NDR_record_t NDR;mach_port_name_t old_name;mach_port_name_t new_name;};
struct __Reply__clock_alarm_reply_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;};
struct __Reply__etap_trace_thread_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;};
struct __Reply__mach_port_destroy_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;};
struct __Reply__mach_port_unguard_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;};
struct __Reply__processor_control_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;};
struct __Reply__semaphore_destroy_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;};
struct __Reply__thread_policy_set_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;};
struct __Reply__thread_set_policy_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;};
struct __Request__task_set_ras_pc_t {mach_msg_header_t Head;NDR_record_t NDR;vm_address_t basepc;vm_address_t boundspc;};
struct __Reply__lock_make_stable_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;};
struct __Reply__lock_set_destroy_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;};
struct __Reply__mach_port_rename_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;};
struct __Reply__processor_assign_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;};
struct __Reply__semaphore_create_t {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t semaphore;};
struct __Reply__thread_set_state_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;};
struct __Reply__thread_terminate_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;};
struct __Request__clock_set_time_t {mach_msg_header_t Head;NDR_record_t NDR;mach_timespec_t new_time;};
struct __Request__mach_port_type_t {mach_msg_header_t Head;NDR_record_t NDR;mach_port_name_t name;};
struct KernVersion0SubtableHeader {UInt16 version;UInt16 length;KernSubtableInfo stInfo;KernFormatSpecificHeader fsHeader;};
struct __Reply__exception_raise_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;};
struct __Reply__lock_set_create_t {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t new_lock_set;};
struct __Reply__mach_port_guard_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;};
struct __Reply__processor_start_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;};
struct __Reply__task_policy_set_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;};
struct __Reply__task_set_policy_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;};
struct __Reply__task_set_ras_pc_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;};
struct __Reply__vm_behavior_set_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;};
struct __Request__act_get_state_t {mach_msg_header_t Head;NDR_record_t NDR;int flavor;mach_msg_type_number_t old_stateCnt;};
struct __Request__thread_assign_t {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t new_set;};
struct __Request__thread_sample_t {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t reply;};
struct __Reply__clock_set_time_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;};
struct __Reply__processor_exit_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;};
struct __Reply__task_set_state_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;};
struct __Reply__task_terminate_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;};
struct __Reply__thread_suspend_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;};
struct __Request__kmod_destroy_t {mach_msg_header_t Head;NDR_record_t NDR;kmod_t module;};
struct __Reply__act_set_state_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;};
struct __Reply__task_set_info_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;};
struct __Reply__task_suspend2_t {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t suspend_token;};
struct __Reply__thread_assign_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;};
struct __Reply__thread_create_t {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t child_act;};
struct __Reply__thread_policy_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;};
struct __Reply__thread_resume_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;};
struct __Reply__thread_sample_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;};
struct __Reply__vm_deallocate_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;};
struct __Request__kmod_create_t {mach_msg_header_t Head;NDR_record_t NDR;vm_address_t info;};
struct __Request__task_sample_t {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t reply;};
struct __Reply__kmod_destroy_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;};
struct __Reply__lock_acquire_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;};
struct __Reply__lock_handoff_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;};
struct __Reply__lock_release_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;};
struct __Reply__mach_vm_wire_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;};
struct __Reply__task_resume2_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;};
struct __Reply__task_suspend_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;};
struct __Reply__thread_abort_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;};
struct __Reply__clock_alarm_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;};
struct __Reply__host_reboot_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;};
struct __Reply__task_assign_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;};
struct __Reply__task_create_t {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t child_task;};
struct __Reply__task_policy_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;};
struct __Reply__task_resume_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;};
struct __Reply__task_sample_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;};
struct __Reply__thread_wire_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;};
struct __Request__task_wire_t {mach_msg_header_t Head;NDR_record_t NDR;boolean_t must_wire;};
struct __Reply__vm_inherit_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;};
struct __Reply__vm_protect_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;};
struct __Reply__task_wire_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;};
union res_9_sockaddr_union {sockaddr_in sin;sockaddr_in6 sin6;int32_t __align32;char __space[128];};
struct __Reply__lock_try_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;};
struct __Reply__vm_msync_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;};
struct __Reply__vm_write_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;};
struct __Reply__vm_copy_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;};
struct __Reply__vm_wire_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;};
struct mig_reply_error_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;};
struct BslnFormat3Part {UInt16 stdGlyph;SInt16 ctlPoints[32];SFNTLookupTable mappingData;};
struct LcarCaretTable {Fixed version;UInt16 format;SFNTLookupTable lookup;};
struct ALMXHeader {Fixed Version;UInt16 Flags;UInt16 NMasters;UInt16 FirstGlyph;UInt16 LastGlyph;SFNTLookupTable lookup;};
struct ROTAHeader {Fixed Version;UInt16 Flags;UInt16 NMasters;UInt16 FirstGlyph;UInt16 LastGlyph;SFNTLookupTable lookup;};
struct OpbdTable {Fixed version;OpbdTableFormat format;SFNTLookupTable lookupTable;};
struct __Request__task_register_dyld_shared_cache_image_info_t {mach_msg_header_t Head;NDR_record_t NDR;dyld_kernel_image_info_t dyld_cache_image;boolean_t no_cache;boolean_t private_cache;};
struct __Reply__task_register_dyld_get_process_state_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;dyld_kernel_process_info_t dyld_process_state;};
struct __Request__mach_voucher_extract_attr_content_t {mach_msg_header_t Head;NDR_record_t NDR;mach_voucher_attr_key_t key;mach_msg_type_number_t contentCnt;};
struct __Request__mach_voucher_extract_attr_recipe_t {mach_msg_header_t Head;NDR_record_t NDR;mach_voucher_attr_key_t key;mach_msg_type_number_t recipeCnt;};
struct __Reply__mach_memory_entry_access_tracking_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;int access_tracking;uint32_t access_tracking_reads;uint32_t access_tracking_writes;};
struct __Reply__host_get_multiuser_config_flags_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;uint32_t multiuser_flags;};
struct __Request__mach_memory_entry_ownership_t {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t owner;NDR_record_t NDR;int ledger_tag;int ledger_flags;};
struct __Reply__host_get_atm_diagnostic_flag_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;uint32_t diagnostic_flag;};
struct __Reply__task_get_exc_guard_behavior_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;task_exc_guard_behavior_t behavior;};
struct __Reply__mach_port_space_basic_info_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;ipc_info_space_basic_t basic_info;};
struct __Request__host_create_mach_voucher_t {mach_msg_header_t Head;NDR_record_t NDR;mach_msg_type_number_t recipesCnt;uint8_t recipes[5120];};
struct __Request__processor_set_statistics_t {mach_msg_header_t Head;NDR_record_t NDR;processor_set_flavor_t flavor;mach_msg_type_number_t info_outCnt;};
struct __Reply__host_check_multiuser_mode_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;uint32_t multiuser_mode;};
struct __Request__mach_port_allocate_name_t {mach_msg_header_t Head;NDR_record_t NDR;mach_port_right_t right;mach_port_name_t name;};
struct __Request__mach_port_extract_right_t {mach_msg_header_t Head;NDR_record_t NDR;mach_port_name_t name;mach_msg_type_name_t msgt_name;};
struct __Request__mach_voucher_debug_info_t {mach_msg_header_t Head;NDR_record_t NDR;mach_port_name_t voucher_name;mach_msg_type_number_t recipesCnt;};
struct __Request__thread_set_special_port_t {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t special_port;NDR_record_t NDR;int which_port;};
struct __Request__mach_port_allocate_qos_t {mach_msg_header_t Head;NDR_record_t NDR;mach_port_right_t right;mach_port_qos_t qos;};
struct __Reply__mach_zone_info_for_zone_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;mach_zone_info_t info;};
struct __Request__host_set_special_port_t {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t port;NDR_record_t NDR;int which;};
struct __Request__mach_port_set_context_t {mach_msg_header_t Head;NDR_record_t NDR;mach_port_name_t name;mach_port_context_t context;};
struct __Request__mach_port_set_mscount_t {mach_msg_header_t Head;NDR_record_t NDR;mach_port_name_t name;mach_port_mscount_t mscount;};
struct __Request__task_create_suid_cred_t {mach_msg_header_t Head;NDR_record_t NDR;mach_msg_type_number_t pathOffset;mach_msg_type_number_t pathCnt;char path[1024];suid_cred_uid_t uid;};
struct __Request__task_set_special_port_t {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t special_port;NDR_record_t NDR;int which_port;};
struct mach_port_destroyed_notification_t {mach_msg_header_t not_header;mach_msg_body_t not_body;mach_msg_port_descriptor_t not_port;mach_msg_format_0_trailer_t trailer;};
struct __Request__clock_get_attributes_t {mach_msg_header_t Head;NDR_record_t NDR;clock_flavor_t flavor;mach_msg_type_number_t clock_attrCnt;};
struct __Request__clock_set_attributes_t {mach_msg_header_t Head;NDR_record_t NDR;clock_flavor_t flavor;mach_msg_type_number_t clock_attrCnt;int clock_attr[1];};
struct __Request__host_priv_statistics_t {mach_msg_header_t Head;NDR_record_t NDR;host_flavor_t flavor;mach_msg_type_number_t host_info_outCnt;};
struct __Request__mach_port_swap_guard_t {mach_msg_header_t Head;NDR_record_t NDR;mach_port_name_t name;mach_port_context_t old_guard;mach_port_context_t new_guard;};
struct mach_send_possible_notification_t {mach_msg_header_t not_header;NDR_record_t NDR;mach_port_name_t not_port;mach_msg_format_0_trailer_t trailer;};
struct __Reply__mach_port_get_context_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;mach_port_context_t context;};
struct __Reply__mach_port_get_srights_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;mach_port_rights_t srights;};
struct __Request__mach_port_set_seqno_t {mach_msg_header_t Head;NDR_record_t NDR;mach_port_name_t name;mach_port_seqno_t seqno;};
struct __Request__vm_purgable_control_t {mach_msg_header_t Head;NDR_record_t NDR;vm_address_t address;vm_purgable_t control;int state;};
struct mach_port_deleted_notification_t {mach_msg_header_t not_header;NDR_record_t NDR;mach_port_name_t not_port;mach_msg_format_0_trailer_t trailer;};
struct __Reply__clock_get_attributes_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;mach_msg_type_number_t clock_attrCnt;int clock_attr[1];};
struct __Reply__vm_machine_attribute_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;vm_machine_attribute_val_t value;};
struct __Request__mach_port_get_refs_t {mach_msg_header_t Head;NDR_record_t NDR;mach_port_name_t name;mach_port_right_t right;};
struct __Reply__host_kernel_version_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;mach_msg_type_number_t kernel_versionOffset;mach_msg_type_number_t kernel_versionCnt;char kernel_version[512];};
struct __Reply__mach_port_construct_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;mach_port_name_t name;};
struct __Request__host_statistics64_t {mach_msg_header_t Head;NDR_record_t NDR;host_flavor_t flavor;mach_msg_type_number_t host_info64_outCnt;};
struct __Request__mach_port_unguard_t {mach_msg_header_t Head;NDR_record_t NDR;mach_port_name_t name;mach_port_context_t guard;};
struct __Request__processor_control_t {mach_msg_header_t Head;NDR_record_t NDR;mach_msg_type_number_t processor_cmdCnt;integer_t processor_cmd[20];};
struct __Request__vm_read_overwrite_t {mach_msg_header_t Head;NDR_record_t NDR;vm_address_t address;vm_size_t size;vm_address_t data;};
struct mach_no_senders_notification_t {mach_msg_header_t not_header;NDR_record_t NDR;mach_msg_type_number_t not_count;mach_msg_format_0_trailer_t trailer;};
struct __Reply__host_get_boot_info_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;mach_msg_type_number_t boot_infoOffset;mach_msg_type_number_t boot_infoCnt;char boot_info[4096];};
struct __Reply__mach_port_allocate_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;mach_port_name_t name;};
struct __Reply__mach_port_get_refs_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;mach_port_urefs_t refs;};
struct __Reply__task_purgable_info_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;task_purgable_info_t stats;};
struct __Request__thread_get_state_t {mach_msg_header_t Head;NDR_record_t NDR;thread_state_flavor_t flavor;mach_msg_type_number_t old_stateCnt;};
struct mach_dead_name_notification_t {mach_msg_header_t not_header;NDR_record_t NDR;mach_port_name_t not_port;mach_msg_format_0_trailer_t trailer;};
struct mach_voucher_attr_recipe_data {mach_voucher_attr_key_t key;mach_voucher_attr_recipe_command_t command;mach_voucher_name_t previous_voucher;mach_voucher_attr_content_size_t content_size;};
struct __Reply__vm_map_page_query_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;integer_t disposition;integer_t ref_count;};
struct __Reply__vm_read_overwrite_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;vm_size_t outsize;};
struct __Request__host_statistics_t {mach_msg_header_t Head;NDR_record_t NDR;host_flavor_t flavor;mach_msg_type_number_t host_info_outCnt;};
struct __Request__processor_info_t {mach_msg_header_t Head;NDR_record_t NDR;processor_flavor_t flavor;mach_msg_type_number_t processor_info_outCnt;};
struct __Request__task_get_state_t {mach_msg_header_t Head;NDR_record_t NDR;thread_state_flavor_t flavor;mach_msg_type_number_t old_stateCnt;};
struct __Reply___host_page_size_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;vm_size_t out_page_size;};
struct __Reply__vm_allocate_cpm_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;vm_address_t address;};
struct __Request__act_set_state_t {mach_msg_header_t Head;NDR_record_t NDR;int flavor;mach_msg_type_number_t new_stateCnt;natural_t new_state[1296];};
struct __Request__vm_deallocate_t {mach_msg_header_t Head;NDR_record_t NDR;vm_address_t address;vm_size_t size;};
struct __Reply__clock_get_time_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;mach_timespec_t cur_time;};
struct __Reply__mach_port_type_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;mach_port_type_t ptype;};
struct __Request__task_inspect_t {mach_msg_header_t Head;NDR_record_t NDR;task_inspect_flavor_t flavor;mach_msg_type_number_t info_outCnt;};
struct __Request__vm_read_list_t {mach_msg_header_t Head;NDR_record_t NDR;vm_read_entry_t data_list;natural_t count;};
struct __Request__thread_info_t {mach_msg_header_t Head;NDR_record_t NDR;thread_flavor_t flavor;mach_msg_type_number_t thread_info_outCnt;};
struct __Request__vm_allocate_t {mach_msg_header_t Head;NDR_record_t NDR;vm_address_t address;vm_size_t size;int flags;};
struct __Reply__vm_read_list_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;vm_read_entry_t data_list;};
struct __Reply__kmod_create_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;kmod_t module;};
struct __Reply__vm_allocate_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;vm_address_t address;};
struct __Request__host_info_t {mach_msg_header_t Head;NDR_record_t NDR;host_flavor_t flavor;mach_msg_type_number_t host_info_outCnt;};
struct __Request__task_info_t {mach_msg_header_t Head;NDR_record_t NDR;task_flavor_t flavor;mach_msg_type_number_t task_info_outCnt;};
struct __Reply__vm_map_64_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;vm_address_t address;};
struct __Request__vm_copy_t {mach_msg_header_t Head;NDR_record_t NDR;vm_address_t source_address;vm_size_t size;vm_address_t dest_address;};
struct __Request__vm_read_t {mach_msg_header_t Head;NDR_record_t NDR;vm_address_t address;vm_size_t size;};
struct __Reply__vm_map_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;vm_address_t address;};
struct PropTable {Fixed version;UInt16 format;PropCharProperties defaultProps;SFNTLookupTable lookup;};
struct xinpcb {u_int32_t xi_len;inpcb xi_inp;xsocket xi_socket;u_quad_t xi_alignment_hack;};
struct icmp {u_char icmp_type;u_char icmp_code;u_short icmp_cksum;icmp___C4DAEE47A1B4C5B2D295BC56AED6DB45 icmp_hun;icmp___B235664BFCA97AAED3CE94418077D709 icmp_dun;};
struct __Request__host_register_mach_voucher_attr_manager_t {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t attr_manager;NDR_record_t NDR;mach_voucher_attr_value_handle_t default_value;};
struct __Reply__host_register_mach_voucher_attr_manager_t {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t new_attr_control;NDR_record_t NDR;mach_voucher_attr_key_t new_key;};
struct __Reply__mach_voucher_extract_all_attr_recipes_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;mach_msg_type_number_t recipesCnt;uint8_t recipes[5120];};
struct __Request__task_unregister_dyld_image_infos_t {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_ool_descriptor_t dyld_images;NDR_record_t NDR;mach_msg_type_number_t dyld_imagesCnt;};
struct __Reply__mach_voucher_extract_attr_content_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;mach_msg_type_number_t contentCnt;uint8_t content[4096];};
struct __Reply__host_virtual_physical_table_info_t {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_ool_descriptor_t info;NDR_record_t NDR;mach_msg_type_number_t infoCnt;};
struct __Reply__mach_voucher_extract_attr_recipe_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;mach_msg_type_number_t recipeCnt;uint8_t recipe[4096];};
struct __Request__task_register_dyld_image_infos_t {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_ool_descriptor_t dyld_images;NDR_record_t NDR;mach_msg_type_number_t dyld_imagesCnt;};
struct __Reply__processor_set_tasks_with_flavor_t {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_ool_ports_descriptor_t task_list;NDR_record_t NDR;mach_msg_type_number_t task_listCnt;};
struct __Reply__exception_raise_state_identity_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;int flavor;mach_msg_type_number_t new_stateCnt;natural_t new_state[1296];};
struct __Request__host_default_memory_manager_t {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t default_manager;NDR_record_t NDR;memory_object_cluster_size_t cluster_size;};
struct __Request__thread_convert_thread_state_t {mach_msg_header_t Head;NDR_record_t NDR;int direction;thread_state_flavor_t flavor;mach_msg_type_number_t in_stateCnt;natural_t in_state[1296];mach_msg_type_number_t out_stateCnt;};
struct __Request__mach_port_guard_with_flags_t {mach_msg_header_t Head;NDR_record_t NDR;mach_port_name_t name;mach_port_context_t guard;uint64_t flags;};
struct __Reply__thread_convert_thread_state_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;mach_msg_type_number_t out_stateCnt;natural_t out_state[1296];};
union __RequestUnion__mach_voucher_subsystem {__Request__mach_voucher_extract_attr_content_t Request_mach_voucher_extract_attr_content;__Request__mach_voucher_extract_attr_recipe_t Request_mach_voucher_extract_attr_recipe;__Request__mach_voucher_extract_all_attr_recipes_t Request_mach_voucher_extract_all_attr_recipes;__Request__mach_voucher_attr_command_t Request_mach_voucher_attr_command;__Request__mach_voucher_debug_info_t Request_mach_voucher_debug_info;};
struct __Request__host_request_notification_t {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t notify_port;NDR_record_t NDR;host_flavor_t notify_type;};
struct __Request__task_set_emulation_vector_t {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_ool_descriptor_t emulation_vector;NDR_record_t NDR;int vector_start;mach_msg_type_number_t emulation_vectorCnt;};
struct __Request__mach_port_get_attributes_t {mach_msg_header_t Head;NDR_record_t NDR;mach_port_name_t name;mach_port_flavor_t flavor;mach_msg_type_number_t port_info_outCnt;};
struct __Reply__mach_make_memory_entry_64_t {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t object_handle;NDR_record_t NDR;memory_object_size_t size;};
struct __Reply__mach_voucher_attr_command_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;mach_msg_type_number_t out_contentCnt;uint8_t out_content[4096];};
struct __Reply__processor_set_stack_usage_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;unsigned int ltotal;vm_size_t space;vm_size_t resident;vm_size_t maxusage;vm_offset_t maxstack;};
struct __Reply__task_get_dyld_image_infos_t {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_ool_descriptor_t dyld_images;NDR_record_t NDR;mach_msg_type_number_t dyld_imagesCnt;};
struct __Reply__task_get_emulation_vector_t {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_ool_descriptor_t emulation_vector;NDR_record_t NDR;int vector_start;mach_msg_type_number_t emulation_vectorCnt;};
struct __Reply__mach_port_get_attributes_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;mach_msg_type_number_t port_info_outCnt;integer_t port_info_out[17];};
struct __Reply__mach_port_get_set_status_t {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_ool_descriptor_t members;NDR_record_t NDR;mach_msg_type_number_t membersCnt;};
struct __Reply__processor_set_statistics_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;mach_msg_type_number_t info_outCnt;integer_t info_out[5];};
struct __Request__mach_port_insert_right_t {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t poly;NDR_record_t NDR;mach_port_name_t name;};
struct __Reply__mach_port_allocate_full_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;mach_port_qos_t qos;mach_port_name_t name;};
struct __Reply__mach_voucher_debug_info_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;mach_msg_type_number_t recipesCnt;uint8_t recipes[5120];};
struct __Reply__task_map_corpse_info_64_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;mach_vm_address_t kcd_addr_begin;mach_vm_size_t kcd_size;};
struct __Request__thread_create_running_t {mach_msg_header_t Head;NDR_record_t NDR;thread_state_flavor_t flavor;mach_msg_type_number_t new_stateCnt;natural_t new_state[1296];};
struct __Reply__mach_make_memory_entry_t {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t object_handle;NDR_record_t NDR;vm_size_t size;};
struct __Reply__mach_port_allocate_qos_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;mach_port_qos_t qos;mach_port_name_t name;};
struct __Request__vm_region_recurse_64_t {mach_msg_header_t Head;NDR_record_t NDR;vm_address_t address;natural_t nesting_depth;mach_msg_type_number_t infoCnt;};
struct __Reply__exception_raise_state_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;int flavor;mach_msg_type_number_t new_stateCnt;natural_t new_state[1296];};
struct __Reply__processor_set_threads_t {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_ool_ports_descriptor_t thread_list;NDR_record_t NDR;mach_msg_type_number_t thread_listCnt;};
struct __Request__mach_port_construct_t {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_ool_descriptor_t options;NDR_record_t NDR;mach_port_context_t context;};
struct __Request__mach_ports_register_t {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_ool_ports_descriptor_t init_port_set;NDR_record_t NDR;mach_msg_type_number_t init_port_setCnt;};
struct __Reply__host_priv_statistics_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;mach_msg_type_number_t host_info_outCnt;integer_t host_info_out[68];};
struct __Reply__task_map_corpse_info_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;vm_address_t kcd_addr_begin;uint32_t kcd_size;};
struct __Reply__vm_mapped_pages_info_t {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_ool_descriptor_t pages;NDR_record_t NDR;mach_msg_type_number_t pagesCnt;};
struct __Request__mach_port_destruct_t {mach_msg_header_t Head;NDR_record_t NDR;mach_port_name_t name;mach_port_delta_t srdelta;mach_port_context_t guard;};
struct __Request__mach_port_mod_refs_t {mach_msg_header_t Head;NDR_record_t NDR;mach_port_name_t name;mach_port_right_t right;mach_port_delta_t delta;};
struct __Reply__host_lockgroup_info_t {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_ool_descriptor_t lockgroup_info;NDR_record_t NDR;mach_msg_type_number_t lockgroup_infoCnt;};
struct __Reply__host_processor_sets_t {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_ool_ports_descriptor_t processor_sets;NDR_record_t NDR;mach_msg_type_number_t processor_setsCnt;};
struct __Reply__processor_set_tasks_t {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_ool_ports_descriptor_t task_list;NDR_record_t NDR;mach_msg_type_number_t task_listCnt;};
struct __Request__clock_alarm_reply_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t alarm_code;alarm_type_t alarm_type;mach_timespec_t alarm_time;};
struct __Request__thread_policy_get_t {mach_msg_header_t Head;NDR_record_t NDR;thread_policy_flavor_t flavor;mach_msg_type_number_t policy_infoCnt;boolean_t get_default;};
struct __Request__thread_policy_set_t {mach_msg_header_t Head;NDR_record_t NDR;thread_policy_flavor_t flavor;mach_msg_type_number_t policy_infoCnt;integer_t policy_info[16];};
struct __Request__vm_region_recurse_t {mach_msg_header_t Head;NDR_record_t NDR;vm_address_t address;natural_t nesting_depth;mach_msg_type_number_t infoCnt;};
struct __Request__processor_assign_t {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t new_set;NDR_record_t NDR;boolean_t wait;};
struct __Request__thread_set_state_t {mach_msg_header_t Head;NDR_record_t NDR;thread_state_flavor_t flavor;mach_msg_type_number_t new_stateCnt;natural_t new_state[1296];};
struct __Reply__host_statistics64_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;mach_msg_type_number_t host_info64_outCnt;integer_t host_info64_out[256];};
struct __Reply__mach_port_kobject_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;natural_t object_type;mach_vm_address_t object_addr;};
struct __Reply__mach_ports_lookup_t {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_ool_ports_descriptor_t init_port_set;NDR_record_t NDR;mach_msg_type_number_t init_port_setCnt;};
struct __Request__mach_port_guard_t {mach_msg_header_t Head;NDR_record_t NDR;mach_port_name_t name;mach_port_context_t guard;boolean_t strict;};
struct __Request__task_policy_get_t {mach_msg_header_t Head;NDR_record_t NDR;task_policy_flavor_t flavor;mach_msg_type_number_t policy_infoCnt;boolean_t get_default;};
struct __Request__task_policy_set_t {mach_msg_header_t Head;NDR_record_t NDR;task_policy_flavor_t flavor;mach_msg_type_number_t policy_infoCnt;integer_t policy_info[16];};
struct __Request__vm_behavior_set_t {mach_msg_header_t Head;NDR_record_t NDR;vm_address_t address;vm_size_t size;vm_behavior_t new_behavior;};
struct __Reply__mach_memory_info_t {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_ool_descriptor_t names;mach_msg_ool_descriptor_t info;mach_msg_ool_descriptor_t memory_info;NDR_record_t NDR;mach_msg_type_number_t namesCnt;mach_msg_type_number_t infoCnt;mach_msg_type_number_t memory_infoCnt;};
struct __Reply__thread_get_state_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;mach_msg_type_number_t old_stateCnt;natural_t old_state[1296];};
struct __Request__task_set_state_t {mach_msg_header_t Head;NDR_record_t NDR;thread_state_flavor_t flavor;mach_msg_type_number_t new_stateCnt;natural_t new_state[1296];};
struct __Reply__host_processors_t {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_ool_ports_descriptor_t out_processor_list;NDR_record_t NDR;mach_msg_type_number_t out_processor_listCnt;};
struct __Reply__host_statistics_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;mach_msg_type_number_t host_info_outCnt;integer_t host_info_out[68];};
struct __Reply__mach_port_names_t {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_ool_descriptor_t names;mach_msg_ool_descriptor_t types;NDR_record_t NDR;mach_msg_type_number_t namesCnt;mach_msg_type_number_t typesCnt;};
struct __Request__task_set_info_t {mach_msg_header_t Head;NDR_record_t NDR;task_flavor_t flavor;mach_msg_type_number_t task_info_inCnt;integer_t task_info_in[87];};
struct __Reply__mach_zone_info_t {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_ool_descriptor_t names;mach_msg_ool_descriptor_t info;NDR_record_t NDR;mach_msg_type_number_t namesCnt;mach_msg_type_number_t infoCnt;};
struct __Reply__task_get_state_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;mach_msg_type_number_t old_stateCnt;natural_t old_state[1296];};
struct __Reply__task_zone_info_t {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_ool_descriptor_t names;mach_msg_ool_descriptor_t info;NDR_record_t NDR;mach_msg_type_number_t namesCnt;mach_msg_type_number_t infoCnt;};
struct __Request__vm_region_64_t {mach_msg_header_t Head;NDR_record_t NDR;vm_address_t address;vm_region_flavor_t flavor;mach_msg_type_number_t infoCnt;};
struct __Reply__act_get_state_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;mach_msg_type_number_t old_stateCnt;natural_t old_state[1296];};
struct __Reply__kmod_get_info_t {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_ool_descriptor_t modules;NDR_record_t NDR;mach_msg_type_number_t modulesCnt;};
struct __Request__task_assign_t {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t new_set;NDR_record_t NDR;boolean_t assign_threads;};
struct __Request__thread_wire_t {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t thread;NDR_record_t NDR;boolean_t wired;};
struct __Reply__kmod_control_t {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_ool_descriptor_t data;NDR_record_t NDR;mach_msg_type_number_t dataCnt;};
struct __Reply__task_inspect_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;mach_msg_type_number_t info_outCnt;integer_t info_out[4];};
struct __Reply__task_threads_t {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_ool_ports_descriptor_t act_list;NDR_record_t NDR;mach_msg_type_number_t act_listCnt;};
struct __Request__vm_inherit_t {mach_msg_header_t Head;NDR_record_t NDR;vm_address_t address;vm_size_t size;vm_inherit_t new_inheritance;};
struct __Reply__thread_info_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;mach_msg_type_number_t thread_info_outCnt;integer_t thread_info_out[32];};
struct __Request__vm_region_t {mach_msg_header_t Head;NDR_record_t NDR;vm_address_t address;vm_region_flavor_t flavor;mach_msg_type_number_t infoCnt;};
struct __Request__vm_msync_t {mach_msg_header_t Head;NDR_record_t NDR;vm_address_t address;vm_size_t size;vm_sync_t sync_flags;};
union mach_msg_descriptor_t {mach_msg_port_descriptor_t port;mach_msg_ool_descriptor_t out_of_line;mach_msg_ool_ports_descriptor_t ool_ports;mach_msg_type_descriptor_t type;mach_msg_guarded_port_descriptor_t guarded_port;};
struct __Reply__host_info_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;mach_msg_type_number_t host_info_outCnt;integer_t host_info_out[68];};
struct __Reply__task_info_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;mach_msg_type_number_t task_info_outCnt;integer_t task_info_out[87];};
struct __Reply__vm_remap_t {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;vm_address_t target_address;vm_prot_t cur_protection;vm_prot_t max_protection;};
struct __Reply__vm_read_t {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_ool_descriptor_t data;NDR_record_t NDR;mach_msg_type_number_t dataCnt;};
struct xtcpcb {u_int32_t xt_len;inpcb xt_inp;tcpcb xt_tp;xsocket xt_socket;u_quad_t xt_alignment_hack;};
struct __Request__host_register_well_known_mach_voucher_attr_manager_t {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t attr_manager;NDR_record_t NDR;mach_voucher_attr_value_handle_t default_value;mach_voucher_attr_key_t key;};
struct __Request__host_security_set_task_token_t {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t target_task;mach_msg_port_descriptor_t host;NDR_record_t NDR;security_token_t sec_token;audit_token_t audit_token;};
union __RequestUnion__processor_subsystem {__Request__processor_start_t Request_processor_start;__Request__processor_exit_t Request_processor_exit;__Request__processor_info_t Request_processor_info;__Request__processor_control_t Request_processor_control;__Request__processor_assign_t Request_processor_assign;__Request__processor_get_assignment_t Request_processor_get_assignment;};
union __RequestUnion__lock_set_subsystem {__Request__lock_acquire_t Request_lock_acquire;__Request__lock_release_t Request_lock_release;__Request__lock_try_t Request_lock_try;__Request__lock_make_stable_t Request_lock_make_stable;__Request__lock_handoff_t Request_lock_handoff;__Request__lock_handoff_accept_t Request_lock_handoff_accept;};
struct __Reply__mach_vm_region_info_64_t {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_ool_descriptor_t objects;NDR_record_t NDR;vm_info_region_64_t region;mach_msg_type_number_t objectsCnt;};
union __ReplyUnion__lock_set_subsystem {__Reply__lock_acquire_t Reply_lock_acquire;__Reply__lock_release_t Reply_lock_release;__Reply__lock_try_t Reply_lock_try;__Reply__lock_make_stable_t Reply_lock_make_stable;__Reply__lock_handoff_t Reply_lock_handoff;__Reply__lock_handoff_accept_t Reply_lock_handoff_accept;};
struct __Reply__mach_port_space_info_t {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_ool_descriptor_t table_info;mach_msg_ool_descriptor_t tree_info;NDR_record_t NDR;ipc_info_space_t space_info;mach_msg_type_number_t table_infoCnt;mach_msg_type_number_t tree_infoCnt;};
struct __Reply__host_processor_info_t {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_ool_descriptor_t out_processor_info;NDR_record_t NDR;natural_t out_processor_count;mach_msg_type_number_t out_processor_infoCnt;};
struct __Reply__mach_vm_region_info_t {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_ool_descriptor_t objects;NDR_record_t NDR;vm_info_region_t region;mach_msg_type_number_t objectsCnt;};
struct __Reply__processor_set_info_t {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t host;NDR_record_t NDR;mach_msg_type_number_t info_outCnt;integer_t info_out[5];};
struct __Request__vm_allocate_cpm_t {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t task;NDR_record_t NDR;vm_address_t address;vm_size_t size;int flags;};
struct __Reply__processor_info_t {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t host;NDR_record_t NDR;mach_msg_type_number_t processor_info_outCnt;integer_t processor_info_out[20];};
struct __Request__kext_request_t {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_ool_descriptor_t request_data;NDR_record_t NDR;uint32_t user_log_flags;mach_msg_type_number_t request_dataCnt;};
struct __Request__clock_alarm_t {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t alarm_port;NDR_record_t NDR;alarm_type_t alarm_type;mach_timespec_t alarm_time;};
struct __Request__task_create_t {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_ool_ports_descriptor_t ledgers;NDR_record_t NDR;mach_msg_type_number_t ledgersCnt;boolean_t inherit_memory;};
struct __Reply__kext_request_t {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_ool_descriptor_t response_data;mach_msg_ool_descriptor_t log_data;NDR_record_t NDR;mach_msg_type_number_t response_dataCnt;mach_msg_type_number_t log_dataCnt;kern_return_t op_result;};
struct __Request__vm_write_t {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_ool_descriptor_t data;NDR_record_t NDR;vm_address_t address;mach_msg_type_number_t dataCnt;};
struct __Request__mach_memory_object_memory_entry_64_t {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t pager;NDR_record_t NDR;boolean_t internal;memory_object_size_t size;vm_prot_t permission;};
struct std____1__basic_streambuf_wchar_t__vtbl_layout; 
struct __Request__mach_memory_object_memory_entry_t {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t pager;NDR_record_t NDR;boolean_t internal;vm_size_t size;vm_prot_t permission;};
struct __Request__mach_port_request_notification_t {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t notify;NDR_record_t NDR;mach_port_name_t name;mach_msg_id_t msgid;mach_port_mscount_t sync;};
struct __Request__thread_swap_exception_ports_t {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t new_port;NDR_record_t NDR;exception_mask_t exception_mask;exception_behavior_t behavior;thread_state_flavor_t new_flavor;};
struct __Request__thread_set_exception_ports_t {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t new_port;NDR_record_t NDR;exception_mask_t exception_mask;exception_behavior_t behavior;thread_state_flavor_t new_flavor;};
struct std____1__basic_streambuf_wchar_t__vtbl; 
struct __Request__host_swap_exception_ports_t {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t new_port;NDR_record_t NDR;exception_mask_t exception_mask;exception_behavior_t behavior;thread_state_flavor_t new_flavor;};
struct __Request__mach_make_memory_entry_64_t {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t parent_entry;NDR_record_t NDR;memory_object_size_t size;memory_object_offset_t offset;vm_prot_t permission;};
struct __Request__task_swap_exception_ports_t {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t new_port;NDR_record_t NDR;exception_mask_t exception_mask;exception_behavior_t behavior;thread_state_flavor_t new_flavor;};
struct __Request__host_set_exception_ports_t {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t new_port;NDR_record_t NDR;exception_mask_t exception_mask;exception_behavior_t behavior;thread_state_flavor_t new_flavor;};
struct __Request__task_set_exception_ports_t {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t new_port;NDR_record_t NDR;exception_mask_t exception_mask;exception_behavior_t behavior;thread_state_flavor_t new_flavor;};
struct __Request__mach_port_allocate_full_t {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t proto;NDR_record_t NDR;mach_port_right_t right;mach_port_qos_t qos;mach_port_name_t name;};
struct __Request__mach_make_memory_entry_t {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t parent_entry;NDR_record_t NDR;vm_size_t size;vm_offset_t offset;vm_prot_t permission;};
struct __Request__thread_set_policy_t {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t pset;NDR_record_t NDR;policy_t policy;mach_msg_type_number_t baseCnt;integer_t base[5];mach_msg_type_number_t limitCnt;integer_t limit[1];};
struct __Request__exception_raise_t {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t thread;mach_msg_port_descriptor_t task;NDR_record_t NDR;exception_type_t exception;mach_msg_type_number_t codeCnt;integer_t code[2];};
struct __Request__kmod_control_t {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_ool_descriptor_t data;NDR_record_t NDR;kmod_t module;kmod_control_flavor_t flavor;mach_msg_type_number_t dataCnt;};
struct __Request__mach_vm_wire_t {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t task;NDR_record_t NDR;mach_vm_address_t address;mach_vm_size_t size;vm_prot_t desired_access;};
struct __Reply__vm_region_64_t {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t object_name;NDR_record_t NDR;vm_address_t address;vm_size_t size;mach_msg_type_number_t infoCnt;int info[10];};
struct __Reply__vm_region_t {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t object_name;NDR_record_t NDR;vm_address_t address;vm_size_t size;mach_msg_type_number_t infoCnt;int info[10];};
struct __Request__vm_wire_t {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t task;NDR_record_t NDR;vm_address_t address;vm_size_t size;vm_prot_t desired_access;};
struct std____1__basic_stringbuf_wchar_t__vtbl_layout; 
struct __Request__exception_raise_state_identity_t {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t thread;mach_msg_port_descriptor_t task;NDR_record_t NDR;exception_type_t exception;mach_msg_type_number_t codeCnt;integer_t code[2];int flavor;mach_msg_type_number_t old_stateCnt;natural_t old_state[1296];};
struct std____1__basic_stringbuf_wchar_t__vtbl; 
struct __Reply__thread_swap_exception_ports_t {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t old_handlers[32];NDR_record_t NDR;mach_msg_type_number_t masksCnt;exception_mask_t masks[32];exception_behavior_t old_behaviors[32];thread_state_flavor_t old_flavors[32];};
struct __Reply__thread_get_exception_ports_t {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t old_handlers[32];NDR_record_t NDR;mach_msg_type_number_t masksCnt;exception_mask_t masks[32];exception_behavior_t old_behaviors[32];thread_state_flavor_t old_flavors[32];};
struct __Reply__host_swap_exception_ports_t {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t old_handlerss[32];NDR_record_t NDR;mach_msg_type_number_t masksCnt;exception_mask_t masks[32];exception_behavior_t old_behaviors[32];thread_state_flavor_t old_flavors[32];};
struct __Reply__task_swap_exception_ports_t {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t old_handlerss[32];NDR_record_t NDR;mach_msg_type_number_t masksCnt;exception_mask_t masks[32];exception_behavior_t old_behaviors[32];thread_state_flavor_t old_flavors[32];};
struct __Reply__host_get_exception_ports_t {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t old_handlers[32];NDR_record_t NDR;mach_msg_type_number_t masksCnt;exception_mask_t masks[32];exception_behavior_t old_behaviors[32];thread_state_flavor_t old_flavors[32];};
struct __Reply__task_get_exception_ports_t {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t old_handlers[32];NDR_record_t NDR;mach_msg_type_number_t masksCnt;exception_mask_t masks[32];exception_behavior_t old_behaviors[32];thread_state_flavor_t old_flavors[32];};
struct __Request__task_set_policy_t {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t pset;NDR_record_t NDR;policy_t policy;mach_msg_type_number_t baseCnt;integer_t base[5];mach_msg_type_number_t limitCnt;integer_t limit[1];boolean_t change;};
struct __Request__vm_remap_t {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t src_task;NDR_record_t NDR;vm_address_t target_address;vm_size_t size;vm_address_t mask;int flags;vm_address_t src_address;boolean_t copy;vm_inherit_t inheritance;};
struct __Request__host_security_create_task_token_t {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t parent_task;mach_msg_port_descriptor_t host;mach_msg_ool_ports_descriptor_t ledgers;NDR_record_t NDR;security_token_t sec_token;audit_token_t audit_token;mach_msg_type_number_t ledgersCnt;boolean_t inherit_memory;};
struct __Request__vm_map_64_t {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t object;NDR_record_t NDR;vm_address_t address;vm_size_t size;vm_address_t mask;int flags;memory_object_offset_t offset;boolean_t copy;vm_prot_t cur_protection;vm_prot_t max_protection;vm_inherit_t inheritance;};
struct __Request__vm_map_t {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t object;NDR_record_t NDR;vm_address_t address;vm_size_t size;vm_address_t mask;int flags;vm_offset_t offset;boolean_t copy;vm_prot_t cur_protection;vm_prot_t max_protection;vm_inherit_t inheritance;};
union __RequestUnion__processor_set_subsystem {__Request__processor_set_statistics_t Request_processor_set_statistics;__Request__processor_set_destroy_t Request_processor_set_destroy;__Request__processor_set_max_priority_t Request_processor_set_max_priority;__Request__processor_set_policy_enable_t Request_processor_set_policy_enable;__Request__processor_set_policy_disable_t Request_processor_set_policy_disable;__Request__processor_set_tasks_t Request_processor_set_tasks;__Request__processor_set_threads_t Request_processor_set_threads;__Request__processor_set_policy_control_t Request_processor_set_policy_control;__Request__processor_set_stack_usage_t Request_processor_set_stack_usage;__Request__processor_set_info_t Request_processor_set_info;__Request__processor_set_tasks_with_flavor_t Request_processor_set_tasks_with_flavor;};
union __ReplyUnion__processor_set_subsystem {__Reply__processor_set_statistics_t Reply_processor_set_statistics;__Reply__processor_set_destroy_t Reply_processor_set_destroy;__Reply__processor_set_max_priority_t Reply_processor_set_max_priority;__Reply__processor_set_policy_enable_t Reply_processor_set_policy_enable;__Reply__processor_set_policy_disable_t Reply_processor_set_policy_disable;__Reply__processor_set_tasks_t Reply_processor_set_tasks;__Reply__processor_set_threads_t Reply_processor_set_threads;__Reply__processor_set_policy_control_t Reply_processor_set_policy_control;__Reply__processor_set_stack_usage_t Reply_processor_set_stack_usage;__Reply__processor_set_info_t Reply_processor_set_info;__Reply__processor_set_tasks_with_flavor_t Reply_processor_set_tasks_with_flavor;};
union __RequestUnion__host_priv_subsystem {__Request__host_get_boot_info_t Request_host_get_boot_info;__Request__host_reboot_t Request_host_reboot;__Request__host_priv_statistics_t Request_host_priv_statistics;__Request__host_default_memory_manager_t Request_host_default_memory_manager;__Request__vm_wire_t Request_vm_wire;__Request__thread_wire_t Request_thread_wire;__Request__vm_allocate_cpm_t Request_vm_allocate_cpm;__Request__host_processors_t Request_host_processors;__Request__host_get_clock_control_t Request_host_get_clock_control;__Request__kmod_create_t Request_kmod_create;__Request__kmod_destroy_t Request_kmod_destroy;__Request__kmod_control_t Request_kmod_control;__Request__host_get_special_port_t Request_host_get_special_port;__Request__host_set_special_port_t Request_host_set_special_port;__Request__host_set_exception_ports_t Request_host_set_exception_ports;__Request__host_get_exception_ports_t Request_host_get_exception_ports;__Request__host_swap_exception_ports_t Request_host_swap_exception_ports;__Request__mach_vm_wire_t Request_mach_vm_wire;__Request__host_processor_sets_t Request_host_processor_sets;__Request__host_processor_set_priv_t Request_host_processor_set_priv;__Request__host_set_UNDServer_t Request_host_set_UNDServer;__Request__host_get_UNDServer_t Request_host_get_UNDServer;__Request__kext_request_t Request_kext_request;};
union __ReplyUnion__host_priv_subsystem {__Reply__host_get_boot_info_t Reply_host_get_boot_info;__Reply__host_reboot_t Reply_host_reboot;__Reply__host_priv_statistics_t Reply_host_priv_statistics;__Reply__host_default_memory_manager_t Reply_host_default_memory_manager;__Reply__vm_wire_t Reply_vm_wire;__Reply__thread_wire_t Reply_thread_wire;__Reply__vm_allocate_cpm_t Reply_vm_allocate_cpm;__Reply__host_processors_t Reply_host_processors;__Reply__host_get_clock_control_t Reply_host_get_clock_control;__Reply__kmod_create_t Reply_kmod_create;__Reply__kmod_destroy_t Reply_kmod_destroy;__Reply__kmod_control_t Reply_kmod_control;__Reply__host_get_special_port_t Reply_host_get_special_port;__Reply__host_set_special_port_t Reply_host_set_special_port;__Reply__host_set_exception_ports_t Reply_host_set_exception_ports;__Reply__host_get_exception_ports_t Reply_host_get_exception_ports;__Reply__host_swap_exception_ports_t Reply_host_swap_exception_ports;__Reply__mach_vm_wire_t Reply_mach_vm_wire;__Reply__host_processor_sets_t Reply_host_processor_sets;__Reply__host_processor_set_priv_t Reply_host_processor_set_priv;__Reply__host_set_UNDServer_t Reply_host_set_UNDServer;__Reply__host_get_UNDServer_t Reply_host_get_UNDServer;__Reply__kext_request_t Reply_kext_request;};
union __RequestUnion__mach_host_subsystem {__Request__host_info_t Request_host_info;__Request__host_kernel_version_t Request_host_kernel_version;__Request___host_page_size_t Request__host_page_size;__Request__mach_memory_object_memory_entry_t Request_mach_memory_object_memory_entry;__Request__host_processor_info_t Request_host_processor_info;__Request__host_get_io_master_t Request_host_get_io_master;__Request__host_get_clock_service_t Request_host_get_clock_service;__Request__kmod_get_info_t Request_kmod_get_info;__Request__host_virtual_physical_table_info_t Request_host_virtual_physical_table_info;__Request__processor_set_default_t Request_processor_set_default;__Request__processor_set_create_t Request_processor_set_create;__Request__mach_memory_object_memory_entry_64_t Request_mach_memory_object_memory_entry_64;__Request__host_statistics_t Request_host_statistics;__Request__host_request_notification_t Request_host_request_notification;__Request__host_lockgroup_info_t Request_host_lockgroup_info;__Request__host_statistics64_t Request_host_statistics64;__Request__mach_zone_info_t Request_mach_zone_info;__Request__host_create_mach_voucher_t Request_host_create_mach_voucher;__Request__host_register_mach_voucher_attr_manager_t Request_host_register_mach_voucher_attr_manager;__Request__host_register_well_known_mach_voucher_attr_manager_t Request_host_register_well_known_mach_voucher_attr_manager;__Request__host_set_atm_diagnostic_flag_t Request_host_set_atm_diagnostic_flag;__Request__host_get_atm_diagnostic_flag_t Request_host_get_atm_diagnostic_flag;__Request__mach_memory_info_t Request_mach_memory_info;__Request__host_set_multiuser_config_flags_t Request_host_set_multiuser_config_flags;__Request__host_get_multiuser_config_flags_t Request_host_get_multiuser_config_flags;__Request__host_check_multiuser_mode_t Request_host_check_multiuser_mode;__Request__mach_zone_info_for_zone_t Request_mach_zone_info_for_zone;};
union __ReplyUnion__mach_host_subsystem {__Reply__host_info_t Reply_host_info;__Reply__host_kernel_version_t Reply_host_kernel_version;__Reply___host_page_size_t Reply__host_page_size;__Reply__mach_memory_object_memory_entry_t Reply_mach_memory_object_memory_entry;__Reply__host_processor_info_t Reply_host_processor_info;__Reply__host_get_io_master_t Reply_host_get_io_master;__Reply__host_get_clock_service_t Reply_host_get_clock_service;__Reply__kmod_get_info_t Reply_kmod_get_info;__Reply__host_virtual_physical_table_info_t Reply_host_virtual_physical_table_info;__Reply__processor_set_default_t Reply_processor_set_default;__Reply__processor_set_create_t Reply_processor_set_create;__Reply__mach_memory_object_memory_entry_64_t Reply_mach_memory_object_memory_entry_64;__Reply__host_statistics_t Reply_host_statistics;__Reply__host_request_notification_t Reply_host_request_notification;__Reply__host_lockgroup_info_t Reply_host_lockgroup_info;__Reply__host_statistics64_t Reply_host_statistics64;__Reply__mach_zone_info_t Reply_mach_zone_info;__Reply__host_create_mach_voucher_t Reply_host_create_mach_voucher;__Reply__host_register_mach_voucher_attr_manager_t Reply_host_register_mach_voucher_attr_manager;__Reply__host_register_well_known_mach_voucher_attr_manager_t Reply_host_register_well_known_mach_voucher_attr_manager;__Reply__host_set_atm_diagnostic_flag_t Reply_host_set_atm_diagnostic_flag;__Reply__host_get_atm_diagnostic_flag_t Reply_host_get_atm_diagnostic_flag;__Reply__mach_memory_info_t Reply_mach_memory_info;__Reply__host_set_multiuser_config_flags_t Reply_host_set_multiuser_config_flags;__Reply__host_get_multiuser_config_flags_t Reply_host_get_multiuser_config_flags;__Reply__host_check_multiuser_mode_t Reply_host_check_multiuser_mode;__Reply__mach_zone_info_for_zone_t Reply_mach_zone_info_for_zone;};
union __RequestUnion__vm_map_subsystem {__Request__vm_region_t Request_vm_region;__Request__vm_allocate_t Request_vm_allocate;__Request__vm_deallocate_t Request_vm_deallocate;__Request__vm_protect_t Request_vm_protect;__Request__vm_inherit_t Request_vm_inherit;__Request__vm_read_t Request_vm_read;__Request__vm_read_list_t Request_vm_read_list;__Request__vm_write_t Request_vm_write;__Request__vm_copy_t Request_vm_copy;__Request__vm_read_overwrite_t Request_vm_read_overwrite;__Request__vm_msync_t Request_vm_msync;__Request__vm_behavior_set_t Request_vm_behavior_set;__Request__vm_map_t Request_vm_map;__Request__vm_machine_attribute_t Request_vm_machine_attribute;__Request__vm_remap_t Request_vm_remap;__Request__task_wire_t Request_task_wire;__Request__mach_make_memory_entry_t Request_mach_make_memory_entry;__Request__vm_map_page_query_t Request_vm_map_page_query;__Request__mach_vm_region_info_t Request_mach_vm_region_info;__Request__vm_mapped_pages_info_t Request_vm_mapped_pages_info;__Request__vm_region_recurse_t Request_vm_region_recurse;__Request__vm_region_recurse_64_t Request_vm_region_recurse_64;__Request__mach_vm_region_info_64_t Request_mach_vm_region_info_64;__Request__vm_region_64_t Request_vm_region_64;__Request__mach_make_memory_entry_64_t Request_mach_make_memory_entry_64;__Request__vm_map_64_t Request_vm_map_64;__Request__vm_purgable_control_t Request_vm_purgable_control;__Request__vm_map_exec_lockdown_t Request_vm_map_exec_lockdown;};
union __ReplyUnion__vm_map_subsystem {__Reply__vm_region_t Reply_vm_region;__Reply__vm_allocate_t Reply_vm_allocate;__Reply__vm_deallocate_t Reply_vm_deallocate;__Reply__vm_protect_t Reply_vm_protect;__Reply__vm_inherit_t Reply_vm_inherit;__Reply__vm_read_t Reply_vm_read;__Reply__vm_read_list_t Reply_vm_read_list;__Reply__vm_write_t Reply_vm_write;__Reply__vm_copy_t Reply_vm_copy;__Reply__vm_read_overwrite_t Reply_vm_read_overwrite;__Reply__vm_msync_t Reply_vm_msync;__Reply__vm_behavior_set_t Reply_vm_behavior_set;__Reply__vm_map_t Reply_vm_map;__Reply__vm_machine_attribute_t Reply_vm_machine_attribute;__Reply__vm_remap_t Reply_vm_remap;__Reply__task_wire_t Reply_task_wire;__Reply__mach_make_memory_entry_t Reply_mach_make_memory_entry;__Reply__vm_map_page_query_t Reply_vm_map_page_query;__Reply__mach_vm_region_info_t Reply_mach_vm_region_info;__Reply__vm_mapped_pages_info_t Reply_vm_mapped_pages_info;__Reply__vm_region_recurse_t Reply_vm_region_recurse;__Reply__vm_region_recurse_64_t Reply_vm_region_recurse_64;__Reply__mach_vm_region_info_64_t Reply_mach_vm_region_info_64;__Reply__vm_region_64_t Reply_vm_region_64;__Reply__mach_make_memory_entry_64_t Reply_mach_make_memory_entry_64;__Reply__vm_map_64_t Reply_vm_map_64;__Reply__vm_purgable_control_t Reply_vm_purgable_control;__Reply__vm_map_exec_lockdown_t Reply_vm_map_exec_lockdown;};
union __RequestUnion__thread_act_subsystem {__Request__thread_terminate_t Request_thread_terminate;__Request__act_get_state_t Request_act_get_state;__Request__act_set_state_t Request_act_set_state;__Request__thread_get_state_t Request_thread_get_state;__Request__thread_set_state_t Request_thread_set_state;__Request__thread_suspend_t Request_thread_suspend;__Request__thread_resume_t Request_thread_resume;__Request__thread_abort_t Request_thread_abort;__Request__thread_abort_safely_t Request_thread_abort_safely;__Request__thread_depress_abort_t Request_thread_depress_abort;__Request__thread_get_special_port_t Request_thread_get_special_port;__Request__thread_set_special_port_t Request_thread_set_special_port;__Request__thread_info_t Request_thread_info;__Request__thread_set_exception_ports_t Request_thread_set_exception_ports;__Request__thread_get_exception_ports_t Request_thread_get_exception_ports;__Request__thread_swap_exception_ports_t Request_thread_swap_exception_ports;__Request__thread_policy_t Request_thread_policy;__Request__thread_policy_set_t Request_thread_policy_set;__Request__thread_policy_get_t Request_thread_policy_get;__Request__thread_sample_t Request_thread_sample;__Request__etap_trace_thread_t Request_etap_trace_thread;__Request__thread_assign_t Request_thread_assign;__Request__thread_assign_default_t Request_thread_assign_default;__Request__thread_get_assignment_t Request_thread_get_assignment;__Request__thread_set_policy_t Request_thread_set_policy;__Request__thread_get_mach_voucher_t Request_thread_get_mach_voucher;__Request__thread_set_mach_voucher_t Request_thread_set_mach_voucher;__Request__thread_swap_mach_voucher_t Request_thread_swap_mach_voucher;__Request__thread_convert_thread_state_t Request_thread_convert_thread_state;};
union __ReplyUnion__thread_act_subsystem {__Reply__thread_terminate_t Reply_thread_terminate;__Reply__act_get_state_t Reply_act_get_state;__Reply__act_set_state_t Reply_act_set_state;__Reply__thread_get_state_t Reply_thread_get_state;__Reply__thread_set_state_t Reply_thread_set_state;__Reply__thread_suspend_t Reply_thread_suspend;__Reply__thread_resume_t Reply_thread_resume;__Reply__thread_abort_t Reply_thread_abort;__Reply__thread_abort_safely_t Reply_thread_abort_safely;__Reply__thread_depress_abort_t Reply_thread_depress_abort;__Reply__thread_get_special_port_t Reply_thread_get_special_port;__Reply__thread_set_special_port_t Reply_thread_set_special_port;__Reply__thread_info_t Reply_thread_info;__Reply__thread_set_exception_ports_t Reply_thread_set_exception_ports;__Reply__thread_get_exception_ports_t Reply_thread_get_exception_ports;__Reply__thread_swap_exception_ports_t Reply_thread_swap_exception_ports;__Reply__thread_policy_t Reply_thread_policy;__Reply__thread_policy_set_t Reply_thread_policy_set;__Reply__thread_policy_get_t Reply_thread_policy_get;__Reply__thread_sample_t Reply_thread_sample;__Reply__etap_trace_thread_t Reply_etap_trace_thread;__Reply__thread_assign_t Reply_thread_assign;__Reply__thread_assign_default_t Reply_thread_assign_default;__Reply__thread_get_assignment_t Reply_thread_get_assignment;__Reply__thread_set_policy_t Reply_thread_set_policy;__Reply__thread_get_mach_voucher_t Reply_thread_get_mach_voucher;__Reply__thread_set_mach_voucher_t Reply_thread_set_mach_voucher;__Reply__thread_swap_mach_voucher_t Reply_thread_swap_mach_voucher;__Reply__thread_convert_thread_state_t Reply_thread_convert_thread_state;};
union __RequestUnion__mach_port_subsystem {__Request__mach_port_names_t Request_mach_port_names;__Request__mach_port_type_t Request_mach_port_type;__Request__mach_port_rename_t Request_mach_port_rename;__Request__mach_port_allocate_name_t Request_mach_port_allocate_name;__Request__mach_port_allocate_t Request_mach_port_allocate;__Request__mach_port_destroy_t Request_mach_port_destroy;__Request__mach_port_deallocate_t Request_mach_port_deallocate;__Request__mach_port_get_refs_t Request_mach_port_get_refs;__Request__mach_port_mod_refs_t Request_mach_port_mod_refs;__Request__mach_port_peek_t Request_mach_port_peek;__Request__mach_port_set_mscount_t Request_mach_port_set_mscount;__Request__mach_port_get_set_status_t Request_mach_port_get_set_status;__Request__mach_port_move_member_t Request_mach_port_move_member;__Request__mach_port_request_notification_t Request_mach_port_request_notification;__Request__mach_port_insert_right_t Request_mach_port_insert_right;__Request__mach_port_extract_right_t Request_mach_port_extract_right;__Request__mach_port_set_seqno_t Request_mach_port_set_seqno;__Request__mach_port_get_attributes_t Request_mach_port_get_attributes;__Request__mach_port_set_attributes_t Request_mach_port_set_attributes;__Request__mach_port_allocate_qos_t Request_mach_port_allocate_qos;__Request__mach_port_allocate_full_t Request_mach_port_allocate_full;__Request__task_set_port_space_t Request_task_set_port_space;__Request__mach_port_get_srights_t Request_mach_port_get_srights;__Request__mach_port_space_info_t Request_mach_port_space_info;__Request__mach_port_dnrequest_info_t Request_mach_port_dnrequest_info;__Request__mach_port_kernel_object_t Request_mach_port_kernel_object;__Request__mach_port_insert_member_t Request_mach_port_insert_member;__Request__mach_port_extract_member_t Request_mach_port_extract_member;__Request__mach_port_get_context_t Request_mach_port_get_context;__Request__mach_port_set_context_t Request_mach_port_set_context;__Request__mach_port_kobject_t Request_mach_port_kobject;__Request__mach_port_construct_t Request_mach_port_construct;__Request__mach_port_destruct_t Request_mach_port_destruct;__Request__mach_port_guard_t Request_mach_port_guard;__Request__mach_port_unguard_t Request_mach_port_unguard;__Request__mach_port_space_basic_info_t Request_mach_port_space_basic_info;__Request__mach_port_guard_with_flags_t Request_mach_port_guard_with_flags;__Request__mach_port_swap_guard_t Request_mach_port_swap_guard;__Request__mach_port_kobject_description_t Request_mach_port_kobject_description;};
union __ReplyUnion__mach_port_subsystem {__Reply__mach_port_names_t Reply_mach_port_names;__Reply__mach_port_type_t Reply_mach_port_type;__Reply__mach_port_rename_t Reply_mach_port_rename;__Reply__mach_port_allocate_name_t Reply_mach_port_allocate_name;__Reply__mach_port_allocate_t Reply_mach_port_allocate;__Reply__mach_port_destroy_t Reply_mach_port_destroy;__Reply__mach_port_deallocate_t Reply_mach_port_deallocate;__Reply__mach_port_get_refs_t Reply_mach_port_get_refs;__Reply__mach_port_mod_refs_t Reply_mach_port_mod_refs;__Reply__mach_port_peek_t Reply_mach_port_peek;__Reply__mach_port_set_mscount_t Reply_mach_port_set_mscount;__Reply__mach_port_get_set_status_t Reply_mach_port_get_set_status;__Reply__mach_port_move_member_t Reply_mach_port_move_member;__Reply__mach_port_request_notification_t Reply_mach_port_request_notification;__Reply__mach_port_insert_right_t Reply_mach_port_insert_right;__Reply__mach_port_extract_right_t Reply_mach_port_extract_right;__Reply__mach_port_set_seqno_t Reply_mach_port_set_seqno;__Reply__mach_port_get_attributes_t Reply_mach_port_get_attributes;__Reply__mach_port_set_attributes_t Reply_mach_port_set_attributes;__Reply__mach_port_allocate_qos_t Reply_mach_port_allocate_qos;__Reply__mach_port_allocate_full_t Reply_mach_port_allocate_full;__Reply__task_set_port_space_t Reply_task_set_port_space;__Reply__mach_port_get_srights_t Reply_mach_port_get_srights;__Reply__mach_port_space_info_t Reply_mach_port_space_info;__Reply__mach_port_dnrequest_info_t Reply_mach_port_dnrequest_info;__Reply__mach_port_kernel_object_t Reply_mach_port_kernel_object;__Reply__mach_port_insert_member_t Reply_mach_port_insert_member;__Reply__mach_port_extract_member_t Reply_mach_port_extract_member;__Reply__mach_port_get_context_t Reply_mach_port_get_context;__Reply__mach_port_set_context_t Reply_mach_port_set_context;__Reply__mach_port_kobject_t Reply_mach_port_kobject;__Reply__mach_port_construct_t Reply_mach_port_construct;__Reply__mach_port_destruct_t Reply_mach_port_destruct;__Reply__mach_port_guard_t Reply_mach_port_guard;__Reply__mach_port_unguard_t Reply_mach_port_unguard;__Reply__mach_port_space_basic_info_t Reply_mach_port_space_basic_info;__Reply__mach_port_guard_with_flags_t Reply_mach_port_guard_with_flags;__Reply__mach_port_swap_guard_t Reply_mach_port_swap_guard;__Reply__mach_port_kobject_description_t Reply_mach_port_kobject_description;};
union __RequestUnion__task_subsystem {__Request__task_create_t Request_task_create;__Request__task_terminate_t Request_task_terminate;__Request__task_threads_t Request_task_threads;__Request__mach_ports_register_t Request_mach_ports_register;__Request__mach_ports_lookup_t Request_mach_ports_lookup;__Request__task_info_t Request_task_info;__Request__task_set_info_t Request_task_set_info;__Request__task_suspend_t Request_task_suspend;__Request__task_resume_t Request_task_resume;__Request__task_get_special_port_t Request_task_get_special_port;__Request__task_set_special_port_t Request_task_set_special_port;__Request__thread_create_t Request_thread_create;__Request__thread_create_running_t Request_thread_create_running;__Request__task_set_exception_ports_t Request_task_set_exception_ports;__Request__task_get_exception_ports_t Request_task_get_exception_ports;__Request__task_swap_exception_ports_t Request_task_swap_exception_ports;__Request__lock_set_create_t Request_lock_set_create;__Request__lock_set_destroy_t Request_lock_set_destroy;__Request__semaphore_create_t Request_semaphore_create;__Request__semaphore_destroy_t Request_semaphore_destroy;__Request__task_policy_set_t Request_task_policy_set;__Request__task_policy_get_t Request_task_policy_get;__Request__task_sample_t Request_task_sample;__Request__task_policy_t Request_task_policy;__Request__task_set_emulation_t Request_task_set_emulation;__Request__task_get_emulation_vector_t Request_task_get_emulation_vector;__Request__task_set_emulation_vector_t Request_task_set_emulation_vector;__Request__task_set_ras_pc_t Request_task_set_ras_pc;__Request__task_zone_info_t Request_task_zone_info;__Request__task_assign_t Request_task_assign;__Request__task_assign_default_t Request_task_assign_default;__Request__task_get_assignment_t Request_task_get_assignment;__Request__task_set_policy_t Request_task_set_policy;__Request__task_get_state_t Request_task_get_state;__Request__task_set_state_t Request_task_set_state;__Request__task_set_phys_footprint_limit_t Request_task_set_phys_footprint_limit;__Request__task_suspend2_t Request_task_suspend2;__Request__task_resume2_t Request_task_resume2;__Request__task_purgable_info_t Request_task_purgable_info;__Request__task_get_mach_voucher_t Request_task_get_mach_voucher;__Request__task_set_mach_voucher_t Request_task_set_mach_voucher;__Request__task_swap_mach_voucher_t Request_task_swap_mach_voucher;__Request__task_generate_corpse_t Request_task_generate_corpse;__Request__task_map_corpse_info_t Request_task_map_corpse_info;__Request__task_register_dyld_image_infos_t Request_task_register_dyld_image_infos;__Request__task_unregister_dyld_image_infos_t Request_task_unregister_dyld_image_infos;__Request__task_get_dyld_image_infos_t Request_task_get_dyld_image_infos;__Request__task_register_dyld_shared_cache_image_info_t Request_task_register_dyld_shared_cache_image_info;__Request__task_register_dyld_set_dyld_state_t Request_task_register_dyld_set_dyld_state;__Request__task_register_dyld_get_process_state_t Request_task_register_dyld_get_process_state;__Request__task_map_corpse_info_64_t Request_task_map_corpse_info_64;__Request__task_inspect_t Request_task_inspect;__Request__task_get_exc_guard_behavior_t Request_task_get_exc_guard_behavior;__Request__task_set_exc_guard_behavior_t Request_task_set_exc_guard_behavior;__Request__task_create_suid_cred_t Request_task_create_suid_cred;};
union __ReplyUnion__task_subsystem {__Reply__task_create_t Reply_task_create;__Reply__task_terminate_t Reply_task_terminate;__Reply__task_threads_t Reply_task_threads;__Reply__mach_ports_register_t Reply_mach_ports_register;__Reply__mach_ports_lookup_t Reply_mach_ports_lookup;__Reply__task_info_t Reply_task_info;__Reply__task_set_info_t Reply_task_set_info;__Reply__task_suspend_t Reply_task_suspend;__Reply__task_resume_t Reply_task_resume;__Reply__task_get_special_port_t Reply_task_get_special_port;__Reply__task_set_special_port_t Reply_task_set_special_port;__Reply__thread_create_t Reply_thread_create;__Reply__thread_create_running_t Reply_thread_create_running;__Reply__task_set_exception_ports_t Reply_task_set_exception_ports;__Reply__task_get_exception_ports_t Reply_task_get_exception_ports;__Reply__task_swap_exception_ports_t Reply_task_swap_exception_ports;__Reply__lock_set_create_t Reply_lock_set_create;__Reply__lock_set_destroy_t Reply_lock_set_destroy;__Reply__semaphore_create_t Reply_semaphore_create;__Reply__semaphore_destroy_t Reply_semaphore_destroy;__Reply__task_policy_set_t Reply_task_policy_set;__Reply__task_policy_get_t Reply_task_policy_get;__Reply__task_sample_t Reply_task_sample;__Reply__task_policy_t Reply_task_policy;__Reply__task_set_emulation_t Reply_task_set_emulation;__Reply__task_get_emulation_vector_t Reply_task_get_emulation_vector;__Reply__task_set_emulation_vector_t Reply_task_set_emulation_vector;__Reply__task_set_ras_pc_t Reply_task_set_ras_pc;__Reply__task_zone_info_t Reply_task_zone_info;__Reply__task_assign_t Reply_task_assign;__Reply__task_assign_default_t Reply_task_assign_default;__Reply__task_get_assignment_t Reply_task_get_assignment;__Reply__task_set_policy_t Reply_task_set_policy;__Reply__task_get_state_t Reply_task_get_state;__Reply__task_set_state_t Reply_task_set_state;__Reply__task_set_phys_footprint_limit_t Reply_task_set_phys_footprint_limit;__Reply__task_suspend2_t Reply_task_suspend2;__Reply__task_resume2_t Reply_task_resume2;__Reply__task_purgable_info_t Reply_task_purgable_info;__Reply__task_get_mach_voucher_t Reply_task_get_mach_voucher;__Reply__task_set_mach_voucher_t Reply_task_set_mach_voucher;__Reply__task_swap_mach_voucher_t Reply_task_swap_mach_voucher;__Reply__task_generate_corpse_t Reply_task_generate_corpse;__Reply__task_map_corpse_info_t Reply_task_map_corpse_info;__Reply__task_register_dyld_image_infos_t Reply_task_register_dyld_image_infos;__Reply__task_unregister_dyld_image_infos_t Reply_task_unregister_dyld_image_infos;__Reply__task_get_dyld_image_infos_t Reply_task_get_dyld_image_infos;__Reply__task_register_dyld_shared_cache_image_info_t Reply_task_register_dyld_shared_cache_image_info;__Reply__task_register_dyld_set_dyld_state_t Reply_task_register_dyld_set_dyld_state;__Reply__task_register_dyld_get_process_state_t Reply_task_register_dyld_get_process_state;__Reply__task_map_corpse_info_64_t Reply_task_map_corpse_info_64;__Reply__task_inspect_t Reply_task_inspect;__Reply__task_get_exc_guard_behavior_t Reply_task_get_exc_guard_behavior;__Reply__task_set_exc_guard_behavior_t Reply_task_set_exc_guard_behavior;__Reply__task_create_suid_cred_t Reply_task_create_suid_cred;};
typedef std____1____bitset_0__0_____storage_type std____1____bit_const_reference_std____bitset_0__0______storage_type;
typedef std____1____bitset_0__0_____storage_type std____1____bit_reference_std____bitset_0__0___true_____storage_type;
struct CLKComplicationTemplateGraphicExtraLargeCircularOpenGaugeSimpleText {CLKComplicationTemplateGraphicExtraLargeCircular super;};
struct CLKComplicationTemplateGraphicExtraLargeCircularOpenGaugeRangeText {CLKComplicationTemplateGraphicExtraLargeCircular super;};
struct CLKComplicationTemplateGraphicExtraLargeCircularClosedGaugeImage {CLKComplicationTemplateGraphicExtraLargeCircular super;};
struct CLKComplicationTemplateGraphicExtraLargeCircularClosedGaugeText {CLKComplicationTemplateGraphicExtraLargeCircular super;};
struct CLKComplicationTemplateGraphicExtraLargeCircularOpenGaugeImage {CLKComplicationTemplateGraphicExtraLargeCircular super;};
struct CLKComplicationTemplateGraphicExtraLargeCircularStackImage {CLKComplicationTemplateGraphicExtraLargeCircular super;};
struct CLKComplicationTemplateGraphicCircularOpenGaugeSimpleText {CLKComplicationTemplateGraphicCircular super;};
struct CLKComplicationTemplateGraphicExtraLargeCircularStackText {CLKComplicationTemplateGraphicExtraLargeCircular super;};
struct CLKComplicationTemplateGraphicCircularOpenGaugeRangeText {CLKComplicationTemplateGraphicCircular super;};
struct CLKComplicationTemplateGraphicCircularClosedGaugeImage {CLKComplicationTemplateGraphicCircular super;};
struct INSetTaskAttributeTemporalEventTriggerResolutionResult {INTemporalEventTriggerResolutionResult super;};
struct CLKComplicationTemplateGraphicCircularClosedGaugeText {CLKComplicationTemplateGraphicCircular super;};
struct CLKComplicationTemplateGraphicExtraLargeCircularImage {CLKComplicationTemplateGraphicExtraLargeCircular super;};
struct CLKComplicationTemplateGraphicCircularOpenGaugeImage {CLKComplicationTemplateGraphicCircular super;};
struct TKSmartCardUserInteractionForSecurePINVerification {TKSmartCardUserInteractionForPINOperation super;};
struct ASAccountAuthenticationModificationViewController {UIViewController super;};
typedef  std____1____bitset_0__0_____storage_type *std____1____bitset_0__0_____const_storage_pointer;
struct CLKComplicationTemplateGraphicCircularStackImage {CLKComplicationTemplateGraphicCircular super;};
struct CLKComplicationTemplateGraphicCircularStackText {CLKComplicationTemplateGraphicCircular super;};
struct INStartCallCallRecordToCallBackResolutionResult {INCallRecordResolutionResult super;};
struct INAddTasksTemporalEventTriggerResolutionResult {INTemporalEventTriggerResolutionResult super;};
struct INRequestPaymentCurrencyAmountResolutionResult {INCurrencyAmountResolutionResult super;};
struct INUpdateMediaAffinityMediaItemResolutionResult {INMediaItemResolutionResult super;};
struct VNGenerateObjectnessBasedSaliencyImageRequest {VNImageBasedRequest super;};
struct MPSCNNLocalContrastNormalizationGradientNode {MPSNNGradientFilterNode super;};
struct MPSNNReductionFeatureChannelsArgumentMaxNode {MPSNNUnaryReductionNode super;};
struct MPSNNReductionFeatureChannelsArgumentMinNode {MPSNNUnaryReductionNode super;};
struct TKSmartCardUserInteractionForSecurePINChange {TKSmartCardUserInteractionForPINOperation super;};
struct VNGenerateAttentionBasedSaliencyImageRequest {VNImageBasedRequest super;};
struct CLKComplicationTemplateGraphicCircularImage {CLKComplicationTemplateGraphicCircular super;};
struct INSendPaymentCurrencyAmountResolutionResult {INCurrencyAmountResolutionResult super;};
struct MPSCNNCrossChannelNormalizationGradientNode {MPSNNGradientFilterNode super;};
struct NSCollectionLayoutBoundarySupplementaryItem {NSCollectionLayoutSupplementaryItem super;};
typedef std____1____bitset_0__0_____storage_type *std____1____bitset_0__0_____storage_pointer;
struct ADInterstitialAdPresentationViewController {UIViewController super;};
struct INAddMediaMediaDestinationResolutionResult {INMediaDestinationResolutionResult super;};
struct INSearchForMediaMediaItemResolutionResult {INMediaItemResolutionResult super;};
struct INStartCallCallCapabilityResolutionResult {INCallCapabilityResolutionResult super;};
struct INAddTasksTargetTaskListResolutionResult {INTaskListResolutionResult super;};
struct INPlayMediaPlaybackSpeedResolutionResult {INDoubleResolutionResult super;};
struct MPSCNNInstanceNormalizationGradientState {MPSNNGradientState super;};
struct MPSNNReduceFeatureChannelsAndWeightsMean {MPSNNReduceBinary super;};
struct MPSCNNInstanceNormalizationGradientNode {MPSNNGradientFilterNode super;};
struct MPSNNOptimizerStochasticGradientDescent {MPSNNOptimizer super;};
struct MPSNNReduceFeatureChannelsAndWeightsSum {MPSNNReduceBinary super;};
struct UIDocumentPickerExtensionViewController {UIViewController super;};
struct std____1__basic_string_char16_t_____rep {std____1__basic_string_char16_t_____rep___B1BBB8AFCA68510948C54AD5ECDD08AF __anonymous0;};
struct std____1__basic_string_char32_t_____rep {std____1__basic_string_char32_t_____rep___0FAB7A1DE5A04F8E060EE1A12296626F __anonymous0;};
struct MPSCNNSpatialNormalizationGradientNode {MPSNNGradientFilterNode super;};
struct MPSNNGramMatrixCalculationGradientNode {MPSNNGradientFilterNode super;};
struct VNImageHomographicAlignmentObservation {VNImageAlignmentObservation super;};
struct VNImageTranslationAlignmentObservation {VNImageAlignmentObservation super;};
struct std____1__basic_string_wchar_t_____rep {std____1__basic_string_wchar_t_____rep___7E5635CA808A9EE38F5B97749E9C5407 __anonymous0;};
struct CABTMIDILocalPeripheralViewController {UIViewController super;};
struct INDeleteTasksTaskListResolutionResult {INTaskListResolutionResult super;};
struct MPSCNNGroupNormalizationGradientState {MPSNNGradientState super;};
struct MPSNNReductionFeatureChannelsMeanNode {MPSNNUnaryReductionNode super;};
struct MPSNNReductionSpatialMeanGradientNode {MPSNNGradientFilterNode super;};
union __RequestUnion__clock_reply_subsystem {__Request__clock_alarm_reply_t Request_clock_alarm_reply;};
struct CKDiscoverAllUserIdentitiesOperation {CKOperation super;};
struct INPlayMediaMediaItemResolutionResult {INMediaItemResolutionResult super;};
struct MPSCNNBatchNormalizationGradientNode {MPSNNGradientFilterNode super;};
struct MPSCNNGroupNormalizationGradientNode {MPSNNGradientFilterNode super;};
struct MPSCNNLocalContrastNormalizationNode {MPSCNNNormalizationNode super;};
struct MPSCNNUpsamplingBilinearGradientNode {MPSNNGradientFilterNode super;};
struct MPSNNReductionFeatureChannelsMaxNode {MPSNNUnaryReductionNode super;};
struct MPSNNReductionFeatureChannelsMinNode {MPSNNUnaryReductionNode super;};
struct MPSNNReductionFeatureChannelsSumNode {MPSNNUnaryReductionNode super;};
struct PKAddSecureElementPassViewController {UIViewController super;};
struct PKPaymentAuthorizationViewController {UIViewController super;};
struct CKFetchNotificationChangesOperation {CKOperation super;};
struct INAddMediaMediaItemResolutionResult {INMediaItemResolutionResult super;};
struct INUIEditVoiceShortcutViewController {UIViewController super;};
struct MPSCNNCrossChannelNormalizationNode {MPSCNNNormalizationNode super;};
struct MPSCNNUpsamplingNearestGradientNode {MPSNNGradientFilterNode super;};
struct MPSMatrixBatchNormalizationGradient {MPSMatrixBinaryKernel super;};
union __ReplyUnion__clock_reply_subsystem {__Reply__clock_alarm_reply_t Reply_clock_alarm_reply;};
struct std____1__basic_string_char_____rep {std____1__basic_string_char_____rep___BBC8CF68AFD2118CFD95232F156F26A4 __anonymous0;};
struct ASAuthorizationSingleSignOnRequest {ASAuthorizationOpenIDRequest super;};
struct ASCredentialProviderViewController {UIViewController super;};
struct INUIAddVoiceShortcutViewController {UIViewController super;};
struct MPSCNNBatchNormalizationStatistics {MPSCNNKernel super;};
struct MPSCNNConvolutionGradientStateNode {MPSNNGradientStateNode super;};
struct MPSImageEuclideanDistanceTransform {MPSUnaryImageKernel super;};
struct VNGenerateImageFeaturePrintRequest {VNImageBasedRequest super;};
struct CKDiscoverUserIdentitiesOperation {CKOperation super;};
struct CKFetchShareParticipantsOperation {CKOperation super;};
struct FPUIActionExtensionViewController {UIViewController super;};
struct MPSImageStatisticsMeanAndVariance {MPSUnaryImageKernel super;};
struct RPBroadcastActivityViewController {UIViewController super;};
struct SKCloudServiceSetupViewController {UIViewController super;};
struct VNDetectFaceCaptureQualityRequest {VNImageBasedRequest super;};
struct CKMarkNotificationsReadOperation {CKOperation super;};
struct MPSCNNLocalContrastNormalization {MPSCNNKernel super;};
struct MPSInstanceAccelerationStructure {MPSAccelerationStructure super;};
struct MPSNDArrayMultiaryGradientKernel {MPSNDArrayMultiaryBase super;};
struct MPSNNArithmeticGradientStateNode {MPSNNBinaryGradientStateNode super;};
struct UIReferenceLibraryViewController {UIViewController super;};
struct UIScreenEdgePanGestureRecognizer {UIPanGestureRecognizer super;};
struct AVMutableDateRangeMetadataGroup {AVDateRangeMetadataGroup super;AVDateRangeMetadataGroupInternal *_mutablePriv;};
struct MPSCNNCrossChannelNormalization {MPSCNNKernel super;};
struct MPSMatrixFullyConnectedGradient {MPSMatrixBinaryKernel super;};
struct MPSPolygonAccelerationStructure {MPSAccelerationStructure super;};
struct UIDocumentBrowserViewController {UIViewController super;};
struct UISearchContainerViewController {UIViewController super;};
typedef processor_set_array_t processor_set_name_port_array_t;
struct MPSCNNConvolutionGradientState {MPSNNGradientState super;};
struct MPSCNNConvolutionTransposeNode {MPSCNNConvolutionNode super;};
struct MPSCNNSpatialNormalizationNode {MPSCNNNormalizationNode super;};
struct MPSImageHistogramSpecification {MPSUnaryImageKernel super;};
struct MPSImageThresholdBinaryInverse {MPSUnaryImageKernel super;};
struct MPSImageThresholdToZeroInverse {MPSUnaryImageKernel super;};
struct MPSMatrixDecompositionCholesky {MPSMatrixUnaryKernel super;};
struct MPSNNConcatenationGradientNode {MPSNNGradientFilterNode super;};
struct MSStickerBrowserViewController {UIViewController super;};
struct PKAddPaymentPassViewController {UIViewController super;};
struct SLComposeServiceViewController {UIViewController super;};
struct UIDocumentPickerViewController {UIViewController super;};
struct VNDetectHumanRectanglesRequest {VNImageBasedRequest super;};
struct VNDocumentCameraViewController {UIViewController super;};
struct ABUnknownPersonViewController {UIViewController super;};
struct ASAuthorizationAppleIDRequest {ASAuthorizationOpenIDRequest super;};
struct CKFetchShareMetadataOperation {CKOperation super;};
struct CNContactPickerViewController {UIViewController super;};
struct HMMutableSignificantTimeEvent {HMSignificantTimeEvent super;};
struct MPSCNNArithmeticGradientState {MPSNNBinaryGradientState super;};
struct MPSCNNBatchNormalizationState {MPSNNGradientState super;};
struct MPSCNNConvolutionGradientNode {MPSNNGradientFilterNode super;};
struct MPSImageHistogramEqualization {MPSUnaryImageKernel super;};
struct MPSMatrixVectorMultiplication {MPSMatrixBinaryKernel super;};
struct MPSNDArrayGatherGradientState {MPSNDArrayGradientState super;};
struct MPSNDArrayUnaryGradientKernel {MPSNDArrayMultiaryGradientKernel super;};
struct MPSNNReductionSpatialMeanNode {MPSNNUnaryReductionNode super;};
struct NSDerivedAttributeDescription {NSAttributeDescription super;};
struct VNDetectFaceRectanglesRequest {VNImageBasedRequest super;};
struct VNDetectTextRectanglesRequest {VNImageBasedRequest super;};
struct VNIdentifiedPointsObservation {VNRecognizedPointsObservation super;};
struct VNRecognizedObjectObservation {VNDetectedObjectObservation super;};
struct ASAuthorizationAppleIDButton {UIControl super;};
struct MPSCNNLogSoftMaxGradientNode {MPSNNGradientFilterNode super;};
struct MPSNNReductionColumnMeanNode {MPSNNUnaryReductionNode super;};
struct SKStoreProductViewController {UIViewController super;};
struct TWTweetComposeViewController {UIViewController super;};
struct UIDocumentMenuViewController {UIViewController super;};
struct VNDetectFaceLandmarksRequest {VNImageBasedRequest super;};
struct VNDetectHumanBodyPoseRequest {VNImageBasedRequest super;};
struct VNDetectHumanHandPoseRequest {VNImageBasedRequest super;};
struct AVMutableTimedMetadataGroup {AVTimedMetadataGroup super;AVTimedMetadataGroupInternal *_mutablePriv;};
struct MKUserTrackingBarButtonItem {UIBarButtonItem super;};
struct MPMoviePlayerViewController {UIViewController super;};
struct MPSCNNBinaryConvolutionNode {MPSCNNConvolutionNode super;};
struct MPSCNNInstanceNormalization {MPSCNNKernel super;};
struct MPSCNNNeuronExponentialNode {MPSCNNNeuronNode super;};
struct MPSCNNNeuronHardSigmoidNode {MPSCNNNeuronNode super;};
struct MPSImageStatisticsMinAndMax {MPSUnaryImageKernel super;};
struct MPSMatrixBatchNormalization {MPSMatrixUnaryKernel super;};
struct MPSNNArithmeticGradientNode {MPSNNGradientFilterNode super;};
struct MPSNNReductionColumnMaxNode {MPSNNUnaryReductionNode super;};
struct MPSNNReductionColumnMinNode {MPSNNUnaryReductionNode super;};
struct MPSNNReductionColumnSumNode {MPSNNUnaryReductionNode super;};
struct MSMessagesAppViewController {UIViewController super;};
struct UIColorPickerViewController {UIViewController super;};
struct VNDetectTrajectoriesRequest {VNStatefulRequest super;};
struct VNRecognizedTextObservation {VNRectangleObservation super;};
struct HKCumulativeQuantitySample {HKQuantitySample super;};
struct INUIAddVoiceShortcutButton {UIButton super;};
struct MKGradientPolylineRenderer {MKPolylineRenderer super;};
struct MPSCNNConvolutionTranspose {MPSCNNKernel super;};
struct MPSCNNDropoutGradientState {MPSNNGradientState super;};
struct MPSCNNSpatialNormalization {MPSCNNKernel super;};
struct MPSNNCropAndResizeBilinear {MPSCNNKernel super;};
struct MPSNNGramMatrixCalculation {MPSCNNKernel super;};
struct UICollectionViewController {UIViewController super;};
struct UIFontPickerViewController {UIViewController super;};
struct VNSaliencyImageObservation {VNPixelBufferObservation super;};
struct ABNewPersonViewController {UIViewController super;};
struct AVCompositionTrackSegment {AVAssetTrackSegment super;AVCompositionTrackSegmentInternal *_priv;};
struct AVMetadataHumanBodyObject {AVMetadataBodyObject super;};
struct AVMutableCompositionTrack {AVCompositionTrack super;AVMutableCompositionTrackInternal *_mutablePriv;};
struct MPSCNNDropoutGradientNode {MPSNNGradientFilterNode super;};
struct MPSCNNNeuronLogarithmNode {MPSCNNNeuronNode super;};
struct MPSCNNPoolingGradientNode {MPSNNGradientFilterNode super;};
struct MPSCNNSoftMaxGradientNode {MPSNNGradientFilterNode super;};
struct MPSImageIntegralOfSquares {MPSUnaryImageKernel super;};
struct MPSImageThresholdTruncate {MPSUnaryImageKernel super;};
struct MPSNNAdditionGradientNode {MPSNNArithmeticGradientNode super;};
struct MPSNNReductionRowMeanNode {MPSNNUnaryReductionNode super;};
struct MPSRNNImageInferenceLayer {MPSCNNKernel super;};
struct NEAppProxyProviderManager {NETunnelProviderManager super;};
struct PKAddPassesViewController {UIViewController super;};
struct VNDetectRectanglesRequest {VNImageBasedRequest super;};
struct VNRecognizeAnimalsRequest {VNImageBasedRequest super;};
typedef mach_voucher_name_t *mach_voucher_name_array_t;
struct AVCaptureAudioFileOutput {AVCaptureFileOutput super;AVCaptureAudioFileOutputInternal *_internal;};
struct AVCaptureMovieFileOutput {AVCaptureFileOutput super;AVCaptureMovieFileOutputInternal *_internal;};
struct HKDiscreteQuantitySample {HKQuantitySample super;};
struct MPSCNNBatchNormalization {MPSCNNKernel super;};
struct MPSCNNFullyConnectedNode {MPSCNNConvolutionNode super;};
struct MPSCNNGroupNormalization {MPSCNNKernel super;};
struct MPSCNNNeuronAbsoluteNode {MPSCNNNeuronNode super;};
struct MPSCNNNeuronGradientNode {MPSNNGradientFilterNode super;};
struct MPSCNNNeuronSoftPlusNode {MPSCNNNeuronNode super;};
struct MPSCNNNeuronSoftSignNode {MPSCNNNeuronNode super;};
struct MPSCNNPoolingAverageNode {MPSCNNPoolingNode super;};
struct MPSImageLaplacianPyramid {MPSImagePyramid super;};
struct MPSMatrixDecompositionLU {MPSMatrixUnaryKernel super;};
struct MPSMatrixSoftMaxGradient {MPSMatrixBinaryKernel super;};
struct MPSMatrixSolveTriangular {MPSMatrixBinaryKernel super;};
struct MPSNDArrayMultiaryKernel {MPSNDArrayMultiaryBase super;};
struct MPSNNReductionRowMaxNode {MPSNNUnaryReductionNode super;};
struct MPSNNReductionRowMinNode {MPSNNUnaryReductionNode super;};
struct MPSNNReductionRowSumNode {MPSNNUnaryReductionNode super;};
struct MPSNNReshapeGradientNode {MPSNNGradientFilterNode super;};
struct OS_os_workgroup_interval {OS_os_workgroup super;};
struct OS_os_workgroup_parallel {OS_os_workgroup super;};
struct UIActivityViewController {UIViewController super;};
struct UICloudSharingController {UIViewController super;};
struct UICollectionViewListCell {UICollectionViewCell super;};
struct AVMetadataCatBodyObject {AVMetadataBodyObject super;};
struct AVMetadataDogBodyObject {AVMetadataBodyObject super;};
struct CBMutableCharacteristic {CBCharacteristic super;};
struct CKAcceptSharesOperation {CKOperation super;};
struct CNContactViewController {UIViewController super;};
struct HKHeartbeatSeriesSample {HKSeriesSample super;};
struct MCBrowserViewController {UIViewController super;};
struct MKMultiPolylineRenderer {MKOverlayPathRenderer super;};
struct MPMediaPickerController {UIViewController super;};
struct MPSCNNBinaryConvolution {MPSCNNKernel super;};
struct MPSCNNNeuronExponential {MPSCNNNeuron super;};
struct MPSCNNNeuronHardSigmoid {MPSCNNNeuron super;};
struct MPSCNNNeuronSigmoidNode {MPSCNNNeuronNode super;};
struct MPSCNNPoolingL2NormNode {MPSCNNPoolingNode super;};
struct MPSImageGaussianPyramid {MPSImagePyramid super;};
struct MPSImageThresholdBinary {MPSUnaryImageKernel super;};
struct MPSImageThresholdToZero {MPSUnaryImageKernel super;};
struct MPSMatrixFullyConnected {MPSMatrixBinaryKernel super;};
struct MPSMatrixNeuronGradient {MPSMatrixBinaryKernel super;};
struct NEFilterControlProvider {NEFilterProvider super;};
struct RPPreviewViewController {UIViewController super;};
struct SLComposeViewController {UIViewController super;};
struct VNDetectBarcodesRequest {VNImageBasedRequest super;};
struct VNDetectContoursRequest {VNImageBasedRequest super;};
struct VNTrackRectangleRequest {VNTrackingRequest super;};
typedef thread_act_array_t thread_act_port_array_t;
struct ABPersonViewController {UIViewController super;};
struct AVPlayerViewController {UIViewController super;};
struct CKModifyBadgeOperation {CKOperation super;};
struct HMMutableCalendarEvent {HMCalendarEvent super;};
struct HMMutableDurationEvent {HMDurationEvent super;};
struct MKMarkerAnnotationView {MKAnnotationView super;};
struct MKMultiPolygonRenderer {MKOverlayPathRenderer super;};
struct MPSCNNNeuronLinearNode {MPSCNNNeuronNode super;};
struct MPSImageStatisticsMean {MPSUnaryImageKernel super;};
struct MPSMatrixSolveCholesky {MPSMatrixBinaryKernel super;};
struct MPSNDArrayBinaryKernel {MPSNDArrayMultiaryKernel super;};
struct NEFilterControlVerdict {NEFilterNewFlowVerdict super;};
struct NEFilterPacketProvider {NEFilterProvider super;};
struct NEPacketTunnelProvider {NETunnelProvider super;};
struct NSURLSessionUploadTask {NSURLSessionDataTask super;};
struct PHAssetCreationRequest {PHAssetChangeRequest super;};
struct PHPickerViewController {UIViewController super;};
struct SFSafariViewController {UIViewController super;};
struct UINavigationController {UIViewController super;};
struct VNClassifyImageRequest {VNImageBasedRequest super;};
struct VNDetectHorizonRequest {VNImageBasedRequest super;};
struct VNRecognizeTextRequest {VNImageBasedRequest super;};
struct VNTargetedImageRequest {VNImageBasedRequest super;};
struct AVAudioUnitDistortion {AVAudioUnitEffect super;};
struct EKEventViewController {UIViewController super;};
struct GCEventViewController {UIViewController super;};
struct MDLStereoscopicCamera {MDLCamera super;};
struct MPSCNNNeuronLogarithm {MPSCNNNeuron super;};
struct MPSCNNNeuronPReLUNode {MPSCNNNeuronNode super;};
struct MPSCNNNeuronPowerNode {MPSCNNNeuronNode super;};
struct MPSCNNNeuronReLUNNode {MPSCNNNeuronNode super;};
struct MPSImageBilinearScale {MPSImageScale super;};
struct MPSMatrixRandomMTGP32 {MPSMatrixRandom super;};
struct MPSMatrixRandomPhilox {MPSMatrixRandom super;};
struct MPSNDArrayUnaryKernel {MPSNDArrayMultiaryKernel super;};
struct MPSNNLocalCorrelation {MPSNNReduceBinary super;};
struct MPSNNOptimizerRMSProp {MPSNNOptimizer super;};
struct UIInputViewController {UIViewController super;};
struct UISplitViewController {UIViewController super;};
struct UITableViewController {UIViewController super;};
struct CXPlayDTMFCallAction {CXCallAction super;};
struct CXSetGroupCallAction {CXCallAction super;};
struct CXSetMutedCallAction {CXCallAction super;};
struct MPSCNNGradientKernel {MPSCNNBinaryKernel super;};
struct MPSCNNNeuronAbsolute {MPSCNNNeuron super;};
struct MPSCNNNeuronGeLUNode {MPSCNNNeuronNode super;};
struct MPSCNNNeuronGradient {MPSCNNGradientKernel super;};
struct MPSCNNNeuronReLUNode {MPSCNNNeuronNode super;};
struct MPSCNNNeuronSoftPlus {MPSCNNNeuron super;};
struct MPSCNNNeuronSoftSign {MPSCNNNeuron super;};
struct MPSCNNNeuronTanHNode {MPSCNNNeuronNode super;};
struct MPSCNNPoolingMaxNode {MPSCNNPoolingNode super;};
struct MPSImageGaussianBlur {MPSUnaryImageKernel super;};
struct MPSImageLanczosScale {MPSImageScale super;};
struct MPSNNInitialGradient {MPSCNNKernel super;};
struct MPSNNReshapeGradient {MPSCNNGradientKernel super;};
struct NEFilterDataProvider {NEFilterProvider super;};
struct UIPageViewController {UIViewController super;};
struct VNTrackObjectRequest {VNTrackingRequest super;};
struct CBMutableDescriptor {CBDescriptor super;};
struct CKDatabaseOperation {CKOperation super;};
struct CXSetHeldCallAction {CXCallAction super;};
struct HKCDADocumentSample {HKDocumentSample super;};
struct MKPinAnnotationView {MKAnnotationView super;};
struct MPSCNNNeuronELUNode {MPSCNNNeuronNode super;};
struct MPSCNNNeuronSigmoid {MPSCNNNeuron super;};
struct MPSImageConvolution {MPSUnaryImageKernel super;};
struct MPSImageReduceUnary {MPSUnaryImageKernel super;};
struct MPSMatrixLogSoftMax {MPSMatrixSoftMax super;};
struct MPSNNResizeBilinear {MPSCNNKernel super;};
struct QLPreviewController {UIViewController super;};
struct STWebpageController {UIViewController super;};
struct CXAnswerCallAction {CXCallAction super;};
struct MKUserLocationView {MKAnnotationView super;};
struct MPSCNNNeuronLinear {MPSCNNNeuron super;};
struct MPSNNOptimizerAdam {MPSNNOptimizer super;};
struct NEAppProxyProvider {NETunnelProvider super;};
struct NEVPNProtocolIKEv2 {NEVPNProtocolIPSec super;};
struct UISearchController {UIViewController super;};
struct UISegmentedControl {UIControl super;};
struct UITabBarController {UIViewController super;};
struct AVAudioOutputNode {AVAudioIONode super;};
struct CXStartCallAction {CXCallAction super;};
struct EKCalendarChooser {UIViewController super;};
struct GLKViewController {UIViewController super;};
struct JustPostcompTable {SFNTLookupTable lookupTable;};
struct MKOverlayPathView {MKOverlayView super;};
struct MPSCNNConvolution {MPSCNNKernel super;};
struct MPSCNNNeuronPReLU {MPSCNNNeuron super;};
struct MPSCNNNeuronPower {MPSCNNNeuron super;};
struct MPSCNNNeuronReLUN {MPSCNNNeuron super;};
struct MortSwashSubtable {SFNTLookupTable lookup;};
struct UIAlertController {UIViewController super;};
struct AUViewController {UIViewController super;};
struct AVAudioInputNode {AVAudioIONode super;};
struct CKQueryOperation {CKDatabaseOperation super;};
struct MLCYOLOLossLayer {MLCLossLayer super;};
struct MPSCNNLogSoftMax {MPSCNNKernel super;};
struct MPSCNNNeuronReLU {MPSCNNNeuron super;};
struct MPSCNNNeuronTanH {MPSCNNNeuron super;};
struct MPSCNNUpsampling {MPSCNNKernel super;};
struct MPSNDArrayGather {MPSNDArrayBinaryKernel super;};
struct MPSNNForwardLoss {MPSCNNKernel super;};
struct MPSNNPadGradient {MPSCNNGradientKernel super;};
struct MPSNNReduceUnary {MPSCNNKernel super;};
struct UICollectionView {UIScrollView super;};
struct UIRefreshControl {UIControl super;};
struct CXEndCallAction {CXCallAction super;};
struct MPSCNNNeuronELU {MPSCNNNeuron super;};
struct PKAddPassButton {UIButton super;};
struct PKPaymentButton {UIButton super;};
struct MKPolylineView {MKOverlayPathView super;};
struct MPSCNNYOLOLoss {MPSCNNKernel super;};
struct CIBlendKernel {CIColorKernel super;};
struct MKPolygonView {MKOverlayPathView super;};
struct MPSCNNDropout {MPSCNNKernel super;};
struct MPSCNNPooling {MPSCNNKernel super;};
struct MPSCNNSoftMax {MPSCNNKernel super;};
struct UIPageControl {UIControl super;};
struct BCChatButton {UIControl super;};
struct MKCircleView {MKOverlayPathView super;};
struct MPSImageTent {MPSImageBox super;};
struct PKCanvasView {UIScrollView super;};
struct UIDatePicker {UIControl super;};
struct UIColorWell {UIControl super;};
struct UITextField {UIControl super;};
struct ARSCNView {SCNView super;};
struct ARSKView {SKView super;};
struct CPWindow {UIWindow super;};
union rpc_msg___E53F600B540232E6C505A79CFF91D695 {call_body RM_cmb;reply_body RM_rmb;};
union __RequestUnion__host_security_subsystem {__Request__host_security_create_task_token_t Request_host_security_create_task_token;__Request__host_security_set_task_token_t Request_host_security_set_task_token;};
union __ReplyUnion__host_security_subsystem {__Reply__host_security_create_task_token_t Reply_host_security_create_task_token;__Reply__host_security_set_task_token_t Reply_host_security_set_task_token;};
union __RequestUnion__clock_priv_subsystem {__Request__clock_set_time_t Request_clock_set_time;__Request__clock_set_attributes_t Request_clock_set_attributes;};
union __ReplyUnion__clock_priv_subsystem {__Reply__clock_set_time_t Reply_clock_set_time;__Reply__clock_set_attributes_t Reply_clock_set_attributes;};
struct MFMailComposeViewController {UINavigationController super;id _internal;};
struct JustDirectionTable {UInt16 justClass;UInt16 widthDeltaClusters;UInt16 postcomp;SFNTLookupTable lookup;};
struct BslnFormat1Part {SInt16 deltas[32];SFNTLookupTable mappingData;};
struct rpc_msg {unsigned int rm_xid;msg_type rm_direction;rpc_msg___E53F600B540232E6C505A79CFF91D695 ru;};
union __RequestUnion__memory_entry_subsystem {__Request__mach_memory_entry_purgable_control_t Request_mach_memory_entry_purgable_control;__Request__mach_memory_entry_access_tracking_t Request_mach_memory_entry_access_tracking;__Request__mach_memory_entry_ownership_t Request_mach_memory_entry_ownership;};
union __ReplyUnion__memory_entry_subsystem {__Reply__mach_memory_entry_purgable_control_t Reply_mach_memory_entry_purgable_control;__Reply__mach_memory_entry_access_tracking_t Reply_mach_memory_entry_access_tracking;__Reply__mach_memory_entry_ownership_t Reply_mach_memory_entry_ownership;};
union __RequestUnion__clock_subsystem {__Request__clock_get_time_t Request_clock_get_time;__Request__clock_get_attributes_t Request_clock_get_attributes;__Request__clock_alarm_t Request_clock_alarm;};
union __ReplyUnion__clock_subsystem {__Reply__clock_get_time_t Reply_clock_get_time;__Reply__clock_get_attributes_t Reply_clock_get_attributes;__Reply__clock_alarm_t Reply_clock_alarm;};
union __RequestUnion__exc_subsystem {__Request__exception_raise_t Request_exception_raise;__Request__exception_raise_state_t Request_exception_raise_state;__Request__exception_raise_state_identity_t Request_exception_raise_state_identity;};
union __ReplyUnion__exc_subsystem {__Reply__exception_raise_t Reply_exception_raise;__Reply__exception_raise_state_t Reply_exception_raise_state;__Reply__exception_raise_state_identity_t Reply_exception_raise_state_identity;};
union BslnFormatUnion {BslnFormat0Part fmt0Part;BslnFormat1Part fmt1Part;BslnFormat2Part fmt2Part;BslnFormat3Part fmt3Part;};
struct BslnTable {Fixed version;BslnTableFormat format;UInt16 defaultBaseline;BslnFormatUnion parts;};
union __ReplyUnion__mach_voucher_subsystem {__Reply__mach_voucher_extract_attr_content_t Reply_mach_voucher_extract_attr_content;__Reply__mach_voucher_extract_attr_recipe_t Reply_mach_voucher_extract_attr_recipe;__Reply__mach_voucher_extract_all_attr_recipes_t Reply_mach_voucher_extract_all_attr_recipes;__Reply__mach_voucher_attr_command_t Reply_mach_voucher_attr_command;__Reply__mach_voucher_debug_info_t Reply_mach_voucher_debug_info;};
union MortSpecificSubtable {MortRearrangementSubtable rearrangement;MortContextualSubtable contextual;MortLigatureSubtable ligature;MortSwashSubtable swash;MortInsertionSubtable insertion;};
union MorxSpecificSubtable {MorxRearrangementSubtable rearrangement;MorxContextualSubtable contextual;MorxLigatureSubtable ligature;MortSwashSubtable swash;MorxInsertionSubtable insertion;};
union __ReplyUnion__processor_subsystem {__Reply__processor_start_t Reply_processor_start;__Reply__processor_exit_t Reply_processor_exit;__Reply__processor_info_t Reply_processor_info;__Reply__processor_control_t Reply_processor_control;__Reply__processor_assign_t Reply_processor_assign;__Reply__processor_get_assignment_t Reply_processor_get_assignment;};
struct std____1____compressed_pair_elem_std__basic_string_char16_t_____rep__0__false_ {std____1__basic_string_char16_t_____rep __value_;};
struct std____1____compressed_pair_elem_std__basic_string_char32_t_____rep__0__false_ {std____1__basic_string_char32_t_____rep __value_;};
struct std____1____compressed_pair_elem_std__basic_string_wchar_t_____rep__0__false_ {std____1__basic_string_wchar_t_____rep __value_;};
struct std____1____compressed_pair_elem_std__basic_string_char_____rep__0__false_ {std____1__basic_string_char_____rep __value_;};
typedef std____1____bitset_0__0_____const_storage_pointer std____1____bit_const_reference_std____bitset_0__0______storage_pointer;
typedef std____1____bitset_0__0_____storage_pointer std____1____bit_reference_std____bitset_0__0___true_____storage_pointer;
struct MPSCNNConvolutionTransposeGradientStateNode {MPSCNNConvolutionGradientStateNode super;};
struct MPSCNNBatchNormalizationStatisticsGradient {MPSCNNGradientKernel super;};
struct MPSCNNLocalContrastNormalizationGradient {MPSCNNGradientKernel super;};
struct MPSCNNConvolutionTransposeGradientState {MPSCNNConvolutionGradientState super;};
struct MPSCNNCrossChannelNormalizationGradient {MPSCNNGradientKernel super;};
struct MPSNDArrayBinarySecondaryGradientKernel {MPSNDArrayMultiaryGradientKernel super;};
struct MPSCNNConvolutionTransposeGradientNode {MPSCNNConvolutionGradientNode super;};
struct MPSNDArrayBinaryPrimaryGradientKernel {MPSNDArrayMultiaryGradientKernel super;};
struct MPSNNReduceFeatureChannelsArgumentMax {MPSNNReduceUnary super;};
struct MPSNNReduceFeatureChannelsArgumentMin {MPSNNReduceUnary super;};
struct MPSQuadrilateralAccelerationStructure {MPSPolygonAccelerationStructure super;};
struct GKFriendRequestComposeViewController {UINavigationController super;};
struct GKTurnBasedMatchmakerViewController {UINavigationController super;};
struct MPSCNNDilatedPoolingMaxGradientNode {MPSCNNPoolingGradientNode super;};
struct MPSCNNInstanceNormalizationGradient {MPSCNNGradientKernel super;};
struct ABPeoplePickerNavigationController {UINavigationController super;};
struct MPSCNNConvolutionTransposeGradient {MPSCNNGradientKernel super;};
struct MPSCNNSpatialNormalizationGradient {MPSCNNGradientKernel super;};
struct MPSNNGramMatrixCalculationGradient {MPSCNNGradientKernel super;};
struct CKFetchRecordZoneChangesOperation {CKDatabaseOperation super;};
struct HKCumulativeQuantitySeriesSample {HKCumulativeQuantitySample super;};
struct MPSCNNBatchNormalizationGradient {MPSCNNGradientKernel super;};
struct MPSCNNFullyConnectedGradientNode {MPSCNNConvolutionGradientNode super;};
struct MPSCNNGroupNormalizationGradient {MPSCNNGradientKernel super;};
struct MPSCNNPoolingAverageGradientNode {MPSCNNPoolingGradientNode super;};
struct MPSImageLaplacianPyramidSubtract {MPSImageLaplacianPyramid super;};
struct MPSTriangleAccelerationStructure {MPSPolygonAccelerationStructure super;};
struct CKFetchDatabaseChangesOperation {CKDatabaseOperation super;};
struct MPSCNNPoolingL2NormGradientNode {MPSCNNPoolingGradientNode super;};
struct MPSNNMultiplicationGradientNode {MPSNNArithmeticGradientNode super;};
struct CKModifySubscriptionsOperation {CKDatabaseOperation super;};
struct MFMessageComposeViewController {UINavigationController super;};
struct MPSCNNBinaryFullyConnectedNode {MPSCNNBinaryConvolutionNode super;};
struct MPSNDArrayMatrixMultiplication {MPSNDArrayMultiaryKernel super;};
struct MPSNDArrayStridedSliceGradient {MPSNDArrayUnaryGradientKernel super;};
struct MPSNNReduceFeatureChannelsMean {MPSNNReduceUnary super;};
struct CABTMIDICentralViewController {UITableViewController super;};
struct CKFetchRecordChangesOperation {CKDatabaseOperation super;};
struct CKFetchSubscriptionsOperation {CKDatabaseOperation super;};
struct MPSNNReduceFeatureChannelsMax {MPSNNReduceUnary super;};
struct MPSNNReduceFeatureChannelsMin {MPSNNReduceUnary super;};
struct MPSNNReduceFeatureChannelsSum {MPSNNReduceUnary super;};
struct CKFetchWebAuthTokenOperation {CKDatabaseOperation super;};
struct CKModifyRecordZonesOperation {CKDatabaseOperation super;};
struct MPSCNNPoolingMaxGradientNode {MPSCNNPoolingGradientNode super;};
struct MPSNNSubtractionGradientNode {MPSNNArithmeticGradientNode super;};
struct VNGenerateOpticalFlowRequest {VNTargetedImageRequest super;};
struct CKFetchRecordZonesOperation {CKDatabaseOperation super;};
struct MPSImageLaplacianPyramidAdd {MPSImageLaplacianPyramid super;};
struct MPSMatrixLogSoftMaxGradient {MPSMatrixSoftMaxGradient super;};
struct GKGameCenterViewController {UINavigationController super;};
struct GKMatchmakerViewController {UINavigationController super;};
struct MPSCNNBinaryFullyConnected {MPSCNNBinaryConvolution super;};
struct VNImageRegistrationRequest {VNTargetedImageRequest super;};
struct EKEventEditViewController {UINavigationController super;};
struct MPSCNNConvolutionGradient {MPSCNNGradientKernel super;};
struct CKModifyRecordsOperation {CKDatabaseOperation super;};
struct MPSCNNArithmeticGradient {MPSCNNGradientKernel super;};
struct MPSCNNLogSoftMaxGradient {MPSCNNGradientKernel super;};
struct MPSCNNUpsamplingBilinear {MPSCNNUpsampling super;};
struct MPSCNNUpsamplingGradient {MPSCNNGradientKernel super;};
struct MPSImageReduceColumnMean {MPSImageReduceUnary super;};
struct MPSNDArrayGatherGradient {MPSNDArrayBinaryPrimaryGradientKernel super;};
struct CKFetchRecordsOperation {CKDatabaseOperation super;};
struct MPSCNNDilatedPoolingMax {MPSCNNPooling super;};
struct MPSCNNUpsamplingNearest {MPSCNNUpsampling super;};
struct MPSImageReduceColumnMax {MPSImageReduceUnary super;};
struct MPSImageReduceColumnMin {MPSImageReduceUnary super;};
struct MPSImageReduceColumnSum {MPSImageReduceUnary super;};
struct UIImagePickerController {UINavigationController super;};
struct UIVideoEditorController {UINavigationController super;};
struct MPSCNNMultiplyGradient {MPSCNNArithmeticGradient super;};
struct MPSCNNSubtractGradient {MPSCNNArithmeticGradient super;};
struct MPSNDArrayStridedSlice {MPSNDArrayUnaryKernel super;};
struct MPSCNNDropoutGradient {MPSCNNGradientKernel super;};
struct MPSCNNPoolingGradient {MPSCNNGradientKernel super;};
struct MPSCNNSoftMaxGradient {MPSCNNGradientKernel super;};
struct MPSImageReduceRowMean {MPSImageReduceUnary super;};
struct MPSNNReduceColumnMean {MPSNNReduceUnary super;};
struct MPSCNNFullyConnected {MPSCNNConvolution super;};
struct MPSCNNPoolingAverage {MPSCNNPooling super;};
struct MPSImageReduceRowMax {MPSImageReduceUnary super;};
struct MPSImageReduceRowMin {MPSImageReduceUnary super;};
struct MPSImageReduceRowSum {MPSImageReduceUnary super;};
struct MPSNNReduceColumnMax {MPSNNReduceUnary super;};
struct MPSNNReduceColumnMin {MPSNNReduceUnary super;};
struct MPSNNReduceColumnSum {MPSNNReduceUnary super;};
struct MPSCNNPoolingL2Norm {MPSCNNPooling super;};
struct MPSNNReduceRowMean {MPSNNReduceUnary super;};
struct MPSCNNAddGradient {MPSCNNArithmeticGradient super;};
struct MPSNNReduceRowMax {MPSNNReduceUnary super;};
struct MPSNNReduceRowMin {MPSNNReduceUnary super;};
struct MPSNNReduceRowSum {MPSNNReduceUnary super;};
struct UISearchTextField {UITextField super;};
struct MPSCNNPoolingMax {MPSCNNPooling super;};
struct std____1____compressed_pair_std__basic_string_char16_t_____rep__std__allocator_char16_t__ { std____1____compressed_pair_elem_std__basic_string_char16_t_____rep__0__false_ cppsuper0;std____1____compressed_pair_elem_std__allocator_char16_t___1__true_ cppsuper1;};
struct std____1____compressed_pair_std__basic_string_char32_t_____rep__std__allocator_char32_t__ { std____1____compressed_pair_elem_std__basic_string_char32_t_____rep__0__false_ cppsuper0;std____1____compressed_pair_elem_std__allocator_char32_t___1__true_ cppsuper1;};
struct std____1____compressed_pair_std__basic_string_wchar_t_____rep__std__allocator_wchar_t__ { std____1____compressed_pair_elem_std__basic_string_wchar_t_____rep__0__false_ cppsuper0;std____1____compressed_pair_elem_std__allocator_wchar_t___1__true_ cppsuper1;};
struct std____1____compressed_pair_std__basic_string_char_____rep__std__allocator_char__ { std____1____compressed_pair_elem_std__basic_string_char_____rep__0__false_ cppsuper0;std____1____compressed_pair_elem_std__allocator_char___1__true_ cppsuper1;};
struct std____1____bit_const_reference_std____bitset_0__0__ {std____1____bit_const_reference_std____bitset_0__0______storage_pointer __seg_;std____1____bit_const_reference_std____bitset_0__0______storage_type __mask_;};
struct std____1____bit_reference_std____bitset_0__0___true_ {std____1____bit_reference_std____bitset_0__0___true_____storage_pointer __seg_;std____1____bit_reference_std____bitset_0__0___true_____storage_type __mask_;};
struct std____1__basic_string_char16_t_ { std____1____basic_string_common_true_ cppsuper0;std____1____compressed_pair_std__basic_string_char16_t_____rep__std__allocator_char16_t__ __r_;};
struct std____1__basic_string_char32_t_ { std____1____basic_string_common_true_ cppsuper0;std____1____compressed_pair_std__basic_string_char32_t_____rep__std__allocator_char32_t__ __r_;};
struct MortSubtable {UInt16 length;UInt16 coverage;MortSubtableMaskFlags flags;MortSpecificSubtable u;};
struct MorxSubtable {UInt32 length;UInt32 coverage;MortSubtableMaskFlags flags;MorxSpecificSubtable u;};
struct VNTranslationalImageRegistrationRequest {VNImageRegistrationRequest super;};
struct VNHomographicImageRegistrationRequest {VNImageRegistrationRequest super;};
struct MPSCNNUpsamplingBilinearGradient {MPSCNNUpsamplingGradient super;};
struct MPSCNNDilatedPoolingMaxGradient {MPSCNNPoolingGradient super;};
struct MPSCNNUpsamplingNearestGradient {MPSCNNUpsamplingGradient super;};
struct std____1__basic_string_wchar_t_ {std____1____compressed_pair_std__basic_string_wchar_t_____rep__std__allocator_wchar_t__ __r_;};
struct MPSCNNFullyConnectedGradient {MPSCNNConvolutionGradient super;};
struct MPSCNNPoolingAverageGradient {MPSCNNPoolingGradient super;};
struct std____1__basic_string_char_ {std____1____compressed_pair_std__basic_string_char_____rep__std__allocator_char__ __r_;};
struct GKAchievementViewController {GKGameCenterViewController super;};
struct GKLeaderboardViewController {GKGameCenterViewController super;};
struct MPSCNNPoolingL2NormGradient {MPSCNNPoolingGradient super;};
struct MPSCNNPoolingMaxGradient {MPSCNNPoolingGradient super;};



/// #endif ===true


