#define GHIDRA
#ifndef INCLUDE_GUARD_uefi64_til
#define INCLUDE_GUARD_uefi64_til
#include "../../../../IDAPlugins/idatil2c/common.h"



union s_pxe_cpb_nvdata_sparse___19EFFCE7218537726B6C299C17662D42___72A164B415E82380E188643B9ADB397A;
struct ____85E04D9594D569B0B1B2009C8255CCE6___6E35CCFC02D81E31BD4C6BEDD77CB20A;
struct ____8BAB8145E7DE54837B65F56B2E38C9CF___BEA82FFFCF7E25A2CCFAA7CF74921A50;
struct ____C9A4ABCA41DC78BE4A0192C5281BD368___B2E03ED94C06E2E681F8D03FF7FF5CB3;
struct ____DC0BAFAEDE9FCAFF80C457AFB6D04FDA___DADC775BEF5E9EA8DCFD18C68E476C3D;
union _053218E54E0AD47DEB9BF7DE578D522B___C7D0B743AB952EFC2A7AFEAC431E367D;
struct _064489EE9225A9F91BDA07A272CAAD06___E706CFC4C6B3ED37759EEF049F65CAF6;
union _08D4D8EF781E325E516B9DF5F384A04D___4E1585B4C3042799F4326DB06A0CBA14;
union _0E1C314154D40BBA527682AF090FB242___270CE8F4605A49DF14F287E637150C83;
union _0F934B3B6D925568E8AB6A57CC3AA362___A92FF03DC9B9AB6EE64CCBB259EA1815;
struct _13B2187B9E87DE389FB12248DFED0432___F7ACA43080600E861C37342251ABE5FC;
struct _189FD79781FBFBAF9A08606330F98EF8___720BB4348BD623025C3D08B2C13CC5E9;
struct _1BD84297A21C9A50FCE6DE8FD55A3DE1___B13D69F90F32FA0ABCE3B85F6D444DDF;
struct _21300D4394F4C27F6B0FB693B1665CFE___3393EBBCF6DC9FFA6559E8EA3A39FD44;
union _2346AEA35C9D7D084E7EF0424AFB9CF6___0095214DD0AAAA7723F453E6842617CF;
union _23958E38AF544E49B6D98E0B1C04F079___8BAB8145E7DE54837B65F56B2E38C9CF;
union _28DB4FBE9CCCDE1C86BBB2321A60804C___FE2B1D9AD239749A6732AE19877CEB05;
struct _2BC16837220E81124E1F23E51D05BC4D___E06B2E720146A9996925865D17D55FA5;
struct _2CB9EDC2CA76331E5EBDD1F9698853B1___7C29BA7491EF625F4A7EF55F1EB9DA69;
struct _2EB10352A9B67ABEC81EADBB1E83EE89___0ED18297D8600E57385C990E0B0A9B5B;
struct _31E9CB5CFBDE614C3E2B0999B633A6B4___2ABA17BD0BBC6518571AFE7296D4D674;
struct _31E9CB5CFBDE614C3E2B0999B633A6B4___2BAFA71B4E3F86C6DE401586015B2E35;
struct _31E9CB5CFBDE614C3E2B0999B633A6B4___412D3563C96312F953403FD110B45676;
struct _31E9CB5CFBDE614C3E2B0999B633A6B4___E4442E5F6EC1640A130B3E3B0DF32964;
union _43A0E8C65EC56F9D699C6118165E9DE1___0116443B75BBA1B64EDB148A57294B61;
struct _45BF217DBC3ED611F5A350EB16713DCF___699DAE59EF0C004B488477E53808748D;
union _514098925362A3D4F3AE39E7826BDCB0___BE2119392D04BC3627A77C4E2AEA201B;
struct _518876D0C27A9CD079BA54115713EEC3___E036DE9CA1016FA69C7BDC962047C4BD;
struct _63B58ABB6690812C9E02ADD697E36664___52BDCD81E958047DDA7B3FF817AAA801;
struct _63B58ABB6690812C9E02ADD697E36664___5BD987BD46EA8F9F7F2F7E2A8AC77E64;
struct _63B58ABB6690812C9E02ADD697E36664___8939B74F56EDEA9494CD062DBB9CCA20;
struct _63B58ABB6690812C9E02ADD697E36664___C41FF125555157F7F4869E4DBCC53082;
struct _6A1ABF627FBE0922AA9EF24F9E956DFA___1842207844FF6E29A09B397245758A8F;
union _72D94C4FF762A2E1D25032A0037FC0CD___85E04D9594D569B0B1B2009C8255CCE6;
union _72D94C4FF762A2E1D25032A0037FC0CD___C9A4ABCA41DC78BE4A0192C5281BD368;
struct _72DB0F79E0951D75542C31FE649E11C3___E701FF71F4D10987618ED6314B4FE49F;
struct _72EFF1B7CF5BD83F0E27F61163B8B619___77CFDA927F6639C3DE257BE4DE8CE369;
union _79DA16AE253D27DC3A6F31A8B9020499___0571F174878059208283A16275BC34FB;
struct _7C5F9768C94386CA7F4E7DC66B8830A3___6BEF19C9FA8303F6270AA3937FD58289;
struct _7C5F9768C94386CA7F4E7DC66B8830A3___858D6277A804C73ADA47D55724ADB58D;
struct _7C5F9768C94386CA7F4E7DC66B8830A3___A212324E7A459AFFA4D7658AFAB6C77C;
struct _80683930D45E06D3195B4F9BDBEC48CB___FFB3E7B8DBDAAE83694BDE6360C01F1F;
struct _8B2452E5B9D1FF29DC352664F48A8AF5___1FA7CE43D64A8C4BC04A6EDD657AEB9B;
union _9A6797B410FBAAB39378A4754EB07363___BF9A1EFF9702CB017FE778751D5F44DE;
struct _9A8860F6C14A61B836CF024812302798___7DB2686D5239E82BF5B1C028852998F9;
struct _A49E72078B76F4AC4F7118FBBDCD4631___2DC13699A76F9BC933E211ED4CAFE3CC;
struct _A5F962F37CF2F693830E47777CAE8939___4FBE0E1634510674E7090E3CDB70B8AD;
union _A85672E1F3F2CA4FD8275099D6728D85___C1429C3019ECE9730FDABFDC49B7E27B;
struct _A9C6387FF17B0FE0A5B3AEC55D0E1F1C___925E33C35CCABA38B5334E9AAF082C7F;
struct _AD5D0A6DCE5F64CFAF357BB3A0648A64___CCA9129B464F64851293FECA407CE2C6;
struct _B5A92F8B2B3252A716F3F5184DF78D07___AD7EE62ABCCCCA737ABA864527ADAD6D;
struct _B912CBA3C10871F54570C4C0430A0F81___928DAC4DB38E41CC18651AD3B5064070;
struct _B9B6CC471BCB7F4A305FC2D80D0AA4C0___5F1D9E908CC7F0E7610C5D5BF79F764D;
struct _BAA371FD3705A9DA82A7651CF9EF53DA___78056429B4AE981D96BF2EB5C0ABFB5E;
struct _BAA371FD3705A9DA82A7651CF9EF53DA___83ADE8757A716942AB3BE3531FD405EA;
struct _C3A285CD1904EDCDB417EC8F5027A1F0___8605AB9F7C5F80EC94F069DA8FDA2EDF;
union _DD90A6460ECECB32C3E9F65C84643F1C___AD59633F046663C4886B84BC360D5A3B;
union _DF22CF9CA9B769C51E2E573A6985619A___7771E727E13B5BCC6B37DC43F23FC4AB;
struct _E05C756931CF804D039B8584A5FAC0BF___DAC29709A469181C8D406C586558B3B0;
union _E4A56E909B566E944F516D2F131E248A___3665F245BC54D27AD2AF264354DA6B4B;
struct _F5238921CBF27C887BB68ABA324F3CCD___405FFA32E424EC0EAFFB9D1AFA2DB98D;
union _F82C7CF31A94CF1E43C42E26FF4F1D8A___DC0BAFAEDE9FCAFF80C457AFB6D04FDA;
union _F9D42D39DD3C8DF123E27FB71942E14A___EB8B4300FB02606D6E51BF3C2273DE54;
struct s_pxe_cpb_fill_header_fragmented___B13E8BB19B25C47A4B5B59F0D316DBC1;
struct s_pxe_cpb_transmit_fragments___B13E8BB19B25C47A4B5B59F0D316DBC1;
union _EFI_IFR_QUESTION_HEADER___A8B68B5C3AAC68D222728D2BA143C346;
struct s_pxe_cpb_nvdata_sparse___19EFFCE7218537726B6C299C17662D42;
union s_pxe_pcc_config_info___2F4D249696DEF23C47AB9F3C3556EA7B;
union s_pxe_pci_config_info___412989C10B2DD518EBDBBC089E445D5C;
union _EFI_IMAGE_OUTPUT___4FC8C3BF42F93F42A468A5773430D9F5;
union _EFI_IPSEC_PAD_ID___13F599595FA3B2E59D359AF10D9E980C;
struct undiconfig_table___E4D37D6E09D6D39D1DAF0D3F49E6ABB4;
union s_pxe_db_nvdata___41B437E8E7B04A71AA3DE9FFDB4ECD25;
struct _EFI_PCI_HOST_BRIDGE_RESOURCE_ALLOCATION_PROTOCOL;
union _EFI_IFR_GET___A8B68B5C3AAC68D222728D2BA143C346;
union _EFI_IFR_SET___A8B68B5C3AAC68D222728D2BA143C346;
struct _EFI_I2C_BUS_CONFIGURATION_MANAGEMENT_PROTOCOL;
struct _EFI_PLATFORM_TO_DRIVER_CONFIGURATION_PROTOCOL;
struct _EFI_INCOMPATIBLE_PCI_DEVICE_SUPPORT_PROTOCOL;
struct _FRAMEWORK_EFI_FIRMWARE_VOLUME_BLOCK_PROTOCOL;
struct pxe_device___659A000D21D539E7D9FC0CA6CF59ACAE;
struct _EFI_BUS_SPECIFIC_DRIVER_OVERRIDE_PROTOCOL;
struct _EFI_DRIVER_SUPPORTED_EFI_VERSION_PROTOCOL;
struct _EFI_NETWORK_INTERFACE_IDENTIFIER_PROTOCOL;
struct _EFI_SMM_PERIODIC_TIMER_DISPATCH2_PROTOCOL;
struct _EFI_SMM_STANDBY_BUTTON_DISPATCH2_PROTOCOL;
union _UDP_IO___32819A293148F95F3B4A29C7F42325D3;
union _UDP_IO___B47D131A600585656086C9588CC190F1;
struct _EFI_PCI_EXPRESS_BASE_ADDRESS_INFORMATION;
struct _EFI_SMM_PERIODIC_TIMER_DISPATCH_PROTOCOL;
struct _EFI_SMM_STANDBY_BUTTON_DISPATCH_PROTOCOL;
struct _EFI_SMM_POWER_BUTTON_DISPATCH2_PROTOCOL;
struct _EDKII_FORM_BROWSER_EXTENSION2_PROTOCOL;
struct _EFI_EAPOL_SUPPLICANT_PAE_CONFIGURATION;
struct _EFI_GUIDED_SECTION_EXTRACTION_PROTOCOL;
struct _EFI_SMM_POWER_BUTTON_DISPATCH_PROTOCOL;
struct _EFI_HII_IIBT_IMAGE_8BIT_PALETTE_BLOCK;
struct _EFI_PEI_GUIDED_SECTION_EXTRACTION_PPI;
struct _EFI_PLATFORM_DRIVER_OVERRIDE_PROTOCOL;
struct _EFI_STORAGE_SECURITY_COMMAND_PROTOCOL;
struct _EFI_HII_IIBT_IMAGE_24BIT_TRANS_BLOCK;
struct _EFI_HII_SIBT_STRINGS_SCSU_FONT_BLOCK;
struct _EFI_HII_SIBT_STRINGS_UCS2_FONT_BLOCK;
struct _EFI_WIRELESS_MAC_CONNECTION_PROTOCOL;
struct ____E701FF71F4D10987618ED6314B4FE49F;
struct _EFI_CONFIG_KEYWORD_HANDLER_PROTOCOL;
struct _EFI_DRIVER_FAMILY_OVERRIDE_PROTOCOL;
struct _EFI_EAPOL_SUPPLICANT_PAE_STATISTICS;
struct _EFI_FORM_BROWSER_EXTENSION_PROTOCOL;
struct _EFI_HII_IIBT_IMAGE_1BIT_TRANS_BLOCK;
struct _EFI_HII_IIBT_IMAGE_4BIT_TRANS_BLOCK;
struct _EFI_HII_IIBT_IMAGE_8BIT_TRANS_BLOCK;
struct _EFI_HII_SIBT_STRING_SCSU_FONT_BLOCK;
struct _EFI_HII_SIBT_STRING_UCS2_FONT_BLOCK;
struct _EFI_PXE_BASE_CODE_CALLBACK_PROTOCOL;
struct _EDKII_UFS_HOST_CONTROLLER_PROTOCOL;
struct _EFI_DRIVER_CONFIGURATION2_PROTOCOL;
struct _EFI_FIRMWARE_VOLUME_BLOCK_PROTOCOL;
struct _EFI_NVM_EXPRESS_PASS_THRU_PROTOCOL;
struct _EFI_PEI_DEVICE_RECOVERY_MODULE_PPI;
struct _EFI_SHELL_DYNAMIC_COMMAND_PROTOCOL;
struct _EFI_SMM_IO_TRAP_DISPATCH2_PROTOCOL;
struct _EXTENDED_SAL_BOOT_SERVICE_PROTOCOL;
struct _FRAMEWORK_EFI_MP_SERVICES_PROTOCOL;
struct _EFI_DRIVER_CONFIGURATION_PROTOCOL;
struct _EFI_FAULT_TOLERANT_WRITE_PROTOCOL;
struct _EFI_HII_AIBT_OVERLAY_IMAGES_BLOCK;
struct _EFI_HII_GIBT_GLYPHS_DEFAULT_BLOCK;
struct _EFI_HII_IMAGE_PALETTE_INFO_HEADER;
struct _EFI_ISCSI_INITIATOR_NAME_PROTOCOL;
struct _EFI_LEGACY_BIOS_PLATFORM_PROTOCOL;
struct _EFI_PEI_FIRMWARE_VOLUME_INFO2_PPI;
struct _EFI_SEC_PLATFORM_INFORMATION2_PPI;
struct _EFI_SIMPLE_TEXT_INPUT_EX_PROTOCOL;
struct tdEFI_TCG2_BOOT_SERVICE_CAPABILITY;
struct _001DB780DBF46CC1B2DAFABB65012B21;
struct _005E951D494B668346BD445CA4D8E682;
struct _00A5C51788377BE5F8CEE496673821D9;
struct _01201FCFD96DE29838922AB74111EF6C;
struct _0187B879DFDE98BF50709C8BB4D8DC1A;
struct _025FB47D66D224523DBEA929EE89F4D1;
struct _0279D7D1FD4588B9E88F84CCCE0284C6;
struct _02920E45F2EA2A3AFAEE9BE480D935A9;
struct _02DFB6BBE8A0FE409E702C0F2DE27832;
struct _02E47AE4B1191769ABD100C4DCCF3B8C;
struct _02E9892AD1173F57B0D9DCAEE7462CAD;
struct _037A7121310F6FC2A5E2428EF944B3F1;
struct _03C169547699C2033BF44B51FAFF1E5C;
struct _03D7420C3CE737299CCE486081392B67;
struct _03E906D7136C60A5F52813B96CFD1F89;
union _03F53B4ABFCF1B5C29663F845B2E3FB1;
union _03FBB74301AF73D9ED97B5AF89E37820;
struct _03FCBC19C10EBCCF3C938B73B2A76388;
struct _04145B7E34126927318BEC00867DE1C0;
struct _04211BAC36A0C3642E48C93F963D55B3;
struct _045E63C52D363788AB61174A38E56D57;
union _04EC12C93849E862E031F174B0DFCB1E;
struct _04F9B4AC61B2378777D341FA7F453C9C;
struct _051ACF97DA2B9D5148EDE2E40852C3BC;
struct _053218E54E0AD47DEB9BF7DE578D522B;
union _05333A0F315413F4B234A464077EED47;
struct _0533523530C6224D8C91920E25F98E5C;
struct _05374CD723BB736B76BC23503CF5826E;
struct _054D116A6266D7B79D025BB0E63173BB;
struct _05683FAC1D9C40DFEA2926E525216607;
struct _0570B17222F3251C7E7975035D72282F;
struct _05768ECA08FD0615ADAEFAF110DCA85D;
struct _0591ECE004F4E3FCF755AB0D385F118A;
struct _05C0B7DFCC4B801203DDDF0EC0F7B25C;
struct _05D489AAC0F9BB1887D00026D4310FE7;
struct _05F1ED27DA776E2B6446677EC05B8681;
struct _060F4871B65A64695C5E0D6D3EA0B10A;
struct _061D9092A34041E6AFB688EEE464331D;
struct _063BD0316AECCE23EF45CE76FCEFE8DB;
union _064489EE9225A9F91BDA07A272CAAD06;
struct _0687BFFC755475C647C041DCC8866A0C;
struct _068E160FC62FFE8A9A8C3D0DCCD74500;
struct _06DB6DB5B5102F8E7C4034120A28470F;
union _06DD80FC04169EA2A724593886CB6922;
struct _0704109AA9E0FECF23DFB168BA173E5D;
struct _0738A23427E5503DBDE5DEE56C3C70A1;
struct _07395639D7489D60157EAB4BA967E290;
struct _0748F0574479A694305288EDDF16D0C6;
struct _079CCC9A8ED9998C019F85FD77F39906;
struct _07D3EF598D540C16FB35D413F0F252D7;
struct _0831F8F0C244ACA3C5EEA0CD710FB4C5;
struct _086532C43F52DA4742BC21A63368B6D6;
struct _08785EA3AB2704170B8742C9F1FAEEE4;
union _08801BEA1B1EEB150B067CE39DB07F05;
struct _08BCC68AFD0F82A72398BBF1008F4384;
struct _08D4D8EF781E325E516B9DF5F384A04D;
struct _08DB8EA3216404F09CBCE8BC640796A1;
struct _08FDCA320F8CA4513298F7B531DB8F28;
union _090A03EDD1E347FB71B0BFE955C26CED;
struct _0916FCECC27976C81B9ECD4BAD6A16A2;
struct _0939F1229F8A498E026AA216C4326EE0;
union _0948BB90A898DF0B2BCF28CC42D77B5E;
struct _09B7F6ABCC0579263631A2B4F04B2C9E;
struct _09D1CCD0BDB5F5092D4EB9BF52A7518F;
struct _09F99C0FCBF42BE1DEE90FE7A2004CDB;
struct _0A64B2C198268F8E9BBD337C23AB2846;
struct _0AEF62DF78B697AA9EAAF2AB6ABDA9F8;
struct _0B1486E1B93958FC8F6A72435EE19098;
struct _0B4D06972EA9D643500DE895FC601FFB;
struct _0B50ACA466291C2012B3546AEC85F4D2;
struct _0B58B179106A72DC5971B21BA2C44F1E;
union _0B73A95D4C46C39A91D502964C8E2377;
struct _0BC60492AFAA0F9B3A141CC70E8062D2;
struct _0BC8E39BB53636F12495B948C7ADEFF7;
struct _0BD318F0FBBE20ABFA06468A5B13DA9A;
struct _0BE4EA6FDFC9F098B57474A52E44A82D;
struct _0C0BCAF52A2AB260D0BEFAF32C226C90;
struct _0C2D9EAA83889452A7A72FC6A5E83CA9;
struct _0C7935E5C3B449DD062B7B3924850C94;
struct _0C7BCB68DD0E324F4A9D3964DBF59972;
struct _0C90ECF20B74BF0C999246AF56E6C728;
struct _0D2B439BBCFA9107A45A2892FA968ED5;
struct _0D9BB19242CFE021E4211F1789A11B8C;
struct _0DF7F58F05BA8A47511D9D774FEBEBBB;
struct _0DFB5ABEC4B6100E9816A4F84E51E06B;
struct _0E1C314154D40BBA527682AF090FB242;
union _0E23B8B4FFDB8955E98672FF836F7A4E;
struct _0E2414798071F364F15E4A11E952DB9B;
struct _0E283308D13FEE21B5F736A1468FA7B5;
struct _0E74BDB6838C2A67195E44263ED31BF0;
struct _0EADD5243AAFE5F53B0E940963814CF0;
struct _0EB51215E6D24F7F450276E06012FB33;
struct _0EE4DE2734B075BC9FABFCD2440FDF22;
struct _0F200C5991ECE5F6E83129578DBE64CB;
struct _0F26ACC6D4E0B18480126DF434086C83;
struct _0F2D904792B9EA847A4B26FF6B417642;
struct _0F934B3B6D925568E8AB6A57CC3AA362;
struct _0FBE0DD4E58474FD160BBF5E1E7FF604;
struct _0FEA5F6D88E10CE3051A04985473800C;
struct _1008A27E3314C410F0C714DEBA727987;
struct _100D81B4237FAB0EBA630D1B6897A38B;
struct _1035A196500098FC0D27A8D2AAA76E56;
struct _1047125A16E8B1B7E5254F92231CBD48;
struct _104E104B995BF192D734545FE5C51D74;
struct _108169C987AD0AF6BA52F11EF45C1E8B;
struct _1088159707752B3904E9F3E2A127A315;
struct _10B051C0C3250DD0B8B86596FC8844A4;
struct _10C10574ED0AE2ED1280822FCD0AF487;
struct _1146BED2FF4E61E742E6E1487898EE2B;
union _11CEE68E50CEECB8C366DF9DDD7306D1;
struct _120AC7D9FEC0F7C7446E1F6579420CD9;
struct _120BA447C6AA090F9036528BA5F22CD6;
union _123E07857B1D3AADB4E61F24EB33B88D;
union _128168933DC57D6D560051B3DFD63BA3;
struct _1283F8C9D8D312BEBB5EF5975CA49501;
struct _12B1457D9A7446589049CD55635FF437;
struct _12B4A611596D72B7C4F573F484E593F7;
struct _134DD5DE943212431F82B8FEEA5AC192;
struct _135A40A0509E9B3223D5309856D0560B;
struct _1362BCD7E4BA59AEBA1005AB99DE937D;
struct _137EBC2235106C5FD5B063360A864DB6;
struct _138354A4B6EE32FB8CA73971C51237F0;
struct _139C1CF7A7B81607B0C74C6F8C17369D;
union _13B2187B9E87DE389FB12248DFED0432;
struct _13B6FAE3354B456DA36A9D855F5E14C8;
struct _13D6FB99381342E03820A8D6A67E6627;
struct _1409ABB5DE15AF90B779F0C11012079A;
struct _147023CBBDBEDFDDB4978B461569FA75;
union _149F3B707450891669292D33A510652F;
struct _14D190ACC072CEBB80B7F04EB11E8F66;
struct _14DB003681FC3CDE480991316592033F;
struct _1535F7B86AE88BCB9B997AA9482B66E8;
struct _158E4544DB3B6B6B9F4E93768A523E23;
struct _15A30082C4C5935685683A1E67F4A9B5;
struct _15A49F419DCE8915B951AE1411FD501B;
struct _15C291F1B4915B5E6D0DFE973FD283A4;
struct _1600FD3E6C89917A4CE7336750A644B2;
struct _160C100133D008EF49A6864DD19B1099;
struct _1643288C018D61D457BCDB1FB4A997E8;
struct _164C5566F9B29D1B4EF89603CE89E043;
struct _165CEA13633C6239E6601DDEAE0E5013;
struct _16674B090943CEC0E7007F9E85E554E8;
struct _16724BBD91DBF8D47E877525B5D02DAA;
struct _16C1C0501231D7862009016A4B74D4C3;
struct _16D263F2539C0B1C79D62B0DEF479AC3;
struct _16E76D9A60CF6DD7C7D18F88A3A8FBFA;
struct _16F9082739EE6C04847F72AA2153A45C;
struct _176AC7AE0E05CE820A1B8E2BF57AAE43;
struct _17943BCA47BDF74A702F60BA16B9A882;
struct _17AEEDA15E6135533C6141EEE09D895F;
struct _17B0DA9AD07A993BB3BF88A240BF391B;
struct _17BC026F246D15D039186392C4AC032A;
struct _180AF0FF73D9B657F0CEB8E21576AB99;
struct _182665C6086B79FDC64227DFF8CA49B3;
struct _185A50620A8534E41967A99303668A69;
struct _185CE2990D69589CB51D6DD32266168D;
struct _189D1DC770D3AF583D5731F1D975520D;
union _189FD79781FBFBAF9A08606330F98EF8;
struct _18B3A86D0733C3A21CCF2F86BC53F436;
struct _18EA1675A7C3746C57C2E2D91374C2FB;
struct _18FF71C523EE0E659FF9048C9ADED567;
struct _1900D0CF38613B02DB3CF0343CF6EF59;
struct _1945A6013D58E9BCC453AA4D31F6530C;
struct _194EC0185A34D4795B973BC338193054;
struct _194FA9FA22B5ACAE94C18533FEF75733;
struct _19C5FC9A51293924C18E2EBFCCA05580;
struct _19E015F78D84F7826E599D78ED7DA7D3;
struct _19F190913E875776DB98D900DE592887;
struct _1A15A92F570159E57EFF988D765B1A6C;
struct _1AA13847B05D77E669FEE563F5BAB3FD;
struct _1AFA0B1BEAF8357FC0FB7159EE6E5404;
struct _1B2FC3F5690A0ED9DF6CC6085418DEC4;
struct _1B75C64F3853882ACF28C9882F2A7EE6;
struct _1B856EE7FF1B29CEB3E0F03133DD380C;
union _1B9299E1982A04DFFD37BAFD7CCC9536;
struct _1B987404B564D530EFBB6B88FB26FA27;
struct _1BADC5D7EB127C90EDBAFF16C8975039;
struct _1BB6702D0F95E9E88DF05157AF2B5B12;
struct _1BC61AC7E1182BB70CE7EB3AE9DEEC10;
union _1BD84297A21C9A50FCE6DE8FD55A3DE1;
struct _1BE59F2B056A6ABF2DDA9D926A1AE05C;
struct _1BEB5F5D195680F06D7E4F2EE4620516;
struct _1C16E1C08D15DE2A87D351D2ED5ECB7C;
struct _1C77B76F7209E6FA2397C6D5BFA84409;
struct _1CD62EA41C939E1C656209CB02CED207;
struct _1D079842E3EC7F9F45FFA256EC54E3EF;
struct _1D0A4F22DA7C3812E451925235ECCAB6;
union _1D15C627A7B6A1604BA06230A4689DD1;
struct _1D18BD375A46810C6FF3BC7DE3F3FFCD;
struct _1D55C2E207DB73926762219F2515EF1B;
struct _1D71F8E09FA05ED6FAA2CBB8B3F79E1E;
struct _1D7B25FDF36FC0DCF9D3F15198E6892D;
struct _1D81A62B985707A48E0901106C1EB1C5;
struct _1D968FBACBA87C9F0C85783A77EF2C95;
struct _1DB444471397DD3F559BE290F14258FA;
struct _1DC9A8B91EFF5C97ABBBC3E0E26E6DE5;
struct _1E0D073C36FF4EEB406B745BB1E29357;
struct _1E1CF64703927002B617103938E22FA5;
struct _1E3F2F4B7DEFDE62C88BF1438AD659A4;
struct _1EA17B726046B3496B0436F45751EDB9;
struct _1F0483A856E91CBF88271525A8766DD2;
struct _1F215FA5274C3CF725ACFAF5802558B4;
struct _1F3B348F27D4663FB5F9609464BE8B8E;
struct _1FABF24343CB7C543563ACB5DC47D248;
struct _1FD5E1697B5014547CA1AF0794430D19;
struct _1FE9337B5A71DEC04A03C63F34E65E8A;
struct _203545BB35CF1DA97401FB9442416DCA;
struct _2048CF864A4EE2DE1F0239C724DBAEC4;
struct _20ED846744D509B620B690D658C2AC6D;
struct _20EDE69EF9795E7F12F90E8C7CC22AF8;
union _21300D4394F4C27F6B0FB693B1665CFE;
struct _2145929F04F6510A853C703BEA654B22;
union _216B2186A7BA92D3D6EC7F4F72322E99;
struct _21B1BD905B1B82A96F595CACADB4BBCF;
struct _21FCFD4370A77BD9A330965E1A2EF6B8;
struct _22108DFF95A395D1C014946DE1B1A386;
struct _2216D4214E265766C1A0B0A7C6BAA199;
struct _22A2111A59A4E7F8B11ABAF35EC73175;
struct _22C6984C10E23D4728D2DD0DE382EE68;
struct _22C9BF1ED3B52C9A62C27D46097EFE95;
struct _2346AEA35C9D7D084E7EF0424AFB9CF6;
struct _238E6635CBCE7D06BD71AA7F0FB8394A;
struct _23958E38AF544E49B6D98E0B1C04F079;
struct _23F89506555E7CF5AAADC8587C0EADC7;
struct _242AB9A269C1F8977AAACB4B96496CF4;
struct _244D31417EE53E4184DFD3241B59D73A;
struct _245EABCE14800BB4F506C211CCF9ADFB;
struct _24C64E6FF9FEFC4F546A1515D1BC2428;
struct _24E30838B41D77CF76B20463CBB19FAC;
struct _24E988B8AC7E4F6242EAEA675339F6B0;
struct _24F38648B15D20A4EE161EA411756A18;
union _253E16287E1610AF0271BFD5397148D6;
union _2583E43EAC8C47D8851C57B0317D7D44;
struct _260E0CDB7AC319793FEFB6E6E6BADEDC;
struct _263823646A9EDCA988CE12E2C7912492;
struct _2683B887276D2C99DB7E6707206C3541;
struct _26A9FD80ACBBCC67D0EAB69F6998B5AD;
struct _26B16192F256D03156C6EFAB277DFED7;
struct _26E1A5A6ABD02F217B53F396064F4D8A;
struct _26E91D2BB7FDA2C845F43A09E5B4079A;
struct _2703643F819FDE7BAF49055ABA177DC3;
struct _278508D8F64D0B86ACC34D0269C72011;
struct _27AE6DAC312C1772F7F4AB500994EB63;
struct _27CFB8A34AF8CAFEC925675D8C64A4A1;
struct _27D43449F90631E0AAF884FCC32869E8;
struct _27D99BE9B367911B3417445DC5CDA8F6;
struct _27F8FE6A6BCF7AEB14041AF9ACCB4FC7;
struct _28B0E3C3F8158DEFF17B56B84F095520;
struct _28DB4FBE9CCCDE1C86BBB2321A60804C;
union _2A0E6EB8B456FC25AA1F0F925DEB4107;
struct _2A3F985ABF5054CEFB126C29095BA930;
struct _2A798984CCC859E01B38F7089B098E60;
struct _2AB31C5C84D666EC665B67DCDCB65006;
struct _2B2441F12FFFDAC29B95546593891D3F;
struct _2B2FEE3F747F440F55DADE83B12DEC68;
struct _2B76BEE91D9E77941F9A934F328D179D;
struct _2B9C51E1EB0CFEA1A335CC815BBD80CF;
union _2BC16837220E81124E1F23E51D05BC4D;
struct _2BD7C335F0DD895A4E1D3C8C0D32D59C;
struct _2BFE4317F769CC510077190B28AFB68C;
struct _2C008F4EB15EC1AF9C3A363A3732DFB3;
struct _2CA9EC6012C6584BFB94BC02F6C66B70;
union _2CB9EDC2CA76331E5EBDD1F9698853B1;
struct _2CF69155883F5671704386E2323B7577;
struct _2D0A6C92B66271E9401738EEEFEBE79C;
struct _2D320466B587A93666D40489CEDD31F0;
struct _2D377D1DEDF6E4D5EE5F6C0C172C418F;
struct _2D5577F8CA49EBA695396A221DE9C683;
struct _2D795785E76C024412BECB40ED2E4527;
struct _2DF68590B8BC6352BB686A2EF4746F88;
struct _2DF7380EAF36015AF84A472A3B0FBE42;
struct _2E55797B6F4566322CE54CA5389087BA;
struct _2E729EBBBD6B2823C28E1754E584A42B;
struct _2E8E3E480907CEB724AF4E266B739D41;
struct _2EA1BD641991CBA14B33DC187BAD4A98;
union _2EB10352A9B67ABEC81EADBB1E83EE89;
union _2EFADF1D0568BC49D90C26C7EF2D672C;
struct _2FA6CE443FF86F17328922C5A9168445;
struct _3016E247537C24FA7732182030D115F2;
struct _30B15F6B38BE5B2538EAD5D8A09FC965;
struct _30E86135D612FC240B4D7CCC6EC8379E;
struct _30FFE48E89C138C7B76B568840ACED38;
struct _317D5CCA3E2F07BAE2E88F8B9E96A86E;
struct _318BB5C1C3DF58EA36C90E5CB8A1C7D8;
struct _318D42FD42A897F3751FCCFFAAD685DA;
struct _31A5E67A261669A26F08DB035F0F692E;
struct _31AB4F14E1C573210755755B47923018;
struct _31E78C603A0975994DAAE085398C0614;
union _31E9CB5CFBDE614C3E2B0999B633A6B4;
struct _31EAA50BFACAD085DC903568FC73FD55;
struct _321181A4E50AE9E66F3D5BC83776D1DC;
union _3252EF1C391473AA09CA889665471465;
struct _3279FC6A2B21CF07B01F7BD969D520A1;
struct _327CD12F9A59FE7154FCFAC0499BBF72;
union _3280120D17039F0C35393F7BCB14168E;
struct _3300059DD91743924CE884B6AAF6965C;
struct _3346E7C63FC5458160B58CD8CA56F035;
struct _33744E832FE3B5445A858CFCD8D3D200;
struct _3375147F2BA8E6E33D62D81E584F04A1;
struct _33EFD90D9BAD8D970035A0DA91BDBBB9;
struct _33F599C01F472A75885CD02E1089BF19;
struct _33FA6F11E355B0D724BCA1AF27F0CC54;
union _34000335362FFFA4AA2EC6446A30E5B3;
struct _3434E7F1690FD369EDEA019F51C2EFC7;
struct _3447B62854163D4AEE09FE9F61549458;
struct _348ED7D33E03403EE12F92BD2829FF3E;
struct _349131A490B3DCC13E0B058762E5091B;
struct _34C4AA3B6BDC0960B7F24D4539248B78;
struct _34EFBF63E04388C9C3FB9247D26E3A60;
struct _351D313CDE6C8F37C8F02CD3281ED67E;
struct _352C1AF0B77CD9BCC20C63D95A0CED3A;
struct _352D1AB719DE4F69FB6A98BC0FF8FA7B;
struct _3586E27D6D83D790E2F9C12516575AD2;
struct _359310853D1A7D73E5E094BBD8FC83B2;
struct _35A220C1A314F3209A3C8C2B7869DAEB;
struct _35B0ADA86CE6120227D7E440D5ABC3F5;
struct _35BD40F66A9DD04452C11345A7455F75;
struct _35C4D481EC05A8B672834DE7498ABDB4;
struct _36291DB4675549E3BB2DB664E05FF826;
struct _362EBAB6221B1063033D82FEB6541041;
struct _365641D7BE1820E0053F489ED61CB991;
struct _368C5796E3D91D2922D841C2984290BA;
struct _36982C089099B7BEE00BBFB921609DD9;
struct _36C6A5B1DF7611678118B938F91052AA;
struct _36FAC1EDEAA205A7F31A86DB529B3B5A;
struct _375CE3D3190F3E9E28E34C9C760A24AD;
struct _3774CDDC3C27E321FA545B5D6D5988FB;
union _3793CD92955580789EAEA0D05A428B4A;
struct _37A7EE8BF5E08FF8A71FA9F64F2825BD;
struct _37E9EA388AA4ABB1994F5C559292B032;
struct _37FE5FDAC942EB6E0E5F2E84772A13B3;
struct _383942B824C6F4B8025A7565ACA7F358;
struct _38895A73E62827E708AC1BEEDA34D9F2;
struct _388A0A822047BCA9116365DAF41AB443;
struct _38CE00742C32576C28D159A4B8278F80;
struct _3910C22C328550E099BEC9D2CFC7E7B1;
struct _39182558A763EA8FE473141BC9A77E7C;
struct _392019E8CCB9750AD5665539B6417DAB;
struct _3965C879A14F2E5509EB283A6FE477F3;
struct _39AC5BAB33C1EA968D16AFCF90882C1F;
struct _39B5C1DD9F9D2621C8E989C433C84D5E;
struct _3A244003871B8D811C1117464CE1EFAF;
union _3A40998E3347D0278E93D08606878B06;
struct _3A4EAC9E0776CF63D70ADBE2813E4E41;
struct _3A5AA40A7162941AAC6EA924D537E844;
union _3A77E8071C6D2AEAA192B14C13365630;
struct _3ACE1CF93237BB82D17E0610DB6007EE;
struct _3AE7F9F006A8FACAD1D4B79518828FB5;
struct _3AE93AF66E5CDFC959FD4700EA8A3AFF;
struct _3AF249E395D4763EB3424664CB07F301;
struct _3B0303FF1442A3EC45A1160316AE81ED;
struct _3B20605EA09536B4367411F2FAFF7675;
union _3B35CDC5D61CFFE1B0CA5FCE3EBF2BD3;
struct _3B39653E3BF850CC816DD09E5250A1D9;
struct _3B3A9EA8DC22C7FF9667FA082E39E518;
struct _3B3E1E99674685BB73C22F9320B2CB91;
struct _3B494AB02174C47782BE1700D6EAB32E;
struct _3B5F65496624BA01FACEE483228DAA16;
struct _3B73284331852D03FD87BEF8A696A753;
struct _3C65EE24A7D7405EB55CFDAE3ED0C45F;
struct _3C85D21A1A49B0FEE4DECA019A2D6DF4;
struct _3C9AB105FD28B8288E14BA99F6B77FA1;
struct _3C9F44A6BA0669D2A307E9D45A380595;
struct _3CC8AB98B6D3DA5B57DC01638DDC8302;
struct _3D19AB9A470BF56182098D487246055F;
struct _3D3EAA90EBA362C2D0ED1CB8B9602510;
struct _3D86227C073D5D6981DC2466093EFB4F;
struct _3D90DC302D39627B69518384DF4F2103;
struct _3D9A5D6754DE0A7B6A4B12381B3A155D;
struct _3DB03835212DDBC2D34A437E663C5170;
struct _3DD135A1846455AB3F98A7B3772E5511;
struct _3DE8A515DD1D02BD5298172417C1D801;
struct _3DEF65287BC28B387D1B9E1FF8067D1D;
struct _3DFDE0F26E9B69B6378595698C0EC11B;
struct _3E26921397DDD281DD26C02D21138292;
struct _3E2A0AAC0C0D5604E6E5BFB35D58D3CA;
struct _3E3873B2DA85758D86854F8EC24C2D5B;
union _3E67EB895903F84199FB26C795967668;
struct _3EBF2BE0AB8CBDCE959F2072C14A3CC4;
struct _3EE6D0D90E56B9C09100C124EDAC75FA;
struct _3EF65AC5CDE14CA7FFCAB6F0D1921DE1;
struct _3F1E3F943197CDE1415AD067E3615C56;
struct _3F721F7E75155B3A893AD9E3169C16C0;
struct _3F7F60ADCAB3A6A65D69A9D7B989FE49;
struct _3F83D4E5184A3D19CA486B3904BC7628;
struct _3FA4F00C7E109B048DA6C248989D7AA5;
struct _3FB1076CB510B289CAA826CC95B0CFB8;
struct _3FB406B97DA606C7C1844B196F769E09;
struct _3FDFF6A7F6BE5825D2533BE49141AF63;
struct _3FF780582ABAFC11917E478BB2F072BE;
struct _400C452C8F1EA0F2732C5164BBBC743C;
struct _400D51D6C0F8DB819BF4AC264E39B514;
struct _401BE23B4C5739E975D3490FF25A84DF;
struct _401C12086CCA49F0E88941330385927B;
struct _40EF81669717755AD7902BA019E550D1;
struct _40F9D4927893F5B451F6FFDFBAC62182;
struct _41285EA2700927FB7EA2A41D735B4286;
struct _41A2EC42EC7C63F3CC0A9F189777A6A6;
struct _41B3A175AE25B0BCD91769F5CBDEAF65;
union _41EAB8B81A3EA20191426CA85126EC84;
struct _42C9EB6349DA318FBEC3A9F1F9657B3F;
struct _43257F6D79F610634E07F0F15F0F5C15;
struct _432E330A9C7A5946C7D3E709D76A2466;
struct _4335EF5DE1507A30C4F68F5E4266EBBA;
struct _4343C1A1029A5CC2D699B5A65D1D98B0;
struct _4386EE58264757D1F2365CEF729FF06D;
struct _43A0E8C65EC56F9D699C6118165E9DE1;
struct _43C142D6E8CCA77AD8D3B7D743C0B321;
struct _43C3FB58CE5610592662F3E5656061A9;
struct _440914D3252E6E454F55D4FFE5D43D8B;
struct _441FAAD38652781BCFC1CCB758BBD401;
struct _442F6D906E36E38DEFB617BFE953DA2C;
struct _447098F8F44009940152D6F24CEA4978;
struct _44CD0FFB1E5A9FF01876F1F6AAADC243;
struct _4534D1011D9CEF71C49F848901F967E1;
struct _4537036C5940158056D50D54486E77E7;
struct _453C3FCC21D38DDE31861C82E646CBED;
struct _456973BE6483CBF66CB9F4134511B36A;
union _45BF217DBC3ED611F5A350EB16713DCF;
struct _45E74D44F4DD61EBC22288307E34230E;
struct _45F2A5B0079B86285D2438A26C66E8CF;
struct _4687A7E7563B5861448BB181C4793520;
struct _46BB9A8260616A26F7ABA63259AF690A;
struct _46EBA86FEFC5D2D17D3C15CDD470698D;
struct _474560A1B1DCBD1C24AD6598535B5A26;
struct _475F28E1336F170E4F5CA435530F1271;
struct _47D66F58E5F6426F5B779F0231FFCB5E;
union _487F154BFD23F1C76883464380C0CFF3;
struct _48E8A6CD9A533B33AB6E769A97C9DB1F;
struct _491D735FCC2C7A181F51DF61FB6548E9;
struct _494914B86E6CDF22F878F39362A29687;
struct _49B141972C267017F3D798ECA1B5380C;
struct _49E34F149A955E9B3951FE9D42228DD3;
struct _49F51286EBABDAC2E3AB9387C3433E01;
struct _4A270D6A1801963C90715604F1249229;
struct _4A8B02B1FCA615ED6943CF12A4FAF5EF;
struct _4A90C62CD962DACDB51DD5DF93BE7C21;
struct _4ABC1B5E6ED33879201640F22DCC37CF;
struct _4B92571A797B6C02A24506DEE28228C3;
struct _4BDB915D00C130474DCA811E527C5716;
struct _4BDFC0F942E2A6A794676F82FB611E2A;
struct _4C0456641FFD7C7A72CAE04CFEF7744F;
struct _4C11609B2457407E1D40095F665BFD38;
struct _4C175177D1E5403EA4DC6D4A491E917E;
struct _4C703EC466B4E070CC2159059900FA01;
struct _4C78CB38A0F4EF5A8DE335E05719C19F;
struct _4CA45CAB643221FAE06100C5E3A3059C;
struct _4CB21704F68C9C7480D0E216AAA27D61;
struct _4D67B151C7CB8AE8081A2C3E1AF9CD67;
struct _4D7D100F6A45674E78C5FF6AF9A9AD7E;
struct _4D869B13F060BA3FEE65879E2810998E;
struct _4E025DD4DB71D5A13ED2A71214047A54;
struct _4E2DDC218E68011859DBCA0F5D8383DB;
struct _4E39C5AFB1C491ADEFB864B6659C7AD8;
struct _4E4261D3A1CEC8B9AFEC8A32F19F53E2;
struct _4E48E652C5777B56F5C5F10151EEAB46;
union _4EA06DB75466BFF2377E9F8190FC5FC8;
struct _4EA7B9B0DA60A213D8FE837777047EEB;
struct _4ECC48ED7FCAB3168E2382E1C8F9C460;
struct _4ED57D1C5AE8E587D3EBCE3C708596AE;
struct _4EE54C0624E0B4590878B2914F6EE3CA;
struct _4EE69E5191F738A0DEA5DAF890F47590;
union _4F1B8228CBDC668E7C1212969EC76646;
struct _4F3DD3A2627D1E5DA0774D7D31FB1A93;
struct _4F3EC2B7A3FD85CF7F6D885D65735F61;
struct _4F42FF7208C7032221F0AFE65CDE6B10;
struct _4F648B37B9CF8BEF66D581BE4A3A925C;
struct _4F6B7C61AA4B95BEE0405A61B59E28C5;
struct _4F88675427993AD5D393EBFFE084774F;
struct _4FBACC2AF460480C3B910C6B42145D5D;
struct _501707A4983087C56C6E8AAD624F6B61;
struct _501B5AB5E1108C43AC9B253DE6317146;
struct _5083B1E6931E23D334D7384A88431181;
struct _5097BD0A68012D8C5CBA0B8FEBE888A1;
struct _509F65393F3993ED6E245E4858CFD455;
struct _50CD466421330932FB97D67515483505;
struct _50CF1F9E30717E5C85FBDDBBD8C480D0;
struct _50F07B9AD62C1A018ACBE2DA8329192F;
struct _514098925362A3D4F3AE39E7826BDCB0;
struct _515CEDC9B43131FD8B481EBCCB022659;
struct _516E2F5A0BAE859DB879D0F9110BE2A0;
union _518876D0C27A9CD079BA54115713EEC3;
struct _51974BA1E88C55CCB279A8B94E84A524;
struct _51AB63096E2BC5AD4B69E97888F3EB23;
struct _51F5104BF899A8D0172BF4ACA19FB23B;
union _5223D6A81E6A8532B448C4108E502994;
struct _526690B6FDCBF90BFE8DDB73F83CC4AF;
struct _527B574472DA6B2ACA7924B57D9DCFDB;
struct _52F38D82287F88B2A17E25A2ED2468AA;
struct _52FB2BE3912FD461A39F8430FF490DD0;
struct _531493BA18E76A1043EF68B47A7B812A;
struct _532A9AF1593900B2B5CFF34B454237AB;
struct _53473F06F9F395079C926B7BB88DD702;
struct _536D1119592D846701A3C5125407F6D7;
struct _5380DCA7A74E4C65ED27DC198F8C331E;
struct _5390CCC7619F965D278579BBB9B5F30C;
struct _53CB2C6CEB72FF4C5581D54CAF7F12D2;
struct _53CB4488480B2DF2E7B5895ADE90E2E8;
struct _53CD7FEA8F1E7594E1164D776F18E8D1;
struct _53F32C1F601BD496772E316EB8388A6A;
struct _542352B1445A77BBBF413A1D11C51813;
struct _5424A58FA96B23E7182292F8A0BD1671;
struct _543F6701E62D7EB496B46C6BDAD369A2;
struct _5440331CAFA6ABD3C02CFEC11FF9250F;
struct _54E2E9668D0928029EA47A066A67062C;
struct _54E38EAA5065929F8A713E64281272CF;
struct _54FA71207D19CC6B45BACD432CC2787F;
struct _54FE3DB773D7B15849DFA3D4C6C5E58D;
struct _54FFFAD7527D2E463FD337218A73F4FA;
struct _5513A2D45E97093C82D573605C6BB62E;
struct _551E4252789CB278C644F498939D1E94;
struct _554224674F69B86A1891A44045034893;
union _556FD41A89D283FD449F7AA0EBA26D73;
struct _55E4D2FC038374726F40A1D0C9425FFB;
struct _5611705F5C2D06F0C65376E03C4AFA39;
struct _56B0FCAB77808F3FEC78AD79AAF332E1;
struct _577B04073320737B875C0A6130C3E711;
struct _579EB430BA9997F315857B805E1254B9;
struct _57F875E4AC150613E0C95D78A2DED5CD;
struct _5802C28FAF8535CA2436F06F7684260A;
struct _5830DA795DA5196AC98747FD5A091A12;
struct _5837AA804C503539073946008DD14B2D;
struct _58458B46D190575D5AC2EE75F1C79484;
struct _58B623501BA3D7B210595FE620EDA646;
struct _58DEF8EBF86D691F280CB3F90366B052;
struct _58E38925772C2C7EB1864943310FA6BE;
struct _590B895AD0ADCCF75391FBD007A99A56;
struct _590D3F6E7FD59F722C24866FA7BFCF42;
union _591BF0AC490AC5BA075A2021D8EADA1D;
struct _59470752940C6AB5192F9229B028D61E;
struct _5976B9DA4C60B9506C4D99B8C3451025;
struct _59867F420E95459E463A21D495341429;
struct _59ADDAEBB3E2632D725ED32CC902CEFD;
struct _59D4D00EB1396467F8D73DECDB6BC523;
struct _5A15F5E3901A967D8D1E62CCC4A0CA07;
struct _5A765037B17BAD4D06DAA996E7CCF176;
struct _5A798AB4BEBA23E489D8B44C4CE7F7C3;
struct _5A83377D323A27282E50E2B8AEC0090F;
struct _5A93820126A648CA4B4D7CC159E8A880;
struct _5AAA93F231C491218A0C27E0B83FD4E4;
struct _5AAD3E36DCA061F1C50A3DD63EA46040;
struct _5ABCE92A62F06F587C1A97100F5EA96A;
struct _5AC66747EBEC2DADFF908009E084015C;
struct _5B0932C95ACA944EA8760E43FEB00E37;
struct _5B5F54FF204B33D9368F2209DA317CEF;
struct _5B6C241DC92A55924D50051A82B97D9B;
struct _5B97CA5679D7ACE99F5F725DE30AD913;
struct _5BAAA07A67D6DDC6F7F53A9A19BC1C29;
struct _5BB075E3BD7EB0C29B04C8800F5BFD3D;
struct _5C131779BD47E2449F5F80108D76F38A;
struct _5C26D95323E79CBD9FD93D646A925B65;
struct _5C27D2E807200B9E0EBA965861D1CE1E;
struct _5C36579178CD024FECB3401B13A4560D;
struct _5C3A2FEE2C73B66B373680AA861C7829;
struct _5C868509DF35970C1E194AE5854857CF;
struct _5CA98191CD661E462E70D7300551E151;
struct _5CAA3E790BA277642DB4F6CC5CEDE366;
struct _5CD6AD5EA41653098E3415F2ACAFEF1D;
struct _5DECBD7F3322FDC6BFF233D91FC4F66F;
struct _5E0CFDD1D00C5657448370B9A8E9AF5F;
union _5E960B9F3D9B088E94FA007CE47725D3;
struct _5F39539F893D2EC61BF82E07B9E9DB3E;
struct _5F3F6D3C0B4739D9A0ECDC40C1BF2C33;
struct _5F6010C342AD7CC739C377FA23C7A0BA;
struct _5FD42F7B800E31DA07875AD4D46FD084;
struct _5FD6B05A44F9F152F9203B46F0C8FFE2;
struct _6027857916414684B693573B4A22B1E3;
struct _61309906903FE258EDF769C872829316;
struct _61ABA295D204D35FC0507E348C046E1C;
union _6215CD2E124325B080EA1FAB21DF5785;
union _628C55448F91523F11548532F2D17CC9;
struct _62AA9CB42F07667ACFB3846F1F95957B;
struct _62EF891F2D5495DD7B2B546D99F537D1;
struct _62FD0889AE34F9373588B48BD93BECC8;
struct _63629BEE2701D5CF34B4C61A8CD3565F;
struct _63667749E20A876508B27B2A5D375BCD;
union _63B58ABB6690812C9E02ADD697E36664;
struct _63FEF6CEC3D9C390621DCB6B034E41A1;
struct _64398F8E3B32B4E9081A1C1E13696179;
struct _646FD6B23FE47C50C54B12B8DEC47879;
struct _64EA12DCB4C736810A8DF8EE50AB484E;
struct _650E6C9062E0E6739EB2A4F1DB76B3FA;
struct _65518DFEFF5E6C13CD4EAB1ACAB106B7;
struct _65A22FF8467BCC6B24C29F624239D326;
struct _66E8D7E36AC65E05F7A2229148E617E4;
struct _6733347D6230688C87E04513380F5605;
struct _675AC941CA254EBE58EC6BA08A3A4D71;
struct _67C66621891B7BBFC03B4CACC5B272CA;
struct _67D201678CA148593DFBD7BB01D7707B;
struct _6822A72659FF56C780C6DE690DFFE7AC;
struct _688032D942D0A7D34EBB3FC94491FB6C;
struct _688DA74D94025D129EA6BB30514C5238;
struct _694BC7D489E8313C6AB000BBDE0E3678;
struct _695D41B0F86F5191001309D72DE985C5;
union _6A1ABF627FBE0922AA9EF24F9E956DFA;
struct _6A67D9631EF9DAF31FBD55DA2AAAE815;
struct _6AB0B8F58DEA6C8D7C047418F2B42ECD;
union _6ABB2352D76941AE307F390D04ED2706;
struct _6ABC0356B240012E2982987C9730FBA4;
struct _6AC2D4DF0EFCB3F6004902CC322AC1F6;
struct _6AC903B1141559794FAA802AD579D498;
struct _6B11944D848591EA84BD0403BC571A74;
union _6BC81C86F5ED2B6C7BBC43FC80963407;
struct _6BD28D9232744C53F8596E93389AFC65;
struct _6BD8254A58F4666E375C9F1EF7748CFA;
struct _6C2A3174FED6E681FAF32885410D9EC5;
struct _6C3F6ACBBE9FC503ED5DDDEBD57DC2C5;
struct _6C480E4EEB02FFD52B818F7178E5FDC2;
struct _6C51A1AFDAA722EB159EBDA3477DC656;
struct _6C539C0FC0E7F1AB04835013C6DD4726;
struct _6C8E4E625E7B083555CC290EFE6396B2;
struct _6CB2ACB2315B579EF1B18B5CA914D940;
struct _6D267FD34DD458FE2DF51F71D0F42787;
struct _6D318E6AA4852B0962173AD5AA763EF8;
struct _6D5E994C2EEFCF20A2CA37695FD61709;
union _6D8834E078AC6CD70A1398B3A5476142;
union _6D90CA3A7F9BFC9264A02136A8ABC8EE;
struct _6DA5D0F7C89C92C964BFDFB0D4D09CEB;
struct _6DE7B3917082FC90BAD75410366F4F48;
struct _6E0D180C745C9A79C39BC1FA90A9C0D8;
struct _6E10D8C8C16DA8379B9DEB89A5C74789;
struct _6E17AA64CD37FB54DCAAEB752A277C69;
struct _6E47BA13085294F0F049FAD266BFBF7F;
struct _6E616B3B14004CB8BC9634A2D1DEDED9;
struct _6EA9FE09A44DFE194DF3774A8F9AD63B;
struct _6EB51CED1E48D524F66C3DACB14CC471;
struct _6EC8891D431B9FE2A3ABED3B1BBB21EC;
struct _6EDB0D36DDAE8585C434A9339DCE2693;
struct _6F10AFB06B176DC7E412F6E2BE16C09C;
struct _6F6EE827B4FA5A9551504B14859E325D;
struct _6F94CA10078635A6F69CDB6765474AFB;
struct _6F9E78D51741B91108827E2927BC310C;
struct _6FCBEE6BA0754DD9E119508C869DC7B5;
struct _6FF651407ECBCC5ECC66469A81BF91B5;
struct _700F669AAAA0065862E665F7FCF885B4;
struct _70130FD93B81EEC2C8493C4688E5C28A;
struct _7013F136B8763F60FE72FA74A020DEAE;
struct _701FE7AFA81149B1EC002359B3E8F6D6;
struct _7054B44EE30EB830E8E2D8442E4DB9B3;
struct _70585C5FCCA0E6FEA5649FC6E1ECEB93;
struct _706EAF03690DB7D8F4777AD8723438A1;
struct _70706EA1264F219639EC61C3D0C0081D;
struct _70C88BBAC6A895EE89DD072EE7C5A19E;
struct _7114304ACBCFC2CC37D3D31EDBCDC4D6;
struct _7145FBB7A43E7472B182C998751EA91D;
struct _7151074C1D109E45CFC1C49E3920E4B6;
struct _7157B18ECB20BAA8C6281A4B15C38093;
struct _71AAE10C5D2857161D5438F66A3A4D7D;
struct _71BA19612BD48D2A43E9A45F5AF99F83;
struct _71C666ECBA611A0D1E094AEB91B43A93;
struct _72333E2A38D9568EE37516DC8406F6FE;
struct _7248D28E3A09D7194E8E1E343F40CFA2;
struct _724A14905E3ED6A54D792F35D5CD3E86;
struct _72AAB91DE3EEFC11230A4F397747C93D;
struct _72D94C4FF762A2E1D25032A0037FC0CD;
union _72DB0F79E0951D75542C31FE649E11C3;
struct _72DC978F075E0E65AD1F7FB905F5153E;
union _72EFF1B7CF5BD83F0E27F61163B8B619;
struct _738653807061B51D77FDC06F17B658B3;
struct _74097EF1038EE9B28B2F1ACB82BBA633;
struct _741476BE20FDCD20209AFC9F79519DCD;
struct _742CA4F85EA73A5D1442F11069F65D35;
struct _745924604C6CB7260525BFD61C2FEAC5;
struct _74A7D6CA18D3724AB6FA20232C18B6B8;
struct _74C31F1E030E91C27322B71EA2AC69F0;
struct _74CC277CB86DBF393966D2A8256E64EC;
struct _74FDC183890CD175403FB492894CE117;
struct _7536A37FDFCE53E1F2D7EFC84DEFD63B;
struct _756E1EF12435665E0530B1F10B1D4C35;
struct _758791F50DE192112E59CD06B1C0A25A;
struct _75D146EAF28C090BF60BE4D627294663;
struct _76104CBD369A22C2B848C68D15D2575F;
struct _7654F8B5F1CA2FA52493765D27CB3B7A;
struct _765F2016A6B70354055390603066FC8B;
struct _76721202F8FDDAD709DCCB139B848641;
struct _7676233044F4F64A1DC4AC7E4996AEE6;
struct _7680A9C78C4B44526ADAC236D1AC2C1B;
struct _76AD9C089835C1FF861F166B1D790D1B;
struct _76BAA508F77C33FE638674C6C23A8C80;
struct _76DF60A307B2AF677FDBB7728CC04997;
struct _774345F8850CD97B16B7F38A57137C1D;
struct _775CA34CBECCC7D29F5B2C6C3B79D91F;
struct _777F619D22A3BF928C82DF3A2DCC877F;
struct _7787E194DB4EB2169214B7A11A441492;
struct _77D474CBEB68459D85E3C2A830C2EF21;
struct _77EFA24C873E40E6F2166631E5BEE457;
struct _78081C629DD491B0CC432155ECB1E8B1;
struct _78A47FEDE07E4D9711F995C0E2C7B125;
struct _790F6AB6F76BDC72ACD18E4FB677C494;
struct _7929C563E7B63FC05769B8F72B15925C;
struct _795FB50BB00C5222A29D9E9AD36BECE3;
struct _7981A5DD16C29078DF49F0E5D2B4D437;
struct _798FF404241DBA6102FC87294FCDE779;
struct _79DA16AE253D27DC3A6F31A8B9020499;
struct _7A0A3F0C2529F585ED2AB4428A32AE8F;
struct _7A14E74943437026682A920021B1FFBF;
struct _7A6A0F46ABA0CA06A591AFD40E69204D;
struct _7A80A566819C1D2378DE230434781E7C;
struct _7AAE256296D889623FA30C003164E569;
struct _7AB8CB7DC0ED871DDC3C55225C07E5EF;
union _7B8A6F160A252FAE1A70EEA141D54239;
struct _7C171058388E98B16B2B538A7192DA38;
struct _7C39655131502DCAEDDA105E88BDBF6D;
union _7C5F9768C94386CA7F4E7DC66B8830A3;
struct _7C61700BBDD1F47A3FB1C80AED773DFE;
struct _7C88044CF52AEAEB05757EBE2EF713E9;
struct _7CD83565691D17B24BA4D69D5CC3F0C9;
struct _7CFE5BD1D71ADD32B795663C2C70F2A7;
struct _7D7D58AB9DC53DEC8CA17F3BD9B3A652;
struct _7DFC8B8B0FE10570798370628F555DB9;
struct _7DFCE0E55CE3252F1E6260C8AF00805B;
struct _7E26CD9489C37A85D50C2973C4AF7AA0;
struct _7E950FB6A83D8EDBFC02012BA7FE5544;
struct _7E9AB06D160639A5C09D295A039575CE;
struct _7EBE2FFF53B6C02FD1AF6B36F0E879E8;
union _7F4437EF562FB8792EA1EF6FAF7BDB19;
struct _7F4A2FF0E27B4FE6701C5CB0230B4949;
struct _7F4B5A81DC436F502D2522D97E5F727B;
struct _7F7C65701C46F1894FCE54A71BD43572;
struct _7FA50AC9C83D084CE98388548A2ED316;
struct _7FDD791C5D5C2DB8B1EB55DA299AFE45;
struct _7FE8B5378CAF7ED49428EF8778472563;
struct _7FE9E2C35030190B001171A4D66DFA32;
struct _7FF7C66C78997CB6C15C8F2705CC3546;
struct _80338AD8F766A4EEAEEC8B04EC6116B9;
union _80683930D45E06D3195B4F9BDBEC48CB;
struct _8177E03AC5A73E42434DF8F008FC2948;
struct _81A175F83A1A01B39FDFDB14C2D5623C;
struct _81E70B6E9500B43B545FBC302A22FD1F;
struct _81F0D2C61C824F8B236B19C895A58EED;
struct _820CFB4FB5CF3CE13AC7E48DA3FE278C;
struct _822983CC18095F9E06EDF22D77B7CE2F;
struct _824A427F62CDDF782776BE13CF66F19F;
struct _825A767F80D54F48965E71A938B5D869;
struct _826166A315AD7F815B158091A827ADAE;
struct _827345E55565D3656FE7DD67F24B8842;
struct _8292127E0542D73B0C01312C9382287A;
struct _83364E2BB946AAE377FAB9B129222450;
struct _834F8DE3572A099FC7548A55D9A11840;
struct _839C21B4E89AAEDBF06DDC3B037C157B;
struct _83C70947A07E9162E2D1F09982FD84F4;
struct _83E13903BC0990E40237D8C301812CEA;
struct _840E6DA18418FAD7CDD9CE2BF69BF57E;
struct _84188816839037F3F7A96E0E08AFF831;
struct _842D103E02ED6155C49E1F635C1ECF50;
struct _844F3F65E7253621E8FFDF0B27EA43FD;
struct _846F00D9E97F385097775185843E5372;
struct _8495EDE704E4D8AE4EE20320278A9DC6;
struct _84B5F2AB7401206A91B6BE4E98B17288;
struct _8598BB303B5E5EB887BC4D9B4A9FE52F;
struct _86009F4907A5EB1C61AA73D0D407BD18;
struct _860A1EE2C3C116B10A53A1836B54B6D5;
struct _8616D3DD47845040550EB5C08ECD7F45;
struct _86210BA5B88DE587CCB72507AC8E4181;
struct _8628C3DD88575B338D7ABAAFA3EAD15C;
struct _864F357D2D335F20052F07A9C9C9B544;
struct _86869426D1F11D019276FCEA1747E54D;
struct _86BAB91CCA35EC0D8E0AB900ABD9D931;
struct _871539A1159CE24A389CEFB2F5F99856;
struct _87288635DCB7885A0BDA590380E7B1CF;
struct _873F0BF6A4610C6D0FECF44220B1B459;
struct _87471D6BC66CEF79FF28070FD078E8D1;
struct _8754740161C8FE72AF0FA8DD9A08DEA8;
struct _8773C7B7E197EAF8615A1D8A34F133BB;
struct _878CDC393A4F90F5F70FBF4F5DCDCF2F;
union _87CB00AD9525686B000DA88190BC3C28;
struct _88383D1B2353D16D8AD8DB65A55C67C1;
struct _88437CFCFBFFE8519053CC29314A2CD7;
struct _8875193D75601F2B2877FF9DC61D8E4A;
struct _88765E7F9D12F50D22D201E19D014097;
struct _88CEA13D902773BB8EBA67CB9EAE9058;
struct _890C66BD3414F72564A9792AD4C50634;
struct _8914740DFE30B2C928B20CD9BE464DE1;
struct _892A7B8B66E90ADE7F47F6E41103E6CC;
struct _893FD9E11FDAA36A72D09F0CDAFC97BF;
struct _895648FC99DB533772AF5ED59663C429;
struct _8960061FCCBB7A36C6DBDC8DDD8214CE;
struct _896216A836D57BF4B1D0B373A62CE411;
struct _899560C02B287A1E3D364B639677B50C;
struct _8A024DF29D7C5529279C14F7A1792CA3;
struct _8A099209612A17C8A64394B83E080DEB;
struct _8A15A7F84F1451ACE700F39DC39AEB35;
struct _8A4657480833B86B53740A22F93D4BF3;
struct _8AD0E7071038BAD52AD18FAF10519DBA;
struct _8B011148F1BB53F5CDF603C2B7E621CD;
struct _8B2452E5B9D1FF29DC352664F48A8AF5;
struct _8B2C23BAA46EBB305E2955CD2BD57B73;
struct _8B571DAB4FBCBAE69A9F2186BE96BA6F;
struct _8BA21EB1E9E89DC8D750A7001642B349;
struct _8BB8C0C20D73A7427CF22D29875A4755;
struct _8BBF95EF49E646019DF2D64A9CA75947;
struct _8BC8464797BD15B7DE56566C9A312D61;
struct _8BF4A3182DE3065A22896A43EC686587;
struct _8C94DE8BD49887808F21B5CF1A10A039;
struct _8CAD4F05D53D91E8093599D1B9B6A169;
struct _8CB77716A500E5DCC326D5A9DF18EDF2;
struct _8CCFC712507343159710C2C6E9B9EE3D;
struct _8CE9375D58616016D44E5899D27941F3;
struct _8CEB6B41CF9D90E13F423B312D2B82C1;
struct _8CED74C4085337C4E09351F5BE6FFCA9;
struct _8D29C0B06F43B4BA6E2EF385F64715D0;
struct _8D2D182B2E295BABE24FB2BA4BA29C86;
struct _8D3AED6F7FADE18A8F2D2D3C45490101;
struct _8D894963043A327D1CB91F38619B7FB7;
struct _8DC7B7F78C0EB41AADB7ECA240B8C31E;
struct _8DE628CD5A324805CF3F9A9655379560;
struct _8E3345843C6C9EDEF8627A5D00099992;
struct _8E62989F1CECE56FEC4E86432FBA7D0A;
struct _8E9001CF27BB191F78BEDCE566CDA729;
struct _8E919DA99B3FB9F4215C4BC26D9F0D0A;
struct _8EB9F2655091912106BD579CF94D044D;
struct _8F021B924EEDB0F537F7DEDF0965F2AA;
struct _8F03A700AE741063C4C0556C872CEB25;
struct _8F55FBCDD7A045BFCDA7030ED4A53CB1;
struct _8F68734F21FB1945F73C1D59FD3D19D0;
struct _8F7F9033E7ABB231AFA2156F5FF3D34E;
struct _8F93C5322470EB6F754EAE8CC4D8F714;
struct _8FEC1352FA33E828B4E24B646964B517;
struct _8FF0EFCD47E0176D7B8B9224D8C06D64;
struct _9029BC86F03C3FCA17B56D2EF3BF232B;
struct _9077B6028AA1E2315235F4CA294EB815;
struct _907F290682665AED197BFE9630E90F3F;
struct _9094725A69D8547E84752F140DA0F190;
struct _90E32EF08B0EB3D73D5F2CC5F62B8DAE;
struct _90F7CDB8DB98CFCE2328F7FD9610EC29;
struct _913A1C96CB07C43F8E37E2701424C7B4;
struct _9142EB612F944EEF87D279755728C416;
struct _916275EA6FA5F558428BF0B97726939A;
struct _9180315BD58C2D171726BCABE450AE98;
struct _918B2D7F675D96D2951C3A905048EF36;
struct _91BCB217EE4E0D315146F9D97B70E581;
struct _91CBCF8FA4E4D584341D4DA50085DD74;
struct _91F5FFCE0B426C2E77FE39E145C7F383;
struct _91FCA2D6F8E6352AA88065349604AF74;
struct _920435F1B70ECB33392B90E7D3ACCFDB;
struct _9219D3771845598B204C1F6E8A544818;
struct _92268411103B3D7D351D0E9627E9807B;
struct _92276E1B8A80B5159F464799742CD4E5;
struct _922A102EF0DE789699C98A721CFF83F9;
struct _92B466D6FD853B76FDC043D739C0EAE7;
struct _92DD745DF4632D6793D56D62C055DD39;
struct _92E08157E319A6D0048B11B6F44E7E7D;
struct _931F22EFAAA9C2C0CFDB892F0D824EF3;
struct _934C7E7549B79FCA437F36F4A12AB250;
struct _93A65022EF1C4BD008724E599E68410C;
struct _93AFBAB3DF2401AC2D1BF9FF936BC51A;
struct _940104136B10EB4AFE42B92558B2348F;
struct _94619DEDC0405DB30844363ED09E4E89;
struct _94668F84F3B04721E425FCF53448BF01;
struct _948329AD6C2C9F7B84E43B2DD569E8E1;
struct _9494D6F578DF86DB7A8186CCEAB2EA6B;
struct _94B90FE610E36811F89326FEA542A5F8;
struct _94D4D7D366E3D27BE40EBD96B678093B;
struct _94DE4B27E8685D7ACA16B7FA23BEF94E;
struct _95123179A341BAB69E7F321858B4106F;
struct _9550CB126FCD617E5CD0AFA0E08ED7ED;
struct _958A0E0CAD30DEEE399D82016069823E;
struct _959F1E59735416E17B958F606B1E2001;
struct _95B4CA56C5C145CB00FB885BF35F80FD;
struct _964E5440A68626C4C3BC0AD13C0551E5;
struct _965AB3A0AE89D9B64AE14AD7380CB79D;
struct _9683D8C9CB1BB85CD0C70DD9F13640E2;
struct _9686D76608413ABCA37282C699CE8DBC;
struct _96B74196A6CF81066884602FD3D9FD5D;
struct _96D5CB982C46497217C2745BD21B8DBF;
struct _970FFEB6E0B0B4B3E56E8671EDDE531D;
union _974BBB0BD35579C3BF5608C837A10F5D;
struct _976A27DAFF15E5ADEA0945F986C3C134;
struct _976F629227BF629E9EADB1BA5826EE01;
struct _977E3E064D7534F4B455022DDA6963C0;
struct _97E249F812B4D790FE9B3BA3EEE14A5A;
struct _9802A0BB7B0B0D6C622372855E5DAB1D;
struct _98213CF2F2F826EC74DB187C09265FC4;
struct _983CF00DED1A1F66A55427EBF6F89EA9;
struct _983E57500E9B507B029E1E75021F3B41;
struct _98570B18D60E0ACA380EBFC1C1524AB5;
struct _98A6DDA279CF30F97FDAD1377CAD4229;
struct _98C3CBED3B5D4E48EA53A4DD166EFC60;
struct _98F790DC9A2E78F45D47D308C3681F20;
struct _98FAB1ED5506717A9B4B3C99FE346AF3;
struct _990147E37745A780E6F9BC0FFF0E7591;
struct _993FA8BA3EF73A4D826248B820311C76;
struct _9941F41FF0093C2959C1E393EB931501;
struct _99481C1AA640EC00BD412A1CA689A01E;
struct _99527345AC44A5EB483D46ECFDF59D49;
struct _995E2D1C7E1C08F056C9CB2DF62ABADF;
struct _999B3253F035FC888B7A087E274B5CA0;
struct _999FCC054EBD657D3F6DB4B2D8714F97;
struct _99C4E7CD866E4E0AE2D4B042B167394D;
struct _99D936DB04230E832F57F71DE50411A4;
struct _99E429C93EE7454752F3C983EFB2AA50;
union _9A02540346A735F815445FCE0D2E77D0;
struct _9A2784FD5678447EB3DE469C65F627C1;
struct _9A6797B410FBAAB39378A4754EB07363;
union _9A8860F6C14A61B836CF024812302798;
struct _9ABBD67895AB0764D2E108D2B502E203;
struct _9AD37D8F57FDE2A5D58FC9F1F13727F7;
struct _9AF33723D657A68520ACCAD5AD6DB40F;
struct _9B338B1ECA777DDCC35A46B3A383BA71;
struct _9B6083668C49B11131D9AC874471408F;
struct _9B83AE6122FBE22D8F29CEDEDFBDA90F;
struct _9BCCD84CA09B0CF28A9A013C7961FBBF;
struct _9BCDB97CCD6963F32812F091F8E01AA1;
struct _9BF4DBB8ED4FAFF7CD583EAD000338FE;
struct _9C385296CCE56B5A1C0581870770991E;
struct _9CB615D0400DB1156E78CC3060463D1F;
struct _9D13FA2F3D4DC3DA2AD12B3B17827103;
struct _9D1FBE9AA270F62D1110F10C83E964EB;
struct _9D264345311208DC54CDE5FE65FDDECE;
struct _9D2F8CC554E3EC31D960F62B32A3EA13;
struct _9D440D8C9FFBECCD11BB4C228E0BDB53;
struct _9D89345825FDE1AAB589E77F01DBB08D;
struct _9DCA6106DB52F55837B7EA8444DF1CDE;
struct _9DCD9FEA850A958FB40634F72A38AE69;
struct _9EA7D7CA7C4015174F893B7D167DF337;
struct _9EB5FD01F162F4E0C11D9C14A6D00AC6;
struct _9F1319B45FEBB152D8EFEBFDE8D1A138;
struct _9F72036F1720BD50F14A3F3D330C6F66;
struct _9FBD256D3DD09739BCE6303D18E9A305;
struct _9FC8A72A735B8C834CE9E22C02A94C15;
struct _9FCD4338C182721C015DEEC85408F3D5;
struct _9FFCB390DD14B79945F07A2EB576185F;
struct _A09F1F233FE9E41493184B3B1BB66A1D;
struct _A0B3582B041A72DF0474C8B839A5C8C0;
struct _A0CE1414CFE73DDB6A5A45B584E5B563;
struct _A0E022DF5FC884803C4BC1475C6D0840;
struct _A116D5E3F3B0927191F67B52BC870E59;
struct _A14CB1401ABA57E2B089C5FB45E218F1;
struct _A19F19203AC5E3E31E03913FA913E042;
struct _A1AA68FFA304BCE5A080072956243EF0;
struct _A1AE7E9EF66810FE800C427EFBE34A13;
struct _A1E1C92957F807A48DE24E826B76A9ED;
struct _A1E4BC69A3E624510D80DD9D7A45DD6C;
struct _A24A076255906D6E6E9F018976C2044B;
struct _A25CEFB61EBCE556C47BA014D59BA377;
struct _A2AB49BDD0DE746123D0ABAA6B350AEC;
struct _A2BB91E5C6574EE92762E6C832C7F2C8;
struct _A2D971EEC14FEC66AC419AE99ED8FA36;
struct _A3035F2BA8BC9144E2E3914BDC9C2690;
struct _A31DBB9C9150EEB5B259A9BB3CE94F14;
struct _A32BAB23E174FF05E35F1007DB000F57;
struct _A3842D8E4B7B5B0F57195E6E338BFF95;
struct _A3D05C41E9F030ED867654F416EAE9E2;
union _A41B3C68B782CC6B04DA902C88EF54D2;
struct _A4293C7BE0E6B327D04BD7AF0FAC81EB;
struct _A4466E56061ADCBDAD4B2A6DC7E81187;
struct _A45E222FBF0E16471D786CEC6B9CAF4A;
struct _A49E72078B76F4AC4F7118FBBDCD4631;
struct _A4AC343ACBC8884B813ED3A3A73BDE99;
struct _A4F1DEA9353CD0940D14AA2D91979FF5;
struct _A5259ADE5D385A684FBB8619EA9AC1DA;
struct _A5357F3918FAAF90A6D6A34513CB52A2;
struct _A548EF40F423D4D1CE1D0C83C6C6368F;
struct _A58305CE0F1A340C2AB5BD9048187F54;
struct _A58D879E96FE4F843307298668B1FFEA;
struct _A5AD036611CA966910B0041741535C40;
struct _A5E5576596E44BD7CBE1A739E94D438C;
union _A5F962F37CF2F693830E47777CAE8939;
struct _A60290E23BD6DC3E24E5B4BC10DBFE53;
struct _A623DC40DB5F984C95B90C5AE5F35B22;
struct _A63D8E7FAAB623CF824F0D871B91118C;
struct _A6484E360E0D767762A149C78FD78B30;
struct _A67111EB637F4E9F7923F72D72853C3F;
struct _A6F01FCCD003A3506A4BC4949BFC9341;
struct _A710FAABCDB1AD0E788E8111A4936ED6;
struct _A71D4C743651D25933CAA165006EBDF6;
struct _A7296CAE8D5B4B0354655D00FDFD9750;
struct _A72BB6278B4C5CF5A5BC1A44ECC3AB06;
struct _A790A3F05E48462CC309D5F7A74FBA4B;
struct _A79D4CF365EAF285D8F99AA7C0BC1359;
struct _A7AA59FC18C624779D556E8F6729DDF8;
union _A7D7BDD8B24B112D605A993696560BF6;
struct _A8501743E5A0AB903D80C6F79FFDCCCC;
struct _A85672E1F3F2CA4FD8275099D6728D85;
struct _A87A74325978861265FAE567512FF340;
struct _A885BDC5C02641C8B49B78EA5206778A;
struct _A896CE4093F8563720BCDB52D91EB8C7;
struct _A8B12E604CDA1E20D8FEE87F3D46AD69;
struct _A8B7ADFE98E1D0BE007076BB75E42139;
struct _A8C829FBA1D0FC1A299CE48B21970582;
struct _A8E47D60411A404345D4BF258A4FC575;
struct _A8E5B033BD80DF5482A26EDD8868544F;
struct _A948394FC790D9048ECA290EEF4598AA;
struct _A96752F0C1B95D0D0656C5DFCE80B4E5;
struct _A9A65444F717697998060671D7C6CCD7;
struct _A9B4302653E267E10A0BD8C91527623C;
union _A9C6387FF17B0FE0A5B3AEC55D0E1F1C;
struct _A9D282369A009673BDA2F899DC1C2C4E;
struct _A9E28A1432A11848918081ED8160DA80;
struct _AA032A76E921DB3BA10EE007C0115DA6;
struct _AA033DF403890F6F054777DF6427E4D7;
struct _AA8B70F900FF5238C230F4A4228535F6;
struct _AAAD731627CE9493AB267F8807E487A3;
struct _AAADB9BA31A8B1F7AE5F32D582AF809F;
struct _AAF66D85676894CAA54D36565BB4BDF7;
struct _AB1521D88F443A509348BCDC539B84B9;
struct _AB3202BD2DA0D684DF25DABA7D2EFB6C;
struct _AB4F02EC5D8687CEDE27BD0DC086A076;
struct _AB4F6334FFDB14156B773BDB1AAB0CF0;
struct _ABB549047AEF255E4EB3A3AB7A9865AE;
struct _ABBF97989A82DC63A0EC55D7A043633E;
struct _ABF336183A0B84D1C88AD8EB6D66085E;
struct _AC109833D694E6F23A8B22EE40DF486D;
struct _AC37B632FD87D504B62B3B503AC53191;
struct _AC684B819368CF3987AE9ACE81BE85AE;
struct _AC77001C1B4AAC61DF206C481C514A37;
struct _ACBA5A58D6E9B16F6FAF41D576A29499;
struct _ACEDB2296F40976713AE47A4177828DE;
struct _AD1E4E03DCEFA33088EE2AE0997F3288;
struct _AD263D7C0C927523A3D26C1277C0100F;
union _AD5D0A6DCE5F64CFAF357BB3A0648A64;
struct _AD803FA55331A63ADB10040985F0C48E;
struct _AD84373D94DE7196970428998609059F;
struct _AD9BA3FED9A528D455365381D739EDE0;
struct _ADB22225E3F1BB84FBD64DC9B54AA0BC;
struct _ADF16AF6473725D355590D9E655FC48B;
struct _AE107CD7E394AE46569DF4011EE0BB43;
struct _AE16DBD85043B20BDA4ABD45345AC744;
struct _AE5CF61A8076C545D4243DC246FC5106;
struct _AEADBAF441CF0D0024C5B0F34DD7F02A;
struct _AF27D0DC8C9C83CD0E7DDA450B8A5353;
struct _AF461F30A45AE1004748489948099869;
struct _AF7F7AD21AC17C6E716F27057D264F4D;
struct _AF812B06E0C82E08BA2D86348360F935;
struct _AF9B744F20F52A03121B27A55076CEAE;
struct _AFB7E269F91AFE13225EE3CE11711B8D;
struct _AFCB5824F954295B40CD424AF2C819AE;
union _B0501B9B93CFDD8D3C38257E77C447BD;
struct _B0583D655AE852CB61423C290C3414FF;
struct _B0972028F0A856D07070CC35DD2393D1;
struct _B0C064A2348ADD487CDD4CB73C6C9183;
struct _B0CFE40299B2241B6D88CD103817DCF3;
struct _B0D2910FF2727F70CAB5F17F43E00BCE;
struct _B0D69B5E405E8F9F7E8FF33C7869725C;
struct _B0D8260BD3BEC2C394B206003E60A778;
struct _B123E5742C25A9708371954634D8BB88;
struct _B16410B4740FE552E7D8295EBD0641AB;
struct _B21E8E356780C04C244AAF731E4D8DB8;
struct _B24108C6A84211A3601D6A74CFBF8141;
struct _B2A071DCF8C2EFE52336CEBC18503C32;
struct _B2CA72A6D81756722FBA9BD935435661;
struct _B2DB38E900464E398875D12AA0CD3AA7;
struct _B2DD6A68E2116D4FCB85B340C66E6590;
struct _B33C3DDC8B87C2920AB40FB5B503E693;
struct _B36FBEF63788BC4566C7951A6089AED9;
struct _B3B07BAE448478B4BDB40B2A865BEC3B;
struct _B3D9824BB10454FC3FBA64ED1BFA8007;
struct _B3EA06631073B7989159535C953318FD;
struct _B40D81E03147033EE600A6FD268CB8A4;
struct _B4327EB9331D82A86C9489779186A121;
struct _B4376B173897DA777F735A92BA61857C;
struct _B444406F386FA06D5BC4117DCE5A236C;
struct _B44D925D15888068842F296C53A42C40;
struct _B46353AB51234BADCBFF12757BFEF0BC;
struct _B4A22B34AB1C82C9B553A8F76517C507;
struct _B4D92CBE906B07A06AB1E03FDEFFC807;
struct _B4E06BD78C8094DDC134BE6ECCF8BEF2;
struct _B4EC90CC378E611CA57EECB0114DEA34;
struct _B4F231955C2D1055548E7E9782035139;
struct _B54899351EF7B33BF0507C4E1D20B79A;
union _B5A92F8B2B3252A716F3F5184DF78D07;
struct _B60217F40C2AC1A978E0A5285A5747F3;
struct _B608AC9E11096DC366B16D397EBE2881;
struct _B6385E411CABF2821B8809810A7CF62E;
struct _B63C7211F3C075200AACA9CBBD019A89;
struct _B657CEE4355D321E905412328E8C698B;
struct _B68A72A39E6B29140139916F2ADA8BCC;
struct _B6C5964CB910F0099F62EF9C07DF52E6;
struct _B6E8A195D1FC203A37BEF79338AA742F;
struct _B6F702E32E8BF14F27DA388268F3DA51;
struct _B6FB430ED78787DB9566EBB533F20987;
struct _B70FF1D241F46C1C68C0F8CFBF7BB160;
struct _B74C479D5DEF0F6452AE9C98BC440EA7;
struct _B7581651F071A82BA983F24B2EDABE69;
struct _B7B4899CCAFB8BE3FC3B427E891B3484;
struct _B7CA63F9D14E9570B450255414BA6B32;
struct _B7EFE20DA3377E7AD2E71A2611ECA892;
struct _B81BF1EA0941E9D51BE17A7DCF0447FA;
struct _B83B54D0511FC7118B2F502FFD9F4FA0;
struct _B89301B30D0E817DC03EB0FC8FA82100;
struct _B8B5216EB06283ECCD87175FCD3EA70E;
union _B912CBA3C10871F54570C4C0430A0F81;
struct _B986BC8AB1E2DF0C026584965AA8D100;
struct _B99BE8752E42F1AB2FB6C58C636F30A3;
struct _B99C53A4D4A2A502622712AA2B3B6D57;
struct _B9A05D228ED5F3E0C318560008618C09;
union _B9AA1CAFBE647A1F2D3864596FED4435;
struct _B9B39F0946474F121EFE4E9034FAEC4E;
union _B9B6CC471BCB7F4A305FC2D80D0AA4C0;
struct _B9E29299D58E2B0821ED2412D3D885B9;
struct _B9E2DC9C06918896C3006BFFAE6298E5;
struct _BA3848C2DD630DD4F1277941FDE05257;
struct _BA607B17B9A3CAECE8540684CEAA5528;
struct _BA7E834680A60A49D93770311CBE8601;
struct _BA955201829052531E7B341E0F25818D;
union _BAA371FD3705A9DA82A7651CF9EF53DA;
struct _BAD451990F09F0D15F9CCC07E2537258;
struct _BAE8F8CA1F47FBE696AE2A28E257FFD7;
struct _BB2A9CEFE9788E770B3AB0AB3F9F5135;
struct _BB3921AB7F528B09C1A593D3B64EBEAD;
struct _BB3F6D5B5CBCB21FB44B2A4EFF4AF7FF;
struct _BB611BE52EA9E4C4110772F4A6986FCD;
struct _BB85BC0F248C542450F051D797F47F58;
struct _BB95E9F014E1911D4E1E3EC6C5F0D1BA;
struct _BBBB50E44A18E3C79D4B1DB57A2E78B3;
struct _BBF69680C1C705FB23F2ADAFF8BAC69F;
struct _BC00DB91D6EAEDBED7A9E912894394C9;
struct _BC2985D9EF55848D4A341A78DE21738D;
struct _BC5F8D17A7EBF201257B0BCF4A84636C;
struct _BC6D55FECCACCAF7037456793F823877;
struct _BC9E4A077A44AF5B16CC063CFB5FA173;
struct _BCC89F5383D3C1B61C6BEDCD220446A1;
struct _BCCB89A561BF63803226833E096228B3;
struct _BCEF2CFCF5849594C8FD4F40A8A09957;
struct _BCF08B3A538C4B594E5DE7E4F4218E52;
struct _BCF35254980F95645BBCDA24CCB5EBF1;
struct _BD293684573ABF5801F8B327D47CE441;
struct _BD4007E3E0C6D8CDC04540D2589E7968;
union _BD5314CD2BE3AB5CE52973ACDBD99966;
struct _BDB77D81536F85D8299C89EBAF86574B;
struct _BDF2CE874A5E7CDD7705734530715A1D;
struct _BE973F4FDB064641654791385863872C;
struct _BED2D6D995ED6B10B59E498D605752D1;
struct _BF5CE2558FAD5ED8EE129BA840FFD778;
struct _BF85A3118A1FF8C651A0C1F778F983B0;
struct _BF8DC3DD2E6AEC42A136CED707A9D44D;
struct _BF8F6C836D1B9317716A9CAD4CBBC55F;
struct _BFE9B1A51FBE64F697572C7C8EA6814F;
struct _C04C39A66757B1B312A1927BE6696E8E;
struct _C05C8DE8AEFB7F68AD5837568088F595;
struct _C065A6288ECD7876164DB9BCE6EAE83D;
struct _C06ADBDF6130E5C3AE44F56711A7C5D0;
struct _C083007631904680C751AB34F721C511;
struct _C0C8A9087C30B1CE8B2D8EC81C6D3AF6;
struct _C0F6C2A8FBB9994984F607D899E62187;
struct _C0F99B3464FBF331C20993652C5E0642;
struct _C1280E12EBA0A803ED3C6694680DB66C;
struct _C150E43396C1E9BDF4FCD2C189EFF464;
struct _C1695DCB02FB6E6E8897AB8527534281;
struct _C1F1F38A18362D524DC4F9B3380D0C6C;
struct _C2269CB36634A20EA7C95EAE13971688;
struct _C2875BFC7D9051F8512739CD328EC859;
struct _C291D47FF867C3AD0DFE4561679F9FBD;
struct _C2BC6D47259ACF8922A166D07A7BE9F4;
struct _C3113ED673D5FF4B72ABA90C2A8D9E13;
struct _C34F4C0FC3A8EA2F0BD17F4F5C2AADB7;
struct _C36B89143C1E3740A076B865570ADF20;
union _C3A285CD1904EDCDB417EC8F5027A1F0;
struct _C3BF1122D5C1852227E214E1CA9392B4;
struct _C3F4E3F01E6B33F305781F79A91109DF;
struct _C41080AFCE16CDA5A4F1A1DBB87DA081;
struct _C44C7EFB4C71D381E9E93111208A44F9;
struct _C475A15E5D0B730907296A932E0930F5;
struct _C4829FAE93F04C7651DD8881D17ADFEB;
struct _C48BC651D97767035F229214B70F9A9F;
struct _C4A3E1EFE16F6103EF853C7429C07B27;
struct _C4BD71933A12FF525F3A9EBDE61ED7E3;
struct _C4E2D3995F2015C0403D416DB89CE2DB;
struct _C501FDF64678E92E96708EC263D49D51;
union _C54F2C9D3A2B4295AFFA7925B1211165;
struct _C5A09CAA6159B78B523702900374C16E;
struct _C5A49CCB2EE5B7D1464BF1603863C578;
union _C5B37D2DFCDA6A31CFFEA8F4CFB27712;
struct _C5F57BC2B0B6EE2B75FB780914E5D879;
union _C61042C4D8451B8A12F5E70DC2B6360C;
union _C63C456AEB98DBBC9D03E784D6D27374;
struct _C6783E812A4944B8FFD5EE85DA7123F5;
struct _C679344B91BEC6C13F77CE3FEFAEF2B8;
struct _C6DD94A0C2AC913EBAE6968FD609D5F8;
struct _C6EEF798281BD88F1E2006F84FDBEE1F;
struct _C7165306B581CB7DF3063D1DF3E6E08B;
struct _C739D6E54704F587F137AFFE9786274F;
struct _C759A4E0FC667B805FF83CF37E589BAD;
struct _C7F73EA95F7ADD2BBA9A69C0FBAA1909;
struct _C80725C5166B216A223488BFB7F21C47;
struct _C81ED73FE92C3217EDCB98B3168FF929;
struct _C8576DEBE332FFA7BF2CD60B1B989A91;
struct _C88F66CADC6F0969135DB7C539E8CD7B;
struct _C8DF119FFDD9AC5D77D8855D13C96652;
struct _C954A39FF73D802B29EE10901F3191E1;
struct _C961DF17BCDD7C75BBAFA7D181268110;
struct _C987BED3533B3E01282CF0F1300D858A;
struct _C9D7FBD78CC531CDC95C9CF226690922;
struct _CA1C176886C55B38914A4846A7CB47A1;
struct _CA2F29191A48A2C81DD05191EEF3098B;
struct _CA86F2C8F36CBF5AF3EA74B5F7BF8954;
struct _CB6F3F53448E87500AF2774A69CAF28A;
struct _CB71B91A277CE6BD36AD5111FF5E3244;
struct _CBC0D6F508EBE68BBEF0FA61E3D4F04C;
struct _CBD5AAFE0A37E3F94EC954D0A5B2751E;
struct _CC17200E7FA6B5970040AF8EFBA15C4D;
struct _CC1DB6E4372870F41C66C79D6A501D01;
struct _CC3F58864E42F55138B52E10E756FDE3;
struct _CC48895B9E412E3BD6DC9377041F614A;
struct _CC500B7AA595BF44683AE05BCAF41C59;
struct _CC8A8E7BC00E3AE52B3C896EC08E5AF9;
struct _CC8D119C0B799164842502688415CA50;
struct _CD2E670E749FEDABC03ED9056E0335BF;
struct _CD8F6CF4509A37A7E9122CFAC2543CAF;
struct _CDAD2CCD829691FEAE05A88E0D75617A;
struct _CE2359FB6E2262580F7E492B83DE161B;
struct _CE25C5C92638217AE596B7807905569F;
struct _CE454202E1196C7D0F36AA94D7758685;
struct _CE46CBD44DD39AC2FD774C51A5054E4F;
struct _CE5D7A9E94A502CBDA115DEF631DE7BF;
struct _CE905B68C1019FD575F1F529BC2B6AE0;
struct _CE9A3204B8C1C2509BA36FC45EB55845;
struct _CE9D7FFF634FC72D1136E469E23E246C;
struct _CECC0DD8305EA4411B43DAEA5210C037;
struct _CEEA5E1F904DF18632526980A4AC8A63;
struct _CF02D691DB7E7F7F31F4CE9A6F6F351A;
struct _CF4D72811399137CA7E88D146026D65C;
struct _CF78D6B0316D400E3D07B3957805C8F4;
struct _CF7E90392CCD02B3DAE0DDD621D3ED79;
union _CFED43B28AC7585DEFF643418DE0D8FB;
struct _D0088FB1FCC4339BF6C5684351F5FC66;
struct _D085A2A143CA9E1887FBDD304318E8FF;
struct _D08E99FDC9D7E2D3B365AB8D6B46B0F2;
struct _D0B221078A4E0F678A07442A2174AD85;
struct _D0B47FD0BF657080F777BA7FEA289080;
struct _D0D511F2FD891F706411DB7675B0E214;
struct _D0E75F616C01BBA72CD826DD2FCB9CC0;
struct _D12245CE441E111193CC72D90D0AB154;
union _D157DDF93F430BB7D7000FD375B743F9;
union _D15B7837BDB1ABFF67D6BC1E404170E5;
struct _D179931413783EC21FDC57CE001D407C;
struct _D1A60C85E9D9248AC771C8C968928F3A;
union _D1BE984AFB0100A4AE6FF980B7D60BE7;
struct _D1C2977590748E16F232F61B852C1342;
struct _D21600D66FC6D272348927E5C05F5461;
struct _D251BF46B90C7763ECD8E24C06B39705;
struct _D2B893A4D7D1EC443488152BB8E12929;
struct _D2CC7C8315B809F58AD6BC37C9EE51AE;
struct _D2D53D95DB781080B9E5DD0DD8CF7DC0;
struct _D2E56FB53E9B18B8508926D2DFAC18C1;
struct _D30FC8BF03F61B6660B9FED1D6DCFABB;
struct _D32BBD84251B2A6AAF1C75D15D0C504A;
struct _D3315E2C7A20487BEB8B4CF639C73067;
struct _D356719F7093E106E03D0DCF65678C87;
struct _D35B8C76829129D06BAD5DF5B0CB65D4;
struct _D37DC79DDC42880AEACC6D620E19C86A;
struct _D391E2EE96FCF916E3497CBD40656BC7;
struct _D449158CC1DA6C69E7A99D44FCECEFBC;
struct _D4EF77D3274B9CC082E64AAE399E0343;
struct _D5713C0CEA0D5BBA5F89D82C305834A2;
struct _D61787A53E5B63729D68258870402E8E;
struct _D61DABEC9648C46BCF8FC65397E9722D;
struct _D67234C38A4A90EBB848D36B211176AF;
struct _D6C63370732CF4C1BCACECCD380804C5;
struct _D6E0E84002FDFC4F36E9C535A677D09E;
struct _D7001D855D9D35654C2AB824290A5586;
struct _D75F412170960EA6ABEBFCC39AC27BD4;
struct _D7773540B8449B72EBB989E963175901;
struct _D77C3BF4AD6459820D87B06F53653A24;
struct _D79973267288089C8EF15F59898B9BA8;
struct _D7C9B7662B4CC4760572E38A2E597007;
struct _D7CA5D2C4B72158031401C170D561CD4;
struct _D7D01B9099636E49AAF0C9F275D09F74;
struct _D7F6A39548B67F180281A7589F829443;
struct _D818E4CF6A7E7483023E703B7033DCBC;
struct _D833B7BAA6157FDBBBFE5F4D0F7754FF;
struct _D8C1EB4E91D1F6F56C646C5A60CD8156;
struct _D92E6C205FE94452D965C4230D5A1407;
struct _D9803BDD96BE0854BBF62FAC3DCED6FD;
struct _D98D81D62ACCC166E3819C5D20DA52C2;
struct _D9CC29CB88675D0B37E1F2188EA14C14;
struct _D9CD934CC3C6C545F069CCD64D080ECD;
struct _D9D8E9C80B3C6500CC9032FB44853F01;
struct _D9DBAD3B20FF391AB4124197CBA327FA;
struct _D9FD1BC7612AFECFA6AB634B5B1E16EB;
struct _DA2370F135774DAC578057B93BF5B56B;
struct _DA5DCD78226E6528D0E59BAA48428A5B;
struct _DA66546684685EC3A70FA5A97845B96D;
struct _DA749B500BCF1C6398D8F890AD4BF94D;
struct _DA8FE81CC0E3FB877E9CE295A06E6DDA;
struct _DAA575A1E4F540C43793111540E3F2D7;
struct _DAC2B36DB69599D90EFF62986216419F;
struct _DAC536EC9D6B1C58C0ACAFFEF6C4B5B5;
struct _DAD7E7F52A2984BA612E4D34EBCEB273;
struct _DADA544C45BF73A6993B25D1748FA1C9;
struct _DB1EAEA7716C1AF942FAFA5B5893C7DC;
struct _DBAF76826536C93922C3AE0341876B96;
struct _DBEDC8589888FE8499F8C5868B0E6C09;
struct _DC322FA52FD58BCFA0B901F9F5F40D25;
struct _DC393B8A1F9BDFDC51A68E37CB4B266D;
struct _DC8F84DB3B38E5CD1639DF4C353ACC48;
struct _DC980AFFEFD48DDAF42EA15F1F5BC0EA;
struct _DCE545FB5822D896C1B19931B58B1060;
struct _DD3B57431EA49AA8EC86666E212D3A9A;
struct _DD90A6460ECECB32C3E9F65C84643F1C;
struct _DDB859AD2652ECFFF12EB6BF2AD08988;
struct _DDCCF9FCA16B0D7C5357409FD647F73F;
struct _DDE64AD3B32E108F904CF3E61827FD1C;
struct _DE018B6527D8BAD456AC6761EF46A801;
struct _DE10C1C470E2CD0C71AFA76792F18187;
struct _DE33D1AEE49A1BD9DBDBFDB8B88E9FBC;
struct _DED7ACBE1609AE7F7A12B82E8489D170;
struct _DEF74FC8B9AC1B107FB68B49FF3CF276;
struct _DF22CF9CA9B769C51E2E573A6985619A;
struct _DF3BC5FD17EFDA646BF5E85682013C25;
struct _DF4487F9FF56DB1070FB86D3C5DEA292;
struct _DF78B669A5C1A1C1BDE3D8CC445CEA09;
union _DF7E6158CD23297370340929CD2051C8;
struct _DFAF79501E995C8EA71EDDBBC5BE2E03;
struct _DFF60F2A0689B8A7B841535D9A1F0D00;
struct _E01EF2602DEBD78E635316685D577E29;
struct _E02AC8286318CBC14CD488B4B6212C6D;
struct _E04B20A261BEECF1FC2270F0EF743622;
struct _E05289635D9C996E877C3A24F3F900FE;
struct _E0592557DDB5F086F83BE660642DC445;
union _E05C756931CF804D039B8584A5FAC0BF;
struct _E09C81AEFAC122BE2C0CE1E40D178C5D;
struct _E0F17FEBD492ABA4C86EE5B23BE3E309;
struct _E0FDAC4E3BDC65FDC092E8C9926C0FAA;
struct _E14DA716ADFBC12D364879F193E40921;
struct _E17FC06B3BE19206A8C8D0705BCA713B;
struct _E193AB1C93E05B1762D23774FC06574E;
struct _E1F60BB2CD39EE4B0DE30D99134EA3B4;
struct _E2888E2D965943BE9C31F424F730E153;
struct _E2BDE2F6A658BD89D9688CEBEA05AB2E;
struct _E2D91BC3D19A8D6B311477F95ECB3E4C;
struct _E320AD1080A0279E564D8403C68B77A1;
struct _E33269EACD825C55A32489FC20436724;
struct _E34EAFE04B48E1BBA9F26DFA4324A02D;
struct _E3B7EAE0BB3E863E9704D88F999B9602;
union _E3C5383F745E4FC61C1B778FD0896220;
struct _E3CE801A5C809D62DA553F3A23650BF2;
struct _E3E4B7A8D56AE54705F23ABC4231B6F7;
struct _E415E2751C8815A251B5F32BC2F44190;
struct _E421FC21101E3C5915AE01ACA2277D29;
struct _E448784388D86CF0E27BA2E20A1CB194;
struct _E45A1ABE42AD9419E77EB1A7CD09E056;
struct _E480AB27614BD4F78D3E71B99782E2F1;
struct _E4A56E909B566E944F516D2F131E248A;
struct _E4C30ED7F8D2125F7573B2240B454B7A;
struct _E4CAA01CB4FC3A32463493A4CB58CD8D;
struct _E4D62868E5BD63A21B685AEFDED1DBD5;
struct _E4F9981999F477848E844330CAD341B0;
struct _E59F7502520F69744C439D58C986B3F2;
struct _E5F76CF1869745FF7824621BB58928FA;
struct _E605436B6D69FC7AD8B1625024596CB4;
union _E614E9AE1745E14DE570CCD3E419327A;
struct _E61BC969A8C3B70E128DC9F089720568;
struct _E6239745ADE66C0A5D56B297D9B2B73C;
struct _E645B51A58D7D93C8B1533911DFA57FB;
struct _E6669E07CF547D28E0A0359868269049;
struct _E67EA35C3105155E460DE043A8665F0C;
struct _E6D9C75EAA7ECFE9B401F684341C2AB2;
struct _E6DFE34E6FB079ABE7101F592187F4C9;
struct _E6FD69CE8E5A82DF22B0F915D720319F;
union _E6FDF59E73863B00D8B0D819BC678DCF;
struct _E7009CB53EBEE73475B5E9D4AD6BE638;
struct _E722216BAEE331D2535B9C8695D513A3;
struct _E73B619D120A16C7D7701EC11EF23752;
struct _E75F0BE944C0FCB6E99CFED0DE3DC542;
struct _E77285776565631763AC36BC8608243B;
struct _E7D10BCF161E8C7DAB62916DA1A0279A;
struct _E7FD308AFB9199992B0FF4C170562F5A;
struct _E819EBFFCEF5CE9403902F0EE2EF469E;
struct _E81C3621FE4B8D0647DEBCD1A2C3FDDB;
struct _E888D1400815DBA055347ED727EA37C1;
struct _E88A504DB990B2650A1E6222F0724E77;
struct _E8952E6FFF688DDCC1604E7EA2BEEE62;
struct _E8DF9B3292661BC507CCAEA539B3F92E;
struct _E8F7335BD81B7D3A95E2C4115985CC81;
struct _E91DA923D8834479B94963488B4EB67A;
struct _E920D4B068B666B87BE60357AD064859;
struct _E9EB00794BBE78384F3D16290A439BFD;
struct _E9F0887906CDF4F6D31FFD53A6DF9F6A;
struct _E9F6C04F95593CCF2492DE00493F0DD8;
struct _E9F8F3E39EC43130991818C880C66C09;
struct _EA43600E1B5795B3F7B5B85AE593E7D1;
struct _EA78F3BF8BD8468A78FEAD14EA377F96;
struct _EA7F40BFB8C559DD1B04E9AC3E704430;
struct _EA987423373AACA749C5D6780BE186D2;
struct _EAB02E269A14A57FD4134AF1A62FF8F7;
struct _EAC2E2A17271872096986BE83875F537;
struct _EB8A3CD07E0BF00E4FD5FF7ABAF3321C;
struct _EB8F46A830D9D94D2766D4C9A4BA60BD;
struct _EBA360CF91A54674EFD80EDA165ECE6A;
struct _EBA4FB6A469BBC38A010BC96DB327D60;
struct _EBD444B5CC02E90760E7B081CCD0D95B;
struct _EC0AFB1DD84DE30CD069B98F1439B48D;
struct _EC0BA3AFE8D2ACF3A8E8B9154D00680B;
struct _EC1CCB0312C034DEB00F9C27D95C6285;
struct _EC6CE77CD8A5E681FA699FCAFE971117;
union _EC9053F147967E22E2590C1E50F04F29;
union _ECDB53E3AB324F7DEE2A08EF635387FD;
struct _ECF61D23EA53CCA39F9AEDBD220B29FC;
struct _ECF8D0F446F0DA6D5BA2650D6B923C03;
struct _ED33D109A02D5772A279DF2D26963171;
struct _ED528C06F0D57DB23B67217FFB880EAB;
struct _ED77853CEA1192D0B8E3AED4CD5C7E1B;
struct _EDEF2C6FBD1A6ED66EE2D29E201317E7;
struct _EE144051703A467A552517BDDECF2797;
struct _EE1E755472070719C001852BDBB40567;
struct _EE2480321051546AA699FCC4B16FD164;
struct _EE4C6509791AB78C96F67DF2DF3C5F68;
struct _EE59026B979B77D0E8B4BCCAB1AFE8A2;
struct _EEA73679987C372D7777CBD7A073E350;
struct _EEE11938D794A1BF7B1DC13B55727429;
struct _EF06F899AB40CEA3705D0602563CA587;
struct _EF21D80790C417A35FBBE5271FDCA000;
struct _EF2B645B56217D3DE53DDEA82D5E74E0;
struct _EF5AE40B59BDB6BB69A24E12D6228D0E;
struct _F005CA091951A17647839EB20452A1E0;
struct _F13DFB1F2908D67B00108220A6F85C86;
struct _F13EC32AD861012C67EEDC777C641229;
struct _F14A0CFB34098AE87DDB3C99DBB83B9A;
union _F16F3B0C6B17F21C6855DE9E95AA430E;
struct _F1954A734E86044BE7E694780B200E8B;
struct _F19B1F4A90E646AB36AC0230C8E90425;
struct _F1B84B2FEC13665EC90B5878F7A30391;
union _F1C594884B56499A144068841DCCBD9C;
struct _F1C91C1F34DF2478E48B88EFD2B3EA4C;
struct _F1E81DAA883C62B36E0F4AB83D157A1B;
struct _F1F4BD7F1C65A95880CBC42EAAC51490;
struct _F1FEC15FBAF78A2C2F9CCDCA8E649452;
struct _F21C1A88A2EE64F577E38E0B85C93835;
struct _F22FC22B22192DCDDA0EB3D8A87CEAF0;
struct _F24BF685FE2FFD6D8D21627AC8F7EAE4;
struct _F28A51465BCE27322D6C3CE71832DC07;
struct _F2A23F357CAE2D69B270DE52322297E3;
struct _F2D678FC8FC5654A334F5779CED9391B;
struct _F2E155DB6D099B6798F04C649E8B92A6;
struct _F31FE6C8564149D4ADB0252B9757F923;
struct _F32C4D570F0F6EDFC6DC33B4DA7D37F3;
union _F33B98B34D2E7A59DA07EED7E263E778;
struct _F3F4EB21D4CD1644BEF61DF9960042A1;
struct _F4152F3B05D30B6B9D819410712408A1;
struct _F4169FCFB32B1326C8F7F00940954AC9;
struct _F4429A50E788466D7EAAF864065A7A40;
struct _F45FF1BC91AF929EB0B363B4AC224A3E;
struct _F49DA75B990C47B377CE7AAC7E705BA7;
struct _F4CAD93BDEB4EB58D10E72E92DA5C496;
union _F5238921CBF27C887BB68ABA324F3CCD;
struct _F54A966A3AD46C3DA1EAD3D96FA6D167;
union _F5FBE7334F772919A43019DC3C2D98D9;
struct _F663F2ACD628C345DC4CC4986AE5FCEE;
struct _F6693EB537F6ADE7F029FFA1E9336F4B;
struct _F6B0F99A09D21248DEB1B450B841ED43;
struct _F6C017084C31B64B3252FA677EBE0C8C;
struct _F6F503A5BF14C3E7E5412CF4EB8F9FA5;
struct _F7360F28947B935D45CA2C0CBC7637BA;
struct _F760AA4E81877DFB0F36C2C7103BECD1;
struct _F76494BC3AA7438238B279B0883A6598;
struct _F76F58FED370FE550FAE95E2DB6495AB;
struct _F77F8648509DA27DD31EAF764A392E95;
struct _F78A0D139DB8C0035378F46675C6CBCF;
struct _F7B5EF35B486C72B6C55B1D2ABBDC47D;
struct _F809494E5EBBD7AB39E4CBE1C36C7080;
struct _F82C7CF31A94CF1E43C42E26FF4F1D8A;
struct _F898EFB37CD01D9C44137AF8CC6CA606;
struct _F8990009920594911E2816CA7540AFAC;
struct _F8A59569CD3F9835ACD986155F8ED016;
struct _F948C5F68E3369377A3565AD89807131;
struct _F949FA152F73701F4284BFAE0FE56425;
struct _F94E551C4E7F83190A6F3C3BA73B9B85;
struct _F98C2FDF6B0288DB9DB7F711D38FAF1D;
struct _F98E9868A1D3EA615C1B6BAEA6621ABA;
struct _F98F00A2B8C491B4094190B49E4921D8;
struct _F99B70E853BBE276945C20D75C9C4AB5;
struct _F9B7C3048F22FF3511E113F096D2E9D5;
struct _F9D42D39DD3C8DF123E27FB71942E14A;
struct _FA0FCFC5E91DF9D5D00202CEA491E9F3;
struct _FA14C0B71678195363B92AA831A8E66C;
struct _FA6AAB53270C8CFB12CB95253772A103;
struct _FAAA7B02052316094C472795C6F3F283;
struct _FAD500F6BE151EBFA0EB41EE086D7C89;
struct _FAD9E14BAE1BD4EEF8AB3A8C7429C8D0;
struct _FAE113C48115BAA8175D7C1704E7D818;
struct _FB4111D416CC866343ED7FCA940F38E6;
struct _FB5A10229933A8A55CD34CE9FAB61744;
struct _FB6C911BAE72887D09506B334B3D43FA;
struct _FB70E6CA8292B432E3A410FF93C01143;
struct _FB71CE30D7CCDDEC85E5BB8165632F3B;
struct _FB82E4901BECB6AC97749608974BB812;
struct _FC1570775E7D1D4DC0C9D75FBE11BCB6;
struct _FC37A93F9A7B7F8791686F00B8D94AEE;
struct _FC50B914782F3531749125FC4B4CF216;
struct _FC542E6EFF6DCA60B8117825EDB2E023;
struct _FC60D38E48AB1C9DD1AEF485EB8C0EF1;
struct _FC8057BD7989C9ED1DAB2B2369E11209;
struct _FCAC3FF5AC09C652C812670302663021;
struct _FCAE42F8DAF516AC5995CDFD0E938215;
union _FCBD8BC731F2D3A4BD0C752F426A1602;
struct _FCD72BE2F93774EAA3A635EBA87ACC1D;
struct _FD553E7DD9C9C4B9F8A7BAA8FA772EF4;
struct _FD5F374D24F14A6FD6462F294476DE9F;
struct _FD74FB9E171A16024A3BCE3E9FC560FE;
struct _FDD4725E56523ABD335FF2140BAFF3CA;
struct _FDDF0E7A0B734429633C5140DE6811E3;
struct _FE140301C84DDB7768C685C5F48B19EB;
struct _FE2731A7F9F42BC25FF8CF36F24478FC;
struct _FEB5BFE80B7B966C8F41CA5B2E3B851B;
struct _FEC1B3E7B4BD6F8FB5125B8FDA09F2D0;
struct _FF3D91E66F819C4F98F9776968F6FD4F;
struct _FF5829BC88506E44C19973610DF8FFB1;
struct _FF6A55059D2F8FBB228E6A52654D0074;
struct _EFI_ADAPTER_INFORMATION_PROTOCOL;
struct _EFI_AUTHENTICATION_INFO_PROTOCOL;
struct _EFI_BOOT_MANAGER_POLICY_PROTOCOL;
struct _EFI_DEFERRED_IMAGE_LOAD_PROTOCOL;
struct _EFI_DRIVER_DIAGNOSTICS2_PROTOCOL;
struct _EFI_EBC_SIMPLE_DEBUGGER_PROTOCOL;
struct _EFI_FIRMWARE_MANAGEMENT_PROTOCOL;
struct _EFI_GENERIC_MEMORY_TEST_PROTOCOL;
struct _EFI_HII_GIBT_GLYPH_DEFAULT_BLOCK;
struct _EFI_IDE_CONTROLLER_INIT_PROTOCOL;
struct _EFI_PCI_HOTPLUG_REQUEST_PROTOCOL;
struct _EFI_PEI_BOOT_SCRIPT_EXECUTER_PPI;
struct _EFI_PEI_FIRMWARE_VOLUME_INFO_PPI;
struct _EFI_SEC_PLATFORM_INFORMATION_PPI;
struct _EFI_WATCHDOG_TIMER_ARCH_PROTOCOL;
struct _EFI_DRIVER_DIAGNOSTICS_PROTOCOL;
struct _EFI_EXT_SCSI_PASS_THRU_PROTOCOL;
struct _EFI_HII_AIBT_CLEAR_IMAGES_BLOCK;
struct _EFI_HII_AIBT_RESTORE_SCRN_BLOCK;
struct _EFI_HII_CONFIG_ROUTING_PROTOCOL;
struct _EFI_HII_DEVICE_PATH_PACKAGE_HDR;
struct _EFI_HII_SIBT_STRINGS_SCSU_BLOCK;
struct _EFI_HII_SIBT_STRINGS_UCS2_BLOCK;
struct _EFI_HII_SIMPLE_FONT_PACKAGE_HDR;
struct _EFI_PCI_ROOT_BRIDGE_IO_PROTOCOL;
struct _EFI_PEI_READ_ONLY_VARIABLE2_PPI;
struct _EFI_PEI_VECTOR_HANDOFF_INFO_PPI;
struct _EFI_REGULAR_EXPRESSION_PROTOCOL;
struct _EFI_SECTION_EXTRACTION_PROTOCOL;
struct _EFI_SIMPLE_FILE_SYSTEM_PROTOCOL;
struct _EFI_SIMPLE_TEXT_OUTPUT_PROTOCOL;
struct _EFI_SMM_CPU_SAVE_STATE_PROTOCOL;
struct _EFI_SWAP_ADDRESS_RANGE_PROTOCOL;
struct _TCG_EFI_BOOT_SERVICE_CAPABILITY;
struct s_pxe_cpb_fill_header_fragmented;
struct _EFI_EAP_CONFIGURATION_PROTOCOL;
struct _EFI_HII_CONFIG_ACCESS_PROTOCOL;
struct _EFI_HII_IIBT_IMAGE_24BIT_BLOCK;
struct _EFI_HII_SIBT_STRING_SCSU_BLOCK;
struct _EFI_HII_SIBT_STRING_UCS2_BLOCK;
struct _EFI_PCI_HOT_PLUG_INIT_PROTOCOL;
struct _EFI_PEI_READ_ONLY_VARIABLE_PPI;
struct _EFI_PEI_RECOVERY_BLOCK_IO2_PPI;
struct _EFI_PEI_SECTION_EXTRACTION_PPI;
struct _EFI_PEI_TEMPORARY_RAM_DONE_PPI;
struct _EFI_SIMPLE_TEXT_INPUT_PROTOCOL;
struct _EFI_SMART_CARD_READER_PROTOCOL;
struct _EFI_SMM_COMMUNICATION_PROTOCOL;
struct _EFI_SMM_CONFIGURATION_PROTOCOL;
struct _EFI_SMM_GPI_DISPATCH2_PROTOCOL;
struct _EFI_SMM_ICHN_DISPATCH_PROTOCOL;
struct _EFI_SMM_USB_DISPATCH2_PROTOCOL;
struct _EFI_UNICODE_COLLATION_PROTOCOL;
struct _PEI_LOCK_PHYSICAL_PRESENCE_PPI;
struct _EDKII_MEMORY_PROFILE_PROTOCOL;
struct _EDKII_UFS_HOST_CONTROLLER_PPI;
struct _EFI_ABSOLUTE_POINTER_PROTOCOL;
struct _EFI_BLUETOOTH_CONFIG_PROTOCOL;
struct _EFI_BOOT_SCRIPT_SAVE_PROTOCOL;
struct _EFI_FIRMWARE_VOLUME2_PROTOCOL;
struct _EFI_HII_ANIMATION_PACKAGE_HDR;
struct _EFI_HII_IIBT_IMAGE_1BIT_BLOCK;
struct _EFI_HII_IIBT_IMAGE_24BIT_BASE;
struct _EFI_HII_IIBT_IMAGE_4BIT_BLOCK;
struct _EFI_LEGACY_INTERRUPT_PROTOCOL;
struct _EFI_PEI_RECOVERY_BLOCK_IO_PPI;
struct _EFI_PEI_SMM_COMMUNICATION_PPI;
struct _EFI_SAL_MCA_INIT_PMI_PROTOCOL;
struct _EFI_SHELL_PARAMETERS_PROTOCOL;
struct _EFI_SMM_GPI_DISPATCH_PROTOCOL;
struct _EFI_SMM_RESERVED_SMRAM_REGION;
struct _EFI_SMM_SW_DISPATCH2_PROTOCOL;
struct _EFI_SMM_SX_DISPATCH2_PROTOCOL;
struct _EFI_SMM_USB_DISPATCH_PROTOCOL;
struct _EFI_USER_CREDENTIAL2_PROTOCOL;
struct _FORM_DISPLAY_ENGINE_STATEMENT;
struct _EDKII_SMM_VAR_CHECK_PROTOCOL;
struct _EDKII_VARIABLE_LOCK_PROTOCOL;
struct _EFI_BLOCK_IO_CRYPTO_PROTOCOL;
struct _EFI_COMPONENT_NAME2_PROTOCOL;
struct _EFI_EAP_MANAGEMENT2_PROTOCOL;
struct _EFI_FIRMWARE_VOLUME_PROTOCOL;
struct _EFI_GRAPHICS_OUTPUT_PROTOCOL;
struct _EFI_HII_AIBT_DUPLICATE_BLOCK;
struct _EFI_HII_GIBT_DUPLICATE_BLOCK;
struct _EFI_HII_IIBT_DUPLICATE_BLOCK;
struct _EFI_HII_IIBT_IMAGE_1BIT_BASE;
struct _EFI_HII_IIBT_IMAGE_4BIT_BASE;
struct _EFI_HII_IIBT_IMAGE_8BIT_BASE;
struct _EFI_HII_SIBT_DUPLICATE_BLOCK;
struct _EFI_MANAGED_NETWORK_PROTOCOL;
struct _EFI_SERVICE_BINDING_PROTOCOL;
struct _EFI_SMART_CARD_EDGE_PROTOCOL;
struct _EFI_SMM_RSC_HANDLER_PROTOCOL;
struct _EFI_SMM_STATUS_CODE_PROTOCOL;
struct _EFI_SMM_SW_DISPATCH_PROTOCOL;
struct _EFI_SMM_SX_DISPATCH_PROTOCOL;
struct _EFI_USER_CREDENTIAL_PROTOCOL;
struct _PEI_USB2_HOST_CONTROLLER_PPI;
struct _TREE_BOOT_SERVICE_CAPABILITY;
struct tdEFI_TCG2_FINAL_EVENTS_TABLE;
struct _EFI_COMPONENT_NAME_PROTOCOL;
struct _EFI_DRIVER_BINDING_PROTOCOL;
struct _EFI_EAP_MANAGEMENT_PROTOCOL;
struct _EFI_HII_GIBT_DEFAULTS_BLOCK;
struct _EFI_HTTP_UTILITIES_PROTOCOL;
struct _EFI_IFR_VARSTORE_NAME_VALUE;
struct _EFI_LEGACY_REGION2_PROTOCOL;
union _EFI_MEMORY_SUBCLASS_RECORDS;
struct _EFI_METRONOME_ARCH_PROTOCOL;
struct _EFI_PEI_FIRMWARE_VOLUME_PPI;
struct _EFI_PEI_RECOVERY_MODULE_PPI;
struct _EFI_SCSI_PASS_THRU_PROTOCOL;
struct _EFI_SECURITY2_ARCH_PROTOCOL;
struct _EFI_SIMPLE_NETWORK_PROTOCOL;
struct _EFI_SIMPLE_POINTER_PROTOCOL;
struct _PEI_USB_HOST_CONTROLLER_PPI;
struct s_pxe_cpb_transmit_fragments;
struct tdEFI_HANDOFF_TABLE_POINTERS;
struct tdEFI_PLATFORM_FIRMWARE_BLOB;
struct _EFI_ATA_PASS_THRU_PROTOCOL;
struct _EFI_DEBUG_SUPPORT_PROTOCOL;
struct _EFI_DRIVER_HEALTH_PROTOCOL;
struct _EFI_EDID_OVERRIDE_PROTOCOL;
struct _EFI_FORM_BROWSER2_PROTOCOL;
struct _EFI_FORM_CALLBACK_PROTOCOL;
struct _EFI_HII_IMAGE_PALETTE_INFO;
struct _EFI_HII_STRING_PACKAGE_HDR;
struct _EFI_HII_VARIABLE_PACK_LIST;
struct _EFI_I2C_ENUMERATE_PROTOCOL;
struct _EFI_LEGACY_REGION_PROTOCOL;
struct _EFI_PEI_FV_FILE_LOADER_PPI;
struct _EFI_PXE_BASE_CODE_PROTOCOL;
struct _EFI_S3_SAVE_STATE_PROTOCOL;
struct _EFI_SECURITY_ARCH_PROTOCOL;
struct _EFI_SMM_SAVE_STATE_IO_INFO;
struct _EFI_VGA_MINI_PORT_PROTOCOL;
struct _FRAMEWORK_EFI_PEI_SERVICES;
struct BY_HANDLE_FILE_INFORMATION;
struct _EFI_ACPI_S3_SAVE_PROTOCOL;
struct _EFI_ACPI_SUPPORT_PROTOCOL;
struct _EFI_BLUETOOTH_HC_PROTOCOL;
struct _EFI_BLUETOOTH_IO_PROTOCOL;
struct _EFI_FORM_BROWSER_PROTOCOL;
struct _EFI_GET_PCD_INFO_PROTOCOL;
struct _EFI_HII_DATABASE_PROTOCOL;
struct _EFI_HII_GIBT_GLYPHS_BLOCK;
struct _EFI_HII_IMAGE_PACKAGE_HDR;
struct _EFI_IPSEC_CONFIG_PROTOCOL;
union _EFI_MISC_PORT_DEVICE_PATH;
struct _EFI_PCI_PLATFORM_PROTOCOL;
struct _EFI_PEI_NOTIFY_DESCRIPTOR;
struct _EFI_PKCS7_VERIFY_PROTOCOL;
struct _EFI_RUNTIME_ARCH_PROTOCOL;
struct _EFI_SMM_CONTROL2_PROTOCOL;
struct _EFI_SMM_VARIABLE_PROTOCOL;
struct _EFI_TCG_CLIENT_ACPI_TABLE;
struct _EFI_TCG_SERVER_ACPI_TABLE;
union _EFI_USBFN_MESSAGE_PAYLOAD;
struct _EFI_USBFN_TRANSFER_RESULT;
struct _EFI_USER_MANAGER_PROTOCOL;
struct _PARALLEL_CONN_DEVICE_PATH;
struct _SAL_UPDATE_PAL_INFO_BLOCK;
struct _EDKII_VAR_CHECK_PROTOCOL;
struct _EFI_EBC_VM_TEST_PROTOCOL;
struct _EFI_GLYPH_GIBT_END_BLOCK;
struct _EFI_HII_AIBT_SKIP1_BLOCK;
struct _EFI_HII_AIBT_SKIP2_BLOCK;
struct _EFI_HII_FONT_PACKAGE_HDR;
struct _EFI_HII_FORM_PACKAGE_HDR;
struct _EFI_HII_GIBT_GLYPH_BLOCK;
struct _EFI_HII_GIBT_SKIP1_BLOCK;
struct _EFI_HII_GIBT_SKIP2_BLOCK;
struct _EFI_HII_GUID_PACKAGE_HDR;
struct _EFI_HII_IIBT_SKIP1_BLOCK;
struct _EFI_HII_IIBT_SKIP2_BLOCK;
struct _EFI_HII_SIBT_SKIP1_BLOCK;
struct _EFI_HII_SIBT_SKIP2_BLOCK;
struct _EFI_IFR_STATEMENT_HEADER;
struct _EFI_IP4_CONFIG2_PROTOCOL;
struct _EFI_IPSEC_PROCESS_POLICY;
struct _EFI_LEGACY_8259_PROTOCOL;
struct _EFI_LEGACY_BIOS_PROTOCOL;
struct _EFI_MP_SERVICES_PROTOCOL;
struct _EFI_OEM_BADGING_PROTOCOL;
struct _EFI_PEI_LOADED_IMAGE_PPI;
struct _EFI_SIO_CONTROL_PROTOCOL;
struct _EFI_SMM_ACCESS2_PROTOCOL;
struct _EFI_SMM_CONTROL_PROTOCOL;
struct _EFI_SMM_CPU_IO2_PROTOCOL;
struct _EFI_SMM_CPU_IO_INTERFACE;
struct _EFI_STATUS_CODE_PROTOCOL;
struct _EFI_VLAN_CONFIG_PROTOCOL;
struct _ESRT_MANAGEMENT_PROTOCOL;
struct _FORM_DISPLAY_ENGINE_FORM;
struct s_pxe_cpb_mcast_ip_to_mac;
struct s_pxe_cpb_receive_filters;
struct s_pxe_cpb_station_address;
struct s_pxe_dpb_station_address;
struct tdTPM_CHANGEAUTH_VALIDATE;
struct tdTPM_DELEGATE_OWNER_BLOB;
struct ORDERED_COLLECTION_ENTRY;
struct _EFI_ACPI_TABLE_PROTOCOL;
struct _EFI_DEBUG_MASK_PROTOCOL;
struct _EFI_DECOMPRESS_PROTOCOL;
struct _EFI_HII_AIBT_EXT1_BLOCK;
struct _EFI_HII_AIBT_EXT2_BLOCK;
struct _EFI_HII_AIBT_EXT4_BLOCK;
struct _EFI_HII_ANIMATION_BLOCK;
struct _EFI_HII_GIBT_EXT1_BLOCK;
struct _EFI_HII_GIBT_EXT2_BLOCK;
struct _EFI_HII_GIBT_EXT4_BLOCK;
struct _EFI_HII_IIBT_EXT1_BLOCK;
struct _EFI_HII_IIBT_EXT2_BLOCK;
struct _EFI_HII_IIBT_EXT4_BLOCK;
struct _EFI_HII_IIBT_JPEG_BLOCK;
struct _EFI_HII_SIBT_EXT1_BLOCK;
struct _EFI_HII_SIBT_EXT2_BLOCK;
struct _EFI_HII_SIBT_EXT4_BLOCK;
struct _EFI_HII_SIBT_FONT_BLOCK;
struct _EFI_HII_STRING_PROTOCOL;
struct _EFI_I2C_MASTER_PROTOCOL;
struct _EFI_IFR_FORM_MAP_METHOD;
struct _EFI_IFR_INCONSISTENT_IF;
struct _EFI_IFR_QUESTION_HEADER;
struct _EFI_IFR_QUESTION_REF3_2;
struct _EFI_IFR_QUESTION_REF3_3;
struct _EFI_IFR_VARSTORE_DEVICE;
struct _EFI_IP4_CONFIG_PROTOCOL;
struct _EFI_IP6_CONFIG_PROTOCOL;
struct _EFI_IPSEC_ESP_ALGO_INFO;
struct _EFI_IPSEC_FRAGMENT_DATA;
struct _EFI_IPSEC_TUNNEL_OPTION;
struct _EFI_LOAD_FILE2_PROTOCOL;
struct _EFI_PE32_IMAGE_PROTOCOL;
struct _EFI_PEI_MP_SERVICES_PPI;
struct _EFI_PEI_RSC_HANDLER_PPI;
struct _EFI_RUNTIME_EVENT_ENTRY;
struct _EFI_RUNTIME_IMAGE_ENTRY;
struct _EFI_SMM_ACCESS_PROTOCOL;
struct _EFI_TIMER_ARCH_PROTOCOL;
struct _FLOOPY_CONN_DEVICE_PATH;
struct _MTRR_VARIABLE_SETTINGS_;
struct _PEI_SEC_PERFORMANCE_PPI;
struct _PERFORMANCE_EX_PROTOCOL;
struct _SERIAL_CONN_DEVICE_PATH;
struct s_pxe_db_mcast_ip_to_mac;
struct s_pxe_db_receive_filters;
struct tdTPM_DELEGATE_SENSITIVE;
struct tdTPM_DELEGATE_TABLE_ROW;
struct tdTPM_FAMILY_TABLE_ENTRY;
struct tdTPM_SYM_CA_ATTESTATION;
struct tdTPM_TRANSPORT_INTERNAL;
union u_pxe_db_get_config_info;
struct _EFI_BLOCK_IO2_PROTOCOL;
struct _EFI_BOOT_LOGO_PROTOCOL;
struct _EFI_DEBUGPORT_PROTOCOL;
struct _EFI_DEVICE_IO_PROTOCOL;
struct _EFI_DISK_INFO_PROTOCOL;
struct _EFI_FTP4_COMMAND_TOKEN;
struct _EFI_HII_ANIMATION_CELL;
struct _EFI_HII_IIBT_END_BLOCK;
struct _EFI_HII_IMAGE_PROTOCOL;
struct _EFI_HII_SIBT_END_BLOCK;
struct _EFI_IFR_EQ_ID_VAL_LIST;
struct _EFI_IFR_GUID_OPTIONKEY;
struct _EFI_IFR_GUID_VAREQNAME;
struct _EFI_IPSEC_AH_ALGO_INFO;
struct _EFI_IPSEC_SPD_SELECTOR;
struct _EFI_LOAD_FILE_PROTOCOL;
struct _EFI_PEI_DECOMPRESS_PPI;
struct _EFI_PEI_I2C_MASTER_PPI;
struct _EFI_PEI_S3_RESUME2_PPI;
struct _EFI_SERIAL_IO_PROTOCOL;
struct _EFI_SMM_BASE2_PROTOCOL;
struct _EFI_TIMESTAMP_PROTOCOL;
struct _MTRR_VARIABLE_SETTING_;
struct _PEI_ATA_CONTROLLER_PPI;
struct _PEI_USB_CONTROLLER_PPI;
struct s_pxe_cpb_nvdata_sparse;
struct tdTPM_CONTEXT_SENSITIVE;
struct tdTPM_DELEGATE_KEY_BLOB;
struct tdTPM_IDENTITY_CONTENTS;
struct tdTPM_TRANSPORT_LOG_OUT;
struct _EFI_ACPI_SDT_PROTOCOL;
struct _EFI_ATA_COMMAND_BLOCK;
struct _EFI_BDS_ARCH_PROTOCOL;
struct _EFI_BLOCK_IO_PROTOCOL;
struct _EFI_CPU_ARCH_PROTOCOL;
struct _EFI_DATA_HUB_PROTOCOL;
struct _EFI_DISK_IO2_PROTOCOL;
struct _EFI_FONT_DISPLAY_INFO;
struct _EFI_HII_FONT_PROTOCOL;
struct _EFI_I2C_HOST_PROTOCOL;
struct _EFI_IFR_GREATER_EQUAL;
struct _EFI_IFR_GUID_SUBCLASS;
struct _EFI_IFR_ONE_OF_OPTION;
struct _EFI_IFR_QUESTION_REF1;
struct _EFI_IFR_QUESTION_REF2;
struct _EFI_IFR_QUESTION_REF3;
struct _EFI_IP6_FRAGMENT_DATA;
struct _EFI_IP6_OVERRIDE_DATA;
struct _EFI_IP6_TRANSMIT_DATA;
struct _EFI_IPSEC_SA_LIFETIME;
struct _EFI_ISA_ACPI_PROTOCOL;
struct _EFI_PEI_LOAD_FILE_PPI;
struct _EFI_PEI_SECURITY2_PPI;
struct _EFI_SMBUS_HC_PROTOCOL;
struct _EFI_SMM_BASE_PROTOCOL;
struct _EFI_SMM_ENTRY_CONTEXT;
struct _EFI_SMM_SYSTEM_TABLE2;
struct _EFI_UGA_DRAW_PROTOCOL;
struct _EFI_USBFN_IO_PROTOCOL;
struct _GET_PCD_INFO_PROTOCOL;
struct s_pxe_db_get_init_info;
struct tdEFI_IMAGE_LOAD_EVENT;
struct tdTPM_ASYM_CA_CONTENTS;
struct tdTPM_CAP_VERSION_INFO;
struct tdTPM_EK_BLOB_ACTIVATE;
struct tdTPM_MIGRATIONKEYAUTH;
struct tdTPM_TRANSPORT_LOG_IN;
struct tdTPM_TRANSPORT_PUBLIC;
struct TIME_ZONE_INFORMATION;
struct _EFI_ACPI_DESCRIPTION;
struct _EFI_ATA_STATUS_BLOCK;
struct _EFI_CPU_IO2_PROTOCOL;
struct _EFI_DISK_IO_PROTOCOL;
struct _EFI_GET_PCD_INFO_PPI;
struct _EFI_IFR_DEFAULTSTORE;
struct _EFI_IFR_GREATER_THAN;
struct _EFI_IFR_GUID_TIMEOUT;
struct _EFI_IFR_NO_SUBMIT_IF;
struct _EFI_IFR_ORDERED_LIST;
struct _EFI_IFR_RESET_BUTTON;
struct _EFI_IFR_VARSTORE_EFI;
struct _EFI_IP6_RECEIVE_DATA;
struct _EFI_NET_SESSION_DATA;
struct _EFI_PEI_GRAPHICS_PPI;
struct _EFI_PEI_PCI_CFG2_PPI;
struct _EFI_PEI_SECURITY_PPI;
struct _EFI_SCSI_IO_PROTOCOL;
struct _EFI_SEC_PEI_HAND_OFF;
struct _EFI_SMM_CPU_PROTOCOL;
struct _EFI_SMM_SYSTEM_TABLE;
struct _EFI_TAPE_IO_PROTOCOL;
struct _EFI_USB2_HC_PROTOCOL;
struct _MTRR_FIXED_SETTINGS_;
struct _PERFORMANCE_PROTOCOL;
struct _PS2_CONN_DEVICE_PATH;
struct _RMC_CONN_DEVICE_PATH;
struct _USB_PORT_DEVICE_PATH;
struct s_pxe_cpb_fill_header;
struct s_pxe_pcc_config_info;
struct s_pxe_pci_config_info;
struct tdTPM_AUDIT_EVENT_OUT;
struct tdTPM_CMK_MA_APPROVAL;
struct tdTPM_DA_INFO_LIMITED;
struct tdTPM_DELEGATE_PUBLIC;
struct tdTPM_KEY_HANDLE_LIST;
struct tdTPM_MIGRATE_ASYMKEY;
struct tdTPM_PERMANENT_FLAGS;
struct tdTPM_RQU_COMMAND_HDR;
struct tdTPM_RSP_COMMAND_HDR;
union u_pxe_cpb_nvdata_bulk;
struct _EFI_EAPOL_PORT_INFO;
struct _EFI_HII_GLYPH_BLOCK;
struct _EFI_HII_IMAGE_BLOCK;
struct _EFI_I2C_IO_PROTOCOL;
struct _EFI_IFR_BITWISE_AND;
struct _EFI_IFR_BITWISE_NOT;
struct _EFI_IFR_CONDITIONAL;
struct _EFI_IFR_GRAY_OUT_IF;
struct _EFI_IFR_GUID_BANNER;
struct _EFI_IFR_SHIFT_RIGHT;
struct _EFI_IFR_STRING_REF1;
struct _EFI_IFR_STRING_REF2;
struct _EFI_IFR_SUPPRESS_IF;
struct _EFI_IPSEC2_PROTOCOL;
struct _EFI_IP_ADDRESS_INFO;
struct _EFI_ISA_HC_PROTOCOL;
struct _EFI_ISA_IO_PROTOCOL;
struct _EFI_MTFTP4_PROTOCOL;
struct _EFI_MTFTP6_PROTOCOL;
struct _EFI_PCI_IO_PROTOCOL;
struct _EFI_PEI_CAPSULE_PPI;
struct _EFI_PEI_FIND_FV_PPI;
struct _EFI_PEI_PCI_CFG_PPI;
struct _EFI_PRINT2_PROTOCOL;
struct _EFI_SMBIOS_PROTOCOL;
struct _EFI_UGA_IO_PROTOCOL;
struct _EFI_USB_HC_PROTOCOL;
struct _EFI_USB_IO_PROTOCOL;
struct _PEI_SMM_CONTROL_PPI;
struct _VARIABLE_INFO_ENTRY;
struct hid_class_descriptor;
struct s_pxe_cpb_initialize;
struct tdTPM_AUDIT_EVENT_IN;
struct tdTPM_DA_ACTION_TYPE;
struct tdTPM_DELEGATE_LABEL;
struct tdTPM_DELEGATE_TABLE;
struct tdTPM_IDENTITY_PROOF;
struct tdTPM_NV_DATA_PUBLIC;
struct tdTPM_PCR_ATTRIBUTES;
struct tdTPM_PCR_INFO_SHORT;
struct tdTPM_TRANSPORT_AUTH;
struct CONSOLE_CURSOR_INFO;
struct SECURITY_ATTRIBUTES;
struct _EFI_DHCP4_PROTOCOL;
struct _EFI_DHCP6_PROTOCOL;
struct _EFI_HASH2_PROTOCOL;
struct _EFI_HII_GLYPH_INFO;
struct _EFI_IFR_BITWISE_OR;
struct _EFI_IFR_DISABLE_IF;
struct _EFI_IFR_GUID_CLASS;
struct _EFI_IFR_GUID_LABEL;
struct _EFI_IFR_LESS_EQUAL;
struct _EFI_IFR_REFRESH_ID;
struct _EFI_IFR_SHIFT_LEFT;
struct _EFI_IFR_TO_BOOLEAN;
struct _EFI_IFR_WARNING_IF;
struct _EFI_IPSEC_PAD_DATA;
struct _EFI_IPSEC_PROTOCOL;
struct _EFI_IPSEC_SA_DATA2;
struct _EFI_IPSEC_SPD_DATA;
struct _EFI_PEI_CPU_IO_PPI;
struct _EFI_PEI_RESET2_PPI;
struct _EFI_PEI_SMBUS2_PPI;
struct _EFI_SHELL_ARG_INFO;
struct _EFI_SHELL_PROTOCOL;
struct _GB_NIC_DEVICE_PATH;
struct _PEI_SMM_ACCESS_PPI;
struct s_pxe_db_get_status;
struct s_pxe_db_initialize;
struct s_pxe_db_statistics;
struct tdEFI_TCG2_PROTOCOL;
struct tdEFI_VARIABLE_DATA;
struct tdTCG_PCR_EVENT_HDR;
struct tdTPM_CERTIFY_INFO2;
struct tdTPM_CMK_SIGTICKET;
struct tdTPM_COUNTER_VALUE;
struct tdTPM_CURRENT_TICKS;
struct tdTPM_DAA_SENSITIVE;
struct tdTPM_MSA_COMPOSITE;
struct tdTPM_NV_ATTRIBUTES;
struct tdTPM_PCR_COMPOSITE;
struct tdTPM_PCR_INFO_LONG;
struct tdTPM_PCR_SELECTION;
struct tdTPM_STCLEAR_FLAGS;
struct tdTPM_STORED_DATA12;
struct tdTPM_STORE_ASYMKEY;
struct tdTPM_STORE_PRIVKEY;
struct tdTPM_SYMMETRIC_KEY;
struct ORDERED_COLLECTION;
struct _EFI_DNS4_PROTOCOL;
struct _EFI_DNS6_PROTOCOL;
struct _EFI_FILE_PROTOCOL;
struct _EFI_FTP4_PROTOCOL;
struct _EFI_HASH_PROTOCOL;
struct _EFI_HII_RGB_PIXEL;
struct _EFI_HTTP_PROTOCOL;
struct _EFI_IFR_ANIMATION;
struct _EFI_IFR_DEFAULT_2;
struct _EFI_IFR_EQ_ID_VAL;
struct _EFI_IFR_LESS_THAN;
struct _EFI_IFR_MODAL_TAG;
struct _EFI_IFR_NOT_EQUAL;
struct _EFI_IFR_OP_HEADER;
struct _EFI_IFR_TO_STRING;
struct _EFI_IFR_UNDEFINED;
struct _EFI_IPSEC_SA_DATA;
struct _EFI_PEI_SMBUS_PPI;
struct _EFI_PEI_STALL_PPI;
struct _EFI_REST_PROTOCOL;
struct _EFI_TCP4_PROTOCOL;
struct _EFI_TCP6_PROTOCOL;
struct _EFI_TREE_PROTOCOL;
struct _EFI_UDP4_PROTOCOL;
struct _EFI_UDP6_PROTOCOL;
struct s_pxe_cpb_start_30;
struct s_pxe_cpb_start_31;
struct s_pxe_cpb_transmit;
struct tdEFI_TCG2_VERSION;
struct tdTPM_CERTIFY_INFO;
struct tdTPM_CONTEXT_BLOB;
struct tdTPM_DAA_JOINDATA;
struct tdTPM_EK_BLOB_AUTH;
struct tdTPM_FAMILY_LABEL;
struct tdTPM_FAMILY_TABLE;
struct tdTPM_IDENTITY_REQ;
struct tdTPM_STCLEAR_DATA;
struct tdTPM_STORE_PUBKEY;
struct _EFI_ARP_PROTOCOL;
struct _EFI_BIS_PROTOCOL;
struct _EFI_DPC_PROTOCOL;
struct _EFI_EAP_PROTOCOL;
struct _EFI_EBC_PROTOCOL;
struct _EFI_HII_PROTOCOL;
struct _EFI_HII_ROW_INFO;
struct _EFI_IFR_ACTION_1;
struct _EFI_IFR_CATENATE;
struct _EFI_IFR_CHECKBOX;
struct _EFI_IFR_EQ_ID_ID;
struct _EFI_IFR_FORM_MAP;
struct _EFI_IFR_FORM_SET;
struct _EFI_IFR_MULTIPLY;
struct _EFI_IFR_PASSWORD;
struct _EFI_IFR_RULE_REF;
struct _EFI_IFR_SECURITY;
struct _EFI_IFR_SUBTITLE;
struct _EFI_IFR_SUBTRACT;
struct _EFI_IFR_TO_LOWER;
struct _EFI_IFR_TO_UPPER;
struct _EFI_IFR_VARSTORE;
struct _EFI_IMAGE_OUTPUT;
struct _EFI_IP4_PROTOCOL;
struct _EFI_IP6_PROTOCOL;
struct _EFI_IPSEC_PAD_ID;
struct _EFI_KMS_PROTOCOL;
struct _EFI_MTFTP4_TOKEN;
struct _EFI_MTFTP6_TOKEN;
struct _EFI_PCD_PROTOCOL;
struct _EFI_PEI_SERVICES;
struct _EFI_RNG_PROTOCOL;
struct _EFI_SIO_PROTOCOL;
struct _EFI_TCG_PROTOCOL;
struct _GET_PCD_INFO_PPI;
struct _IP_IO_SEND_ENTRY;
struct _RIDE_DEVICE_PATH;
struct s_pxe_cpb_receive;
struct tdTPM_CMK_MIGAUTH;
struct tdTPM_DAA_CONTEXT;
struct tdTPM_DELEGATIONS;
struct tdTPM_QUOTE_INFO2;
struct tdTPM_SEALED_DATA;
struct tdTPM_SELECT_SIZE;
struct tdTPM_STANY_FLAGS;
struct tdTPM_STORED_DATA;
struct _EFI_DXE_IPL_PPI;
struct _EFI_IFR_DEFAULT;
struct _EFI_IFR_NUMERIC;
struct _EFI_IFR_REFRESH;
struct _EFI_IFR_TO_UINT;
struct _EFI_IFR_VERSION;
struct _EFI_IMAGE_INPUT;
struct _EFI_IPSEC_SA_ID;
struct _EFI_LOAD_OPTION;
struct _EFI_TAPE_HEADER;
struct _IDE_DEVICE_PATH;
struct _IP_IO_OPEN_DATA;
struct s_pxe_db_receive;
struct tdEFI_TCG2_EVENT;
struct tdTCG_PCR_EVENT2;
struct tdTPM_BOUND_DATA;
struct tdTPM_DAA_ISSUER;
struct tdTPM_QUOTE_INFO;
struct tdTPM_STRUCT_VER;
struct undiconfig_table;
struct WIN32_FIND_DATA;
struct _EFI_IFR_ACTION;
struct _EFI_IFR_DIVIDE;
struct _EFI_IFR_LENGTH;
struct _EFI_IFR_LOCKED;
struct _EFI_IFR_MATCH2;
struct _EFI_IFR_MODULO;
struct _EFI_IFR_ONE_OF;
struct _EFI_IFR_STRING;
struct _EFI_IFR_UINT16;
struct _EFI_IFR_UINT32;
struct _EFI_IFR_UINT64;
struct _EFI_IP6_HEADER;
struct _EFI_ISA_HC_PPI;
struct _MTRR_SETTINGS_;
struct _PEI_USB_IO_PPI;
struct s_pxe_db_nvdata;
struct tdTCG_PCR_EVENT;
struct tdTPM_KEY_PARMS;
struct tdTPM_SIGN_INFO;
struct ULARGE_INTEGER;
struct _EFILDRHANDOFF;
struct _EFI_IFR_EQUAL;
struct _EFI_IFR_FALSE;
struct _EFI_IFR_IMAGE;
struct _EFI_IFR_MATCH;
struct _EFI_IFR_TOKEN;
struct _EFI_IFR_UINT8;
struct _EFI_IFR_VALUE;
struct _EFI_IFR_WRITE;
struct _EFI_KEY_STATE;
struct _IP_IO_IP_INFO;
struct hid_descriptor;
struct tdEFI_GPT_DATA;
struct tdTPM_CMK_AUTH;
struct tdTPM_DAA_BLOB;
struct tdTPM_PCR_INFO;
struct LARGE_INTEGER;
struct _EFI_IFR_DATE;
struct _EFI_IFR_FIND;
struct _EFI_IFR_FORM;
struct _EFI_IFR_GUID;
struct _EFI_IFR_ONES;
struct _EFI_IFR_READ;
struct _EFI_IFR_REF2;
struct _EFI_IFR_REF3;
struct _EFI_IFR_REF4;
struct _EFI_IFR_REF5;
struct _EFI_IFR_RULE;
struct _EFI_IFR_SPAN;
struct _EFI_IFR_TEXT;
struct _EFI_IFR_THIS;
struct _EFI_IFR_TIME;
struct _EFI_IFR_TRUE;
struct _EFI_IFR_ZERO;
struct _EFI_SIO_INFO;
struct _TREE_VERSION;
struct s_pxe_hw_undi;
struct s_pxe_sw_undi;
struct tdTPM_DAA_TPM;
struct tdTPM_DA_INFO;
struct tdTPM_EK_BLOB;
struct tdTPM_VERSION;
union u_pxe_ip_addr;
struct COMMTIMEOUTS;
struct INPUT_RECORD;
struct _EFI_IFR_ADD;
struct _EFI_IFR_AND;
struct _EFI_IFR_DUP;
struct _EFI_IFR_END;
struct _EFI_IFR_GET;
struct _EFI_IFR_MAP;
struct _EFI_IFR_MID;
struct _EFI_IFR_NOT;
struct _EFI_IFR_ONE;
struct _EFI_IFR_REF;
struct _EFI_IFR_SET;
struct _EFI_SIO_PPI;
struct tdTPM_DIGEST;
struct tdTPM_PUBKEY;
struct PAINTSTRUCT;
struct _EFI_IFR_OR;
struct _LIST_ENTRY;
struct _UGA_DEVICE;
struct tdTPM_KEY12;
struct tdTPM_NONCE;
struct BITMAPINFO;
struct OVERLAPPED;
struct SMALL_RECT;
struct SYSTEMTIME;
struct WNDCLASSEX;
union pxe_device;
union u_pxe_undi;
struct CHAR_INFO;
struct s_pxe_cdb;
struct tdTPM_KEY;
struct FILETIME;
struct COMSTAT;
struct _UDP_IO;
struct timeval;
struct _COORD;
struct _IP_IO;
struct dirent;
struct POINT;
struct RECT;
struct stat;
struct DCB;
struct MSG;
struct tm;

typedef struct _95B4CA56C5C145CB00FB885BF35F80FD EFI_ACPI_MEMORY_MAPPED_ENHANCED_CONFIGURATION_SPACE_BASE_ADDRESS_ALLOCATION_STRUCTURE;
typedef struct _0FEA5F6D88E10CE3051A04985473800C EFI_ACPI_4_0_HARDWARE_ERROR_NOTIFICATION_CONFIGURATION_WRITE_ENABLE_STRUCTURE;
typedef struct _0FEA5F6D88E10CE3051A04985473800C EFI_ACPI_5_0_HARDWARE_ERROR_NOTIFICATION_CONFIGURATION_WRITE_ENABLE_STRUCTURE;
typedef struct _0FEA5F6D88E10CE3051A04985473800C EFI_ACPI_5_1_HARDWARE_ERROR_NOTIFICATION_CONFIGURATION_WRITE_ENABLE_STRUCTURE;
typedef struct _0FEA5F6D88E10CE3051A04985473800C EFI_ACPI_6_0_HARDWARE_ERROR_NOTIFICATION_CONFIGURATION_WRITE_ENABLE_STRUCTURE;
struct ____85E04D9594D569B0B1B2009C8255CCE6___6E35CCFC02D81E31BD4C6BEDD77CB20A {unsigned __int32 NameOffset : 31;unsigned __int32 NameIsString : 1;};
struct ____8BAB8145E7DE54837B65F56B2E38C9CF___BEA82FFFCF7E25A2CCFAA7CF74921A50 {unsigned __int8 Name : 7;unsigned __int8 Type : 1;};
struct ____C9A4ABCA41DC78BE4A0192C5281BD368___B2E03ED94C06E2E681F8D03FF7FF5CB3 {unsigned __int32 OffsetToDirectory : 31;unsigned __int32 DataIsDirectory : 1;};
typedef struct _9142EB612F944EEF87D279755728C416 EFI_ACPI_5_0_PMMT_MEMORY_CONTROLLER_MEMORY_AGGREGATOR_DEVICE_STRUCTURE;
typedef struct _76104CBD369A22C2B848C68D15D2575F EFI_ACPI_5_1_PMMT_MEMORY_CONTROLLER_MEMORY_AGGREGATOR_DEVICE_STRUCTURE;
typedef struct _35BD40F66A9DD04452C11345A7455F75 EFI_ACPI_6_0_PMMT_MEMORY_CONTROLLER_MEMORY_AGGREGATOR_DEVICE_STRUCTURE;
typedef struct _A24A076255906D6E6E9F018976C2044B EFI_LEGACY_MP_TABLE_ENTRY_EXT_COMPAT_BUS_ADDR_SPACE_MODIFIER_ADDR_MODE;
typedef struct _9CB615D0400DB1156E78CC3060463D1F PCI_EXPRESS_EXTENDED_CAPABILITIES_EVENT_COLLECTOR_ENDPOINT_ASSOCIATION;
typedef struct _7787E194DB4EB2169214B7A11A441492 EFI_ACPI_5_0_MPST_PLATFORM_COMMUNICATION_CHANNEL_SHARED_MEMORY_REGION;
typedef struct _53CB4488480B2DF2E7B5895ADE90E2E8 EFI_ACPI_5_0_RASF_PLATFORM_COMMUNICATION_CHANNEL_SHARED_MEMORY_REGION;
typedef struct _7787E194DB4EB2169214B7A11A441492 EFI_ACPI_5_1_MPST_PLATFORM_COMMUNICATION_CHANNEL_SHARED_MEMORY_REGION;
typedef struct _53CB4488480B2DF2E7B5895ADE90E2E8 EFI_ACPI_5_1_RASF_PLATFORM_COMMUNICATION_CHANNEL_SHARED_MEMORY_REGION;
typedef struct _7787E194DB4EB2169214B7A11A441492 EFI_ACPI_6_0_MPST_PLATFORM_COMMUNICATION_CHANNEL_SHARED_MEMORY_REGION;
typedef struct _4F648B37B9CF8BEF66D581BE4A3A925C EFI_ACPI_6_0_NFIT_MEMORY_DEVICE_TO_SYSTEM_ADDRESS_RANGE_MAP_STRUCTURE;
typedef struct _53CB4488480B2DF2E7B5895ADE90E2E8 EFI_ACPI_6_0_RASF_PLATFORM_COMMUNICATION_CHANNEL_SHARED_MEMORY_REGION;
struct _064489EE9225A9F91BDA07A272CAAD06___E706CFC4C6B3ED37759EEF049F65CAF6 {unsigned __int32 Reserved0 : 24;unsigned __int32 Identification : 4;unsigned __int32 Reserved1 : 4;};
struct _13B2187B9E87DE389FB12248DFED0432___F7ACA43080600E861C37342251ABE5FC {unsigned __int32 Vector : 8;unsigned __int32 DeliveryMode : 3;unsigned __int32 Reserved0 : 1;unsigned __int32 DeliveryStatus : 1;unsigned __int32 InputPinPolarity : 1;unsigned __int32 RemoteIrr : 1;unsigned __int32 TriggerMode : 1;unsigned __int32 Mask : 1;unsigned __int32 Reserved1 : 15;};
struct _189FD79781FBFBAF9A08606330F98EF8___720BB4348BD623025C3D08B2C13CC5E9 {unsigned __int32 Reserved0 : 2;unsigned __int32 DestinationMode : 1;unsigned __int32 RedirectionHint : 1;unsigned __int32 Reserved1 : 8;unsigned __int32 DestinationId : 8;unsigned __int32 BaseAddress : 12;};
struct _1BD84297A21C9A50FCE6DE8FD55A3DE1___B13D69F90F32FA0ABCE3B85F6D444DDF {unsigned __int32 Vector : 8;unsigned __int32 DeliveryMode : 3;unsigned __int32 DestinationMode : 1;unsigned __int32 DeliveryStatus : 1;unsigned __int32 Reserved0 : 1;unsigned __int32 Level : 1;unsigned __int32 TriggerMode : 1;unsigned __int32 Reserved1 : 2;unsigned __int32 DestinationShorthand : 2;unsigned __int32 Reserved2 : 12;};
struct _21300D4394F4C27F6B0FB693B1665CFE___3393EBBCF6DC9FFA6559E8EA3A39FD44 {unsigned __int32 DivideValue1 : 2;unsigned __int32 Reserved0 : 1;unsigned __int32 DivideValue2 : 1;unsigned __int32 Reserved1 : 28;};
struct _2BC16837220E81124E1F23E51D05BC4D___E06B2E720146A9996925865D17D55FA5 {unsigned __int16 Version : 3;unsigned __int16 PmeClock : 1;unsigned __int16 : 1;unsigned __int16 DeviceSpecificInitialization : 1;unsigned __int16 AuxCurrent : 3;unsigned __int16 D1Support : 1;unsigned __int16 D2Support : 1;unsigned __int16 PmeSupport : 5;};
struct _2CB9EDC2CA76331E5EBDD1F9698853B1___7C29BA7491EF625F4A7EF55F1EB9DA69 {unsigned __int8 Length : 3;unsigned __int8 Name : 4;unsigned __int8 Type : 1;};
struct _2EB10352A9B67ABEC81EADBB1E83EE89___0ED18297D8600E57385C990E0B0A9B5B {unsigned __int32 Vector : 8;unsigned __int32 Reserved0 : 4;unsigned __int32 DeliveryStatus : 1;unsigned __int32 Reserved1 : 3;unsigned __int32 Mask : 1;unsigned __int32 TimerMode : 1;unsigned __int32 Reserved2 : 14;};
struct _45BF217DBC3ED611F5A350EB16713DCF___699DAE59EF0C004B488477E53808748D {unsigned __int32 Reserved0 : 8;unsigned __int32 Bsp : 1;unsigned __int32 Reserved1 : 1;unsigned __int32 Extd : 1;unsigned __int32 En : 1;unsigned __int32 ApicBaseLow : 20;unsigned __int32 ApicBaseHigh : 32;};
struct _518876D0C27A9CD079BA54115713EEC3___E036DE9CA1016FA69C7BDC962047C4BD {unsigned __int32 Reg : 8;unsigned __int32 Func : 3;unsigned __int32 Dev : 5;unsigned __int32 Bus : 8;unsigned __int32 Reserved : 7;unsigned __int32 Enable : 1;};
struct _6A1ABF627FBE0922AA9EF24F9E956DFA___1842207844FF6E29A09B397245758A8F {unsigned __int32 Version : 8;unsigned __int32 Reserved0 : 8;unsigned __int32 MaximumRedirectionEntry : 8;unsigned __int32 Reserved1 : 8;};
struct _72DB0F79E0951D75542C31FE649E11C3___E701FF71F4D10987618ED6314B4FE49F {unsigned __int32 Status : 2;unsigned __int32 Tested : 1;unsigned __int32 Reserved1 : 13;unsigned __int32 VirtualMemoryUnavailable : 1;unsigned __int32 Ia32ExecutionUnavailable : 1;unsigned __int32 FloatingPointUnavailable : 1;unsigned __int32 MiscFeaturesUnavailable : 1;unsigned __int32 Reserved2 : 12;};
struct _72EFF1B7CF5BD83F0E27F61163B8B619___77CFDA927F6639C3DE257BE4DE8CE369 {unsigned __int32 Value : 32;unsigned __int32 Address : 32;};
struct _9A8860F6C14A61B836CF024812302798___7DB2686D5239E82BF5B1C028852998F9 {unsigned __int32 Vector : 8;unsigned __int32 DeliveryMode : 3;unsigned __int32 Reserved0 : 3;unsigned __int32 Level : 1;unsigned __int32 TriggerMode : 1;unsigned __int32 Reserved1 : 16;unsigned __int32 Reserved2 : 32;};
struct _A5F962F37CF2F693830E47777CAE8939___4FBE0E1634510674E7090E3CDB70B8AD {unsigned __int16 Vid : 12;unsigned __int16 Cfi : 1;unsigned __int16 Priority : 3;};
struct _A9C6387FF17B0FE0A5B3AEC55D0E1F1C___925E33C35CCABA38B5334E9AAF082C7F {unsigned __int32 SpuriousVector : 8;unsigned __int32 SoftwareEnable : 1;unsigned __int32 FocusProcessorChecking : 1;unsigned __int32 Reserved0 : 2;unsigned __int32 EoiBroadcastSuppression : 1;unsigned __int32 Reserved1 : 19;};
struct _AD5D0A6DCE5F64CFAF357BB3A0648A64___CCA9129B464F64851293FECA407CE2C6 {unsigned __int32 Revision : 8;unsigned __int32 ShiftPressed : 1;unsigned __int32 ControlPressed : 1;unsigned __int32 AltPressed : 1;unsigned __int32 LogoPressed : 1;unsigned __int32 MenuPressed : 1;unsigned __int32 SysReqPressed : 1;unsigned __int32 Reserved : 16;unsigned __int32 InputKeyCount : 2;};
struct _B5A92F8B2B3252A716F3F5184DF78D07___AD7EE62ABCCCCA737ABA864527ADAD6D {unsigned __int32 Version : 8;unsigned __int32 Reserved0 : 8;unsigned __int32 MaxLvtEntry : 8;unsigned __int32 EoiBroadcastSuppression : 1;unsigned __int32 Reserved1 : 7;};
struct _B912CBA3C10871F54570C4C0430A0F81___928DAC4DB38E41CC18651AD3B5064070 {unsigned __int32 MainCounterEnable : 1;unsigned __int32 LegacyRouteEnable : 1;unsigned __int32 Reserved0 : 30;unsigned __int32 Reserved1 : 32;};
struct _B9B6CC471BCB7F4A305FC2D80D0AA4C0___5F1D9E908CC7F0E7610C5D5BF79F764D {unsigned __int32 Reserved0 : 24;unsigned __int32 Destination : 8;};
struct _BAA371FD3705A9DA82A7651CF9EF53DA___83ADE8757A716942AB3BE3531FD405EA {unsigned __int32 Vector : 8;unsigned __int32 DeliveryMode : 3;unsigned __int32 DestinationMode : 1;unsigned __int32 DeliveryStatus : 1;unsigned __int32 Polarity : 1;unsigned __int32 RemoteIRR : 1;unsigned __int32 TriggerMode : 1;unsigned __int32 Mask : 1;unsigned __int32 Reserved0 : 15;unsigned __int32 Reserved1 : 24;unsigned __int32 DestinationID : 8;};
struct _C3A285CD1904EDCDB417EC8F5027A1F0___8605AB9F7C5F80EC94F069DA8FDA2EDF {unsigned __int16 PowerState : 2;unsigned __int16 : 6;unsigned __int16 PmeEnable : 1;unsigned __int16 DataSelect : 4;unsigned __int16 DataScale : 2;unsigned __int16 PmeStatus : 1;};
struct _F5238921CBF27C887BB68ABA324F3CCD___405FFA32E424EC0EAFFB9D1AFA2DB98D {unsigned __int32 Revision : 8;unsigned __int32 NumberOfTimers : 5;unsigned __int32 CounterSize : 1;unsigned __int32 Reserved0 : 1;unsigned __int32 LegacyRoute : 1;unsigned __int32 VendorId : 16;unsigned __int32 CounterClockPeriod : 32;};
typedef struct _9D2F8CC554E3EC31D960F62B32A3EA13 EFI_ACPI_4_0_IA32_ARCHITECTURE_MACHINE_CHECK_ERROR_BANK_STRUCTURE;
typedef struct _9D2F8CC554E3EC31D960F62B32A3EA13 EFI_ACPI_5_0_IA32_ARCHITECTURE_MACHINE_CHECK_ERROR_BANK_STRUCTURE;
typedef struct _9D2F8CC554E3EC31D960F62B32A3EA13 EFI_ACPI_5_1_IA32_ARCHITECTURE_MACHINE_CHECK_ERROR_BANK_STRUCTURE;
typedef struct _9D2F8CC554E3EC31D960F62B32A3EA13 EFI_ACPI_6_0_IA32_ARCHITECTURE_MACHINE_CHECK_ERROR_BANK_STRUCTURE;
typedef struct _DE018B6527D8BAD456AC6761EF46A801 EFI_ACPI_4_0_IA32_ARCHITECTURE_CORRECTED_MACHINE_CHECK_STRUCTURE;
typedef struct _3D9A5D6754DE0A7B6A4B12381B3A155D EFI_ACPI_4_0_IA32_ARCHITECTURE_MACHINE_CHECK_EXCEPTION_STRUCTURE;
typedef struct _AF9B744F20F52A03121B27A55076CEAE EFI_ACPI_5_0_IA32_ARCHITECTURE_CORRECTED_MACHINE_CHECK_STRUCTURE;
typedef struct _3D9A5D6754DE0A7B6A4B12381B3A155D EFI_ACPI_5_0_IA32_ARCHITECTURE_MACHINE_CHECK_EXCEPTION_STRUCTURE;
typedef struct _742CA4F85EA73A5D1442F11069F65D35 EFI_ACPI_5_1_IA32_ARCHITECTURE_CORRECTED_MACHINE_CHECK_STRUCTURE;
typedef struct _3D9A5D6754DE0A7B6A4B12381B3A155D EFI_ACPI_5_1_IA32_ARCHITECTURE_MACHINE_CHECK_EXCEPTION_STRUCTURE;
typedef struct _E6D9C75EAA7ECFE9B401F684341C2AB2 EFI_ACPI_6_0_IA32_ARCHITECTURE_CORRECTED_MACHINE_CHECK_STRUCTURE;
typedef struct _3D9A5D6754DE0A7B6A4B12381B3A155D EFI_ACPI_6_0_IA32_ARCHITECTURE_MACHINE_CHECK_EXCEPTION_STRUCTURE;
typedef struct _DC8F84DB3B38E5CD1639DF4C353ACC48 EFI_ACPI_3_0_SYSTEM_LOCALITY_DISTANCE_INFORMATION_TABLE_HEADER;
typedef struct _DC8F84DB3B38E5CD1639DF4C353ACC48 EFI_ACPI_4_0_SYSTEM_LOCALITY_DISTANCE_INFORMATION_TABLE_HEADER;
typedef struct _C7F73EA95F7ADD2BBA9A69C0FBAA1909 EFI_ACPI_5_0_MPST_MEMORY_POWER_STATE_CHARACTERISTICS_STRUCTURE;
typedef struct _DC8F84DB3B38E5CD1639DF4C353ACC48 EFI_ACPI_5_0_SYSTEM_LOCALITY_DISTANCE_INFORMATION_TABLE_HEADER;
typedef struct _C7F73EA95F7ADD2BBA9A69C0FBAA1909 EFI_ACPI_5_1_MPST_MEMORY_POWER_STATE_CHARACTERISTICS_STRUCTURE;
typedef struct _DC8F84DB3B38E5CD1639DF4C353ACC48 EFI_ACPI_5_1_SYSTEM_LOCALITY_DISTANCE_INFORMATION_TABLE_HEADER;
typedef struct _C7F73EA95F7ADD2BBA9A69C0FBAA1909 EFI_ACPI_6_0_MPST_MEMORY_POWER_STATE_CHARACTERISTICS_STRUCTURE;
typedef struct _DC8F84DB3B38E5CD1639DF4C353ACC48 EFI_ACPI_6_0_SYSTEM_LOCALITY_DISTANCE_INFORMATION_TABLE_HEADER;
typedef struct _84B5F2AB7401206A91B6BE4E98B17288 EFI_ACPI_MEMORY_MAPPED_CONFIGURATION_BASE_ADDRESS_TABLE_HEADER;
typedef struct _B6385E411CABF2821B8809810A7CF62E EFI_ACPI_WATCHDOG_ACTION_1_0_WATCHDOG_ACTION_INSTRUCTION_ENTRY;
typedef struct _7C88044CF52AEAEB05757EBE2EF713E9 PCI_EXPRESS_EXTENDED_CAPABILITIES_LATENCE_TOLERANCE_REPORTING;
typedef struct _C0F99B3464FBF331C20993652C5E0642 EFI_LEGACY_MP_TABLE_ENTRY_EXT_COMPAT_BUS_ADDR_SPACE_MODIFIER;
typedef struct _D98D81D62ACCC166E3819C5D20DA52C2 PCI_EXPRESS_EXTENDED_CAPABILITIES_VIRTUAL_CHANNEL_CAPABILITY;
typedef struct _AC77001C1B4AAC61DF206C481C514A37 EFI_ACPI_4_0_MAXIMUM_PROXIMITY_DOMAIN_INFORMATION_STRUCTURE;
typedef struct _AC77001C1B4AAC61DF206C481C514A37 EFI_ACPI_5_0_MAXIMUM_PROXIMITY_DOMAIN_INFORMATION_STRUCTURE;
typedef struct _FB6C911BAE72887D09506B334B3D43FA EFI_ACPI_5_0_PMMT_COMMON_MEMORY_AGGREGATOR_DEVICE_STRUCTURE;
typedef struct _4E48E652C5777B56F5C5F10151EEAB46 EFI_ACPI_5_0_PMMT_SOCKET_MEMORY_AGGREGATOR_DEVICE_STRUCTURE;
typedef struct _AC77001C1B4AAC61DF206C481C514A37 EFI_ACPI_5_1_MAXIMUM_PROXIMITY_DOMAIN_INFORMATION_STRUCTURE;
typedef struct _FB6C911BAE72887D09506B334B3D43FA EFI_ACPI_5_1_PMMT_COMMON_MEMORY_AGGREGATOR_DEVICE_STRUCTURE;
typedef struct _CC8D119C0B799164842502688415CA50 EFI_ACPI_5_1_PMMT_SOCKET_MEMORY_AGGREGATOR_DEVICE_STRUCTURE;
typedef struct _AC77001C1B4AAC61DF206C481C514A37 EFI_ACPI_6_0_MAXIMUM_PROXIMITY_DOMAIN_INFORMATION_STRUCTURE;
typedef struct _17943BCA47BDF74A702F60BA16B9A882 EFI_ACPI_6_0_NFIT_NVDIMM_BLOCK_DATA_WINDOW_REGION_STRUCTURE;
typedef struct _FB6C911BAE72887D09506B334B3D43FA EFI_ACPI_6_0_PMMT_COMMON_MEMORY_AGGREGATOR_DEVICE_STRUCTURE;
typedef struct _185A50620A8534E41967A99303668A69 EFI_ACPI_6_0_PMMT_SOCKET_MEMORY_AGGREGATOR_DEVICE_STRUCTURE;
typedef struct _536D1119592D846701A3C5125407F6D7 EFI_ACPI_3_0_PROCESSOR_LOCAL_APIC_SAPIC_AFFINITY_STRUCTURE;
typedef struct _CA1C176886C55B38914A4846A7CB47A1 EFI_ACPI_4_0_CORRECTED_PLATFORM_ERROR_POLLING_TABLE_HEADER;
typedef struct _AFB7E269F91AFE13225EE3CE11711B8D EFI_ACPI_4_0_PROCESSOR_LOCAL_APIC_SAPIC_AFFINITY_STRUCTURE;
typedef struct _CA1C176886C55B38914A4846A7CB47A1 EFI_ACPI_5_0_CORRECTED_PLATFORM_ERROR_POLLING_TABLE_HEADER;
typedef struct _5380DCA7A74E4C65ED27DC198F8C331E EFI_ACPI_5_0_MPST_MEMORY_POWER_STATE_CHARACTERISTICS_TABLE;
typedef struct _AFB7E269F91AFE13225EE3CE11711B8D EFI_ACPI_5_0_PROCESSOR_LOCAL_APIC_SAPIC_AFFINITY_STRUCTURE;
typedef struct _CA1C176886C55B38914A4846A7CB47A1 EFI_ACPI_5_1_CORRECTED_PLATFORM_ERROR_POLLING_TABLE_HEADER;
typedef struct _5380DCA7A74E4C65ED27DC198F8C331E EFI_ACPI_5_1_MPST_MEMORY_POWER_STATE_CHARACTERISTICS_TABLE;
typedef struct _AFB7E269F91AFE13225EE3CE11711B8D EFI_ACPI_5_1_PROCESSOR_LOCAL_APIC_SAPIC_AFFINITY_STRUCTURE;
typedef struct _CA1C176886C55B38914A4846A7CB47A1 EFI_ACPI_6_0_CORRECTED_PLATFORM_ERROR_POLLING_TABLE_HEADER;
typedef struct _5380DCA7A74E4C65ED27DC198F8C331E EFI_ACPI_6_0_MPST_MEMORY_POWER_STATE_CHARACTERISTICS_TABLE;
typedef struct _AFB7E269F91AFE13225EE3CE11711B8D EFI_ACPI_6_0_PROCESSOR_LOCAL_APIC_SAPIC_AFFINITY_STRUCTURE;
typedef struct _4C175177D1E5403EA4DC6D4A491E917E PCI_EXPRESS_EXTENDED_CAPABILITIES_ADVANCED_ERROR_REPORTING;
typedef struct _F4152F3B05D30B6B9D819410712408A1 PCI_EXPRESS_EXTENDED_CAPABILITIES_DYNAMIC_POWER_ALLOCATION;
typedef struct _E09C81AEFAC122BE2C0CE1E40D178C5D EFI_ACPI_5_0_PMMT_DIMM_MEMORY_AGGREGATOR_DEVICE_STRUCTURE;
typedef struct _E2888E2D965943BE9C31F424F730E153 EFI_ACPI_5_1_PMMT_DIMM_MEMORY_AGGREGATOR_DEVICE_STRUCTURE;
typedef struct _26E91D2BB7FDA2C845F43A09E5B4079A EFI_ACPI_6_0_NFIT_SMBIOS_MANAGEMENT_INFORMATION_STRUCTURE;
typedef struct _C2875BFC7D9051F8512739CD328EC859 EFI_ACPI_6_0_NFIT_SYSTEM_PHYSICAL_ADDRESS_RANGE_STRUCTURE;
typedef struct _18EA1675A7C3746C57C2E2D91374C2FB EFI_ACPI_6_0_PMMT_DIMM_MEMORY_AGGREGATOR_DEVICE_STRUCTURE;
typedef struct _590B895AD0ADCCF75391FBD007A99A56 EFI_ACPI_4_0_MAXIMUM_SYSTEM_CHARACTERISTICS_TABLE_HEADER;
typedef struct _590B895AD0ADCCF75391FBD007A99A56 EFI_ACPI_5_0_MAXIMUM_SYSTEM_CHARACTERISTICS_TABLE_HEADER;
typedef struct _2B2441F12FFFDAC29B95546593891D3F EFI_ACPI_5_0_PLATFORM_COMMUNICATION_CHANNEL_TABLE_HEADER;
typedef struct _590B895AD0ADCCF75391FBD007A99A56 EFI_ACPI_5_1_MAXIMUM_SYSTEM_CHARACTERISTICS_TABLE_HEADER;
typedef struct _2B2441F12FFFDAC29B95546593891D3F EFI_ACPI_5_1_PLATFORM_COMMUNICATION_CHANNEL_TABLE_HEADER;
typedef struct _590B895AD0ADCCF75391FBD007A99A56 EFI_ACPI_6_0_MAXIMUM_SYSTEM_CHARACTERISTICS_TABLE_HEADER;
typedef struct _2B2441F12FFFDAC29B95546593891D3F EFI_ACPI_6_0_PLATFORM_COMMUNICATION_CHANNEL_TABLE_HEADER;
typedef struct _C1F1F38A18362D524DC4F9B3380D0C6C EFI_BLOCK_IO_CRYPTO_IV_INPUT_AES_CBC_MICROSOFT_BITLOCKER;
typedef struct _51AB63096E2BC5AD4B69E97888F3EB23 EFI_ACPI_5_0_FPDT_BOOT_PERFORMANCE_TABLE_POINTER_RECORD;
typedef struct _31E78C603A0975994DAAE085398C0614 EFI_ACPI_5_0_RASF_PATROL_SCRUB_PLATFORM_BLOCK_STRUCTURE;
typedef struct _7FF7C66C78997CB6C15C8F2705CC3546 EFI_ACPI_5_1_FPDT_BOOT_PERFORMANCE_TABLE_POINTER_RECORD;
typedef struct _31E78C603A0975994DAAE085398C0614 EFI_ACPI_5_1_RASF_PATROL_SCRUB_PLATFORM_BLOCK_STRUCTURE;
typedef struct _DC322FA52FD58BCFA0B901F9F5F40D25 EFI_ACPI_6_0_FPDT_BOOT_PERFORMANCE_TABLE_POINTER_RECORD;
typedef struct _31E78C603A0975994DAAE085398C0614 EFI_ACPI_6_0_RASF_PATROL_SCRUB_PLATFORM_BLOCK_STRUCTURE;
typedef struct _8F93C5322470EB6F754EAE8CC4D8F714 PCI_EXPRESS_EXTENDED_CAPABILITIES_INTERNAL_LINK_CONTROL;
typedef struct _0E2414798071F364F15E4A11E952DB9B EFI_ACPI_4_0_PROCESSOR_LOCAL_X2APIC_AFFINITY_STRUCTURE;
typedef struct _6B11944D848591EA84BD0403BC571A74 EFI_ACPI_5_0_PCCT_GENERIC_SHARED_MEMORY_REGION_COMMAND;
typedef struct _0E2414798071F364F15E4A11E952DB9B EFI_ACPI_5_0_PROCESSOR_LOCAL_X2APIC_AFFINITY_STRUCTURE;
typedef struct _6B11944D848591EA84BD0403BC571A74 EFI_ACPI_5_1_PCCT_GENERIC_SHARED_MEMORY_REGION_COMMAND;
typedef struct _0E2414798071F364F15E4A11E952DB9B EFI_ACPI_5_1_PROCESSOR_LOCAL_X2APIC_AFFINITY_STRUCTURE;
typedef struct _6B11944D848591EA84BD0403BC571A74 EFI_ACPI_6_0_PCCT_GENERIC_SHARED_MEMORY_REGION_COMMAND;
typedef struct _0E2414798071F364F15E4A11E952DB9B EFI_ACPI_6_0_PROCESSOR_LOCAL_X2APIC_AFFINITY_STRUCTURE;
typedef struct _98570B18D60E0ACA380EBFC1C1524AB5 EFI_ACPI_ISCSI_BOOT_FIRMWARE_TABLE_INITIATOR_STRUCTURE;
typedef struct _EA43600E1B5795B3F7B5B85AE593E7D1 EFI_ACPI_2_0_EMBEDDED_CONTROLLER_BOOT_RESOURCES_TABLE;
typedef struct _B0972028F0A856D07070CC35DD2393D1 EFI_ACPI_3_0_EMBEDDED_CONTROLLER_BOOT_RESOURCES_TABLE;
typedef struct _3F83D4E5184A3D19CA486B3904BC7628 EFI_ACPI_4_0_EMBEDDED_CONTROLLER_BOOT_RESOURCES_TABLE;
typedef struct _15A30082C4C5935685683A1E67F4A9B5 EFI_ACPI_5_0_EMBEDDED_CONTROLLER_BOOT_RESOURCES_TABLE;
typedef struct _C88F66CADC6F0969135DB7C539E8CD7B EFI_ACPI_5_0_FPDT_S3_PERFORMANCE_TABLE_POINTER_RECORD;
typedef struct _96B74196A6CF81066884602FD3D9FD5D EFI_ACPI_5_0_PCCT_GENERIC_SHARED_MEMORY_REGION_HEADER;
typedef struct _3EF65AC5CDE14CA7FFCAB6F0D1921DE1 EFI_ACPI_5_0_PCCT_GENERIC_SHARED_MEMORY_REGION_STATUS;
typedef struct _58E38925772C2C7EB1864943310FA6BE EFI_ACPI_5_1_EMBEDDED_CONTROLLER_BOOT_RESOURCES_TABLE;
typedef struct _3DE8A515DD1D02BD5298172417C1D801 EFI_ACPI_5_1_FPDT_S3_PERFORMANCE_TABLE_POINTER_RECORD;
typedef struct _3E2A0AAC0C0D5604E6E5BFB35D58D3CA EFI_ACPI_5_1_PCCT_GENERIC_SHARED_MEMORY_REGION_HEADER;
typedef struct _3EF65AC5CDE14CA7FFCAB6F0D1921DE1 EFI_ACPI_5_1_PCCT_GENERIC_SHARED_MEMORY_REGION_STATUS;
typedef struct _4E025DD4DB71D5A13ED2A71214047A54 EFI_ACPI_6_0_EMBEDDED_CONTROLLER_BOOT_RESOURCES_TABLE;
typedef struct _359310853D1A7D73E5E094BBD8FC83B2 EFI_ACPI_6_0_FPDT_S3_PERFORMANCE_TABLE_POINTER_RECORD;
typedef struct _4ED57D1C5AE8E587D3EBCE3C708596AE EFI_ACPI_6_0_PCCT_GENERIC_SHARED_MEMORY_REGION_HEADER;
typedef struct _3EF65AC5CDE14CA7FFCAB6F0D1921DE1 EFI_ACPI_6_0_PCCT_GENERIC_SHARED_MEMORY_REGION_STATUS;
typedef struct _17BC026F246D15D039186392C4AC032A EFI_MISC_MANAGEMENT_DEVICE_COMPONENT_DESCRIPTION_DATA;
typedef struct _70585C5FCCA0E6FEA5649FC6E1ECEB93 EFI_PEI_FIRMWARE_VOLUME_INFO_MEASUREMENT_EXCLUDED_PPI;
typedef struct _FDDF0E7A0B734429633C5140DE6811E3 PCI_EXPRESS_EXTENDED_CAPABILITIES_RESIZABLE_BAR_ENTRY;
typedef struct _1B75C64F3853882ACF28C9882F2A7EE6 EFI_ACPI_1_0_NON_MASKABLE_INTERRUPT_SOURCE_STRUCTURE;
typedef struct _D6C63370732CF4C1BCACECCD380804C5 EFI_ACPI_2_0_NON_MASKABLE_INTERRUPT_SOURCE_STRUCTURE;
typedef struct _D6C63370732CF4C1BCACECCD380804C5 EFI_ACPI_3_0_NON_MASKABLE_INTERRUPT_SOURCE_STRUCTURE;
typedef struct _7FA50AC9C83D084CE98388548A2ED316 EFI_ACPI_4_0_ERROR_RECORD_SERIALIZATION_TABLE_HEADER;
typedef struct _21B1BD905B1B82A96F595CACADB4BBCF EFI_ACPI_4_0_GENERIC_HARDWARE_ERROR_SOURCE_STRUCTURE;
typedef struct _D6C63370732CF4C1BCACECCD380804C5 EFI_ACPI_4_0_NON_MASKABLE_INTERRUPT_SOURCE_STRUCTURE;
typedef struct _7FA50AC9C83D084CE98388548A2ED316 EFI_ACPI_5_0_ERROR_RECORD_SERIALIZATION_TABLE_HEADER;
typedef struct _B608AC9E11096DC366B16D397EBE2881 EFI_ACPI_5_0_GENERIC_HARDWARE_ERROR_SOURCE_STRUCTURE;
typedef struct _D6C63370732CF4C1BCACECCD380804C5 EFI_ACPI_5_0_NON_MASKABLE_INTERRUPT_SOURCE_STRUCTURE;
typedef struct _7FA50AC9C83D084CE98388548A2ED316 EFI_ACPI_5_1_ERROR_RECORD_SERIALIZATION_TABLE_HEADER;
typedef struct _E8952E6FFF688DDCC1604E7EA2BEEE62 EFI_ACPI_5_1_GENERIC_HARDWARE_ERROR_SOURCE_STRUCTURE;
typedef struct _D6C63370732CF4C1BCACECCD380804C5 EFI_ACPI_5_1_NON_MASKABLE_INTERRUPT_SOURCE_STRUCTURE;
typedef struct _7FA50AC9C83D084CE98388548A2ED316 EFI_ACPI_6_0_ERROR_RECORD_SERIALIZATION_TABLE_HEADER;
typedef struct _DAD7E7F52A2984BA612E4D34EBCEB273 EFI_ACPI_6_0_GENERIC_HARDWARE_ERROR_SOURCE_STRUCTURE;
typedef struct _D6C63370732CF4C1BCACECCD380804C5 EFI_ACPI_6_0_NON_MASKABLE_INTERRUPT_SOURCE_STRUCTURE;
typedef struct _321181A4E50AE9E66F3D5BC83776D1DC EFI_ACPI_ISCSI_BOOT_FIRMWARE_TABLE_CONTROL_STRUCTURE;
typedef struct _5BAAA07A67D6DDC6F7F53A9A19BC1C29 EFI_LEGACY_MP_TABLE_ENTRY_EXT_SYS_ADDR_SPACE_MAPPING;
typedef struct _94619DEDC0405DB30844363ED09E4E89 EFI_MISC_REMOTE_ACCESS_MANUFACTURER_DESCRIPTION_DATA;
typedef struct _5CAA3E790BA277642DB4F6CC5CEDE366 EFI_PEI_FIRMWARE_VOLUME_INFO_MEASUREMENT_EXCLUDED_FV;
typedef struct _E67EA35C3105155E460DE043A8665F0C PCI_EXPRESS_EXTENDED_CAPABILITIES_VIRTUAL_CHANNEL_VC;
typedef struct _65518DFEFF5E6C13CD4EAB1ACAB106B7 SMM_VARIABLE_COMMUNICATE_VAR_CHECK_VARIABLE_PROPERTY;
typedef struct _F1954A734E86044BE7E694780B200E8B EFI_ACPI_1_0_MULTIPLE_APIC_DESCRIPTION_TABLE_HEADER;
typedef struct _F1954A734E86044BE7E694780B200E8B EFI_ACPI_2_0_MULTIPLE_APIC_DESCRIPTION_TABLE_HEADER;
typedef struct _F1954A734E86044BE7E694780B200E8B EFI_ACPI_3_0_MULTIPLE_APIC_DESCRIPTION_TABLE_HEADER;
typedef struct _F1954A734E86044BE7E694780B200E8B EFI_ACPI_4_0_MULTIPLE_APIC_DESCRIPTION_TABLE_HEADER;
typedef struct _F1954A734E86044BE7E694780B200E8B EFI_ACPI_5_0_MULTIPLE_APIC_DESCRIPTION_TABLE_HEADER;
typedef struct _F1954A734E86044BE7E694780B200E8B EFI_ACPI_5_1_MULTIPLE_APIC_DESCRIPTION_TABLE_HEADER;
typedef struct _F1954A734E86044BE7E694780B200E8B EFI_ACPI_6_0_MULTIPLE_APIC_DESCRIPTION_TABLE_HEADER;
typedef struct _F98F00A2B8C491B4094190B49E4921D8 EFI_ACPI_ISCSI_BOOT_FIRMWARE_TABLE_STRUCTURE_HEADER;
typedef struct _790F6AB6F76BDC72ACD18E4FB677C494 EFI_ACPI_ISCSI_BOOT_FIRMWARE_TABLE_TARGET_STRUCTURE;
typedef struct _E34EAFE04B48E1BBA9F26DFA4324A02D EFI_LEGACY_MP_TABLE_ENTRY_EXT_BUS_HIERARCHY_BUSINFO;
struct undiconfig_table___E4D37D6E09D6D39D1DAF0D3F49E6ABB4 {void *NII_InterfacePointer;void *DevicePathPointer;};
typedef struct _C083007631904680C751AB34F721C511 EFI_ACPI_2_0_LOCAL_APIC_ADDRESS_OVERRIDE_STRUCTURE;
typedef struct _C083007631904680C751AB34F721C511 EFI_ACPI_3_0_LOCAL_APIC_ADDRESS_OVERRIDE_STRUCTURE;
typedef struct _1900D0CF38613B02DB3CF0343CF6EF59 EFI_ACPI_3_0_SYSTEM_RESOURCE_AFFINITY_TABLE_HEADER;
typedef struct _2216D4214E265766C1A0B0A7C6BAA199 EFI_ACPI_4_0_HARDWARE_ERROR_NOTIFICATION_STRUCTURE;
typedef struct _1FE9337B5A71DEC04A03C63F34E65E8A EFI_ACPI_4_0_IA32_ARCHITECTURE_NMI_ERROR_STRUCTURE;
typedef struct _C083007631904680C751AB34F721C511 EFI_ACPI_4_0_LOCAL_APIC_ADDRESS_OVERRIDE_STRUCTURE;
typedef struct _1900D0CF38613B02DB3CF0343CF6EF59 EFI_ACPI_4_0_SYSTEM_RESOURCE_AFFINITY_TABLE_HEADER;
typedef struct _50F07B9AD62C1A018ACBE2DA8329192F EFI_ACPI_5_0_HARDWARE_ERROR_NOTIFICATION_STRUCTURE;
typedef struct _1FE9337B5A71DEC04A03C63F34E65E8A EFI_ACPI_5_0_IA32_ARCHITECTURE_NMI_ERROR_STRUCTURE;
typedef struct _C083007631904680C751AB34F721C511 EFI_ACPI_5_0_LOCAL_APIC_ADDRESS_OVERRIDE_STRUCTURE;
typedef struct _1900D0CF38613B02DB3CF0343CF6EF59 EFI_ACPI_5_0_SYSTEM_RESOURCE_AFFINITY_TABLE_HEADER;
typedef struct _7536A37FDFCE53E1F2D7EFC84DEFD63B EFI_ACPI_5_1_HARDWARE_ERROR_NOTIFICATION_STRUCTURE;
typedef struct _1FE9337B5A71DEC04A03C63F34E65E8A EFI_ACPI_5_1_IA32_ARCHITECTURE_NMI_ERROR_STRUCTURE;
typedef struct _C083007631904680C751AB34F721C511 EFI_ACPI_5_1_LOCAL_APIC_ADDRESS_OVERRIDE_STRUCTURE;
typedef struct _1900D0CF38613B02DB3CF0343CF6EF59 EFI_ACPI_5_1_SYSTEM_RESOURCE_AFFINITY_TABLE_HEADER;
typedef struct _E4CAA01CB4FC3A32463493A4CB58CD8D EFI_ACPI_6_0_HARDWARE_ERROR_NOTIFICATION_STRUCTURE;
typedef struct _1FE9337B5A71DEC04A03C63F34E65E8A EFI_ACPI_6_0_IA32_ARCHITECTURE_NMI_ERROR_STRUCTURE;
typedef struct _C083007631904680C751AB34F721C511 EFI_ACPI_6_0_LOCAL_APIC_ADDRESS_OVERRIDE_STRUCTURE;
typedef struct _1900D0CF38613B02DB3CF0343CF6EF59 EFI_ACPI_6_0_SYSTEM_RESOURCE_AFFINITY_TABLE_HEADER;
typedef struct _E6669E07CF547D28E0A0359868269049 EFI_MISC_ELECTRICAL_CURRENT_PROBE_DESCRIPTION_DATA;
typedef struct _6C480E4EEB02FFD52B818F7178E5FDC2 PCI_EXPRESS_EXTENDED_CAPABILITIES_LINK_DECLARATION;
typedef struct _D7F6A39548B67F180281A7589F829443 EFI_ACPI_2_0_PLATFORM_INTERRUPT_SOURCES_STRUCTURE;
typedef struct _E9F0887906CDF4F6D31FFD53A6DF9F6A EFI_ACPI_3_0_PLATFORM_INTERRUPT_SOURCES_STRUCTURE;
typedef struct _E415E2751C8815A251B5F32BC2F44190 EFI_ACPI_4_0_ERST_SERIALIZATION_INSTRUCTION_ENTRY;
typedef struct _E9F0887906CDF4F6D31FFD53A6DF9F6A EFI_ACPI_4_0_PLATFORM_INTERRUPT_SOURCES_STRUCTURE;
typedef struct _8A024DF29D7C5529279C14F7A1792CA3 EFI_ACPI_5_0_ERST_SERIALIZATION_INSTRUCTION_ENTRY;
typedef struct _E9F0887906CDF4F6D31FFD53A6DF9F6A EFI_ACPI_5_0_PLATFORM_INTERRUPT_SOURCES_STRUCTURE;
typedef struct _E04B20A261BEECF1FC2270F0EF743622 EFI_ACPI_5_1_ERST_SERIALIZATION_INSTRUCTION_ENTRY;
typedef struct _362EBAB6221B1063033D82FEB6541041 EFI_ACPI_5_1_GTDT_SBSA_GENERIC_WATCHDOG_STRUCTURE;
typedef struct _E9F0887906CDF4F6D31FFD53A6DF9F6A EFI_ACPI_5_1_PLATFORM_INTERRUPT_SOURCES_STRUCTURE;
typedef struct _ABB549047AEF255E4EB3A3AB7A9865AE EFI_ACPI_6_0_ERST_SERIALIZATION_INSTRUCTION_ENTRY;
typedef struct _362EBAB6221B1063033D82FEB6541041 EFI_ACPI_6_0_GTDT_SBSA_GENERIC_WATCHDOG_STRUCTURE;
typedef struct _1D55C2E207DB73926762219F2515EF1B EFI_ACPI_6_0_NFIT_NVDIMM_CONTROL_REGION_STRUCTURE;
typedef struct _E9F0887906CDF4F6D31FFD53A6DF9F6A EFI_ACPI_6_0_PLATFORM_INTERRUPT_SOURCES_STRUCTURE;
typedef struct _78081C629DD491B0CC432155ECB1E8B1 PCI_EXPRESS_EXTENDED_CAPABILITIES_POWER_BUDGETING;
typedef struct _AD84373D94DE7196970428998609059F PCI_EXPRESS_EXTENDED_CAPABILITIES_VENDOR_SPECIFIC;
typedef struct _8D2D182B2E295BABE24FB2BA4BA29C86 EFI_ACPI_1_0_INTERRUPT_SOURCE_OVERRIDE_STRUCTURE;
typedef struct _DAA575A1E4F540C43793111540E3F2D7 EFI_ACPI_2_0_INTERRUPT_SOURCE_OVERRIDE_STRUCTURE;
typedef struct _DAA575A1E4F540C43793111540E3F2D7 EFI_ACPI_3_0_INTERRUPT_SOURCE_OVERRIDE_STRUCTURE;
typedef struct _0C0BCAF52A2AB260D0BEFAF32C226C90 EFI_ACPI_4_0_CPEP_PROCESSOR_APIC_SAPIC_STRUCTURE;
typedef struct _DAA575A1E4F540C43793111540E3F2D7 EFI_ACPI_4_0_INTERRUPT_SOURCE_OVERRIDE_STRUCTURE;
typedef struct _D79973267288089C8EF15F59898B9BA8 EFI_ACPI_4_0_PCI_EXPRESS_ROOT_PORT_AER_STRUCTURE;
typedef struct _0C0BCAF52A2AB260D0BEFAF32C226C90 EFI_ACPI_5_0_CPEP_PROCESSOR_APIC_SAPIC_STRUCTURE;
typedef struct _DAA575A1E4F540C43793111540E3F2D7 EFI_ACPI_5_0_INTERRUPT_SOURCE_OVERRIDE_STRUCTURE;
typedef struct _D79973267288089C8EF15F59898B9BA8 EFI_ACPI_5_0_PCI_EXPRESS_ROOT_PORT_AER_STRUCTURE;
typedef struct _0C0BCAF52A2AB260D0BEFAF32C226C90 EFI_ACPI_5_1_CPEP_PROCESSOR_APIC_SAPIC_STRUCTURE;
typedef struct _DAA575A1E4F540C43793111540E3F2D7 EFI_ACPI_5_1_INTERRUPT_SOURCE_OVERRIDE_STRUCTURE;
typedef struct _D79973267288089C8EF15F59898B9BA8 EFI_ACPI_5_1_PCI_EXPRESS_ROOT_PORT_AER_STRUCTURE;
typedef struct _0C0BCAF52A2AB260D0BEFAF32C226C90 EFI_ACPI_6_0_CPEP_PROCESSOR_APIC_SAPIC_STRUCTURE;
typedef struct _DAA575A1E4F540C43793111540E3F2D7 EFI_ACPI_6_0_INTERRUPT_SOURCE_OVERRIDE_STRUCTURE;
typedef struct _D79973267288089C8EF15F59898B9BA8 EFI_ACPI_6_0_PCI_EXPRESS_ROOT_PORT_AER_STRUCTURE;
typedef struct _46BB9A8260616A26F7ABA63259AF690A EFI_ACPI_HIGH_PRECISION_EVENT_TIMER_TABLE_HEADER;
typedef struct _E05289635D9C996E877C3A24F3F900FE EFI_ACPI_ISCSI_BOOT_FIRMWARE_TABLE_NIC_STRUCTURE;
typedef struct _7FE8B5378CAF7ED49428EF8778472563 EFI_BLOCK_IO_CRYPTO_RESPONSE_CONFIGURATION_ENTRY;
typedef struct _0F26ACC6D4E0B18480126DF434086C83 EFI_MISC_PORT_INTERNAL_CONNECTOR_DESIGNATOR_DATA;
typedef struct _EFI_PCI_HOST_BRIDGE_RESOURCE_ALLOCATION_PROTOCOL EFI_PCI_HOST_BRIDGE_RESOURCE_ALLOCATION_PROTOCOL;
typedef struct _1E3F2F4B7DEFDE62C88BF1438AD659A4 PCI_EXPRESS_EXTENDED_CAPABILITIES_ARI_CAPABILITY;
typedef struct _135A40A0509E9B3223D5309856D0560B PCI_EXPRESS_EXTENDED_CAPABILITIES_SECONDARY_PCIE;
typedef struct _A1E4BC69A3E624510D80DD9D7A45DD6C EFI_ACPI_4_0_GENERIC_ERROR_DATA_ENTRY_STRUCTURE;
typedef struct _1CD62EA41C939E1C656209CB02CED207 EFI_ACPI_4_0_HARDWARE_ERROR_SOURCE_TABLE_HEADER;
typedef struct _A1E4BC69A3E624510D80DD9D7A45DD6C EFI_ACPI_5_0_GENERIC_ERROR_DATA_ENTRY_STRUCTURE;
typedef struct _1CD62EA41C939E1C656209CB02CED207 EFI_ACPI_5_0_HARDWARE_ERROR_SOURCE_TABLE_HEADER;
typedef struct _A1E4BC69A3E624510D80DD9D7A45DD6C EFI_ACPI_5_1_GENERIC_ERROR_DATA_ENTRY_STRUCTURE;
typedef struct _1CD62EA41C939E1C656209CB02CED207 EFI_ACPI_5_1_HARDWARE_ERROR_SOURCE_TABLE_HEADER;
typedef struct _A1E4BC69A3E624510D80DD9D7A45DD6C EFI_ACPI_6_0_GENERIC_ERROR_DATA_ENTRY_STRUCTURE;
typedef struct _1CD62EA41C939E1C656209CB02CED207 EFI_ACPI_6_0_HARDWARE_ERROR_SOURCE_TABLE_HEADER;
typedef struct _1EA17B726046B3496B0436F45751EDB9 EFI_SMM_LOCK_BOX_PARAMETER_RESTORE_ALL_IN_PLACE;
typedef struct _4EA7B9B0DA60A213D8FE837777047EEB PCI_EXPRESS_EXTENDED_CAPABILITIES_RESIZABLE_BAR;
typedef struct _BB95E9F014E1911D4E1E3EC6C5F0D1BA PCI_EXPRESS_EXTENDED_CAPABILITIES_SERIAL_NUMBER;
typedef struct _B9A05D228ED5F3E0C318560008618C09 SMM_VARIABLE_COMMUNICATE_GET_NEXT_VARIABLE_NAME;
typedef struct _A623DC40DB5F984C95B90C5AE5F35B22 EFI_ACPI_3_0_PLATFORM_INTERRUPT_APIC_STRUCTURE;
typedef struct _A623DC40DB5F984C95B90C5AE5F35B22 EFI_ACPI_4_0_PLATFORM_INTERRUPT_APIC_STRUCTURE;
typedef struct _6027857916414684B693573B4A22B1E3 EFI_ACPI_5_0_FIRMWARE_PERFORMANCE_RECORD_TABLE;
typedef struct _A623DC40DB5F984C95B90C5AE5F35B22 EFI_ACPI_5_0_PLATFORM_INTERRUPT_APIC_STRUCTURE;
typedef struct _6027857916414684B693573B4A22B1E3 EFI_ACPI_5_1_FIRMWARE_PERFORMANCE_RECORD_TABLE;
typedef struct _A623DC40DB5F984C95B90C5AE5F35B22 EFI_ACPI_5_1_PLATFORM_INTERRUPT_APIC_STRUCTURE;
typedef struct _6027857916414684B693573B4A22B1E3 EFI_ACPI_6_0_FIRMWARE_PERFORMANCE_RECORD_TABLE;
typedef struct _EF2B645B56217D3DE53DDEA82D5E74E0 EFI_ACPI_6_0_NFIT_FLUSH_HINT_ADDRESS_STRUCTURE;
typedef struct _A623DC40DB5F984C95B90C5AE5F35B22 EFI_ACPI_6_0_PLATFORM_INTERRUPT_APIC_STRUCTURE;
typedef struct _AD9BA3FED9A528D455365381D739EDE0 EFI_ACPI_SERIAL_PORT_CONSOLE_REDIRECTION_TABLE;
typedef struct _43257F6D79F610634E07F0F15F0F5C15 EFI_COMPUTING_UNIT_MICROCODE_UPDATE_ERROR_DATA;
typedef struct _1C16E1C08D15DE2A87D351D2ED5ECB7C PCI_EXPRESS_EXTENDED_CAPABILITIES_ACS_EXTENDED;
typedef struct _893FD9E11FDAA36A72D09F0CDAFC97BF EFI_ACPI_32_BIT_FIXED_MEMORY_RANGE_DESCRIPTOR;
typedef struct _B24108C6A84211A3601D6A74CFBF8141 EFI_ACPI_4_0_EINJ_INJECTION_INSTRUCTION_ENTRY;
typedef struct _AA033DF403890F6F054777DF6427E4D7 EFI_ACPI_4_0_PCI_EXPRESS_BRIDGE_AER_STRUCTURE;
typedef struct _3D86227C073D5D6981DC2466093EFB4F EFI_ACPI_4_0_PCI_EXPRESS_DEVICE_AER_STRUCTURE;
typedef struct _104E104B995BF192D734545FE5C51D74 EFI_ACPI_4_0_PROCESSOR_LOCAL_X2APIC_STRUCTURE;
typedef struct _EB8F46A830D9D94D2766D4C9A4BA60BD EFI_ACPI_5_0_EINJ_INJECTION_INSTRUCTION_ENTRY;
typedef struct _AA033DF403890F6F054777DF6427E4D7 EFI_ACPI_5_0_PCI_EXPRESS_BRIDGE_AER_STRUCTURE;
typedef struct _3D86227C073D5D6981DC2466093EFB4F EFI_ACPI_5_0_PCI_EXPRESS_DEVICE_AER_STRUCTURE;
typedef struct _104E104B995BF192D734545FE5C51D74 EFI_ACPI_5_0_PROCESSOR_LOCAL_X2APIC_STRUCTURE;
typedef struct _EBD444B5CC02E90760E7B081CCD0D95B EFI_ACPI_5_1_EINJ_INJECTION_INSTRUCTION_ENTRY;
typedef struct _AA033DF403890F6F054777DF6427E4D7 EFI_ACPI_5_1_PCI_EXPRESS_BRIDGE_AER_STRUCTURE;
typedef struct _3D86227C073D5D6981DC2466093EFB4F EFI_ACPI_5_1_PCI_EXPRESS_DEVICE_AER_STRUCTURE;
typedef struct _104E104B995BF192D734545FE5C51D74 EFI_ACPI_5_1_PROCESSOR_LOCAL_X2APIC_STRUCTURE;
typedef struct _ABBF97989A82DC63A0EC55D7A043633E EFI_ACPI_6_0_EINJ_INJECTION_INSTRUCTION_ENTRY;
typedef struct _AA033DF403890F6F054777DF6427E4D7 EFI_ACPI_6_0_PCI_EXPRESS_BRIDGE_AER_STRUCTURE;
typedef struct _3D86227C073D5D6981DC2466093EFB4F EFI_ACPI_6_0_PCI_EXPRESS_DEVICE_AER_STRUCTURE;
typedef struct _104E104B995BF192D734545FE5C51D74 EFI_ACPI_6_0_PROCESSOR_LOCAL_X2APIC_STRUCTURE;
typedef struct _6ABC0356B240012E2982987C9730FBA4 EFI_ACPI_DBG2_DEBUG_DEVICE_INFORMATION_STRUCT;
typedef struct _8BC8464797BD15B7DE56566C9A312D61 EFI_BLOCK_IO_CRYPTO_CONFIGURATION_TABLE_ENTRY;
typedef struct _EFI_I2C_BUS_CONFIGURATION_MANAGEMENT_PROTOCOL EFI_I2C_BUS_CONFIGURATION_MANAGEMENT_PROTOCOL;
typedef struct _2E8E3E480907CEB724AF4E266B739D41 EFI_LEGACY_MP_TABLE_ENTRY_PROCESSOR_SIGNATURE;
typedef struct _86210BA5B88DE587CCB72507AC8E4181 EFI_MISC_NUMBER_OF_INSTALLABLE_LANGUAGES_DATA;
typedef struct _EFI_PLATFORM_TO_DRIVER_CONFIGURATION_PROTOCOL EFI_PLATFORM_TO_DRIVER_CONFIGURATION_PROTOCOL;
typedef struct _7AB8CB7DC0ED871DDC3C55225C07E5EF PCI_EXPRESS_EXTENDED_CAPABILITIES_RCRB_HEADER;
typedef struct _5976B9DA4C60B9506C4D99B8C3451025 EFI_ACPI_1_0_FIRMWARE_ACPI_CONTROL_STRUCTURE;
typedef struct _64398F8E3B32B4E9081A1C1E13696179 EFI_ACPI_1_0_ROOT_SYSTEM_DESCRIPTION_POINTER;
typedef struct _2DF68590B8BC6352BB686A2EF4746F88 EFI_ACPI_1_0_SMART_BATTERY_DESCRIPTION_TABLE;
typedef struct _A67111EB637F4E9F7923F72D72853C3F EFI_ACPI_2_0_FIRMWARE_ACPI_CONTROL_STRUCTURE;
typedef struct _A6484E360E0D767762A149C78FD78B30 EFI_ACPI_2_0_PROCESSOR_LOCAL_SAPIC_STRUCTURE;
typedef struct _59470752940C6AB5192F9229B028D61E EFI_ACPI_2_0_ROOT_SYSTEM_DESCRIPTION_POINTER;
typedef struct _2DF68590B8BC6352BB686A2EF4746F88 EFI_ACPI_2_0_SMART_BATTERY_DESCRIPTION_TABLE;
typedef struct _A67111EB637F4E9F7923F72D72853C3F EFI_ACPI_3_0_FIRMWARE_ACPI_CONTROL_STRUCTURE;
typedef struct _160C100133D008EF49A6864DD19B1099 EFI_ACPI_3_0_PROCESSOR_LOCAL_SAPIC_STRUCTURE;
typedef struct _59470752940C6AB5192F9229B028D61E EFI_ACPI_3_0_ROOT_SYSTEM_DESCRIPTION_POINTER;
typedef struct _2DF68590B8BC6352BB686A2EF4746F88 EFI_ACPI_3_0_SMART_BATTERY_DESCRIPTION_TABLE;
typedef struct _09B7F6ABCC0579263631A2B4F04B2C9E EFI_ACPI_4_0_FIRMWARE_ACPI_CONTROL_STRUCTURE;
typedef struct _160C100133D008EF49A6864DD19B1099 EFI_ACPI_4_0_PROCESSOR_LOCAL_SAPIC_STRUCTURE;
typedef struct _59470752940C6AB5192F9229B028D61E EFI_ACPI_4_0_ROOT_SYSTEM_DESCRIPTION_POINTER;
typedef struct _2DF68590B8BC6352BB686A2EF4746F88 EFI_ACPI_4_0_SMART_BATTERY_DESCRIPTION_TABLE;
typedef struct _09B7F6ABCC0579263631A2B4F04B2C9E EFI_ACPI_5_0_FIRMWARE_ACPI_CONTROL_STRUCTURE;
typedef struct _F21C1A88A2EE64F577E38E0B85C93835 EFI_ACPI_5_0_FPDT_FIRMWARE_BASIC_BOOT_RECORD;
typedef struct _88383D1B2353D16D8AD8DB65A55C67C1 EFI_ACPI_5_0_GENERIC_TIMER_DESCRIPTION_TABLE;
typedef struct _160C100133D008EF49A6864DD19B1099 EFI_ACPI_5_0_PROCESSOR_LOCAL_SAPIC_STRUCTURE;
typedef struct _59470752940C6AB5192F9229B028D61E EFI_ACPI_5_0_ROOT_SYSTEM_DESCRIPTION_POINTER;
typedef struct _2DF68590B8BC6352BB686A2EF4746F88 EFI_ACPI_5_0_SMART_BATTERY_DESCRIPTION_TABLE;
typedef struct _09B7F6ABCC0579263631A2B4F04B2C9E EFI_ACPI_5_1_FIRMWARE_ACPI_CONTROL_STRUCTURE;
typedef struct _D92E6C205FE94452D965C4230D5A1407 EFI_ACPI_5_1_FPDT_FIRMWARE_BASIC_BOOT_RECORD;
typedef struct _F94E551C4E7F83190A6F3C3BA73B9B85 EFI_ACPI_5_1_GENERIC_TIMER_DESCRIPTION_TABLE;
typedef struct _160C100133D008EF49A6864DD19B1099 EFI_ACPI_5_1_PROCESSOR_LOCAL_SAPIC_STRUCTURE;
typedef struct _59470752940C6AB5192F9229B028D61E EFI_ACPI_5_1_ROOT_SYSTEM_DESCRIPTION_POINTER;
typedef struct _2DF68590B8BC6352BB686A2EF4746F88 EFI_ACPI_5_1_SMART_BATTERY_DESCRIPTION_TABLE;
typedef struct _09B7F6ABCC0579263631A2B4F04B2C9E EFI_ACPI_6_0_FIRMWARE_ACPI_CONTROL_STRUCTURE;
typedef struct _005E951D494B668346BD445CA4D8E682 EFI_ACPI_6_0_FPDT_FIRMWARE_BASIC_BOOT_RECORD;
typedef struct _F94E551C4E7F83190A6F3C3BA73B9B85 EFI_ACPI_6_0_GENERIC_TIMER_DESCRIPTION_TABLE;
typedef struct _8D29C0B06F43B4BA6E2EF385F64715D0 EFI_ACPI_6_0_NVDIMM_FIRMWARE_INTERFACE_TABLE;
typedef struct _160C100133D008EF49A6864DD19B1099 EFI_ACPI_6_0_PROCESSOR_LOCAL_SAPIC_STRUCTURE;
typedef struct _59470752940C6AB5192F9229B028D61E EFI_ACPI_6_0_ROOT_SYSTEM_DESCRIPTION_POINTER;
typedef struct _2DF68590B8BC6352BB686A2EF4746F88 EFI_ACPI_6_0_SMART_BATTERY_DESCRIPTION_TABLE;
typedef struct _824A427F62CDDF782776BE13CF66F19F EFI_ACPI_SERIAL_BUS_RESOURCE_UART_DESCRIPTOR;
typedef struct _F7360F28947B935D45CA2C0CBC7637BA EFI_FIRMWARE_MANAGEMENT_CAPSULE_IMAGE_HEADER;
typedef struct _EFI_INCOMPATIBLE_PCI_DEVICE_SUPPORT_PROTOCOL EFI_INCOMPATIBLE_PCI_DEVICE_SUPPORT_PROTOCOL;
typedef union _0B73A95D4C46C39A91D502964C8E2377 EFI_LEGACY_MP_TABLE_ENTRY_INT_SOURCE_BUS_IRQ;
typedef struct _A3842D8E4B7B5B0F57195E6E338BFF95 EFI_LEGACY_MP_TABLE_ENTRY_PROCESSOR_FEATURES;
typedef struct _FRAMEWORK_EFI_FIRMWARE_VOLUME_BLOCK_PROTOCOL FRAMEWORK_EFI_FIRMWARE_VOLUME_BLOCK_PROTOCOL;
typedef struct _D391E2EE96FCF916E3497CBD40656BC7 SMM_VARIABLE_COMMUNICATE_QUERY_VARIABLE_INFO;
typedef struct _12B4A611596D72B7C4F573F484E593F7 EFI_ACPI_1_0_PROCESSOR_LOCAL_APIC_STRUCTURE;
typedef struct _12B4A611596D72B7C4F573F484E593F7 EFI_ACPI_2_0_PROCESSOR_LOCAL_APIC_STRUCTURE;
typedef struct _12B4A611596D72B7C4F573F484E593F7 EFI_ACPI_3_0_PROCESSOR_LOCAL_APIC_STRUCTURE;
typedef struct _3D3EAA90EBA362C2D0ED1CB8B9602510 EFI_ACPI_4_0_BOOT_ERROR_RECORD_TABLE_HEADER;
typedef struct _E4D62868E5BD63A21B685AEFDED1DBD5 EFI_ACPI_4_0_GENERIC_ERROR_STATUS_STRUCTURE;
typedef struct _12B4A611596D72B7C4F573F484E593F7 EFI_ACPI_4_0_PROCESSOR_LOCAL_APIC_STRUCTURE;
typedef struct _3D3EAA90EBA362C2D0ED1CB8B9602510 EFI_ACPI_5_0_BOOT_ERROR_RECORD_TABLE_HEADER;
typedef struct _50CD466421330932FB97D67515483505 EFI_ACPI_5_0_FPDT_FIRMWARE_BASIC_BOOT_TABLE;
typedef struct _B2CA72A6D81756722FBA9BD935435661 EFI_ACPI_5_0_FPDT_PERFORMANCE_RECORD_HEADER;
typedef struct _71AAE10C5D2857161D5438F66A3A4D7D EFI_ACPI_5_0_GENERIC_ERROR_STATUS_STRUCTURE;
typedef struct _12B4A611596D72B7C4F573F484E593F7 EFI_ACPI_5_0_PROCESSOR_LOCAL_APIC_STRUCTURE;
typedef struct _3D3EAA90EBA362C2D0ED1CB8B9602510 EFI_ACPI_5_1_BOOT_ERROR_RECORD_TABLE_HEADER;
typedef struct _16F9082739EE6C04847F72AA2153A45C EFI_ACPI_5_1_FPDT_FIRMWARE_BASIC_BOOT_TABLE;
typedef struct _B2CA72A6D81756722FBA9BD935435661 EFI_ACPI_5_1_FPDT_PERFORMANCE_RECORD_HEADER;
typedef struct _0AEF62DF78B697AA9EAAF2AB6ABDA9F8 EFI_ACPI_5_1_GENERIC_ERROR_STATUS_STRUCTURE;
typedef struct _12B4A611596D72B7C4F573F484E593F7 EFI_ACPI_5_1_PROCESSOR_LOCAL_APIC_STRUCTURE;
typedef struct _3D3EAA90EBA362C2D0ED1CB8B9602510 EFI_ACPI_6_0_BOOT_ERROR_RECORD_TABLE_HEADER;
typedef struct _983E57500E9B507B029E1E75021F3B41 EFI_ACPI_6_0_FPDT_FIRMWARE_BASIC_BOOT_TABLE;
typedef struct _B2CA72A6D81756722FBA9BD935435661 EFI_ACPI_6_0_FPDT_PERFORMANCE_RECORD_HEADER;
typedef struct _10B051C0C3250DD0B8B86596FC8844A4 EFI_ACPI_6_0_GENERIC_ERROR_STATUS_STRUCTURE;
typedef struct _30E86135D612FC240B4D7CCC6EC8379E EFI_ACPI_6_0_PROCESSOR_LOCAL_APIC_STRUCTURE;
typedef struct _045E63C52D363788AB61174A38E56D57 EFI_ACPI_SERIAL_BUS_RESOURCE_I2C_DESCRIPTOR;
typedef struct _8F55FBCDD7A045BFCDA7030ED4A53CB1 EFI_ACPI_SERIAL_BUS_RESOURCE_SPI_DESCRIPTOR;
typedef void (*EFI_BOOT_MANAGER_REFRESH_LEGACY_BOOT_OPTION)(void);
typedef struct _890C66BD3414F72564A9792AD4C50634 EFI_COMPUTING_UNIT_TIMER_EXPIRED_ERROR_DATA;
typedef struct _6C8E4E625E7B083555CC290EFE6396B2 EFI_LEGACY_MP_TABLE_ENTRY_EXT_BUS_HIERARCHY;
typedef struct _8AD0E7071038BAD52AD18FAF10519DBA EFI_MISC_MANAGEMENT_DEVICE_DESCRIPTION_DATA;
typedef struct _54E2E9668D0928029EA47A066A67062C EFI_MISC_TEMPERATURE_PROBE_DESCRIPTION_DATA;
typedef struct _D7773540B8449B72EBB989E963175901 EFI_PCI_ROOT_BRIDGE_IO_PROTOCOL_PCI_ADDRESS;
typedef struct _FCD72BE2F93774EAA3A635EBA87ACC1D PCI_EXPRESS_EXTENDED_CAPABILITIES_MULTICAST;
typedef struct _DA2370F135774DAC578057B93BF5B56B EFI_ACPI_5_0_FPDT_PERFORMANCE_TABLE_HEADER;
typedef struct _DA2370F135774DAC578057B93BF5B56B EFI_ACPI_5_1_FPDT_PERFORMANCE_TABLE_HEADER;
typedef struct _A09F1F233FE9E41493184B3B1BB66A1D EFI_ACPI_5_1_GTDT_GT_BLOCK_TIMER_STRUCTURE;
typedef struct _DA2370F135774DAC578057B93BF5B56B EFI_ACPI_6_0_FPDT_PERFORMANCE_TABLE_HEADER;
typedef struct _A09F1F233FE9E41493184B3B1BB66A1D EFI_ACPI_6_0_GTDT_GT_BLOCK_TIMER_STRUCTURE;
typedef struct _F14A0CFB34098AE87DDB3C99DBB83B9A EFI_ACPI_EXTENDED_ADDRESS_SPACE_DESCRIPTOR;
typedef struct _E0F17FEBD492ABA4C86EE5B23BE3E309 EFI_ACPI_FIXED_LOCATION_IO_PORT_DESCRIPTOR;
typedef struct _D3315E2C7A20487BEB8B4CF639C73067 EFI_COMPUTING_UNIT_CPU_DISABLED_ERROR_DATA;
typedef struct _36291DB4675549E3BB2DB664E05FF826 EFI_EXT_SCSI_PASS_THRU_SCSI_REQUEST_PACKET;
typedef struct _8FEC1352FA33E828B4E24B646964B517 EFI_LOAD_FIXED_ADDRESS_CONFIGURATION_TABLE;
typedef struct _86869426D1F11D019276FCEA1747E54D EFI_MISC_ELECTRICAL_CURRENT_PROBE_LOCATION;
typedef struct _037A7121310F6FC2A5E2428EF944B3F1 EFI_ACPI_1_0_FIXED_ACPI_DESCRIPTION_TABLE;
typedef struct _6DE7B3917082FC90BAD75410366F4F48 EFI_ACPI_2_0_FIXED_ACPI_DESCRIPTION_TABLE;
typedef struct _675AC941CA254EBE58EC6BA08A3A4D71 EFI_ACPI_3_0_FIXED_ACPI_DESCRIPTION_TABLE;
typedef struct _DA8FE81CC0E3FB877E9CE295A06E6DDA EFI_ACPI_4_0_ERROR_INJECTION_TABLE_HEADER;
typedef struct _34EFBF63E04388C9C3FB9247D26E3A60 EFI_ACPI_4_0_FIXED_ACPI_DESCRIPTION_TABLE;
typedef struct _6F10AFB06B176DC7E412F6E2BE16C09C EFI_ACPI_5_0_BOOT_GRAPHICS_RESOURCE_TABLE;
typedef struct _DA8FE81CC0E3FB877E9CE295A06E6DDA EFI_ACPI_5_0_ERROR_INJECTION_TABLE_HEADER;
typedef struct _39182558A763EA8FE473141BC9A77E7C EFI_ACPI_5_0_FIXED_ACPI_DESCRIPTION_TABLE;
typedef struct _63FEF6CEC3D9C390621DCB6B034E41A1 EFI_ACPI_5_0_MPST_MEMORY_POWER_NODE_TABLE;
typedef struct _6F10AFB06B176DC7E412F6E2BE16C09C EFI_ACPI_5_1_BOOT_GRAPHICS_RESOURCE_TABLE;
typedef struct _DA8FE81CC0E3FB877E9CE295A06E6DDA EFI_ACPI_5_1_ERROR_INJECTION_TABLE_HEADER;
typedef struct _BED2D6D995ED6B10B59E498D605752D1 EFI_ACPI_5_1_FIXED_ACPI_DESCRIPTION_TABLE;
typedef struct _63FEF6CEC3D9C390621DCB6B034E41A1 EFI_ACPI_5_1_MPST_MEMORY_POWER_NODE_TABLE;
typedef struct _6F10AFB06B176DC7E412F6E2BE16C09C EFI_ACPI_6_0_BOOT_GRAPHICS_RESOURCE_TABLE;
typedef struct _DA8FE81CC0E3FB877E9CE295A06E6DDA EFI_ACPI_6_0_ERROR_INJECTION_TABLE_HEADER;
typedef struct _A116D5E3F3B0927191F67B52BC870E59 EFI_ACPI_6_0_FIXED_ACPI_DESCRIPTION_TABLE;
typedef struct _63FEF6CEC3D9C390621DCB6B034E41A1 EFI_ACPI_6_0_MPST_MEMORY_POWER_NODE_TABLE;
typedef struct _91F5FFCE0B426C2E77FE39E145C7F383 EFI_ACPI_ISCSI_BOOT_FIRMWARE_TABLE_HEADER;
typedef struct _EFI_BUS_SPECIFIC_DRIVER_OVERRIDE_PROTOCOL EFI_BUS_SPECIFIC_DRIVER_OVERRIDE_PROTOCOL;
typedef struct _EFI_DRIVER_SUPPORTED_EFI_VERSION_PROTOCOL EFI_DRIVER_SUPPORTED_EFI_VERSION_PROTOCOL;
typedef struct _3B39653E3BF850CC816DD09E5250A1D9 EFI_LEGACY_MP_TABLE_ENTRY_PROCESSOR_FLAGS;
typedef struct _4C703EC466B4E070CC2159059900FA01 EFI_MISC_SMBIOS_STRUCT_ENCAPSULATION_DATA;
typedef struct _EFI_NETWORK_INTERFACE_IDENTIFIER_PROTOCOL EFI_NETWORK_INTERFACE_IDENTIFIER_PROTOCOL;
typedef struct _8914740DFE30B2C928B20CD9BE464DE1 EFI_SMM_LOCK_BOX_PARAMETER_SET_ATTRIBUTES;
typedef struct _EFI_SMM_PERIODIC_TIMER_DISPATCH2_PROTOCOL EFI_SMM_PERIODIC_TIMER_DISPATCH2_PROTOCOL;
typedef struct _EFI_SMM_STANDBY_BUTTON_DISPATCH2_PROTOCOL EFI_SMM_STANDBY_BUTTON_DISPATCH2_PROTOCOL;
typedef struct _2B2FEE3F747F440F55DADE83B12DEC68 SMM_VARIABLE_COMMUNICATE_GET_PAYLOAD_SIZE;
typedef struct _E4D62868E5BD63A21B685AEFDED1DBD5 EFI_ACPI_4_0_BOOT_ERROR_REGION_STRUCTURE;
typedef struct _71AAE10C5D2857161D5438F66A3A4D7D EFI_ACPI_5_0_BOOT_ERROR_REGION_STRUCTURE;
typedef struct _50CD466421330932FB97D67515483505 EFI_ACPI_5_0_FPDT_FIRMWARE_S3_BOOT_TABLE;
typedef struct _B6E8A195D1FC203A37BEF79338AA742F EFI_ACPI_5_0_MPST_MEMORY_POWER_STRUCTURE;
typedef struct _0AEF62DF78B697AA9EAAF2AB6ABDA9F8 EFI_ACPI_5_1_BOOT_ERROR_REGION_STRUCTURE;
typedef struct _16F9082739EE6C04847F72AA2153A45C EFI_ACPI_5_1_FPDT_FIRMWARE_S3_BOOT_TABLE;
typedef struct _B6E8A195D1FC203A37BEF79338AA742F EFI_ACPI_5_1_MPST_MEMORY_POWER_STRUCTURE;
typedef struct _10B051C0C3250DD0B8B86596FC8844A4 EFI_ACPI_6_0_BOOT_ERROR_REGION_STRUCTURE;
typedef struct _983E57500E9B507B029E1E75021F3B41 EFI_ACPI_6_0_FPDT_FIRMWARE_S3_BOOT_TABLE;
typedef struct _B6E8A195D1FC203A37BEF79338AA742F EFI_ACPI_6_0_MPST_MEMORY_POWER_STRUCTURE;
typedef struct _432E330A9C7A5946C7D3E709D76A2466 EFI_IP6_CONFIG_DUP_ADDR_DETECT_TRANSMITS;
typedef struct _E4F9981999F477848E844330CAD341B0 EFI_MISC_HARDWARE_SECURITY_SETTINGS_DATA;
typedef struct _079CCC9A8ED9998C019F85FD77F39906 EFI_NVM_EXPRESS_PASS_THRU_COMMAND_PACKET;
typedef struct _EFI_PCI_EXPRESS_BASE_ADDRESS_INFORMATION EFI_PCI_EXPRESS_BASE_ADDRESS_INFORMATION;
typedef struct _EFI_SMM_PERIODIC_TIMER_DISPATCH_PROTOCOL EFI_SMM_PERIODIC_TIMER_DISPATCH_PROTOCOL;
typedef struct _EFI_SMM_STANDBY_BUTTON_DISPATCH_PROTOCOL EFI_SMM_STANDBY_BUTTON_DISPATCH_PROTOCOL;
typedef struct _CBD5AAFE0A37E3F94EC954D0A5B2751E PCI_EXPRESS_EXTENDED_CAPABILITIES_HEADER;
typedef struct _9FFCB390DD14B79945F07A2EB576185F SMM_VARIABLE_COMMUNICATE_ACCESS_VARIABLE;
typedef struct _2683B887276D2C99DB7E6707206C3541 SMRAM_PROFILE_PARAMETER_GET_PROFILE_DATA;
typedef struct _EE144051703A467A552517BDDECF2797 SMRAM_PROFILE_PARAMETER_GET_PROFILE_INFO;
typedef struct _A896CE4093F8563720BCDB52D91EB8C7 SMRAM_PROFILE_PARAMETER_UNREGISTER_IMAGE;
typedef struct _FCAC3FF5AC09C652C812670302663021 EFI_ACPI_24_BIT_MEMORY_RANGE_DESCRIPTOR;
typedef struct _F1E81DAA883C62B36E0F4AB83D157A1B EFI_ACPI_32_BIT_MEMORY_RANGE_DESCRIPTOR;
typedef struct _CC48895B9E412E3BD6DC9377041F614A EFI_ACPI_4_0_LOCAL_X2APIC_NMI_STRUCTURE;
typedef struct _CC48895B9E412E3BD6DC9377041F614A EFI_ACPI_5_0_LOCAL_X2APIC_NMI_STRUCTURE;
typedef struct _CC48895B9E412E3BD6DC9377041F614A EFI_ACPI_5_1_LOCAL_X2APIC_NMI_STRUCTURE;
typedef struct _CC48895B9E412E3BD6DC9377041F614A EFI_ACPI_6_0_LOCAL_X2APIC_NMI_STRUCTURE;
typedef struct _9F1319B45FEBB152D8EFEBFDE8D1A138 EFI_ACPI_DEBUG_PORT_2_DESCRIPTION_TABLE;
typedef struct _0D2B439BBCFA9107A45A2892FA968ED5 EFI_ACPI_DWORD_ADDRESS_SPACE_DESCRIPTOR;
typedef struct _1BADC5D7EB127C90EDBAFF16C8975039 EFI_ACPI_QWORD_ADDRESS_SPACE_DESCRIPTOR;
typedef struct _8CE9375D58616016D44E5899D27941F3 EFI_ACPI_SERIAL_BUS_RESOURCE_DESCRIPTOR;
typedef struct _AD803FA55331A63ADB10040985F0C48E EFI_BLUETOOTH_SCAN_CALLBACK_INFORMATION;
typedef struct _A72BB6278B4C5CF5A5BC1A44ECC3AB06 EFI_FAULT_TOLERANT_WORKING_BLOCK_HEADER;
typedef struct _C3BF1122D5C1852227E214E1CA9392B4 EFI_FIRMWARE_VOLUME_EXT_ENTRY_GUID_TYPE;
typedef struct _DAC2B36DB69599D90EFF62986216419F EFI_MISC_BIOS_CHARACTERISTICS_EXTENSION;
typedef struct _A2AB49BDD0DE746123D0ABAA6B350AEC EFI_MISC_VOLTAGE_PROBE_DESCRIPTION_DATA;
typedef struct _81F0D2C61C824F8B236B19C895A58EED EFI_PMI_OPTIONAL_FLOATING_POINT_CONTEXT;
typedef struct _BC2985D9EF55848D4A341A78DE21738D EFI_SMM_PERIODIC_TIMER_DISPATCH_CONTEXT;
typedef struct _4537036C5940158056D50D54486E77E7 EFI_SMM_PERIODIC_TIMER_REGISTER_CONTEXT;
typedef struct _EFI_SMM_POWER_BUTTON_DISPATCH2_PROTOCOL EFI_SMM_POWER_BUTTON_DISPATCH2_PROTOCOL;
typedef struct _3279FC6A2B21CF07B01F7BD969D520A1 EFI_SMM_STANDBY_BUTTON_DISPATCH_CONTEXT;
typedef struct _3279FC6A2B21CF07B01F7BD969D520A1 EFI_SMM_STANDBY_BUTTON_REGISTER_CONTEXT;
typedef struct _6D318E6AA4852B0962173AD5AA763EF8 MEDIA_RELATIVE_OFFSET_RANGE_DEVICE_PATH;
typedef struct _EDKII_FORM_BROWSER_EXTENSION2_PROTOCOL EDKII_FORM_BROWSER_EXTENSION2_PROTOCOL;
typedef struct _1D7B25FDF36FC0DCF9D3F15198E6892D EFI_ACPI_2_0_GENERIC_ADDRESS_STRUCTURE;
typedef struct _BFE9B1A51FBE64F697572C7C8EA6814F EFI_ACPI_3_0_GENERIC_ADDRESS_STRUCTURE;
typedef struct _08785EA3AB2704170B8742C9F1FAEEE4 EFI_ACPI_3_0_MEMORY_AFFINITY_STRUCTURE;
typedef struct _C48BC651D97767035F229214B70F9A9F EFI_ACPI_4_0_EINJ_TRIGGER_ACTION_TABLE;
typedef struct _BFE9B1A51FBE64F697572C7C8EA6814F EFI_ACPI_4_0_GENERIC_ADDRESS_STRUCTURE;
typedef struct _08785EA3AB2704170B8742C9F1FAEEE4 EFI_ACPI_4_0_MEMORY_AFFINITY_STRUCTURE;
typedef struct _C48BC651D97767035F229214B70F9A9F EFI_ACPI_5_0_EINJ_TRIGGER_ACTION_TABLE;
typedef struct _BFE9B1A51FBE64F697572C7C8EA6814F EFI_ACPI_5_0_GENERIC_ADDRESS_STRUCTURE;
typedef struct _80338AD8F766A4EEAEEC8B04EC6116B9 EFI_ACPI_5_0_GIC_DISTRIBUTOR_STRUCTURE;
typedef struct _08785EA3AB2704170B8742C9F1FAEEE4 EFI_ACPI_5_0_MEMORY_AFFINITY_STRUCTURE;
typedef struct _C1280E12EBA0A803ED3C6694680DB66C EFI_ACPI_5_0_MEMORY_POWER_STATUS_TABLE;
typedef struct _C48BC651D97767035F229214B70F9A9F EFI_ACPI_5_1_EINJ_TRIGGER_ACTION_TABLE;
typedef struct _BFE9B1A51FBE64F697572C7C8EA6814F EFI_ACPI_5_1_GENERIC_ADDRESS_STRUCTURE;
typedef struct _80338AD8F766A4EEAEEC8B04EC6116B9 EFI_ACPI_5_1_GIC_DISTRIBUTOR_STRUCTURE;
typedef struct _08785EA3AB2704170B8742C9F1FAEEE4 EFI_ACPI_5_1_MEMORY_AFFINITY_STRUCTURE;
typedef struct _C1280E12EBA0A803ED3C6694680DB66C EFI_ACPI_5_1_MEMORY_POWER_STATUS_TABLE;
typedef struct _C48BC651D97767035F229214B70F9A9F EFI_ACPI_6_0_EINJ_TRIGGER_ACTION_TABLE;
typedef struct _BFE9B1A51FBE64F697572C7C8EA6814F EFI_ACPI_6_0_GENERIC_ADDRESS_STRUCTURE;
typedef struct _80338AD8F766A4EEAEEC8B04EC6116B9 EFI_ACPI_6_0_GIC_DISTRIBUTOR_STRUCTURE;
typedef struct _08785EA3AB2704170B8742C9F1FAEEE4 EFI_ACPI_6_0_MEMORY_AFFINITY_STRUCTURE;
typedef struct _C1280E12EBA0A803ED3C6694680DB66C EFI_ACPI_6_0_MEMORY_POWER_STATUS_TABLE;
typedef struct _8BF4A3182DE3065A22896A43EC686587 EFI_ACPI_6_0_NFIT_INTERLEAVE_STRUCTURE;
typedef struct _5C131779BD47E2449F5F80108D76F38A EFI_ACPI_EXTENDED_INTERRUPT_DESCRIPTOR;
typedef struct _D35B8C76829129D06BAD5DF5B0CB65D4 EFI_ACPI_WORD_ADDRESS_SPACE_DESCRIPTOR;
typedef struct _EFI_EAPOL_SUPPLICANT_PAE_CONFIGURATION EFI_EAPOL_SUPPLICANT_PAE_CONFIGURATION;
typedef struct _FF3D91E66F819C4F98F9776968F6FD4F EFI_FIRMWARE_MANAGEMENT_CAPSULE_HEADER;
typedef struct _EC0AFB1DD84DE30CD069B98F1439B48D EFI_FIRMWARE_VOLUME_EXT_ENTRY_OEM_TYPE;
typedef struct _EFI_GUIDED_SECTION_EXTRACTION_PROTOCOL EFI_GUIDED_SECTION_EXTRACTION_PROTOCOL;
typedef struct _C987BED3533B3E01282CF0F1300D858A EFI_HOST_PROCESSOR_MISMATCH_ERROR_DATA;
typedef struct _AB3202BD2DA0D684DF25DABA7D2EFB6C EFI_LEGACY_MP_TABLE_ENTRY_IOAPIC_FLAGS;
typedef struct _A8C829FBA1D0FC1A299CE48B21970582 EFI_MEMORY_CONTROLLER_INFORMATION_DATA;
typedef struct _2A798984CCC859E01B38F7089B098E60 EFI_MISC_COOLING_DEVICE_TEMP_LINK_DATA;
typedef struct _9D89345825FDE1AAB589E77F01DBB08D EFI_MISC_SCHEDULED_POWER_ON_MONTH_DATA;
typedef struct _A9E28A1432A11848918081ED8160DA80 EFI_PCI_ROOT_BRIDGE_IO_PROTOCOL_ACCESS;
typedef struct _86BAB91CCA35EC0D8E0AB900ABD9D931 EFI_SCSI_PASS_THRU_SCSI_REQUEST_PACKET;
typedef struct _EFI_SMM_POWER_BUTTON_DISPATCH_PROTOCOL EFI_SMM_POWER_BUTTON_DISPATCH_PROTOCOL;
typedef struct _7145FBB7A43E7472B182C998751EA91D FRAMEWORK_EFI_CAPSULE_BLOCK_DESCRIPTOR;
typedef struct _8BA21EB1E9E89DC8D750A7001642B349 MISC_ELECTRICAL_CURRENT_PROBE_LOCATION;
typedef void (*SHELLENV_DECREMENT_SHELL_NESTING_LEVEL)(void);
typedef void (*SHELLENV_INCREMENT_SHELL_NESTING_LEVEL)(void);
typedef struct _A896CE4093F8563720BCDB52D91EB8C7 SMRAM_PROFILE_PARAMETER_REGISTER_IMAGE;
typedef struct _839C21B4E89AAEDBF06DDC3B037C157B EFI_ACPI_1_0_LOCAL_APIC_NMI_STRUCTURE;
typedef struct _21FCFD4370A77BD9A330965E1A2EF6B8 EFI_ACPI_2_0_LOCAL_APIC_NMI_STRUCTURE;
typedef struct _21FCFD4370A77BD9A330965E1A2EF6B8 EFI_ACPI_3_0_LOCAL_APIC_NMI_STRUCTURE;
typedef struct _21FCFD4370A77BD9A330965E1A2EF6B8 EFI_ACPI_4_0_LOCAL_APIC_NMI_STRUCTURE;
typedef struct _21FCFD4370A77BD9A330965E1A2EF6B8 EFI_ACPI_5_0_LOCAL_APIC_NMI_STRUCTURE;
typedef struct _21FCFD4370A77BD9A330965E1A2EF6B8 EFI_ACPI_5_1_LOCAL_APIC_NMI_STRUCTURE;
typedef struct _2EA1BD641991CBA14B33DC187BAD4A98 EFI_ACPI_6_0_LOCAL_APIC_NMI_STRUCTURE;
typedef struct _B8B5216EB06283ECCD87175FCD3EA70E EFI_ACPI_DEBUG_PORT_DESCRIPTION_TABLE;
typedef struct _5C3A2FEE2C73B66B373680AA861C7829 EFI_COMPUTING_UNIT_THERMAL_ERROR_DATA;
typedef struct _1B2FC3F5690A0ED9DF6CC6085418DEC4 EFI_COMPUTING_UNIT_VOLTAGE_ERROR_DATA;
typedef struct _BA607B17B9A3CAECE8540684CEAA5528 EFI_MEMORY_MODULE_MISMATCH_ERROR_DATA;
typedef struct _948329AD6C2C9F7B84E43B2DD569E8E1 EFI_MISC_BASE_BOARD_MANUFACTURER_DATA;
typedef struct _07395639D7489D60157EAB4BA967E290 EFI_MISC_BOOT_INFORMATION_STATUS_DATA;
typedef struct _EC6CE77CD8A5E681FA699FCAFE971117 EFI_MISC_POWER_SUPPLY_CHARACTERISTICS;
typedef struct _AAADB9BA31A8B1F7AE5F32D582AF809F EFI_MISC_SYSTEM_SLOT_DESIGNATION_DATA;
typedef struct _EFI_PEI_GUIDED_SECTION_EXTRACTION_PPI EFI_PEI_GUIDED_SECTION_EXTRACTION_PPI;
typedef struct _EFI_PLATFORM_DRIVER_OVERRIDE_PROTOCOL EFI_PLATFORM_DRIVER_OVERRIDE_PROTOCOL;
typedef struct _A548EF40F423D4D1CE1D0C83C6C6368F EFI_PROCESSOR_MICROCODE_REVISION_DATA;
typedef struct _1D18BD375A46810C6FF3BC7DE3F3FFCD EFI_RESOURCE_ALLOC_FAILURE_ERROR_DATA;
typedef struct _F949FA152F73701F4284BFAE0FE56425 EFI_SCSI_SUPPORTED_VPD_PAGES_VPD_PAGE;
typedef struct _A0E022DF5FC884803C4BC1475C6D0840 EFI_SMM_POWER_BUTTON_DISPATCH_CONTEXT;
typedef struct _A0E022DF5FC884803C4BC1475C6D0840 EFI_SMM_POWER_BUTTON_REGISTER_CONTEXT;
typedef struct _EFI_STORAGE_SECURITY_COMMAND_PROTOCOL EFI_STORAGE_SECURITY_COMMAND_PROTOCOL;
typedef union _F5238921CBF27C887BB68ABA324F3CCD HPET_GENERAL_CAPABILITIES_ID_REGISTER;
typedef struct _BCEF2CFCF5849594C8FD4F40A8A09957 PCI_EXPRESS_EXTENDED_CAPABILITIES_TPH;
struct ____E701FF71F4D10987618ED6314B4FE49F {unsigned __int32 Status : 2;unsigned __int32 Tested : 1;unsigned __int32 Reserved1 : 13;unsigned __int32 VirtualMemoryUnavailable : 1;unsigned __int32 Ia32ExecutionUnavailable : 1;unsigned __int32 FloatingPointUnavailable : 1;unsigned __int32 MiscFeaturesUnavailable : 1;unsigned __int32 Reserved2 : 12;};
typedef struct _9B6083668C49B11131D9AC874471408F EFI_80211_ELEMENT_SUPP_CHANNEL_TUPLE;
typedef struct _FAE113C48115BAA8175D7C1704E7D818 EFI_ACPI_5_0_MPST_MEMORY_POWER_STATE;
typedef struct _B4A22B34AB1C82C9B553A8F76517C507 EFI_ACPI_5_1_GICC_AFFINITY_STRUCTURE;
typedef struct _C81ED73FE92C3217EDCB98B3168FF929 EFI_ACPI_5_1_GIC_MSI_FRAME_STRUCTURE;
typedef struct _24F38648B15D20A4EE161EA411756A18 EFI_ACPI_5_1_GTDT_GT_BLOCK_STRUCTURE;
typedef struct _FAE113C48115BAA8175D7C1704E7D818 EFI_ACPI_5_1_MPST_MEMORY_POWER_STATE;
typedef struct _B4A22B34AB1C82C9B553A8F76517C507 EFI_ACPI_6_0_GICC_AFFINITY_STRUCTURE;
typedef struct _C81ED73FE92C3217EDCB98B3168FF929 EFI_ACPI_6_0_GIC_MSI_FRAME_STRUCTURE;
typedef struct _24F38648B15D20A4EE161EA411756A18 EFI_ACPI_6_0_GTDT_GT_BLOCK_STRUCTURE;
typedef struct _FAE113C48115BAA8175D7C1704E7D818 EFI_ACPI_6_0_MPST_MEMORY_POWER_STATE;
typedef struct _9686D76608413ABCA37282C699CE8DBC EFI_ACPI_GENERIC_REGISTER_DESCRIPTOR;
typedef struct _983CF00DED1A1F66A55427EBF6F89EA9 EFI_ACPI_WATCHDOG_RESOURCE_1_0_TABLE;
typedef struct _17AEEDA15E6135533C6141EEE09D895F EFI_BLOCK_IO_CRYPTO_IV_INPUT_AES_XTS;
typedef struct _5083B1E6931E23D334D7384A88431181 EFI_GENERIC_ERROR_PCIE_DEV_BRIDGE_ID;
typedef struct _B9B39F0946474F121EFE4E9034FAEC4E EFI_GRAPHICS_OUTPUT_MODE_INFORMATION;
typedef struct _EFI_HII_IIBT_IMAGE_24BIT_TRANS_BLOCK EFI_HII_IIBT_IMAGE_24BIT_TRANS_BLOCK;
typedef struct _EFI_HII_SIBT_STRINGS_SCSU_FONT_BLOCK EFI_HII_SIBT_STRINGS_SCSU_FONT_BLOCK;
typedef struct _EFI_HII_SIBT_STRINGS_UCS2_FONT_BLOCK EFI_HII_SIBT_STRINGS_UCS2_FONT_BLOCK;
typedef struct _001DB780DBF46CC1B2DAFABB65012B21 EFI_LEGACY_MP_TABLE_ENTRY_INT_FIELDS;
typedef struct _1F0483A856E91CBF88271525A8766DD2 EFI_LEGACY_MP_TABLE_FLOATING_POINTER;
typedef struct _2346AEA35C9D7D084E7EF0424AFB9CF6 EFI_MANAGED_NETWORK_COMPLETION_TOKEN;
typedef struct _263823646A9EDCA988CE12E2C7912492 EFI_MEMORY_DEVICE_START_ADDRESS_DATA;
typedef struct _C0C8A9087C30B1CE8B2D8EC81C6D3AF6 EFI_MISC_IPMI_SPECIFICATION_REVISION;
typedef struct _C34F4C0FC3A8EA2F0BD17F4F5C2AADB7 EFI_MISC_MANAGEMENT_DEVICE_THRESHOLD;
typedef struct _447098F8F44009940152D6F24CEA4978 EFI_MISC_SYSTEM_LANGUAGE_STRING_DATA;
typedef struct _51F5104BF899A8D0172BF4ACA19FB23B EFI_SEC_PLATFORM_INFORMATION_RECORD2;
typedef union _6ABB2352D76941AE307F390D04ED2706 EFI_STATUS_CODE_EXCEP_SYSTEM_CONTEXT;
typedef struct _EFI_WIRELESS_MAC_CONNECTION_PROTOCOL EFI_WIRELESS_MAC_CONNECTION_PROTOCOL;
typedef struct _E7D10BCF161E8C7DAB62916DA1A0279A FAULT_TOLERANT_WRITE_LAST_WRITE_DATA;
typedef struct _D085A2A143CA9E1887FBDD304318E8FF EFI_80211_DEAUTHENTICATE_DATA_TOKEN;
typedef struct _1F3B348F27D4663FB5F9609464BE8B8E EFI_ACPI_5_0_FPDT_S3_SUSPEND_RECORD;
typedef struct _1A15A92F570159E57EFF988D765B1A6C EFI_ACPI_5_1_FPDT_S3_SUSPEND_RECORD;
typedef struct _BF8DC3DD2E6AEC42A136CED707A9D44D EFI_ACPI_6_0_FPDT_S3_SUSPEND_RECORD;
typedef struct _33744E832FE3B5445A858CFCD8D3D200 EFI_ACPI_GPIO_CONNECTION_DESCRIPTOR;
typedef struct _3A4EAC9E0776CF63D70ADBE2813E4E41 EFI_BOOT_MANAGER_DRIVER_HEALTH_INFO;
typedef struct _EFI_CONFIG_KEYWORD_HANDLER_PROTOCOL EFI_CONFIG_KEYWORD_HANDLER_PROTOCOL;
typedef struct _EFI_DRIVER_FAMILY_OVERRIDE_PROTOCOL EFI_DRIVER_FAMILY_OVERRIDE_PROTOCOL;
typedef struct _EFI_EAPOL_SUPPLICANT_PAE_STATISTICS EFI_EAPOL_SUPPLICANT_PAE_STATISTICS;
typedef struct _EFI_FORM_BROWSER_EXTENSION_PROTOCOL EFI_FORM_BROWSER_EXTENSION_PROTOCOL;
typedef union _03FBB74301AF73D9ED97B5AF89E37820 EFI_GRAPHICS_OUTPUT_BLT_PIXEL_UNION;
typedef struct _EFI_HII_IIBT_IMAGE_1BIT_TRANS_BLOCK EFI_HII_IIBT_IMAGE_1BIT_TRANS_BLOCK;
typedef struct _EFI_HII_IIBT_IMAGE_4BIT_TRANS_BLOCK EFI_HII_IIBT_IMAGE_4BIT_TRANS_BLOCK;
typedef struct _EFI_HII_SIBT_STRING_SCSU_FONT_BLOCK EFI_HII_SIBT_STRING_SCSU_FONT_BLOCK;
typedef struct _EFI_HII_SIBT_STRING_UCS2_FONT_BLOCK EFI_HII_SIBT_STRING_UCS2_FONT_BLOCK;
typedef struct _A58305CE0F1A340C2AB5BD9048187F54 EFI_HOB_MEMORY_ALLOCATION_BSP_STORE;
typedef struct _03E906D7136C60A5F52813B96CFD1F89 EFI_IMAGE_DEBUG_CODEVIEW_MTOC_ENTRY;
typedef struct _0DFB5ABEC4B6100E9816A4F84E51E06B EFI_IMAGE_DEBUG_CODEVIEW_NB10_ENTRY;
typedef struct _B89301B30D0E817DC03EB0FC8FA82100 EFI_IMAGE_DEBUG_CODEVIEW_RSDS_ENTRY;
typedef union _1B9299E1982A04DFFD37BAFD7CCC9536 EFI_IMAGE_OPTIONAL_HEADER_PTR_UNION;
typedef struct _0939F1229F8A498E026AA216C4326EE0 EFI_IMAGE_RESOURCE_DIRECTORY_STRING;
typedef struct _3375147F2BA8E6E33D62D81E584F04A1 EFI_LEGACY_IRQ_PRIORITY_TABLE_ENTRY;
typedef struct _9C385296CCE56B5A1C0581870770991E EFI_LEGACY_MP_TABLE_ENTRY_INT_FLAGS;
typedef struct _B2DB38E900464E398875D12AA0CD3AA7 EFI_LEGACY_MP_TABLE_ENTRY_LOCAL_INT;
typedef struct _BF8F6C836D1B9317716A9CAD4CBBC55F EFI_LEGACY_MP_TABLE_ENTRY_PROCESSOR;
typedef struct _7F4B5A81DC436F502D2522D97E5F727B EFI_MEMORY_ARRAY_START_ADDRESS_DATA;
typedef struct _D9CD934CC3C6C545F069CCD64D080ECD EFI_MEMORY_ERROR_CORRECT_CAPABILITY;
typedef struct _3965C879A14F2E5509EB283A6FE477F3 EFI_MISC_HARDWARE_SECURITY_SETTINGS;
typedef struct _B6FB430ED78787DB9566EBB533F20987 EFI_MISC_TEMPERATURE_PROBE_LOCATION;
typedef struct _4F6B7C61AA4B95BEE0405A61B59E28C5 EFI_OPEN_PROTOCOL_INFORMATION_ENTRY;
typedef struct _EFI_PXE_BASE_CODE_CALLBACK_PROTOCOL EFI_PXE_BASE_CODE_CALLBACK_PROTOCOL;
typedef union _5E960B9F3D9B088E94FA007CE47725D3 EFI_SEC_PLATFORM_INFORMATION_RECORD;
typedef struct _E920D4B068B666B87BE60357AD064859 EFI_STATUS_CODE_EXCEP_EXTENDED_DATA;
typedef struct _E421FC21101E3C5915AE01ACA2277D29 EFI_STATUS_CODE_START_EXTENDED_DATA;
typedef union _B912CBA3C10871F54570C4C0430A0F81 HPET_GENERAL_CONFIGURATION_REGISTER;
typedef struct _9ABBD67895AB0764D2E108D2B502E203 MISC_BIOS_CHARACTERISTICS_EXTENSION;
typedef struct _3DFDE0F26E9B69B6378595698C0EC11B EDKII_FORM_DISPLAY_ENGINE_PROTOCOL;
typedef struct _EDKII_UFS_HOST_CONTROLLER_PROTOCOL EDKII_UFS_HOST_CONTROLLER_PROTOCOL;
typedef struct _194EC0185A34D4795B973BC338193054 EFI_ACPI_5_0_FPDT_S3_RESUME_RECORD;
typedef struct _8D29C0B06F43B4BA6E2EF385F64715D0 EFI_ACPI_5_0_MEMORY_TOPOLOGY_TABLE;
typedef struct _57F875E4AC150613E0C95D78A2DED5CD EFI_ACPI_5_0_PCCT_SUBSPACE_GENERIC;
typedef struct _F49DA75B990C47B377CE7AAC7E705BA7 EFI_ACPI_5_1_FPDT_S3_RESUME_RECORD;
typedef struct _8D29C0B06F43B4BA6E2EF385F64715D0 EFI_ACPI_5_1_MEMORY_TOPOLOGY_TABLE;
typedef struct _98C3CBED3B5D4E48EA53A4DD166EFC60 EFI_ACPI_5_1_PCCT_SUBSPACE_GENERIC;
typedef struct _D4EF77D3274B9CC082E64AAE399E0343 EFI_ACPI_6_0_FPDT_S3_RESUME_RECORD;
typedef struct _8D29C0B06F43B4BA6E2EF385F64715D0 EFI_ACPI_6_0_MEMORY_TOPOLOGY_TABLE;
typedef struct _E320AD1080A0279E564D8403C68B77A1 EFI_ACPI_6_0_NFIT_STRUCTURE_HEADER;
typedef struct _DDCCF9FCA16B0D7C5357409FD647F73F EFI_ACPI_6_0_PCCT_SUBSPACE_GENERIC;
typedef struct _0BC60492AFAA0F9B3A141CC70E8062D2 EFI_ACPI_WATCHDOG_ACTION_1_0_TABLE;
typedef struct _F948C5F68E3369377A3565AD89807131 EFI_ADAPTER_INFO_UNDI_IPV6_SUPPORT;
typedef struct _C291D47FF867C3AD0DFE4561679F9FBD EFI_CAPSULE_RESULT_VARIABLE_HEADER;
typedef struct _F6B0F99A09D21248DEB1B450B841ED43 EFI_DEVICE_PATH_FROM_TEXT_PROTOCOL;
typedef struct _38CE00742C32576C28D159A4B8278F80 EFI_DEVICE_PATH_UTILITIES_PROTOCOL;
typedef struct _EFI_DRIVER_CONFIGURATION2_PROTOCOL EFI_DRIVER_CONFIGURATION2_PROTOCOL;
typedef struct _EFI_FIRMWARE_VOLUME_BLOCK_PROTOCOL EFI_FIRMWARE_VOLUME_BLOCK_PROTOCOL;
typedef struct _E73B619D120A16C7D7701EC11EF23752 EFI_FREEFORM_SUBTYPE_GUID_SECTION2;
typedef struct _EFI_HII_IIBT_IMAGE_8BIT_TRANS_BLOCK EFI_HII_IIBT_IMAGE_8BIT_TRAN_BLOCK;
typedef struct _72D94C4FF762A2E1D25032A0037FC0CD EFI_IMAGE_RESOURCE_DIRECTORY_ENTRY;
typedef struct _CF7E90392CCD02B3DAE0DDD621D3ED79 EFI_MEMORY_32BIT_ERROR_INFORMATION;
typedef struct _185CE2990D69589CB51D6DD32266168D EFI_MEMORY_64BIT_ERROR_INFORMATION;
typedef struct _12B1457D9A7446589049CD55635FF437 EFI_MISC_CHASSIS_MANUFACTURER_DATA;
typedef struct _AFCB5824F954295B40CD424AF2C819AE EFI_MISC_POINTING_DEVICE_TYPE_DATA;
typedef struct _D75F412170960EA6ABEBFCC39AC27BD4 EFI_MISC_REMOTE_ACCESS_CONNECTIONS;
typedef struct _895648FC99DB533772AF5ED59663C429 EFI_MISC_SYSTEM_OPTION_STRING_DATA;
typedef struct _EFI_NVM_EXPRESS_PASS_THRU_PROTOCOL EFI_NVM_EXPRESS_PASS_THRU_PROTOCOL;
typedef struct _EFI_PEI_DEVICE_RECOVERY_MODULE_PPI EFI_PEI_DEVICE_RECOVERY_MODULE_PPI;
typedef struct _09D1CCD0BDB5F5092D4EB9BF52A7518F EFI_PROCESSOR_CHARACTERISTICS_DATA;
typedef struct _EFI_SHELL_DYNAMIC_COMMAND_PROTOCOL EFI_SHELL_DYNAMIC_COMMAND_PROTOCOL;
typedef struct _EFI_SMM_IO_TRAP_DISPATCH2_PROTOCOL EFI_SMM_IO_TRAP_DISPATCH2_PROTOCOL;
typedef struct _2CF69155883F5671704386E2323B7577 EFI_SMM_LOCK_BOX_PARAMETER_RESTORE;
typedef struct _5FD42F7B800E31DA07875AD4D46FD084 EFI_USB2_HC_TRANSACTION_TRANSLATOR;
typedef struct _EXTENDED_SAL_BOOT_SERVICE_PROTOCOL EXTENDED_SAL_BOOT_SERVICE_PROTOCOL;
typedef struct _FRAMEWORK_EFI_MP_SERVICES_PROTOCOL FRAMEWORK_EFI_MP_SERVICES_PROTOCOL;
typedef struct _F13DFB1F2908D67B00108220A6F85C86 SAL_PLATFORM_SPECIFIC_ERROR_RECORD;
enum _000B8FDC2AFE9859FACDBC26CE2CF0A9 {IchnMch = 0x0,IchnPme = 0x1,IchnRtcAlarm = 0x2,IchnRingIndicate = 0x3,IchnAc97Wake = 0x4,IchnSerialIrq = 0x5,IchnY2KRollover = 0x6,IchnTcoTimeout = 0x7,IchnOsTco = 0x8,IchnNmi = 0x9,IchnIntruderDetect = 0xA,IchnBiosWp = 0xB,IchnMcSmi = 0xC,IchnPmeB0 = 0xD,IchnThrmSts = 0xE,IchnSmBus = 0xF,IchnIntelUsb2 = 0x10,IchnMonSmi7 = 0x11,IchnMonSmi6 = 0x12,IchnMonSmi5 = 0x13,IchnMonSmi4 = 0x14,IchnDevTrap13 = 0x15,IchnDevTrap12 = 0x16,IchnDevTrap11 = 0x17,IchnDevTrap10 = 0x18,IchnDevTrap9 = 0x19,IchnDevTrap8 = 0x1A,IchnDevTrap7 = 0x1B,IchnDevTrap6 = 0x1C,IchnDevTrap5 = 0x1D,IchnDevTrap3 = 0x1E,IchnDevTrap2 = 0x1F,IchnDevTrap1 = 0x20,IchnDevTrap0 = 0x21,IchnIoTrap3 = 0x22,IchnIoTrap2 = 0x23,IchnIoTrap1 = 0x24,IchnIoTrap0 = 0x25,IchnPciExpress = 0x26,IchnMonitor = 0x27,IchnSpi = 0x28,IchnQRT = 0x29,IchnGpioUnlock = 0x2A,NUM_ICHN_TYPES = 0x2B,};
struct _001DB780DBF46CC1B2DAFABB65012B21 {unsigned __int8 IntNo : 2;unsigned __int8 Dev : 5;unsigned __int8 Reserved : 1;};
enum _0033834A84128E2393CD9DDEED42A2D5 {EfiPeiPciCfgWidthUint8 = 0x0,EfiPeiPciCfgWidthUint16 = 0x1,EfiPeiPciCfgWidthUint32 = 0x2,EfiPeiPciCfgWidthUint64 = 0x3,EfiPeiPciCfgWidthMaximum = 0x4,};
enum _00CD51EA23DA02A6335B930C5DCB15CA {Dhcp6SendSolicit = 0x0,Dhcp6RcvdAdvertise = 0x1,Dhcp6SelectAdvertise = 0x2,Dhcp6SendRequest = 0x3,Dhcp6RcvdReply = 0x4,Dhcp6RcvdReconfigure = 0x5,Dhcp6SendDecline = 0x6,Dhcp6SendConfirm = 0x7,Dhcp6SendRelease = 0x8,Dhcp6EnterRenewing = 0x9,Dhcp6EnterRebinding = 0xA,};
enum _02994B86F73C38215FD183C71F1ACB19 {PortConnectorTypeNone = 0x0,PortConnectorTypeCentronics = 0x1,PortConnectorTypeMiniCentronics = 0x2,PortConnectorTypeProprietary = 0x3,PortConnectorTypeDB25Male = 0x4,PortConnectorTypeDB25Female = 0x5,PortConnectorTypeDB15Male = 0x6,PortConnectorTypeDB15Female = 0x7,PortConnectorTypeDB9Male = 0x8,PortConnectorTypeDB9Female = 0x9,PortConnectorTypeRJ11 = 0xA,PortConnectorTypeRJ45 = 0xB,PortConnectorType50PinMiniScsi = 0xC,PortConnectorTypeMiniDin = 0xD,PortConnectorTypeMicroDin = 0xE,PortConnectorTypePS2 = 0xF,PortConnectorTypeInfrared = 0x10,PortConnectorTypeHpHil = 0x11,PortConnectorTypeUsb = 0x12,PortConnectorTypeSsaScsi = 0x13,PortConnectorTypeCircularDin8Male = 0x14,PortConnectorTypeCircularDin8Female = 0x15,PortConnectorTypeOnboardIde = 0x16,PortConnectorTypeOnboardFloppy = 0x17,PortConnectorType9PinDualInline = 0x18,PortConnectorType25PinDualInline = 0x19,PortConnectorType50PinDualInline = 0x1A,PortConnectorType68PinDualInline = 0x1B,PortConnectorTypeOnboardSoundInput = 0x1C,PortConnectorTypeMiniCentronicsType14 = 0x1D,PortConnectorTypeMiniCentronicsType26 = 0x1E,PortConnectorTypeHeadPhoneMiniJack = 0x1F,PortConnectorTypeBNC = 0x20,PortConnectorType1394 = 0x21,PortConnectorTypeSasSata = 0x22,PortConnectorTypePC98 = 0xA0,PortConnectorTypePC98Hireso = 0xA1,PortConnectorTypePCH98 = 0xA2,PortConnectorTypePC98Note = 0xA3,PortConnectorTypePC98Full = 0xA4,PortConnectorTypeOther = 0xFF,};
enum _03EC270267062BE4976661435C718E29 {ProcessorFamilyOther = 0x1,ProcessorFamilyUnknown = 0x2,ProcessorFamily8086 = 0x3,ProcessorFamily80286 = 0x4,ProcessorFamilyIntel386 = 0x5,ProcessorFamilyIntel486 = 0x6,ProcessorFamily8087 = 0x7,ProcessorFamily80287 = 0x8,ProcessorFamily80387 = 0x9,ProcessorFamily80487 = 0xA,ProcessorFamilyPentium = 0xB,ProcessorFamilyPentiumPro = 0xC,ProcessorFamilyPentiumII = 0xD,ProcessorFamilyPentiumMMX = 0xE,ProcessorFamilyCeleron = 0xF,ProcessorFamilyPentiumIIXeon = 0x10,ProcessorFamilyPentiumIII = 0x11,ProcessorFamilyM1 = 0x12,ProcessorFamilyM2 = 0x13,ProcessorFamilyIntelCeleronM = 0x14,ProcessorFamilyIntelPentium4Ht = 0x15,ProcessorFamilyAmdDuron = 0x18,ProcessorFamilyK5 = 0x19,ProcessorFamilyK6 = 0x1A,ProcessorFamilyK6_2 = 0x1B,ProcessorFamilyK6_3 = 0x1C,ProcessorFamilyAmdAthlon = 0x1D,ProcessorFamilyAmd29000 = 0x1E,ProcessorFamilyK6_2Plus = 0x1F,ProcessorFamilyPowerPC = 0x20,ProcessorFamilyPowerPC601 = 0x21,ProcessorFamilyPowerPC603 = 0x22,ProcessorFamilyPowerPC603Plus = 0x23,ProcessorFamilyPowerPC604 = 0x24,ProcessorFamilyPowerPC620 = 0x25,ProcessorFamilyPowerPCx704 = 0x26,ProcessorFamilyPowerPC750 = 0x27,ProcessorFamilyIntelCoreDuo = 0x28,ProcessorFamilyIntelCoreDuoMobile = 0x29,ProcessorFamilyIntelCoreSoloMobile = 0x2A,ProcessorFamilyIntelAtom = 0x2B,ProcessorFamilyIntelCoreM = 0x2C,ProcessorFamilyAlpha = 0x30,ProcessorFamilyAlpha21064 = 0x31,ProcessorFamilyAlpha21066 = 0x32,ProcessorFamilyAlpha21164 = 0x33,ProcessorFamilyAlpha21164PC = 0x34,ProcessorFamilyAlpha21164a = 0x35,ProcessorFamilyAlpha21264 = 0x36,ProcessorFamilyAlpha21364 = 0x37,ProcessorFamilyAmdTurionIIUltraDualCoreMobileM = 0x38,ProcessorFamilyAmdTurionIIDualCoreMobileM = 0x39,ProcessorFamilyAmdAthlonIIDualCoreM = 0x3A,ProcessorFamilyAmdOpteron6100Series = 0x3B,ProcessorFamilyAmdOpteron4100Series = 0x3C,ProcessorFamilyAmdOpteron6200Series = 0x3D,ProcessorFamilyAmdOpteron4200Series = 0x3E,ProcessorFamilyAmdFxSeries = 0x3F,ProcessorFamilyMips = 0x40,ProcessorFamilyMIPSR4000 = 0x41,ProcessorFamilyMIPSR4200 = 0x42,ProcessorFamilyMIPSR4400 = 0x43,ProcessorFamilyMIPSR4600 = 0x44,ProcessorFamilyMIPSR10000 = 0x45,ProcessorFamilyAmdCSeries = 0x46,ProcessorFamilyAmdESeries = 0x47,ProcessorFamilyAmdASeries = 0x48,ProcessorFamilyAmdGSeries = 0x49,ProcessorFamilyAmdZSeries = 0x4A,ProcessorFamilyAmdRSeries = 0x4B,ProcessorFamilyAmdOpteron4300 = 0x4C,ProcessorFamilyAmdOpteron6300 = 0x4D,ProcessorFamilyAmdOpteron3300 = 0x4E,ProcessorFamilyAmdFireProSeries = 0x4F,ProcessorFamilySparc = 0x50,ProcessorFamilySuperSparc = 0x51,ProcessorFamilymicroSparcII = 0x52,ProcessorFamilymicroSparcIIep = 0x53,ProcessorFamilyUltraSparc = 0x54,ProcessorFamilyUltraSparcII = 0x55,ProcessorFamilyUltraSparcIii = 0x56,ProcessorFamilyUltraSparcIII = 0x57,ProcessorFamilyUltraSparcIIIi = 0x58,ProcessorFamily68040 = 0x60,ProcessorFamily68xxx = 0x61,ProcessorFamily68000 = 0x62,ProcessorFamily68010 = 0x63,ProcessorFamily68020 = 0x64,ProcessorFamily68030 = 0x65,ProcessorFamilyAmdAthlonX4QuadCore = 0x66,ProcessorFamilyAmdOpteronX1000Series = 0x67,ProcessorFamilyAmdOpteronX2000Series = 0x68,ProcessorFamilyHobbit = 0x70,ProcessorFamilyCrusoeTM5000 = 0x78,ProcessorFamilyCrusoeTM3000 = 0x79,ProcessorFamilyEfficeonTM8000 = 0x7A,ProcessorFamilyWeitek = 0x80,ProcessorFamilyItanium = 0x82,ProcessorFamilyAmdAthlon64 = 0x83,ProcessorFamilyAmdOpteron = 0x84,ProcessorFamilyAmdSempron = 0x85,ProcessorFamilyAmdTurion64Mobile = 0x86,ProcessorFamilyDualCoreAmdOpteron = 0x87,ProcessorFamilyAmdAthlon64X2DualCore = 0x88,ProcessorFamilyAmdTurion64X2Mobile = 0x89,ProcessorFamilyQuadCoreAmdOpteron = 0x8A,ProcessorFamilyThirdGenerationAmdOpteron = 0x8B,ProcessorFamilyAmdPhenomFxQuadCore = 0x8C,ProcessorFamilyAmdPhenomX4QuadCore = 0x8D,ProcessorFamilyAmdPhenomX2DualCore = 0x8E,ProcessorFamilyAmdAthlonX2DualCore = 0x8F,ProcessorFamilyPARISC = 0x90,ProcessorFamilyPaRisc8500 = 0x91,ProcessorFamilyPaRisc8000 = 0x92,ProcessorFamilyPaRisc7300LC = 0x93,ProcessorFamilyPaRisc7200 = 0x94,ProcessorFamilyPaRisc7100LC = 0x95,ProcessorFamilyPaRisc7100 = 0x96,ProcessorFamilyV30 = 0xA0,ProcessorFamilyQuadCoreIntelXeon3200Series = 0xA1,ProcessorFamilyDualCoreIntelXeon3000Series = 0xA2,ProcessorFamilyQuadCoreIntelXeon5300Series = 0xA3,ProcessorFamilyDualCoreIntelXeon5100Series = 0xA4,ProcessorFamilyDualCoreIntelXeon5000Series = 0xA5,ProcessorFamilyDualCoreIntelXeonLV = 0xA6,ProcessorFamilyDualCoreIntelXeonULV = 0xA7,ProcessorFamilyDualCoreIntelXeon7100Series = 0xA8,ProcessorFamilyQuadCoreIntelXeon5400Series = 0xA9,ProcessorFamilyQuadCoreIntelXeon = 0xAA,ProcessorFamilyDualCoreIntelXeon5200Series = 0xAB,ProcessorFamilyDualCoreIntelXeon7200Series = 0xAC,ProcessorFamilyQuadCoreIntelXeon7300Series = 0xAD,ProcessorFamilyQuadCoreIntelXeon7400Series = 0xAE,ProcessorFamilyMultiCoreIntelXeon7400Series = 0xAF,ProcessorFamilyPentiumIIIXeon = 0xB0,ProcessorFamilyPentiumIIISpeedStep = 0xB1,ProcessorFamilyPentium4 = 0xB2,ProcessorFamilyIntelXeon = 0xB3,ProcessorFamilyAS400 = 0xB4,ProcessorFamilyIntelXeonMP = 0xB5,ProcessorFamilyAMDAthlonXP = 0xB6,ProcessorFamilyAMDAthlonMP = 0xB7,ProcessorFamilyIntelItanium2 = 0xB8,ProcessorFamilyIntelPentiumM = 0xB9,ProcessorFamilyIntelCeleronD = 0xBA,ProcessorFamilyIntelPentiumD = 0xBB,ProcessorFamilyIntelPentiumEx = 0xBC,ProcessorFamilyIntelCoreSolo = 0xBD,ProcessorFamilyReserved = 0xBE,ProcessorFamilyIntelCore2 = 0xBF,ProcessorFamilyIntelCore2Solo = 0xC0,ProcessorFamilyIntelCore2Extreme = 0xC1,ProcessorFamilyIntelCore2Quad = 0xC2,ProcessorFamilyIntelCore2ExtremeMobile = 0xC3,ProcessorFamilyIntelCore2DuoMobile = 0xC4,ProcessorFamilyIntelCore2SoloMobile = 0xC5,ProcessorFamilyIntelCoreI7 = 0xC6,ProcessorFamilyDualCoreIntelCeleron = 0xC7,ProcessorFamilyIBM390 = 0xC8,ProcessorFamilyG4 = 0xC9,ProcessorFamilyG5 = 0xCA,ProcessorFamilyG6 = 0xCB,ProcessorFamilyzArchitecture = 0xCC,ProcessorFamilyIntelCoreI5 = 0xCD,ProcessorFamilyIntelCoreI3 = 0xCE,ProcessorFamilyViaC7M = 0xD2,ProcessorFamilyViaC7D = 0xD3,ProcessorFamilyViaC7 = 0xD4,ProcessorFamilyViaEden = 0xD5,ProcessorFamilyMultiCoreIntelXeon = 0xD6,ProcessorFamilyDualCoreIntelXeon3Series = 0xD7,ProcessorFamilyQuadCoreIntelXeon3Series = 0xD8,ProcessorFamilyViaNano = 0xD9,ProcessorFamilyDualCoreIntelXeon5Series = 0xDA,ProcessorFamilyQuadCoreIntelXeon5Series = 0xDB,ProcessorFamilyDualCoreIntelXeon7Series = 0xDD,ProcessorFamilyQuadCoreIntelXeon7Series = 0xDE,ProcessorFamilyMultiCoreIntelXeon7Series = 0xDF,ProcessorFamilyMultiCoreIntelXeon3400Series = 0xE0,ProcessorFamilyAmdOpteron3000Series = 0xE4,ProcessorFamilyAmdSempronII = 0xE5,ProcessorFamilyEmbeddedAmdOpteronQuadCore = 0xE6,ProcessorFamilyAmdPhenomTripleCore = 0xE7,ProcessorFamilyAmdTurionUltraDualCoreMobile = 0xE8,ProcessorFamilyAmdTurionDualCoreMobile = 0xE9,ProcessorFamilyAmdAthlonDualCore = 0xEA,ProcessorFamilyAmdSempronSI = 0xEB,ProcessorFamilyAmdPhenomII = 0xEC,ProcessorFamilyAmdAthlonII = 0xED,ProcessorFamilySixCoreAmdOpteron = 0xEE,ProcessorFamilyAmdSempronM = 0xEF,ProcessorFamilyi860 = 0xFA,ProcessorFamilyi960 = 0xFB,ProcessorFamilyIndicatorFamily2 = 0xFE,ProcessorFamilyReserved1 = 0xFF,};
struct _05683FAC1D9C40DFEA2926E525216607 {unsigned __int64 First : 1;unsigned __int64 Last : 1;unsigned __int64 EntryCount : 16;unsigned __int64 DispatchedCount : 16;unsigned __int64 Reserved : 30;};
struct _060F4871B65A64695C5E0D6D3EA0B10A {unsigned __int64 CoreId : 4;unsigned __int64 ThreadId : 4;unsigned __int64 InfoOfInsCache : 4;unsigned __int64 InfoOfDataCache : 4;unsigned __int64 InfoOfInsTlb : 4;unsigned __int64 InfoOfDataTlb : 4;unsigned __int64 InfoOfProcessorBus : 4;unsigned __int64 InfoOfRegisterFile : 4;unsigned __int64 InfoOfMicroArch : 4;unsigned __int64 Reserved : 16;};
struct _063BD0316AECCE23EF45CE76FCEFE8DB {unsigned __int64 IsUnified : 1;unsigned __int64 Attributes : 2;unsigned __int64 Associativity : 8;unsigned __int64 LineSize : 8;unsigned __int64 Stride : 8;unsigned __int64 StoreLatency : 8;unsigned __int64 StoreHint : 8;unsigned __int64 LoadHint : 8;};
enum _06440B68A3B4721AC350D846B5332791 {EfiLegacyMpTableEntryIoIntFlagsPolaritySpec = 0x0,EfiLegacyMpTableEntryIoIntFlagsPolarityActiveHigh = 0x1,EfiLegacyMpTableEntryIoIntFlagsPolarityReserved = 0x2,EfiLegacyMpTableEntryIoIntFlagsPolarityActiveLow = 0x3,};
struct _0831F8F0C244ACA3C5EEA0CD710FB4C5 {unsigned __int16 Other : 1;unsigned __int16 Unknown : 1;unsigned __int16 Standard : 1;unsigned __int16 FastPageMode : 1;unsigned __int16 Edo : 1;unsigned __int16 Parity : 1;unsigned __int16 Ecc : 1;unsigned __int16 Simm : 1;unsigned __int16 Dimm : 1;unsigned __int16 BurstEdo : 1;unsigned __int16 Sdram : 1;unsigned __int16 Reserved : 5;};
struct _09D1CCD0BDB5F5092D4EB9BF52A7518F {unsigned __int16 Reserved : 1;unsigned __int16 Unknown : 1;unsigned __int16 Capable64Bit : 1;unsigned __int16 Reserved2 : 13;};
enum _0A2D597227BE843C2A1491F5548450A0 {EfiPortTypeNone = 0x0,EfiPortTypeParallelXtAtCompatible = 0x1,EfiPortTypeParallelPortPs2 = 0x2,EfiPortTypeParallelPortEcp = 0x3,EfiPortTypeParallelPortEpp = 0x4,EfiPortTypeParallelPortEcpEpp = 0x5,EfiPortTypeSerialXtAtCompatible = 0x6,EfiPortTypeSerial16450Compatible = 0x7,EfiPortTypeSerial16550Compatible = 0x8,EfiPortTypeSerial16550ACompatible = 0x9,EfiPortTypeScsi = 0xA,EfiPortTypeMidi = 0xB,EfiPortTypeJoyStick = 0xC,EfiPortTypeKeyboard = 0xD,EfiPortTypeMouse = 0xE,EfiPortTypeSsaScsi = 0xF,EfiPortTypeUsb = 0x10,EfiPortTypeFireWire = 0x11,EfiPortTypePcmciaTypeI = 0x12,EfiPortTypePcmciaTypeII = 0x13,EfiPortTypePcmciaTypeIII = 0x14,EfiPortTypeCardBus = 0x15,EfiPortTypeAccessBusPort = 0x16,EfiPortTypeScsiII = 0x17,EfiPortTypeScsiWide = 0x18,EfiPortTypePC98 = 0x19,EfiPortTypePC98Hireso = 0x1A,EfiPortTypePCH98 = 0x1B,EfiPortTypeVideoPort = 0x1C,EfiPortTypeAudioPort = 0x1D,EfiPortTypeModemPort = 0x1E,EfiPortTypeNetworkPort = 0x1F,EfiPortType8251Compatible = 0xA0,EfiPortType8251FifoCompatible = 0xA1,EfiPortTypeOther = 0xFF,};
enum _0AACAB9A86E79AB7BCD3F235EC115E8A {Dhcp4SendDiscover = 0x1,Dhcp4RcvdOffer = 0x2,Dhcp4SelectOffer = 0x3,Dhcp4SendRequest = 0x4,Dhcp4RcvdAck = 0x5,Dhcp4RcvdNak = 0x6,Dhcp4SendDecline = 0x7,Dhcp4BoundCompleted = 0x8,Dhcp4EnterRenewing = 0x9,Dhcp4EnterRebinding = 0xA,Dhcp4AddressLost = 0xB,Dhcp4Fail = 0xC,};
enum _0BEF523315D4FECD384FE4F849820B9F {EfiProcessorHealthy = 0x1,EfiProcessorPerfRestricted = 0x2,EfiProcessorFuncRestricted = 0x3,};
struct _0C2D9EAA83889452A7A72FC6A5E83CA9 {unsigned __int32 TPMA_NV_PPWRITE : 1;unsigned __int32 TPMA_NV_OWNERWRITE : 1;unsigned __int32 TPMA_NV_AUTHWRITE : 1;unsigned __int32 TPMA_NV_POLICYWRITE : 1;unsigned __int32 TPMA_NV_COUNTER : 1;unsigned __int32 TPMA_NV_BITS : 1;unsigned __int32 TPMA_NV_EXTEND : 1;unsigned __int32 reserved7_9 : 3;unsigned __int32 TPMA_NV_POLICY_DELETE : 1;unsigned __int32 TPMA_NV_WRITELOCKED : 1;unsigned __int32 TPMA_NV_WRITEALL : 1;unsigned __int32 TPMA_NV_WRITEDEFINE : 1;unsigned __int32 TPMA_NV_WRITE_STCLEAR : 1;unsigned __int32 TPMA_NV_GLOBALLOCK : 1;unsigned __int32 TPMA_NV_PPREAD : 1;unsigned __int32 TPMA_NV_OWNERREAD : 1;unsigned __int32 TPMA_NV_AUTHREAD : 1;unsigned __int32 TPMA_NV_POLICYREAD : 1;unsigned __int32 reserved20_24 : 5;unsigned __int32 TPMA_NV_NO_DA : 1;unsigned __int32 TPMA_NV_ORDERLY : 1;unsigned __int32 TPMA_NV_CLEAR_STCLEAR : 1;unsigned __int32 TPMA_NV_READLOCKED : 1;unsigned __int32 TPMA_NV_WRITTEN : 1;unsigned __int32 TPMA_NV_PLATFORMCREATE : 1;unsigned __int32 TPMA_NV_READ_STCLEAR : 1;};
enum _0D01614F9FC570E709142F7CFE9AB402 {EfiBadgingFormatBMP = 0x0,EfiBadgingFormatJPEG = 0x1,EfiBadgingFormatTIFF = 0x2,EfiBadgingFormatGIF = 0x3,EfiBadgingFormatUnknown = 0x4,};
enum _0D5FF9D6AC426DC3594861BEDA2B4F3A {EfiPciHotPlugRequestAdd = 0x0,EfiPciHotplugRequestRemove = 0x1,};
struct _0D9BB19242CFE021E4211F1789A11B8C {unsigned __int8 CharacteristicsUnknown : 1;unsigned __int8 Provides50Volts : 1;unsigned __int8 Provides33Volts : 1;unsigned __int8 SharedSlot : 1;unsigned __int8 PcCard16Supported : 1;unsigned __int8 CardBusSupported : 1;unsigned __int8 ZoomVideoSupported : 1;unsigned __int8 ModemRingResumeSupported : 1;};
enum _0DD11FF58B6E35659433583402DDC02E {EfiIpmiOther = 0x0,EfiIpmiKcs = 0x1,EfiIpmiSmic = 0x2,EfiIpmiBt = 0x3,};
enum _0E25DA482AC46FD7BEDA46D0A70987D3 {ReadFunctionId = 0x0,WriteFunctionId = 0x1,EraseBlockFunctionId = 0x2,GetVolumeAttributesFunctionId = 0x3,SetVolumeAttributesFunctionId = 0x4,GetPhysicalAddressFunctionId = 0x5,GetBlockSizeFunctionId = 0x6,};
struct _0EADD5243AAFE5F53B0E940963814CF0 {unsigned __int32 ProcessorFpu : 1;unsigned __int32 ProcessorVme : 1;unsigned __int32 ProcessorDe : 1;unsigned __int32 ProcessorPse : 1;unsigned __int32 ProcessorTsc : 1;unsigned __int32 ProcessorMsr : 1;unsigned __int32 ProcessorPae : 1;unsigned __int32 ProcessorMce : 1;unsigned __int32 ProcessorCx8 : 1;unsigned __int32 ProcessorApic : 1;unsigned __int32 ProcessorReserved1 : 1;unsigned __int32 ProcessorSep : 1;unsigned __int32 ProcessorMtrr : 1;unsigned __int32 ProcessorPge : 1;unsigned __int32 ProcessorMca : 1;unsigned __int32 ProcessorCmov : 1;unsigned __int32 ProcessorPat : 1;unsigned __int32 ProcessorPse36 : 1;unsigned __int32 ProcessorPsn : 1;unsigned __int32 ProcessorClfsh : 1;unsigned __int32 ProcessorReserved2 : 1;unsigned __int32 ProcessorDs : 1;unsigned __int32 ProcessorAcpi : 1;unsigned __int32 ProcessorMmx : 1;unsigned __int32 ProcessorFxsr : 1;unsigned __int32 ProcessorSse : 1;unsigned __int32 ProcessorSse2 : 1;unsigned __int32 ProcessorSs : 1;unsigned __int32 ProcessorReserved3 : 1;unsigned __int32 ProcessorTm : 1;unsigned __int32 ProcessorReserved4 : 2;};
struct _0F2D904792B9EA847A4B26FF6B417642 {unsigned __int64 WalkerPresent : 1;unsigned __int64 WidthOfPhysicalAddress : 7;unsigned __int64 WidthOfKey : 8;unsigned __int64 MaxPkrIndex : 8;unsigned __int64 HashTagId : 8;unsigned __int64 MaxDtrIndex : 8;unsigned __int64 MaxItrIndex : 8;unsigned __int64 NumberOfUniqueTc : 8;unsigned __int64 NumberOfTcLevels : 8;};
enum _0FE351ACE328F42981821B05E750A0C4 {EfiPlatformHookPrepareToScanRom = 0x0,EfiPlatformHookShadowServiceRoms = 0x1,EfiPlatformHookAfterRomInit = 0x2,};
struct _0FEA5F6D88E10CE3051A04985473800C {unsigned __int16 Type : 1;unsigned __int16 PollInterval : 1;unsigned __int16 SwitchToPollingThresholdValue : 1;unsigned __int16 SwitchToPollingThresholdWindow : 1;unsigned __int16 ErrorThresholdValue : 1;unsigned __int16 ErrorThresholdWindow : 1;unsigned __int16 Reserved : 10;};
enum _11CA649B97EFEADE1045E3AB5C58033C {EfiLegacyMpTableEntryIoIntFlagsTriggerSpec = 0x0,EfiLegacyMpTableEntryIoIntFlagsTriggerEdge = 0x1,EfiLegacyMpTableEntryIoIntFlagsTriggerReserved = 0x2,EfiLegacyMpTableEntryIoIntFlagsTriggerLevel = 0x3,};
enum _12A31AB23B90DFF7A19F8CE42F29D75A {MemoryErrorCorrectionOther = 0x1,MemoryErrorCorrectionUnknown = 0x2,MemoryErrorCorrectionNone = 0x3,MemoryErrorCorrectionParity = 0x4,MemoryErrorCorrectionSingleBitEcc = 0x5,MemoryErrorCorrectionMultiBitEcc = 0x6,MemoryErrorCorrectionCrc = 0x7,};
enum _1379702E921F74395970B155E65F02EF {DisassociateSuccess = 0x0,DisassociateInvalidParameters = 0x1,};
enum _14B987FA633863A28E054DFB8DB4E065 {Tcp6StateClosed = 0x0,Tcp6StateListen = 0x1,Tcp6StateSynSent = 0x2,Tcp6StateSynReceived = 0x3,Tcp6StateEstablished = 0x4,Tcp6StateFinWait1 = 0x5,Tcp6StateFinWait2 = 0x6,Tcp6StateClosing = 0x7,Tcp6StateTimeWait = 0x8,Tcp6StateCloseWait = 0x9,Tcp6StateLastAck = 0xA,};
enum _158B7C82DAF37FC42835E46CA89A8D66 {IPsecConfigDataTypeSpd = 0x0,IPsecConfigDataTypeSad = 0x1,IPsecConfigDataTypePad = 0x2,IPsecConfigDataTypeMaximum = 0x3,};
enum _15C2A3468736860E3AEA9A63B4F246BE {EsalGetVariableFunctionId = 0x0,EsalGetNextVariableNameFunctionId = 0x1,EsalSetVariableFunctionId = 0x2,EsalQueryVariableInfoFunctionId = 0x3,};
enum _161F4614949C29B67504D8F745914594 {ChassisSecurityStatusOther = 0x1,ChassisSecurityStatusUnknown = 0x2,ChassisSecurityStatusNone = 0x3,ChassisSecurityStatusExternalInterfaceLockedOut = 0x4,ChassisSecurityStatusExternalInterfaceLockedEnabled = 0x5,};
enum _16F73C42F6A89E727B0F2D676F240B4F {EfiIPsecAH = 0x0,EfiIPsecESP = 0x1,};
struct _17B0DA9AD07A993BB3BF88A240BF391B {unsigned __int32 RecordType : 1;unsigned __int32 Type : 7;unsigned __int32 Reserved : 24;};
struct _180AF0FF73D9B657F0CEB8E21576AB99 {unsigned __int32 DataBits : 8;unsigned __int32 TagProtLsb : 6;unsigned __int32 TagProtMsb : 6;unsigned __int32 ProtBits : 6;unsigned __int32 Method : 4;unsigned __int32 TagOrData : 2;};
enum _180B1A9830BC5A37D13765BCC0DC0850 {EfiGcdIoTypeNonExistent = 0x0,EfiGcdIoTypeReserved = 0x1,EfiGcdIoTypeIo = 0x2,EfiGcdIoTypeMaximum = 0x3,};
enum _18F9C5178A01E4F7F7884FC55391B020 {S3BootScriptWidthUint8 = 0x0,S3BootScriptWidthUint16 = 0x1,S3BootScriptWidthUint32 = 0x2,S3BootScriptWidthUint64 = 0x3,S3BootScriptWidthFifoUint8 = 0x4,S3BootScriptWidthFifoUint16 = 0x5,S3BootScriptWidthFifoUint32 = 0x6,S3BootScriptWidthFifoUint64 = 0x7,S3BootScriptWidthFillUint8 = 0x8,S3BootScriptWidthFillUint16 = 0x9,S3BootScriptWidthFillUint32 = 0xA,S3BootScriptWidthFillUint64 = 0xB,S3BootScriptWidthMaximum = 0xC,};
enum _1917AE24BB1D9C4633175E8C3AC0F71B {EfiBootScriptWidthUint8 = 0x0,EfiBootScriptWidthUint16 = 0x1,EfiBootScriptWidthUint32 = 0x2,EfiBootScriptWidthUint64 = 0x3,EfiBootScriptWidthFifoUint8 = 0x4,EfiBootScriptWidthFifoUint16 = 0x5,EfiBootScriptWidthFifoUint32 = 0x6,EfiBootScriptWidthFifoUint64 = 0x7,EfiBootScriptWidthFillUint8 = 0x8,EfiBootScriptWidthFillUint16 = 0x9,EfiBootScriptWidthFillUint32 = 0xA,EfiBootScriptWidthFillUint64 = 0xB,EfiBootScriptWidthMaximum = 0xC,};
enum _194506F6037DE6F792F5AE6DB7307C59 {PixelRedGreenBlueReserved8BitPerColor = 0x0,PixelBlueGreenRedReserved8BitPerColor = 0x1,PixelBitMask = 0x2,PixelBltOnly = 0x3,PixelFormatMax = 0x4,};
enum _194BDA72BA78BC5F9316B64E71EA655D {EfiMemoryErrorOperationOther = 0x1,EfiMemoryErrorOperationUnknown = 0x2,EfiMemoryErrorOperationRead = 0x3,EfiMemoryErrorOperationWrite = 0x4,EfiMemoryErrorOperationPartialWrite = 0x5,};
struct _19F190913E875776DB98D900DE592887 {unsigned __int64 Operation : 4;unsigned __int64 FailedCacheLevel : 2;unsigned __int64 Reserved1 : 2;unsigned __int64 FailedInDataPart : 1;unsigned __int64 FailedInTagPart : 1;unsigned __int64 FailedInDataCache : 1;unsigned __int64 FailedInInsCache : 1;unsigned __int64 Mesi : 3;unsigned __int64 MesiIsValid : 1;unsigned __int64 FailedWay : 5;unsigned __int64 WayIndexIsValid : 1;unsigned __int64 Reserved2 : 1;unsigned __int64 MultipleBitsError : 1;unsigned __int64 Reserved3 : 8;unsigned __int64 IndexOfCacheLineError : 20;unsigned __int64 Reserved4 : 2;unsigned __int64 InstructionSet : 1;unsigned __int64 InstructionSetIsValid : 1;unsigned __int64 PrivilegeLevel : 2;unsigned __int64 PrivilegeLevelIsValide : 1;unsigned __int64 McCorrected : 1;unsigned __int64 TargetAddressIsValid : 1;unsigned __int64 RequesterIdentifier : 1;unsigned __int64 ResponserIdentifier : 1;unsigned __int64 PreciseInsPointer : 1;};
struct _1AA13847B05D77E669FEE563F5BAB3FD {unsigned __int64 Reserved1 : 8;unsigned __int64 Opcode : 1;unsigned __int64 Reserved : 53;};
enum _1B347F0DD01B07107620DCF9F689723D {EFI_SMM_SAVE_STATE_IO_TYPE_INPUT = 0x1,EFI_SMM_SAVE_STATE_IO_TYPE_OUTPUT = 0x2,EFI_SMM_SAVE_STATE_IO_TYPE_STRING = 0x4,EFI_SMM_SAVE_STATE_IO_TYPE_REP_PREFIX = 0x8,};
enum _1C79ECC146A1E268509C5BA410F9B8F8 {EfiSlotDataBusWidthOther = 0x1,EfiSlotDataBusWidthUnknown = 0x2,EfiSlotDataBusWidth8Bit = 0x3,EfiSlotDataBusWidth16Bit = 0x4,EfiSlotDataBusWidth32Bit = 0x5,EfiSlotDataBusWidth64Bit = 0x6,EfiSlotDataBusWidth128Bit = 0x7,EfiSlotDataBusWidth1xOrx1 = 0x8,EfiSlotDataBusWidth2xOrx2 = 0x9,EfiSlotDataBusWidth4xOrx4 = 0xA,EfiSlotDataBusWidth8xOrx8 = 0xB,EfiSlotDataBusWidth12xOrx12 = 0xC,EfiSlotDataBusWidth16xOrx16 = 0xD,EfiSlotDataBusWidth32xOrx32 = 0xE,};
struct _1D079842E3EC7F9F45FFA256EC54E3EF {unsigned __int8 InstalledOrEnabledSize : 7;unsigned __int8 SingleOrDoubleBank : 1;};
enum _1D5AFB93174D0399D902A9406F3A0A82 {StallFunctionId = 0x0,};
enum _1DC6B36EFBE479CBF3593267246738D8 {EfiKeyLCtrl = 0x0,EfiKeyA0 = 0x1,EfiKeyLAlt = 0x2,EfiKeySpaceBar = 0x3,EfiKeyA2 = 0x4,EfiKeyA3 = 0x5,EfiKeyA4 = 0x6,EfiKeyRCtrl = 0x7,EfiKeyLeftArrow = 0x8,EfiKeyDownArrow = 0x9,EfiKeyRightArrow = 0xA,EfiKeyZero = 0xB,EfiKeyPeriod = 0xC,EfiKeyEnter = 0xD,EfiKeyLShift = 0xE,EfiKeyB0 = 0xF,EfiKeyB1 = 0x10,EfiKeyB2 = 0x11,EfiKeyB3 = 0x12,EfiKeyB4 = 0x13,EfiKeyB5 = 0x14,EfiKeyB6 = 0x15,EfiKeyB7 = 0x16,EfiKeyB8 = 0x17,EfiKeyB9 = 0x18,EfiKeyB10 = 0x19,EfiKeyRShift = 0x1A,EfiKeyUpArrow = 0x1B,EfiKeyOne = 0x1C,EfiKeyTwo = 0x1D,EfiKeyThree = 0x1E,EfiKeyCapsLock = 0x1F,EfiKeyC1 = 0x20,EfiKeyC2 = 0x21,EfiKeyC3 = 0x22,EfiKeyC4 = 0x23,EfiKeyC5 = 0x24,EfiKeyC6 = 0x25,EfiKeyC7 = 0x26,EfiKeyC8 = 0x27,EfiKeyC9 = 0x28,EfiKeyC10 = 0x29,EfiKeyC11 = 0x2A,EfiKeyC12 = 0x2B,EfiKeyFour = 0x2C,EfiKeyFive = 0x2D,EfiKeySix = 0x2E,EfiKeyPlus = 0x2F,EfiKeyTab = 0x30,EfiKeyD1 = 0x31,EfiKeyD2 = 0x32,EfiKeyD3 = 0x33,EfiKeyD4 = 0x34,EfiKeyD5 = 0x35,EfiKeyD6 = 0x36,EfiKeyD7 = 0x37,EfiKeyD8 = 0x38,EfiKeyD9 = 0x39,EfiKeyD10 = 0x3A,EfiKeyD11 = 0x3B,EfiKeyD12 = 0x3C,EfiKeyD13 = 0x3D,EfiKeyDel = 0x3E,EfiKeyEnd = 0x3F,EfiKeyPgDn = 0x40,EfiKeySeven = 0x41,EfiKeyEight = 0x42,EfiKeyNine = 0x43,EfiKeyE0 = 0x44,EfiKeyE1 = 0x45,EfiKeyE2 = 0x46,EfiKeyE3 = 0x47,EfiKeyE4 = 0x48,EfiKeyE5 = 0x49,EfiKeyE6 = 0x4A,EfiKeyE7 = 0x4B,EfiKeyE8 = 0x4C,EfiKeyE9 = 0x4D,EfiKeyE10 = 0x4E,EfiKeyE11 = 0x4F,EfiKeyE12 = 0x50,EfiKeyBackSpace = 0x51,EfiKeyIns = 0x52,EfiKeyHome = 0x53,EfiKeyPgUp = 0x54,EfiKeyNLck = 0x55,EfiKeySlash = 0x56,EfiKeyAsterisk = 0x57,EfiKeyMinus = 0x58,EfiKeyEsc = 0x59,EfiKeyF1 = 0x5A,EfiKeyF2 = 0x5B,EfiKeyF3 = 0x5C,EfiKeyF4 = 0x5D,EfiKeyF5 = 0x5E,EfiKeyF6 = 0x5F,EfiKeyF7 = 0x60,EfiKeyF8 = 0x61,EfiKeyF9 = 0x62,EfiKeyF10 = 0x63,EfiKeyF11 = 0x64,EfiKeyF12 = 0x65,EfiKeyPrint = 0x66,EfiKeySLck = 0x67,EfiKeyPause = 0x68,};
struct _1E1CF64703927002B617103938E22FA5 {unsigned __int32 sharedRAM : 1;unsigned __int32 sharedNV : 1;unsigned __int32 objectCopiedToRam : 1;unsigned __int32 reserved3_31 : 29;};
enum _1EB0B297BD0425F9A7B5E8569165748D {PortableBatteryDeviceChemistryOther = 0x1,PortableBatteryDeviceChemistryUnknown = 0x2,PortableBatteryDeviceChemistryLeadAcid = 0x3,PortableBatteryDeviceChemistryNickelCadmium = 0x4,PortableBatteryDeviceChemistryNickelMetalHydride = 0x5,PortableBatteryDeviceChemistryLithiumIon = 0x6,PortableBatteryDeviceChemistryZincAir = 0x7,PortableBatteryDeviceChemistryLithiumPolymer = 0x8,};
struct _2048CF864A4EE2DE1F0239C724DBAEC4 {unsigned __int64 NumberOfPmcPairs : 8;unsigned __int64 WidthOfCounter : 8;unsigned __int64 TypeOfCycleCounting : 8;unsigned __int64 TypeOfRetiredInstructionBundle : 8;unsigned __int64 Reserved : 32;};
enum _20911B5A379DF99BE7D6E69576338BB1 {EfiProcessorFamilyOther = 0x1,EfiProcessorFamilyUnknown = 0x2,EfiProcessorFamily8086 = 0x3,EfiProcessorFamily80286 = 0x4,EfiProcessorFamilyIntel386 = 0x5,EfiProcessorFamilyIntel486 = 0x6,EfiProcessorFamily8087 = 0x7,EfiProcessorFamily80287 = 0x8,EfiProcessorFamily80387 = 0x9,EfiProcessorFamily80487 = 0xA,EfiProcessorFamilyPentium = 0xB,EfiProcessorFamilyPentiumPro = 0xC,EfiProcessorFamilyPentiumII = 0xD,EfiProcessorFamilyPentiumMMX = 0xE,EfiProcessorFamilyCeleron = 0xF,EfiProcessorFamilyPentiumIIXeon = 0x10,EfiProcessorFamilyPentiumIII = 0x11,EfiProcessorFamilyM1 = 0x12,EfiProcessorFamilyM2 = 0x13,EfiProcessorFamilyM1Reserved2 = 0x14,EfiProcessorFamilyM1Reserved3 = 0x15,EfiProcessorFamilyM1Reserved4 = 0x16,EfiProcessorFamilyM1Reserved5 = 0x17,EfiProcessorFamilyAmdDuron = 0x18,EfiProcessorFamilyK5 = 0x19,EfiProcessorFamilyK6 = 0x1A,EfiProcessorFamilyK6_2 = 0x1B,EfiProcessorFamilyK6_3 = 0x1C,EfiProcessorFamilyAmdAthlon = 0x1D,EfiProcessorFamilyAmd29000 = 0x1E,EfiProcessorFamilyK6_2Plus = 0x1F,EfiProcessorFamilyPowerPC = 0x20,EfiProcessorFamilyPowerPC601 = 0x21,EfiProcessorFamilyPowerPC603 = 0x22,EfiProcessorFamilyPowerPC603Plus = 0x23,EfiProcessorFamilyPowerPC604 = 0x24,EfiProcessorFamilyPowerPC620 = 0x25,EfiProcessorFamilyPowerPCx704 = 0x26,EfiProcessorFamilyPowerPC750 = 0x27,EfiProcessorFamilyAlpha3 = 0x30,EfiProcessorFamilyAlpha21064 = 0x31,EfiProcessorFamilyAlpha21066 = 0x32,EfiProcessorFamilyAlpha21164 = 0x33,EfiProcessorFamilyAlpha21164PC = 0x34,EfiProcessorFamilyAlpha21164a = 0x35,EfiProcessorFamilyAlpha21264 = 0x36,EfiProcessorFamilyAlpha21364 = 0x37,EfiProcessorFamilyMips = 0x40,EfiProcessorFamilyMIPSR4000 = 0x41,EfiProcessorFamilyMIPSR4200 = 0x42,EfiProcessorFamilyMIPSR4400 = 0x43,EfiProcessorFamilyMIPSR4600 = 0x44,EfiProcessorFamilyMIPSR10000 = 0x45,EfiProcessorFamilySparc = 0x50,EfiProcessorFamilySuperSparc = 0x51,EfiProcessorFamilymicroSparcII = 0x52,EfiProcessorFamilymicroSparcIIep = 0x53,EfiProcessorFamilyUltraSparc = 0x54,EfiProcessorFamilyUltraSparcII = 0x55,EfiProcessorFamilyUltraSparcIIi = 0x56,EfiProcessorFamilyUltraSparcIII = 0x57,EfiProcessorFamilyUltraSparcIIIi = 0x58,EfiProcessorFamily68040 = 0x60,EfiProcessorFamily68xxx = 0x61,EfiProcessorFamily68000 = 0x62,EfiProcessorFamily68010 = 0x63,EfiProcessorFamily68020 = 0x64,EfiProcessorFamily68030 = 0x65,EfiProcessorFamilyHobbit = 0x70,EfiProcessorFamilyCrusoeTM5000 = 0x78,EfiProcessorFamilyCrusoeTM3000 = 0x79,EfiProcessorFamilyEfficeonTM8000 = 0x7A,EfiProcessorFamilyWeitek = 0x80,EfiProcessorFamilyItanium = 0x82,EfiProcessorFamilyAmdAthlon64 = 0x83,EfiProcessorFamilyAmdOpteron = 0x84,EfiProcessorFamilyAmdSempron = 0x85,EfiProcessorFamilyAmdTurion64Mobile = 0x86,EfiProcessorFamilyDualCoreAmdOpteron = 0x87,EfiProcessorFamilyAmdAthlon64X2DualCore = 0x88,EfiProcessorFamilyAmdTurion64X2Mobile = 0x89,EfiProcessorFamilyPARISC = 0x90,EfiProcessorFamilyPaRisc8500 = 0x91,EfiProcessorFamilyPaRisc8000 = 0x92,EfiProcessorFamilyPaRisc7300LC = 0x93,EfiProcessorFamilyPaRisc7200 = 0x94,EfiProcessorFamilyPaRisc7100LC = 0x95,EfiProcessorFamilyPaRisc7100 = 0x96,EfiProcessorFamilyV30 = 0xA0,EfiProcessorFamilyPentiumIIIXeon = 0xB0,EfiProcessorFamilyPentiumIIISpeedStep = 0xB1,EfiProcessorFamilyPentium4 = 0xB2,EfiProcessorFamilyIntelXeon = 0xB3,EfiProcessorFamilyAS400 = 0xB4,EfiProcessorFamilyIntelXeonMP = 0xB5,EfiProcessorFamilyAMDAthlonXP = 0xB6,EfiProcessorFamilyAMDAthlonMP = 0xB7,EfiProcessorFamilyIntelItanium2 = 0xB8,EfiProcessorFamilyIntelPentiumM = 0xB9,EfiProcessorFamilyIntelCeleronD = 0xBA,EfiProcessorFamilyIntelPentiumD = 0xBB,EfiProcessorFamilyIntelPentiumEx = 0xBC,EfiProcessorFamilyIntelCoreSolo = 0xBD,EfiProcessorFamilyReserved = 0xBE,EfiProcessorFamilyIntelCore2 = 0xBF,EfiProcessorFamilyIBM390 = 0xC8,EfiProcessorFamilyG4 = 0xC9,EfiProcessorFamilyG5 = 0xCA,EfiProcessorFamilyG6 = 0xCB,EfiProcessorFamilyzArchitectur = 0xCC,EfiProcessorFamilyViaC7M = 0xD2,EfiProcessorFamilyViaC7D = 0xD3,EfiProcessorFamilyViaC7 = 0xD4,EfiProcessorFamilyViaEden = 0xD5,EfiProcessorFamilyi860 = 0xFA,EfiProcessorFamilyi960 = 0xFB,EfiProcessorFamilyIndicatorFamily2 = 0xFE,EfiProcessorFamilyReserved1 = 0xFF,};
enum _209431BC1AEBAC6E22AF21AEC0B3F6B8 {ScanSuccess = 0x0,ScanNotSupported = 0x1,};
enum _2130585625D2A3CCE57096BF12F3187D {EfiUgaVideoFill = 0x0,EfiUgaVideoToBltBuffer = 0x1,EfiUgaBltBufferToVideo = 0x2,EfiUgaVideoToVideo = 0x3,EfiUgaBltMax = 0x4,};
enum _22063EE454AA037E3599F362180542C3 {EfiDriverDiagnosticTypeStandard = 0x0,EfiDriverDiagnosticTypeExtended = 0x1,EfiDriverDiagnosticTypeManufacturing = 0x2,EfiDriverDiagnosticTypeCancel = 0x3,EfiDriverDiagnosticTypeMaximum = 0x4,};
enum _228D566C85106D8F19F0E86138FD6ED6 {EfiBootInformationStatusNoError = 0x0,EfiBootInformationStatusNoBootableMedia = 0x1,EfiBootInformationStatusNormalOSFailedLoading = 0x2,EfiBootInformationStatusFirmwareDetectedFailure = 0x3,EfiBootInformationStatusOSDetectedFailure = 0x4,EfiBootInformationStatusUserRequestedBoot = 0x5,EfiBootInformationStatusSystemSecurityViolation = 0x6,EfiBootInformationStatusPreviousRequestedImage = 0x7,EfiBootInformationStatusWatchdogTimerExpired = 0x8,EfiBootInformationStatusStartReserved = 0x9,EfiBootInformationStatusStartOemSpecific = 0x80,EfiBootInformationStatusStartProductSpecific = 0xC0,};
enum _229CA6925EF914F0313A9E18BFD7D26A {EfiBluetoothCallbackTypeUserPasskeyNotification = 0x0,EfiBluetoothCallbackTypeUserConfirmationRequest = 0x1,EfiBluetoothCallbackTypeOOBDataRequest = 0x2,EfiBluetoothCallbackTypePinCodeRequest = 0x3,EfiBluetoothCallbackTypeMax = 0x4,};
enum _22AC71E436D42DF8AFFA867BCD8ABD68 {EFI_NATIVE_INTERFACE = 0x0,};
enum _24774D28386496D9DEAED9FD6A8A4775 {EfiIPsecTransport = 0x0,EfiIPsecTunnel = 0x1,};
enum _253F20433F5652E4F033338CB90E3644 {EFI_SMM_SAVE_STATE_IO_WIDTH_UINT8 = 0x0,EFI_SMM_SAVE_STATE_IO_WIDTH_UINT16 = 0x1,EFI_SMM_SAVE_STATE_IO_WIDTH_UINT32 = 0x2,EFI_SMM_SAVE_STATE_IO_WIDTH_UINT64 = 0x3,};
enum _262E59A4A2C3D5C69BE970A07867D778 {WriteTrap = 0x0,ReadTrap = 0x1,ReadWriteTrap = 0x2,IoTrapTypeMaximum = 0x3,};
enum _26B151884521DA6F7B5458685F081D1C {OnBoardDeviceTypeOther = 0x1,OnBoardDeviceTypeUnknown = 0x2,OnBoardDeviceTypeVideo = 0x3,OnBoardDeviceTypeScsiController = 0x4,OnBoardDeviceTypeEthernet = 0x5,OnBoardDeviceTypeTokenRing = 0x6,OnBoardDeviceTypeSound = 0x7,OnBoardDeviceTypePATAController = 0x8,OnBoardDeviceTypeSATAController = 0x9,OnBoardDeviceTypeSASController = 0xA,};
enum _272A9DAB0DD36E1462BC3F4A77C7162B {USB_REQ_TYPE_STANDARD = 0x0,USB_REQ_TYPE_CLASS = 0x20,USB_REQ_TYPE_VENDOR = 0x40,USB_REQ_GET_STATUS = 0x0,USB_REQ_CLEAR_FEATURE = 0x1,USB_REQ_SET_FEATURE = 0x3,USB_REQ_SET_ADDRESS = 0x5,USB_REQ_GET_DESCRIPTOR = 0x6,USB_REQ_SET_DESCRIPTOR = 0x7,USB_REQ_GET_CONFIG = 0x8,USB_REQ_SET_CONFIG = 0x9,USB_REQ_GET_INTERFACE = 0xA,USB_REQ_SET_INTERFACE = 0xB,USB_REQ_SYNCH_FRAME = 0xC,USB_TARGET_DEVICE = 0x0,USB_TARGET_INTERFACE = 0x1,USB_TARGET_ENDPOINT = 0x2,USB_TARGET_OTHER = 0x3,USB_DESC_TYPE_DEVICE = 0x1,USB_DESC_TYPE_CONFIG = 0x2,USB_DESC_TYPE_STRING = 0x3,USB_DESC_TYPE_INTERFACE = 0x4,USB_DESC_TYPE_ENDPOINT = 0x5,USB_DESC_TYPE_HID = 0x21,USB_DESC_TYPE_REPORT = 0x22,USB_FEATURE_ENDPOINT_HALT = 0x0,USB_ENDPOINT_CONTROL = 0x0,USB_ENDPOINT_ISO = 0x1,USB_ENDPOINT_BULK = 0x2,USB_ENDPOINT_INTERRUPT = 0x3,USB_ENDPOINT_TYPE_MASK = 0x3,USB_ENDPOINT_DIR_IN = 0x80,EFI_USB_INTERRUPT_DELAY = 0x1E8480,};
struct _27D43449F90631E0AAF884FCC32869E8 {unsigned __int64 BufferSize : 56;unsigned __int64 TestPhase : 8;};
enum _2809477D9BE48B6D6398F34312F4748F {AddCpuDataFunctionId = 0x0,RemoveCpuDataFunctionId = 0x1,ModifyCpuDataFunctionId = 0x2,GetCpuDataByIDFunctionId = 0x3,GetCpuDataByIndexFunctionId = 0x4,SendIpiFunctionId = 0x5,CurrentProcInfoFunctionId = 0x6,NumProcessorsFunctionId = 0x7,SetMinStateFunctionId = 0x8,GetMinStateFunctionId = 0x9,};
enum _28335F8F674B121FB50F263052558627 {BootInformationStatusNoError = 0x0,BootInformationStatusNoBootableMedia = 0x1,BootInformationStatusNormalOSFailedLoading = 0x2,BootInformationStatusFirmwareDetectedFailure = 0x3,BootInformationStatusOSDetectedFailure = 0x4,BootInformationStatusUserRequestedBoot = 0x5,BootInformationStatusSystemSecurityViolation = 0x6,BootInformationStatusPreviousRequestedImage = 0x7,BootInformationStatusWatchdogTimerExpired = 0x8,BootInformationStatusStartReserved = 0x9,BootInformationStatusStartOemSpecific = 0x80,BootInformationStatusStartProductSpecific = 0xC0,};
enum _291CBADD0B451492DAB3278FD48304FE {EfiPciHostBridgeBeginEnumeration = 0x0,EfiPciHostBridgeBeginBusAllocation = 0x1,EfiPciHostBridgeEndBusAllocation = 0x2,EfiPciHostBridgeBeginResourceAllocation = 0x3,EfiPciHostBridgeAllocateResources = 0x4,EfiPciHostBridgeSetResources = 0x5,EfiPciHostBridgeFreeResources = 0x6,EfiPciHostBridgeEndResourceAllocation = 0x7,EfiPciHostBridgeEndEnumeration = 0x8,EfiMaxPciHostBridgeEnumerationPhase = 0x9,};
enum _2B741E987BCE6E75B46A72FBF4FBB2F1 {SalPciConfigReadFunctionId = 0x0,SalPciConfigWriteFunctionId = 0x1,};
enum _2BB474928AB8B1918324CF9B6F801F61 {EfiIsaIoWidthUint8 = 0x0,EfiIsaIoWidthUint16 = 0x1,EfiIsaIoWidthUint32 = 0x2,EfiIsaIoWidthReserved = 0x3,EfiIsaIoWidthFifoUint8 = 0x4,EfiIsaIoWidthFifoUint16 = 0x5,EfiIsaIoWidthFifoUint32 = 0x6,EfiIsaIoWidthFifoReserved = 0x7,EfiIsaIoWidthFillUint8 = 0x8,EfiIsaIoWidthFillUint16 = 0x9,EfiIsaIoWidthFillUint32 = 0xA,EfiIsaIoWidthFillReserved = 0xB,EfiIsaIoWidthMaximum = 0xC,};
struct _2C008F4EB15EC1AF9C3A363A3732DFB3 {unsigned __int32 CpuStatus : 3;unsigned __int32 Reserved1 : 3;unsigned __int32 SocketPopulated : 1;unsigned __int32 Reserved2 : 1;unsigned __int32 ApicEnable : 1;unsigned __int32 BootApplicationProcessor : 1;unsigned __int32 Reserved3 : 22;};
enum _2C0E6BED741645056D5101FFAD61EDBD {EfiCpuIoWidthUint8 = 0x0,EfiCpuIoWidthUint16 = 0x1,EfiCpuIoWidthUint32 = 0x2,EfiCpuIoWidthUint64 = 0x3,EfiCpuIoWidthFifoUint8 = 0x4,EfiCpuIoWidthFifoUint16 = 0x5,EfiCpuIoWidthFifoUint32 = 0x6,EfiCpuIoWidthFifoUint64 = 0x7,EfiCpuIoWidthFillUint8 = 0x8,EfiCpuIoWidthFillUint16 = 0x9,EfiCpuIoWidthFillUint32 = 0xA,EfiCpuIoWidthFillUint64 = 0xB,EfiCpuIoWidthMaximum = 0xC,};
enum _2C1AEF22A6601FC9F8304EE3BC884049 {ProcessorFamilySH3 = 0x104,ProcessorFamilySH4 = 0x105,ProcessorFamilyARM = 0x118,ProcessorFamilyStrongARM = 0x119,ProcessorFamily6x86 = 0x12C,ProcessorFamilyMediaGX = 0x12D,ProcessorFamilyMII = 0x12E,ProcessorFamilyWinChip = 0x140,ProcessorFamilyDSP = 0x15E,ProcessorFamilyVideoProcessor = 0x1F4,};
enum _2CEAA3A9CA7F2DA62FE03BC768D55D01 {EfiPowerButtonEntry = 0x0,EfiPowerButtonExit = 0x1,EfiPowerButtonMax = 0x2,};
struct _2D0A6C92B66271E9401738EEEFEBE79C {unsigned __int8 locZero : 1;unsigned __int8 locOne : 1;unsigned __int8 locTwo : 1;unsigned __int8 locThree : 1;unsigned __int8 locFour : 1;unsigned __int8 Extended : 3;};
struct _2E55797B6F4566322CE54CA5389087BA {unsigned __int32 asymmetric : 1;unsigned __int32 symmetric : 1;unsigned __int32 hash : 1;unsigned __int32 object : 1;unsigned __int32 reserved4_7 : 4;unsigned __int32 signing : 1;unsigned __int32 encrypting : 1;unsigned __int32 method : 1;unsigned __int32 reserved11_31 : 21;};
struct _2E8E3E480907CEB724AF4E266B739D41 {unsigned __int32 Stepping : 4;unsigned __int32 Model : 4;unsigned __int32 Family : 4;unsigned __int32 Reserved : 20;};
enum _2FBB9ACCEED0661A944A30659386D95B {ChassisStateOther = 0x1,ChassisStateUnknown = 0x2,ChassisStateSafe = 0x3,ChassisStateWarning = 0x4,ChassisStateCritical = 0x5,ChassisStateNonRecoverable = 0x6,};
enum _2FDC8088BBAE2908122B83A6449A4D18 {EfiPciIoOperationBusMasterRead = 0x0,EfiPciIoOperationBusMasterWrite = 0x1,EfiPciIoOperationBusMasterCommonBuffer = 0x2,EfiPciIoOperationMaximum = 0x3,};
enum _2FE559378DAF741E3B9B67C1D698C46B {UgaDtParentBus = 0x1,UgaDtGraphicsController = 0x2,UgaDtOutputController = 0x3,UgaDtOutputPort = 0x4,UgaDtOther = 0x5,};
enum _3076FD2B4E67DDD052AFCFA3899AEAD3 {ProcessorUpgradeOther = 0x1,ProcessorUpgradeUnknown = 0x2,ProcessorUpgradeDaughterBoard = 0x3,ProcessorUpgradeZIFSocket = 0x4,ProcessorUpgradePiggyBack = 0x5,ProcessorUpgradeNone = 0x6,ProcessorUpgradeLIFSocket = 0x7,ProcessorUpgradeSlot1 = 0x8,ProcessorUpgradeSlot2 = 0x9,ProcessorUpgrade370PinSocket = 0xA,ProcessorUpgradeSlotA = 0xB,ProcessorUpgradeSlotM = 0xC,ProcessorUpgradeSocket423 = 0xD,ProcessorUpgradeSocketA = 0xE,ProcessorUpgradeSocket478 = 0xF,ProcessorUpgradeSocket754 = 0x10,ProcessorUpgradeSocket940 = 0x11,ProcessorUpgradeSocket939 = 0x12,ProcessorUpgradeSocketmPGA604 = 0x13,ProcessorUpgradeSocketLGA771 = 0x14,ProcessorUpgradeSocketLGA775 = 0x15,ProcessorUpgradeSocketS1 = 0x16,ProcessorUpgradeAM2 = 0x17,ProcessorUpgradeF1207 = 0x18,ProcessorSocketLGA1366 = 0x19,ProcessorUpgradeSocketG34 = 0x1A,ProcessorUpgradeSocketAM3 = 0x1B,ProcessorUpgradeSocketC32 = 0x1C,ProcessorUpgradeSocketLGA1156 = 0x1D,ProcessorUpgradeSocketLGA1567 = 0x1E,ProcessorUpgradeSocketPGA988A = 0x1F,ProcessorUpgradeSocketBGA1288 = 0x20,ProcessorUpgradeSocketrPGA988B = 0x21,ProcessorUpgradeSocketBGA1023 = 0x22,ProcessorUpgradeSocketBGA1224 = 0x23,ProcessorUpgradeSocketLGA1155 = 0x24,ProcessorUpgradeSocketLGA1356 = 0x25,ProcessorUpgradeSocketLGA2011 = 0x26,ProcessorUpgradeSocketFS1 = 0x27,ProcessorUpgradeSocketFS2 = 0x28,ProcessorUpgradeSocketFM1 = 0x29,ProcessorUpgradeSocketFM2 = 0x2A,ProcessorUpgradeSocketLGA2011_3 = 0x2B,ProcessorUpgradeSocketLGA1356_3 = 0x2C,ProcessorUpgradeSocketLGA1150 = 0x2D,ProcessorUpgradeSocketBGA1168 = 0x2E,ProcessorUpgradeSocketBGA1234 = 0x2F,ProcessorUpgradeSocketBGA1364 = 0x30,};
enum _318B24658C7CF251A2A0EE0AA47658F7 {EventLogVariableNone = 0x0,EventLogVariableHandle = 0x1,EventLogVariableMutilEvent = 0x2,EventLogVariableMutilEventHandle = 0x3,EventLogVariablePOSTResultBitmap = 0x4,EventLogVariableSysManagementType = 0x5,EventLogVariableMutliEventSysManagmentType = 0x6,EventLogVariableUnused = 0x7,EventLogVariableOEMAssigned = 0x80,};
struct _318D42FD42A897F3751FCCFFAAD685DA {unsigned __int8 VoltageProbeSite : 5;unsigned __int8 VoltageProbeStatus : 3;};
enum _342202A4054765D55C0BA3B3480B833F {EfiGetPlatformBinaryMpTable = 0x0,EfiGetPlatformBinaryOemIntData = 0x1,EfiGetPlatformBinaryOem16Data = 0x2,EfiGetPlatformBinaryOem32Data = 0x3,EfiGetPlatformBinaryTpmBinary = 0x4,EfiGetPlatformBinarySystemRom = 0x5,EfiGetPlatformPciExpressBase = 0x6,EfiGetPlatformPmmSize = 0x7,EfiGetPlatformEndOpromShadowAddr = 0x8,};
enum _342729C09715CBEB79DAEAC8717EA72C {MemoryErrorOther = 0x1,MemoryErrorUnknown = 0x2,MemoryErrorOk = 0x3,MemoryErrorBadRead = 0x4,MemoryErrorParity = 0x5,MemoryErrorSigleBit = 0x6,MemoryErrorDoubleBit = 0x7,MemoryErrorMultiBit = 0x8,MemoryErrorNibble = 0x9,MemoryErrorChecksum = 0xA,MemoryErrorCrc = 0xB,MemoryErrorCorrectSingleBit = 0xC,MemoryErrorCorrected = 0xD,MemoryErrorUnCorrectable = 0xE,};
enum _36845F6D2C36805F3BBE42F4A3C083C2 {IeeeInfrastructureBSS = 0x0,IeeeIndependentBSS = 0x1,IeeeMeshBSS = 0x2,IeeeAnyBss = 0x3,};
struct _3774CDDC3C27E321FA545B5D6D5988FB {unsigned __int32 A20Kybd : 1;unsigned __int32 A20Port90 : 1;unsigned __int32 Reserved : 30;};
enum _37D50771F75D5839525827F0D9CE663F {Dhcp4Stopped = 0x0,Dhcp4Init = 0x1,Dhcp4Selecting = 0x2,Dhcp4Requesting = 0x3,Dhcp4Bound = 0x4,Dhcp4Renewing = 0x5,Dhcp4Rebinding = 0x6,Dhcp4InitReboot = 0x7,Dhcp4Rebooting = 0x8,};
struct _3965C879A14F2E5509EB283A6FE477F3 {unsigned __int32 FrontPanelResetStatus : 2;unsigned __int32 AdministratorPasswordStatus : 2;unsigned __int32 KeyboardPasswordStatus : 2;unsigned __int32 PowerOnPasswordStatus : 2;unsigned __int32 Reserved : 24;};
enum _39AB1F33965152490369B0F15402C8A6 {EfiCacheErrorOther = 0x1,EfiCacheErrorUnknown = 0x2,EfiCacheErrorNone = 0x3,EfiCacheErrorParity = 0x4,EfiCacheErrorSingleBit = 0x5,EfiCacheErrorMultiBit = 0x6,};
struct _3A244003871B8D811C1117464CE1EFAF {unsigned __int8 PmeSignalSupported : 1;unsigned __int8 HotPlugDevicesSupported : 1;unsigned __int8 SmbusSignalSupported : 1;unsigned __int8 Reserved : 5;};
struct _3AF249E395D4763EB3424664CB07F301 {unsigned __int64 NumberOfLogicalProcessors : 16;unsigned __int64 ThreadsPerCore : 8;unsigned __int64 Reserved1 : 8;unsigned __int64 CoresPerProcessor : 8;unsigned __int64 Reserved2 : 8;unsigned __int64 PhysicalProcessorPackageId : 8;unsigned __int64 Reserved3 : 8;};
enum _3B1F77C17EEFEE4519A5F23D3E1897CB {EfiCacheTypeOther = 0x1,EfiCacheTypeUnknown = 0x2,EfiCacheTypeInstruction = 0x3,EfiCacheTypeData = 0x4,EfiCacheTypeUnified = 0x5,};
enum _3B1FC660BA692E50D7AB89158D1C4036 {Efi8259Irq0 = 0x0,Efi8259Irq1 = 0x1,Efi8259Irq2 = 0x2,Efi8259Irq3 = 0x3,Efi8259Irq4 = 0x4,Efi8259Irq5 = 0x5,Efi8259Irq6 = 0x6,Efi8259Irq7 = 0x7,Efi8259Irq8 = 0x8,Efi8259Irq9 = 0x9,Efi8259Irq10 = 0xA,Efi8259Irq11 = 0xB,Efi8259Irq12 = 0xC,Efi8259Irq13 = 0xD,Efi8259Irq14 = 0xE,Efi8259Irq15 = 0xF,Efi8259IrqMax = 0x10,};
struct _3B39653E3BF850CC816DD09E5250A1D9 {unsigned __int8 Enabled : 1;unsigned __int8 Bsp : 1;unsigned __int8 Reserved : 6;};
enum _3C2E87340B2ECB3987890C370C2F1A6D {McaGetStateInfoFunctionId = 0x0,McaRegisterCpuFunctionId = 0x1,};
struct _3C85D21A1A49B0FEE4DECA019A2D6DF4 {unsigned __int16 Reserved : 1;unsigned __int16 Other : 1;unsigned __int16 Unknown : 1;unsigned __int16 FastPaged : 1;unsigned __int16 StaticColumn : 1;unsigned __int16 PseudoStatic : 1;unsigned __int16 Rambus : 1;unsigned __int16 Synchronous : 1;unsigned __int16 Cmos : 1;unsigned __int16 Edo : 1;unsigned __int16 WindowDram : 1;unsigned __int16 CacheDram : 1;unsigned __int16 Nonvolatile : 1;unsigned __int16 Registered : 1;unsigned __int16 Unbuffered : 1;unsigned __int16 LrDimm : 1;};
enum _3E0C53CA2548E4E99BBB5E1172354104 {EfiPeiResetCold = 0x0,EfiPeiResetWarm = 0x1,};
enum _3E35765601AB01BD7005107D9AB516B6 {CacheSizeRecordType = 0x1,MaximumSizeCacheRecordType = 0x2,CacheSpeedRecordType = 0x3,CacheSocketRecordType = 0x4,CacheSramTypeRecordType = 0x5,CacheInstalledSramTypeRecordType = 0x6,CacheErrorTypeRecordType = 0x7,CacheTypeRecordType = 0x8,CacheAssociativityRecordType = 0x9,CacheConfigRecordType = 0xA,};
enum _3E9500C5A8AA10B6E24D346688989D6A {EfiReservedMemoryType = 0x0,EfiLoaderCode = 0x1,EfiLoaderData = 0x2,EfiBootServicesCode = 0x3,EfiBootServicesData = 0x4,EfiRuntimeServicesCode = 0x5,EfiRuntimeServicesData = 0x6,EfiConventionalMemory = 0x7,EfiUnusableMemory = 0x8,EfiACPIReclaimMemory = 0x9,EfiACPIMemoryNVS = 0xA,EfiMemoryMappedIO = 0xB,EfiMemoryMappedIOPortSpace = 0xC,EfiPalCode = 0xD,EfiPersistentMemory = 0xE,EfiMaxMemoryType = 0xF,};
enum _3EB6853DD283D543A378516B3DA4EFDA {LoadOptionTypeDriver = 0x0,LoadOptionTypeSysPrep = 0x1,LoadOptionTypeBoot = 0x2,LoadOptionTypeMax = 0x3,};
struct _3EE6D0D90E56B9C09100C124EDAC75FA {unsigned __int32 MessageType : 8;unsigned __int32 TransactionId : 24;};
enum _3F9A49CD9C69B11408E19D98723F52DA {EfiBluetoothConfigDataTypeDeviceName = 0x0,EfiBluetoothConfigDataTypeClassOfDevice = 0x1,EfiBluetoothConfigDataTypeRemoteDeviceState = 0x2,EfiBluetoothConfigDataTypeSdpInfo = 0x3,EfiBluetoothConfigDataTypeBDADDR = 0x4,EfiBluetoothConfigDataTypeDiscoverable = 0x5,EfiBluetoothConfigDataTypeControllerStoredPairedDeviceList = 0x6,EfiBluetoothConfigDataTypeAvailableDeviceList = 0x7,EfiBluetoothConfigDataTypeMax = 0x8,};
enum _3FD926976ED34482219211171F38D27D {SHELL_SUCCESS = 0x0,SHELL_LOAD_ERROR = 0x1,SHELL_INVALID_PARAMETER = 0x2,SHELL_UNSUPPORTED = 0x3,SHELL_BAD_BUFFER_SIZE = 0x4,SHELL_BUFFER_TOO_SMALL = 0x5,SHELL_NOT_READY = 0x6,SHELL_DEVICE_ERROR = 0x7,SHELL_WRITE_PROTECTED = 0x8,SHELL_OUT_OF_RESOURCES = 0x9,SHELL_VOLUME_CORRUPTED = 0xA,SHELL_VOLUME_FULL = 0xB,SHELL_NO_MEDIA = 0xC,SHELL_MEDIA_CHANGED = 0xD,SHELL_NOT_FOUND = 0xE,SHELL_ACCESS_DENIED = 0xF,SHELL_TIMEOUT = 0x12,SHELL_NOT_STARTED = 0x13,SHELL_ALREADY_STARTED = 0x14,SHELL_ABORTED = 0x15,SHELL_INCOMPATIBLE_VERSION = 0x19,SHELL_SECURITY_VIOLATION = 0x1A,SHELL_NOT_EQUAL = 0x1B,};
enum _3FF0B9D748C323CDCA29D71A8E2B0C91 {TypeFlag = 0x0,TypeValue = 0x1,TypePosition = 0x2,TypeStart = 0x3,TypeDoubleValue = 0x4,TypeMaxValue = 0x5,TypeTimeValue = 0x6,TypeMax = 0x7,};
struct _400C452C8F1EA0F2732C5164BBBC743C {unsigned __int64 FailedSlot : 8;unsigned __int64 FailedSlotIsValid : 1;unsigned __int64 Reserved1 : 1;unsigned __int64 TlbLevel : 2;unsigned __int64 Reserved2 : 4;unsigned __int64 FailedInDataTr : 1;unsigned __int64 FailedInInsTr : 1;unsigned __int64 FailedInDataTc : 1;unsigned __int64 FailedInInsTc : 1;unsigned __int64 FailedOperation : 4;unsigned __int64 Reserved3 : 30;unsigned __int64 InstructionSet : 1;unsigned __int64 InstructionSetIsValid : 1;unsigned __int64 PrivelegeLevel : 2;unsigned __int64 PrivelegeLevelIsValid : 1;unsigned __int64 McCorrected : 1;unsigned __int64 TargetAddressIsValid : 1;unsigned __int64 RequesterIdentifier : 1;unsigned __int64 ResponserIdentifier : 1;unsigned __int64 PreciseInsPointer : 1;};
struct _401BE23B4C5739E975D3490FF25A84DF {unsigned __int8 Motherboard : 1;unsigned __int8 RequiresDaughterCard : 1;unsigned __int8 Removable : 1;unsigned __int8 Replaceable : 1;unsigned __int8 HotSwappable : 1;unsigned __int8 Reserved : 3;};
enum _40D0395D41CFB92396724052539456BA {ErrorDetectingMethodOther = 0x1,ErrorDetectingMethodUnknown = 0x2,ErrorDetectingMethodNone = 0x3,ErrorDetectingMethodParity = 0x4,ErrorDetectingMethod32Ecc = 0x5,ErrorDetectingMethod64Ecc = 0x6,ErrorDetectingMethod128Ecc = 0x7,ErrorDetectingMethodCrc = 0x8,};
enum _42DEA996CB1173985AAFC9743FF83965 {ManagementDeviceAddressTypeOther = 0x1,ManagementDeviceAddressTypeUnknown = 0x2,ManagementDeviceAddressTypeIOPort = 0x3,ManagementDeviceAddressTypeMemory = 0x4,ManagementDeviceAddressTypeSmbus = 0x5,};
enum _4370B3612B4D5CFE319D85265DD94FC6 {CacheAssociativityOther = 0x1,CacheAssociativityUnknown = 0x2,CacheAssociativityDirectMapped = 0x3,CacheAssociativity2Way = 0x4,CacheAssociativity4Way = 0x5,CacheAssociativityFully = 0x6,CacheAssociativity8Way = 0x7,CacheAssociativity16Way = 0x8,CacheAssociativity12Way = 0x9,CacheAssociativity24Way = 0xA,CacheAssociativity32Way = 0xB,CacheAssociativity48Way = 0xC,CacheAssociativity64Way = 0xD,CacheAssociativity20Way = 0xE,};
enum _442B5354D27DA642B7FAAB3699EEB755 {EfiIsaIoOperationBusMasterRead = 0x0,EfiIsaIoOperationBusMasterWrite = 0x1,EfiIsaIoOperationBusMasterCommonBuffer = 0x2,EfiIsaIoOperationSlaveRead = 0x3,EfiIsaIoOperationSlaveWrite = 0x4,EfiIsaIoOperationMaximum = 0x5,};
enum _444B2FEFA1CECE51140F0B8504328865 {EfiLegacyMpTableEntryExtSysAddrSpaceMappingIo = 0x0,EfiLegacyMpTableEntryExtSysAddrSpaceMappingMemory = 0x1,EfiLegacyMpTableEntryExtSysAddrSpaceMappingPrefetch = 0x2,};
enum _458F0BDE7B14A246AE22B2F50C12D7D7 {PointingDeviceInterfaceOther = 0x1,PointingDeviceInterfaceUnknown = 0x2,PointingDeviceInterfaceSerial = 0x3,PointingDeviceInterfacePs2 = 0x4,PointingDeviceInterfaceInfrared = 0x5,PointingDeviceInterfaceHpHil = 0x6,PointingDeviceInterfaceBusMouse = 0x7,PointingDeviceInterfaceADB = 0x8,PointingDeviceInterfaceBusMouseDB9 = 0xA0,PointingDeviceInterfaceBusMouseMicroDin = 0xA1,PointingDeviceInterfaceUsb = 0xA2,};
enum _47A9D3AAE54C69801D08D9E30901A665 {ShellPromptResponseYes = 0x0,ShellPromptResponseNo = 0x1,ShellPromptResponseCancel = 0x2,ShellPromptResponseQuit = 0x3,ShellPromptResponseContinue = 0x4,ShellPromptResponseAll = 0x5,ShellPromptResponseMax = 0x6,};
struct _49F51286EBABDAC2E3AB9387C3433E01 {unsigned __int64 SmbusDeviceAddress : 7;};
enum _4A46B2CCC7FA91131BACD63DCFC5DC96 {IPMIDeviceInfoInterfaceTypeUnknown = 0x0,IPMIDeviceInfoInterfaceTypeKCS = 0x1,IPMIDeviceInfoInterfaceTypeSMIC = 0x2,IPMIDeviceInfoInterfaceTypeBT = 0x3,IPMIDeviceInfoInterfaceTypeReserved = 0x4,};
struct _4BDB915D00C130474DCA811E527C5716 {unsigned __int32 Status : 1;unsigned __int32 BootOption : 2;unsigned __int32 BootOptionOnLimit : 2;unsigned __int32 WatchdogTimerPresent : 1;unsigned __int32 Reserved : 26;};
enum _4C0A7831BEA91DA69125925BD89CF954 {EFI_PCD_TYPE_8 = 0x0,EFI_PCD_TYPE_16 = 0x1,EFI_PCD_TYPE_32 = 0x2,EFI_PCD_TYPE_64 = 0x3,EFI_PCD_TYPE_BOOL = 0x4,EFI_PCD_TYPE_PTR = 0x5,};
enum _4D9124BC8391B94B3204274D61B14C88 {IsaIa32 = 0x14C,IsaX64 = 0x8664,IsaIpf = 0x200,IsaEbc = 0xEBC,IsaArm = 0x1C2,IsaAArch64 = 0xAA64,};
enum _4D955D7C3CF952FEE63E33CCE1AA655A {EfiProcessorFamilySh3 = 0x104,EfiProcessorFamilySh4 = 0x105,EfiProcessorFamilyArm = 0x118,EfiProcessorFamilyStrongArm = 0x119,EfiProcessorFamily6x86 = 0x12C,EfiProcessorFamilyMediaGx = 0x12D,EfiProcessorFamilyMii = 0x12E,EfiProcessorFamilyWinChip = 0x140,EfiProcessorFamilyDsp = 0x15E,EfiProcessorFamilyVideo = 0x1F4,};
enum _4F856CCBB9B00374BC435FBDFFF560CE {EfiHardwareSecurityStatusDisabled = 0x0,EfiHardwareSecurityStatusEnabled = 0x1,EfiHardwareSecurityStatusNotImplemented = 0x2,EfiHardwareSecurityStatusUnknown = 0x3,};
enum _51C1AFD47B5AB406FF3AB4AD771221D8 {EfiPeiCpuIoWidthUint8 = 0x0,EfiPeiCpuIoWidthUint16 = 0x1,EfiPeiCpuIoWidthUint32 = 0x2,EfiPeiCpuIoWidthUint64 = 0x3,EfiPeiCpuIoWidthFifoUint8 = 0x4,EfiPeiCpuIoWidthFifoUint16 = 0x5,EfiPeiCpuIoWidthFifoUint32 = 0x6,EfiPeiCpuIoWidthFifoUint64 = 0x7,EfiPeiCpuIoWidthFillUint8 = 0x8,EfiPeiCpuIoWidthFillUint16 = 0x9,EfiPeiCpuIoWidthFillUint32 = 0xA,EfiPeiCpuIoWidthFillUint64 = 0xB,EfiPeiCpuIoWidthMaximum = 0xC,};
struct _531493BA18E76A1043EF68B47A7B812A {unsigned __int32 Level : 3;unsigned __int32 Socketed : 1;unsigned __int32 Reserved2 : 1;unsigned __int32 Location : 2;unsigned __int32 Enable : 1;unsigned __int32 OperationalMode : 2;unsigned __int32 Reserved1 : 22;};
enum _540F40D125FA5FA7759108AD821413DC {EfiMemoryGranularityOther = 0x1,EfiMemoryGranularityOtherUnknown = 0x2,EfiMemoryGranularityDeviceLevel = 0x3,EfiMemoryGranularityMemPartitionLevel = 0x4,};
struct _542352B1445A77BBBF413A1D11C51813 {unsigned __int32 AbbreviatedLanguageFormat : 1;unsigned __int32 Reserved : 31;};
struct _54FFFAD7527D2E463FD337218A73F4FA {unsigned __int32 Reserved : 1;unsigned __int32 Other : 1;unsigned __int32 Unknown : 1;unsigned __int32 FastPaged : 1;unsigned __int32 StaticColumn : 1;unsigned __int32 PseudoStatic : 1;unsigned __int32 Rambus : 1;unsigned __int32 Synchronous : 1;unsigned __int32 Cmos : 1;unsigned __int32 Edo : 1;unsigned __int32 WindowDram : 1;unsigned __int32 CacheDram : 1;unsigned __int32 Nonvolatile : 1;unsigned __int32 Reserved1 : 19;};
enum _5600CE6B24E65D2C626E2368EC93E622 {EfiLegacyMpTableEntryIoIntTypeInt = 0x0,EfiLegacyMpTableEntryIoIntTypeNmi = 0x1,EfiLegacyMpTableEntryIoIntTypeSmi = 0x2,EfiLegacyMpTableEntryIoIntTypeExtInt = 0x3,};
struct _5611705F5C2D06F0C65376E03C4AFA39 {unsigned __int64 Attributes : 8;unsigned __int64 Reserved : 8;unsigned __int64 TestControl : 48;};
enum _566AA586618FD1712A6F50962DC5BF56 {EfiSlotUsageOther = 0x1,EfiSlotUsageUnknown = 0x2,EfiSlotUsageAvailable = 0x3,EfiSlotUsageInUse = 0x4,};
enum _56B4C09C4EC272A765469B7123F55FB9 {EfiPointingDeviceInterfaceOther = 0x1,EfiPointingDeviceInterfaceUnknown = 0x2,EfiPointingDeviceInterfaceSerial = 0x3,EfiPointingDeviceInterfacePs2 = 0x4,EfiPointingDeviceInterfaceInfrared = 0x5,EfiPointingDeviceInterfaceHpHil = 0x6,EfiPointingDeviceInterfaceBusMouse = 0x7,EfiPointingDeviceInterfaceADB = 0x8,EfiPointingDeviceInterfaceBusMouseDB9 = 0xA0,EfiPointingDeviceInterfaceBusMouseMicroDin = 0xA1,EfiPointingDeviceInterfaceUsb = 0xA2,};
enum _56EF9D5457696C841AC383950266ECAC {MemoryInterleaveOther = 0x1,MemoryInterleaveUnknown = 0x2,MemoryInterleaveOneWay = 0x3,MemoryInterleaveTwoWay = 0x4,MemoryInterleaveFourWay = 0x5,MemoryInterleaveEightWay = 0x6,MemoryInterleaveSixteenWay = 0x7,};
enum _57CD3094B73B97C91106B7231444993C {EfiIPsecActionDiscard = 0x0,EfiIPsecActionBypass = 0x1,EfiIPsecActionProtect = 0x2,};
enum _57D756C7A8DB1434843BCEC5AA15CDB1 {Ip6ConfigDataTypeInterfaceInfo = 0x0,Ip6ConfigDataTypeAltInterfaceId = 0x1,Ip6ConfigDataTypePolicy = 0x2,Ip6ConfigDataTypeDupAddrDetectTransmits = 0x3,Ip6ConfigDataTypeManualAddress = 0x4,Ip6ConfigDataTypeGateway = 0x5,Ip6ConfigDataTypeDnsServer = 0x6,Ip6ConfigDataTypeMaximum = 0x7,};
struct _58B623501BA3D7B210595FE620EDA646 {unsigned __int32 Reserved : 2;unsigned __int32 Unknown : 1;unsigned __int32 BiosCharacteristicsNotSupported : 1;unsigned __int32 IsaIsSupported : 1;unsigned __int32 McaIsSupported : 1;unsigned __int32 EisaIsSupported : 1;unsigned __int32 PciIsSupported : 1;unsigned __int32 PcmciaIsSupported : 1;unsigned __int32 PlugAndPlayIsSupported : 1;unsigned __int32 ApmIsSupported : 1;unsigned __int32 BiosIsUpgradable : 1;unsigned __int32 BiosShadowingAllowed : 1;unsigned __int32 VlVesaIsSupported : 1;unsigned __int32 EscdSupportIsAvailable : 1;unsigned __int32 BootFromCdIsSupported : 1;unsigned __int32 SelectableBootIsSupported : 1;unsigned __int32 RomBiosIsSocketed : 1;unsigned __int32 BootFromPcmciaIsSupported : 1;unsigned __int32 EDDSpecificationIsSupported : 1;unsigned __int32 JapaneseNecFloppyIsSupported : 1;unsigned __int32 JapaneseToshibaFloppyIsSupported : 1;unsigned __int32 Floppy525_360IsSupported : 1;unsigned __int32 Floppy525_12IsSupported : 1;unsigned __int32 Floppy35_720IsSupported : 1;unsigned __int32 Floppy35_288IsSupported : 1;unsigned __int32 PrintScreenIsSupported : 1;unsigned __int32 Keyboard8042IsSupported : 1;unsigned __int32 SerialIsSupported : 1;unsigned __int32 PrinterIsSupported : 1;unsigned __int32 CgaMonoIsSupported : 1;unsigned __int32 NecPc98 : 1;unsigned __int32 ReservedForVendor : 32;};
enum _5947AFAD7C0C9E675D55E92DEB489B96 {CacheTypeOther = 0x1,CacheTypeUnknown = 0x2,CacheTypeInstruction = 0x3,CacheTypeData = 0x4,CacheTypeUnified = 0x5,};
enum _5947ECD62441D74C35F7059985B6D0AB {EfiErrorDetectingMethodOther = 0x1,EfiErrorDetectingMethodUnknown = 0x2,EfiErrorDetectingMethodNone = 0x3,EfiErrorDetectingMethodParity = 0x4,EfiErrorDetectingMethod32Ecc = 0x5,EfiErrorDetectingMethod64Ecc = 0x6,EfiErrorDetectingMethod128Ecc = 0x7,EfiErrorDetectingMethodCrc = 0x8,};
enum _5A383AE503DF1EF2DA7EA1269CD23EB9 {EdkiiUfsHcOperationBusMasterRead = 0x0,EdkiiUfsHcOperationBusMasterWrite = 0x1,EdkiiUfsHcOperationBusMasterCommonBuffer = 0x2,EdkiiUfsHcOperationMaximum = 0x3,};
struct _5ABCE92A62F06F587C1A97100F5EA96A {unsigned __int64 TestControl : 47;unsigned __int64 ControlSupport : 1;unsigned __int64 Reserved : 16;};
struct _5AC66747EBEC2DADFF908009E084015C {unsigned __int64 LogicalAddress : 16;unsigned __int64 Reserved1 : 16;unsigned __int64 Reserved2 : 32;};
enum _5B59BA72DD425C8A465A664D8DC4356E {EfiSlotTypeOther = 0x1,EfiSlotTypeUnknown = 0x2,EfiSlotTypeIsa = 0x3,EfiSlotTypeMca = 0x4,EfiSlotTypeEisa = 0x5,EfiSlotTypePci = 0x6,EfiSlotTypePcmcia = 0x7,EfiSlotTypeVlVesa = 0x8,EfiSlotTypeProprietary = 0x9,EfiSlotTypeProcessorCardSlot = 0xA,EfiSlotTypeProprietaryMemoryCardSlot = 0xB,EfiSlotTypeIORiserCardSlot = 0xC,EfiSlotTypeNuBus = 0xD,EfiSlotTypePci66MhzCapable = 0xE,EfiSlotTypeAgp = 0xF,EfiSlotTypeAgp2X = 0x10,EfiSlotTypeAgp4X = 0x11,EfiSlotTypePciX = 0x12,EfiSlotTypeAgp8x = 0x13,EfiSlotTypePC98C20 = 0xA0,EfiSlotTypePC98C24 = 0xA1,EfiSlotTypePC98E = 0xA2,EfiSlotTypePC98LocalBus = 0xA3,EfiSlotTypePC98Card = 0xA4,EfiSlotTypePciExpress = 0xA5,EfiSlotTypePciExpressX1 = 0xA6,EfiSlotTypePciExpressX2 = 0xA7,EfiSlotTypePciExpressX4 = 0xA8,EfiSlotTypePciExpressX8 = 0xA9,EfiSlotTypePciExpressX16 = 0xAA,};
enum _5C84BADFD720A584A29094B416AF2EBB {EfiGcdAllocateAnySearchBottomUp = 0x0,EfiGcdAllocateMaxAddressSearchBottomUp = 0x1,EfiGcdAllocateAddress = 0x2,EfiGcdAllocateAnySearchTopDown = 0x3,EfiGcdAllocateMaxAddressSearchTopDown = 0x4,EfiGcdMaxAllocateType = 0x5,};
struct _5CD6AD5EA41653098E3415F2ACAFEF1D {unsigned __int16 Type : 3;unsigned __int16 PortGranularity : 3;unsigned __int16 DataGranularity : 3;unsigned __int16 Reserved : 7;};
enum _5EA3491EF32105B7A862FEC7A9545EAD {EfiEapConfigEapAuthMethod = 0x0,EfiEapConfigEapSupportedAuthMethod = 0x1,EfiEapConfigIdentityString = 0x2,EfiEapConfigEapTlsCACert = 0x3,EfiEapConfigEapTlsClientCert = 0x4,EfiEapConfigEapTlsClientPrivateKeyFile = 0x5,EfiEapConfigEapTlsClientPrivateKeyFilePassword = 0x6,EfiEapConfigEapTlsCipherSuite = 0x7,EfiEapConfigEapTlsSupportedCipherSuite = 0x8,EfiEapConfigEapMSChapV2Password = 0x9,EfiEapConfigEap2ndAuthMethod = 0xA,};
enum _5ED68EDA1E10F46D2ED4711B277818C3 {Efi8259LegacyMode = 0x0,Efi8259ProtectedMode = 0x1,Efi8259MaxMode = 0x2,};
enum _5F0B8BD01C02E89FCDBD7E4A97326CC9 {EfiOnBoardDeviceTypeOther = 0x1,EfiOnBoardDeviceTypeUnknown = 0x2,EfiOnBoardDeviceTypeVideo = 0x3,EfiOnBoardDeviceTypeScsiController = 0x4,EfiOnBoardDeviceTypeEthernet = 0x5,EfiOnBoardDeviceTypeTokenRing = 0x6,EfiOnBoardDeviceTypeSound = 0x7,};
enum _5F18C87F459960569B358870608D44A8 {Ieee80211UnspecifiedReason = 0x1,Ieee80211PreviousAuthenticateInvalid = 0x2,Ieee80211DeauthenticatedSinceLeaving = 0x3,Ieee80211DisassociatedDueToInactive = 0x4,Ieee80211DisassociatedSinceApUnable = 0x5,Ieee80211Class2FrameNonauthenticated = 0x6,Ieee80211Class3FrameNonassociated = 0x7,Ieee80211DisassociatedSinceLeaving = 0x8,};
enum _5F5254821497CACADC8A84ED190646AB {EFI_PXE_BASE_CODE_TFTP_FIRST = 0x0,EFI_PXE_BASE_CODE_TFTP_GET_FILE_SIZE = 0x1,EFI_PXE_BASE_CODE_TFTP_READ_FILE = 0x2,EFI_PXE_BASE_CODE_TFTP_WRITE_FILE = 0x3,EFI_PXE_BASE_CODE_TFTP_READ_DIRECTORY = 0x4,EFI_PXE_BASE_CODE_MTFTP_GET_FILE_SIZE = 0x5,EFI_PXE_BASE_CODE_MTFTP_READ_FILE = 0x6,EFI_PXE_BASE_CODE_MTFTP_READ_DIRECTORY = 0x7,EFI_PXE_BASE_CODE_MTFTP_LAST = 0x8,};
enum _60295EAFE753499E627081DDD5130B9C {EfiManagementDeviceTypeOther = 0x1,EfiManagementDeviceTypeUnknown = 0x2,EfiManagementDeviceTypeLm75 = 0x3,EfiManagementDeviceTypeLm78 = 0x4,EfiManagementDeviceTypeLm79 = 0x5,EfiManagementDeviceTypeLm80 = 0x6,EfiManagementDeviceTypeLm81 = 0x7,EfiManagementDeviceTypeAdm9240 = 0x8,EfiManagementDeviceTypeDs1780 = 0x9,EfiManagementDeviceTypeMaxim1617 = 0xA,EfiManagementDeviceTypeGl518Sm = 0xB,EfiManagementDeviceTypeW83781D = 0xC,EfiManagementDeviceTypeHt82H791 = 0xD,};
enum _66E5F831483F77A64993EE6F273DF642 {SalSetVectorsFunctionId = 0x0,SalMcRendezFunctionId = 0x1,SalMcSetParamsFunctionId = 0x2,EsalGetVectorsFunctionId = 0x3,EsalMcGetParamsFunctionId = 0x4,EsalMcGetMcParamsFunctionId = 0x5,EsalGetMcCheckinFlagsFunctionId = 0x6,EsalGetPlatformBaseFreqFunctionId = 0x7,EsalPhysicalIdInfoFunctionId = 0x8,EsalRegisterPhysicalAddrFunctionId = 0x9,};
enum _6727549795A61C17F8BDE9AE769E5510 {EfiLegacyMpTableEntryLocalIntFlagsTriggerSpec = 0x0,EfiLegacyMpTableEntryLocalIntFlagsTriggerEdge = 0x1,EfiLegacyMpTableEntryLocalIntFlagsTriggerReserved = 0x2,EfiLegacyMpTableEntryLocalIntFlagsTriggerLevel = 0x3,};
struct _688032D942D0A7D34EBB3FC94491FB6C {unsigned __int8 ProcessorVoltageCapability5V : 1;unsigned __int8 ProcessorVoltageCapability3_3V : 1;unsigned __int8 ProcessorVoltageCapability2_9V : 1;unsigned __int8 ProcessorVoltageCapabilityReserved : 1;unsigned __int8 ProcessorVoltageReserved : 3;unsigned __int8 ProcessorVoltageIndicateLegacy : 1;};
enum _688FE0653D219825B48911AE4604D818 {EFI_PXE_BASE_CODE_CALLBACK_STATUS_FIRST = 0x0,EFI_PXE_BASE_CODE_CALLBACK_STATUS_CONTINUE = 0x1,EFI_PXE_BASE_CODE_CALLBACK_STATUS_ABORT = 0x2,EFI_PXE_BASE_CODE_CALLBACK_STATUS_LAST = 0x3,};
enum _68A3FD67FAFE063CC38FA105F85980EA {IoReadFunctionId = 0x0,IoWriteFunctionId = 0x1,MemReadFunctionId = 0x2,MemWriteFunctionId = 0x3,};
enum _697E276E4535CD8CEC92B79E42743B15 {BeforePciHostBridge = 0x0,ChipsetEntry = 0x0,AfterPciHostBridge = 0x1,ChipsetExit = 0x1,MaximumChipsetPhase = 0x2,};
struct _6AB0B8F58DEA6C8D7C047418F2B42ECD {unsigned __int8 FormatType : 2;unsigned __int8 MinorDeviceClass : 6;unsigned __int16 MajorDeviceClass : 5;unsigned __int16 MajorServiceClass : 11;};
enum _6B30FA8520B87C80395D7C67827CCBD0 {EfiNeighborInComplete = 0x0,EfiNeighborReachable = 0x1,EfiNeighborStale = 0x2,EfiNeighborDelay = 0x3,EfiNeighborProbe = 0x4,};
enum _6C6286A946E9A50EAB480669720C2063 {PalProcFunctionId = 0x0,SetNewPalEntryFunctionId = 0x1,GetNewPalEntryFunctionId = 0x2,EsalUpdatePalFunctionId = 0x3,};
enum _6EA627E77A15F8AB1B742C5151465F4C {TimerCancel = 0x0,TimerPeriodic = 0x1,TimerRelative = 0x2,};
enum _6F7D6DAB3C291CD0693B8DEA7A9F087C {EfiGcdMemoryTypeNonExistent = 0x0,EfiGcdMemoryTypeReserved = 0x1,EfiGcdMemoryTypeSystemMemory = 0x2,EfiGcdMemoryTypeMemoryMappedIo = 0x3,EfiGcdMemoryTypePersistentMemory = 0x4,EfiGcdMemoryTypeMoreReliable = 0x5,EfiGcdMemoryTypeMaximum = 0x6,};
struct _6F9E78D51741B91108827E2927BC310C {unsigned __int16 Other : 1;unsigned __int16 Unknown : 1;unsigned __int16 NonBurst : 1;unsigned __int16 Burst : 1;unsigned __int16 PipelineBurst : 1;unsigned __int16 Synchronous : 1;unsigned __int16 Asynchronous : 1;unsigned __int16 Reserved : 9;};
enum _6FDDFEC3748D86DB29779B04F7A65BE5 {SxS0 = 0x0,SxS1 = 0x1,SxS2 = 0x2,SxS3 = 0x3,SxS4 = 0x4,SxS5 = 0x5,EfiMaximumSleepType = 0x6,};
enum _70AC86557541B6B2BC11D74F619C1EF6 {EfiUsbHcStateHalt = 0x0,EfiUsbHcStateOperational = 0x1,EfiUsbHcStateSuspend = 0x2,EfiUsbHcStateMaximum = 0x3,};
enum _713F9861A2AF4CB50D2AC90E3A7BA751 {EfiSimpleNetworkStopped = 0x0,EfiSimpleNetworkStarted = 0x1,EfiSimpleNetworkInitialized = 0x2,EfiSimpleNetworkMaxState = 0x3,};
struct _72DC978F075E0E65AD1F7FB905F5153E {unsigned __int16 Resv1 : 3;unsigned __int16 Number : 13;};
enum _72FEBD157A72F2E6FF0BD8052D723A78 {EfiCacheAssociativityOther = 0x1,EfiCacheAssociativityUnknown = 0x2,EfiCacheAssociativityDirectMapped = 0x3,EfiCacheAssociativity2Way = 0x4,EfiCacheAssociativity4Way = 0x5,EfiCacheAssociativityFully = 0x6,EfiCacheAssociativity8Way = 0x7,EfiCacheAssociativity16Way = 0x8,};
enum _74097A74A7E68475E478B88E510F1360 {EfiChassisSecurityStatusOther = 0x1,EfiChassisSecurityStatusUnknown = 0x2,EfiChassisSecurityStatusNone = 0x3,EfiChassisSecurityStatusExternalInterfaceLockedOut = 0x4,EfiChassisSecurityStatusExternalInterfaceLockedEnabled = 0x5,};
struct _76AD9C089835C1FF861F166B1D790D1B {unsigned __int64 VersionOfPalB : 16;unsigned __int64 Reserved1 : 8;unsigned __int64 PalVendor : 8;unsigned __int64 VersionOfPalA : 16;unsigned __int64 Reserved2 : 16;};
struct _76BAA508F77C33FE638674C6C23A8C80 {unsigned __int8 DirectoryServiceValidity : 1;unsigned __int8 RabcaUsedFlag : 1;unsigned __int8 ExecuteHddDiagnosticsFlag : 1;unsigned __int8 Reserved : 5;};
enum _77E9CA77710731688181B38758974C4D {EfiInitCacheDataOnly = 0x0,EfiInitCacheInstrOnly = 0x1,EfiInitCacheBoth = 0x2,EfiInitCacheUnspecified = 0x3,};
enum _79C567BA78FB110F9B1A2028E09F5E5D {CacheUncacheable = 0x0,CacheWriteCombining = 0x1,CacheWriteThrough = 0x4,CacheWriteProtected = 0x5,CacheWriteBack = 0x6,};
enum _7A3767199AA51BDED5CBD28E9C086913 {Ip4Config2PolicyStatic = 0x0,Ip4Config2PolicyDhcp = 0x1,Ip4Config2PolicyMax = 0x2,};
enum _7C12C6BA9D7F0DFBC46D28BBDFC33B64 {EfiProcessorSocketOther = 0x1,EfiProcessorSocketUnknown = 0x2,EfiProcessorSocketDaughterBoard = 0x3,EfiProcessorSocketZIF = 0x4,EfiProcessorSocketReplacePiggyBack = 0x5,EfiProcessorSocketNone = 0x6,EfiProcessorSocketLIF = 0x7,EfiProcessorSocketSlot1 = 0x8,EfiProcessorSocketSlot2 = 0x9,EfiProcessorSocket370Pin = 0xA,EfiProcessorSocketSlotA = 0xB,EfiProcessorSocketSlotM = 0xC,EfiProcessorSocket423 = 0xD,EfiProcessorSocketA462 = 0xE,EfiProcessorSocket478 = 0xF,EfiProcessorSocket754 = 0x10,EfiProcessorSocket940 = 0x11,EfiProcessorSocket939 = 0x12,EfiProcessorSocketmPGA604 = 0x13,EfiProcessorSocketLGA771 = 0x14,EfiProcessorSocketLGA775 = 0x15,};
enum _7CA5360722F817D6C9560190E005B22C {MappingTypeFileSystem = 0x0,MappingTypeBlockIo = 0x1,MappingTypeMax = 0x2,};
struct _7F4A2FF0E27B4FE6701C5CB0230B4949 {unsigned __int16 OldPosition : 4;unsigned __int16 Reserved1 : 4;unsigned __int16 Enabled : 1;unsigned __int16 Failed : 1;unsigned __int16 MediaPresent : 2;unsigned __int16 Reserved2 : 4;};
struct _7FE9E2C35030190B001171A4D66DFA32 {unsigned __int32 CharacteristicsUnknown : 1;unsigned __int32 Provides50Volts : 1;unsigned __int32 Provides33Volts : 1;unsigned __int32 SharedSlot : 1;unsigned __int32 PcCard16Supported : 1;unsigned __int32 CardBusSupported : 1;unsigned __int32 ZoomVideoSupported : 1;unsigned __int32 ModemRingResumeSupported : 1;unsigned __int32 PmeSignalSupported : 1;unsigned __int32 HotPlugDevicesSupported : 1;unsigned __int32 SmbusSignalSupported : 1;unsigned __int32 Reserved : 21;};
enum _81C96E3F196AC83D02B4522B31857D28 {IpPrefixOriginOther = 0x0,IpPrefixOriginManual = 0x1,IpPrefixOriginWellKnown = 0x2,IpPrefixOriginDhcp = 0x3,IpPrefixOriginRouterAdvertisement = 0x4,IpPrefixOriginUnchanged = 0x10,};
struct _825A767F80D54F48965E71A938B5D869 {unsigned __int32 CoolingDevice : 5;unsigned __int32 CoolingDeviceStatus : 3;unsigned __int32 Reserved : 24;};
enum _82FEAFD02D31575BA50B03CC98CD8C60 {EfiMemoryInterleaveOther = 0x1,EfiMemoryInterleaveUnknown = 0x2,EfiMemoryInterleaveOneWay = 0x3,EfiMemoryInterleaveTwoWay = 0x4,EfiMemoryInterleaveFourWay = 0x5,EfiMemoryInterleaveEightWay = 0x6,EfiMemoryInterleaveSixteenWay = 0x7,};
enum _83B777DA911D31EC8E54A9EBBBCC461E {EfiPciBeforeChildBusEnumeration = 0x0,EfiPciBeforeResourceCollection = 0x1,};
struct _8616D3DD47845040550EB5C08ECD7F45 {unsigned __int64 LogicalAddress : 16;unsigned __int64 Reserved : 48;};
enum _861F1046478701FE78BCD31F924D7F30 {MemoryFormFactorOther = 0x1,MemoryFormFactorUnknown = 0x2,MemoryFormFactorSimm = 0x3,MemoryFormFactorSip = 0x4,MemoryFormFactorChip = 0x5,MemoryFormFactorDip = 0x6,MemoryFormFactorZip = 0x7,MemoryFormFactorProprietaryCard = 0x8,MemoryFormFactorDimm = 0x9,MemoryFormFactorTsop = 0xA,MemoryFormFactorRowOfChips = 0xB,MemoryFormFactorRimm = 0xC,MemoryFormFactorSodimm = 0xD,MemoryFormFactorSrimm = 0xE,MemoryFormFactorFbDimm = 0xF,};
enum _8654BE61EA48664541B7EEE332229FB3 {EfiBaseBoardTypeUnknown = 0x1,EfiBaseBoardTypeOther = 0x2,EfiBaseBoardTypeServerBlade = 0x3,EfiBaseBoardTypeConnectivitySwitch = 0x4,EfiBaseBoardTypeSystemManagementModule = 0x5,EfiBaseBoardTypeProcessorModule = 0x6,EfiBaseBoardTypeIOModule = 0x7,EfiBaseBoardTypeMemoryModule = 0x8,EfiBaseBoardTypeDaughterBoard = 0x9,EfiBaseBoardTypeMotherBoard = 0xA,EfiBaseBoardTypeProcessorMemoryModule = 0xB,EfiBaseBoardTypeProcessorIOModule = 0xC,EfiBaseBoardTypeInterconnectBoard = 0xD,};
struct _86869426D1F11D019276FCEA1747E54D {unsigned __int32 ElectricalCurrentProbeSite : 5;unsigned __int32 ElectricalCurrentProbeStatus : 3;unsigned __int32 Reserved : 24;};
enum _87ED438755DFE5DE3396D28A31BE363E {HTTP_STATUS_UNSUPPORTED_STATUS = 0x0,HTTP_STATUS_100_CONTINUE = 0x1,HTTP_STATUS_101_SWITCHING_PROTOCOLS = 0x2,HTTP_STATUS_200_OK = 0x3,HTTP_STATUS_201_CREATED = 0x4,HTTP_STATUS_202_ACCEPTED = 0x5,HTTP_STATUS_203_NON_AUTHORITATIVE_INFORMATION = 0x6,HTTP_STATUS_204_NO_CONTENT = 0x7,HTTP_STATUS_205_RESET_CONTENT = 0x8,HTTP_STATUS_206_PARTIAL_CONTENT = 0x9,HTTP_STATUS_300_MULTIPLE_CHIOCES = 0xA,HTTP_STATUS_301_MOVED_PERMANENTLY = 0xB,HTTP_STATUS_302_FOUND = 0xC,HTTP_STATUS_303_SEE_OTHER = 0xD,HTTP_STATUS_304_NOT_MODIFIED = 0xE,HTTP_STATUS_305_USE_PROXY = 0xF,HTTP_STATUS_307_TEMPORARY_REDIRECT = 0x10,HTTP_STATUS_400_BAD_REQUEST = 0x11,HTTP_STATUS_401_UNAUTHORIZED = 0x12,HTTP_STATUS_402_PAYMENT_REQUIRED = 0x13,HTTP_STATUS_403_FORBIDDEN = 0x14,HTTP_STATUS_404_NOT_FOUND = 0x15,HTTP_STATUS_405_METHOD_NOT_ALLOWED = 0x16,HTTP_STATUS_406_NOT_ACCEPTABLE = 0x17,HTTP_STATUS_407_PROXY_AUTHENTICATION_REQUIRED = 0x18,HTTP_STATUS_408_REQUEST_TIME_OUT = 0x19,HTTP_STATUS_409_CONFLICT = 0x1A,HTTP_STATUS_410_GONE = 0x1B,HTTP_STATUS_411_LENGTH_REQUIRED = 0x1C,HTTP_STATUS_412_PRECONDITION_FAILED = 0x1D,HTTP_STATUS_413_REQUEST_ENTITY_TOO_LARGE = 0x1E,HTTP_STATUS_414_REQUEST_URI_TOO_LARGE = 0x1F,HTTP_STATUS_415_UNSUPPORTED_MEDIA_TYPE = 0x20,HTTP_STATUS_416_REQUESTED_RANGE_NOT_SATISFIED = 0x21,HTTP_STATUS_417_EXPECTATION_FAILED = 0x22,HTTP_STATUS_500_INTERNAL_SERVER_ERROR = 0x23,HTTP_STATUS_501_NOT_IMPLEMENTED = 0x24,HTTP_STATUS_502_BAD_GATEWAY = 0x25,HTTP_STATUS_503_SERVICE_UNAVAILABLE = 0x26,HTTP_STATUS_504_GATEWAY_TIME_OUT = 0x27,HTTP_STATUS_505_HTTP_VERSION_NOT_SUPPORTED = 0x28,};
enum _87F218DAEA12ED758275246CB1E953F7 {UgaIoGetVersion = 0x1,UgaIoGetChildDevice = 0x2,UgaIoStartDevice = 0x3,UgaIoStopDevice = 0x4,UgaIoFlushDevice = 0x5,UgaIoResetDevice = 0x6,UgaIoGetDeviceState = 0x7,UgaIoSetDeviceState = 0x8,UgaIoSetPowerState = 0x9,UgaIoGetMemoryConfiguration = 0xA,UgaIoSetVideoMode = 0xB,UgaIoCopyRectangle = 0xC,UgaIoGetEdidSegment = 0xD,UgaIoDeviceChannelOpen = 0xE,UgaIoDeviceChannelClose = 0xF,UgaIoDeviceChannelRead = 0x10,UgaIoDeviceChannelWrite = 0x11,UgaIoGetPersistentDataSize = 0x12,UgaIoGetPersistentData = 0x13,UgaIoSetPersistentData = 0x14,UgaIoGetDevicePropertySize = 0x15,UgaIoGetDeviceProperty = 0x16,UgaIoBtPrivateInterface = 0x17,};
struct _8A099209612A17C8A64394B83E080DEB {unsigned __int32 UncorrectableErrorValid : 1;unsigned __int32 CorrectableErrorValid : 1;unsigned __int32 MultipleUncorrectableErrors : 1;unsigned __int32 MultipleCorrectableErrors : 1;unsigned __int32 ErrorDataEntryCount : 10;unsigned __int32 Reserved : 18;};
enum _8B17A6546B860A2E5177FC6C11A9BA7E {EfiAtaSataTransferProtocol = 0x0,};
struct _8BA21EB1E9E89DC8D750A7001642B349 {unsigned __int8 ElectricalCurrentProbeSite : 5;unsigned __int8 ElectricalCurrentProbeStatus : 3;};
enum _8DB746F07ECEA2773769AB182972EFCD {DefaultParity = 0x0,NoParity = 0x1,EvenParity = 0x2,OddParity = 0x3,MarkParity = 0x4,SpaceParity = 0x5,};
enum _8E2407300B256BA1705D658810BFCEF6 {EfiMemoryErrorOther = 0x1,EfiMemoryErrorUnknown = 0x2,EfiMemoryErrorOk = 0x3,EfiMemoryErrorBadRead = 0x4,EfiMemoryErrorParity = 0x5,EfiMemoryErrorSigleBit = 0x6,EfiMemoryErrorDoubleBit = 0x7,EfiMemoryErrorMultiBit = 0x8,EfiMemoryErrorNibble = 0x9,EfiMemoryErrorChecksum = 0xA,EfiMemoryErrorCrc = 0xB,EfiMemoryErrorCorrectSingleBit = 0xC,EfiMemoryErrorCorrected = 0xD,EfiMemoryErrorUnCorrectable = 0xE,};
enum _8EA7EC16A99B5F61C01D25AF43DE367C {EfiCpuAP = 0x0,EfiCpuBSP = 0x1,EfiCpuDesignationMaximum = 0x2,};
enum _90717D1297E26A6756269DE38C3548CE {ShellPromptResponseTypeYesNo = 0x0,ShellPromptResponseTypeYesNoCancel = 0x1,ShellPromptResponseTypeFreeform = 0x2,ShellPromptResponseTypeQuitContinue = 0x3,ShellPromptResponseTypeYesNoAllCancel = 0x4,ShellPromptResponseTypeEnterContinue = 0x5,ShellPromptResponseTypeAnyKeyContinue = 0x6,ShellPromptResponseTypeMax = 0x7,};
struct _90F7CDB8DB98CFCE2328F7FD9610EC29 {unsigned __int16 Other : 1;unsigned __int16 Unknown : 1;unsigned __int16 Standard : 1;unsigned __int16 FastPageMode : 1;unsigned __int16 EDO : 1;unsigned __int16 Parity : 1;unsigned __int16 ECC : 1;unsigned __int16 SIMM : 1;unsigned __int16 DIMM : 1;unsigned __int16 BurstEdo : 1;unsigned __int16 SDRAM : 1;unsigned __int16 Reserved : 5;};
struct _918B2D7F675D96D2951C3A905048EF36 {unsigned __int64 Registration : 1;unsigned __int64 ProbeInterrupt : 1;unsigned __int64 Reserved : 62;};
struct _92B466D6FD853B76FDC043D739C0EAE7 {unsigned __int16 Function : 15;unsigned __int16 Owner : 1;};
enum _93109A519E2DD3430446830243D47C7E {EfiLockUninitialized = 0x0,EfiLockReleased = 0x1,EfiLockAcquired = 0x2,};
struct _95123179A341BAB69E7F321858B4106F {unsigned __int64 Mode : 3;unsigned __int64 ErrorInjection : 3;unsigned __int64 ErrorSeverity : 2;unsigned __int64 ErrorStructure : 5;unsigned __int64 StructureHierarchy : 3;unsigned __int64 Reserved : 32;unsigned __int64 ImplSpec : 16;};
enum _959E5A507D74D459CF68331846A7E182 {MemoryArrayLocationOther = 0x1,MemoryArrayLocationUnknown = 0x2,MemoryArrayLocationSystemBoard = 0x3,MemoryArrayLocationIsaAddonCard = 0x4,MemoryArrayLocationEisaAddonCard = 0x5,MemoryArrayLocationPciAddonCard = 0x6,MemoryArrayLocationMcaAddonCard = 0x7,MemoryArrayLocationPcmciaAddonCard = 0x8,MemoryArrayLocationProprietaryAddonCard = 0x9,MemoryArrayLocationNuBus = 0xA,MemoryArrayLocationPc98C20AddonCard = 0xA0,MemoryArrayLocationPc98C24AddonCard = 0xA1,MemoryArrayLocationPc98EAddonCard = 0xA2,MemoryArrayLocationPc98LocalBusAddonCard = 0xA3,};
enum _96C91716420F1E8AE6D45422D4AE7826 {EfiUfsHcWidthUint8 = 0x0,EfiUfsHcWidthUint16 = 0x1,EfiUfsHcWidthUint32 = 0x2,EfiUfsHcWidthUint64 = 0x3,EfiUfsHcWidthMaximum = 0x4,};
struct _970FFEB6E0B0B4B3E56E8671EDDE531D {unsigned __int32 ProcessorBrandIndex : 8;unsigned __int32 ProcessorClflush : 8;unsigned __int32 ProcessorReserved : 8;unsigned __int32 ProcessorDfltApicId : 8;};
enum _971A3FD93355A67CE0FB1B851D138455 {EfiLegacyMpTableEntryLocalIntTypeInt = 0x0,EfiLegacyMpTableEntryLocalIntTypeNmi = 0x1,EfiLegacyMpTableEntryLocalIntTypeSmi = 0x2,EfiLegacyMpTableEntryLocalIntTypeExtInt = 0x3,};
enum _972AE5CE84C45A26BEE2208833D9BDF7 {EventLogTypeReserved = 0x0,EventLogTypeSingleBitECC = 0x1,EventLogTypeMultiBitECC = 0x2,EventLogTypeParityMemErr = 0x3,EventLogTypeBusTimeOut = 0x4,EventLogTypeIOChannelCheck = 0x5,EventLogTypeSoftwareNMI = 0x6,EventLogTypePOSTMemResize = 0x7,EventLogTypePOSTErr = 0x8,EventLogTypePCIParityErr = 0x9,EventLogTypePCISystemErr = 0xA,EventLogTypeCPUFailure = 0xB,EventLogTypeEISATimeOut = 0xC,EventLogTypeMemLogDisabled = 0xD,EventLogTypeLoggingDisabled = 0xE,EventLogTypeSysLimitExce = 0x10,EventLogTypeAsyncHWTimer = 0x11,EventLogTypeSysConfigInfo = 0x12,EventLogTypeHDInfo = 0x13,EventLogTypeSysReconfig = 0x14,EventLogTypeUncorrectCPUErr = 0x15,EventLogTypeAreaResetAndClr = 0x16,EventLogTypeSystemBoot = 0x17,EventLogTypeUnused = 0x18,EventLogTypeAvailForSys = 0x80,EventLogTypeEndOfLog = 0xFF,};
struct _9941F41FF0093C2959C1E393EB931501 {unsigned __int8 AcpiIsSupported : 1;unsigned __int8 UsbLegacyIsSupported : 1;unsigned __int8 AgpIsSupported : 1;unsigned __int8 I2OBootIsSupported : 1;unsigned __int8 Ls120BootIsSupported : 1;unsigned __int8 AtapiZipDriveBootIsSupported : 1;unsigned __int8 Boot1394IsSupported : 1;unsigned __int8 SmartBatteryIsSupported : 1;};
struct _99481C1AA640EC00BD412A1CA689A01E {unsigned __int64 NumberSets : 8;unsigned __int64 NumberWays : 8;unsigned __int64 NumberEntries : 16;unsigned __int64 PageSizeIsOptimized : 1;unsigned __int64 TcIsUnified : 1;unsigned __int64 EntriesReduction : 1;};
enum _9952D96D536BC2FE24D9C9282A861FEE {EfiIsaAcpiResourceEndOfList = 0x0,EfiIsaAcpiResourceIo = 0x1,EfiIsaAcpiResourceMemory = 0x2,EfiIsaAcpiResourceDma = 0x3,EfiIsaAcpiResourceInterrupt = 0x4,};
enum _99E8DC30B2785BE9E6C25AF582127452 {IGNORE = 0x0,QUICK = 0x1,SPARSE = 0x2,EXTENSIVE = 0x3,MAXLEVEL = 0x4,};
enum _9B2305AF1DCE2ACD8C771DE695B9C6D4 {SxEntry = 0x0,SxExit = 0x1,EfiMaximumPhase = 0x2,};
struct _9C385296CCE56B5A1C0581870770991E {unsigned __int16 Polarity : 2;unsigned __int16 Trigger : 2;unsigned __int16 Reserved : 12;};
enum _9D0E62C210C2681D8E327F353B61EB5C {EfiBluetoothConnCallbackTypeDisconnected = 0x0,EfiBluetoothConnCallbackTypeConnected = 0x1,EfiBluetoothConnCallbackTypeAuthenticated = 0x2,EfiBluetoothConnCallbackTypeEncrypted = 0x3,};
struct _9D13FA2F3D4DC3DA2AD12B3B17827103 {unsigned __int32 reserved1 : 1;unsigned __int32 fixedTPM : 1;unsigned __int32 stClear : 1;unsigned __int32 reserved4 : 1;unsigned __int32 fixedParent : 1;unsigned __int32 sensitiveDataOrigin : 1;unsigned __int32 userWithAuth : 1;unsigned __int32 adminWithPolicy : 1;unsigned __int32 reserved8_9 : 2;unsigned __int32 noDA : 1;unsigned __int32 encryptedDuplication : 1;unsigned __int32 reserved12_15 : 4;unsigned __int32 restricted : 1;unsigned __int32 decrypt : 1;unsigned __int32 sign : 1;unsigned __int32 reserved19_31 : 13;};
enum _9DED694C5CF8D6AFFE222F69F2EEC155 {SalCacheInitFunctionId = 0x0,SalCacheFlushFunctionId = 0x1,};
enum _A0C7A8B03AB39EC9EAA1DD81FF30C415 {EfiNetworkInterfaceUndi = 0x1,};
enum _A10527042240B4E279A00A923C588A4C {VarCheckRequestReserved0 = 0x0,VarCheckRequestReserved1 = 0x1,VarCheckFromTrusted = 0x2,VarCheckFromUntrusted = 0x3,};
enum _A11902A7992589185540AA430CF4AFF8 {PCD_TYPE_8 = 0x0,PCD_TYPE_16 = 0x1,PCD_TYPE_32 = 0x2,PCD_TYPE_64 = 0x3,PCD_TYPE_BOOL = 0x4,PCD_TYPE_PTR = 0x5,};
struct _A1AA68FFA304BCE5A080072956243EF0 {unsigned __int16 Other : 1;unsigned __int16 Unknown : 1;unsigned __int16 SeventyNs : 1;unsigned __int16 SixtyNs : 1;unsigned __int16 FiftyNs : 1;unsigned __int16 Reserved : 11;};
struct _A24A076255906D6E6E9F018976C2044B {unsigned __int8 RangeMode : 1;unsigned __int8 Reserved : 7;};
enum _A299BA90A63ED48EEBDAF6B55010F314 {EfiPortableBatteryDeviceChemistryOther = 0x1,EfiPortableBatteryDeviceChemistryUnknown = 0x2,EfiPortableBatteryDeviceChemistryLeadAcid = 0x3,EfiPortableBatteryDeviceChemistryNickelCadmium = 0x4,EfiPortableBatteryDeviceChemistryNickelMetalHydride = 0x5,EfiPortableBatteryDeviceChemistryLithiumIon = 0x6,EfiPortableBatteryDeviceChemistryZincAir = 0x7,EfiPortableBatteryDeviceChemistryLithiumPolymer = 0x8,};
struct _A32BAB23E174FF05E35F1007DB000F57 {unsigned __int64 Register : 8;unsigned __int64 ExtendedRegister : 4;unsigned __int64 Function : 3;unsigned __int64 Device : 5;unsigned __int64 Bus : 8;unsigned __int64 Segment : 16;unsigned __int64 Reserved : 20;};
enum _A33916867FA0679FD06A21CCD1FA099D {GetNextHighMonotonicCountFunctionId = 0x0,};
struct _A3842D8E4B7B5B0F57195E6E338BFF95 {unsigned __int32 Fpu : 1;unsigned __int32 Reserved1 : 6;unsigned __int32 Mce : 1;unsigned __int32 Cx8 : 1;unsigned __int32 Apic : 1;unsigned __int32 Reserved2 : 22;};
enum _A4A7036DB846195D87A951F0573D391A {AllocateAnyPages = 0x0,AllocateMaxAddress = 0x1,AllocateAddress = 0x2,MaxAllocateType = 0x3,};
enum _A4FA044F57EB4458ADDA5A16A5D772F0 {ConIn = 0x0,ConOut = 0x1,ErrOut = 0x2,ConInDev = 0x3,ConOutDev = 0x4,ErrOutDev = 0x5,ConsoleTypeMax = 0x6,};
struct _A5259ADE5D385A684FBB8619EA9AC1DA {unsigned __int64 Resv1 : 8;unsigned __int64 Type : 8;unsigned __int64 AddressSignal : 1;unsigned __int64 ControlSignal : 1;unsigned __int64 DataSignal : 1;unsigned __int64 DetectedByResponder : 1;unsigned __int64 DetectedByRequester : 1;unsigned __int64 FirstError : 1;unsigned __int64 OverflowNotLogged : 1;unsigned __int64 Resv2 : 41;};
enum _A6C5B03FB9695260592BAEBD54849F66 {MemoryProfileActionAllocatePages = 0x1,MemoryProfileActionFreePages = 0x2,MemoryProfileActionAllocatePool = 0x3,MemoryProfileActionFreePool = 0x4,};
enum _A7472EA7F31B842BA2E956CD3315A121 {PortTypeNone = 0x0,PortTypeParallelXtAtCompatible = 0x1,PortTypeParallelPortPs2 = 0x2,PortTypeParallelPortEcp = 0x3,PortTypeParallelPortEpp = 0x4,PortTypeParallelPortEcpEpp = 0x5,PortTypeSerialXtAtCompatible = 0x6,PortTypeSerial16450Compatible = 0x7,PortTypeSerial16550Compatible = 0x8,PortTypeSerial16550ACompatible = 0x9,PortTypeScsi = 0xA,PortTypeMidi = 0xB,PortTypeJoyStick = 0xC,PortTypeKeyboard = 0xD,PortTypeMouse = 0xE,PortTypeSsaScsi = 0xF,PortTypeUsb = 0x10,PortTypeFireWire = 0x11,PortTypePcmciaTypeI = 0x12,PortTypePcmciaTypeII = 0x13,PortTypePcmciaTypeIII = 0x14,PortTypeCardBus = 0x15,PortTypeAccessBusPort = 0x16,PortTypeScsiII = 0x17,PortTypeScsiWide = 0x18,PortTypePC98 = 0x19,PortTypePC98Hireso = 0x1A,PortTypePCH98 = 0x1B,PortTypeVideoPort = 0x1C,PortTypeAudioPort = 0x1D,PortTypeModemPort = 0x1E,PortTypeNetworkPort = 0x1F,PortType8251Compatible = 0xA0,PortType8251FifoCompatible = 0xA1,PortTypeOther = 0xFF,};
struct _A790A3F05E48462CC309D5F7A74FBA4B {unsigned __int32 Motherboard : 1;unsigned __int32 RequiresDaughterCard : 1;unsigned __int32 Removable : 1;unsigned __int32 Replaceable : 1;unsigned __int32 HotSwappable : 1;unsigned __int32 Reserved : 27;};
enum _A948103DB07764A4B38F0B9182CB1A8E {EfiCpuStatusUnknown = 0x0,EfiCpuStatusEnabled = 0x1,EfiCpuStatusDisabledByUser = 0x2,EfiCpuStatusDisabledbyBios = 0x3,EfiCpuStatusIdle = 0x4,EfiCpuStatusOther = 0x7,};
enum _AA464D288FD4430E2899565191565752 {EfiIPsecAuthProtocolIKEv1 = 0x0,EfiIPsecAuthProtocolIKEv2 = 0x1,EfiIPsecAuthProtocolMaximum = 0x2,};
enum _AA7BAA2B861C19E798BB13C0EE31D598 {EfiPciOperationBusMasterRead = 0x0,EfiPciOperationBusMasterWrite = 0x1,EfiPciOperationBusMasterCommonBuffer = 0x2,EfiPciOperationBusMasterRead64 = 0x3,EfiPciOperationBusMasterWrite64 = 0x4,EfiPciOperationBusMasterCommonBuffer64 = 0x5,EfiPciOperationMaximum = 0x6,};
struct _AB3202BD2DA0D684DF25DABA7D2EFB6C {unsigned __int8 Enabled : 1;unsigned __int8 Reserved : 7;};
enum _ABA9330DC8794E68D59C5DDCCAAEF90F {EfiIPsecAuthMethodPreSharedSecret = 0x0,EfiIPsecAuthMethodCertificates = 0x1,EfiIPsecAuthMethodMaximum = 0x2,};
enum _ACDEC2FC431F4E266F572DB95D4E3A9D {EfiPointingDeviceTypeOther = 0x1,EfiPointingDeviceTypeUnknown = 0x2,EfiPointingDeviceTypeMouse = 0x3,EfiPointingDeviceTypeTrackBall = 0x4,EfiPointingDeviceTypeTrackPoint = 0x5,EfiPointingDeviceTypeGlidePoint = 0x6,EfiPointingDeviceTouchPad = 0x7,EfiPointingDeviceTouchScreen = 0x8,EfiPointingDeviceOpticalSensor = 0x9,};
struct _AD1E4E03DCEFA33088EE2AE0997F3288 {unsigned __int32 commandIndex : 16;unsigned __int32 reserved16_21 : 6;unsigned __int32 nv : 1;unsigned __int32 extensive : 1;unsigned __int32 flushed : 1;unsigned __int32 cHandles : 3;unsigned __int32 rHandle : 1;unsigned __int32 V : 1;unsigned __int32 Res : 2;};
enum _ADD36AC798F6E527B10EE73D774F8888 {Ip4Config2DataTypeInterfaceInfo = 0x0,Ip4Config2DataTypePolicy = 0x1,Ip4Config2DataTypeManualAddress = 0x2,Ip4Config2DataTypeGateway = 0x3,Ip4Config2DataTypeDnsServer = 0x4,Ip4Config2DataTypeMaximum = 0x5,};
enum _ADF7485699AD0D5BDD257E6DF116DA5F {HttpMethodGet = 0x0,HttpMethodPost = 0x1,HttpMethodPatch = 0x2,HttpMethodOptions = 0x3,HttpMethodConnect = 0x4,HttpMethodHead = 0x5,HttpMethodPut = 0x6,HttpMethodDelete = 0x7,HttpMethodTrace = 0x8,HttpMethodMax = 0x9,};
enum _AE01C214B699FBB54E5C6019F68326B4 {ManagementDeviceTypeOther = 0x1,ManagementDeviceTypeUnknown = 0x2,ManagementDeviceTypeLm75 = 0x3,ManagementDeviceTypeLm78 = 0x4,ManagementDeviceTypeLm79 = 0x5,ManagementDeviceTypeLm80 = 0x6,ManagementDeviceTypeLm81 = 0x7,ManagementDeviceTypeAdm9240 = 0x8,ManagementDeviceTypeDs1780 = 0x9,ManagementDeviceTypeMaxim1617 = 0xA,ManagementDeviceTypeGl518Sm = 0xB,ManagementDeviceTypeW83781D = 0xC,ManagementDeviceTypeHt82H791 = 0xD,};
enum _AE099AE7FBBFCB234EAFC270A757901F {SlotLengthOther = 0x1,SlotLengthUnknown = 0x2,SlotLengthShort = 0x3,SlotLengthLong = 0x4,};
enum _AFA10D688E4DDA6F698B42EE7737E392 {EfiManagementDeviceAddressTypeOther = 0x1,EfiManagementDeviceAddressTypeUnknown = 0x2,EfiManagementDeviceAddressTypeIOPort = 0x3,EfiManagementDeviceAddressTypeMemory = 0x4,EfiManagementDeviceAddressTypeSmbus = 0x5,};
enum _AFC23D8695F224D2818BAB6A2850B4BF {EfiPciIoAttributeOperationGet = 0x0,EfiPciIoAttributeOperationSet = 0x1,EfiPciIoAttributeOperationEnable = 0x2,EfiPciIoAttributeOperationDisable = 0x3,EfiPciIoAttributeOperationSupported = 0x4,EfiPciIoAttributeOperationMaximum = 0x5,};
struct _B0D69B5E405E8F9F7E8FF33C7869725C {unsigned __int32 DeviceType : 16;unsigned __int32 DeviceEnabled : 1;unsigned __int32 Reserved : 15;};
struct _B123E5742C25A9708371954634D8BB88 {unsigned __int8 continueSession : 1;unsigned __int8 auditExclusive : 1;unsigned __int8 auditReset : 1;unsigned __int8 reserved3_4 : 2;unsigned __int8 decrypt : 1;unsigned __int8 encrypt : 1;unsigned __int8 audit : 1;};
enum _B15F5856ACFF16C183F1EFE4FB3B38D9 {OnBoardDeviceExtendedTypeOther = 0x1,OnBoardDeviceExtendedTypeUnknown = 0x2,OnBoardDeviceExtendedTypeVideo = 0x3,OnBoardDeviceExtendedTypeScsiController = 0x4,OnBoardDeviceExtendedTypeEthernet = 0x5,OnBoardDeviceExtendedTypeTokenRing = 0x6,OnBoardDeviceExtendedTypeSound = 0x7,OnBoardDeviceExtendedTypePATAController = 0x8,OnBoardDeviceExtendedTypeSATAController = 0x9,OnBoardDeviceExtendedTypeSASController = 0xA,};
enum _B178AB96F9C60D47C62476B65EFA1419 {LegacyRegionDecoded = 0x0,LegacyRegionNotDecoded = 0x1,LegacyRegionWriteEnabled = 0x2,LegacyRegionWriteDisabled = 0x3,LegacyRegionBootLocked = 0x4,LegacyRegionNotLocked = 0x5,};
enum _B17A4B2C2FCB43DE443CAB0FAD694BC7 {MemoryGranularityOther = 0x1,MemoryGranularityOtherUnknown = 0x2,MemoryGranularityDeviceLevel = 0x3,MemoryGranularityMemPartitionLevel = 0x4,};
enum _B19FA2156659DE45E103EC3EC6D38E48 {DefaultStopBits = 0x0,OneStopBit = 0x1,OneFiveStopBits = 0x2,TwoStopBits = 0x3,};
enum _B274290133773A9B078A468AA22878DB {SMM_IO_UINT8 = 0x0,SMM_IO_UINT16 = 0x1,SMM_IO_UINT32 = 0x2,SMM_IO_UINT64 = 0x3,};
enum _B3FC5742C891AF505A2762C1E6B2B98A {EfiGetPlatformVgaHandle = 0x0,EfiGetPlatformIdeHandle = 0x1,EfiGetPlatformIsaBusHandle = 0x2,EfiGetPlatformUsbHandle = 0x3,};
struct _B6FB430ED78787DB9566EBB533F20987 {unsigned __int32 TemperatureProbeSite : 5;unsigned __int32 TemperatureProbeStatus : 3;unsigned __int32 Reserved : 24;};
enum _B76326B8051BB8DDE6D9C20C0E079616 {AuthenticateSuccess = 0x0,AuthenticateRefused = 0x1,AuthenticateAnticLoggingTokenRequired = 0x2,AuthenticateFiniteCyclicGroupNotSupported = 0x3,AuthenticationRejected = 0x4,AuthenticateInvalidParameter = 0x5,};
struct _B7B4899CCAFB8BE3FC3B427E891B3484 {unsigned __int8 TemperatureProbeSite : 5;unsigned __int8 TemperatureProbeStatus : 3;};
enum _B7FAA2BAB59E8AAD801FDD6BB12A6264 {EfiIPsecTunnelClearDf = 0x0,EfiIPsecTunnelSetDf = 0x1,EfiIPsecTunnelCopyDf = 0x2,};
enum _B8C0F2687F5EFFBE8F6DE2AAE5E75CAF {EfiUsbPortEnable = 0x1,EfiUsbPortSuspend = 0x2,EfiUsbPortReset = 0x4,EfiUsbPortPower = 0x8,EfiUsbPortOwner = 0xD,EfiUsbPortConnectChange = 0x10,EfiUsbPortEnableChange = 0x11,EfiUsbPortSuspendChange = 0x12,EfiUsbPortOverCurrentChange = 0x13,EfiUsbPortResetChange = 0x14,};
enum _B9B25498C8C94C3A549F998F49553B49 {EfiSlotLengthOther = 0x1,EfiSlotLengthUnknown = 0x2,EfiSlotLengthShort = 0x3,EfiSlotLengthLong = 0x4,};
enum _BA7C58370D72CDECE95984E1F39AE130 {MemoryArrayUseOther = 0x1,MemoryArrayUseUnknown = 0x2,MemoryArrayUseSystemMemory = 0x3,MemoryArrayUseVideoMemory = 0x4,MemoryArrayUseFlashMemory = 0x5,MemoryArrayUseNonVolatileRam = 0x6,MemoryArrayUseCacheMemory = 0x7,};
enum _BD66A47D0D849312C5B317D991F6A54E {SlotUsageOther = 0x1,SlotUsageUnknown = 0x2,SlotUsageAvailable = 0x3,SlotUsageInUse = 0x4,};
struct _BDB77D81536F85D8299C89EBAF86574B {unsigned __int64 WidthOfVirtualAddress : 8;unsigned __int64 WidthOfRid : 8;unsigned __int64 MaxPurgedTlbs : 16;unsigned __int64 Reserved : 32;};
enum _BFF62DD46CF870630879AC1A8133124C {MemoryErrorOperationOther = 0x1,MemoryErrorOperationUnknown = 0x2,MemoryErrorOperationRead = 0x3,MemoryErrorOperationWrite = 0x4,MemoryErrorOperationPartialWrite = 0x5,};
enum _C0252F537A2DA259A39A3CFCC1A6AC6F {EfiMemoryStateEnabled = 0x0,EfiMemoryStateUnknown = 0x1,EfiMemoryStateUnsupported = 0x2,EfiMemoryStateError = 0x3,EfiMemoryStateAbsent = 0x4,EfiMemoryStateDisabled = 0x5,EfiMemoryStatePartial = 0x6,};
struct _C04C39A66757B1B312A1927BE6696E8E {unsigned __int32 ProcessorSteppingId : 4;unsigned __int32 ProcessorModel : 4;unsigned __int32 ProcessorFamily : 4;unsigned __int32 ProcessorType : 2;unsigned __int32 ProcessorReserved1 : 2;unsigned __int32 ProcessorXModel : 4;unsigned __int32 ProcessorXFamily : 8;unsigned __int32 ProcessorReserved2 : 4;};
struct _C065A6288ECD7876164DB9BCE6EAE83D {unsigned __int64 StructInfoIsValid : 1;unsigned __int64 CacheType : 2;unsigned __int64 PortionOfCacheLine : 3;unsigned __int64 Mechanism : 3;unsigned __int64 DataPoisonOfCacheLine : 1;unsigned __int64 Reserved1 : 22;unsigned __int64 TrigerInfoIsValid : 1;unsigned __int64 Triger : 4;unsigned __int64 PrivilegeOfTriger : 3;unsigned __int64 Reserved2 : 24;};
struct _C06ADBDF6130E5C3AE44F56711A7C5D0 {unsigned __int64 Length : 32;unsigned __int64 ChecksumValid : 1;unsigned __int64 Reserved1 : 7;unsigned __int64 ByteChecksum : 8;unsigned __int64 Reserved2 : 16;};
struct _C0C8A9087C30B1CE8B2D8EC81C6D3AF6 {unsigned __int16 IpmiSpecLeastSignificantDigit : 4;unsigned __int16 IpmiSpecMostSignificantDigit : 4;unsigned __int16 Reserved : 8;};
enum _C116679D3C4381D6EBC62E6B404B9837 {EfiStandbyButtonEntry = 0x0,EfiStandbyButtonExit = 0x1,EfiStandbyButtonMax = 0x2,};
enum _C28D067834907A2D8E688B344643B30B {RsaKeyN = 0x0,RsaKeyE = 0x1,RsaKeyD = 0x2,RsaKeyP = 0x3,RsaKeyQ = 0x4,RsaKeyDp = 0x5,RsaKeyDq = 0x6,RsaKeyQInv = 0x7,};
enum _C3F53859152DC2913060FB84F66D40BE {Ip6ConfigPolicyManual = 0x0,Ip6ConfigPolicyAutomatic = 0x1,};
enum _C59D082E545ADE786E8A5E445C3FC2C9 {VarCleanupAll = 0x0,VarCleanupManually = 0x1,VarCleanupMax = 0x2,};
enum _C5C8319CD3A72760061BD65C5F8E3DEF {PowerButtonEntry = 0x0,PowerButtonExit = 0x1,};
enum _C62C243F0C5C483F72E85EE69F51A00F {EFI_PXE_BASE_CODE_FUNCTION_FIRST = 0x0,EFI_PXE_BASE_CODE_FUNCTION_DHCP = 0x1,EFI_PXE_BASE_CODE_FUNCTION_DISCOVER = 0x2,EFI_PXE_BASE_CODE_FUNCTION_MTFTP = 0x3,EFI_PXE_BASE_CODE_FUNCTION_UDP_WRITE = 0x4,EFI_PXE_BASE_CODE_FUNCTION_UDP_READ = 0x5,EFI_PXE_BASE_CODE_FUNCTION_ARP = 0x6,EFI_PXE_BASE_CODE_FUNCTION_IGMP = 0x7,EFI_PXE_BASE_CODE_PXE_FUNCTION_LAST = 0x8,};
enum _C69E8B22FB21F2268952C60E189C51D2 {EfiCacheWriteThrough = 0x0,EfiCacheWriteBack = 0x1,EfiCacheDynamicMode = 0x2,EfiCacheUnknownMode = 0x3,};
enum _C6B9B55EC0CF2CC10BC8BD6EC3D85252 {AllHandles = 0x0,ByRegisterNotify = 0x1,ByProtocol = 0x2,};
enum _C72F4BD5F5A673D64E8D26D9FA1E85F0 {GetTimeFunctionId = 0x0,SetTimeFunctionId = 0x1,GetWakeupTimeFunctionId = 0x2,SetWakeupTimeFunctionId = 0x3,GetRtcFreqFunctionId = 0x4,InitializeThresholdFunctionId = 0x5,BumpThresholdCountFunctionId = 0x6,GetThresholdCountFunctionId = 0x7,};
enum _C78092EB030A12406EA7F86B4504025B {MiscChassisTypeOther = 0x1,MiscChassisTypeUnknown = 0x2,MiscChassisTypeDeskTop = 0x3,MiscChassisTypeLowProfileDesktop = 0x4,MiscChassisTypePizzaBox = 0x5,MiscChassisTypeMiniTower = 0x6,MiscChassisTypeTower = 0x7,MiscChassisTypePortable = 0x8,MiscChassisTypeLapTop = 0x9,MiscChassisTypeNotebook = 0xA,MiscChassisTypeHandHeld = 0xB,MiscChassisTypeDockingStation = 0xC,MiscChassisTypeAllInOne = 0xD,MiscChassisTypeSubNotebook = 0xE,MiscChassisTypeSpaceSaving = 0xF,MiscChassisTypeLunchBox = 0x10,MiscChassisTypeMainServerChassis = 0x11,MiscChassisTypeExpansionChassis = 0x12,MiscChassisTypeSubChassis = 0x13,MiscChassisTypeBusExpansionChassis = 0x14,MiscChassisTypePeripheralChassis = 0x15,MiscChassisTypeRaidChassis = 0x16,MiscChassisTypeRackMountChassis = 0x17,MiscChassisTypeSealedCasePc = 0x18,MiscChassisMultiSystemChassis = 0x19,MiscChassisCompactPCI = 0x1A,MiscChassisAdvancedTCA = 0x1B,MiscChassisBlade = 0x1C,MiscChassisBladeEnclosure = 0x1D,MiscChassisTablet = 0x1E,MiscChassisConvertible = 0x1F,MiscChassisDetachable = 0x20,};
enum _C87C8F97728902EB195A54590E235E72 {EfiMiscChassisTypeOther = 0x1,EfiMiscChassisTypeUnknown = 0x2,EfiMiscChassisTypeDeskTop = 0x3,EfiMiscChassisTypeLowProfileDesktop = 0x4,EfiMiscChassisTypePizzaBox = 0x5,EfiMiscChassisTypeMiniTower = 0x6,EfiMiscChassisTypeTower = 0x7,EfiMiscChassisTypePortable = 0x8,EfiMiscChassisTypeLapTop = 0x9,EfiMiscChassisTypeNotebook = 0xA,EfiMiscChassisTypeHandHeld = 0xB,EfiMiscChassisTypeDockingStation = 0xC,EfiMiscChassisTypeAllInOne = 0xD,EfiMiscChassisTypeSubNotebook = 0xE,EfiMiscChassisTypeSpaceSaving = 0xF,EfiMiscChassisTypeLunchBox = 0x10,EfiMiscChassisTypeMainServerChassis = 0x11,EfiMiscChassisTypeExpansionChassis = 0x12,EfiMiscChassisTypeSubChassis = 0x13,EfiMiscChassisTypeBusExpansionChassis = 0x14,EfiMiscChassisTypePeripheralChassis = 0x15,EfiMiscChassisTypeRaidChassis = 0x16,EfiMiscChassisTypeRackMountChassis = 0x17,EfiMiscChassisTypeSealedCasePc = 0x18,EfiMiscChassisMultiSystemChassis = 0x19,};
enum _C8C896A2FF55122E4FDF3CD9C1B0A192 {AssociateSuccess = 0x0,AssociateRefusedReasonUnspecified = 0x1,AssociateRefusedCapsMismatch = 0x2,AssociateRefusedExtReason = 0x3,AssociateRefusedAPOutOfMemory = 0x4,AssociateRefusedBasicRatesMismatch = 0x5,AssociateRejectedEmergencyServicesNotSupported = 0x6,AssociateRefusedTemporarily = 0x7,};
enum _CAFB146B87FD2034DB1C3FACC2BD5413 {EfiChassisStateOther = 0x1,EfiChassisStateUnknown = 0x2,EfiChassisStateSafe = 0x3,EfiChassisStateWarning = 0x4,EfiChassisStateCritical = 0x5,EfiChassisStateNonRecoverable = 0x6,};
struct _CBD5AAFE0A37E3F94EC954D0A5B2751E {unsigned __int32 CapabilityId : 16;unsigned __int32 CapabilityVersion : 4;unsigned __int32 NextCapabilityOffset : 12;};
enum _CBEB9D737C90FE4F601F542377EA32AE {EfiBusMasterRead = 0x0,EfiBusMasterWrite = 0x1,EfiBusMasterCommonBuffer = 0x2,};
enum _CC5966C4B42F99E407704A4672239B68 {EfiPciWidthUint8 = 0x0,EfiPciWidthUint16 = 0x1,EfiPciWidthUint32 = 0x2,EfiPciWidthUint64 = 0x3,EfiPciWidthFifoUint8 = 0x4,EfiPciWidthFifoUint16 = 0x5,EfiPciWidthFifoUint32 = 0x6,EfiPciWidthFifoUint64 = 0x7,EfiPciWidthFillUint8 = 0x8,EfiPciWidthFillUint16 = 0x9,EfiPciWidthFillUint32 = 0xA,EfiPciWidthFillUint64 = 0xB,EfiPciWidthMaximum = 0xC,};
enum _CE5BF07BBDBC0A77A59EA4F5710024DF {SlotDataBusWidthOther = 0x1,SlotDataBusWidthUnknown = 0x2,SlotDataBusWidth8Bit = 0x3,SlotDataBusWidth16Bit = 0x4,SlotDataBusWidth32Bit = 0x5,SlotDataBusWidth64Bit = 0x6,SlotDataBusWidth128Bit = 0x7,SlotDataBusWidth1X = 0x8,SlotDataBusWidth2X = 0x9,SlotDataBusWidth4X = 0xA,SlotDataBusWidth8X = 0xB,SlotDataBusWidth12X = 0xC,SlotDataBusWidth16X = 0xD,SlotDataBusWidth32X = 0xE,};
enum _CF89EC65AF45EC99BA7EBFC0917E56F7 {LegacyFloppy = 0x0,IdeCDROM = 0x1,IdeLS120 = 0x2,UsbMassStorage = 0x3,SD = 0x4,EMMC = 0x5,UfsDevice = 0x6,MaxDeviceType = 0x7,};
enum _CFA4505BBDB06FEC8F6202BB7238D362 {SalGetStateInfoFunctionId = 0x0,SalGetStateInfoSizeFunctionId = 0x1,SalClearStateInfoFunctionId = 0x2,EsalGetStateBufferFunctionId = 0x3,EsalSaveStateBufferFunctionId = 0x4,};
struct _D0B221078A4E0F678A07442A2174AD85 {unsigned __int64 ThreadId : 16;unsigned __int64 Reserved1 : 16;unsigned __int64 CoreId : 16;unsigned __int64 Reserved2 : 16;};
enum _D0B5F529F135535C2F72FA899444D28F {EfiResetCold = 0x0,EfiResetWarm = 0x1,EfiResetShutdown = 0x2,EfiResetPlatformSpecific = 0x3,};
enum _D1B936570B0E4E70CEFBF14B63080DF4 {EfiPortConnectorTypeNone = 0x0,EfiPortConnectorTypeCentronics = 0x1,EfiPortConnectorTypeMiniCentronics = 0x2,EfiPortConnectorTypeProprietary = 0x3,EfiPortConnectorTypeDB25Male = 0x4,EfiPortConnectorTypeDB25Female = 0x5,EfiPortConnectorTypeDB15Male = 0x6,EfiPortConnectorTypeDB15Female = 0x7,EfiPortConnectorTypeDB9Male = 0x8,EfiPortConnectorTypeDB9Female = 0x9,EfiPortConnectorTypeRJ11 = 0xA,EfiPortConnectorTypeRJ45 = 0xB,EfiPortConnectorType50PinMiniScsi = 0xC,EfiPortConnectorTypeMiniDin = 0xD,EfiPortConnectorTypeMicriDin = 0xE,EfiPortConnectorTypePS2 = 0xF,EfiPortConnectorTypeInfrared = 0x10,EfiPortConnectorTypeHpHil = 0x11,EfiPortConnectorTypeUsb = 0x12,EfiPortConnectorTypeSsaScsi = 0x13,EfiPortConnectorTypeCircularDin8Male = 0x14,EfiPortConnectorTypeCircularDin8Female = 0x15,EfiPortConnectorTypeOnboardIde = 0x16,EfiPortConnectorTypeOnboardFloppy = 0x17,EfiPortConnectorType9PinDualInline = 0x18,EfiPortConnectorType25PinDualInline = 0x19,EfiPortConnectorType50PinDualInline = 0x1A,EfiPortConnectorType68PinDualInline = 0x1B,EfiPortConnectorTypeOnboardSoundInput = 0x1C,EfiPortConnectorTypeMiniCentronicsType14 = 0x1D,EfiPortConnectorTypeMiniCentronicsType26 = 0x1E,EfiPortConnectorTypeHeadPhoneMiniJack = 0x1F,EfiPortConnectorTypeBNC = 0x20,EfiPortConnectorType1394 = 0x21,EfiPortConnectorTypePC98 = 0xA0,EfiPortConnectorTypePC98Hireso = 0xA1,EfiPortConnectorTypePCH98 = 0xA2,EfiPortConnectorTypePC98Note = 0xA3,EfiPortConnectorTypePC98Full = 0xA4,EfiPortConnectorTypeOther = 0xFF,};
struct _D1C2977590748E16F232F61B852C1342 {unsigned __int32 ownerAuthSet : 1;unsigned __int32 endorsementAuthSet : 1;unsigned __int32 lockoutAuthSet : 1;unsigned __int32 reserved3_7 : 5;unsigned __int32 disableClear : 1;unsigned __int32 inLockout : 1;unsigned __int32 tpmGeneratedEPS : 1;unsigned __int32 reserved11_31 : 21;};
struct _D2B893A4D7D1EC443488152BB8E12929 {unsigned __int32 Opcode : 8;unsigned __int32 FusedOperation : 2;unsigned __int32 Reserved : 22;};
enum _D2BB01D62F748AB2E186F0BE4B91EDA7 {EfiProcessorIa32Microcode = 0x1,EfiProcessorIpfPalAMicrocode = 0x2,EfiProcessorIpfPalBMicrocode = 0x3,};
enum _D399EDAE00DDF9BCF717605B2DC5E23E {EfiPaddingPciBus = 0x0,EfiPaddingPciRootBridge = 0x1,};
enum _D411333A86D3311A2C9E0780F0454099 {MemoryTypeOther = 0x1,MemoryTypeUnknown = 0x2,MemoryTypeDram = 0x3,MemoryTypeEdram = 0x4,MemoryTypeVram = 0x5,MemoryTypeSram = 0x6,MemoryTypeRam = 0x7,MemoryTypeRom = 0x8,MemoryTypeFlash = 0x9,MemoryTypeEeprom = 0xA,MemoryTypeFeprom = 0xB,MemoryTypeEprom = 0xC,MemoryTypeCdram = 0xD,MemoryType3Dram = 0xE,MemoryTypeSdram = 0xF,MemoryTypeSgram = 0x10,MemoryTypeRdram = 0x11,MemoryTypeDdr = 0x12,MemoryTypeDdr2 = 0x13,MemoryTypeDdr2FbDimm = 0x14,MemoryTypeDdr3 = 0x18,MemoryTypeFbd2 = 0x19,MemoryTypeDdr4 = 0x1A,MemoryTypeLpddr = 0x1B,MemoryTypeLpddr2 = 0x1C,MemoryTypeLpddr3 = 0x1D,MemoryTypeLpddr4 = 0x1E,};
enum _D49FDA02121923C6D1D9FFE93A952E7B {UsbLegacy = 0x0,UsbWake = 0x1,};
enum _D603210ECBD6F215D124C5E1484CC874 {LoadOptionNumberMax = 0x10000,LoadOptionNumberUnassigned = 0x10000,};
struct _D75F412170960EA6ABEBFCC39AC27BD4 {unsigned __int32 InboundConnectionEnabled : 1;unsigned __int32 OutboundConnectionEnabled : 1;unsigned __int32 Reserved : 30;};
enum _D78241CB2ADAB82AE1F33A0DB8760A87 {EfiLegacyMpTableEntryLocalIntFlagsPolaritySpec = 0x0,EfiLegacyMpTableEntryLocalIntFlagsPolarityActiveHigh = 0x1,EfiLegacyMpTableEntryLocalIntFlagsPolarityReserved = 0x2,EfiLegacyMpTableEntryLocalIntFlagsPolarityActiveLow = 0x3,};
enum _D869608897851A02265460CB3E54D600 {EfiIdeBeforeChannelEnumeration = 0x0,EfiIdeAfterChannelEnumeration = 0x1,EfiIdeBeforeChannelReset = 0x2,EfiIdeAfterChannelReset = 0x3,EfiIdeBusBeforeDevicePresenceDetection = 0x4,EfiIdeBusAfterDevicePresenceDetection = 0x5,EfiIdeResetMode = 0x6,EfiIdeBusPhaseMaximum = 0x7,};
enum _D86D1F119D8CBFCD53A82B721F3E66FA {IO_UINT8 = 0x0,IO_UINT16 = 0x1,IO_UINT32 = 0x2,IO_UINT64 = 0x3,MMIO_COPY_UINT8 = 0x4,MMIO_COPY_UINT16 = 0x5,MMIO_COPY_UINT32 = 0x6,MMIO_COPY_UINT64 = 0x7,};
struct _D8C1EB4E91D1F6F56C646C5A60CD8156 {unsigned __int8 BiosBootSpecIsSupported : 1;unsigned __int8 FunctionKeyNetworkBootIsSupported : 1;unsigned __int8 TargetContentDistributionEnabled : 1;unsigned __int8 UefiSpecificationSupported : 1;unsigned __int8 VirtualMachineSupported : 1;unsigned __int8 ExtensionByte2Reserved : 3;};
struct _D9803BDD96BE0854BBF62FAC3DCED6FD {unsigned __int32 Reserved1 : 6;unsigned __int32 MutipleClk : 1;unsigned __int32 Imcr : 1;unsigned __int32 Reserved2 : 24;};
struct _D9CD934CC3C6C545F069CCD64D080ECD {unsigned __int8 Other : 1;unsigned __int8 Unknown : 1;unsigned __int8 None : 1;unsigned __int8 SingleBitErrorCorrect : 1;unsigned __int8 DoubleBitErrorCorrect : 1;unsigned __int8 ErrorScrubbing : 1;unsigned __int8 Reserved : 2;};
enum _DA366707E422B4A903DA7CC971FC9573 {FormLevel = 0x0,FormSetLevel = 0x1,SystemLevel = 0x2,MaxLevel = 0x3,};
enum _DAB14F083DB9415FC6116219CD1B0FF3 {EfiSystemWakeupTypeReserved = 0x0,EfiSystemWakeupTypeOther = 0x1,EfiSystemWakeupTypeUnknown = 0x2,EfiSystemWakeupTypeApmTimer = 0x3,EfiSystemWakeupTypeModemRing = 0x4,EfiSystemWakeupTypeLanRemote = 0x5,EfiSystemWakeupTypePowerSwitch = 0x6,EfiSystemWakeupTypePciPme = 0x7,EfiSystemWakeupTypeAcPowerRestored = 0x8,};
struct _DAC2B36DB69599D90EFF62986216419F {unsigned __int64 BiosReserved : 16;unsigned __int64 SystemReserved : 16;unsigned __int64 Reserved : 32;};
struct _DADA544C45BF73A6993B25D1748FA1C9 {unsigned __int64 Reserved1 : 36;unsigned __int64 FaultInUndefinedIns : 1;unsigned __int64 NoPresentPmi : 1;unsigned __int64 NoSimpleImpInUndefinedIns : 1;unsigned __int64 NoVariablePState : 1;unsigned __int64 NoVM : 1;unsigned __int64 NoXipXpsrXfs : 1;unsigned __int64 NoXr1ThroughXr3 : 1;unsigned __int64 DisableDynamicPrediction : 1;unsigned __int64 DisableSpontaneousDeferral : 1;unsigned __int64 DisableDynamicDataCachePrefetch : 1;unsigned __int64 DisableDynamicInsCachePrefetch : 1;unsigned __int64 DisableBranchPrediction : 1;unsigned __int64 Reserved2 : 4;unsigned __int64 DisablePState : 1;unsigned __int64 EnableMcaOnDataPoisoning : 1;unsigned __int64 EnableVmsw : 1;unsigned __int64 EnableEnvNotification : 1;unsigned __int64 DisableBinitWithTimeout : 1;unsigned __int64 DisableDPM : 1;unsigned __int64 DisableCoherency : 1;unsigned __int64 DisableCache : 1;unsigned __int64 EnableCmciPromotion : 1;unsigned __int64 EnableMcaToBinitPromotion : 1;unsigned __int64 EnableMcaPromotion : 1;unsigned __int64 EnableBerrPromotion : 1;};
enum _DCCB8A9C81E6ED9386271C3B8628FCED {MemoryChannelTypeOther = 0x1,MemoryChannelTypeUnknown = 0x2,MemoryChannelTypeRambus = 0x3,MemoryChannelTypeSyncLink = 0x4,};
enum _DD2967A2FFD758D2B3051F27AF152EA8 {EFI_SMM_SAVE_STATE_REGISTER_GDTBASE = 0x4,EFI_SMM_SAVE_STATE_REGISTER_IDTBASE = 0x5,EFI_SMM_SAVE_STATE_REGISTER_LDTBASE = 0x6,EFI_SMM_SAVE_STATE_REGISTER_GDTLIMIT = 0x7,EFI_SMM_SAVE_STATE_REGISTER_IDTLIMIT = 0x8,EFI_SMM_SAVE_STATE_REGISTER_LDTLIMIT = 0x9,EFI_SMM_SAVE_STATE_REGISTER_LDTINFO = 0xA,EFI_SMM_SAVE_STATE_REGISTER_ES = 0x14,EFI_SMM_SAVE_STATE_REGISTER_CS = 0x15,EFI_SMM_SAVE_STATE_REGISTER_SS = 0x16,EFI_SMM_SAVE_STATE_REGISTER_DS = 0x17,EFI_SMM_SAVE_STATE_REGISTER_FS = 0x18,EFI_SMM_SAVE_STATE_REGISTER_GS = 0x19,EFI_SMM_SAVE_STATE_REGISTER_LDTR_SEL = 0x1A,EFI_SMM_SAVE_STATE_REGISTER_TR_SEL = 0x1B,EFI_SMM_SAVE_STATE_REGISTER_DR7 = 0x1C,EFI_SMM_SAVE_STATE_REGISTER_DR6 = 0x1D,EFI_SMM_SAVE_STATE_REGISTER_R8 = 0x1E,EFI_SMM_SAVE_STATE_REGISTER_R9 = 0x1F,EFI_SMM_SAVE_STATE_REGISTER_R10 = 0x20,EFI_SMM_SAVE_STATE_REGISTER_R11 = 0x21,EFI_SMM_SAVE_STATE_REGISTER_R12 = 0x22,EFI_SMM_SAVE_STATE_REGISTER_R13 = 0x23,EFI_SMM_SAVE_STATE_REGISTER_R14 = 0x24,EFI_SMM_SAVE_STATE_REGISTER_R15 = 0x25,EFI_SMM_SAVE_STATE_REGISTER_RAX = 0x26,EFI_SMM_SAVE_STATE_REGISTER_RBX = 0x27,EFI_SMM_SAVE_STATE_REGISTER_RCX = 0x28,EFI_SMM_SAVE_STATE_REGISTER_RDX = 0x29,EFI_SMM_SAVE_STATE_REGISTER_RSP = 0x2A,EFI_SMM_SAVE_STATE_REGISTER_RBP = 0x2B,EFI_SMM_SAVE_STATE_REGISTER_RSI = 0x2C,EFI_SMM_SAVE_STATE_REGISTER_RDI = 0x2D,EFI_SMM_SAVE_STATE_REGISTER_RIP = 0x2E,EFI_SMM_SAVE_STATE_REGISTER_RFLAGS = 0x33,EFI_SMM_SAVE_STATE_REGISTER_CR0 = 0x34,EFI_SMM_SAVE_STATE_REGISTER_CR3 = 0x35,EFI_SMM_SAVE_STATE_REGISTER_CR4 = 0x36,EFI_SMM_SAVE_STATE_REGISTER_FCW = 0x100,EFI_SMM_SAVE_STATE_REGISTER_FSW = 0x101,EFI_SMM_SAVE_STATE_REGISTER_FTW = 0x102,EFI_SMM_SAVE_STATE_REGISTER_OPCODE = 0x103,EFI_SMM_SAVE_STATE_REGISTER_FP_EIP = 0x104,EFI_SMM_SAVE_STATE_REGISTER_FP_CS = 0x105,EFI_SMM_SAVE_STATE_REGISTER_DATAOFFSET = 0x106,EFI_SMM_SAVE_STATE_REGISTER_FP_DS = 0x107,EFI_SMM_SAVE_STATE_REGISTER_MM0 = 0x108,EFI_SMM_SAVE_STATE_REGISTER_MM1 = 0x109,EFI_SMM_SAVE_STATE_REGISTER_MM2 = 0x10A,EFI_SMM_SAVE_STATE_REGISTER_MM3 = 0x10B,EFI_SMM_SAVE_STATE_REGISTER_MM4 = 0x10C,EFI_SMM_SAVE_STATE_REGISTER_MM5 = 0x10D,EFI_SMM_SAVE_STATE_REGISTER_MM6 = 0x10E,EFI_SMM_SAVE_STATE_REGISTER_MM7 = 0x10F,EFI_SMM_SAVE_STATE_REGISTER_XMM0 = 0x110,EFI_SMM_SAVE_STATE_REGISTER_XMM1 = 0x111,EFI_SMM_SAVE_STATE_REGISTER_XMM2 = 0x112,EFI_SMM_SAVE_STATE_REGISTER_XMM3 = 0x113,EFI_SMM_SAVE_STATE_REGISTER_XMM4 = 0x114,EFI_SMM_SAVE_STATE_REGISTER_XMM5 = 0x115,EFI_SMM_SAVE_STATE_REGISTER_XMM6 = 0x116,EFI_SMM_SAVE_STATE_REGISTER_XMM7 = 0x117,EFI_SMM_SAVE_STATE_REGISTER_XMM8 = 0x118,EFI_SMM_SAVE_STATE_REGISTER_XMM9 = 0x119,EFI_SMM_SAVE_STATE_REGISTER_XMM10 = 0x11A,EFI_SMM_SAVE_STATE_REGISTER_XMM11 = 0x11B,EFI_SMM_SAVE_STATE_REGISTER_XMM12 = 0x11C,EFI_SMM_SAVE_STATE_REGISTER_XMM13 = 0x11D,EFI_SMM_SAVE_STATE_REGISTER_XMM14 = 0x11E,EFI_SMM_SAVE_STATE_REGISTER_XMM15 = 0x11F,EFI_SMM_SAVE_STATE_REGISTER_IO = 0x200,EFI_SMM_SAVE_STATE_REGISTER_LMA = 0x201,EFI_SMM_SAVE_STATE_REGISTER_PROCESSOR_ID = 0x202,};
enum _DEE2E38004EBAA49A179805F7F651A2C {EfiUsbDataIn = 0x0,EfiUsbDataOut = 0x1,EfiUsbNoData = 0x2,};
enum _E0902748D2F9FEFA2CD41E755335204E {EfiCpuFlushTypeWriteBackInvalidate = 0x0,EfiCpuFlushTypeWriteBack = 0x1,EfiCpuFlushTypeInvalidate = 0x2,EfiCpuMaxFlushType = 0x3,};
enum _E0AB8ED5DBAB2087C9ABE0A02DDF87F8 {Tcp4StateClosed = 0x0,Tcp4StateListen = 0x1,Tcp4StateSynSent = 0x2,Tcp4StateSynReceived = 0x3,Tcp4StateEstablished = 0x4,Tcp4StateFinWait1 = 0x5,Tcp4StateFinWait2 = 0x6,Tcp4StateClosing = 0x7,Tcp4StateTimeWait = 0x8,Tcp4StateCloseWait = 0x9,Tcp4StateLastAck = 0xA,};
struct _E34EAFE04B48E1BBA9F26DFA4324A02D {unsigned __int8 SubtractiveDecode : 1;unsigned __int8 Reserved : 7;};
enum _E4A12007A93C2C7B8F7AE732891048CC {EfiStringAscii = 0x0,EfiStringUnicode = 0x1,EfiStringToken = 0x2,};
enum _E66621B17FF7D6808B0DC04D4F01C32D {ResetSystemFunctionId = 0x0,};
struct _E6FD69CE8E5A82DF22B0F915D720319F {unsigned __int64 Register : 8;unsigned __int64 Function : 3;unsigned __int64 Device : 5;unsigned __int64 Bus : 8;unsigned __int64 Segment : 8;unsigned __int64 Reserved : 32;};
enum _E72E378AD077682DAA371466853F7DBD {EfiPlatformConfigurationActionNone = 0x0,EfiPlatformConfigurationActionStopController = 0x1,EfiPlatformConfigurationActionRestartController = 0x2,EfiPlatformConfigurationActionRestartPlatform = 0x3,EfiPlatformConfigurationActionNvramFailed = 0x4,EfiPlatformConfigurationActionMaximum = 0x5,};
struct _E81C3621FE4B8D0647DEBCD1A2C3FDDB {unsigned __int16 CF : 1;unsigned __int16 Reserved1 : 1;unsigned __int16 PF : 1;unsigned __int16 Reserved2 : 1;unsigned __int16 AF : 1;unsigned __int16 Reserved3 : 1;unsigned __int16 ZF : 1;unsigned __int16 SF : 1;unsigned __int16 TF : 1;unsigned __int16 IF : 1;unsigned __int16 DF : 1;unsigned __int16 OF : 1;unsigned __int16 IOPL : 2;unsigned __int16 NT : 1;unsigned __int16 Reserved4 : 1;};
struct _E8F7335BD81B7D3A95E2C4115985CC81 {unsigned __int32 DIMMNumber : 4;unsigned __int32 MemoryChannelNumber : 4;unsigned __int32 MemoryControllerID : 4;unsigned __int32 SocketID : 4;unsigned __int32 NodeControllerID : 12;unsigned __int32 Reserved_28 : 4;};
enum _E91975BE49339FF85DEF21B3736E1341 {EfiDriverHealthStatusHealthy = 0x0,EfiDriverHealthStatusRepairRequired = 0x1,EfiDriverHealthStatusConfigurationRequired = 0x2,EfiDriverHealthStatusFailed = 0x3,EfiDriverHealthStatusReconnectRequired = 0x4,EfiDriverHealthStatusRebootRequired = 0x5,};
struct _E9F8F3E39EC43130991818C880C66C09 {unsigned __int64 Reserved1 : 2;unsigned __int64 Unknown : 1;unsigned __int64 BiosCharacteristicsNotSupported : 1;unsigned __int64 IsaIsSupported : 1;unsigned __int64 McaIsSupported : 1;unsigned __int64 EisaIsSupported : 1;unsigned __int64 PciIsSupported : 1;unsigned __int64 PcmciaIsSupported : 1;unsigned __int64 PlugAndPlayIsSupported : 1;unsigned __int64 ApmIsSupported : 1;unsigned __int64 BiosIsUpgradable : 1;unsigned __int64 BiosShadowingAllowed : 1;unsigned __int64 VlVesaIsSupported : 1;unsigned __int64 EscdSupportIsAvailable : 1;unsigned __int64 BootFromCdIsSupported : 1;unsigned __int64 SelectableBootIsSupported : 1;unsigned __int64 RomBiosIsSocketed : 1;unsigned __int64 BootFromPcmciaIsSupported : 1;unsigned __int64 EDDSpecificationIsSupported : 1;unsigned __int64 JapaneseNecFloppyIsSupported : 1;unsigned __int64 JapaneseToshibaFloppyIsSupported : 1;unsigned __int64 Floppy525_360IsSupported : 1;unsigned __int64 Floppy525_12IsSupported : 1;unsigned __int64 Floppy35_720IsSupported : 1;unsigned __int64 Floppy35_288IsSupported : 1;unsigned __int64 PrintScreenIsSupported : 1;unsigned __int64 Keyboard8042IsSupported : 1;unsigned __int64 SerialIsSupported : 1;unsigned __int64 PrinterIsSupported : 1;unsigned __int64 CgaMonoIsSupported : 1;unsigned __int64 NecPc98 : 1;unsigned __int64 AcpiIsSupported : 1;unsigned __int64 UsbLegacyIsSupported : 1;unsigned __int64 AgpIsSupported : 1;unsigned __int64 I20BootIsSupported : 1;unsigned __int64 Ls120BootIsSupported : 1;unsigned __int64 AtapiZipDriveBootIsSupported : 1;unsigned __int64 Boot1394IsSupported : 1;unsigned __int64 SmartBatteryIsSupported : 1;unsigned __int64 BiosBootSpecIsSupported : 1;unsigned __int64 FunctionKeyNetworkBootIsSupported : 1;unsigned __int64 Reserved : 22;};
enum _EAE5BD83641377C66842C97A46850E79 {CacheErrorOther = 0x1,CacheErrorUnknown = 0x2,CacheErrorNone = 0x3,CacheErrorParity = 0x4,CacheErrorSingleBit = 0x5,CacheErrorMultiBit = 0x6,};
enum _EB357A142A77DFEF25315D39B9B608BA {EfiProcessorOther = 0x1,EfiProcessorUnknown = 0x2,EfiCentralProcessor = 0x3,EfiMathProcessor = 0x4,EfiDspProcessor = 0x5,EfiVideoProcessor = 0x6,};
enum _EBDC0443FF0CC047EB38A712FE6691C7 {HttpVersion10 = 0x0,HttpVersion11 = 0x1,HttpVersionUnsupported = 0x2,};
struct _EC6CE77CD8A5E681FA699FCAFE971117 {unsigned __int16 PowerSupplyHotReplaceable : 1;unsigned __int16 PowerSupplyPresent : 1;unsigned __int16 PowerSupplyUnplugged : 1;unsigned __int16 InputVoltageRangeSwitch : 4;unsigned __int16 PowerSupplyStatus : 3;unsigned __int16 PowerSupplyType : 4;unsigned __int16 Reserved : 2;};
enum _ECC48FAD91F1C4A888756DDE1A79C566 {BodyParseEventOnData = 0x0,BodyParseEventOnComplete = 0x1,};
struct _EE59026B979B77D0E8B4BCCAB1AFE8A2 {unsigned __int32 CF : 1;unsigned __int32 Reserved1 : 1;unsigned __int32 PF : 1;unsigned __int32 Reserved2 : 1;unsigned __int32 AF : 1;unsigned __int32 Reserved3 : 1;unsigned __int32 ZF : 1;unsigned __int32 SF : 1;unsigned __int32 TF : 1;unsigned __int32 IF : 1;unsigned __int32 DF : 1;unsigned __int32 OF : 1;unsigned __int32 IOPL : 2;unsigned __int32 NT : 1;unsigned __int32 Reserved4 : 2;unsigned __int32 VM : 1;unsigned __int32 Reserved5 : 14;};
enum _EEB291B15B648ABDE4B36ED296CC9ED8 {EfiDriverConfigurationActionNone = 0x0,EfiDriverConfigurationActionStopController = 0x1,EfiDriverConfigurationActionRestartController = 0x2,EfiDriverConfigurationActionRestartPlatform = 0x3,EfiDriverConfigurationActionMaximum = 0x4,};
enum _EF11D5BB7C1332D7393EF9664B01AFE6 {EfiIPsecInBound = 0x0,EfiIPsecOutBound = 0x1,};
enum _F1A0100F1B5431C2EA5BC18FC8E0713B {ProcessorCoreFrequencyRecordType = 0x1,ProcessorFsbFrequencyRecordType = 0x2,ProcessorVersionRecordType = 0x3,ProcessorManufacturerRecordType = 0x4,ProcessorSerialNumberRecordType = 0x5,ProcessorIdRecordType = 0x6,ProcessorTypeRecordType = 0x7,ProcessorFamilyRecordType = 0x8,ProcessorVoltageRecordType = 0x9,ProcessorApicBaseAddressRecordType = 0xA,ProcessorApicIdRecordType = 0xB,ProcessorApicVersionNumberRecordType = 0xC,CpuUcodeRevisionDataRecordType = 0xD,ProcessorStatusRecordType = 0xE,ProcessorSocketTypeRecordType = 0xF,ProcessorSocketNameRecordType = 0x10,CacheAssociationRecordType = 0x11,ProcessorMaxCoreFrequencyRecordType = 0x12,ProcessorAssetTagRecordType = 0x13,ProcessorMaxFsbFrequencyRecordType = 0x14,ProcessorPackageNumberRecordType = 0x15,ProcessorCoreFrequencyListRecordType = 0x16,ProcessorFsbFrequencyListRecordType = 0x17,ProcessorHealthStatusRecordType = 0x18,ProcessorCoreCountRecordType = 0x19,ProcessorEnabledCoreCountRecordType = 0x1A,ProcessorThreadCountRecordType = 0x1B,ProcessorCharacteristicsRecordType = 0x1C,ProcessorFamily2RecordType = 0x1D,ProcessorPartNumberRecordType = 0x1E,};
struct _F1C91C1F34DF2478E48B88EFD2B3EA4C {unsigned __int8 CoolingDevice : 5;unsigned __int8 CoolingDeviceStatus : 3;};
enum _F1E84A5C7570F7C036754172AFC627B2 {Dhcp6Init = 0x0,Dhcp6Selecting = 0x1,Dhcp6Requesting = 0x2,Dhcp6Declining = 0x3,Dhcp6Confirming = 0x4,Dhcp6Releasing = 0x5,Dhcp6Bound = 0x6,Dhcp6Renewing = 0x7,Dhcp6Rebinding = 0x8,};
enum _F1FFDB90C6402710275536A9AE14D7CB {Legacy16InitializeYourself = 0x0,Legacy16UpdateBbs = 0x1,Legacy16PrepareToBoot = 0x2,Legacy16Boot = 0x3,Legacy16RetrieveLastBootDevice = 0x4,Legacy16DispatchOprom = 0x5,Legacy16GetTableAddress = 0x6,Legacy16SetKeyboardLeds = 0x7,Legacy16InstallPciHandler = 0x8,};
enum _F2160CDE02B348176156DBB7870003AA {ErrorInternal = 0x1,ErrorBus = 0x10,ErrorMemStorage = 0x4,ErrorTlbStorage = 0x5,ErrorCacheStorage = 0x6,ErrorFunctionalUnit = 0x7,ErrorSelftest = 0x8,ErrorOverflow = 0x9,ErrorVirtualMap = 0x11,ErrorAccessInvalid = 0x12,ErrorUnimplAccess = 0x13,ErrorLossOfLockstep = 0x14,ErrorResponseInvalid = 0x15,ErrorParity = 0x16,ErrorProtocol = 0x17,ErrorPath = 0x18,ErrorTimeout = 0x19,ErrorPoisoned = 0x1A,};
struct _F22FC22B22192DCDDA0EB3D8A87CEAF0 {unsigned __int64 CacheSize : 32;unsigned __int64 AliasBoundary : 8;unsigned __int64 TagLsBits : 8;unsigned __int64 TagMsBits : 8;};
enum _F363F8EF39A5456995FD21CDAA11E9BA {EfiCacheInternal = 0x0,EfiCacheExternal = 0x1,EfiCacheReserved = 0x2,EfiCacheUnknown = 0x3,};
enum _F410EC407F5E563BE8D0A3E8D6F21628 {ReportStatusCodeServiceFunctionId = 0x0,};
enum _F4B9D3021B7E9F7B6383E4593AEAEC8F {OpenSystem = 0x0,SharedKey = 0x1,FastBSSTransition = 0x2,SAE = 0x3,};
enum _F5EDA5C9FC207E6679F1B8D03404B330 {BaseBoardTypeUnknown = 0x1,BaseBoardTypeOther = 0x2,BaseBoardTypeServerBlade = 0x3,BaseBoardTypeConnectivitySwitch = 0x4,BaseBoardTypeSystemManagementModule = 0x5,BaseBoardTypeProcessorModule = 0x6,BaseBoardTypeIOModule = 0x7,BaseBoardTypeMemoryModule = 0x8,BaseBoardTypeDaughterBoard = 0x9,BaseBoardTypeMotherBoard = 0xA,BaseBoardTypeProcessorMemoryModule = 0xB,BaseBoardTypeProcessorIOModule = 0xC,BaseBoardTypeInterconnectBoard = 0xD,};
struct _F663F2ACD628C345DC4CC4986AE5FCEE {unsigned __int32 Other : 1;unsigned __int32 Unknown : 1;unsigned __int32 NonBurst : 1;unsigned __int32 Burst : 1;unsigned __int32 PipelineBurst : 1;unsigned __int32 Asynchronous : 1;unsigned __int32 Synchronous : 1;unsigned __int32 Reserved : 25;};
enum _F6811BBD1543E1A6B53242B43FD60336 {EfiBltVideoFill = 0x0,EfiBltVideoToBltBuffer = 0x1,EfiBltBufferToVideo = 0x2,EfiBltVideoToVideo = 0x3,EfiGraphicsOutputBltOperationMax = 0x4,};
enum _F6F5779059737EF3E0C88ACD0C7553D7 {ProcessorOther = 0x1,ProcessorUnknown = 0x2,CentralProcessor = 0x3,MathProcessor = 0x4,DspProcessor = 0x5,VideoProcessor = 0x6,};
enum _F7509066599408C2FA2794A73E29ED09 {SystemWakeupTypeReserved = 0x0,SystemWakeupTypeOther = 0x1,SystemWakeupTypeUnknown = 0x2,SystemWakeupTypeApmTimer = 0x3,SystemWakeupTypeModemRing = 0x4,SystemWakeupTypeLanRemote = 0x5,SystemWakeupTypePowerSwitch = 0x6,SystemWakeupTypePciPme = 0x7,SystemWakeupTypeAcPowerRestored = 0x8,};
enum _F80FD94BC9380409383958F1E1704729 {EfiBadgingDisplayAttributeLeftTop = 0x0,EfiBadgingDisplayAttributeCenterTop = 0x1,EfiBadgingDisplayAttributeRightTop = 0x2,EfiBadgingDisplayAttributeCenterRight = 0x3,EfiBadgingDisplayAttributeRightBottom = 0x4,EfiBadgingDisplayAttributeCenterBottom = 0x5,EfiBadgingDisplayAttributeLeftBottom = 0x6,EfiBadgingDisplayAttributeCenterLeft = 0x7,EfiBadgingDisplayAttributeCenter = 0x8,EfiBadgingDisplayAttributeCustomized = 0x9,};
enum _F8512085666538BA112F66D07CB7B171 {EfiUgaDriverFromPciRom = 0x0,EfiUgaDriverFromSystem = 0x1,EfiDriverHandoffMax = 0x2,};
struct _F8A59569CD3F9835ACD986155F8ED016 {unsigned __int32 ChassisType : 16;unsigned __int32 ChassisLockPresent : 1;unsigned __int32 Reserved : 15;};
enum _F9C948DB43B11218619BC0A708779090 {SlotTypeOther = 0x1,SlotTypeUnknown = 0x2,SlotTypeIsa = 0x3,SlotTypeMca = 0x4,SlotTypeEisa = 0x5,SlotTypePci = 0x6,SlotTypePcmcia = 0x7,SlotTypeVlVesa = 0x8,SlotTypeProprietary = 0x9,SlotTypeProcessorCardSlot = 0xA,SlotTypeProprietaryMemoryCardSlot = 0xB,SlotTypeIORiserCardSlot = 0xC,SlotTypeNuBus = 0xD,SlotTypePci66MhzCapable = 0xE,SlotTypeAgp = 0xF,SlotTypeApg2X = 0x10,SlotTypeAgp4X = 0x11,SlotTypePciX = 0x12,SlotTypeAgp8X = 0x13,SlotTypeM2Socket1_DP = 0x14,SlotTypeM2Socket1_SD = 0x15,SlotTypeM2Socket2 = 0x16,SlotTypeM2Socket3 = 0x17,SlotTypeMxmTypeI = 0x18,SlotTypeMxmTypeII = 0x19,SlotTypeMxmTypeIIIStandard = 0x1A,SlotTypeMxmTypeIIIHe = 0x1B,SlotTypeMxmTypeIV = 0x1C,SlotTypeMxm30TypeA = 0x1D,SlotTypeMxm30TypeB = 0x1E,SlotTypePciExpressGen2Sff_8639 = 0x1F,SlotTypePciExpressGen3Sff_8639 = 0x20,SlotTypePC98C20 = 0xA0,SlotTypePC98C24 = 0xA1,SlotTypePC98E = 0xA2,SlotTypePC98LocalBus = 0xA3,SlotTypePC98Card = 0xA4,SlotTypePciExpress = 0xA5,SlotTypePciExpressX1 = 0xA6,SlotTypePciExpressX2 = 0xA7,SlotTypePciExpressX4 = 0xA8,SlotTypePciExpressX8 = 0xA9,SlotTypePciExpressX16 = 0xAA,SlotTypePciExpressGen2 = 0xAB,SlotTypePciExpressGen2X1 = 0xAC,SlotTypePciExpressGen2X2 = 0xAD,SlotTypePciExpressGen2X4 = 0xAE,SlotTypePciExpressGen2X8 = 0xAF,SlotTypePciExpressGen2X16 = 0xB0,SlotTypePciExpressGen3 = 0xB1,SlotTypePciExpressGen3X1 = 0xB2,SlotTypePciExpressGen3X2 = 0xB3,SlotTypePciExpressGen3X4 = 0xB4,SlotTypePciExpressGen3X8 = 0xB5,SlotTypePciExpressGen3X16 = 0xB6,};
enum _F9F2EE0F9800FE07839876E6A667D97B {EfiRaw = 0x0,EfiValid = 0x1,EfiInvalid = 0x2,EfiUnknown = 0x3,};
enum _F9FA34DEB47BB784E78B8C588968892C {IeeePrivate = 0x0,IeeePrivatewithGuest = 0x1,IeeeChargeablePublic = 0x2,IeeeFreePublic = 0x3,IeeePersonal = 0x4,IeeeEmergencyServOnly = 0x5,IeeeTestOrExp = 0xE,IeeeWildcard = 0xF,};
struct _FAD500F6BE151EBFA0EB41EE086D7C89 {unsigned __int32 VoltageProbeSite : 5;unsigned __int32 VoltageProbeStatus : 3;unsigned __int32 Reserved : 24;};
enum _FAF8C4326046EF113A8D313610673ECC {ARG_NO_ATTRIB = 0x0,ARG_IS_QUOTED = 0x1,ARG_PARTIALLY_QUOTED = 0x2,ARG_FIRST_HALF_QUOTED = 0x4,ARG_FIRST_CHAR_IS_ESC = 0x8,};
enum _FB55D95FD8EF50A3D8A3058B012DA2B2 {PointingDeviceTypeOther = 0x1,PointingDeviceTypeUnknown = 0x2,PointingDeviceTypeMouse = 0x3,PointingDeviceTypeTrackBall = 0x4,PointingDeviceTypeTrackPoint = 0x5,PointingDeviceTypeGlidePoint = 0x6,PointingDeviceTouchPad = 0x7,PointingDeviceTouchScreen = 0x8,PointingDeviceOpticalSensor = 0x9,};
struct _FB82E4901BECB6AC97749608974BB812 {unsigned __int32 phEnable : 1;unsigned __int32 shEnable : 1;unsigned __int32 ehEnable : 1;unsigned __int32 reserved3_30 : 28;unsigned __int32 orderly : 1;};
struct _FC37A93F9A7B7F8791686F00B8D94AEE {unsigned __int32 Length : 24;unsigned __int32 Type : 8;};
enum _FD0EA93A930B2E5D5B959C35A81D8275 {EfiPciIoWidthUint8 = 0x0,EfiPciIoWidthUint16 = 0x1,EfiPciIoWidthUint32 = 0x2,EfiPciIoWidthUint64 = 0x3,EfiPciIoWidthFifoUint8 = 0x4,EfiPciIoWidthFifoUint16 = 0x5,EfiPciIoWidthFifoUint32 = 0x6,EfiPciIoWidthFifoUint64 = 0x7,EfiPciIoWidthFillUint8 = 0x8,EfiPciIoWidthFillUint16 = 0x9,EfiPciIoWidthFillUint32 = 0xA,EfiPciIoWidthFillUint64 = 0xB,EfiPciIoWidthMaximum = 0xC,};
struct _FEB5BFE80B7B966C8F41CA5B2E3B851B {unsigned __int8 Five : 1;unsigned __int8 Three : 1;unsigned __int8 Two : 1;unsigned __int8 Reserved : 5;};
enum _FF74624F674BAA52F779FF2F319E29E6 {EfiCpuInit = 0x0,EfiCpuMaxInitType = 0x1,};
typedef struct _91BCB217EE4E0D315146F9D97B70E581 EFI_80211_AUTHENTICATE_DATA_TOKEN;
typedef struct _3B20605EA09536B4367411F2FAFF7675 EFI_80211_COUNTRY_TRIPLET_OPERATE;
typedef struct _ACEDB2296F40976713AE47A4177828DE EFI_80211_COUNTRY_TRIPLET_SUBBAND;
typedef struct _98F790DC9A2E78F45D47D308C3681F20 EFI_80211_DISASSOCIATE_DATA_TOKEN;
typedef struct _4A90C62CD962DACDB51DD5DF93BE7C21 EFI_ACPI_5_0_PCCT_SUBSPACE_HEADER;
typedef struct _4A90C62CD962DACDB51DD5DF93BE7C21 EFI_ACPI_5_1_PCCT_SUBSPACE_HEADER;
typedef struct _4A90C62CD962DACDB51DD5DF93BE7C21 EFI_ACPI_6_0_PCCT_SUBSPACE_HEADER;
typedef struct _0BD318F0FBBE20ABFA06468A5B13DA9A EFI_ACPI_ADDRESS_SPACE_DESCRIPTOR;
typedef struct _E645B51A58D7D93C8B1533911DFA57FB EFI_DEBUG_IMAGE_INFO_TABLE_HEADER;
typedef struct _EFI_DRIVER_CONFIGURATION_PROTOCOL EFI_DRIVER_CONFIGURATION_PROTOCOL;
typedef struct _EFI_FAULT_TOLERANT_WRITE_PROTOCOL EFI_FAULT_TOLERANT_WRITE_PROTOCOL;
typedef struct _51974BA1E88C55CCB279A8B94E84A524 EFI_FIRMWARE_IMAGE_AUTHENTICATION;
typedef struct _3FB406B97DA606C7C1844B196F769E09 EFI_FREEFORM_SUBTYPE_GUID_SECTION;
typedef struct _E14DA716ADFBC12D364879F193E40921 EFI_GRAPHICS_OUTPUT_PROTOCOL_MODE;
typedef struct _EFI_HII_AIBT_OVERLAY_IMAGES_BLOCK EFI_HII_AIBT_OVERLAY_IMAGES_BLOCK;
typedef struct _EFI_HII_GIBT_GLYPHS_DEFAULT_BLOCK EFI_HII_GIBT_GLYPHS_DEFAULT_BLOCK;
typedef struct _EFI_HII_IMAGE_PALETTE_INFO_HEADER EFI_HII_IMAGE_PALETTE_INFO_HEADER;
typedef struct _EFI_ISCSI_INITIATOR_NAME_PROTOCOL EFI_ISCSI_INITIATOR_NAME_PROTOCOL;
typedef struct _EFI_LEGACY_BIOS_PLATFORM_PROTOCOL EFI_LEGACY_BIOS_PLATFORM_PROTOCOL;
typedef struct _54FE3DB773D7B15849DFA3D4C6C5E58D EFI_MANAGED_NETWORK_FRAGMENT_DATA;
typedef struct _795FB50BB00C5222A29D9E9AD36BECE3 EFI_MANAGED_NETWORK_TRANSMIT_DATA;
typedef struct _B60217F40C2AC1A978E0A5285A5747F3 EFI_MEMORY_CONTROLLER_INFORMATION;
typedef struct _98A6DDA279CF30F97FDAD1377CAD4229 EFI_MISC_IPMI_INTERFACE_TYPE_DATA;
typedef struct _CD8F6CF4509A37A7E9122CFAC2543CAF EFI_MISC_SYSTEM_MANUFACTURER_DATA;
typedef struct _2E729EBBBD6B2823C28E1754E584A42B EFI_MISC_SYSTEM_POWER_SUPPLY_DATA;
typedef struct _EF06F899AB40CEA3705D0602563CA587 EFI_PCI_IO_PROTOCOL_CONFIG_ACCESS;
typedef struct _EFI_PEI_FIRMWARE_VOLUME_INFO2_PPI EFI_PEI_FIRMWARE_VOLUME_INFO2_PPI;
typedef struct _CDAD2CCD829691FEAE05A88E0D75617A EFI_PEI_TEMPORARY_RAM_SUPPORT_PPI;
typedef struct _EFI_SEC_PLATFORM_INFORMATION2_PPI EFI_SEC_PLATFORM_INFORMATION2_PPI;
typedef struct _EFI_SIMPLE_TEXT_INPUT_EX_PROTOCOL EFI_SIMPLE_TEXT_INPUT_EX_PROTOCOL;
typedef union _87CB00AD9525686B000DA88190BC3C28 EFI_SMM_FLOATING_POINT_SAVE_STATE;
typedef struct _05374CD723BB736B76BC23503CF5826E EFI_SMM_LOCK_BOX_PARAMETER_HEADER;
typedef struct _5A798AB4BEBA23E489D8B44C4CE7F7C3 EFI_SMM_LOCK_BOX_PARAMETER_UPDATE;
typedef struct _2B9C51E1EB0CFEA1A335CC815BBD80CF EFI_TO_COMPATIBILITY16_BOOT_TABLE;
typedef struct _4A8B02B1FCA615ED6943CF12A4FAF5EF EFI_TO_COMPATIBILITY16_INIT_TABLE;
typedef struct _62EF891F2D5495DD7B2B546D99F537D1 FIRMWARE_PERFORMANCE_RUNTIME_DATA;
typedef union _80683930D45E06D3195B4F9BDBEC48CB HPET_TIMER_CONFIGURATION_REGISTER;
typedef struct _D61787A53E5B63729D68258870402E8E MEDIA_FW_VOL_FILEPATH_DEVICE_PATH;
typedef struct _A32BAB23E174FF05E35F1007DB000F57 SAL_PCI_EXTENDED_REGISTER_ADDRESS;
typedef struct _E88A504DB990B2650A1E6222F0724E77 DATA_HUB_STATUS_CODE_DATA_RECORD;
typedef struct _EFI_ADAPTER_INFORMATION_PROTOCOL EFI_ADAPTER_INFORMATION_PROTOCOL;
typedef struct _501B5AB5E1108C43AC9B253DE6317146 EFI_ADAPTER_INFO_SAN_MAC_ADDRESS;
typedef struct _E819EBFFCEF5CE9403902F0EE2EF469E EFI_ATA_PASS_THRU_COMMAND_PACKET;
typedef struct _EFI_AUTHENTICATION_INFO_PROTOCOL EFI_AUTHENTICATION_INFO_PROTOCOL;
typedef struct _ADF16AF6473725D355590D9E655FC48B EFI_BLOCK_IO_CRYPTO_CAPABILITIES;
typedef struct _EFI_BOOT_MANAGER_POLICY_PROTOCOL EFI_BOOT_MANAGER_POLICY_PROTOCOL;
typedef struct _EFI_DEFERRED_IMAGE_LOAD_PROTOCOL EFI_DEFERRED_IMAGE_LOAD_PROTOCOL;
typedef struct _9AF33723D657A68520ACCAD5AD6DB40F EFI_DEVICE_PATH_TO_TEXT_PROTOCOL;
typedef struct _15C291F1B4915B5E6D0DFE973FD283A4 EFI_DHCP4_TRANSMIT_RECEIVE_TOKEN;
typedef struct _EFI_DRIVER_DIAGNOSTICS2_PROTOCOL EFI_DRIVER_DIAGNOSTICS2_PROTOCOL;
typedef struct _EFI_EBC_SIMPLE_DEBUGGER_PROTOCOL EFI_EBC_SIMPLE_DEBUGGER_PROTOCOL;
typedef struct _EFI_FIRMWARE_MANAGEMENT_PROTOCOL EFI_FIRMWARE_MANAGEMENT_PROTOCOL;
typedef struct _EFI_GENERIC_MEMORY_TEST_PROTOCOL EFI_GENERIC_MEMORY_TEST_PROTOCOL;
typedef struct _EFI_HII_GIBT_GLYPH_DEFAULT_BLOCK EFI_HII_GIBT_GLYPH_DEFAULT_BLOCK;
typedef struct _A58D879E96FE4F843307298668B1FFEA EFI_HOB_MEMORY_ALLOCATION_HEADER;
typedef struct _FC50B914782F3531749125FC4B4CF216 EFI_HOB_MEMORY_ALLOCATION_MODULE;
typedef struct _EFI_IDE_CONTROLLER_INIT_PROTOCOL EFI_IDE_CONTROLLER_INIT_PROTOCOL;
typedef struct _3300059DD91743924CE884B6AAF6965C EFI_LEGACY_MP_TABLE_ENTRY_IOAPIC;
typedef struct _B2DB38E900464E398875D12AA0CD3AA7 EFI_LEGACY_MP_TABLE_ENTRY_IO_INT;
typedef struct _051ACF97DA2B9D5148EDE2E40852C3BC EFI_MANAGED_NETWORK_RECEIVE_DATA;
typedef struct _E6DFE34E6FB079ABE7101F592187F4C9 EFI_MISC_RESET_CAPABILITIES_DATA;
typedef struct _4BDB915D00C130474DCA811E527C5716 EFI_MISC_RESET_CAPABILITIES_TYPE;
typedef struct _EFI_PCI_HOTPLUG_REQUEST_PROTOCOL EFI_PCI_HOTPLUG_REQUEST_PROTOCOL;
typedef struct _EFI_PEI_BOOT_SCRIPT_EXECUTER_PPI EFI_PEI_BOOT_SCRIPT_EXECUTER_PPI;
typedef struct _EFI_PEI_FIRMWARE_VOLUME_INFO_PPI EFI_PEI_FIRMWARE_VOLUME_INFO_PPI;
typedef struct _5FD6B05A44F9F152F9203B46F0C8FFE2 EFI_PROCESSOR_GENERIC_ERROR_DATA;
typedef struct _E0592557DDB5F086F83BE660642DC445 EFI_SEC_PLATFORM_INFORMATION_CPU;
typedef struct _EFI_SEC_PLATFORM_INFORMATION_PPI EFI_SEC_PLATFORM_INFORMATION_PPI;
typedef struct _37E9EA388AA4ABB1994F5C559292B032 EFI_SMM_COMMUNICATION_ACPI_TABLE;
typedef struct _22108DFF95A395D1C014946DE1B1A386 EFI_SMM_IO_TRAP_REGISTER_CONTEXT;
typedef struct tdEFI_TCG2_BOOT_SERVICE_CAPABILITY EFI_TCG2_BOOT_SERVICE_CAPABILITY;
typedef struct _41285EA2700927FB7EA2A41D735B4286 EFI_TCG2_PHYSICAL_PRESENCE_FLAGS;
typedef struct _AB4F02EC5D8687CEDE27BD0DC086A076 EFI_TREE_PHYSICAL_PRESENCE_FLAGS;
typedef struct _EFI_WATCHDOG_TIMER_ARCH_PROTOCOL EFI_WATCHDOG_TIMER_ARCH_PROTOCOL;
typedef struct _4ECC48ED7FCAB3168E2382E1C8F9C460 FRAMEWORK_EFI_FV_WRITE_FILE_DATA;
typedef struct _0B58B179106A72DC5971B21BA2C44F1E SAL_ST_CACHE_COHERENCE_DECRIPTOR;
typedef struct _EC6CE77CD8A5E681FA699FCAFE971117 SYS_POWER_SUPPLY_CHARACTERISTICS;
typedef struct _TREE_BOOT_SERVICE_CAPABILITY TREE_BOOT_SERVICE_CAPABILITY_1_0;
typedef struct _AE107CD7E394AE46569DF4011EE0BB43 ACPI_VARIABLE_SET_COMPATIBILITY;
typedef struct _8A15A7F84F1451ACE700F39DC39AEB35 ATAPI_READ_FORMAT_CAPACITY_DATA;
typedef struct _96D5CB982C46497217C2745BD21B8DBF DEBUG_AGENT_CONTEXT_POSTMEM_SEC;
typedef struct _DCE545FB5822D896C1B19931B58B1060 DEVICE_LOGICAL_UNIT_DEVICE_PATH;
typedef struct _39AC5BAB33C1EA968D16AFCF90882C1F EFI_ACPI_2_0_IO_SAPIC_STRUCTURE;
typedef struct _39AC5BAB33C1EA968D16AFCF90882C1F EFI_ACPI_3_0_IO_SAPIC_STRUCTURE;
typedef struct _8A099209612A17C8A64394B83E080DEB EFI_ACPI_4_0_ERROR_BLOCK_STATUS;
typedef struct _39AC5BAB33C1EA968D16AFCF90882C1F EFI_ACPI_4_0_IO_SAPIC_STRUCTURE;
typedef struct _8A099209612A17C8A64394B83E080DEB EFI_ACPI_5_0_ERROR_BLOCK_STATUS;
typedef struct _39AC5BAB33C1EA968D16AFCF90882C1F EFI_ACPI_5_0_IO_SAPIC_STRUCTURE;
typedef struct _8A099209612A17C8A64394B83E080DEB EFI_ACPI_5_1_ERROR_BLOCK_STATUS;
typedef struct _39AC5BAB33C1EA968D16AFCF90882C1F EFI_ACPI_5_1_IO_SAPIC_STRUCTURE;
typedef struct _8A099209612A17C8A64394B83E080DEB EFI_ACPI_6_0_ERROR_BLOCK_STATUS;
typedef struct _39AC5BAB33C1EA968D16AFCF90882C1F EFI_ACPI_6_0_IO_SAPIC_STRUCTURE;
typedef struct _E8F7335BD81B7D3A95E2C4115985CC81 EFI_ACPI_6_0_NFIT_DEVICE_HANDLE;
typedef struct _9DCD9FEA850A958FB40634F72A38AE69 EFI_CAPSULE_RESULT_VARIABLE_FMP;
typedef struct _BF5CE2558FAD5ED8EE129BA840FFD778 EFI_CONFIGURE_CLP_PARAMETER_BLK;
typedef struct _5097BD0A68012D8C5CBA0B8FEBE888A1 EFI_DEVICE_HANDLE_EXTENDED_DATA;
typedef struct _B99C53A4D4A2A502622712AA2B3B6D57 EFI_DIRECTED_IO_DMAR_ERROR_DATA;
typedef struct _EFI_DRIVER_DIAGNOSTICS_PROTOCOL EFI_DRIVER_DIAGNOSTICS_PROTOCOL;
typedef struct _EFI_EXT_SCSI_PASS_THRU_PROTOCOL EFI_EXT_SCSI_PASS_THRU_PROTOCOL;
typedef struct _81A175F83A1A01B39FDFDB14C2D5623C EFI_FAULT_TOLERANT_WRITE_HEADER;
typedef struct _3C9AB105FD28B8288E14BA99F6B77FA1 EFI_FAULT_TOLERANT_WRITE_RECORD;
typedef struct _B70FF1D241F46C1C68C0F8CFBF7BB160 EFI_GCD_MEMORY_SPACE_DESCRIPTOR;
typedef struct _DA749B500BCF1C6398D8F890AD4BF94D EFI_GENERIC_ERROR_PCI_DEVICE_ID;
typedef struct _EFI_HII_AIBT_CLEAR_IMAGES_BLOCK EFI_HII_AIBT_CLEAR_IMAGES_BLOCK;
typedef struct _EFI_HII_AIBT_RESTORE_SCRN_BLOCK EFI_HII_AIBT_RESTORE_SCRN_BLOCK;
typedef struct _EFI_HII_CONFIG_ROUTING_PROTOCOL EFI_HII_CONFIG_ROUTING_PROTOCOL;
typedef struct _EFI_HII_DEVICE_PATH_PACKAGE_HDR EFI_HII_DEVICE_PATH_PACKAGE_HDR;
typedef struct _EFI_HII_SIBT_STRINGS_SCSU_BLOCK EFI_HII_SIBT_STRINGS_SCSU_BLOCK;
typedef struct _EFI_HII_SIBT_STRINGS_UCS2_BLOCK EFI_HII_SIBT_STRINGS_UCS2_BLOCK;
typedef struct _EFI_HII_SIMPLE_FONT_PACKAGE_HDR EFI_HII_SIMPLE_FONT_PACKAGE_HDR;
typedef struct _A58305CE0F1A340C2AB5BD9048187F54 EFI_HOB_MEMORY_ALLOCATION_STACK;
typedef struct _AAAD731627CE9493AB267F8807E487A3 EFI_I2C_CONTROLLER_CAPABILITIES;
typedef struct _4A270D6A1801963C90715604F1249229 EFI_IMAGE_ARCHIVE_MEMBER_HEADER;
typedef struct _0DF7F58F05BA8A47511D9D774FEBEBBB EFI_IMAGE_DEBUG_DIRECTORY_ENTRY;
typedef union _7F4437EF562FB8792EA1EF6FAF7BDB19 EFI_IMAGE_OPTIONAL_HEADER_UNION;
typedef struct _2B76BEE91D9E77941F9A934F328D179D EFI_LEGACY_EXPANSION_ROM_HEADER;
typedef struct _36FAC1EDEAA205A7F31A86DB529B3B5A EFI_MANAGED_NETWORK_CONFIG_DATA;
typedef struct _3FDFF6A7F6BE5825D2533BE49141AF63 EFI_MEMORY_SUBCLASS_DRIVER_DATA;
typedef struct _FAD500F6BE151EBFA0EB41EE086D7C89 EFI_MISC_VOLTAGE_PROBE_LOCATION;
typedef struct _EFI_PCI_ROOT_BRIDGE_IO_PROTOCOL EFI_PCI_ROOT_BRIDGE_IO_PROTOCOL;
typedef struct _D7773540B8449B72EBB989E963175901 EFI_PEI_PCI_CFG_PPI_PCI_ADDRESS;
typedef struct _EFI_PEI_READ_ONLY_VARIABLE2_PPI EFI_PEI_READ_ONLY_VARIABLE2_PPI;
typedef struct _EFI_PEI_VECTOR_HANDOFF_INFO_PPI EFI_PEI_VECTOR_HANDOFF_INFO_PPI;
typedef struct _FC542E6EFF6DCA60B8117825EDB2E023 EFI_PLATFORM_MEMORY2_ERROR_DATA;
typedef struct _B7CA63F9D14E9570B450255414BA6B32 EFI_PXE_BASE_CODE_DHCPV4_PACKET;
typedef struct _C4A3E1EFE16F6103EF853C7429C07B27 EFI_PXE_BASE_CODE_DHCPV6_PACKET;
typedef struct _4EE54C0624E0B4590878B2914F6EE3CA EFI_PXE_BASE_CODE_DISCOVER_INFO;
typedef struct _EFI_REGULAR_EXPRESSION_PROTOCOL EFI_REGULAR_EXPRESSION_PROTOCOL;
typedef struct _36291DB4675549E3BB2DB664E05FF826 EFI_SCSI_IO_SCSI_REQUEST_PACKET;
typedef struct _EFI_SECTION_EXTRACTION_PROTOCOL EFI_SECTION_EXTRACTION_PROTOCOL;
typedef struct _EFI_SIMPLE_FILE_SYSTEM_PROTOCOL EFI_SIMPLE_FILE_SYSTEM_PROTOCOL;
typedef struct _EFI_SIMPLE_TEXT_OUTPUT_PROTOCOL EFI_SIMPLE_TEXT_OUTPUT_PROTOCOL;
typedef struct _EFI_SMM_CPU_SAVE_STATE_PROTOCOL EFI_SMM_CPU_SAVE_STATE_PROTOCOL;
typedef struct _2CF69155883F5671704386E2323B7577 EFI_SMM_LOCK_BOX_PARAMETER_SAVE;
typedef struct _EFI_SWAP_ADDRESS_RANGE_PROTOCOL EFI_SWAP_ADDRESS_RANGE_PROTOCOL;
typedef struct _6E47BA13085294F0F049FAD266BFBF7F FRAMEWORK_EFI_IFR_ONE_OF_OPTION;
typedef struct _8C94DE8BD49887808F21B5CF1A10A039 FRAMEWORK_EFI_SCREEN_DESCRIPTOR;
typedef union _064489EE9225A9F91BDA07A272CAAD06 IO_APIC_IDENTIFICATION_REGISTER;
typedef union _BAA371FD3705A9DA82A7651CF9EF53DA IO_APIC_REDIRECTION_TABLE_ENTRY;
typedef struct _D9CD934CC3C6C545F069CCD64D080ECD MEMORY_ERROR_CORRECT_CAPABILITY;
typedef struct _FD74FB9E171A16024A3BCE3E9FC560FE MEMORY_STATUSCODE_PACKET_HEADER;
typedef struct _B7B4899CCAFB8BE3FC3B427E891B3484 MISC_TEMPERATURE_PROBE_LOCATION;
typedef struct _D67234C38A4A90EBB848D36B211176AF SMM_VARIABLE_COMMUNICATE_HEADER;
typedef struct _TCG_EFI_BOOT_SERVICE_CAPABILITY TCG_EFI_BOOT_SERVICE_CAPABILITY;
typedef struct _B4EC90CC378E611CA57EECB0114DEA34 TCG_EfiSpecIdEventAlgorithmSize;
enum _EFI_EAPOL_SUPPLICANT_PAE_STATE {Logoff = 0x0,Disconnected = 0x1,Connecting = 0x2,Acquired = 0x3,Authenticating = 0x4,Held = 0x5,Authenticated = 0x6,MaxSupplicantPaeState = 0x7,};
typedef struct _CC500B7AA595BF44683AE05BCAF41C59 ADAPTER_INFO_PLATFORM_SECURITY;
typedef void (*CLOSE_PROTOCOL_INFO_ENUMERATOR)(void);
typedef struct _245EABCE14800BB4F506C211CCF9ADFB EFI_80211_ASSOCIATE_DATA_TOKEN;
typedef struct _D7C9B7662B4CC4760572E38A2E597007 EFI_80211_ELEMENT_SUPP_CHANNEL;
typedef struct _9EB5FD01F162F4E0C11D9C14A6D00AC6 EFI_ACPI_1_0_IO_APIC_STRUCTURE;
typedef struct _F7B5EF35B486C72B6C55B1D2ABBDC47D EFI_ACPI_2_0_IO_APIC_STRUCTURE;
typedef struct _F7B5EF35B486C72B6C55B1D2ABBDC47D EFI_ACPI_3_0_IO_APIC_STRUCTURE;
typedef struct _F7B5EF35B486C72B6C55B1D2ABBDC47D EFI_ACPI_4_0_IO_APIC_STRUCTURE;
typedef struct _F7B5EF35B486C72B6C55B1D2ABBDC47D EFI_ACPI_5_0_IO_APIC_STRUCTURE;
typedef struct _7FDD791C5D5C2DB8B1EB55DA299AFE45 EFI_ACPI_5_0_RAS_FEATURE_TABLE;
typedef struct _F7B5EF35B486C72B6C55B1D2ABBDC47D EFI_ACPI_5_1_IO_APIC_STRUCTURE;
typedef struct _7FDD791C5D5C2DB8B1EB55DA299AFE45 EFI_ACPI_5_1_RAS_FEATURE_TABLE;
typedef struct _3DD135A1846455AB3F98A7B3772E5511 EFI_ACPI_6_0_GIC_ITS_STRUCTURE;
typedef struct _F7B5EF35B486C72B6C55B1D2ABBDC47D EFI_ACPI_6_0_IO_APIC_STRUCTURE;
typedef struct _7FDD791C5D5C2DB8B1EB55DA299AFE45 EFI_ACPI_6_0_RAS_FEATURE_TABLE;
typedef struct _E0FDAC4E3BDC65FDC092E8C9926C0FAA EFI_ACPI_IRQ_NOFLAG_DESCRIPTOR;
typedef struct _EA987423373AACA749C5D6780BE186D2 EFI_BLOCK_IO_CRYPTO_CAPABILITY;
typedef struct _F760AA4E81877DFB0F36C2C7103BECD1 EFI_CERT_BLOCK_RSA_2048_SHA256;
typedef struct _BD293684573ABF5801F8B327D47CE441 EFI_COMMON_ERROR_RECORD_HEADER;
typedef struct _EFI_EAP_CONFIGURATION_PROTOCOL EFI_EAP_CONFIGURATION_PROTOCOL;
typedef struct _24E30838B41D77CF76B20463CBB19FAC EFI_FIRMWARE_VOLUME_EXT_HEADER;
typedef struct _EFI_HII_CONFIG_ACCESS_PROTOCOL EFI_HII_CONFIG_ACCESS_PROTOCOL;
typedef struct _EFI_HII_IIBT_IMAGE_24BIT_BLOCK EFI_HII_IIBT_IMAGE_24BIT_BLOCK;
typedef struct _EFI_HII_SIBT_STRING_SCSU_BLOCK EFI_HII_SIBT_STRING_SCSU_BLOCK;
typedef struct _EFI_HII_SIBT_STRING_UCS2_BLOCK EFI_HII_SIBT_STRING_UCS2_BLOCK;
typedef struct _9B338B1ECA777DDCC35A46B3A383BA71 EFI_IMAGE_EXECUTION_INFO_TABLE;
typedef struct _8754740161C8FE72AF0FA8DD9A08DEA8 EFI_IP4_CONFIG2_INTERFACE_INFO;
typedef struct _B81BF1EA0941E9D51BE17A7DCF0447FA EFI_IP4_CONFIG2_MANUAL_ADDRESS;
typedef struct _C475A15E5D0B730907296A932E0930F5 EFI_LEGACY_INSTALL_PCI_HANDLER;
typedef struct _7A80A566819C1D2378DE230434781E7C EFI_LEGACY_MP_TABLE_ENTRY_TYPE;
typedef struct _FA0FCFC5E91DF9D5D00202CEA491E9F3 EFI_LEGACY_OPROM_EXTENDED_DATA;
typedef struct _40F9D4927893F5B451F6FFDFBAC62182 EFI_MEMORY_ARRAY_LOCATION_DATA;
typedef struct _EE4C6509791AB78C96F67DF2DF3C5F68 EFI_MEMORY_CHANNEL_DEVICE_DATA;
typedef struct _61ABA295D204D35FC0507E348C046E1C EFI_MEMORY_EXTENDED_ERROR_DATA;
typedef struct _FEB5BFE80B7B966C8F41CA5B2E3B851B EFI_MEMORY_MODULE_VOLTAGE_TYPE;
typedef struct _999B3253F035FC888B7A087E274B5CA0 EFI_MEMORY_RANGE_EXTENDED_DATA;
typedef struct _B0D69B5E405E8F9F7E8FF33C7869725C EFI_MISC_ONBOARD_DEVICE_STATUS;
typedef struct _C44C7EFB4C71D381E9E93111208A44F9 EFI_MISC_SYSTEM_EVENT_LOG_DATA;
typedef struct _56B0FCAB77808F3FEC78AD79AAF332E1 EFI_NVM_EXPRESS_PASS_THRU_MODE;
typedef struct _ADB22225E3F1BB84FBD64DC9B54AA0BC EFI_PCIE_ERROR_DATA_CAPABILITY;
typedef struct _EFI_PCI_HOT_PLUG_INIT_PROTOCOL EFI_PCI_HOT_PLUG_INIT_PROTOCOL;
typedef struct _EFI_PEI_READ_ONLY_VARIABLE_PPI EFI_PEI_READ_ONLY_VARIABLE_PPI;
typedef struct _EFI_PEI_RECOVERY_BLOCK_IO2_PPI EFI_PEI_RECOVERY_BLOCK_IO2_PPI;
typedef struct _EFI_PEI_SECTION_EXTRACTION_PPI EFI_PEI_SECTION_EXTRACTION_PPI;
typedef struct _EFI_PEI_TEMPORARY_RAM_DONE_PPI EFI_PEI_TEMPORARY_RAM_DONE_PPI;
typedef struct _C1695DCB02FB6E6E8897AB8527534281 EFI_PLATFORM_MEMORY_ERROR_DATA;
typedef struct _5440331CAFA6ABD3C02CFEC11FF9250F EFI_SCSI_BLOCK_LIMITS_VPD_PAGE;
typedef struct _EFI_SIMPLE_TEXT_INPUT_PROTOCOL EFI_SIMPLE_TEXT_INPUT_PROTOCOL;
typedef struct _EFI_SMART_CARD_READER_PROTOCOL EFI_SMART_CARD_READER_PROTOCOL;
typedef struct _EFI_SMM_COMMUNICATION_PROTOCOL EFI_SMM_COMMUNICATION_PROTOCOL;
typedef struct _EFI_SMM_CONFIGURATION_PROTOCOL EFI_SMM_CONFIGURATION_PROTOCOL;
typedef struct _EFI_SMM_GPI_DISPATCH2_PROTOCOL EFI_SMM_GPI_DISPATCH2_PROTOCOL;
typedef struct _EFI_SMM_ICHN_DISPATCH_PROTOCOL EFI_SMM_ICHN_DISPATCH_PROTOCOL;
typedef struct _A9A65444F717697998060671D7C6CCD7 EFI_SMM_PERIODIC_TIMER_CONTEXT;
typedef struct _EFI_SMM_USB_DISPATCH2_PROTOCOL EFI_SMM_USB_DISPATCH2_PROTOCOL;
typedef struct _134DD5DE943212431F82B8FEEA5AC192 EFI_SMRAM_HOB_DESCRIPTOR_BLOCK;
typedef struct _EFI_UNICODE_COLLATION_PROTOCOL EFI_UNICODE_COLLATION_PROTOCOL;
typedef struct _8598BB303B5E5EB887BC4D9B4A9FE52F FRAMEWORK_EFI_IFR_ORDERED_LIST;
typedef struct _976F629227BF629E9EADB1BA5826EE01 FRAMEWORK_EFI_RUNTIME_SERVICES;
enum MACRO_PCD_INVALID_TOKEN_NUMBER {PCD_INVALID_TOKEN_NUMBER = 0,EFI_PCD_INVALID_TOKEN_NUMBER = 0,};
enum MACRO_TCG_EfiSpecIDEventStruct {TCG_EfiSpecIDEventStruct_SPEC_VERSION_MAJOR_TPM12 = 1,TCG_EfiSpecIDEventStruct_SPEC_VERSION_MINOR_TPM12 = 2,TCG_EfiSpecIDEventStruct_SPEC_ERRATA_TPM12 = 2,TCG_EfiSpecIDEventStruct_SPEC_VERSION_MAJOR_TPM2 = 2,TCG_EfiSpecIDEventStruct_SPEC_VERSION_MINOR_TPM2 = 0,TCG_EfiSpecIDEventStruct_SPEC_ERRATA_TPM2 = 0,};
typedef struct _3AF249E395D4763EB3424664CB07F301 PAL_LOGICAL_PROCESSPR_OVERVIEW;
typedef struct _PEI_LOCK_PHYSICAL_PRESENCE_PPI PEI_LOCK_PHYSICAL_PRESENCE_PPI;
typedef struct s_pxe_cpb_fill_header_fragmented PXE_CPB_FILL_HEADER_FRAGMENTED;
typedef void (*RESET_PROTOCOL_INFO_ENUMERATOR)(void);
typedef struct _33FA6F11E355B0D724BCA1AF27F0CC54 SAL_PCI_COMPONENT_ERROR_RECORD;
typedef struct _39B5C1DD9F9D2621C8E989C433C84D5E SAL_SMBIOS_DEVICE_ERROR_RECORD;
typedef struct _05374CD723BB736B76BC23503CF5826E SMRAM_PROFILE_PARAMETER_HEADER;
typedef struct _4C78CB38A0F4EF5A8DE335E05719C19F ACPI_EXTENDED_HID_DEVICE_PATH;
typedef struct _238E6635CBCE7D06BD71AA7F0FB8394A AUTHENTICATED_VARIABLE_HEADER;
typedef struct _327CD12F9A59FE7154FCFAC0499BBF72 BOOT_SCRIPT_EXECUTOR_VARIABLE;
typedef struct _EDKII_MEMORY_PROFILE_PROTOCOL EDKII_MEMORY_PROFILE_PROTOCOL;
typedef struct _EDKII_UFS_HOST_CONTROLLER_PPI EDKII_UFS_HOST_CONTROLLER_PPI;
typedef struct _3FB1076CB510B289CAA826CC95B0CFB8 EFI_80211_AUTHENTICATE_RESULT;
typedef struct _A885BDC5C02641C8B49B78EA5206778A EFI_80211_DEAUTHENTICATE_DATA;
typedef struct _6EDB0D36DDAE8585C434A9339DCE2693 EFI_80211_ELEMENT_TIMEOUT_VAL;
typedef struct _EFI_ABSOLUTE_POINTER_PROTOCOL EFI_ABSOLUTE_POINTER_PROTOCOL;
typedef struct _08BCC68AFD0F82A72398BBF1008F4384 EFI_ACPI_FIXED_DMA_DESCRIPTOR;
typedef struct _348ED7D33E03403EE12F92BD2829FF3E EFI_ADAPTER_INFO_NETWORK_BOOT;
typedef struct _EFI_BLUETOOTH_CONFIG_PROTOCOL EFI_BLUETOOTH_CONFIG_PROTOCOL;
typedef struct _EFI_BOOT_SCRIPT_SAVE_PROTOCOL EFI_BOOT_SCRIPT_SAVE_PROTOCOL;
typedef struct _90E32EF08B0EB3D73D5F2CC5F62B8DAE EFI_DEVICE_PATH_EXTENDED_DATA;
typedef struct _B4D92CBE906B07A06AB1E03FDEFFC807 EFI_DRIVER_HEALTH_HII_MESSAGE;
typedef struct _54FA71207D19CC6B45BACD432CC2787F EFI_FIRMWARE_IMAGE_DESCRIPTOR;
typedef struct _EFI_FIRMWARE_VOLUME2_PROTOCOL EFI_FIRMWARE_VOLUME2_PROTOCOL;
typedef struct _26B16192F256D03156C6EFAB277DFED7 EFI_FIRMWARE_VOLUME_EXT_ENTRY;
typedef struct _A63D8E7FAAB623CF824F0D871B91118C EFI_GRAPHICS_OUTPUT_BLT_PIXEL;
typedef struct _EFI_HII_ANIMATION_PACKAGE_HDR EFI_HII_ANIMATION_PACKAGE_HDR;
typedef struct _EFI_HII_IIBT_IMAGE_1BIT_BLOCK EFI_HII_IIBT_IMAGE_1BIT_BLOCK;
typedef struct _EFI_HII_IIBT_IMAGE_24BIT_BASE EFI_HII_IIBT_IMAGE_24BIT_BASE;
typedef struct _EFI_HII_IIBT_IMAGE_4BIT_BLOCK EFI_HII_IIBT_IMAGE_4BIT_BLOCK;
typedef struct _EFI_HII_IIBT_IMAGE_8BIT_PALETTE_BLOCK EFI_HII_IIBT_IMAGE_8BIT_BLOCK;
typedef struct _F1B84B2FEC13665EC90B5878F7A30391 EFI_IMAGE_RESOURCE_DATA_ENTRY;
typedef struct _ABF336183A0B84D1C88AD8EB6D66085E EFI_IP6_CONFIG_INTERFACE_INFO;
typedef struct _DBEDC8589888FE8499F8C5868B0E6C09 EFI_IP6_CONFIG_MANUAL_ADDRESS;
typedef struct _EFI_LEGACY_INTERRUPT_PROTOCOL EFI_LEGACY_INTERRUPT_PROTOCOL;
typedef struct _137EBC2235106C5FD5B063360A864DB6 EFI_LEGACY_MP_TABLE_ENTRY_BUS;
typedef struct _E9F8F3E39EC43130991818C880C66C09 EFI_MISC_BIOS_CHARACTERISTICS;
typedef struct _94D4D7D366E3D27BE40EBD96B678093B EFI_MISC_BIS_ENTRY_POINT_DATA;
typedef struct _7FE9E2C35030190B001171A4D66DFA32 EFI_MISC_SLOT_CHARACTERISTICS;
typedef struct _860A1EE2C3C116B10A53A1836B54B6D5 EFI_MISC_SUBCLASS_DRIVER_DATA;
typedef struct _BAD451990F09F0D15F9CCC07E2537258 EFI_PCI_OPTION_ROM_DESCRIPTOR;
typedef struct _EFI_PEI_RECOVERY_BLOCK_IO_PPI EFI_PEI_RECOVERY_BLOCK_IO_PPI;
typedef struct _EFI_PEI_SMM_COMMUNICATION_PPI EFI_PEI_SMM_COMMUNICATION_PPI;
typedef struct _7AAE256296D889623FA30C003164E569 EFI_PXE_BASE_CODE_ROUTE_ENTRY;
typedef struct _EFI_SAL_MCA_INIT_PMI_PROTOCOL EFI_SAL_MCA_INIT_PMI_PROTOCOL;
typedef struct _BCCB89A561BF63803226833E096228B3 EFI_SCSI_DISK_CAPACITY_DATA16;
typedef struct _EFI_SHELL_PARAMETERS_PROTOCOL EFI_SHELL_PARAMETERS_PROTOCOL;
typedef struct _1362BCD7E4BA59AEBA1005AB99DE937D EFI_SMI_OPTIONAL_FPSAVE_STATE;
typedef struct _EFI_SMM_GPI_DISPATCH_PROTOCOL EFI_SMM_GPI_DISPATCH_PROTOCOL;
typedef struct _3FA4F00C7E109B048DA6C248989D7AA5 EFI_SMM_ICHN_DISPATCH_CONTEXT;
typedef struct _EFI_SMM_RESERVED_SMRAM_REGION EFI_SMM_RESERVED_SMRAM_REGION;
typedef struct _EFI_SMM_SW_DISPATCH2_PROTOCOL EFI_SMM_SW_DISPATCH2_PROTOCOL;
typedef struct _EFI_SMM_SX_DISPATCH2_PROTOCOL EFI_SMM_SX_DISPATCH2_PROTOCOL;
typedef struct _EFI_SMM_USB_DISPATCH_PROTOCOL EFI_SMM_USB_DISPATCH_PROTOCOL;
typedef struct _EFI_USER_CREDENTIAL2_PROTOCOL EFI_USER_CREDENTIAL2_PROTOCOL;
typedef struct _EC0BA3AFE8D2ACF3A8E8B9154D00680B EFI_USER_INFO_IDENTITY_POLICY;
typedef struct _CE25C5C92638217AE596B7807905569F EFI_VARIABLE_AUTHENTICATION_2;
typedef struct _F98C2FDF6B0288DB9DB7F711D38FAF1D FIRMWARE_PERFORMANCE_VARIABLE;
typedef struct _FORM_DISPLAY_ENGINE_STATEMENT FORM_DISPLAY_ENGINE_STATEMENT;
typedef union _72EFF1B7CF5BD83F0E27F61163B8B619 HPET_TIMER_MSI_ROUTE_REGISTER;
typedef void (*INIT_PROTOCOL_INFO_ENUMERATOR)(void);
typedef struct _1D079842E3EC7F9F45FFA256EC54E3EF MEMORY_INSTALLED_ENABLED_SIZE;
typedef struct _060F4871B65A64695C5E0D6D3EA0B10A PAL_MC_ERROR_INFO_LEVEL_INDEX;
typedef struct _695D41B0F86F5191001309D72DE985C5 PCI_DEVICE_HEADER_TYPE_REGION;
typedef struct _1047125A16E8B1B7E5254F92231CBD48 PCI_DEVICE_INDEPENDENT_REGION;
typedef struct _BC5F8D17A7EBF201257B0BCF4A84636C SAL_ST_ENTRY_POINT_DESCRIPTOR;
typedef struct _4CB21704F68C9C7480D0E216AAA27D61 TPM2B_PRIVATE_VENDOR_SPECIFIC;
typedef struct _DC393B8A1F9BDFDC51A68E37CB4B266D UART_FLOW_CONTROL_DEVICE_PATH;
typedef void (*VAR_CHECK_END_OF_DXE_CALLBACK)(void);
enum _EFI_USBFN_ENDPOINT_DIRECTION {EfiUsbEndpointDirectionHostOut = 0x0,EfiUsbEndpointDirectionHostIn = 0x1,EfiUsbEndpointDirectionDeviceTx = 0x1,EfiUsbEndpointDirectionDeviceRx = 0x0,};
typedef struct _260E0CDB7AC319793FEFB6E6E6BADEDC ADDITIONAL_INFORMATION_ENTRY;
typedef struct _EDKII_SMM_VAR_CHECK_PROTOCOL EDKII_SMM_VAR_CHECK_PROTOCOL;
typedef struct _EDKII_VARIABLE_LOCK_PROTOCOL EDKII_VARIABLE_LOCK_PROTOCOL;
typedef struct _061D9092A34041E6AFB688EEE464331D EFI_ADAPTER_INFO_MEDIA_STATE;
typedef struct _A790A3F05E48462CC309D5F7A74FBA4B EFI_BASE_BOARD_FEATURE_FLAGS;
typedef struct _BB3F6D5B5CBCB21FB44B2A4EFF4AF7FF EFI_BLOCK_IO_CRYPTO_IV_INPUT;
typedef struct _EFI_BLOCK_IO_CRYPTO_PROTOCOL EFI_BLOCK_IO_CRYPTO_PROTOCOL;
typedef struct _A79D4CF365EAF285D8F99AA7C0BC1359 EFI_BOOT_MANAGER_LOAD_OPTION;
typedef struct _531493BA18E76A1043EF68B47A7B812A EFI_CACHE_CONFIGURATION_DATA;
typedef struct _9A6797B410FBAAB39378A4754EB07363 EFI_CAPSULE_BLOCK_DESCRIPTOR;
typedef struct _35A220C1A314F3209A3C8C2B7869DAEB EFI_CAPSULE_LONG_MODE_BUFFER;
typedef struct _EFI_COMPONENT_NAME2_PROTOCOL EFI_COMPONENT_NAME2_PROTOCOL;
typedef struct _7929C563E7B63FC05769B8F72B15925C EFI_DRIVER_OS_HANDOFF_HEADER;
typedef struct _EFI_EAP_MANAGEMENT2_PROTOCOL EFI_EAP_MANAGEMENT2_PROTOCOL;
typedef struct _92E08157E319A6D0048B11B6F44E7E7D EFI_EDID_DISCOVERED_PROTOCOL;
typedef struct _0E74BDB6838C2A67195E44263ED31BF0 EFI_ERROR_SECTION_DESCRIPTOR;
typedef struct _0187B879DFDE98BF50709C8BB4D8DC1A EFI_FILE_SYSTEM_VOLUME_LABEL;
typedef struct _EFI_FIRMWARE_VOLUME_PROTOCOL EFI_FIRMWARE_VOLUME_PROTOCOL;
typedef struct _EFI_GRAPHICS_OUTPUT_PROTOCOL EFI_GRAPHICS_OUTPUT_PROTOCOL;
typedef struct _EFI_HII_AIBT_DUPLICATE_BLOCK EFI_HII_AIBT_DUPLICATE_BLOCK;
typedef struct _EFI_HII_GIBT_DUPLICATE_BLOCK EFI_HII_GIBT_DUPLICATE_BLOCK;
typedef struct _EFI_HII_IIBT_DUPLICATE_BLOCK EFI_HII_IIBT_DUPLICATE_BLOCK;
typedef struct _EFI_HII_IIBT_IMAGE_1BIT_BASE EFI_HII_IIBT_IMAGE_1BIT_BASE;
typedef struct _EFI_HII_IIBT_IMAGE_4BIT_BASE EFI_HII_IIBT_IMAGE_4BIT_BASE;
typedef struct _EFI_HII_IIBT_IMAGE_8BIT_BASE EFI_HII_IIBT_IMAGE_8BIT_BASE;
typedef struct _22C6984C10E23D4728D2DD0DE382EE68 EFI_HII_KEYBOARD_PACKAGE_HDR;
typedef struct _EFI_HII_SIBT_DUPLICATE_BLOCK EFI_HII_SIBT_DUPLICATE_BLOCK;
typedef struct _74A7D6CA18D3724AB6FA20232C18B6B8 EFI_IFR_VARSTORE_SELECT_PAIR;
typedef struct _B0C064A2348ADD487CDD4CB73C6C9183 EFI_IMAGE_RESOURCE_DIRECTORY;
typedef struct _5AAD3E36DCA061F1C50A3DD63EA46040 EFI_LEGACY_IRQ_ROUTING_ENTRY;
typedef struct _BCF35254980F95645BBCDA24CCB5EBF1 EFI_LEGACY_PIRQ_TABLE_HEADER;
typedef struct _1283F8C9D8D312BEBB5EF5975CA49501 EFI_LEGACY_REGION_DESCRIPTOR;
typedef struct _EFI_MANAGED_NETWORK_PROTOCOL EFI_MANAGED_NETWORK_PROTOCOL;
typedef struct _842D103E02ED6155C49E1F635C1ECF50 EFI_MEMORY_CHANNEL_TYPE_DATA;
typedef struct _825A767F80D54F48965E71A938B5D869 EFI_MISC_COOLING_DEVICE_TYPE;
typedef struct _CE46CBD44DD39AC2FD774C51A5054E4F EFI_MISC_GROUP_ITEM_SET_DATA;
typedef struct _26E1A5A6ABD02F217B53F396064F4D8A EFI_MISC_ONBOARD_DEVICE_DATA;
typedef struct _D9CC29CB88675D0B37E1F2188EA14C14 EFI_PCI_CAPABILITY_PCIX_BRDG;
typedef struct _59ADDAEBB3E2632D725ED32CC902CEFD EFI_PCI_EXPANSION_ROM_HEADER;
typedef struct _F82C7CF31A94CF1E43C42E26FF4F1D8A EFI_PXE_BASE_CODE_ICMP_ERROR;
typedef struct _4D7D100F6A45674E78C5FF6AF9A9AD7E EFI_PXE_BASE_CODE_MTFTP_INFO;
typedef struct _453C3FCC21D38DDE31861C82E646CBED EFI_PXE_BASE_CODE_TFTP_ERROR;
typedef struct _EFI_SERVICE_BINDING_PROTOCOL EFI_SERVICE_BINDING_PROTOCOL;
typedef void (*EFI_SHELL_DISABLE_PAGE_BREAK)(void);
typedef struct _EFI_SMART_CARD_EDGE_PROTOCOL EFI_SMART_CARD_EDGE_PROTOCOL;
typedef struct _35B0ADA86CE6120227D7E440D5ABC3F5 EFI_SMM_GPI_DISPATCH_CONTEXT;
typedef struct _0C7BCB68DD0E324F4A9D3964DBF59972 EFI_SMM_GPI_REGISTER_CONTEXT;
typedef struct _EFI_SMM_RSC_HANDLER_PROTOCOL EFI_SMM_RSC_HANDLER_PROTOCOL;
typedef struct _EFI_SMM_STATUS_CODE_PROTOCOL EFI_SMM_STATUS_CODE_PROTOCOL;
typedef struct _EFI_SMM_SW_DISPATCH_PROTOCOL EFI_SMM_SW_DISPATCH_PROTOCOL;
typedef struct _EFI_SMM_SX_DISPATCH_PROTOCOL EFI_SMM_SX_DISPATCH_PROTOCOL;
typedef struct _14DB003681FC3CDE480991316592033F EFI_SMM_USB_DISPATCH_CONTEXT;
typedef struct _14DB003681FC3CDE480991316592033F EFI_SMM_USB_REGISTER_CONTEXT;
typedef struct _688DA74D94025D129EA6BB30514C5238 EFI_STATUS_CODE_STRING_TOKEN;
typedef struct hid_class_descriptor EFI_USB_HID_CLASS_DESCRIPTOR;
typedef struct _EFI_USER_CREDENTIAL_PROTOCOL EFI_USER_CREDENTIAL_PROTOCOL;
typedef struct _5A765037B17BAD4D06DAA996E7CCF176 EFI_USER_INFO_ACCESS_CONTROL;
typedef struct _31A5E67A261669A26F08DB035F0F692E FRAMEWORK_EFI_CAPSULE_HEADER;
typedef struct _CC17200E7FA6B5970040AF8EFBA15C4D FRAMEWORK_EFI_IFR_EQ_ID_LIST;
typedef struct _8CED74C4085337C4E09351F5BE6FFCA9 FRAMEWORK_EFI_KEY_DESCRIPTOR;
enum MACRO_EFI_ACPI_MEMORY_MAPPED {EFI_ACPI_MEMORY_MAPPED_CONFIGURATION_SPACE_ACCESS_TABLE_REVISION = 0x1,};
typedef struct _5C26D95323E79CBD9FD93D646A925B65 MEMORY_PROFILE_COMMON_HEADER;
typedef struct _D0B221078A4E0F678A07442A2174AD85 PAL_LOGICAL_PROCESSORN_INFO1;
typedef struct _8616D3DD47845040550EB5C08ECD7F45 PAL_LOGICAL_PROCESSORN_INFO2;
typedef struct _CEEA5E1F904DF18632526980A4AC8A63 PAL_MC_ERROR_DATA_BUFFER_TLB;
typedef struct _13B6FAE3354B456DA36A9D855F5E14C8 PCI_CARDBUS_CONTROL_REGISTER;
typedef struct _PEI_USB2_HOST_CONTROLLER_PPI PEI_USB2_HOST_CONTROLLER_PPI;
typedef struct _88CEA13D902773BB8EBA67CB9EAE9058 PE_COFF_LOADER_IMAGE_CONTEXT;
typedef struct _4343C1A1029A5CC2D699B5A65D1D98B0 SMBIOS_TABLE_3_0_ENTRY_POINT;
typedef struct _E2BDE2F6A658BD89D9688CEBEA05AB2E VENDOR_DEVICE_PATH_WITH_DATA;
typedef struct _8EB9F2655091912106BD579CF94D044D WIN_CERTIFICATE_EFI_PKCS1_15;
enum _EFI_MEMORY_ERROR_CORRECTION {EfiMemoryErrorCorrectionOther = 0x1,EfiMemoryErrorCorrectionUnknown = 0x2,EfiMemoryErrorCorrectionNone = 0x3,EfiMemoryErrorCorrectionParity = 0x4,EfiMemoryErrorCorrectionSingleBitEcc = 0x5,EfiMemoryErrorCorrectionMultiBitEcc = 0x6,EfiMemoryErrorCorrectionCrc = 0x7,};
typedef struct _6C51A1AFDAA722EB159EBDA3477DC656 ACPI_CPU_DATA_COMPATIBILITY;
typedef struct _B3B07BAE448478B4BDB40B2A865BEC3B DEVICE_PRODUCER_DATA_HEADER;
typedef struct _03D7420C3CE737299CCE486081392B67 EFI_80211_AUTHENTICATE_DATA;
typedef struct _A885BDC5C02641C8B49B78EA5206778A EFI_80211_DISASSOCIATE_DATA;
typedef struct _70706EA1264F219639EC61C3D0C0081D EFI_ACPI_5_1_GICR_STRUCTURE;
typedef struct _70706EA1264F219639EC61C3D0C0081D EFI_ACPI_6_0_GICR_STRUCTURE;
typedef struct _50CF1F9E30717E5C85FBDDBBD8C480D0 EFI_ACPI_DESCRIPTION_HEADER;
typedef struct _ED77853CEA1192D0B8E3AED4CD5C7E1B EFI_ACPI_END_TAG_DESCRIPTOR;
typedef struct _02E47AE4B1191769ABD100C4DCCF3B8C EFI_ACPI_IO_PORT_DESCRIPTOR;
typedef struct _6EA9FE09A44DFE194DF3774A8F9AD63B EFI_BOOT_MANAGER_KEY_OPTION;
typedef struct _EFI_COMPONENT_NAME_PROTOCOL EFI_COMPONENT_NAME_PROTOCOL;
typedef struct _BBBB50E44A18E3C79D4B1DB57A2E78B3 EFI_DEBUG_IMAGE_INFO_NORMAL;
typedef struct _D818E4CF6A7E7483023E703B7033DCBC EFI_DMAR_GENERIC_ERROR_DATA;
typedef struct _EFI_DRIVER_BINDING_PROTOCOL EFI_DRIVER_BINDING_PROTOCOL;
typedef struct _EFI_EAP_MANAGEMENT_PROTOCOL EFI_EAP_MANAGEMENT_PROTOCOL;
typedef struct _4FBACC2AF460480C3B910C6B42145D5D EFI_EXT_SCSI_PASS_THRU_MODE;
typedef struct _7D7D58AB9DC53DEC8CA17F3BD9B3A652 EFI_FLASH_MAP_FS_ENTRY_DATA;
typedef struct _19C5FC9A51293924C18E2EBFCCA05580 EFI_GCD_IO_SPACE_DESCRIPTOR;
typedef struct _EFI_HII_GIBT_DEFAULTS_BLOCK EFI_HII_GIBT_DEFAULTS_BLOCK;
typedef struct _65A22FF8467BCC6B24C29F624239D326 EFI_HII_PACKAGE_LIST_HEADER;
typedef struct _00A5C51788377BE5F8CEE496673821D9 EFI_HOB_RESOURCE_DESCRIPTOR;
typedef struct _EFI_HTTP_UTILITIES_PROTOCOL EFI_HTTP_UTILITIES_PROTOCOL;
typedef struct _EFI_IFR_VARSTORE_NAME_VALUE EFI_IFR_VARSTORE_NAME_VALUE;
typedef struct _1FABF24343CB7C543563ACB5DC47D248 EFI_IMAGE_IMPORT_DESCRIPTOR;
typedef struct _30B15F6B38BE5B2538EAD5D8A09FC965 EFI_IMAGE_OPTIONAL_HEADER32;
typedef struct _DBAF76826536C93922C3AE0341876B96 EFI_IMAGE_OPTIONAL_HEADER64;
typedef struct _6BD8254A58F4666E375C9F1EF7748CFA EFI_IP6_CONFIG_INTERFACE_ID;
typedef struct _EFI_LEGACY_REGION2_PROTOCOL EFI_LEGACY_REGION2_PROTOCOL;
typedef union _EFI_MEMORY_SUBCLASS_RECORDS EFI_MEMORY_SUBCLASS_RECORDS;
typedef struct _EEE11938D794A1BF7B1DC13B55727429 EFI_MEMORY_TYPE_INFORMATION;
typedef struct _EFI_METRONOME_ARCH_PROTOCOL EFI_METRONOME_ARCH_PROTOCOL;
typedef struct _16674B090943CEC0E7007F9E85E554E8 EFI_MISC_RESET_CAPABILITIES;
typedef struct _E7009CB53EBEE73475B5E9D4AD6BE638 EFI_PCI_PCIX_BUS_ERROR_DATA;
typedef struct _EFI_PEI_FIRMWARE_VOLUME_PPI EFI_PEI_FIRMWARE_VOLUME_PPI;
typedef struct _EFI_PEI_RECOVERY_MODULE_PPI EFI_PEI_RECOVERY_MODULE_PPI;
typedef struct _AB4F02EC5D8687CEDE27BD0DC086A076 EFI_PHYSICAL_PRESENCE_FLAGS;
typedef struct _0EADD5243AAFE5F53B0E940963814CF0 EFI_PROCESSOR_FEATURE_FLAGS;
typedef struct _20EDE69EF9795E7F12F90E8C7CC22AF8 EFI_PXE_BASE_CODE_ARP_ENTRY;
typedef struct _67D201678CA148593DFBD7BB01D7707B EFI_PXE_BASE_CODE_IP_FILTER;
typedef void *EFI_S3_BOOT_SCRIPT_POSITION;
typedef struct _E1F60BB2CD39EE4B0DE30D99134EA3B4 EFI_SCSI_DISK_CAPACITY_DATA;
typedef struct _EFI_SCSI_PASS_THRU_PROTOCOL EFI_SCSI_PASS_THRU_PROTOCOL;
typedef struct _EFI_SECURITY2_ARCH_PROTOCOL EFI_SECURITY2_ARCH_PROTOCOL;
typedef void (*EFI_SHELL_ENABLE_PAGE_BREAK)(void);
typedef struct _EFI_SIMPLE_NETWORK_PROTOCOL EFI_SIMPLE_NETWORK_PROTOCOL;
typedef struct _EFI_SIMPLE_POINTER_PROTOCOL EFI_SIMPLE_POINTER_PROTOCOL;
typedef struct _FAAA7B02052316094C472795C6F3F283 EFI_SIMPLE_TEXT_OUTPUT_MODE;
typedef struct _F6693EB537F6ADE7F029FFA1E9336F4B EFI_SMM_SW_DISPATCH_CONTEXT;
typedef struct _F6693EB537F6ADE7F029FFA1E9336F4B EFI_SMM_SW_REGISTER_CONTEXT;
typedef struct _B9E29299D58E2B0821ED2412D3D885B9 EFI_SMM_SX_DISPATCH_CONTEXT;
typedef struct _B9E29299D58E2B0821ED2412D3D885B9 EFI_SMM_SX_REGISTER_CONTEXT;
typedef struct _5513A2D45E97093C82D573605C6BB62E EFI_STATUS_CODE_DIMM_NUMBER;
typedef struct _5AAA93F231C491218A0C27E0B83FD4E4 EFI_STATUS_CODE_STRING_DATA;
typedef struct tdEFI_TCG2_FINAL_EVENTS_TABLE EFI_TCG2_FINAL_EVENTS_TABLE;
typedef struct _F32C4D570F0F6EDFC6DC33B4DA7D37F3 EFI_USER_INTERFACE_SECTION2;
typedef struct _51974BA1E88C55CCB279A8B94E84A524 EFI_VARIABLE_AUTHENTICATION;
typedef struct _3D19AB9A470BF56182098D487246055F FRAMEWORK_EFI_BOOT_SERVICES;
typedef struct _CE9D7FFF634FC72D1136E469E23E246C FRAMEWORK_EFI_IFR_EQ_ID_VAL;
typedef struct _24C64E6FF9FEFC4F546A1515D1BC2428 FRAMEWORK_EFI_IFR_OP_HEADER;
typedef struct _BBF69680C1C705FB23F2ADAFF8BAC69F ISCSI_DEVICE_PATH_WITH_NAME;
enum MACRO_EFI_PCI_CAPABILITY_ID {EFI_PCI_CAPABILITY_ID_PCIEXP = 0x10,};
typedef struct _907F290682665AED197BFE9630E90F3F MEMORY_PROFILE_MEMORY_RANGE;
typedef struct _318D42FD42A897F3751FCCFFAAD685DA MISC_VOLTAGE_PROBE_LOCATION;
typedef struct _0738A23427E5503DBDE5DEE56C3C70A1 PCI_BRIDGE_CONTROL_REGISTER;
typedef struct _PEI_USB_HOST_CONTROLLER_PPI PEI_USB_HOST_CONTROLLER_PPI;
typedef struct _A25CEFB61EBCE556C47BA014D59BA377 QUESTION_ATTRIBUTE_OVERRIDE;
typedef struct _0BC8E39BB53636F12495B948C7ADEFF7 SAL_SEL_DEVICE_ERROR_RECORD;
typedef void (*SHELLENV_DISABLE_PAGE_BREAK)(void);
typedef struct _694BC7D489E8313C6AB000BBDE0E3678 SMM_BOOT_RECORD_COMMUNICATE;
typedef struct _58DEF8EBF86D691F280CB3F90366B052 VAR_CHECK_VARIABLE_PROPERTY;
typedef struct _244D31417EE53E4184DFD3241B59D73A WIN_NT_SYSTEM_CONFIGURATION;
typedef struct _23958E38AF544E49B6D98E0B1C04F079 ACPI_LARGE_RESOURCE_HEADER;
typedef union _2CB9EDC2CA76331E5EBDD1F9698853B1 ACPI_SMALL_RESOURCE_HEADER;
typedef struct _09F99C0FCBF42BE1DEE90FE7A2004CDB BLOCKIO_VENDOR_DEVICE_PATH;
struct BY_HANDLE_FILE_INFORMATION;
typedef struct _CD2E670E749FEDABC03ED9056E0335BF EFI_80211_ASSOCIATE_RESULT;
typedef struct _A3035F2BA8BC9144E2E3914BDC9C2690 EFI_80211_ELEMENT_DATA_RSN;
typedef struct _120AC7D9FEC0F7C7446E1F6579420CD9 EFI_ABSOLUTE_POINTER_STATE;
typedef struct _DA2370F135774DAC578057B93BF5B56B EFI_ACPI_2_0_COMMON_HEADER;
typedef struct _DA2370F135774DAC578057B93BF5B56B EFI_ACPI_3_0_COMMON_HEADER;
typedef struct _DA2370F135774DAC578057B93BF5B56B EFI_ACPI_4_0_COMMON_HEADER;
typedef struct _DA2370F135774DAC578057B93BF5B56B EFI_ACPI_5_0_COMMON_HEADER;
typedef struct _A9D282369A009673BDA2F899DC1C2C4E EFI_ACPI_5_0_GIC_STRUCTURE;
typedef struct _DA2370F135774DAC578057B93BF5B56B EFI_ACPI_5_1_COMMON_HEADER;
typedef struct _777F619D22A3BF928C82DF3A2DCC877F EFI_ACPI_5_1_GIC_STRUCTURE;
typedef struct _DA2370F135774DAC578057B93BF5B56B EFI_ACPI_6_0_COMMON_HEADER;
typedef struct _F898EFB37CD01D9C44137AF8CC6CA606 EFI_ACPI_6_0_GIC_STRUCTURE;
typedef struct _9DCA6106DB52F55837B7EA8444DF1CDE EFI_ACPI_ASF_RECORD_HEADER;
typedef struct _EFI_ATA_PASS_THRU_PROTOCOL EFI_ATA_PASS_THRU_PROTOCOL;
typedef struct _840E6DA18418FAD7CDD9CE2BF69BF57E EFI_COMMON_SECTION_HEADER2;
typedef struct _7680A9C78C4B44526ADAC236D1AC2C1B EFI_CPU_IO_PROTOCOL_ACCESS;
typedef struct _EFI_DEBUG_SUPPORT_PROTOCOL EFI_DEBUG_SUPPORT_PROTOCOL;
typedef struct _EFI_DRIVER_HEALTH_PROTOCOL EFI_DRIVER_HEALTH_PROTOCOL;
typedef struct _EFI_EDID_OVERRIDE_PROTOCOL EFI_EDID_OVERRIDE_PROTOCOL;
typedef struct _F2A23F357CAE2D69B270DE52322297E3 EFI_FIRMWARE_VOLUME_HEADER;
typedef struct _EFI_FORM_BROWSER2_PROTOCOL EFI_FORM_BROWSER2_PROTOCOL;
typedef struct _EFI_FORM_CALLBACK_PROTOCOL EFI_FORM_CALLBACK_PROTOCOL;
typedef struct _72DC978F075E0E65AD1F7FB905F5153E EFI_GENERIC_ERROR_PCI_SLOT;
typedef struct tdEFI_HANDOFF_TABLE_POINTERS EFI_HANDOFF_TABLE_POINTERS;
typedef struct _EFI_HII_IMAGE_PALETTE_INFO EFI_HII_IMAGE_PALETTE_INFO;
typedef struct _EFI_HII_STRING_PACKAGE_HDR EFI_HII_STRING_PACKAGE_HDR;
typedef struct _EFI_HII_VARIABLE_PACK_LIST EFI_HII_VARIABLE_PACK_LIST;
typedef struct _02E9892AD1173F57B0D9DCAEE7462CAD EFI_HOB_HANDOFF_INFO_TABLE;
typedef struct _EFI_I2C_ENUMERATE_PROTOCOL EFI_I2C_ENUMERATE_PROTOCOL;
typedef struct _B0D8260BD3BEC2C394B206003E60A778 EFI_IMAGE_EXPORT_DIRECTORY;
typedef struct _278508D8F64D0B86ACC34D0269C72011 EFI_ISA_ACPI_RESOURCE_LIST;
typedef struct _AF27D0DC8C9C83CD0E7DDA450B8A5353 EFI_ISA_IO_PROTOCOL_ACCESS;
typedef struct _A5E5576596E44BD7CBE1A739E94D438C EFI_LEGACY_MP_TABLE_HEADER;
typedef struct _EFI_LEGACY_REGION_PROTOCOL EFI_LEGACY_REGION_PROTOCOL;
typedef struct _3B5F65496624BA01FACEE483228DAA16 EFI_MEMORY_ARRAY_LINK_DATA;
typedef struct _43C3FB58CE5610592662F3E5656061A9 EFI_MISC_LAST_PCI_BUS_DATA;
typedef struct _6E17AA64CD37FB54DCAAEB752A277C69 EFI_NVM_EXPRESS_COMPLETION;
typedef struct _8F7F9033E7ABB231AFA2156F5FF3D34E EFI_PARTITION_TABLE_HEADER;
typedef struct _7E9AB06D160639A5C09D295A039575CE EFI_PCI_CAPABILITY_HOTPLUG;
typedef struct _C679344B91BEC6C13F77CE3FEFAEF2B8 EFI_PCI_IO_PROTOCOL_ACCESS;
typedef struct _EFI_PEI_FV_FILE_LOADER_PPI EFI_PEI_FV_FILE_LOADER_PPI;
typedef struct tdEFI_PLATFORM_FIRMWARE_BLOB EFI_PLATFORM_FIRMWARE_BLOB;
typedef struct _EFI_PXE_BASE_CODE_PROTOCOL EFI_PXE_BASE_CODE_PROTOCOL;
typedef struct _62FD0889AE34F9373588B48BD93BECC8 EFI_RUNTIME_CRYPT_PROTOCOL;
typedef void (*EFI_RUNTIME_CRYPT_RSA_FREE)(void *RsaContext);
typedef struct _EFI_S3_SAVE_STATE_PROTOCOL EFI_S3_SAVE_STATE_PROTOCOL;
typedef struct _EFI_SECURITY_ARCH_PROTOCOL EFI_SECURITY_ARCH_PROTOCOL;
typedef struct _8E3345843C6C9EDEF8627A5D00099992 EFI_SMM_COMMUNICATE_HEADER;
typedef struct _EFI_SMM_SAVE_STATE_IO_INFO EFI_SMM_SAVE_STATE_IO_INFO;
typedef struct _0EE4DE2734B075BC9FABFCD2440FDF22 EFI_SYSTEM_CONTEXT_AARCH64;
typedef struct _F31FE6C8564149D4ADB0252B9757F923 EFI_TCG2_PHYSICAL_PRESENCE;
typedef struct _FD553E7DD9C9C4B9F8A7BAA8FA772EF4 EFI_TPM2_ACPI_CONTROL_AREA;
typedef struct _2FA6CE443FF86F17328922C5A9168445 EFI_TREE_PHYSICAL_PRESENCE;
typedef struct _509F65393F3993ED6E245E4858CFD455 EFI_USER_INTERFACE_SECTION;
typedef struct _EFI_VGA_MINI_PORT_PROTOCOL EFI_VGA_MINI_PORT_PROTOCOL;
typedef struct _4F3EC2B7A3FD85CF7F6D885D65735F61 FIBRECHANNELEX_DEVICE_PATH;
typedef struct _C954A39FF73D802B29EE10901F3191E1 FIRMWARE_PERFORMANCE_TABLE;
typedef void (*FRAMEWORK_EFI_AP_PROCEDURE)(void *Buffer);
typedef struct _554224674F69B86A1891A44045034893 FRAMEWORK_EFI_IFR_CHECKBOX;
typedef struct _8875193D75601F2B2877FF9DC61D8E4A FRAMEWORK_EFI_IFR_EQ_ID_ID;
typedef struct _913A1C96CB07C43F8E37E2701424C7B4 FRAMEWORK_EFI_IFR_FORM_SET;
typedef struct _9AD37D8F57FDE2A5D58FC9F1F13727F7 FRAMEWORK_EFI_IFR_PASSWORD;
typedef struct _C2269CB36634A20EA7C95EAE13971688 FRAMEWORK_EFI_IFR_SUBTITLE;
typedef struct _9FCD4338C182721C015DEEC85408F3D5 FRAMEWORK_EFI_IFR_VARSTORE;
typedef struct _FRAMEWORK_EFI_PEI_SERVICES FRAMEWORK_EFI_PEI_SERVICES;
typedef struct _176AC7AE0E05CE820A1B8E2BF57AAE43 MEDIA_PROTOCOL_DEVICE_PATH;
typedef struct _5424A58FA96B23E7182292F8A0BD1671 MEDIA_RAM_DISK_DEVICE_PATH;
typedef struct _16E76D9A60CF6DD7C7D18F88A3A8FBFA MEMORY_PROFILE_DRIVER_INFO;
typedef struct _08FDCA320F8CA4513298F7B531DB8F28 MEMORY_PROFILE_FREE_MEMORY;
typedef struct _0D9BB19242CFE021E4211F1789A11B8C MISC_SLOT_CHARACTERISTICS1;
typedef struct _3A244003871B8D811C1117464CE1EFAF MISC_SLOT_CHARACTERISTICS2;
typedef struct _A31DBB9C9150EEB5B259A9BB3CE94F14 NVME_NAMESPACE_DEVICE_PATH;
typedef struct _B83B54D0511FC7118B2F502FFD9F4FA0 PEI_PERFORMANCE_LOG_HEADER;
typedef struct s_pxe_cpb_transmit_fragments PXE_CPB_TRANSMIT_FRAGMENTS;
typedef union _41EAB8B81A3EA20191426CA85126EC84 SAL_ERROR_RECORDS_POINTERS;
typedef struct _AF812B06E0C82E08BA2D86348360F935 SAL_PROCESSOR_ERROR_RECORD;
typedef struct _025FB47D66D224523DBEA929EE89F4D1 SAL_ST_AP_WAKEUP_DECRIPTOR;
typedef struct _D0E75F616C01BBA72CD826DD2FCB9CC0 SR_IOV_CAPABILITY_REGISTER;
typedef struct _6D5E994C2EEFCF20A2CA37695FD61709 TPMS_ALGORITHM_DESCRIPTION;
typedef struct _4ABC1B5E6ED33879201640F22DCC37CF TPMS_SCHEME_KDF1_SP800_108;
typedef struct _4ABC1B5E6ED33879201640F22DCC37CF TPMS_SCHEME_KDF1_SP800_56a;
typedef struct _9219D3771845598B204C1F6E8A544818 VARIABLE_ENTRY_CONSISTENCY;
enum _EFI_MEMORY_ARRAY_LOCATION {EfiMemoryArrayLocationOther = 0x1,EfiMemoryArrayLocationUnknown = 0x2,EfiMemoryArrayLocationSystemBoard = 0x3,EfiMemoryArrayLocationIsaAddonCard = 0x4,EfiMemoryArrayLocationEisaAddonCard = 0x5,EfiMemoryArrayLocationPciAddonCard = 0x6,EfiMemoryArrayLocationMcaAddonCard = 0x7,EfiMemoryArrayLocationPcmciaAddonCard = 0x8,EfiMemoryArrayLocationProprietaryAddonCard = 0x9,EfiMemoryArrayLocationNuBus = 0xA,EfiMemoryArrayLocationPc98C20AddonCard = 0xA0,EfiMemoryArrayLocationPc98C24AddonCard = 0xA1,EfiMemoryArrayLocationPc98EAddonCard = 0xA2,EfiMemoryArrayLocationPc98LocalBusAddonCard = 0xA3,};
enum _EFI_USBFN_TRANSFER_STATUS {UsbTransferStatusUnknown = 0x0,UsbTransferStatusComplete = 0x1,UsbTransferStatusAborted = 0x2,UsbTransferStatusActive = 0x3,UsbTransferStatusNone = 0x4,};
typedef struct _6F6EE827B4FA5A9551504B14859E325D ATAPI_READ_FORMAT_CAP_CMD;
typedef struct _B0D2910FF2727F70CAB5F17F43E00BCE ATAPI_TEST_UNIT_READY_CMD;
typedef struct _8F03A700AE741063C4C0556C872CEB25 BDS_CONSOLE_CONNECT_ENTRY;
typedef struct _6AB0B8F58DEA6C8D7C047418F2B42ECD BLUETOOTH_CLASS_OF_DEVICE;
typedef struct _B16410B4740FE552E7D8295EBD0641AB EDKII_SET_VARIABLE_STATUS;
typedef struct _EE2480321051546AA699FCC4B16FD164 EFI_80211_BSS_DESCRIPTION;
typedef union _C61042C4D8451B8A12F5E70DC2B6360C EFI_80211_COUNTRY_TRIPLET;
typedef struct _C4BD71933A12FF525F3A9EBDE61ED7E3 EFI_80211_ELEMENT_COUNTRY;
typedef struct _940104136B10EB4AFE42B92558B2348F EFI_80211_ELEMENT_EXT_CAP;
typedef struct _C6783E812A4944B8FFD5EE85DA7123F5 EFI_80211_SCAN_DATA_TOKEN;
typedef struct _94B90FE610E36811F89326FEA542A5F8 EFI_80211_SUBELEMENT_INFO;
typedef struct _5802C28FAF8535CA2436F06F7684260A EFI_ABSOLUTE_POINTER_MODE;
typedef struct _EFI_ACPI_S3_SAVE_PROTOCOL EFI_ACPI_S3_SAVE_PROTOCOL;
typedef struct _EFI_ACPI_SUPPORT_PROTOCOL EFI_ACPI_SUPPORT_PROTOCOL;
typedef struct _4D869B13F060BA3FEE65879E2810998E EFI_BLOCK_IO_CRYPTO_TOKEN;
typedef struct _71C666ECBA611A0D1E094AEB91B43A93 EFI_BLUETOOTH_DEVICE_INFO;
typedef struct _EFI_BLUETOOTH_HC_PROTOCOL EFI_BLUETOOTH_HC_PROTOCOL;
typedef struct _EFI_BLUETOOTH_IO_PROTOCOL EFI_BLUETOOTH_IO_PROTOCOL;
typedef union _F5FBE7334F772919A43019DC3C2D98D9 EFI_CACHE_VARIABLE_RECORD;
typedef struct _71BA19612BD48D2A43E9A45F5AF99F83 EFI_COMMON_SECTION_HEADER;
typedef struct _C9D7FBD78CC531CDC95C9CF226690922 EFI_COMPATIBILITY16_TABLE;
typedef struct _FE2731A7F9F42BC25FF8CF36F24478FC EFI_CPU_PHYSICAL_LOCATION;
typedef struct _28DB4FBE9CCCDE1C86BBB2321A60804C EFI_DNS4_COMPLETION_TOKEN;
typedef struct _DD90A6460ECECB32C3E9F65C84643F1C EFI_DNS6_COMPLETION_TOKEN;
typedef struct _EFI_FORM_BROWSER_PROTOCOL EFI_FORM_BROWSER_PROTOCOL;
typedef struct _26A9FD80ACBBCC67D0EAB69F6998B5AD EFI_FTP4_CONNECTION_TOKEN;
typedef struct _EFI_GET_PCD_INFO_PROTOCOL EFI_GET_PCD_INFO_PROTOCOL;
typedef struct _827345E55565D3656FE7DD67F24B8842 EFI_GUID_DEFINED_SECTION2;
typedef struct _EFI_HII_DATABASE_PROTOCOL EFI_HII_DATABASE_PROTOCOL;
typedef struct _EFI_HII_GIBT_GLYPHS_BLOCK EFI_HII_GIBT_GLYPHS_BLOCK;
typedef struct _EFI_HII_IMAGE_PACKAGE_HDR EFI_HII_IMAGE_PACKAGE_HDR;
typedef struct _A58305CE0F1A340C2AB5BD9048187F54 EFI_HOB_MEMORY_ALLOCATION;
typedef struct _0704109AA9E0FECF23DFB168BA173E5D EFI_IMAGE_BASE_RELOCATION;
typedef struct _06DB6DB5B5102F8E7C4034120A28470F EFI_IOMMU_DMAR_ERROR_DATA;
typedef struct _EFI_IPSEC_CONFIG_PROTOCOL EFI_IPSEC_CONFIG_PROTOCOL;
typedef union _0948BB90A898DF0B2BCF28CC42D77B5E EFI_IPSEC_CONFIG_SELECTOR;
typedef struct _49E34F149A955E9B3951FE9D42228DD3 EFI_KMS_DYNAMIC_ATTRIBUTE;
typedef struct _0FBE0DD4E58474FD160BBF5E1E7FF604 EFI_LOADED_IMAGE_PROTOCOL;
typedef struct _90F7CDB8DB98CFCE2328F7FD9610EC29 EFI_MEMORY_SUPPORTED_TYPE;
typedef struct _F76494BC3AA7438238B279B0883A6598 EFI_MISC_BIOS_VENDOR_DATA;
typedef struct _6DA5D0F7C89C92C964BFDFB0D4D09CEB EFI_MISC_PORTABLE_BATTERY;
typedef union _EFI_MISC_PORT_DEVICE_PATH EFI_MISC_PORT_DEVICE_PATH;
typedef union _3A40998E3347D0278E93D08606878B06 EFI_MISC_SUBCLASS_RECORDS;
typedef struct _F1F4BD7F1C65A95880CBC42EAAC51490 EFI_PCI_CAPABILITY_SLOTID;
typedef struct _EFI_PCI_PLATFORM_PROTOCOL EFI_PCI_PLATFORM_PROTOCOL;
typedef struct _83364E2BB946AAE377FAB9B129222450 EFI_PEI_CPU_IO_PPI_ACCESS;
typedef struct _D08E99FDC9D7E2D3B365AB8D6B46B0F2 EFI_PEI_GRAPHICS_INFO_HOB;
typedef struct _EFI_PEI_NOTIFY_DESCRIPTOR EFI_PEI_NOTIFY_DESCRIPTOR;
typedef struct _ECF8D0F446F0DA6D5BA2650D6B923C03 EFI_PEI_PROGRESS_CODE_PPI;
typedef struct _EFI_PKCS7_VERIFY_PROTOCOL EFI_PKCS7_VERIFY_PROTOCOL;
typedef struct _9683D8C9CB1BB85CD0C70DD9F13640E2 EFI_PROCESSOR_INFORMATION;
typedef struct _2C008F4EB15EC1AF9C3A363A3732DFB3 EFI_PROCESSOR_STATUS_DATA;
typedef struct _6D267FD34DD458FE2DF51F71D0F42787 EFI_PXE_BASE_CODE_SRVLIST;
typedef struct _EFI_RUNTIME_ARCH_PROTOCOL EFI_RUNTIME_ARCH_PROTOCOL;
typedef void *(*EFI_RUNTIME_CRYPT_RSA_NEW)(void);
typedef struct _EFI_SMM_CONTROL2_PROTOCOL EFI_SMM_CONTROL2_PROTOCOL;
typedef struct _EFI_SMM_VARIABLE_PROTOCOL EFI_SMM_VARIABLE_PROTOCOL;
typedef struct _F4CAD93BDEB4EB58D10E72E92DA5C496 EFI_SUBCLASS_TYPE1_HEADER;
typedef struct _9F72036F1720BD50F14A3F3D330C6F66 EFI_SYSTEM_RESOURCE_ENTRY;
typedef struct _2D5577F8CA49EBA695396A221DE9C683 EFI_SYSTEM_RESOURCE_TABLE;
typedef struct _EFI_TCG_CLIENT_ACPI_TABLE EFI_TCG_CLIENT_ACPI_TABLE;
typedef struct _EFI_TCG_SERVER_ACPI_TABLE EFI_TCG_SERVER_ACPI_TABLE;
typedef struct _26A9FD80ACBBCC67D0EAB69F6998B5AD EFI_TCP4_COMPLETION_TOKEN;
typedef struct _F6F503A5BF14C3E7E5412CF4EB8F9FA5 EFI_TCP4_CONNECTION_TOKEN;
typedef struct _26A9FD80ACBBCC67D0EAB69F6998B5AD EFI_TCP6_COMPLETION_TOKEN;
typedef struct _58458B46D190575D5AC2EE75F1C79484 EFI_TCP6_CONNECTION_TOKEN;
typedef struct _E4A56E909B566E944F516D2F131E248A EFI_UDP4_COMPLETION_TOKEN;
typedef struct _0E1C314154D40BBA527682AF090FB242 EFI_UDP6_COMPLETION_TOKEN;
typedef union _EFI_USBFN_MESSAGE_PAYLOAD EFI_USBFN_MESSAGE_PAYLOAD;
typedef struct _EFI_USBFN_TRANSFER_RESULT EFI_USBFN_TRANSFER_RESULT;
typedef struct _352C1AF0B77CD9BCC20C63D95A0CED3A EFI_USB_STRING_DESCRIPTOR;
typedef struct _EFI_USER_MANAGER_PROTOCOL EFI_USER_MANAGER_PROTOCOL;
typedef struct _08DB8EA3216404F09CBCE8BC640796A1 EFI_WIN_NT_THUNK_PROTOCOL;
typedef struct _1F215FA5274C3CF725ACFAF5802558B4 FRAMEWORK_EFI_IFR_NUMERIC;
typedef struct _5A15F5E3901A967D8D1E62CCC4A0CA07 IP6_ICMP_INFORMATION_HEAD;
typedef union _E6FDF59E73863B00D8B0D819BC678DCF IP_IO_IP_COMPLETION_TOKEN;
enum MACRO_ACPI_LARGE_EXTENDED {ACPI_LARGE_EXTENDED_ADDRESS_SPACE_DESCRIPTOR_NAME = 0xB,ACPI_EXTENDED_ADDRESS_SPACE_DESCRIPTOR = 0x8B,};
enum MACRO_EFI_IMAGE_EXECUTION {EFI_IMAGE_EXECUTION_AUTHENTICATION = 0x7,EFI_IMAGE_EXECUTION_AUTH_UNTESTED = 0x0,EFI_IMAGE_EXECUTION_AUTH_SIG_FAILED = 0x1,EFI_IMAGE_EXECUTION_AUTH_SIG_PASSED = 0x2,EFI_IMAGE_EXECUTION_AUTH_SIG_NOT_FOUND = 0x3,EFI_IMAGE_EXECUTION_AUTH_SIG_FOUND = 0x4,EFI_IMAGE_EXECUTION_POLICY_FAILED = 0x5,EFI_IMAGE_EXECUTION_INITIALIZED = 0x8,};
enum MACRO_PLATFORM_PERSISTENT {PLATFORM_PERSISTENT = 0x81800000,};
typedef struct _3C85D21A1A49B0FEE4DECA019A2D6DF4 MEMORY_DEVICE_TYPE_DETAIL;
typedef struct _76721202F8FDDAD709DCCB139B848641 MEMORY_PROFILE_ALLOC_INFO;
typedef struct _BB611BE52EA9E4C4110772F4A6986FCD MEMORY_PROFILE_DESCRIPTOR;
typedef struct _58B623501BA3D7B210595FE620EDA646 MISC_BIOS_CHARACTERISTICS;
typedef struct _PARALLEL_CONN_DEVICE_PATH PARALLEL_CONN_DEVICE_PATH;
typedef struct _EFI_SIO_CONTROL_PROTOCOL *PEFI_SIO_CONTROL_PROTOCOL;
typedef struct _05F1ED27DA776E2B6446677EC05B8681 PEI_APRIORI_FILE_CONTENTS;
typedef struct _FE140301C84DDB7768C685C5F48B19EB PEI_PERFORMANCE_LOG_ENTRY;
typedef struct _9BCDB97CCD6963F32812F091F8E01AA1 SAL_COHERENCE_DOMAIN_INFO;
typedef struct _98213CF2F2F826EC74DB187C09265FC4 SAL_UPDATE_PAL_DATA_BLOCK;
typedef struct _SAL_UPDATE_PAL_INFO_BLOCK SAL_UPDATE_PAL_INFO_BLOCK;
typedef struct _D77C3BF4AD6459820D87B06F53653A24 TPMS_ALGORITHM_DETAIL_ECC;
typedef struct _E33269EACD825C55A32489FC20436724 WIN_CERTIFICATE_UEFI_GUID;
enum _EFI_USBFN_DEVICE_INFO_ID {EfiUsbDeviceInfoUnknown = 0x0,EfiUsbDeviceInfoSerialNumber = 0x1,EfiUsbDeviceInfoManufacturerName = 0x2,EfiUsbDeviceInfoProductName = 0x3,};
typedef union _090A03EDD1E347FB71B0BFE955C26CED ACPI_RESOURCE_HEADER_PTR;
typedef struct _E1F60BB2CD39EE4B0DE30D99134EA3B4 ATAPI_READ_CAPACITY_DATA;
typedef struct _A1AE7E9EF66810FE800C427EFBE34A13 ATAPI_REQUEST_SENSE_DATA;
typedef struct _6EC8891D431B9FE2A3ABED3B1BBB21EC AUTH_VAR_LIB_CONTEXT_OUT;
typedef struct _401BE23B4C5739E975D3490FF25A84DF BASE_BOARD_FEATURE_FLAGS;
typedef struct _B9E2DC9C06918896C3006BFFAE6298E5 BASE_LIBRARY_JUMP_BUFFER;
typedef struct _D1A60C85E9D9248AC771C8C968928F3A DEVICE_PATH_STRING_TABLE;
typedef struct _738653807061B51D77FDC06F17B658B3 DEVICE_PRODUCER_PARALLEL;
typedef struct _A8B7ADFE98E1D0BE007076BB75E42139 DNS6_GENERAL_LOOKUP_DATA;
typedef struct _EDKII_VAR_CHECK_PROTOCOL EDKII_VAR_CHECK_PROTOCOL;
typedef struct _3AE7F9F006A8FACAD1D4B79518828FB5 EFI_80211_ASSOCIATE_DATA;
typedef struct _1B856EE7FF1B29CEB3E0F03133DD380C EFI_80211_BSS_DESP_PILOT;
typedef struct _543F6701E62D7EB496B46C6BDAD369A2 EFI_80211_ELEMENT_HEADER;
typedef struct _7DFC8B8B0FE10570798370628F555DB9 EFI_80211_MULTIPLE_BSSID;
typedef struct _EB8A3CD07E0BF00E4FD5FF7ABAF3321C EFI_ACPI_ASF_CONTROLDATA;
typedef struct _F663F2ACD628C345DC4CC4986AE5FCEE EFI_CACHE_SRAM_TYPE_DATA;
typedef struct _A4F1DEA9353CD0940D14AA2D91979FF5 EFI_COMPRESSION_SECTION2;
typedef struct _3B494AB02174C47782BE1700D6EAB32E EFI_DEVICE_PATH_PROTOCOL;
typedef struct _CF02D691DB7E7F7F31F4CE9A6F6F351A EFI_DHCP6_RETRANSMISSION;
typedef struct _63667749E20A876508B27B2A5D375BCD EFI_DISPATCH_OPROM_TABLE;
typedef struct _EFI_EBC_VM_TEST_PROTOCOL EFI_EBC_VM_TEST_PROTOCOL;
typedef struct _92E08157E319A6D0048B11B6F44E7E7D EFI_EDID_ACTIVE_PROTOCOL;
typedef struct _A5259ADE5D385A684FBB8619EA9AC1DA EFI_GENERIC_ERROR_STATUS;
typedef struct _EFI_GLYPH_GIBT_END_BLOCK EFI_GLYPH_GIBT_END_BLOCK;
typedef struct _0916FCECC27976C81B9ECD4BAD6A16A2 EFI_GUID_DEFINED_SECTION;
typedef struct _EFI_HII_AIBT_SKIP1_BLOCK EFI_HII_AIBT_SKIP1_BLOCK;
typedef struct _EFI_HII_AIBT_SKIP2_BLOCK EFI_HII_AIBT_SKIP2_BLOCK;
typedef struct _76DF60A307B2AF677FDBB7728CC04997 EFI_HII_DEVICE_PATH_PACK;
typedef struct _EFI_HII_FONT_PACKAGE_HDR EFI_HII_FONT_PACKAGE_HDR;
typedef struct _EFI_HII_FORM_PACKAGE_HDR EFI_HII_FORM_PACKAGE_HDR;
typedef struct _EFI_HII_GIBT_GLYPH_BLOCK EFI_HII_GIBT_GLYPH_BLOCK;
typedef struct _EFI_HII_GIBT_SKIP1_BLOCK EFI_HII_GIBT_SKIP1_BLOCK;
typedef struct _EFI_HII_GIBT_SKIP2_BLOCK EFI_HII_GIBT_SKIP2_BLOCK;
typedef struct _EFI_HII_GUID_PACKAGE_HDR EFI_HII_GUID_PACKAGE_HDR;
typedef struct _EFI_HII_IIBT_SKIP1_BLOCK EFI_HII_IIBT_SKIP1_BLOCK;
typedef struct _EFI_HII_IIBT_SKIP2_BLOCK EFI_HII_IIBT_SKIP2_BLOCK;
typedef struct _EFI_HII_SIBT_SKIP1_BLOCK EFI_HII_SIBT_SKIP1_BLOCK;
typedef struct _EFI_HII_SIBT_SKIP2_BLOCK EFI_HII_SIBT_SKIP2_BLOCK;
typedef struct _899560C02B287A1E3D364B639677B50C EFI_HOB_FIRMWARE_VOLUME2;
typedef struct _EFI_IFR_STATEMENT_HEADER EFI_IFR_STATEMENT_HEADER;
typedef struct _6E10D8C8C16DA8379B9DEB89A5C74789 EFI_IMAGE_DATA_DIRECTORY;
typedef struct _D0B47FD0BF657080F777BA7FEA289080 EFI_IMAGE_EXECUTION_INFO;
typedef struct _0591ECE004F4E3FCF755AB0D385F118A EFI_IMAGE_IMPORT_BY_NAME;
typedef struct _053218E54E0AD47DEB9BF7DE578D522B EFI_IMAGE_SECTION_HEADER;
typedef struct _514098925362A3D4F3AE39E7826BDCB0 EFI_IP4_COMPLETION_TOKEN;
typedef struct _EFI_IP4_CONFIG2_PROTOCOL EFI_IP4_CONFIG2_PROTOCOL;
typedef struct _0F934B3B6D925568E8AB6A57CC3AA362 EFI_IP6_COMPLETION_TOKEN;
typedef struct _EFI_IPSEC_PROCESS_POLICY EFI_IPSEC_PROCESS_POLICY;
typedef struct _EFI_LEGACY_8259_PROTOCOL EFI_LEGACY_8259_PROTOCOL;
typedef struct _EFI_LEGACY_BIOS_PROTOCOL EFI_LEGACY_BIOS_PROTOCOL;
typedef struct _8B571DAB4FBCBAE69A9F2186BE96BA6F EFI_MISC_GROUP_NAME_DATA;
typedef struct _108169C987AD0AF6BA52F11EF45C1E8B EFI_MISC_OEM_STRING_DATA;
typedef struct _EFI_MP_SERVICES_PROTOCOL EFI_MP_SERVICES_PROTOCOL;
typedef struct _3F1E3F943197CDE1415AD067E3615C56 EFI_MTFTP4_OVERRIDE_DATA;
typedef struct _375CE3D3190F3E9E28E34C9C760A24AD EFI_MTFTP6_OVERRIDE_DATA;
typedef struct _EFI_OEM_BADGING_PROTOCOL EFI_OEM_BADGING_PROTOCOL;
typedef struct _E722216BAEE331D2535B9C8695D513A3 EFI_PCI_CAPABILITY_MSI32;
typedef struct _36C6A5B1DF7611678118B938F91052AA EFI_PCI_CAPABILITY_MSI64;
typedef struct _F4429A50E788466D7EAAF864065A7A40 EFI_PCI_OPTION_ROM_TABLE;
typedef struct _EFI_PEI_LOADED_IMAGE_PPI EFI_PEI_LOADED_IMAGE_PPI;
typedef union _EC9053F147967E22E2590C1E50F04F29 EFI_PXE_BASE_CODE_PACKET;
typedef struct _995E2D1C7E1C08F056C9CB2DF62ABADF EFI_RSC_HANDLER_PROTOCOL;
typedef struct _4D67B151C7CB8AE8081A2C3E1AF9CD67 EFI_SIMPLE_POINTER_STATE;
typedef struct _EFI_SIO_CONTROL_PROTOCOL EFI_SIO_CONTROL_PROTOCOL;
typedef struct _49F51286EBABDAC2E3AB9387C3433E01 EFI_SMBUS_DEVICE_ADDRESS;
typedef struct _EFI_SMM_ACCESS2_PROTOCOL EFI_SMM_ACCESS2_PROTOCOL;
typedef struct _EFI_SMM_CONTROL_PROTOCOL EFI_SMM_CONTROL_PROTOCOL;
typedef struct _9802A0BB7B0B0D6C622372855E5DAB1D EFI_SMM_CONTROL_REGISTER;
typedef struct _EFI_SMM_CPU_IO2_PROTOCOL EFI_SMM_CPU_IO2_PROTOCOL;
typedef struct _EFI_SMM_CPU_IO_INTERFACE EFI_SMM_CPU_IO_INTERFACE;
typedef struct _EFI_STATUS_CODE_PROTOCOL EFI_STATUS_CODE_PROTOCOL;
typedef struct _38895A73E62827E708AC1BEEDA34D9F2 EFI_SYSTEM_TABLE_POINTER;
typedef struct _A14CB1401ABA57E2B089C5FB45E218F1 EFI_TIMESTAMP_PROPERTIES;
typedef struct _BAE8F8CA1F47FBE696AE2A28E257FFD7 EFI_UNICODE_STRING_TABLE;
typedef struct _EFI_VLAN_CONFIG_PROTOCOL EFI_VLAN_CONFIG_PROTOCOL;
typedef struct _ESRT_MANAGEMENT_PROTOCOL ESRT_MANAGEMENT_PROTOCOL;
typedef struct _02920E45F2EA2A3AFAEE9BE480D935A9 FIBRECHANNEL_DEVICE_PATH;
typedef struct _CC3F58864E42F55138B52E10E756FDE3 FIRMWARE_SEC_PERFORMANCE;
typedef struct _FORM_DISPLAY_ENGINE_FORM FORM_DISPLAY_ENGINE_FORM;
typedef struct _B40D81E03147033EE600A6FD268CB8A4 FRAMEWORK_EFI_IFR_ONE_OF;
typedef struct _6CB2ACB2315B579EF1B18B5CA914D940 FRAMEWORK_EFI_IFR_STRING;
typedef union _6A1ABF627FBE0922AA9EF24F9E956DFA IO_APIC_VERSION_REGISTER;
enum MACRO_EFI_PCI_CAPABILITY {EFI_PCI_CAPABILITY_ID_PCIX = 0x7,};
enum MACRO_VARIABLE_ATTRIBUTE {VARIABLE_ATTRIBUTE_NV_BS = 3,VARIABLE_ATTRIBUTE_BS_RT = 6,VARIABLE_ATTRIBUTE_AT_AW = 48,VARIABLE_ATTRIBUTE_NV_BS_RT = 7,VARIABLE_ATTRIBUTE_NV_BS_RT_HR = 15,VARIABLE_ATTRIBUTE_NV_BS_RT_AT = 39,VARIABLE_ATTRIBUTE_NV_BS_RT_AW = 23,VARIABLE_ATTRIBUTE_NV_BS_RT_HR_AT_AW = 63,VARIABLE_INDEX_TABLE_VOLUME = 122,};
typedef struct _086532C43F52DA4742BC21A63368B6D6 MEDIA_FW_VOL_DEVICE_PATH;
typedef struct _5CA98191CD661E462E70D7300551E151 MEMORY_STATUSCODE_RECORD;
typedef struct _F1C91C1F34DF2478E48B88EFD2B3EA4C MISC_COOLING_DEVICE_TYPE;
struct ORDERED_COLLECTION_ENTRY;
typedef struct _C065A6288ECD7876164DB9BCE6EAE83D PAL_MC_ERROR_STRUCT_INFO;
typedef struct _A710FAABCDB1AD0E788E8111A4936ED6 PCI_EXPANSION_ROM_HEADER;
typedef struct _0A64B2C198268F8E9BBD337C23AB2846 PROTOCOL_INFO_ENUMERATOR;
typedef struct _1BE59F2B056A6ABF2DDA9D926A1AE05C SAL_PCI_BUS_ERROR_RECORD;
typedef struct _4F42FF7208C7032221F0AFE65CDE6B10 SAL_ST_PLATFORM_FEATURES;
typedef union _974BBB0BD35579C3BF5608C837A10F5D SMBIOS_STRUCTURE_POINTER;
typedef struct _3EBF2BE0AB8CBDCE959F2072C14A3CC4 SMBIOS_TABLE_ENTRY_POINT;
typedef void (*SWITCH_STACK_ENTRY_POINT)(void *Context1, void *Context2);
typedef struct _7F7C65701C46F1894FCE54A71BD43572 TCG_EfiSpecIDEventStruct;
typedef struct _1600FD3E6C89917A4CE7336750A644B2 TPML_TAGGED_PCR_PROPERTY;
typedef struct _ACBA5A58D6E9B16F6FAF41D576A29499 TPML_TAGGED_TPM_PROPERTY;
typedef union _487F154BFD23F1C76883464380C0CFF3 TPMU_SENSITIVE_COMPOSITE;
typedef struct _BA3848C2DD630DD4F1277941FDE05257 USB_INTERFACE_DESCRIPTOR;
enum _EFI_MEMORY_CHANNEL_TYPE {EfiMemoryChannelTypeOther = 0x1,EfiMemoryChannelTypeUnknown = 0x2,EfiMemoryChannelTypeRambus = 0x3,EfiMemoryChannelTypeSyncLink = 0x4,};
typedef struct _456973BE6483CBF66CB9F4134511B36A ATAPI_REQUEST_SENSE_CMD;
typedef struct _A3D05C41E9F030ED867654F416EAE9E2 AUTH_VAR_LIB_CONTEXT_IN;
typedef union _7C5F9768C94386CA7F4E7DC66B8830A3 CDROM_VOLUME_DESCRIPTOR;
typedef void (*CLOSE_HANDLE_ENUMERATOR)(void);
typedef struct _5C27D2E807200B9E0EBA965861D1CE1E DISPLAY_DISPLAY_PAYLOAD;
typedef struct _B4E06BD78C8094DDC134BE6ECCF8BEF2 DISPLAY_QUESTION_OPTION;
typedef struct _DA5DCD78226E6528D0E59BAA48428A5B DNS_GENERAL_LOOKUP_DATA;
typedef struct _724A14905E3ED6A54D792F35D5CD3E86 EFI_ACPI_DMA_DESCRIPTOR;
typedef struct _D251BF46B90C7763ECD8E24C06B39705 EFI_ACPI_IRQ_DESCRIPTOR;
typedef struct _EFI_ACPI_TABLE_PROTOCOL EFI_ACPI_TABLE_PROTOCOL;
typedef struct _7151074C1D109E45CFC1C49E3920E4B6 EFI_ATA_COLLECTIVE_MODE;
typedef struct _BC9E4A077A44AF5B16CC063CFB5FA173 EFI_COMPRESSION_SECTION;
typedef struct _4687A7E7563B5861448BB181C4793520 EFI_CONFIGURATION_TABLE;
typedef union _3793CD92955580789EAEA0D05A428B4A EFI_CPU_VARIABLE_RECORD;
typedef struct _EFI_DEBUG_MASK_PROTOCOL EFI_DEBUG_MASK_PROTOCOL;
typedef struct _EFI_DECOMPRESS_PROTOCOL EFI_DECOMPRESS_PROTOCOL;
typedef struct _EAC2E2A17271872096986BE83875F537 EFI_DHCP4_PACKET_OPTION;
typedef struct _441FAAD38652781BCFC1CCB758BBD401 EFI_DHCP6_IA_DESCRIPTOR;
typedef struct _E59F7502520F69744C439D58C986B3F2 EFI_DHCP6_PACKET_OPTION;
typedef union _E05C756931CF804D039B8584A5FAC0BF EFI_FFS_INTEGRITY_CHECK;
typedef struct _551E4252789CB278C644F498939D1E94 EFI_FIRMWARE_ERROR_DATA;
typedef struct _6822A72659FF56C780C6DE690DFFE7AC EFI_FLASH_SUBAREA_ENTRY;
typedef struct _EFI_HII_AIBT_EXT1_BLOCK EFI_HII_AIBT_EXT1_BLOCK;
typedef struct _EFI_HII_AIBT_EXT2_BLOCK EFI_HII_AIBT_EXT2_BLOCK;
typedef struct _EFI_HII_AIBT_EXT4_BLOCK EFI_HII_AIBT_EXT4_BLOCK;
typedef struct _EFI_HII_ANIMATION_BLOCK EFI_HII_ANIMATION_BLOCK;
typedef union _C63C456AEB98DBBC9D03E784D6D27374 EFI_HII_CALLBACK_PACKET;
typedef struct _EFI_HII_GIBT_EXT1_BLOCK EFI_HII_GIBT_EXT1_BLOCK;
typedef struct _EFI_HII_GIBT_EXT2_BLOCK EFI_HII_GIBT_EXT2_BLOCK;
typedef struct _EFI_HII_GIBT_EXT4_BLOCK EFI_HII_GIBT_EXT4_BLOCK;
typedef struct _EFI_HII_IIBT_EXT1_BLOCK EFI_HII_IIBT_EXT1_BLOCK;
typedef struct _EFI_HII_IIBT_EXT2_BLOCK EFI_HII_IIBT_EXT2_BLOCK;
typedef struct _EFI_HII_IIBT_EXT4_BLOCK EFI_HII_IIBT_EXT4_BLOCK;
typedef struct _EFI_HII_IIBT_JPEG_BLOCK EFI_HII_IIBT_JPEG_BLOCK;
typedef struct _C8576DEBE332FFA7BF2CD60B1B989A91 EFI_HII_KEYBOARD_LAYOUT;
typedef struct _EFI_HII_SIBT_EXT1_BLOCK EFI_HII_SIBT_EXT1_BLOCK;
typedef struct _EFI_HII_SIBT_EXT2_BLOCK EFI_HII_SIBT_EXT2_BLOCK;
typedef struct _EFI_HII_SIBT_EXT4_BLOCK EFI_HII_SIBT_EXT4_BLOCK;
typedef struct _EFI_HII_SIBT_FONT_BLOCK EFI_HII_SIBT_FONT_BLOCK;
typedef struct _EFI_HII_STRING_PROTOCOL EFI_HII_STRING_PROTOCOL;
typedef struct _FF6A55059D2F8FBB228E6A52654D0074 EFI_HOB_FIRMWARE_VOLUME;
typedef struct _61309906903FE258EDF769C872829316 EFI_HTTPv4_ACCESS_POINT;
typedef struct _FB4111D416CC866343ED7FCA940F38E6 EFI_HTTPv6_ACCESS_POINT;
typedef struct _EFI_I2C_MASTER_PROTOCOL EFI_I2C_MASTER_PROTOCOL;
typedef struct _EFI_IFR_FORM_MAP_METHOD EFI_IFR_FORM_MAP_METHOD;
typedef struct _EFI_IFR_INCONSISTENT_IF EFI_IFR_INCONSISTENT_IF;
typedef struct _EFI_IFR_QUESTION_HEADER EFI_IFR_QUESTION_HEADER;
typedef struct _EFI_IFR_QUESTION_REF3_2 EFI_IFR_QUESTION_REF3_2;
typedef struct _EFI_IFR_QUESTION_REF3_3 EFI_IFR_QUESTION_REF3_3;
typedef struct _EFI_IFR_VARSTORE_DEVICE EFI_IFR_VARSTORE_DEVICE;
typedef struct _C36B89143C1E3740A076B865570ADF20 EFI_IFR_VARSTORE_SELECT;
typedef struct _EFI_IP4_CONFIG_PROTOCOL EFI_IP4_CONFIG_PROTOCOL;
typedef struct _EFI_IP6_CONFIG_PROTOCOL EFI_IP6_CONFIG_PROTOCOL;
typedef struct _EFI_IPSEC_ESP_ALGO_INFO EFI_IPSEC_ESP_ALGO_INFO;
typedef struct _EFI_IPSEC_FRAGMENT_DATA EFI_IPSEC_FRAGMENT_DATA;
typedef struct _EFI_IPSEC_TUNNEL_OPTION EFI_IPSEC_TUNNEL_OPTION;
typedef struct _EFI_LOAD_FILE2_PROTOCOL EFI_LOAD_FILE2_PROTOCOL;
typedef struct _F8A59569CD3F9835ACD986155F8ED016 EFI_MISC_CHASSIS_STATUS;
typedef struct _542352B1445A77BBBF413A1D11C51813 EFI_MISC_LANGUAGE_FLAGS;
typedef struct _1B987404B564D530EFBB6B88FB26FA27 EFI_MTFTP4_DATA8_HEADER;
typedef struct _C0F6C2A8FBB9994984F607D899E62187 EFI_MTFTP4_ERROR_HEADER;
typedef struct _1B987404B564D530EFBB6B88FB26FA27 EFI_MTFTP6_DATA8_HEADER;
typedef struct _C0F6C2A8FBB9994984F607D899E62187 EFI_MTFTP6_ERROR_HEADER;
typedef struct _C961DF17BCDD7C75BBAFA7D181268110 EFI_NVM_EXPRESS_COMMAND;
typedef struct _9BF4DBB8ED4FAFF7CD583EAD000338FE EFI_PCIE_ERROR_DATA_AER;
typedef struct _F98E9868A1D3EA615C1B6BAEA6621ABA EFI_PCI_CAPABILITY_PCIX;
typedef struct _EFI_PE32_IMAGE_PROTOCOL EFI_PE32_IMAGE_PROTOCOL;
typedef struct _77D474CBEB68459D85E3C2A830C2EF21 EFI_PEI_BLOCK_IO2_MEDIA;
typedef struct _EFI_PEI_MP_SERVICES_PPI EFI_PEI_MP_SERVICES_PPI;
typedef struct _EFI_PEI_RSC_HANDLER_PPI EFI_PEI_RSC_HANDLER_PPI;
typedef struct _970FFEB6E0B0B4B3E56E8671EDDE531D EFI_PROCESSOR_MISC_INFO;
typedef struct _C04C39A66757B1B312A1927BE6696E8E EFI_PROCESSOR_SIGNATURE;
typedef struct _E7FD308AFB9199992B0FF4C170562F5A EFI_PS2_POLICY_PROTOCOL;
typedef struct _EFI_RUNTIME_EVENT_ENTRY EFI_RUNTIME_EVENT_ENTRY;
typedef struct _EFI_RUNTIME_IMAGE_ENTRY EFI_RUNTIME_IMAGE_ENTRY;
typedef struct _0279D7D1FD4588B9E88F84CCCE0284C6 EFI_SCSI_PASS_THRU_MODE;
typedef struct _516E2F5A0BAE859DB879D0F9110BE2A0 EFI_SIMPLE_NETWORK_MODE;
typedef struct _62AA9CB42F07667ACFB3846F1F95957B EFI_SIMPLE_POINTER_MODE;
typedef struct _B6F702E32E8BF14F27DA388268F3DA51 EFI_SIO_REGISTER_MODIFY;
typedef struct _7248D28E3A09D7194E8E1E343F40CFA2 EFI_SMBIOS_TABLE_HEADER;
typedef struct _EFI_SMM_ACCESS_PROTOCOL EFI_SMM_ACCESS_PROTOCOL;
typedef struct _B36FBEF63788BC4566C7951A6089AED9 EFI_SMM_IO_TRAP_CONTEXT;
typedef struct _351D313CDE6C8F37C8F02CD3281ED67E EFI_SYSTEM_CONTEXT_IA32;
typedef struct _EFI_TIMER_ARCH_PROTOCOL EFI_TIMER_ARCH_PROTOCOL;
typedef void *EFI_USER_PROFILE_HANDLE;
typedef struct _3E26921397DDD281DD26C02D21138292 EFI_VECTOR_HANDOFF_INFO;
typedef struct _FLOOPY_CONN_DEVICE_PATH FLOOPY_CONN_DEVICE_PATH;
typedef TIME_ZONE_INFORMATION *LPTIME_ZONE_INFORMATION;
enum MACRO_DEBUG_AGENT_IMAGE {DEBUG_AGENT_IMAGE_WAIT = 0x0,DEBUG_AGENT_IMAGE_CONTINUE = 0x1,};
enum MACRO_EFI_PCI_ATTRIBUTE {EFI_PCI_ATTRIBUTE_ISA_MOTHERBOARD_IO = 0x1,EFI_PCI_ATTRIBUTE_ISA_IO = 0x2,EFI_PCI_ATTRIBUTE_VGA_PALETTE_IO = 0x4,EFI_PCI_ATTRIBUTE_VGA_MEMORY = 0x8,EFI_PCI_ATTRIBUTE_VGA_IO = 0x10,EFI_PCI_ATTRIBUTE_IDE_PRIMARY_IO = 0x20,EFI_PCI_ATTRIBUTE_IDE_SECONDARY_IO = 0x40,EFI_PCI_ATTRIBUTE_MEMORY_WRITE_COMBINE = 0x80,EFI_PCI_ATTRIBUTE_MEMORY_CACHED = 0x800,EFI_PCI_ATTRIBUTE_MEMORY_DISABLE = 0x1000,EFI_PCI_ATTRIBUTE_DUAL_ADDRESS_CYCLE = 0x8000,EFI_PCI_ATTRIBUTE_ISA_IO_16 = 0x10000,EFI_PCI_ATTRIBUTE_VGA_PALETTE_IO_16 = 0x20000,EFI_PCI_ATTRIBUTE_VGA_IO_16 = 0x40000,EFI_PCI_ATTRIBUTE_VALID_FOR_ALLOCATE_BUFFER = 0x8880,EFI_PCI_ATTRIBUTE_INVALID_FOR_ALLOCATE_BUFFER = 0xFFFF777F,EFI_PCI_HOST_BRIDGE_COMBINE_MEM_PMEM = 0x1,EFI_PCI_HOST_BRIDGE_MEM64_DECODE = 0x2,EFI_RESOURCE_SATISFIED = 0x0,EFI_RESOURCE_NOT_SATISFIED = 0xFFFFFFFF,EFI_HPC_STATE_INITIALIZED = 0x1,EFI_HPC_STATE_ENABLED = 0x2,EFI_PCI_IO_PASS_THROUGH_BAR = 0xFF,EFI_PCI_IO_ATTRIBUTE_MASK = 0x77F,EFI_PCI_IO_ATTRIBUTE_ISA_MOTHERBOARD_IO = 0x1,EFI_PCI_IO_ATTRIBUTE_ISA_IO = 0x2,EFI_PCI_IO_ATTRIBUTE_VGA_PALETTE_IO = 0x4,EFI_PCI_IO_ATTRIBUTE_VGA_MEMORY = 0x8,EFI_PCI_IO_ATTRIBUTE_VGA_IO = 0x10,EFI_PCI_IO_ATTRIBUTE_IDE_PRIMARY_IO = 0x20,EFI_PCI_IO_ATTRIBUTE_IDE_SECONDARY_IO = 0x40,EFI_PCI_IO_ATTRIBUTE_MEMORY_WRITE_COMBINE = 0x80,EFI_PCI_IO_ATTRIBUTE_IO = 0x100,EFI_PCI_IO_ATTRIBUTE_MEMORY = 0x200,EFI_PCI_IO_ATTRIBUTE_BUS_MASTER = 0x400,EFI_PCI_IO_ATTRIBUTE_MEMORY_CACHED = 0x800,EFI_PCI_IO_ATTRIBUTE_MEMORY_DISABLE = 0x1000,EFI_PCI_IO_ATTRIBUTE_EMBEDDED_DEVICE = 0x2000,EFI_PCI_IO_ATTRIBUTE_EMBEDDED_ROM = 0x4000,EFI_PCI_IO_ATTRIBUTE_DUAL_ADDRESS_CYCLE = 0x8000,EFI_PCI_IO_ATTRIBUTE_ISA_IO_16 = 0x10000,EFI_PCI_IO_ATTRIBUTE_VGA_PALETTE_IO_16 = 0x20000,EFI_PCI_IO_ATTRIBUTE_VGA_IO_16 = 0x40000,EFI_PCI_DEVICE_ENABLE = 0x700,EFI_VGA_DEVICE_ENABLE = 0x11C,EFI_RESERVE_NONE_IO_ALIAS = 0x0,EFI_RESERVE_ISA_IO_ALIAS = 0x1,EFI_RESERVE_ISA_IO_NO_ALIAS = 0x2,EFI_RESERVE_VGA_IO_ALIAS = 0x4,EFI_RESERVE_VGA_IO_NO_ALIAS = 0x8,};
enum MACRO_EFI_PCI_EXPANSION {EFI_PCI_EXPANSION_ROM_HEADER_COMPRESSED = 0x1,};
enum MACRO_EFI_VARIABLE_READ {EFI_VARIABLE_READ_ONLY = 0x8,EFI_DATA_RECORD_HEADER_VERSION = 0x100,EFI_DATA_RECORD_CLASS_DEBUG = 0x1,EFI_DATA_RECORD_CLASS_ERROR = 0x2,EFI_DATA_RECORD_CLASS_DATA = 0x4,EFI_DATA_RECORD_CLASS_PROGRESS_CODE = 0x8,};
enum MACRO_IP6_PREFIX_LENGTH {IP6_PREFIX_LENGTH = 64,};
enum MACRO_TPM_RC_ASYMMETRIC {TPM_RC_ASYMMETRIC = 129,TPM_RC_ATTRIBUTES = 130,TPM_RC_HASH = 131,TPM_RC_VALUE = 132,TPM_RC_HIERARCHY = 133,TPM_RC_KEY_SIZE = 135,TPM_RC_MGF = 136,TPM_RC_MODE = 137,TPM_RC_TYPE = 138,TPM_RC_HANDLE = 139,TPM_RC_KDF = 140,TPM_RC_RANGE = 141,TPM_RC_AUTH_FAIL = 142,TPM_RC_NONCE = 143,TPM_RC_PP = 144,TPM_RC_SCHEME = 146,TPM_RC_SIZE = 149,TPM_RC_SYMMETRIC = 150,TPM_RC_TAG = 151,TPM_RC_SELECTOR = 152,TPM_RC_INSUFFICIENT = 154,TPM_RC_SIGNATURE = 155,TPM_RC_KEY = 156,TPM_RC_POLICY_FAIL = 157,TPM_RC_INTEGRITY = 159,TPM_RC_TICKET = 160,TPM_RC_RESERVED_BITS = 161,TPM_RC_BAD_AUTH = 162,TPM_RC_EXPIRED = 163,TPM_RC_POLICY_CC = 164,TPM_RC_BINDING = 165,TPM_RC_CURVE = 166,TPM_RC_ECC_POINT = 167,};
typedef struct _918B2D7F675D96D2951C3A905048EF36 PAL_MEMORY_CONTROL_WORD;
typedef struct _PEI_SEC_PERFORMANCE_PPI PEI_SEC_PERFORMANCE_PPI;
typedef struct _PERFORMANCE_EX_PROTOCOL PERFORMANCE_EX_PROTOCOL;
typedef struct _0EADD5243AAFE5F53B0E940963814CF0 PROCESSOR_FEATURE_FLAGS;
typedef struct s_pxe_cpb_mcast_ip_to_mac PXE_CPB_MCAST_IP_TO_MAC;
typedef struct s_pxe_cpb_receive_filters PXE_CPB_RECEIVE_FILTERS;
typedef struct s_pxe_cpb_station_address PXE_CPB_STATION_ADDRESS;
typedef struct _05683FAC1D9C40DFEA2926E525216607 SAL_MCA_COUNT_STRUCTURE;
typedef struct _8DE628CD5A324805CF3F9A9655379560 SAL_MEMORY_ERROR_RECORD;
typedef struct _C05C8DE8AEFB7F68AD5837568088F595 SAL_SYSTEM_TABLE_HEADER;
typedef struct _SERIAL_CONN_DEVICE_PATH SERIAL_CONN_DEVICE_PATH;
typedef void (*SHELLENV_FREE_RESOURCES)(void);
typedef struct _822983CC18095F9E06EDF22D77B7CE2F SMM_PERF_COMMUNICATE_EX;
typedef union _04EC12C93849E862E031F174B0DFCB1E TCP_IO_CONNECTION_TOKEN;
typedef struct _1BEB5F5D195680F06D7E4F2EE4620516 TPM2B_CONTEXT_SENSITIVE;
typedef struct _CB6F3F53448E87500AF2774A69CAF28A TPMS_COMMAND_AUDIT_INFO;
typedef struct _C4829FAE93F04C7651DD8881D17ADFEB TPMS_SESSION_AUDIT_INFO;
typedef struct tdTPM_CHANGEAUTH_VALIDATE TPM_CHANGEAUTH_VALIDATE;
typedef struct tdTPM_DELEGATE_OWNER_BLOB TPM_DELEGATE_OWNER_BLOB;
typedef struct _F24BF685FE2FFD6D8D21627AC8F7EAE4 USB_ENDPOINT_DESCRIPTOR;
typedef struct _5830DA795DA5196AC98747FD5A091A12 VARIABLE_ENTRY_PROPERTY;
enum _EFI_MEMORY_FORM_FACTOR {EfiMemoryFormFactorOther = 0x1,EfiMemoryFormFactorUnknown = 0x2,EfiMemoryFormFactorSimm = 0x3,EfiMemoryFormFactorSip = 0x4,EfiMemoryFormFactorChip = 0x5,EfiMemoryFormFactorDip = 0x6,EfiMemoryFormFactorZip = 0x7,EfiMemoryFormFactorProprietaryCard = 0x8,EfiMemoryFormFactorDimm = 0x9,EfiMemoryFormFactorTsop = 0xA,EfiMemoryFormFactorRowOfChips = 0xB,EfiMemoryFormFactorRimm = 0xC,EfiMemoryFormFactorSodimm = 0xD,EfiMemoryFormFactorSrimm = 0xE,EfiMemoryFormFactorFbDimm = 0xF,};
enum _EFI_MEMORY_REGION_TYPE {EfiMemoryRegionMemory = 0x1,EfiMemoryRegionReserved = 0x2,EfiMemoryRegionAcpi = 0x3,EfiMemoryRegionNvs = 0x4,};
typedef void *BIS_APPLICATION_HANDLE;
typedef struct _646FD6B23FE47C50C54B12B8DEC47879 BOOT_PERFORMANCE_TABLE;
typedef struct _E480AB27614BD4F78D3E71B99782E2F1 CONTROLLER_DEVICE_PATH;
typedef struct _53F32C1F601BD496772E316EB8388A6A DEVICE_PRODUCER_FLOPPY;
typedef struct _B4376B173897DA777F735A92BA61857C DEVICE_PRODUCER_SERIAL;
typedef struct _3B3E1E99674685BB73C22F9320B2CB91 DNS6_ADDR_TO_HOST_DATA;
typedef struct _C7165306B581CB7DF3063D1DF3E6E08B DNS6_HOST_TO_ADDR_DATA;
typedef struct _244D31417EE53E4184DFD3241B59D73A DUET_CONSOLEOUT_CONFIG;
typedef struct _D5713C0CEA0D5BBA5F89D82C305834A2 EFI_80211_ELEMENT_SSID;
typedef struct _3DB03835212DDBC2D34A437E663C5170 EFI_ACPI_ASF_ALERTDATA;
typedef struct _DA2370F135774DAC578057B93BF5B56B EFI_ACPI_COMMON_HEADER;
typedef struct _D2D53D95DB781080B9E5DD0DD8CF7DC0 EFI_ATA_PASS_THRU_MODE;
typedef struct _7C171058388E98B16B2B538A7192DA38 EFI_BIS_SIGNATURE_INFO;
typedef struct _EFI_BLOCK_IO2_PROTOCOL EFI_BLOCK_IO2_PROTOCOL;
typedef struct _EFI_BOOT_LOGO_PROTOCOL EFI_BOOT_LOGO_PROTOCOL;
typedef struct _CECC0DD8305EA4411B43DAEA5210C037 EFI_CAPSULE_OEM_HEADER;
typedef struct _1643288C018D61D457BCDB1FB4A997E8 EFI_DATA_RECORD_HEADER;
typedef struct _EFI_DEBUGPORT_PROTOCOL EFI_DEBUGPORT_PROTOCOL;
typedef struct _EFI_DEVICE_IO_PROTOCOL EFI_DEVICE_IO_PROTOCOL;
typedef struct _F77F8648509DA27DD31EAF764A392E95 EFI_DHCP4_LISTEN_POINT;
typedef struct _EFI_DISK_INFO_PROTOCOL EFI_DISK_INFO_PROTOCOL;
typedef struct _EFI_FTP4_COMMAND_TOKEN EFI_FTP4_COMMAND_TOKEN;
typedef struct _1AFA0B1BEAF8357FC0FB7159EE6E5404 EFI_FV_BLOCK_MAP_ENTRY;
typedef struct _4ECC48ED7FCAB3168E2382E1C8F9C460 EFI_FV_WRITE_FILE_DATA;
typedef struct _0F200C5991ECE5F6E83129578DBE64CB EFI_FX_SAVE_STATE_IA32;
typedef struct _EFI_HII_ANIMATION_CELL EFI_HII_ANIMATION_CELL;
typedef struct _EFI_HII_IIBT_END_BLOCK EFI_HII_IIBT_END_BLOCK;
typedef struct _EFI_HII_IMAGE_PROTOCOL EFI_HII_IMAGE_PROTOCOL;
typedef struct _FC37A93F9A7B7F8791686F00B8D94AEE EFI_HII_PACKAGE_HEADER;
typedef struct _EFI_HII_SIBT_END_BLOCK EFI_HII_SIBT_END_BLOCK;
typedef struct _FF6A55059D2F8FBB228E6A52654D0074 EFI_HOB_CAPSULE_VOLUME;
typedef struct _590D3F6E7FD59F722C24866FA7BFCF42 EFI_HOB_GENERIC_HEADER;
typedef struct _8DC7B7F78C0EB41AADB7ECA240B8C31E EFI_HTTP_RESPONSE_DATA;
typedef struct _965AB3A0AE89D9B64AE14AD7380CB79D EFI_I2C_REQUEST_PACKET;
typedef struct _EFI_IFR_EQ_ID_VAL_LIST EFI_IFR_EQ_ID_VAL_LIST;
typedef struct _EFI_IFR_GUID_OPTIONKEY EFI_IFR_GUID_OPTIONKEY;
typedef struct _EFI_IFR_GUID_VAREQNAME EFI_IFR_GUID_VAREQNAME;
typedef struct _C2BC6D47259ACF8922A166D07A7BE9F4 EFI_IMAGE_NT_HEADERS32;
typedef struct _EF5AE40B59BDB6BB69A24E12D6228D0E EFI_IMAGE_NT_HEADERS64;
typedef struct _3B0303FF1442A3EC45A1160316AE81ED EFI_IP6_NEIGHBOR_CACHE;
typedef struct _EFI_IPSEC_AH_ALGO_INFO EFI_IPSEC_AH_ALGO_INFO;
typedef struct _EFI_IPSEC_SPD_SELECTOR EFI_IPSEC_SPD_SELECTOR;
typedef struct _DFAF79501E995C8EA71EDDBBC5BE2E03 EFI_ISA_ACPI_DEVICE_ID;
typedef struct _DD3B57431EA49AA8EC86666E212D3A9A EFI_KMS_KEY_DESCRIPTOR;
typedef struct _EFI_LOAD_FILE_PROTOCOL EFI_LOAD_FILE_PROTOCOL;
typedef struct _54FFFAD7527D2E463FD337218A73F4FA EFI_MEMORY_TYPE_DETAIL;
typedef struct _E91DA923D8834479B94963488B4EB67A EFI_MTFTP4_ACK8_HEADER;
typedef struct _04F9B4AC61B2378777D341FA7F453C9C EFI_MTFTP4_CONFIG_DATA;
typedef struct _5B0932C95ACA944EA8760E43FEB00E37 EFI_MTFTP4_DATA_HEADER;
typedef struct _02DFB6BBE8A0FE409E702C0F2DE27832 EFI_MTFTP4_OACK_HEADER;
typedef struct _E91DA923D8834479B94963488B4EB67A EFI_MTFTP6_ACK8_HEADER;
typedef struct _A96752F0C1B95D0D0656C5DFCE80B4E5 EFI_MTFTP6_CONFIG_DATA;
typedef struct _5B0932C95ACA944EA8760E43FEB00E37 EFI_MTFTP6_DATA_HEADER;
typedef struct _02DFB6BBE8A0FE409E702C0F2DE27832 EFI_MTFTP6_OACK_HEADER;
typedef struct _775CA34CBECCC7D29F5B2C6C3B79D91F EFI_NETWORK_STATISTICS;
typedef struct _F005CA091951A17647839EB20452A1E0 EFI_PCI_CAPABILITY_AGP;
typedef struct _5BB075E3BD7EB0C29B04C8800F5BFD3D EFI_PCI_CAPABILITY_HDR;
typedef struct _E9EB00794BBE78384F3D16290A439BFD EFI_PCI_CAPABILITY_PMI;
typedef struct _A9B4302653E267E10A0BD8C91527623C EFI_PCI_CAPABILITY_VPD;
typedef struct _8CAD4F05D53D91E8093599D1B9B6A169 EFI_PEI_BLOCK_IO_MEDIA;
typedef struct _EFI_PEI_DECOMPRESS_PPI EFI_PEI_DECOMPRESS_PPI;
typedef struct _EFI_PEI_I2C_MASTER_PPI EFI_PEI_I2C_MASTER_PPI;
typedef struct _C150E43396C1E9BDF4FCD2C189EFF464 EFI_PEI_PPI_DESCRIPTOR;
typedef struct _EFI_PEI_S3_RESUME2_PPI EFI_PEI_S3_RESUME2_PPI;
typedef struct _BC6D55FECCACCAF7037456793F823877 EFI_PMI_SYSTEM_CONTEXT;
typedef struct _DE10C1C470E2CD0C71AFA76792F18187 EFI_PXE_BASE_CODE_MODE;
typedef struct _EFI_SERIAL_IO_PROTOCOL EFI_SERIAL_IO_PROTOCOL;
typedef struct _FC8057BD7989C9ED1DAB2B2369E11209 EFI_SHELL_ENVIRONMENT2;
typedef struct _98FAB1ED5506717A9B4B3C99FE346AF3 EFI_SMI_CPU_SAVE_STATE;
typedef struct _EFI_SMM_BASE2_PROTOCOL EFI_SMM_BASE2_PROTOCOL;
typedef union _3E67EB895903F84199FB26C795967668 EFI_SMM_CPU_SAVE_STATE;
typedef union _0E23B8B4FFDB8955E98672FF836F7A4E EFI_STATUS_CODE_STRING;
typedef struct _1409ABB5DE15AF90B779F0C11012079A EFI_SYSTEM_CONTEXT_ARM;
typedef struct _4534D1011D9CEF71C49F848901F967E1 EFI_SYSTEM_CONTEXT_EBC;
typedef struct _C6DD94A0C2AC913EBAE6968FD609D5F8 EFI_SYSTEM_CONTEXT_IPF;
typedef struct _756E1EF12435665E0530B1F10B1D4C35 EFI_SYSTEM_CONTEXT_X64;
typedef struct _54FE3DB773D7B15849DFA3D4C6C5E58D EFI_TCP4_FRAGMENT_DATA;
typedef struct _C8DF119FFDD9AC5D77D8855D13C96652 EFI_TCP4_SERVICE_POINT;
typedef struct _63629BEE2701D5CF34B4C61A8CD3565F EFI_TCP4_TRANSMIT_DATA;
typedef struct _A5AD036611CA966910B0041741535C40 EFI_TCP4_VARIABLE_DATA;
typedef struct _54FE3DB773D7B15849DFA3D4C6C5E58D EFI_TCP6_FRAGMENT_DATA;
typedef struct _45E74D44F4DD61EBC22288307E34230E EFI_TCP6_SERVICE_POINT;
typedef struct _2BFE4317F769CC510077190B28AFB68C EFI_TCP6_TRANSMIT_DATA;
typedef struct _FA6AAB53270C8CFB12CB95253772A103 EFI_TCP6_VARIABLE_DATA;
typedef struct _EFI_TIMESTAMP_PROTOCOL EFI_TIMESTAMP_PROTOCOL;
typedef struct _54FE3DB773D7B15849DFA3D4C6C5E58D EFI_UDP4_FRAGMENT_DATA;
typedef struct _C8DF119FFDD9AC5D77D8855D13C96652 EFI_UDP4_SERVICE_POINT;
typedef struct _7DFCE0E55CE3252F1E6260C8AF00805B EFI_UDP4_TRANSMIT_DATA;
typedef struct _A4293C7BE0E6B327D04BD7AF0FAC81EB EFI_UDP4_VARIABLE_DATA;
typedef struct _54FE3DB773D7B15849DFA3D4C6C5E58D EFI_UDP6_FRAGMENT_DATA;
typedef struct _45E74D44F4DD61EBC22288307E34230E EFI_UDP6_SERVICE_POINT;
typedef struct _22C9BF1ED3B52C9A62C27D46097EFE95 EFI_UDP6_TRANSMIT_DATA;
typedef struct _FCAE42F8DAF516AC5995CDFD0E938215 EFI_UDP6_VARIABLE_DATA;
typedef struct hid_descriptor EFI_USB_HID_DESCRIPTOR;
typedef struct _4EE69E5191F738A0DEA5DAF890F47590 EFI_USB_INTERFACE_INFO;
typedef struct _CE905B68C1019FD575F1F529BC2B6AE0 EFI_VARIABLE_DATA_TREE;
typedef struct _E17FC06B3BE19206A8C8D0705BCA713B EFI_WIN_NT_IO_PROTOCOL;
typedef struct _16724BBD91DBF8D47E877525B5D02DAA FRAMEWORK_EFI_IFR_DATE;
typedef struct _8D3AED6F7FADE18A8F2D2D3C45490101 FRAMEWORK_EFI_IFR_FORM;
typedef struct _1035A196500098FC0D27A8D2AAA76E56 FRAMEWORK_EFI_IFR_TEXT;
typedef struct _3AE93AF66E5CDFC959FD4700EA8A3AFF FRAMEWORK_EFI_IFR_TIME;
typedef struct _F9B7C3048F22FF3511E113F096D2E9D5 INFINIBAND_DEVICE_PATH;
typedef void (*INIT_HANDLE_ENUMERATOR)(void);
typedef struct _B21E8E356780C04C244AAF731E4D8DB8 ITANIUM_HANDOFF_STATUS;
typedef struct _BCF08B3A538C4B594E5DE7E4F4218E52 LEGACY_DEV_ORDER_ENTRY;
typedef union _189FD79781FBFBAF9A08606330F98EF8 LOCAL_APIC_MSI_ADDRESS;
typedef struct THREAD_START_ROUTINE *LPTHREAD_START_ROUTINE;
enum MACRO_EFI_BOOT_MANAGER {EFI_BOOT_MANAGER_SHIFT_PRESSED = 0x1,EFI_BOOT_MANAGER_CONTROL_PRESSED = 0x2,EFI_BOOT_MANAGER_ALT_PRESSED = 0x4,EFI_BOOT_MANAGER_LOGO_PRESSED = 0x8,EFI_BOOT_MANAGER_MENU_KEY_PRESSED = 0x10,EFI_BOOT_MANAGER_SYS_REQ_PRESSED = 0x20,EFI_AUTH_OPERATION_NONE = 0x0,EFI_AUTH_OPERATION_VERIFY_IMAGE = 0x1,EFI_AUTH_OPERATION_DEFER_IMAGE_LOAD = 0x2,EFI_AUTH_OPERATION_MEASURE_IMAGE = 0x4,EFI_AUTH_OPERATION_CONNECT_POLICY = 0x8,EFI_AUTH_OPERATION_AUTHENTICATION_STATE = 0x10,EFI_AUTH_OPERATION_IMAGE_REQUIRED = 0x80000000,};
enum MACRO_EFI_IMAGE_SIZEOF {EFI_IMAGE_SIZEOF_BASE_RELOCATION = 8,EFI_IMAGE_REL_BASED_ABSOLUTE = 0,EFI_IMAGE_REL_BASED_HIGH = 1,EFI_IMAGE_REL_BASED_LOW = 2,EFI_IMAGE_REL_BASED_HIGHLOW = 3,EFI_IMAGE_REL_BASED_HIGHADJ = 4,EFI_IMAGE_REL_BASED_MIPS_JMPADDR = 5,EFI_IMAGE_REL_BASED_ARM_MOV32A = 5,EFI_IMAGE_REL_BASED_ARM_MOV32T = 7,EFI_IMAGE_REL_BASED_IA64_IMM64 = 9,EFI_IMAGE_REL_BASED_MIPS_JMPADDR16 = 9,EFI_IMAGE_REL_BASED_DIR64 = 10,EFI_IMAGE_SIZEOF_LINENUMBER = 6,EFI_IMAGE_ARCHIVE_START_SIZE = 8,EFI_IMAGE_SIZEOF_ARCHIVE_MEMBER_HDR = 60,EFI_IMAGE_ORDINAL_FLAG = -2147483648,EFI_IMAGE_DEBUG_TYPE_CODEVIEW = 2,};
enum MACRO_EFI_PEI_RECOVERY {EFI_PEI_RECOVERY_BLOCK_IO2_PPI_REVISION = 0x10000,EFI_PEI_FIRMWARE_VOLUME_PPI_SIGNATURE = 0x50564650,EFI_PEI_FIRMWARE_VOLUME_PPI_REVISION = 0x10030,};
enum MACRO_FRAMEWORK_EFI_FV {FRAMEWORK_EFI_FV_UNRELIABLE_WRITE = 0x0,FRAMEWORK_EFI_FV_RELIABLE_WRITE = 0x1,FRAMEWORK_EFI_LBA_LIST_TERMINATOR = 0xFFFFFFFF,};
enum MACRO_HEADER_ALIGNMENT {HEADER_ALIGNMENT = 4,};
enum MACRO_SECURE_BOOT_MODE {CUSTOM_SECURE_BOOT_MODE = 1,STANDARD_SECURE_BOOT_MODE = 0,};
enum MACRO_TPM_PT_PERMANENT {TPM_PT_PERMANENT = 512,TPM_PT_STARTUP_CLEAR = 513,TPM_PT_HR_NV_INDEX = 514,TPM_PT_HR_LOADED = 515,TPM_PT_HR_LOADED_AVAIL = 516,TPM_PT_HR_ACTIVE = 517,TPM_PT_HR_ACTIVE_AVAIL = 518,TPM_PT_HR_TRANSIENT_AVAIL = 519,TPM_PT_HR_PERSISTENT = 520,TPM_PT_HR_PERSISTENT_AVAIL = 521,TPM_PT_NV_COUNTERS = 522,TPM_PT_NV_COUNTERS_AVAIL = 523,TPM_PT_ALGORITHM_SET = 524,TPM_PT_LOADED_CURVES = 525,TPM_PT_LOCKOUT_COUNTER = 526,TPM_PT_MAX_AUTH_FAIL = 527,TPM_PT_LOCKOUT_INTERVAL = 528,TPM_PT_LOCKOUT_RECOVERY = 529,TPM_PT_NV_WRITE_RECOVERY = 530,TPM_PT_AUDIT_COUNTER_0 = 531,TPM_PT_AUDIT_COUNTER_1 = 532,TPM_PT_PCR_FIRST = 0,TPM_PT_PCR_SAVE = 0,TPM_PT_PCR_EXTEND_L0 = 1,TPM_PT_PCR_RESET_L0 = 2,TPM_PT_PCR_EXTEND_L1 = 3,TPM_PT_PCR_RESET_L1 = 4,TPM_PT_PCR_EXTEND_L2 = 5,TPM_PT_PCR_RESET_L2 = 6,TPM_PT_PCR_EXTEND_L3 = 7,TPM_PT_PCR_RESET_L3 = 8,TPM_PT_PCR_EXTEND_L4 = 9,TPM_PT_PCR_RESET_L4 = 10,TPM_PT_PCR_NO_INCREMENT = 17,TPM_PT_PCR_DRTM_RESET = 18,TPM_PT_PCR_POLICY = 19,TPM_PT_PCR_AUTH = 20,TPM_PT_PCR_LAST = 20,TPM_PS_MAIN = 0,TPM_PS_PC = 1,TPM_PS_PDA = 2,TPM_PS_CELL_PHONE = 3,TPM_PS_SERVER = 4,TPM_PS_PERIPHERAL = 5,TPM_PS_TSS = 6,TPM_PS_STORAGE = 7,TPM_PS_AUTHENTICATION = 8,TPM_PS_EMBEDDED = 9,TPM_PS_HARDCOPY = 10,TPM_PS_INFRASTRUCTURE = 11,TPM_PS_VIRTUALIZATION = 12,TPM_PS_TNC = 13,TPM_PS_MULTI_TENANT = 14,TPM_PS_TC = 15,TPM_HT_PCR = 0,TPM_HT_NV_INDEX = 1,TPM_HT_HMAC_SESSION = 2,TPM_HT_LOADED_SESSION = 2,TPM_HT_POLICY_SESSION = 3,TPM_HT_ACTIVE_SESSION = 3,TPM_HT_PERMANENT = 64,TPM_HT_TRANSIENT = 128,TPM_HT_PERSISTENT = 129,TPM_RH_FIRST = 1073741824,TPM_RH_SRK = 1073741824,TPM_RH_OWNER = 1073741825,TPM_RH_REVOKE = 1073741826,TPM_RH_TRANSPORT = 1073741827,TPM_RH_OPERATOR = 1073741828,TPM_RH_ADMIN = 1073741829,TPM_RH_EK = 1073741830,TPM_RH_NULL = 1073741831,TPM_RH_UNASSIGNED = 1073741832,TPM_RS_PW = 1073741833,TPM_RH_LOCKOUT = 1073741834,TPM_RH_ENDORSEMENT = 1073741835,TPM_RH_PLATFORM = 1073741836,TPM_RH_LAST = 1073741836,};
typedef struct _F19B1F4A90E646AB36AC0230C8E90425 MEMORY_PROFILE_CONTEXT;
typedef struct _MTRR_VARIABLE_SETTINGS_ MTRR_VARIABLE_SETTINGS;
typedef struct _063BD0316AECCE23EF45CE76FCEFE8DB PAL_CACHE_INFO_RETURN1;
typedef struct _F22FC22B22192DCDDA0EB3D8A87CEAF0 PAL_CACHE_INFO_RETURN2;
typedef struct _95123179A341BAB69E7F321858B4106F PAL_MC_ERROR_TYPE_INFO;
typedef struct _D0B221078A4E0F678A07442A2174AD85 PAL_PCOC_N_CACHE_INFO1;
typedef struct _5AC66747EBEC2DADFF908009E084015C PAL_PCOC_N_CACHE_INFO2;
typedef struct _DADA544C45BF73A6993B25D1748FA1C9 PAL_PROCESSOR_FEATURES;
typedef struct _93A65022EF1C4BD008724E599E68410C PAL_PSTATE_INFO_BUFFER;
typedef struct _1AA13847B05D77E669FEE563F5BAB3FD PAL_VP_ENV_INFO_RETURN;
typedef struct _0EB51215E6D24F7F450276E06012FB33 PCI_3_0_DATA_STRUCTURE;
typedef struct _PEI_ATA_CONTROLLER_PPI PEI_ATA_CONTROLLER_PPI;
typedef void *(*PEI_NT_THUNK_INTERFACE)(void);
typedef struct _PEI_USB_CONTROLLER_PPI PEI_USB_CONTROLLER_PPI;
typedef union u_pxe_db_get_config_info PXE_DB_GET_CONFIG_INFO;
typedef struct s_pxe_db_mcast_ip_to_mac PXE_DB_MCAST_IP_TO_MAC;
typedef struct s_pxe_db_receive_filters PXE_DB_RECEIVE_FILTERS;
typedef struct s_pxe_dpb_station_address PXE_DB_STATION_ADDRESS;
typedef struct _EFI_SIMPLE_TEXT_INPUT_PROTOCOL SIMPLE_INPUT_INTERFACE;
typedef struct _CBC0D6F508EBE68BBEF0FA61E3D4F04C TPM2B_ENCRYPTED_SECRET;
typedef struct _D833B7BAA6157FDBBBFE5F4D0F7754FF TPM2B_SENSITIVE_CREATE;
typedef struct _FEC1B3E7B4BD6F8FB5125B8FDA09F2D0 TPMS_TAGGED_PCR_SELECT;
typedef struct tdTPM_DELEGATE_SENSITIVE TPM_DELEGATE_SENSITIVE;
typedef struct tdTPM_DELEGATE_TABLE_ROW TPM_DELEGATE_TABLE_ROW;
typedef struct tdTPM_FAMILY_TABLE_ENTRY TPM_FAMILY_TABLE_ENTRY;
typedef struct tdTPM_SYM_CA_ATTESTATION TPM_SYM_CA_ATTESTATION;
typedef struct tdTPM_TRANSPORT_INTERNAL TPM_TRANSPORT_INTERNAL;
typedef struct _16C1C0501231D7862009016A4B74D4C3 VARIABLE_POINTER_TRACK;
enum _EFI_MEMORY_ARRAY_TYPE {EfiMemoryTypeOther = 0x1,EfiMemoryTypeUnknown = 0x2,EfiMemoryTypeDram = 0x3,EfiMemoryTypeEdram = 0x4,EfiMemoryTypeVram = 0x5,EfiMemoryTypeSram = 0x6,EfiMemoryTypeRam = 0x7,EfiMemoryTypeRom = 0x8,EfiMemoryTypeFlash = 0x9,EfiMemoryTypeEeprom = 0xA,EfiMemoryTypeFeprom = 0xB,EfiMemoryTypeEprom = 0xC,EfiMemoryTypeCdram = 0xD,EfiMemoryType3Dram = 0xE,EfiMemoryTypeSdram = 0xF,EfiMemoryTypeSgram = 0x10,EfiMemoryTypeRdram = 0x11,EfiMemoryTypeDdr = 0x12,EfiMemoryTypeDdr2 = 0x13,EfiMemoryTypeDdr2FbDimm = 0x14,};
enum _EFI_USBFN_POLICY_TYPE {EfiUsbPolicyUndefined = 0x0,EfiUsbPolicyMaxTransactionSize = 0x1,EfiUsbPolicyZeroLengthTerminationSupport = 0x2,EfiUsbPolicyZeroLengthTermination = 0x3,};
enum _EFI_USB_ENDPOINT_TYPE {UsbEndpointControl = 0x0,UsbEndpointBulk = 0x2,};
typedef struct _9D440D8C9FFBECCD11BB4C228E0BDB53 BLUETOOTH_DEVICE_PATH;
typedef struct _3E3873B2DA85758D86854F8EC24C2D5B CHAP_RADIUS_AUTH_NODE;
typedef struct _999FCC054EBD657D3F6DB4B2D8714F97 DEBUGPORT_DEVICE_PATH;
typedef struct _3B3E1E99674685BB73C22F9320B2CB91 DNS_ADDR_TO_HOST_DATA;
typedef struct _8CB77716A500E5DCC326D5A9DF18EDF2 DNS_HOST_TO_ADDR_DATA;
typedef struct _8FF0EFCD47E0176D7B8B9224D8C06D64 EFI_80211_ELEMENT_REQ;
typedef struct _F1FEC15FBAF78A2C2F9CCDCA8E649452 EFI_80211_ELEMENT_RSN;
typedef struct _054D116A6266D7B79D025BB0E63173BB EFI_80211_MAC_ADDRESS;
typedef struct _8E9001CF27BB191F78BEDCE566CDA729 EFI_80211_SCAN_RESULT;
typedef struct _EFI_ACPI_SDT_PROTOCOL EFI_ACPI_SDT_PROTOCOL;
typedef struct _EFI_ATA_COMMAND_BLOCK EFI_ATA_COMMAND_BLOCK;
typedef struct _13D6FB99381342E03820A8D6A67E6627 EFI_ATA_EXTENDED_MODE;
typedef struct _EFI_BDS_ARCH_PROTOCOL EFI_BDS_ARCH_PROTOCOL;
typedef struct _EFI_BLOCK_IO_PROTOCOL EFI_BLOCK_IO_PROTOCOL;
typedef struct _99527345AC44A5EB483D46ECFDF59D49 EFI_CACHE_DATA_RECORD;
typedef struct _EFI_CPU_ARCH_PROTOCOL EFI_CPU_ARCH_PROTOCOL;
typedef struct _EFI_DATA_HUB_PROTOCOL EFI_DATA_HUB_PROTOCOL;
typedef struct _F99B70E853BBE276945C20D75C9C4AB5 EFI_DEBUG_ASSERT_DATA;
typedef struct _04211BAC36A0C3642E48C93F963D55B3 EFI_DHCP4_CONFIG_DATA;
typedef struct _D449158CC1DA6C69E7A99D44FCECEFBC EFI_DHCP6_CONFIG_DATA;
typedef struct _EFI_DISK_IO2_PROTOCOL EFI_DISK_IO2_PROTOCOL;
typedef struct _164C5566F9B29D1B4EF89603CE89E043 EFI_DRIVER_OS_HANDOFF;
typedef struct _EFI_FONT_DISPLAY_INFO EFI_FONT_DISPLAY_INFO;
typedef struct _383942B824C6F4B8025A7565ACA7F358 EFI_FX_SAVE_STATE_X64;
typedef struct _EFI_HII_FONT_PROTOCOL EFI_HII_FONT_PROTOCOL;
typedef struct _59867F420E95459E463A21D495341429 EFI_HII_KEYBOARD_PACK;
typedef struct _74FDC183890CD175403FB492894CE117 EFI_HII_VARIABLE_PACK;
typedef struct _0533523530C6224D8C91920E25F98E5C EFI_HTTP_REQUEST_DATA;
typedef struct _EFI_I2C_HOST_PROTOCOL EFI_I2C_HOST_PROTOCOL;
typedef union _C5B37D2DFCDA6A31CFFEA8F4CFB27712 EFI_IA32_REGISTER_SET;
typedef struct _EFI_IFR_GREATER_EQUAL EFI_IFR_GREATER_EQUAL;
typedef struct _EFI_IFR_GUID_SUBCLASS EFI_IFR_GUID_SUBCLASS;
typedef struct _EFI_IFR_ONE_OF_OPTION EFI_IFR_ONE_OF_OPTION;
typedef struct _EFI_IFR_QUESTION_REF1 EFI_IFR_QUESTION_REF1;
typedef struct _EFI_IFR_QUESTION_REF2 EFI_IFR_QUESTION_REF2;
typedef struct _EFI_IFR_QUESTION_REF3 EFI_IFR_QUESTION_REF3;
typedef struct _C501FDF64678E92E96708EC263D49D51 EFI_IFR_SAVE_DEFAULTS;
typedef struct _E77285776565631763AC36BC8608243B EFI_IMAGE_FILE_HEADER;
typedef struct _54FE3DB773D7B15849DFA3D4C6C5E58D EFI_IP4_FRAGMENT_DATA;
typedef struct _964E5440A68626C4C3BC0AD13C0551E5 EFI_IP4_IPCONFIG_DATA;
typedef struct _5B6C241DC92A55924D50051A82B97D9B EFI_IP4_OVERRIDE_DATA;
typedef struct _4BDFC0F942E2A6A794676F82FB611E2A EFI_IP4_TRANSMIT_DATA;
typedef struct _B2DD6A68E2116D4FCB85B340C66E6590 EFI_IP4_VARIABLE_DATA;
typedef struct _EFI_IP6_FRAGMENT_DATA EFI_IP6_FRAGMENT_DATA;
typedef struct _EFI_IP6_OVERRIDE_DATA EFI_IP6_OVERRIDE_DATA;
typedef struct _EFI_IP6_TRANSMIT_DATA EFI_IP6_TRANSMIT_DATA;
typedef struct _B3D9824BB10454FC3FBA64ED1BFA8007 EFI_IP6_VARIABLE_DATA;
typedef struct _EFI_IPSEC_SA_LIFETIME EFI_IPSEC_SA_LIFETIME;
typedef struct _EFI_ISA_ACPI_PROTOCOL EFI_ISA_ACPI_PROTOCOL;
typedef struct _E3CE801A5C809D62DA553F3A23650BF2 EFI_ISA_ACPI_RESOURCE;
typedef struct _1DB444471397DD3F559BE290F14258FA EFI_KMS_DYNAMIC_FIELD;
typedef struct _E448784388D86CF0E27BA2E20A1CB194 EFI_KMS_KEY_ATTRIBUTE;
typedef struct _2145929F04F6510A853C703BEA654B22 EFI_LEGACY_PIRQ_ENTRY;
typedef struct _878CDC393A4F90F5F70FBF4F5DCDCF2F EFI_MEMORY_DESCRIPTOR;
typedef struct _A1AA68FFA304BCE5A080072956243EF0 EFI_MEMORY_SPEED_TYPE;
typedef struct _17B0DA9AD07A993BB3BF88A240BF391B EFI_MISC_ELEMENT_TYPE;
typedef struct _0C90ECF20B74BF0C999246AF56E6C728 EFI_MTFTP4_ACK_HEADER;
typedef struct _4C0456641FFD7C7A72CAE04CFEF7744F EFI_MTFTP4_REQ_HEADER;
typedef struct _0C90ECF20B74BF0C999246AF56E6C728 EFI_MTFTP6_ACK_HEADER;
typedef struct _4C0456641FFD7C7A72CAE04CFEF7744F EFI_MTFTP6_REQ_HEADER;
typedef struct _EFI_PEI_LOAD_FILE_PPI EFI_PEI_LOAD_FILE_PPI;
typedef struct _EFI_PEI_SECURITY2_PPI EFI_PEI_SECURITY2_PPI;
typedef struct _2FA6CE443FF86F17328922C5A9168445 EFI_PHYSICAL_PRESENCE;
typedef struct _3B3A9EA8DC22C7FF9667FA082E39E518 EFI_PROCESSOR_ID_DATA;
typedef struct _8C94DE8BD49887808F21B5CF1A10A039 EFI_SCREEN_DESCRIPTOR;
typedef struct _DEF74FC8B9AC1B107FB68B49FF3CF276 EFI_SCSI_INQUIRY_DATA;
typedef struct _EFI_SMBUS_HC_PROTOCOL EFI_SMBUS_HC_PROTOCOL;
typedef struct _EFI_SMM_BASE_PROTOCOL EFI_SMM_BASE_PROTOCOL;
typedef struct _EFI_SMM_ENTRY_CONTEXT EFI_SMM_ENTRY_CONTEXT;
typedef struct _EFI_SMM_SYSTEM_TABLE2 EFI_SMM_SYSTEM_TABLE2;
typedef struct _14D190ACC072CEBB80B7F04EB11E8F66 EFI_TCG2_EVENT_HEADER;
typedef struct _CE5D7A9E94A502CBDA115DEF631DE7BF EFI_TCP4_ACCESS_POINT;
typedef struct _99E429C93EE7454752F3C983EFB2AA50 EFI_TCP4_LISTEN_TOKEN;
typedef struct _368C5796E3D91D2922D841C2984290BA EFI_TCP4_RECEIVE_DATA;
typedef struct _E75F0BE944C0FCB6E99CFED0DE3DC542 EFI_TCP6_ACCESS_POINT;
typedef struct _2D795785E76C024412BECB40ED2E4527 EFI_TCP6_LISTEN_TOKEN;
typedef struct _83E13903BC0990E40237D8C301812CEA EFI_TCP6_RECEIVE_DATA;
typedef struct _43C142D6E8CCA77AD8D3B7D743C0B321 EFI_TIME_CAPABILITIES;
typedef struct _EE1E755472070719C001852BDBB40567 EFI_UDP4_RECEIVE_DATA;
typedef struct _F8990009920594911E2816CA7540AFAC EFI_UDP4_SESSION_DATA;
typedef struct _844F3F65E7253621E8FFDF0B27EA43FD EFI_UDP6_RECEIVE_DATA;
typedef struct _993FA8BA3EF73A4D826248B820311C76 EFI_UDP6_SESSION_DATA;
typedef struct _EFI_UGA_DRAW_PROTOCOL EFI_UGA_DRAW_PROTOCOL;
typedef struct _EFI_USBFN_IO_PROTOCOL EFI_USBFN_IO_PROTOCOL;
typedef struct _BE973F4FDB064641654791385863872C FRAMEWORK_EFI_IFR_AND;
typedef struct _BE973F4FDB064641654791385863872C FRAMEWORK_EFI_IFR_NOT;
typedef struct _C501FDF64678E92E96708EC263D49D51 FRAMEWORK_EFI_IFR_REF;
typedef struct _GET_PCD_INFO_PROTOCOL GET_PCD_INFO_PROTOCOL;
typedef struct _99C4E7CD866E4E0AE2D4B042B167394D HARDDRIVE_DEVICE_PATH;
typedef struct SECURITY_ATTRIBUTES *LPSECURITY_ATTRIBUTES;
enum MACRO_DXE_PERFORMANCE {DXE_PERFORMANCE_STRING_SIZE = 32,DXE_PERFORMANCE_STRING_LENGTH = 31,};
enum MACRO_EFI_ACPI_MEMORY {EFI_ACPI_MEMORY_TYPE_SPECIFIC_ATTRIBUTES_UC = 0x1,EFI_ACPI_MEMORY_TYPE_SPECIFIC_ATTRIBUTES_WC = 0x2,EFI_ACPI_MEMORY_TYPE_SPECIFIC_ATTRIBUTES_WT = 0x4,EFI_ACPI_MEMORY_TYPE_SPECIFIC_ATTRIBUTES_WB = 0x8,EFI_ACPI_MEMORY_TYPE_SPECIFIC_ATTRIBUTES_UCE = 0x10,EFI_ACPI_MEMORY_TYPE_SPECIFIC_ATTRIBUTES_NV = 0x8000,EFI_ACPI_3_0_SYSTEM_MEMORY = 0x0,EFI_ACPI_3_0_SYSTEM_IO = 0x1,EFI_ACPI_3_0_PCI_CONFIGURATION_SPACE = 0x2,EFI_ACPI_3_0_EMBEDDED_CONTROLLER = 0x3,EFI_ACPI_3_0_SMBUS = 0x4,EFI_ACPI_3_0_FUNCTIONAL_FIXED_HARDWARE = 0x7F,EFI_ACPI_3_0_UNDEFINED = 0x0,EFI_ACPI_3_0_BYTE = 0x1,EFI_ACPI_3_0_WORD = 0x2,EFI_ACPI_3_0_DWORD = 0x3,EFI_ACPI_3_0_QWORD = 0x4,EFI_ACPI_3_0_ROOT_SYSTEM_DESCRIPTION_POINTER_REVISION = 0x2,EFI_ACPI_3_0_ROOT_SYSTEM_DESCRIPTION_TABLE_REVISION = 0x1,EFI_ACPI_3_0_EXTENDED_SYSTEM_DESCRIPTION_TABLE_REVISION = 0x1,EFI_ACPI_3_0_FIXED_ACPI_DESCRIPTION_TABLE_REVISION = 0x4,EFI_ACPI_3_0_PM_PROFILE_UNSPECIFIED = 0x0,EFI_ACPI_3_0_PM_PROFILE_DESKTOP = 0x1,EFI_ACPI_3_0_PM_PROFILE_MOBILE = 0x2,EFI_ACPI_3_0_PM_PROFILE_WORKSTATION = 0x3,EFI_ACPI_3_0_PM_PROFILE_ENTERPRISE_SERVER = 0x4,EFI_ACPI_3_0_PM_PROFILE_SOHO_SERVER = 0x5,EFI_ACPI_3_0_PM_PROFILE_APPLIANCE_PC = 0x6,EFI_ACPI_3_0_PM_PROFILE_PERFORMANCE_SERVER = 0x7,EFI_ACPI_3_0_LEGACY_DEVICES = 0x1,EFI_ACPI_3_0_8042 = 0x2,EFI_ACPI_3_0_VGA_NOT_PRESENT = 0x4,EFI_ACPI_3_0_MSI_NOT_SUPPORTED = 0x8,EFI_ACPI_3_0_PCIE_ASPM_CONTROLS = 0x10,EFI_ACPI_3_0_WBINVD = 0x1,EFI_ACPI_3_0_WBINVD_FLUSH = 0x2,EFI_ACPI_3_0_PROC_C1 = 0x4,EFI_ACPI_3_0_P_LVL2_UP = 0x8,EFI_ACPI_3_0_PWR_BUTTON = 0x10,EFI_ACPI_3_0_SLP_BUTTON = 0x20,EFI_ACPI_3_0_FIX_RTC = 0x40,EFI_ACPI_3_0_RTC_S4 = 0x80,EFI_ACPI_3_0_TMR_VAL_EXT = 0x100,EFI_ACPI_3_0_DCK_CAP = 0x200,EFI_ACPI_3_0_RESET_REG_SUP = 0x400,EFI_ACPI_3_0_SEALED_CASE = 0x800,EFI_ACPI_3_0_HEADLESS = 0x1000,EFI_ACPI_3_0_CPU_SW_SLP = 0x2000,EFI_ACPI_3_0_PCI_EXP_WAK = 0x4000,EFI_ACPI_3_0_USE_PLATFORM_CLOCK = 0x8000,EFI_ACPI_3_0_S4_RTC_STS_VALID = 0x10000,EFI_ACPI_3_0_REMOTE_POWER_ON_CAPABLE = 0x20000,EFI_ACPI_3_0_FORCE_APIC_CLUSTER_MODEL = 0x40000,EFI_ACPI_3_0_FORCE_APIC_PHYSICAL_DESTINATION_MODE = 0x80000,EFI_ACPI_3_0_FIRMWARE_ACPI_CONTROL_STRUCTURE_VERSION = 0x1,EFI_ACPI_3_0_S4BIOS_F = 0x1,EFI_ACPI_3_0_DIFFERENTIATED_SYSTEM_DESCRIPTION_TABLE_REVISION = 0x2,EFI_ACPI_3_0_SECONDARY_SYSTEM_DESCRIPTION_TABLE_REVISION = 0x2,EFI_ACPI_3_0_MULTIPLE_APIC_DESCRIPTION_TABLE_REVISION = 0x2,EFI_ACPI_3_0_PCAT_COMPAT = 0x1,EFI_ACPI_3_0_PROCESSOR_LOCAL_APIC = 0x0,EFI_ACPI_3_0_IO_APIC = 0x1,EFI_ACPI_3_0_INTERRUPT_SOURCE_OVERRIDE = 0x2,EFI_ACPI_3_0_NON_MASKABLE_INTERRUPT_SOURCE = 0x3,EFI_ACPI_3_0_LOCAL_APIC_NMI = 0x4,EFI_ACPI_3_0_LOCAL_APIC_ADDRESS_OVERRIDE = 0x5,EFI_ACPI_3_0_IO_SAPIC = 0x6,EFI_ACPI_3_0_LOCAL_SAPIC = 0x7,EFI_ACPI_3_0_PLATFORM_INTERRUPT_SOURCES = 0x8,EFI_ACPI_3_0_LOCAL_APIC_ENABLED = 0x1,EFI_ACPI_3_0_POLARITY = 0x3,EFI_ACPI_3_0_TRIGGER_MODE = 0xC,EFI_ACPI_3_0_CPEI_PROCESSOR_OVERRIDE = 0x1,EFI_ACPI_3_0_SMART_BATTERY_DESCRIPTION_TABLE_REVISION = 0x1,EFI_ACPI_3_0_EMBEDDED_CONTROLLER_BOOT_RESOURCES_TABLE_REVISION = 0x1,EFI_ACPI_3_0_SYSTEM_RESOURCE_AFFINITY_TABLE_REVISION = 0x2,EFI_ACPI_3_0_PROCESSOR_LOCAL_APIC_SAPIC_AFFINITY = 0x0,EFI_ACPI_3_0_MEMORY_AFFINITY = 0x1,EFI_ACPI_3_0_PROCESSOR_LOCAL_APIC_SAPIC_ENABLED = 0x1,EFI_ACPI_3_0_MEMORY_ENABLED = 0x1,EFI_ACPI_3_0_MEMORY_HOT_PLUGGABLE = 0x2,EFI_ACPI_3_0_MEMORY_NONVOLATILE = 0x4,EFI_ACPI_3_0_SYSTEM_LOCALITY_DISTANCE_INFORMATION_TABLE_REVISION = 0x1,EFI_ACPI_3_0_ROOT_SYSTEM_DESCRIPTION_POINTER_SIGNATURE = 0x2052545020445352,EFI_ACPI_3_0_MULTIPLE_APIC_DESCRIPTION_TABLE_SIGNATURE = 0x43495041,EFI_ACPI_3_0_DIFFERENTIATED_SYSTEM_DESCRIPTION_TABLE_SIGNATURE = 0x54445344,EFI_ACPI_3_0_EMBEDDED_CONTROLLER_BOOT_RESOURCES_TABLE_SIGNATURE = 0x54444345,EFI_ACPI_3_0_FIXED_ACPI_DESCRIPTION_TABLE_SIGNATURE = 0x50434146,EFI_ACPI_3_0_FIRMWARE_ACPI_CONTROL_STRUCTURE_SIGNATURE = 0x53434146,EFI_ACPI_3_0_PERSISTENT_SYSTEM_DESCRIPTION_TABLE_SIGNATURE = 0x54445350,EFI_ACPI_3_0_ROOT_SYSTEM_DESCRIPTION_TABLE_SIGNATURE = 0x54445352,EFI_ACPI_3_0_SMART_BATTERY_SPECIFICATION_TABLE_SIGNATURE = 0x54534253,EFI_ACPI_3_0_SYSTEM_LOCALITY_INFORMATION_TABLE_SIGNATURE = 0x54494C53,EFI_ACPI_3_0_SYSTEM_RESOURCE_AFFINITY_TABLE_SIGNATURE = 0x54415253,EFI_ACPI_3_0_SECONDARY_SYSTEM_DESCRIPTION_TABLE_SIGNATURE = 0x54445353,EFI_ACPI_3_0_EXTENDED_SYSTEM_DESCRIPTION_TABLE_SIGNATURE = 0x54445358,EFI_ACPI_3_0_SIMPLE_BOOT_FLAG_TABLE_SIGNATURE = 0x544F4F42,EFI_ACPI_3_0_CORRECTED_PLATFORM_ERROR_POLLING_TABLE_SIGNATURE = 0x50455043,EFI_ACPI_3_0_DEBUG_PORT_TABLE_SIGNATURE = 0x50474244,EFI_ACPI_3_0_EVENT_TIMER_DESCRIPTION_TABLE_SIGNATURE = 0x54445445,EFI_ACPI_3_0_HIGH_PRECISION_EVENT_TIMER_TABLE_SIGNATURE = 0x54455048,EFI_ACPI_3_0_PCI_EXPRESS_MEMORY_MAPPED_CONFIGURATION_SPACE_BASE_ADDRESS_DESCRIPTION_TABLE_SIGNATURE = 0x4746434D,EFI_ACPI_3_0_SERIAL_PORT_CONSOLE_REDIRECTION_TABLE_SIGNATURE = 0x52435053,EFI_ACPI_3_0_SERVER_PLATFORM_MANAGEMENT_INTERFACE_TABLE_SIGNATURE = 0x494D5053,EFI_ACPI_3_0_TRUSTED_COMPUTING_PLATFORM_ALLIANCE_CAPABILITIES_TABLE_SIGNATURE = 0x41504354,EFI_ACPI_3_0_WATCHDOG_RESOURCE_TABLE_SIGNATURE = 0x54524457,EFI_ACPI_3_0_WATCHDOG_ACTION_TABLE_SIGNATURE = 0x54414457,EFI_ACPI_3_0_WINDOWS_SPECIFIC_PROPERTIES_TABLE_SIGNATURE = 0x54505357,EFI_ACPI_3_0_ISCSI_BOOT_FIRMWARE_TABLE_SIGNATURE = 0x54464269,EFI_ACPI_4_0_SYSTEM_MEMORY = 0x0,EFI_ACPI_4_0_SYSTEM_IO = 0x1,EFI_ACPI_4_0_PCI_CONFIGURATION_SPACE = 0x2,EFI_ACPI_4_0_EMBEDDED_CONTROLLER = 0x3,EFI_ACPI_4_0_SMBUS = 0x4,EFI_ACPI_4_0_FUNCTIONAL_FIXED_HARDWARE = 0x7F,EFI_ACPI_4_0_UNDEFINED = 0x0,EFI_ACPI_4_0_BYTE = 0x1,EFI_ACPI_4_0_WORD = 0x2,EFI_ACPI_4_0_DWORD = 0x3,EFI_ACPI_4_0_QWORD = 0x4,EFI_ACPI_4_0_ROOT_SYSTEM_DESCRIPTION_POINTER_REVISION = 0x2,EFI_ACPI_4_0_ROOT_SYSTEM_DESCRIPTION_TABLE_REVISION = 0x1,EFI_ACPI_4_0_EXTENDED_SYSTEM_DESCRIPTION_TABLE_REVISION = 0x1,EFI_ACPI_4_0_FIXED_ACPI_DESCRIPTION_TABLE_REVISION = 0x4,EFI_ACPI_4_0_PM_PROFILE_UNSPECIFIED = 0x0,EFI_ACPI_4_0_PM_PROFILE_DESKTOP = 0x1,EFI_ACPI_4_0_PM_PROFILE_MOBILE = 0x2,EFI_ACPI_4_0_PM_PROFILE_WORKSTATION = 0x3,EFI_ACPI_4_0_PM_PROFILE_ENTERPRISE_SERVER = 0x4,EFI_ACPI_4_0_PM_PROFILE_SOHO_SERVER = 0x5,EFI_ACPI_4_0_PM_PROFILE_APPLIANCE_PC = 0x6,EFI_ACPI_4_0_PM_PROFILE_PERFORMANCE_SERVER = 0x7,EFI_ACPI_4_0_LEGACY_DEVICES = 0x1,EFI_ACPI_4_0_8042 = 0x2,EFI_ACPI_4_0_VGA_NOT_PRESENT = 0x4,EFI_ACPI_4_0_MSI_NOT_SUPPORTED = 0x8,EFI_ACPI_4_0_PCIE_ASPM_CONTROLS = 0x10,EFI_ACPI_4_0_WBINVD = 0x1,EFI_ACPI_4_0_WBINVD_FLUSH = 0x2,EFI_ACPI_4_0_PROC_C1 = 0x4,EFI_ACPI_4_0_P_LVL2_UP = 0x8,EFI_ACPI_4_0_PWR_BUTTON = 0x10,EFI_ACPI_4_0_SLP_BUTTON = 0x20,EFI_ACPI_4_0_FIX_RTC = 0x40,EFI_ACPI_4_0_RTC_S4 = 0x80,EFI_ACPI_4_0_TMR_VAL_EXT = 0x100,EFI_ACPI_4_0_DCK_CAP = 0x200,EFI_ACPI_4_0_RESET_REG_SUP = 0x400,EFI_ACPI_4_0_SEALED_CASE = 0x800,EFI_ACPI_4_0_HEADLESS = 0x1000,EFI_ACPI_4_0_CPU_SW_SLP = 0x2000,EFI_ACPI_4_0_PCI_EXP_WAK = 0x4000,EFI_ACPI_4_0_USE_PLATFORM_CLOCK = 0x8000,EFI_ACPI_4_0_S4_RTC_STS_VALID = 0x10000,EFI_ACPI_4_0_REMOTE_POWER_ON_CAPABLE = 0x20000,EFI_ACPI_4_0_FORCE_APIC_CLUSTER_MODEL = 0x40000,EFI_ACPI_4_0_FORCE_APIC_PHYSICAL_DESTINATION_MODE = 0x80000,EFI_ACPI_4_0_FIRMWARE_ACPI_CONTROL_STRUCTURE_VERSION = 0x2,EFI_ACPI_4_0_S4BIOS_F = 0x1,EFI_ACPI_4_0_64BIT_WAKE_SUPPORTED_F = 0x2,EFI_ACPI_4_0_OSPM_64BIT_WAKE__F = 0x1,EFI_ACPI_4_0_DIFFERENTIATED_SYSTEM_DESCRIPTION_TABLE_REVISION = 0x2,EFI_ACPI_4_0_SECONDARY_SYSTEM_DESCRIPTION_TABLE_REVISION = 0x2,EFI_ACPI_4_0_MULTIPLE_APIC_DESCRIPTION_TABLE_REVISION = 0x3,EFI_ACPI_4_0_PCAT_COMPAT = 0x1,EFI_ACPI_4_0_PROCESSOR_LOCAL_APIC = 0x0,EFI_ACPI_4_0_IO_APIC = 0x1,EFI_ACPI_4_0_INTERRUPT_SOURCE_OVERRIDE = 0x2,EFI_ACPI_4_0_NON_MASKABLE_INTERRUPT_SOURCE = 0x3,EFI_ACPI_4_0_LOCAL_APIC_NMI = 0x4,EFI_ACPI_4_0_LOCAL_APIC_ADDRESS_OVERRIDE = 0x5,EFI_ACPI_4_0_IO_SAPIC = 0x6,EFI_ACPI_4_0_LOCAL_SAPIC = 0x7,EFI_ACPI_4_0_PLATFORM_INTERRUPT_SOURCES = 0x8,EFI_ACPI_4_0_PROCESSOR_LOCAL_X2APIC = 0x9,EFI_ACPI_4_0_LOCAL_X2APIC_NMI = 0xA,EFI_ACPI_4_0_LOCAL_APIC_ENABLED = 0x1,EFI_ACPI_4_0_POLARITY = 0x3,EFI_ACPI_4_0_TRIGGER_MODE = 0xC,EFI_ACPI_4_0_CPEI_PROCESSOR_OVERRIDE = 0x1,EFI_ACPI_4_0_SMART_BATTERY_DESCRIPTION_TABLE_REVISION = 0x1,EFI_ACPI_4_0_EMBEDDED_CONTROLLER_BOOT_RESOURCES_TABLE_REVISION = 0x1,EFI_ACPI_4_0_SYSTEM_RESOURCE_AFFINITY_TABLE_REVISION = 0x3,EFI_ACPI_4_0_PROCESSOR_LOCAL_APIC_SAPIC_AFFINITY = 0x0,EFI_ACPI_4_0_MEMORY_AFFINITY = 0x1,EFI_ACPI_4_0_PROCESSOR_LOCAL_X2APIC_AFFINITY = 0x2,EFI_ACPI_4_0_PROCESSOR_LOCAL_APIC_SAPIC_ENABLED = 0x1,EFI_ACPI_4_0_MEMORY_ENABLED = 0x1,EFI_ACPI_4_0_MEMORY_HOT_PLUGGABLE = 0x2,EFI_ACPI_4_0_MEMORY_NONVOLATILE = 0x4,EFI_ACPI_4_0_SYSTEM_LOCALITY_DISTANCE_INFORMATION_TABLE_REVISION = 0x1,EFI_ACPI_4_0_CORRECTED_PLATFORM_ERROR_POLLING_TABLE_REVISION = 0x1,EFI_ACPI_4_0_CPEP_PROCESSOR_APIC_SAPIC = 0x0,EFI_ACPI_4_0_MAXIMUM_SYSTEM_CHARACTERISTICS_TABLE_REVISION = 0x1,EFI_ACPI_4_0_BOOT_ERROR_RECORD_TABLE_REVISION = 0x1,EFI_ACPI_4_0_ERROR_SEVERITY_CORRECTABLE = 0x0,EFI_ACPI_4_0_ERROR_SEVERITY_FATAL = 0x1,EFI_ACPI_4_0_ERROR_SEVERITY_CORRECTED = 0x2,EFI_ACPI_4_0_ERROR_SEVERITY_NONE = 0x3,EFI_ACPI_4_0_GENERIC_ERROR_DATA_ENTRY_REVISION = 0x201,EFI_ACPI_4_0_HARDWARE_ERROR_SOURCE_TABLE_REVISION = 0x1,EFI_ACPI_4_0_IA32_ARCHITECTURE_MACHINE_CHECK_EXCEPTION = 0x0,EFI_ACPI_4_0_IA32_ARCHITECTURE_CORRECTED_MACHINE_CHECK = 0x1,EFI_ACPI_4_0_IA32_ARCHITECTURE_NMI_ERROR = 0x2,EFI_ACPI_4_0_PCI_EXPRESS_ROOT_PORT_AER = 0x6,EFI_ACPI_4_0_PCI_EXPRESS_DEVICE_AER = 0x7,EFI_ACPI_4_0_PCI_EXPRESS_BRIDGE_AER = 0x8,EFI_ACPI_4_0_GENERIC_HARDWARE_ERROR = 0x9,EFI_ACPI_4_0_ERROR_SOURCE_FLAG_FIRMWARE_FIRST = 0x1,EFI_ACPI_4_0_ERROR_SOURCE_FLAG_GLOBAL = 0x2,EFI_ACPI_4_0_IA32_ARCHITECTURE_MACHINE_CHECK_ERROR_DATA_FORMAT_IA32 = 0x0,EFI_ACPI_4_0_IA32_ARCHITECTURE_MACHINE_CHECK_ERROR_DATA_FORMAT_INTEL64 = 0x1,EFI_ACPI_4_0_IA32_ARCHITECTURE_MACHINE_CHECK_ERROR_DATA_FORMAT_AMD64 = 0x2,EFI_ACPI_4_0_HARDWARE_ERROR_NOTIFICATION_POLLED = 0x0,EFI_ACPI_4_0_HARDWARE_ERROR_NOTIFICATION_EXTERNAL_INTERRUPT = 0x1,EFI_ACPI_4_0_HARDWARE_ERROR_NOTIFICATION_LOCAL_INTERRUPT = 0x2,EFI_ACPI_4_0_HARDWARE_ERROR_NOTIFICATION_SCI = 0x3,EFI_ACPI_4_0_HARDWARE_ERROR_NOTIFICATION_NMI = 0x4,EFI_ACPI_4_0_ERROR_RECORD_SERIALIZATION_TABLE_REVISION = 0x1,EFI_ACPI_4_0_ERST_BEGIN_WRITE_OPERATION = 0x0,EFI_ACPI_4_0_ERST_BEGIN_READ_OPERATION = 0x1,EFI_ACPI_4_0_ERST_BEGIN_CLEAR_OPERATION = 0x2,EFI_ACPI_4_0_ERST_END_OPERATION = 0x3,EFI_ACPI_4_0_ERST_SET_RECORD_OFFSET = 0x4,EFI_ACPI_4_0_ERST_EXECUTE_OPERATION = 0x5,EFI_ACPI_4_0_ERST_CHECK_BUSY_STATUS = 0x6,EFI_ACPI_4_0_ERST_GET_COMMAND_STATUS = 0x7,EFI_ACPI_4_0_ERST_GET_RECORD_IDENTIFIER = 0x8,EFI_ACPI_4_0_ERST_SET_RECORD_IDENTIFIER = 0x9,EFI_ACPI_4_0_ERST_GET_RECORD_COUNT = 0xA,EFI_ACPI_4_0_ERST_BEGIN_DUMMY_WRITE_OPERATION = 0xB,EFI_ACPI_4_0_ERST_GET_ERROR_LOG_ADDRESS_RANGE = 0xD,EFI_ACPI_4_0_ERST_GET_ERROR_LOG_ADDRESS_RANGE_LENGTH = 0xE,EFI_ACPI_4_0_ERST_GET_ERROR_LOG_ADDRESS_RANGE_ATTRIBUTES = 0xF,EFI_ACPI_4_0_EINJ_STATUS_SUCCESS = 0x0,EFI_ACPI_4_0_EINJ_STATUS_NOT_ENOUGH_SPACE = 0x1,EFI_ACPI_4_0_EINJ_STATUS_HARDWARE_NOT_AVAILABLE = 0x2,EFI_ACPI_4_0_EINJ_STATUS_FAILED = 0x3,EFI_ACPI_4_0_EINJ_STATUS_RECORD_STORE_EMPTY = 0x4,EFI_ACPI_4_0_EINJ_STATUS_RECORD_NOT_FOUND = 0x5,EFI_ACPI_4_0_ERST_READ_REGISTER = 0x0,EFI_ACPI_4_0_ERST_READ_REGISTER_VALUE = 0x1,EFI_ACPI_4_0_ERST_WRITE_REGISTER = 0x2,EFI_ACPI_4_0_ERST_WRITE_REGISTER_VALUE = 0x3,EFI_ACPI_4_0_ERST_NOOP = 0x4,EFI_ACPI_4_0_ERST_LOAD_VAR1 = 0x5,EFI_ACPI_4_0_ERST_LOAD_VAR2 = 0x6,EFI_ACPI_4_0_ERST_STORE_VAR1 = 0x7,EFI_ACPI_4_0_ERST_ADD = 0x8,EFI_ACPI_4_0_ERST_SUBTRACT = 0x9,EFI_ACPI_4_0_ERST_ADD_VALUE = 0xA,EFI_ACPI_4_0_ERST_SUBTRACT_VALUE = 0xB,EFI_ACPI_4_0_ERST_STALL = 0xC,EFI_ACPI_4_0_ERST_STALL_WHILE_TRUE = 0xD,EFI_ACPI_4_0_ERST_SKIP_NEXT_INSTRUCTION_IF_TRUE = 0xE,EFI_ACPI_4_0_ERST_GOTO = 0xF,EFI_ACPI_4_0_ERST_SET_SRC_ADDRESS_BASE = 0x10,EFI_ACPI_4_0_ERST_SET_DST_ADDRESS_BASE = 0x11,EFI_ACPI_4_0_ERST_MOVE_DATA = 0x12,EFI_ACPI_4_0_ERST_PRESERVE_REGISTER = 0x1,EFI_ACPI_4_0_ERROR_INJECTION_TABLE_REVISION = 0x1,EFI_ACPI_4_0_EINJ_BEGIN_INJECTION_OPERATION = 0x0,EFI_ACPI_4_0_EINJ_GET_TRIGGER_ERROR_ACTION_TABLE = 0x1,EFI_ACPI_4_0_EINJ_SET_ERROR_TYPE = 0x2,EFI_ACPI_4_0_EINJ_GET_ERROR_TYPE = 0x3,EFI_ACPI_4_0_EINJ_END_OPERATION = 0x4,EFI_ACPI_4_0_EINJ_EXECUTE_OPERATION = 0x5,EFI_ACPI_4_0_EINJ_CHECK_BUSY_STATUS = 0x6,EFI_ACPI_4_0_EINJ_GET_COMMAND_STATUS = 0x7,EFI_ACPI_4_0_EINJ_TRIGGER_ERROR = 0xFF,EFI_ACPI_4_0_EINJ_STATUS_UNKNOWN_FAILURE = 0x1,EFI_ACPI_4_0_EINJ_STATUS_INVALID_ACCESS = 0x2,EFI_ACPI_4_0_EINJ_ERROR_PROCESSOR_CORRECTABLE = 0x1,EFI_ACPI_4_0_EINJ_ERROR_PROCESSOR_UNCORRECTABLE_NONFATAL = 0x2,EFI_ACPI_4_0_EINJ_ERROR_PROCESSOR_UNCORRECTABLE_FATAL = 0x4,EFI_ACPI_4_0_EINJ_ERROR_MEMORY_CORRECTABLE = 0x8,EFI_ACPI_4_0_EINJ_ERROR_MEMORY_UNCORRECTABLE_NONFATAL = 0x10,EFI_ACPI_4_0_EINJ_ERROR_MEMORY_UNCORRECTABLE_FATAL = 0x20,EFI_ACPI_4_0_EINJ_ERROR_PCI_EXPRESS_CORRECTABLE = 0x40,EFI_ACPI_4_0_EINJ_ERROR_PCI_EXPRESS_UNCORRECTABLE_NONFATAL = 0x80,EFI_ACPI_4_0_EINJ_ERROR_PCI_EXPRESS_UNCORRECTABLE_FATAL = 0x100,EFI_ACPI_4_0_EINJ_ERROR_PLATFORM_CORRECTABLE = 0x200,EFI_ACPI_4_0_EINJ_ERROR_PLATFORM_UNCORRECTABLE_NONFATAL = 0x400,EFI_ACPI_4_0_EINJ_ERROR_PLATFORM_UNCORRECTABLE_FATAL = 0x800,EFI_ACPI_4_0_EINJ_READ_REGISTER = 0x0,EFI_ACPI_4_0_EINJ_READ_REGISTER_VALUE = 0x1,EFI_ACPI_4_0_EINJ_WRITE_REGISTER = 0x2,EFI_ACPI_4_0_EINJ_WRITE_REGISTER_VALUE = 0x3,EFI_ACPI_4_0_EINJ_NOOP = 0x4,EFI_ACPI_4_0_EINJ_PRESERVE_REGISTER = 0x1,EFI_ACPI_4_0_ROOT_SYSTEM_DESCRIPTION_POINTER_SIGNATURE = 0x2052545020445352,EFI_ACPI_4_0_MULTIPLE_APIC_DESCRIPTION_TABLE_SIGNATURE = 0x43495041,EFI_ACPI_4_0_BOOT_ERROR_RECORD_TABLE_SIGNATURE = 0x54524542,EFI_ACPI_4_0_CORRECTED_PLATFORM_ERROR_POLLING_TABLE_SIGNATURE = 0x50455043,EFI_ACPI_4_0_DIFFERENTIATED_SYSTEM_DESCRIPTION_TABLE_SIGNATURE = 0x54445344,EFI_ACPI_4_0_EMBEDDED_CONTROLLER_BOOT_RESOURCES_TABLE_SIGNATURE = 0x54444345,EFI_ACPI_4_0_ERROR_INJECTION_TABLE_SIGNATURE = 0x4A4E4945,EFI_ACPI_4_0_ERROR_RECORD_SERIALIZATION_TABLE_SIGNATURE = 0x54535245,EFI_ACPI_4_0_FIXED_ACPI_DESCRIPTION_TABLE_SIGNATURE = 0x50434146,EFI_ACPI_4_0_FIRMWARE_ACPI_CONTROL_STRUCTURE_SIGNATURE = 0x53434146,EFI_ACPI_4_0_HARDWARE_ERROR_SOURCE_TABLE_SIGNATURE = 0x54534548,EFI_ACPI_4_0_MAXIMUM_SYSTEM_CHARACTERISTICS_TABLE_SIGNATURE = 0x5443534D,EFI_ACPI_4_0_PERSISTENT_SYSTEM_DESCRIPTION_TABLE_SIGNATURE = 0x54445350,EFI_ACPI_4_0_ROOT_SYSTEM_DESCRIPTION_TABLE_SIGNATURE = 0x54445352,EFI_ACPI_4_0_SMART_BATTERY_SPECIFICATION_TABLE_SIGNATURE = 0x54534253,EFI_ACPI_4_0_SYSTEM_LOCALITY_INFORMATION_TABLE_SIGNATURE = 0x54494C53,EFI_ACPI_4_0_SYSTEM_RESOURCE_AFFINITY_TABLE_SIGNATURE = 0x54415253,EFI_ACPI_4_0_SECONDARY_SYSTEM_DESCRIPTION_TABLE_SIGNATURE = 0x54445353,EFI_ACPI_4_0_EXTENDED_SYSTEM_DESCRIPTION_TABLE_SIGNATURE = 0x54445358,EFI_ACPI_4_0_SIMPLE_BOOT_FLAG_TABLE_SIGNATURE = 0x544F4F42,EFI_ACPI_4_0_DEBUG_PORT_TABLE_SIGNATURE = 0x50474244,EFI_ACPI_4_0_DMA_REMAPPING_TABLE_SIGNATURE = 0x52414D44,EFI_ACPI_4_0_EVENT_TIMER_DESCRIPTION_TABLE_SIGNATURE = 0x54445445,EFI_ACPI_4_0_HIGH_PRECISION_EVENT_TIMER_TABLE_SIGNATURE = 0x54455048,EFI_ACPI_4_0_ISCSI_BOOT_FIRMWARE_TABLE_SIGNATURE = 0x54464269,EFI_ACPI_4_0_IO_VIRTUALIZATION_REPORTING_STRUCTURE_SIGNATURE = 0x53525649,EFI_ACPI_4_0_PCI_EXPRESS_MEMORY_MAPPED_CONFIGURATION_SPACE_BASE_ADDRESS_DESCRIPTION_TABLE_SIGNATURE = 0x4746434D,EFI_ACPI_4_0_MANAGEMENT_CONTROLLER_HOST_INTERFACE_TABLE_SIGNATURE = 0x4948434D,EFI_ACPI_4_0_SERIAL_PORT_CONSOLE_REDIRECTION_TABLE_SIGNATURE = 0x52435053,EFI_ACPI_4_0_SERVER_PLATFORM_MANAGEMENT_INTERFACE_TABLE_SIGNATURE = 0x494D5053,EFI_ACPI_4_0_TRUSTED_COMPUTING_PLATFORM_ALLIANCE_CAPABILITIES_TABLE_SIGNATURE = 0x41504354,EFI_ACPI_4_0_UEFI_ACPI_DATA_TABLE_SIGNATURE = 0x49464555,EFI_ACPI_4_0_WINDOWS_ACPI_ENLIGHTENMENT_TABLE_SIGNATURE = 0x54454157,EFI_ACPI_4_0_WATCHDOG_ACTION_TABLE_SIGNATURE = 0x54414457,EFI_ACPI_4_0_WATCHDOG_RESOURCE_TABLE_SIGNATURE = 0x54524457,};
enum MACRO_EFI_ACPI_SERIAL {EFI_ACPI_SERIAL_PORT_CONSOLE_REDIRECTION_TABLE_REVISION = 0x1,EFI_ACPI_SERIAL_PORT_CONSOLE_REDIRECTION_TABLE_INTERFACE_TYPE_16550 = 0x0,EFI_ACPI_SERIAL_PORT_CONSOLE_REDIRECTION_TABLE_INTERFACE_TYPE_16450 = 0x1,EFI_ACPI_SERIAL_PORT_CONSOLE_REDIRECTION_TABLE_INTERRUPT_TYPE_8259 = 0x1,EFI_ACPI_SERIAL_PORT_CONSOLE_REDIRECTION_TABLE_INTERRUPT_TYPE_APIC = 0x2,EFI_ACPI_SERIAL_PORT_CONSOLE_REDIRECTION_TABLE_INTERRUPT_TYPE_SAPIC = 0x4,EFI_ACPI_SERIAL_PORT_CONSOLE_REDIRECTION_TABLE_BAUD_RATE_9600 = 0x3,EFI_ACPI_SERIAL_PORT_CONSOLE_REDIRECTION_TABLE_BAUD_RATE_19200 = 0x4,EFI_ACPI_SERIAL_PORT_CONSOLE_REDIRECTION_TABLE_BAUD_RATE_57600 = 0x6,EFI_ACPI_SERIAL_PORT_CONSOLE_REDIRECTION_TABLE_BAUD_RATE_115200 = 0x7,EFI_ACPI_SERIAL_PORT_CONSOLE_REDIRECTION_TABLE_PARITY_NO_PARITY = 0x0,EFI_ACPI_SERIAL_PORT_CONSOLE_REDIRECTION_TABLE_STOP_BITS_1 = 0x1,EFI_ACPI_SERIAL_PORT_CONSOLE_REDIRECTION_TABLE_FLOW_CONTROL_DCD = 0x1,EFI_ACPI_SERIAL_PORT_CONSOLE_REDIRECTION_TABLE_FLOW_CONTROL_RTS_CTS = 0x2,EFI_ACPI_SERIAL_PORT_CONSOLE_REDIRECTION_TABLE_FLOW_CONTROL_XON_XOFF = 0x4,EFI_ACPI_SERIAL_PORT_CONSOLE_REDIRECTION_TABLE_TERMINAL_TYPE_VT100 = 0x0,EFI_ACPI_SERIAL_PORT_CONSOLE_REDIRECTION_TABLE_TERMINAL_TYPE_VT100_PLUS = 0x1,EFI_ACPI_SERIAL_PORT_CONSOLE_REDIRECTION_TABLE_TERMINAL_TYPE_VT_UTF8 = 0x2,EFI_ACPI_SERIAL_PORT_CONSOLE_REDIRECTION_TABLE_TERMINAL_TYPE_ANSI = 0x3,};
enum MACRO_EFI_STATUS_CODE {EFI_STATUS_CODE_DATA_MAX_SIZE = 200,};
enum MACRO_FFS_ATTRIB_TAIL {FFS_ATTRIB_TAIL_PRESENT = 0x1,FFS_ATTRIB_RECOVERY = 0x2,FFS_ATTRIB_HEADER_EXTENSION = 0x4,};
enum MACRO_IMAGE_ATTRIBUTE {IMAGE_ATTRIBUTE_IMAGE_UPDATABLE = 0x1,IMAGE_ATTRIBUTE_RESET_REQUIRED = 0x2,IMAGE_ATTRIBUTE_AUTHENTICATION_REQUIRED = 0x4,IMAGE_ATTRIBUTE_IN_USE = 0x8,IMAGE_ATTRIBUTE_UEFI_IMAGE = 0x10,IMAGE_COMPATIBILITY_CHECK_SUPPORTED = 0x1,};
enum MACRO_IMAGE_UPDATABLE {IMAGE_UPDATABLE_VALID = 0x1,IMAGE_UPDATABLE_INVALID = 0x2,IMAGE_UPDATABLE_INVALID_TYPE = 0x4,IMAGE_UPDATABLE_INVALID_OLD = 0x8,IMAGE_UPDATABLE_VALID_WITH_VENDOR_CODE = 0x10,};
enum MACRO_PEI_PERFORMANCE {PEI_PERFORMANCE_STRING_SIZE = 8,PEI_PERFORMANCE_STRING_LENGTH = 7,};
enum MACRO_SMM_PERFORMANCE {SMM_PERFORMANCE_STRING_SIZE = 32,SMM_PERFORMANCE_STRING_LENGTH = 31,};
enum MACRO_TPMCMDBUFLENGTH {TPMCMDBUFLENGTH = 1024,};
typedef struct _MTRR_VARIABLE_SETTING_ MTRR_VARIABLE_SETTING;
typedef struct _5ABCE92A62F06F587C1A97100F5EA96A PAL_SELF_TEST_CONTROL;
typedef union _518876D0C27A9CD079BA54115713EEC3 PCI_CONFIG_ACCESS_CF8;
typedef struct s_pxe_cpb_nvdata_sparse PXE_CPB_NVDATA_SPARSE;
struct TIME_ZONE_INFORMATION;
typedef struct _A19F19203AC5E3E31E03913FA913E042 TPM2B_PRIVATE_KEY_RSA;
typedef struct _CB71B91A277CE6BD36AD5111FF5E3244 TPM2_DEVICE_INTERFACE;
typedef struct _AE5CF61A8076C545D4243DC246FC5106 TPMS_SENSITIVE_CREATE;
typedef struct _158E4544DB3B6B6B9F4E93768A523E23 TPMS_SIGNATURE_RSAPSS;
typedef struct _158E4544DB3B6B6B9F4E93768A523E23 TPMS_SIGNATURE_RSASSA;
typedef struct _19E015F78D84F7826E599D78ED7DA7D3 TPMS_TIME_ATTEST_INFO;
typedef struct _B74C479D5DEF0F6452AE9C98BC440EA7 TPMT_KEYEDHASH_SCHEME;
typedef union _5223D6A81E6A8532B448C4108E502994 TPMU_ENCRYPTED_SECRET;
typedef union _D15B7837BDB1ABFF67D6BC1E404170E5 TPMU_SCHEME_KEYEDHASH;
typedef struct tdTPM_CONTEXT_SENSITIVE TPM_CONTEXT_SENSITIVE;
typedef struct tdTPM_DELEGATE_KEY_BLOB TPM_DELEGATE_KEY_BLOB;
typedef struct tdTPM_IDENTITY_CONTENTS TPM_IDENTITY_CONTENTS;
typedef struct tdTPM_TRANSPORT_LOG_OUT TPM_TRANSPORT_LOG_OUT;
typedef struct _189D1DC770D3AF583D5731F1D975520D USB_CLASS_DEVICE_PATH;
typedef struct _7E950FB6A83D8EDBFC02012BA7FE5544 USB_CONFIG_DESCRIPTOR;
typedef struct _4E4261D3A1CEC8B9AFEC8A32F19F53E2 USB_DEVICE_DESCRIPTOR;
typedef struct _40EF81669717755AD7902BA019E550D1 VARIABLE_STORE_HEADER;
enum _EFI_MEMORY_ARRAY_USE {EfiMemoryArrayUseOther = 0x1,EfiMemoryArrayUseUnknown = 0x2,EfiMemoryArrayUseSystemMemory = 0x3,EfiMemoryArrayUseVideoMemory = 0x4,EfiMemoryArrayUseFlashMemory = 0x5,EfiMemoryArrayUseNonVolatileRam = 0x6,EfiMemoryArrayUseCacheMemory = 0x7,};
typedef struct _8B2C23BAA46EBB305E2955CD2BD57B73 ACPI_ADR_DEVICE_PATH;
typedef struct _0748F0574479A694305288EDDF16D0C6 ACPI_HID_DEVICE_PATH;
typedef struct _B4327EB9331D82A86C9489779186A121 ATAPI_MODE_SENSE_CMD;
typedef union _2A0E6EB8B456FC25AA1F0F925DEB4107 ATAPI_PACKET_COMMAND;
typedef struct _6F9E78D51741B91108827E2927BC310C CACHE_SRAM_TYPE_DATA;
typedef struct _834F8DE3572A099FC7548A55D9A11840 CHAP_LOCAL_AUTH_NODE;
typedef void (*DEBUG_AGENT_CONTINUE)(void *Context);
typedef struct _A948394FC790D9048ECA290EEF4598AA DNS6_RESOURCE_RECORD;
typedef struct _EFI_ACPI_DESCRIPTION EFI_ACPI_DESCRIPTION;
typedef struct _EFI_ATA_STATUS_BLOCK EFI_ATA_STATUS_BLOCK;
typedef struct _5C36579178CD024FECB3401B13A4560D EFI_CERT_X509_SHA256;
typedef struct _C759A4E0FC667B805FF83CF37E589BAD EFI_CERT_X509_SHA384;
typedef struct _3910C22C328550E099BEC9D2CFC7E7B1 EFI_CERT_X509_SHA512;
typedef struct _EFI_CPU_IO2_PROTOCOL EFI_CPU_IO2_PROTOCOL;
typedef union _03F53B4ABFCF1B5C29663F845B2E3FB1 EFI_DEBUG_IMAGE_INFO;
typedef struct _E2D91BC3D19A8D6B311477F95ECB3E4C EFI_DHCP6_IA_ADDRESS;
typedef struct _EFI_DISK_IO_PROTOCOL EFI_DISK_IO_PROTOCOL;
typedef struct _1BB6702D0F95E9E88DF05157AF2B5B12 EFI_DNS4_CACHE_ENTRY;
typedef struct _EF21D80790C417A35FBBE5271FDCA000 EFI_DNS4_CONFIG_DATA;
typedef struct _AEADBAF441CF0D0024C5B0F34DD7F02A EFI_DNS6_CACHE_ENTRY;
typedef struct _DAC536EC9D6B1C58C0ACAFFEF6C4B5B5 EFI_DNS6_CONFIG_DATA;
typedef struct _3F721F7E75155B3A893AD9E3169C16C0 EFI_ERROR_TIME_STAMP;
typedef struct _27AE6DAC312C1772F7F4AB500994EB63 EFI_FFS_FILE_HEADER2;
typedef struct _C5F57BC2B0B6EE2B75FB780914E5D879 EFI_FILE_SYSTEM_INFO;
typedef struct _C4E2D3995F2015C0403D416DB89CE2DB EFI_FTP4_CONFIG_DATA;
typedef struct _EFI_GET_PCD_INFO_PPI EFI_GET_PCD_INFO_PPI;
typedef struct _31EAA50BFACAD085DC903568FC73FD55 EFI_HII_EXPORT_TABLE;
typedef struct _70C88BBAC6A895EE89DD072EE7C5A19E EFI_HII_STRING_BLOCK;
typedef struct _FF6A55059D2F8FBB228E6A52654D0074 EFI_HOB_UEFI_CAPSULE;
typedef struct _DF22CF9CA9B769C51E2E573A6985619A EFI_HTTP_CONFIG_DATA;
typedef struct _EFI_IFR_DEFAULTSTORE EFI_IFR_DEFAULTSTORE;
typedef struct _BE973F4FDB064641654791385863872C EFI_IFR_END_FORM_SET;
typedef struct _EFI_IFR_GREATER_THAN EFI_IFR_GREATER_THAN;
typedef struct _EFI_IFR_GUID_TIMEOUT EFI_IFR_GUID_TIMEOUT;
typedef struct _7157B18ECB20BAA8C6281A4B15C38093 EFI_IFR_INCONSISTENT;
typedef struct _EFI_IFR_NO_SUBMIT_IF EFI_IFR_NO_SUBMIT_IF;
typedef struct _EFI_IFR_ORDERED_LIST EFI_IFR_ORDERED_LIST;
typedef struct _EFI_IFR_RESET_BUTTON EFI_IFR_RESET_BUTTON;
typedef struct _EFI_IFR_VARSTORE_EFI EFI_IFR_VARSTORE_EFI;
typedef struct _741476BE20FDCD20209AFC9F79519DCD EFI_IMAGE_DOS_HEADER;
typedef struct _A85672E1F3F2CA4FD8275099D6728D85 EFI_IMAGE_LINENUMBER;
typedef struct tdEFI_IMAGE_LOAD_EVENT EFI_IMAGE_LOAD_EVENT;
typedef struct _1088159707752B3904E9F3E2A127A315 EFI_IMAGE_RELOCATION;
typedef struct _F9D42D39DD3C8DF123E27FB71942E14A EFI_IMAGE_THUNK_DATA;
typedef struct _CA86F2C8F36CBF5AF3EA74B5F7BF8954 EFI_IP4_ADDRESS_PAIR;
typedef struct _91FCA2D6F8E6352AA88065349604AF74 EFI_IP4_RECEIVE_DATA;
typedef struct _36982C089099B7BEE00BBFB921609DD9 EFI_IP6_ADDRESS_INFO;
typedef struct _74C31F1E030E91C27322B71EA2AC69F0 EFI_IP6_ADDRESS_PAIR;
typedef struct _EFI_IP6_RECEIVE_DATA EFI_IP6_RECEIVE_DATA;
typedef struct _05768ECA08FD0615ADAEFAF110DCA85D EFI_MEMORY_SIZE_DATA;
typedef struct _24E988B8AC7E4F6242EAEA675339F6B0 EFI_MTFTP4_MODE_DATA;
typedef struct _CF78D6B0316D400E3D07B3957805C8F4 EFI_MTFTP6_MODE_DATA;
typedef struct _EFI_NET_SESSION_DATA EFI_NET_SESSION_DATA;
typedef struct _EFI_PEI_GRAPHICS_PPI EFI_PEI_GRAPHICS_PPI;
typedef union _3A77E8071C6D2AEAA192B14C13365630 EFI_PEI_HOB_POINTERS;
typedef struct _EFI_PEI_PCI_CFG2_PPI EFI_PEI_PCI_CFG2_PPI;
typedef struct _EFI_PEI_SECURITY_PPI EFI_PEI_SECURITY_PPI;
typedef struct _A7296CAE8D5B4B0354655D00FDFD9750 EFI_PROPERTIES_TABLE;
typedef struct _3016E247537C24FA7732182030D115F2 EFI_RUNTIME_SERVICES;
typedef struct _EFI_SCSI_IO_PROTOCOL EFI_SCSI_IO_PROTOCOL;
typedef struct _EFI_SEC_PEI_HAND_OFF EFI_SEC_PEI_HAND_OFF;
typedef struct _931F22EFAAA9C2C0CFDB892F0D824EF3 EFI_SMBUS_DEVICE_MAP;
typedef struct _EFI_SMM_CPU_PROTOCOL EFI_SMM_CPU_PROTOCOL;
typedef struct _EFI_SMM_SYSTEM_TABLE EFI_SMM_SYSTEM_TABLE;
typedef struct _6C3F6ACBBE9FC503ED5DDDEBD57DC2C5 EFI_SMRAM_DESCRIPTOR;
typedef struct _E45A1ABE42AD9419E77EB1A7CD09E056 EFI_STATUS_CODE_DATA;
typedef struct _EFI_TAPE_IO_PROTOCOL EFI_TAPE_IO_PROTOCOL;
typedef struct _501707A4983087C56C6E8AAD624F6B61 EFI_TCP4_CLOSE_TOKEN;
typedef struct _3434E7F1690FD369EDEA019F51C2EFC7 EFI_TCP4_CONFIG_DATA;
typedef struct _CA2F29191A48A2C81DD05191EEF3098B EFI_TCP6_CLOSE_TOKEN;
typedef struct _D61DABEC9648C46BCF8FC65397E9722D EFI_TCP6_CONFIG_DATA;
typedef struct _81E70B6E9500B43B545FBC302A22FD1F EFI_UDP4_CONFIG_DATA;
typedef struct _BDF2CE874A5E7CDD7705734530715A1D EFI_UDP6_CONFIG_DATA;
typedef struct _EFI_USB2_HC_PROTOCOL EFI_USB2_HC_PROTOCOL;
typedef void *EFI_USER_INFO_HANDLE;
typedef struct _8E919DA99B3FB9F4215C4BC26D9F0D0A EFI_VERSION_SECTION2;
typedef struct _67C66621891B7BBFC03B4CACC5B272CA FILEPATH_DEVICE_PATH;
typedef struct _BE973F4FDB064641654791385863872C FRAMEWORK_EFI_IFR_OR;
typedef union _B9AA1CAFBE647A1F2D3864596FED4435 IP_IO_IP_CONFIG_DATA;
typedef union _2EB10352A9B67ABEC81EADBB1E83EE89 LOCAL_APIC_LVT_TIMER;
enum MACRO_BROWSER_ACTION {BROWSER_ACTION_NONE = 65536,BROWSER_ACTION_FORM_EXIT = 131072,BROWSER_SUCCESS = 0,BROWSER_ERROR = -2147483648,BROWSER_SUBMIT_FAIL = -2147483647,BROWSER_NO_SUBMIT_IF = -2147483646,BROWSER_FORM_NOT_FOUND = -2147483645,BROWSER_FORM_SUPPRESS = -2147483644,BROWSER_PROTOCOL_NOT_FOUND = -2147483643,BROWSER_INCONSISTENT_IF = -2147483642,BROWSER_WARNING_IF = -2147483641,BROWSER_SUBMIT_FAIL_NO_SUBMIT_IF = -2147483640,BROWSER_RECONNECT_REQUIRED = -2147483639,BROWSER_RECONNECT_FAIL = -2147483638,BROWSER_RECONNECT_SAVE_CHANGES = -2147483637,};
enum MACRO_EFI_ACPI_ISCSI {EFI_ACPI_ISCSI_BOOT_FIRMWARE_TABLE_REVISION = 0x1,EFI_ACPI_ISCSI_BOOT_FIRMWARE_TABLE_STRUCTURE_ALIGNMENT = 0x8,EFI_ACPI_ISCSI_BOOT_FIRMWARE_TABLE_RESERVED_STRUCTURE_ID = 0x0,EFI_ACPI_ISCSI_BOOT_FIRMWARE_TABLE_CONTROL_STRUCTURE_ID = 0x1,EFI_ACPI_ISCSI_BOOT_FIRMWARE_TABLE_INITIATOR_STRUCTURE_ID = 0x2,EFI_ACPI_ISCSI_BOOT_FIRMWARE_TABLE_NIC_STRUCTURE_ID = 0x3,EFI_ACPI_ISCSI_BOOT_FIRMWARE_TABLE_TARGET_STRUCTURE_ID = 0x4,EFI_ACPI_ISCSI_BOOT_FIRMWARE_TABLE_EXTERNSIONS_STRUCTURE_ID = 0x5,EFI_ACPI_ISCSI_BOOT_FIRMWARE_TABLE_CONTROL_STRUCTURE_VERSION = 0x1,EFI_ACPI_ISCSI_BOOT_FIRMWARE_TABLE_CONTROL_STRUCTURE_FLAG_BOOT_FAILOVER = 0x1,EFI_ACPI_ISCSI_BOOT_FIRMWARE_TABLE_INITIATOR_STRUCTURE_VERSION = 0x1,EFI_ACPI_ISCSI_BOOT_FIRMWARE_TABLE_INITIATOR_STRUCTURE_FLAG_BLOCK_VALID = 0x1,EFI_ACPI_ISCSI_BOOT_FIRMWARE_TABLE_INITIATOR_STRUCTURE_FLAG_BOOT_SELECTED = 0x2,EFI_ACPI_ISCSI_BOOT_FIRMWARE_TABLE_NIC_STRUCTURE_VERSION = 0x1,EFI_ACPI_ISCSI_BOOT_FIRMWARE_TABLE_NIC_STRUCTURE_FLAG_BLOCK_VALID = 0x1,EFI_ACPI_ISCSI_BOOT_FIRMWARE_TABLE_NIC_STRUCTURE_FLAG_BOOT_SELECTED = 0x2,EFI_ACPI_ISCSI_BOOT_FIRMWARE_TABLE_NIC_STRUCTURE_FLAG_GLOBAL = 0x4,EFI_ACPI_ISCSI_BOOT_FIRMWARE_TABLE_TARGET_STRUCTURE_VERSION = 0x1,EFI_ACPI_ISCSI_BOOT_FIRMWARE_TABLE_TARGET_STRUCTURE_FLAG_BLOCK_VALID = 0x1,EFI_ACPI_ISCSI_BOOT_FIRMWARE_TABLE_TARGET_STRUCTURE_FLAG_BOOT_SELECTED = 0x2,EFI_ACPI_ISCSI_BOOT_FIRMWARE_TABLE_TARGET_STRUCTURE_FLAG_RADIUS_CHAP = 0x4,EFI_ACPI_ISCSI_BOOT_FIRMWARE_TABLE_TARGET_STRUCTURE_FLAG_RADIUS_RCHAP = 0x8,EFI_ACPI_ISCSI_BOOT_FIRMWARE_TABLE_TARGET_STRUCTURE_CHAP_TYPE_NO_CHAP = 0x0,EFI_ACPI_ISCSI_BOOT_FIRMWARE_TABLE_TARGET_STRUCTURE_CHAP_TYPE_CHAP = 0x1,EFI_ACPI_ISCSI_BOOT_FIRMWARE_TABLE_TARGET_STRUCTURE_CHAP_TYPE_MUTUAL_CHAP = 0x2,EFI_LEGACY_MP_TABLE_REV_1_4 = 0x4,EFI_LEGACY_MP_TABLE_FLOATING_POINTER_SIGNATURE = 0x5F504D5F,EFI_LEGACY_MP_TABLE_HEADER_SIGNATURE = 0x504D4350,EFI_LEGACY_MP_TABLE_ENTRY_TYPE_PROCESSOR = 0x0,EFI_LEGACY_MP_TABLE_ENTRY_TYPE_BUS = 0x1,EFI_LEGACY_MP_TABLE_ENTRY_TYPE_IOAPIC = 0x2,EFI_LEGACY_MP_TABLE_ENTRY_TYPE_IO_INT = 0x3,EFI_LEGACY_MP_TABLE_ENTRY_TYPE_LOCAL_INT = 0x4,EFI_LEGACY_MP_TABLE_ENTRY_EXT_TYPE_SYS_ADDR_SPACE_MAPPING = 0x80,EFI_LEGACY_MP_TABLE_ENTRY_EXT_TYPE_BUS_HIERARCHY = 0x81,EFI_LEGACY_MP_TABLE_ENTRY_EXT_TYPE_COMPAT_BUS_ADDR_SPACE_MODIFIER = 0x82,};
enum MACRO_EFI_IFR_EXTEND {EFI_IFR_EXTEND_OP_LABEL = 0x0,EFI_IFR_EXTEND_OP_BANNER = 0x1,EFI_IFR_EXTEND_OP_TIMEOUT = 0x2,EFI_IFR_EXTEND_OP_CLASS = 0x3,EFI_IFR_EXTEND_OP_SUBCLASS = 0x4,EFI_IFR_BANNER_ALIGN_LEFT = 0x0,EFI_IFR_BANNER_ALIGN_CENTER = 0x1,EFI_IFR_BANNER_ALIGN_RIGHT = 0x2,EFI_NON_DEVICE_CLASS = 0x0,EFI_DISK_DEVICE_CLASS = 0x1,EFI_VIDEO_DEVICE_CLASS = 0x2,EFI_NETWORK_DEVICE_CLASS = 0x4,EFI_INPUT_DEVICE_CLASS = 0x8,EFI_ON_BOARD_DEVICE_CLASS = 0x10,EFI_OTHER_DEVICE_CLASS = 0x20,EFI_SETUP_APPLICATION_SUBCLASS = 0x0,EFI_GENERAL_APPLICATION_SUBCLASS = 0x1,EFI_FRONT_PAGE_SUBCLASS = 0x2,EFI_SINGLE_USE_SUBCLASS = 0x3,EFI_IFR_EXTEND_OP_OPTIONKEY = 0x0,EFI_IFR_EXTEND_OP_VAREQNAME = 0x1,};
enum MACRO_EFI_PROPERTIES {EFI_PROPERTIES_TABLE_VERSION = 0x10000,EFI_PROPERTIES_RUNTIME_MEMORY_PROTECTION_NON_EXECUTABLE_PE_DATA = 0x1,EFI_COMPUTING_UNIT_MISMATCH_SPEED = 0x1,EFI_COMPUTING_UNIT_MISMATCH_FSB_SPEED = 0x2,EFI_COMPUTING_UNIT_MISMATCH_FAMILY = 0x4,EFI_COMPUTING_UNIT_MISMATCH_MODEL = 0x8,EFI_COMPUTING_UNIT_MISMATCH_STEPPING = 0x10,EFI_COMPUTING_UNIT_MISMATCH_CACHE_SIZE = 0x20,EFI_COMPUTING_UNIT_MISMATCH_OEM1 = 0x1000,EFI_COMPUTING_UNIT_MISMATCH_OEM2 = 0x2000,EFI_COMPUTING_UNIT_MISMATCH_OEM3 = 0x4000,EFI_COMPUTING_UNIT_MISMATCH_OEM4 = 0x8000,EFI_CPU_CAUSE_INTERNAL_ERROR = 0x1,EFI_CPU_CAUSE_THERMAL_ERROR = 0x2,EFI_CPU_CAUSE_SELFTEST_FAILURE = 0x4,EFI_CPU_CAUSE_PREBOOT_TIMEOUT = 0x8,EFI_CPU_CAUSE_FAILED_TO_START = 0x10,EFI_CPU_CAUSE_CONFIG_ERROR = 0x20,EFI_CPU_CAUSE_USER_SELECTION = 0x80,EFI_CPU_CAUSE_BY_ASSOCIATION = 0x100,EFI_CPU_CAUSE_UNSPECIFIED = 0x8000,EFI_MEMORY_ERROR_OTHER = 0x1,EFI_MEMORY_ERROR_UNKNOWN = 0x2,EFI_MEMORY_ERROR_DEVICE = 0x3,EFI_MEMORY_ERROR_PARTITION = 0x4,EFI_MEMORY_OPERATION_OTHER = 0x1,EFI_MEMORY_OPERATION_UNKNOWN = 0x2,EFI_MEMORY_OPERATION_READ = 0x3,EFI_MEMORY_OPERATION_WRITE = 0x4,EFI_MEMORY_OPERATION_PARTIAL_WRITE = 0x5,EFI_MULTIPLE_MEMORY_DEVICE_OPERATION = 0xFFFE,EFI_ALL_MEMORY_DEVICE_OPERATION = 0xFFFF,EFI_MULTIPLE_MEMORY_ARRAY_OPERATION = 0xFFFE,EFI_ALL_MEMORY_ARRAY_OPERATION = 0xFFFF,EFI_SYSTEM_RESOURCE_TABLE_FIRMWARE_RESOURCE_VERSION = 0x1,};
enum MACRO_EFI_SMM_SYSTEM {EFI_SMM_SYSTEM_TABLE_REVISION = 9,EFI_CAPSULE_HEADER_FLAG_SETUP = 1,};
enum MACRO_EXCEPT_AARCH64 {EXCEPT_AARCH64_SYNCHRONOUS_EXCEPTIONS = 0,EXCEPT_AARCH64_IRQ = 1,EXCEPT_AARCH64_FIQ = 2,EXCEPT_AARCH64_SERROR = 3,};
enum MACRO_GEOMETRICSHAPE {GEOMETRICSHAPE_UP_TRIANGLE = 0x25B2,GEOMETRICSHAPE_RIGHT_TRIANGLE = 0x25BA,GEOMETRICSHAPE_DOWN_TRIANGLE = 0x25BC,GEOMETRICSHAPE_LEFT_TRIANGLE = 0x25C4,};
enum MACRO_NUM_POLICY_PCR {NUM_POLICY_PCR = 1,};
enum MACRO_PXE_STATISTICS {PXE_STATISTICS_RX_TOTAL_FRAMES = 0x0,PXE_STATISTICS_RX_GOOD_FRAMES = 0x1,PXE_STATISTICS_RX_UNDERSIZE_FRAMES = 0x2,PXE_STATISTICS_RX_OVERSIZE_FRAMES = 0x3,PXE_STATISTICS_RX_DROPPED_FRAMES = 0x4,PXE_STATISTICS_RX_UNICAST_FRAMES = 0x5,PXE_STATISTICS_RX_BROADCAST_FRAMES = 0x6,PXE_STATISTICS_RX_MULTICAST_FRAMES = 0x7,PXE_STATISTICS_RX_CRC_ERROR_FRAMES = 0x8,PXE_STATISTICS_RX_TOTAL_BYTES = 0x9,PXE_STATISTICS_TX_TOTAL_FRAMES = 0xA,PXE_STATISTICS_TX_GOOD_FRAMES = 0xB,PXE_STATISTICS_TX_UNDERSIZE_FRAMES = 0xC,PXE_STATISTICS_TX_OVERSIZE_FRAMES = 0xD,PXE_STATISTICS_TX_DROPPED_FRAMES = 0xE,PXE_STATISTICS_TX_UNICAST_FRAMES = 0xF,PXE_STATISTICS_TX_BROADCAST_FRAMES = 0x10,PXE_STATISTICS_TX_MULTICAST_FRAMES = 0x11,PXE_STATISTICS_TX_CRC_ERROR_FRAMES = 0x12,PXE_STATISTICS_TX_TOTAL_BYTES = 0x13,PXE_STATISTICS_COLLISIONS = 0x14,PXE_STATISTICS_UNSUPPORTED_PROTOCOL = 0x15,PXE_PROTOCOL_ETHERNET_IP = 0x800,PXE_PROTOCOL_ETHERNET_ARP = 0x806,};
enum MACRO_TPM_RC_CONTEXT {TPM_RC_CONTEXT_GAP = 0x901,TPM_RC_OBJECT_MEMORY = 0x902,TPM_RC_SESSION_MEMORY = 0x903,TPM_RC_MEMORY = 0x904,TPM_RC_SESSION_HANDLES = 0x905,TPM_RC_OBJECT_HANDLES = 0x906,TPM_RC_LOCALITY = 0x907,TPM_RC_YIELDED = 0x908,TPM_RC_CANCELED = 0x909,TPM_RC_TESTING = 0x90A,TPM_RC_REFERENCE_H0 = 0x910,TPM_RC_REFERENCE_H1 = 0x911,TPM_RC_REFERENCE_H2 = 0x912,TPM_RC_REFERENCE_H3 = 0x913,TPM_RC_REFERENCE_H4 = 0x914,TPM_RC_REFERENCE_H5 = 0x915,TPM_RC_REFERENCE_H6 = 0x916,TPM_RC_REFERENCE_S0 = 0x918,TPM_RC_REFERENCE_S1 = 0x919,TPM_RC_REFERENCE_S2 = 0x91A,TPM_RC_REFERENCE_S3 = 0x91B,TPM_RC_REFERENCE_S4 = 0x91C,TPM_RC_REFERENCE_S5 = 0x91D,TPM_RC_REFERENCE_S6 = 0x91E,TPM_RC_NV_RATE = 0x920,TPM_RC_LOCKOUT = 0x921,TPM_RC_RETRY = 0x922,TPM_RC_NV_UNAVAILABLE = 0x923,TPM_RC_NOT_USED = 0x97F,TPM_RC_H = 0x0,TPM_RC_P = 0x40,TPM_RC_S = 0x800,TPM_RC_1 = 0x100,TPM_RC_2 = 0x200,TPM_RC_3 = 0x300,TPM_RC_4 = 0x400,TPM_RC_5 = 0x500,TPM_RC_6 = 0x600,TPM_RC_7 = 0x700,TPM_RC_8 = 0x800,TPM_RC_9 = 0x900,TPM_RC_A = 0xA00,TPM_RC_B = 0xB00,TPM_RC_C = 0xC00,TPM_RC_D = 0xD00,TPM_RC_E = 0xE00,TPM_RC_F = 0xF00,TPM_RC_N_MASK = 0xF00,TPM_CLOCK_COARSE_SLOWER = 0xFFFFFFFD,TPM_CLOCK_MEDIUM_SLOWER = 0xFFFFFFFE,TPM_CLOCK_FINE_SLOWER = 0xFFFFFFFF,TPM_CLOCK_NO_CHANGE = 0x0,TPM_CLOCK_FINE_FASTER = 0x1,TPM_CLOCK_MEDIUM_FASTER = 0x2,TPM_CLOCK_COARSE_FASTER = 0x3,TPM_EO_EQ = 0x0,TPM_EO_NEQ = 0x1,TPM_EO_SIGNED_GT = 0x2,TPM_EO_UNSIGNED_GT = 0x3,TPM_EO_SIGNED_LT = 0x4,TPM_EO_UNSIGNED_LT = 0x5,TPM_EO_SIGNED_GE = 0x6,TPM_EO_UNSIGNED_GE = 0x7,TPM_EO_SIGNED_LE = 0x8,TPM_EO_UNSIGNED_LE = 0x9,TPM_EO_BITSET = 0xA,TPM_EO_BITCLEAR = 0xB,TPM_ST_RSP_COMMAND = 0xC4,TPM_ST_NULL = 0x8000,TPM_ST_NO_SESSIONS = 0x8001,TPM_ST_SESSIONS = 0x8002,TPM_ST_ATTEST_NV = 0x8014,TPM_ST_ATTEST_COMMAND_AUDIT = 0x8015,TPM_ST_ATTEST_SESSION_AUDIT = 0x8016,TPM_ST_ATTEST_CERTIFY = 0x8017,TPM_ST_ATTEST_QUOTE = 0x8018,TPM_ST_ATTEST_TIME = 0x8019,TPM_ST_ATTEST_CREATION = 0x801A,TPM_ST_CREATION = 0x8021,TPM_ST_VERIFIED = 0x8022,TPM_ST_AUTH_SECRET = 0x8023,TPM_ST_HASHCHECK = 0x8024,TPM_ST_AUTH_SIGNED = 0x8025,TPM_ST_FU_MANIFEST = 0x8029,TPM_SU_CLEAR = 0x0,TPM_SU_STATE = 0x1,TPM_SE_HMAC = 0x0,TPM_SE_POLICY = 0x1,TPM_SE_TRIAL = 0x3,TPM_CAP_FIRST = 0x0,TPM_CAP_ALGS = 0x0,TPM_CAP_HANDLES = 0x1,TPM_CAP_COMMANDS = 0x2,TPM_CAP_PP_COMMANDS = 0x3,TPM_CAP_AUDIT_COMMANDS = 0x4,TPM_CAP_PCRS = 0x5,TPM_CAP_TPM_PROPERTIES = 0x6,TPM_CAP_PCR_PROPERTIES = 0x7,TPM_CAP_ECC_CURVES = 0x8,TPM_CAP_LAST = 0x8,TPM_CAP_VENDOR_PROPERTY = 0x100,TPM_PT_NONE = 0x0,};
typedef struct _DE33D1AEE49A1BD9DBDBFDB8B88E9FBC MAC_ADDR_DEVICE_PATH;
typedef struct _D8C1EB4E91D1F6F56C646C5A60CD8156 MBCE_SYSTEM_RESERVED;
typedef struct _9FC8A72A735B8C834CE9E22C02A94C15 MBR_PARTITION_RECORD;
typedef struct _64EA12DCB4C736810A8DF8EE50AB484E NT_PEI_LOAD_FILE_PPI;
typedef struct _19F190913E875776DB98D900DE592887 PAL_CACHE_CHECK_INFO;
typedef struct _180AF0FF73D9B657F0CEB8E21576AB99 PAL_CACHE_PROTECTION;
typedef struct _2048CF864A4EE2DE1F0239C724DBAEC4 PAL_PERFORMANCE_INFO;
typedef CONSOLE_CURSOR_INFO *PCONSOLE_CURSOR_INFO;
typedef struct _EFI_ISA_HC_PROTOCOL *PEFI_ISA_HC_PROTOCOL;
typedef struct _PERFORMANCE_PROTOCOL PERFORMANCE_PROTOCOL;
typedef struct _PS2_CONN_DEVICE_PATH PS2_CONN_DEVICE_PATH;
typedef struct s_pxe_db_get_init_info PXE_DB_GET_INIT_INFO;
typedef struct _RMC_CONN_DEVICE_PATH RMC_CONN_DEVICE_PATH;
typedef struct _DDE64AD3B32E108F904CF3E61827FD1C S3_PERFORMANCE_TABLE;
typedef struct _C06ADBDF6130E5C3AE44F56711A7C5D0 SAL_SET_VECTORS_CS_N;
typedef struct _1D71F8E09FA05ED6FAA2CBB8B3F79E1E SMBIOS_STRUCTURE_HDR;
typedef struct _5390CCC7619F965D278579BBB9B5F30C SMBIOS_TABLE_TYPE126;
typedef struct _5390CCC7619F965D278579BBB9B5F30C SMBIOS_TABLE_TYPE127;
typedef struct _27D99BE9B367911B3417445DC5CDA8F6 SMM_PERF_COMMUNICATE;
typedef struct _D7CA5D2C4B72158031401C170D561CD4 STATEMENT_ERROR_INFO;
typedef struct _D0088FB1FCC4339BF6C5684351F5FC66 TPM12_NV_DATA_PUBLIC;
typedef struct _59D4D00EB1396467F8D73DECDB6BC523 TPM12_PCR_INFO_SHORT;
typedef struct _BB85BC0F248C542450F051D797F47F58 TPM2B_PUBLIC_KEY_RSA;
typedef struct _A19F19203AC5E3E31E03913FA913E042 TPM2B_SENSITIVE_DATA;
typedef struct _84188816839037F3F7A96E0E08AFF831 TPM2_RESPONSE_HEADER;
typedef struct _3A5AA40A7162941AAC6EA924D537E844 TPMS_CAPABILITY_DATA;
typedef struct _A8B12E604CDA1E20D8FEE87F3D46AD69 TPMS_KEYEDHASH_PARMS;
typedef struct _D9D8E9C80B3C6500CC9032FB44853F01 TPMS_NV_CERTIFY_INFO;
typedef struct _3F7F60ADCAB3A6A65D69A9D7B989FE49 TPMS_SIGNATURE_ECDSA;
typedef struct _B3EA06631073B7989159535C953318FD TPMS_SYMCIPHER_PARMS;
typedef struct _9180315BD58C2D171726BCABE450AE98 TPMS_TAGGED_PROPERTY;
typedef struct tdTPM_ASYM_CA_CONTENTS TPM_ASYM_CA_CONTENTS;
typedef struct tdTPM_CAP_VERSION_INFO TPM_CAP_VERSION_INFO;
typedef struct tdTPM_EK_BLOB_ACTIVATE TPM_EK_BLOB_ACTIVATE;
typedef struct tdTPM_MIGRATIONKEYAUTH TPM_MIGRATIONKEYAUTH;
typedef struct tdTPM_TRANSPORT_LOG_IN TPM_TRANSPORT_LOG_IN;
typedef struct tdTPM_TRANSPORT_PUBLIC TPM_TRANSPORT_PUBLIC;
typedef union _628C55448F91523F11548532F2D17CC9 UDP_COMPLETION_TOKEN;
typedef struct _USB_PORT_DEVICE_PATH USB_PORT_DEVICE_PATH;
typedef struct _9A2784FD5678447EB3DE469C65F627C1 USB_WWID_DEVICE_PATH;
typedef struct _18B3A86D0733C3A21CCF2F86BC53F436 VARIABLE_INDEX_TABLE;
enum _EFI_SMBUS_OPERATION {EfiSmbusQuickRead = 0x0,EfiSmbusQuickWrite = 0x1,EfiSmbusReceiveByte = 0x2,EfiSmbusSendByte = 0x3,EfiSmbusReadByte = 0x4,EfiSmbusWriteByte = 0x5,EfiSmbusReadWord = 0x6,EfiSmbusWriteWord = 0x7,EfiSmbusReadBlock = 0x8,EfiSmbusWriteBlock = 0x9,EfiSmbusProcessCall = 0xA,EfiSmbusBWBRProcessCall = 0xB,};
enum _EFI_USBFN_PORT_TYPE {EfiUsbUnknownPort = 0x0,EfiUsbStandardDownstreamPort = 0x1,EfiUsbChargingDownstreamPort = 0x2,EfiUsbDedicatedChargingPort = 0x3,EfiUsbInvalidDedicatedChargingPort = 0x4,};
typedef struct _194FA9FA22B5ACAE94C18533FEF75733 ATAPI_IDENTIFY_DATA;
typedef struct _87288635DCB7885A0BDA590380E7B1CF BBS_BBS_DEVICE_PATH;
struct CONSOLE_CURSOR_INFO;
typedef struct _A948394FC790D9048ECA290EEF4598AA DNS_RESOURCE_RECORD;
typedef struct _AC109833D694E6F23A8B22EE40DF486D EFI_80211_SCAN_DATA;
typedef struct _F4169FCFB32B1326C8F7F00940954AC9 EFI_ACPI_DATA_TABLE;
typedef struct _41A2EC42EC7C63F3CC0A9F189777A6A6 EFI_ACPI_SDT_HEADER;
typedef struct _4335EF5DE1507A30C4F68F5E4266EBBA EFI_ARP_CONFIG_DATA;
typedef struct _4D869B13F060BA3FEE65879E2810998E EFI_BLOCK_IO2_TOKEN;
typedef struct _A60290E23BD6DC3E24E5B4BC10DBFE53 EFI_CACHE_INIT_DATA;
typedef struct _C5A09CAA6159B78B523702900374C16E EFI_CPU_DATA_RECORD;
typedef struct _30FFE48E89C138C7B76B568840ACED38 EFI_DHCP4_MODE_DATA;
typedef struct _3C9F44A6BA0669D2A307E9D45A380595 EFI_DHCP6_MODE_DATA;
typedef struct _3346E7C63FC5458160B58CD8CA56F035 EFI_DISPLAY_CAPSULE;
typedef struct _EFI_EAPOL_PORT_INFO EFI_EAPOL_PORT_INFO;
typedef struct _47D66F58E5F6426F5B779F0231FFCB5E EFI_EXP_BASE10_DATA;
typedef struct _9FBD256D3DD09739BCE6303D18E9A305 EFI_FFS_FILE_HEADER;
typedef struct _EFI_HII_GLYPH_BLOCK EFI_HII_GLYPH_BLOCK;
typedef struct _7981A5DD16C29078DF49F0E5D2B4D437 EFI_HII_HANDLE_PACK;
typedef struct _EFI_HII_IMAGE_BLOCK EFI_HII_IMAGE_BLOCK;
typedef struct _9B83AE6122FBE22D8F29CEDEDFBDA90F EFI_HII_PACK_HEADER;
typedef struct _165CEA13633C6239E6601DDEAE0E5013 EFI_HII_STRING_PACK;
typedef struct _871539A1159CE24A389CEFB2F5F99856 EFI_HII_UPDATE_DATA;
typedef struct _701FE7AFA81149B1EC002359B3E8F6D6 EFI_HOB_MEMORY_POOL;
typedef struct _EFI_I2C_IO_PROTOCOL EFI_I2C_IO_PROTOCOL;
typedef struct _EFI_IFR_BITWISE_AND EFI_IFR_BITWISE_AND;
typedef struct _EFI_IFR_BITWISE_NOT EFI_IFR_BITWISE_NOT;
typedef struct _EFI_IFR_CONDITIONAL EFI_IFR_CONDITIONAL;
typedef struct _EFI_IFR_GRAY_OUT_IF EFI_IFR_GRAY_OUT_IF;
typedef struct _EFI_IFR_GUID_BANNER EFI_IFR_GUID_BANNER;
typedef struct _EFI_IFR_SHIFT_RIGHT EFI_IFR_SHIFT_RIGHT;
typedef struct _EFI_IFR_STRING_REF1 EFI_IFR_STRING_REF1;
typedef struct _EFI_IFR_STRING_REF2 EFI_IFR_STRING_REF2;
typedef struct _EFI_IFR_SUPPRESS_IF EFI_IFR_SUPPRESS_IF;
typedef struct _5F6010C342AD7CC739C377FA23C7A0BA EFI_INTER_LINK_DATA;
typedef struct _A1E1C92957F807A48DE24E826B76A9ED EFI_IP4_CONFIG_DATA;
typedef struct _97E249F812B4D790FE9B3BA3EEE14A5A EFI_IP4_ROUTE_TABLE;
typedef struct _1535F7B86AE88BCB9B997AA9482B66E8 EFI_IP6_CONFIG_DATA;
typedef struct _650E6C9062E0E6739EB2A4F1DB76B3FA EFI_IP6_ROUTE_TABLE;
typedef struct _EFI_IPSEC2_PROTOCOL EFI_IPSEC2_PROTOCOL;
typedef union _556FD41A89D283FD449F7AA0EBA26D73 EFI_IPSEC_ALGO_INFO;
typedef struct _EFI_IP_ADDRESS_INFO EFI_IP_ADDRESS_INFO;
typedef struct _EFI_ISA_HC_PROTOCOL EFI_ISA_HC_PROTOCOL;
typedef struct _EFI_ISA_IO_PROTOCOL EFI_ISA_IO_PROTOCOL;
typedef struct _72333E2A38D9568EE37516DC8406F6FE EFI_KMS_CLIENT_INFO;
typedef union _72DB0F79E0951D75542C31FE649E11C3 EFI_MP_HEALTH_FLAGS;
typedef struct _7CFE5BD1D71ADD32B795663C2C70F2A7 EFI_MP_PROC_CONTEXT;
typedef struct _EFI_MTFTP4_PROTOCOL EFI_MTFTP4_PROTOCOL;
typedef struct _EFI_MTFTP6_PROTOCOL EFI_MTFTP6_PROTOCOL;
typedef struct _2703643F819FDE7BAF49055ABA177DC3 EFI_PARTITION_ENTRY;
typedef struct _0687BFFC755475C647C041DCC8866A0C EFI_PCIE_ERROR_DATA;
typedef struct _EFI_PCI_IO_PROTOCOL EFI_PCI_IO_PROTOCOL;
typedef struct _EFI_PEI_CAPSULE_PPI EFI_PEI_CAPSULE_PPI;
typedef void *EFI_PEI_FILE_HANDLE;
typedef struct _EFI_PEI_FIND_FV_PPI EFI_PEI_FIND_FV_PPI;
typedef struct _EFI_PEI_PCI_CFG_PPI EFI_PEI_PCI_CFG_PPI;
typedef struct _EFI_PRINT2_PROTOCOL EFI_PRINT2_PROTOCOL;
typedef struct _DDB859AD2652ECFFF12EB6BF2AD08988 EFI_SCSI_SENSE_DATA;
typedef struct _66E8D7E36AC65E05F7A2229148E617E4 EFI_SHELL_FILE_INFO;
typedef struct _2DF7380EAF36015AF84A472A3B0FBE42 EFI_SHELL_INTERFACE;
typedef struct _EFI_SMBIOS_PROTOCOL EFI_SMBIOS_PROTOCOL;
typedef struct _F13EC32AD861012C67EEDC777C641229 EFI_SMM_CPU_STATE32;
typedef struct _B33C3DDC8B87C2920AB40FB5B503E693 EFI_SMM_CPU_STATE64;
typedef struct _3DEF65287BC28B387D1B9E1FF8067D1D EFI_TE_IMAGE_HEADER;
typedef struct _7A14E74943437026682A920021B1FFBF EFI_TPM2_ACPI_TABLE;
typedef struct _EFI_UGA_IO_PROTOCOL EFI_UGA_IO_PROTOCOL;
typedef union _DF7E6158CD23297370340929CD2051C8 EFI_UGA_PIXEL_UNION;
typedef struct _8CEB6B41CF9D90E13F423B312D2B82C1 EFI_USB_CONFIG_INFO;
typedef struct _6C2A3174FED6E681FAF32885410D9EC5 EFI_USB_DEVICE_INFO;
typedef struct _EFI_USB_HC_PROTOCOL EFI_USB_HC_PROTOCOL;
typedef struct _EFI_USB_IO_PROTOCOL EFI_USB_IO_PROTOCOL;
typedef struct _EAB02E269A14A57FD4134AF1A62FF8F7 EFI_USB_PORT_STATUS;
typedef void *EFI_USER_INFO_CBEFF;
typedef struct _706EAF03690DB7D8F4777AD8723438A1 EFI_USER_INFO_TABLE;
typedef struct _2BD7C335F0DD895A4E1D3C8C0D32D59C EFI_VERSION_SECTION;
typedef struct _B0583D655AE852CB61423C290C3414FF GAUGE_DATA_ENTRY_EX;
typedef struct _8A4657480833B86B53740A22F93D4BF3 IP4_ICMP_ERROR_HEAD;
typedef struct _86009F4907A5EB1C61AA73D0D407BD18 IP4_ICMP_QUERY_HEAD;
typedef struct _94DE4B27E8685D7ACA16B7FA23BEF94E IP6_ICMP_ERROR_HEAD;
typedef struct _3774CDDC3C27E321FA545B5D6D5988FB LEGACY_DEVICE_FLAGS;
typedef union _B9B6CC471BCB7F4A305FC2D80D0AA4C0 LOCAL_APIC_ICR_HIGH;
typedef union _13B2187B9E87DE389FB12248DFED0432 LOCAL_APIC_LVT_LINT;
typedef union _9A8860F6C14A61B836CF024812302798 LOCAL_APIC_MSI_DATA;
enum MACRO_CAPSULE_BLOCK {CAPSULE_BLOCK_DESCRIPTOR_SIGNATURE = 1396982339,};
enum MACRO_DEVICE_SERIAL {DEVICE_SERIAL_MODE_NORMAL = 0x0,DEVICE_SERIAL_MODE_IRDA = 0x1,DEVICE_SERIAL_MODE_ASK_IR = 0x2,DEVICE_SERIAL_MODE_DUPLEX_HALF = 0x0,DEVICE_SERIAL_MODE_DUPLEX_FULL = 0x10,DEVICE_PARALLEL_MODE_MODE_OUTPUT_ONLY = 0x0,DEVICE_PARALLEL_MODE_MODE_BIDIRECTIONAL = 0x1,DEVICE_PARALLEL_MODE_MODE_EPP = 0x2,DEVICE_PARALLEL_MODE_MODE_ECP = 0x3,};
enum MACRO_EFI_ACPI_DBG2 {EFI_ACPI_DBG2_DEBUG_DEVICE_INFORMATION_STRUCT_REVISION = 0x0,EFI_ACPI_DBG2_PORT_TYPE_SERIAL = 0x8000,EFI_ACPI_DBG2_PORT_SUBTYPE_SERIAL_FULL_16550 = 0x0,EFI_ACPI_DBG2_PORT_SUBTYPE_SERIAL_16550_SUBSET_COMPATIBLE_WITH_MS_DBGP_SPEC = 0x1,EFI_ACPI_DBG2_PORT_TYPE_1394 = 0x8001,EFI_ACPI_DBG2_PORT_SUBTYPE_1394_STANDARD = 0x0,EFI_ACPI_DBG2_PORT_TYPE_USB = 0x8002,EFI_ACPI_DBG2_PORT_SUBTYPE_USB_XHCI = 0x0,EFI_ACPI_DBG2_PORT_SUBTYPE_USB_EHCI = 0x1,EFI_ACPI_DBG2_PORT_TYPE_NET = 0x8003,EFI_ACPI_DEBUG_PORT_2_TABLE_REVISION = 0x0,EFI_ACPI_DEBUG_PORT_TABLE_REVISION = 0x1,EFI_ACPI_DBGP_INTERFACE_TYPE_FULL_16550 = 0x0,EFI_ACPI_DBGP_INTERFACE_TYPE_16550_SUBSET_COMPATIBLE_WITH_MS_DBGP_SPEC = 0x1,};
enum MACRO_EFI_ACPI_GPIO {EFI_ACPI_GPIO_CONNECTION_TYPE_INTERRUPT = 0x0,EFI_ACPI_GPIO_CONNECTION_TYPE_IO = 0x1,EFI_ACPI_SERIAL_BUS_RESOURCE_TYPE_I2C = 0x1,EFI_ACPI_SERIAL_BUS_RESOURCE_TYPE_SPI = 0x2,EFI_ACPI_SERIAL_BUS_RESOURCE_TYPE_UART = 0x3,EFI_ACPI_5_0_SYSTEM_MEMORY = 0x0,EFI_ACPI_5_0_SYSTEM_IO = 0x1,EFI_ACPI_5_0_PCI_CONFIGURATION_SPACE = 0x2,EFI_ACPI_5_0_EMBEDDED_CONTROLLER = 0x3,EFI_ACPI_5_0_SMBUS = 0x4,EFI_ACPI_5_0_PLATFORM_COMMUNICATION_CHANNEL = 0xA,EFI_ACPI_5_0_FUNCTIONAL_FIXED_HARDWARE = 0x7F,EFI_ACPI_5_0_UNDEFINED = 0x0,EFI_ACPI_5_0_BYTE = 0x1,EFI_ACPI_5_0_WORD = 0x2,EFI_ACPI_5_0_DWORD = 0x3,EFI_ACPI_5_0_QWORD = 0x4,EFI_ACPI_5_0_ROOT_SYSTEM_DESCRIPTION_POINTER_REVISION = 0x2,EFI_ACPI_5_0_ROOT_SYSTEM_DESCRIPTION_TABLE_REVISION = 0x1,EFI_ACPI_5_0_EXTENDED_SYSTEM_DESCRIPTION_TABLE_REVISION = 0x1,EFI_ACPI_5_0_FIXED_ACPI_DESCRIPTION_TABLE_REVISION = 0x5,EFI_ACPI_5_0_PM_PROFILE_UNSPECIFIED = 0x0,EFI_ACPI_5_0_PM_PROFILE_DESKTOP = 0x1,EFI_ACPI_5_0_PM_PROFILE_MOBILE = 0x2,EFI_ACPI_5_0_PM_PROFILE_WORKSTATION = 0x3,EFI_ACPI_5_0_PM_PROFILE_ENTERPRISE_SERVER = 0x4,EFI_ACPI_5_0_PM_PROFILE_SOHO_SERVER = 0x5,EFI_ACPI_5_0_PM_PROFILE_APPLIANCE_PC = 0x6,EFI_ACPI_5_0_PM_PROFILE_PERFORMANCE_SERVER = 0x7,EFI_ACPI_5_0_PM_PROFILE_TABLET = 0x8,EFI_ACPI_5_0_LEGACY_DEVICES = 0x1,EFI_ACPI_5_0_8042 = 0x2,EFI_ACPI_5_0_VGA_NOT_PRESENT = 0x4,EFI_ACPI_5_0_MSI_NOT_SUPPORTED = 0x8,EFI_ACPI_5_0_PCIE_ASPM_CONTROLS = 0x10,EFI_ACPI_5_0_CMOS_RTC_NOT_PRESENT = 0x20,EFI_ACPI_5_0_WBINVD = 0x1,EFI_ACPI_5_0_WBINVD_FLUSH = 0x2,EFI_ACPI_5_0_PROC_C1 = 0x4,EFI_ACPI_5_0_P_LVL2_UP = 0x8,EFI_ACPI_5_0_PWR_BUTTON = 0x10,EFI_ACPI_5_0_SLP_BUTTON = 0x20,EFI_ACPI_5_0_FIX_RTC = 0x40,EFI_ACPI_5_0_RTC_S4 = 0x80,EFI_ACPI_5_0_TMR_VAL_EXT = 0x100,EFI_ACPI_5_0_DCK_CAP = 0x200,EFI_ACPI_5_0_RESET_REG_SUP = 0x400,EFI_ACPI_5_0_SEALED_CASE = 0x800,EFI_ACPI_5_0_HEADLESS = 0x1000,EFI_ACPI_5_0_CPU_SW_SLP = 0x2000,EFI_ACPI_5_0_PCI_EXP_WAK = 0x4000,EFI_ACPI_5_0_USE_PLATFORM_CLOCK = 0x8000,EFI_ACPI_5_0_S4_RTC_STS_VALID = 0x10000,EFI_ACPI_5_0_REMOTE_POWER_ON_CAPABLE = 0x20000,EFI_ACPI_5_0_FORCE_APIC_CLUSTER_MODEL = 0x40000,EFI_ACPI_5_0_FORCE_APIC_PHYSICAL_DESTINATION_MODE = 0x80000,EFI_ACPI_5_0_HW_REDUCED_ACPI = 0x100000,EFI_ACPI_5_0_LOW_POWER_S0_IDLE_CAPABLE = 0x200000,EFI_ACPI_5_0_FIRMWARE_ACPI_CONTROL_STRUCTURE_VERSION = 0x2,EFI_ACPI_5_0_S4BIOS_F = 0x1,EFI_ACPI_5_0_64BIT_WAKE_SUPPORTED_F = 0x2,EFI_ACPI_5_0_OSPM_64BIT_WAKE_F = 0x1,EFI_ACPI_5_0_DIFFERENTIATED_SYSTEM_DESCRIPTION_TABLE_REVISION = 0x2,EFI_ACPI_5_0_SECONDARY_SYSTEM_DESCRIPTION_TABLE_REVISION = 0x2,EFI_ACPI_5_0_MULTIPLE_APIC_DESCRIPTION_TABLE_REVISION = 0x3,EFI_ACPI_5_0_PCAT_COMPAT = 0x1,EFI_ACPI_5_0_PROCESSOR_LOCAL_APIC = 0x0,EFI_ACPI_5_0_IO_APIC = 0x1,EFI_ACPI_5_0_INTERRUPT_SOURCE_OVERRIDE = 0x2,EFI_ACPI_5_0_NON_MASKABLE_INTERRUPT_SOURCE = 0x3,EFI_ACPI_5_0_LOCAL_APIC_NMI = 0x4,EFI_ACPI_5_0_LOCAL_APIC_ADDRESS_OVERRIDE = 0x5,EFI_ACPI_5_0_IO_SAPIC = 0x6,EFI_ACPI_5_0_LOCAL_SAPIC = 0x7,EFI_ACPI_5_0_PLATFORM_INTERRUPT_SOURCES = 0x8,EFI_ACPI_5_0_PROCESSOR_LOCAL_X2APIC = 0x9,EFI_ACPI_5_0_LOCAL_X2APIC_NMI = 0xA,EFI_ACPI_5_0_GIC = 0xB,EFI_ACPI_5_0_GICD = 0xC,EFI_ACPI_5_0_LOCAL_APIC_ENABLED = 0x1,EFI_ACPI_5_0_POLARITY = 0x3,EFI_ACPI_5_0_TRIGGER_MODE = 0xC,EFI_ACPI_5_0_CPEI_PROCESSOR_OVERRIDE = 0x1,EFI_ACPI_5_0_GIC_ENABLED = 0x1,EFI_ACPI_5_0_PERFORMANCE_INTERRUPT_MODEL = 0x2,EFI_ACPI_5_0_SMART_BATTERY_DESCRIPTION_TABLE_REVISION = 0x1,EFI_ACPI_5_0_EMBEDDED_CONTROLLER_BOOT_RESOURCES_TABLE_REVISION = 0x1,EFI_ACPI_5_0_SYSTEM_RESOURCE_AFFINITY_TABLE_REVISION = 0x3,EFI_ACPI_5_0_PROCESSOR_LOCAL_APIC_SAPIC_AFFINITY = 0x0,EFI_ACPI_5_0_MEMORY_AFFINITY = 0x1,EFI_ACPI_5_0_PROCESSOR_LOCAL_X2APIC_AFFINITY = 0x2,EFI_ACPI_5_0_PROCESSOR_LOCAL_APIC_SAPIC_ENABLED = 0x1,EFI_ACPI_5_0_MEMORY_ENABLED = 0x1,EFI_ACPI_5_0_MEMORY_HOT_PLUGGABLE = 0x2,EFI_ACPI_5_0_MEMORY_NONVOLATILE = 0x4,EFI_ACPI_5_0_SYSTEM_LOCALITY_DISTANCE_INFORMATION_TABLE_REVISION = 0x1,EFI_ACPI_5_0_CORRECTED_PLATFORM_ERROR_POLLING_TABLE_REVISION = 0x1,EFI_ACPI_5_0_CPEP_PROCESSOR_APIC_SAPIC = 0x0,EFI_ACPI_5_0_MAXIMUM_SYSTEM_CHARACTERISTICS_TABLE_REVISION = 0x1,EFI_ACPI_5_0_RAS_FEATURE_TABLE_REVISION = 0x1,EFI_ACPI_5_0_RASF_PCC_COMMAND_CODE_EXECUTE_RASF_COMMAND = 0x1,EFI_ACPI_5_0_RASF_PLATFORM_RAS_CAPABILITY_HARDWARE_BASED_PATROL_SCRUB_SUPPOTED = 0x1,EFI_ACPI_5_0_RASF_PLATFORM_RAS_CAPABILITY_HARDWARE_BASED_PATROL_SCRUB_SUPPOTED_AND_EXPOSED_TO_SOFTWARE = 0x2,EFI_ACPI_5_0_RASF_PATROL_SCRUB_COMMAND_GET_PATROL_PARAMETERS = 0x1,EFI_ACPI_5_0_RASF_PATROL_SCRUB_COMMAND_START_PATROL_SCRUBBER = 0x2,EFI_ACPI_5_0_RASF_PATROL_SCRUB_COMMAND_STOP_PATROL_SCRUBBER = 0x3,EFI_ACPI_5_0_MEMORY_POWER_STATE_TABLE_REVISION = 0x1,EFI_ACPI_5_0_MPST_PCC_COMMAND_CODE_EXECUTE_MPST_COMMAND = 0x3,EFI_ACPI_5_0_MPST_MEMORY_POWER_COMMAND_GET_MEMORY_POWER_STATE = 0x1,EFI_ACPI_5_0_MPST_MEMORY_POWER_COMMAND_SET_MEMORY_POWER_STATE = 0x2,EFI_ACPI_5_0_MPST_MEMORY_POWER_COMMAND_GET_AVERAGE_POWER_CONSUMED = 0x3,EFI_ACPI_5_0_MPST_MEMORY_POWER_COMMAND_GET_MEMORY_ENERGY_CONSUMED = 0x4,EFI_ACPI_5_0_MPST_MEMORY_POWER_STRUCTURE_FLAG_ENABLE = 0x1,EFI_ACPI_5_0_MPST_MEMORY_POWER_STRUCTURE_FLAG_POWER_MANAGED = 0x2,EFI_ACPI_5_0_MPST_MEMORY_POWER_STRUCTURE_FLAG_HOT_PLUGGABLE = 0x4,EFI_ACPI_5_0_MPST_MEMORY_POWER_STATE_CHARACTERISTICS_STRUCTURE_FLAG_MEMORY_CONTENT_PRESERVED = 0x1,EFI_ACPI_5_0_MPST_MEMORY_POWER_STATE_CHARACTERISTICS_STRUCTURE_FLAG_AUTONOMOUS_MEMORY_POWER_STATE_ENTRY = 0x2,EFI_ACPI_5_0_MPST_MEMORY_POWER_STATE_CHARACTERISTICS_STRUCTURE_FLAG_AUTONOMOUS_MEMORY_POWER_STATE_EXIT = 0x4,EFI_ACPI_5_0_MEMORY_TOPOLOGY_TABLE_REVISION = 0x1,EFI_ACPI_5_0_PMMT_MEMORY_AGGREGATOR_DEVICE_TYPE_SOCKET = 0x1,EFI_ACPI_5_0_PMMT_MEMORY_AGGREGATOR_DEVICE_TYPE_MEMORY_CONTROLLER = 0x2,EFI_ACPI_5_0_PMMT_MEMORY_AGGREGATOR_DEVICE_TYPE_DIMM = 0x3,EFI_ACPI_5_0_BOOT_GRAPHICS_RESOURCE_TABLE_REVISION = 0x1,EFI_ACPI_5_0_BGRT_VERSION = 0x1,EFI_ACPI_5_0_BGRT_STATUS_NOT_DISPLAYED = 0x0,EFI_ACPI_5_0_BGRT_STATUS_DISPLAYED = 0x1,EFI_ACPI_5_0_BGRT_STATUS_INVALID = 0x0,EFI_ACPI_5_0_BGRT_STATUS_VALID = 0x1,EFI_ACPI_5_0_BGRT_IMAGE_TYPE_BMP = 0x0,EFI_ACPI_5_0_FIRMWARE_PERFORMANCE_DATA_TABLE_REVISION = 0x1,EFI_ACPI_5_0_FPDT_RECORD_TYPE_FIRMWARE_BASIC_BOOT_POINTER = 0x0,EFI_ACPI_5_0_FPDT_RECORD_TYPE_S3_PERFORMANCE_TABLE_POINTER = 0x1,EFI_ACPI_5_0_FPDT_RECORD_REVISION_FIRMWARE_BASIC_BOOT_POINTER = 0x1,EFI_ACPI_5_0_FPDT_RECORD_REVISION_S3_PERFORMANCE_TABLE_POINTER = 0x1,EFI_ACPI_5_0_FPDT_RUNTIME_RECORD_TYPE_S3_RESUME = 0x0,EFI_ACPI_5_0_FPDT_RUNTIME_RECORD_TYPE_S3_SUSPEND = 0x1,EFI_ACPI_5_0_FPDT_RUNTIME_RECORD_TYPE_FIRMWARE_BASIC_BOOT = 0x2,EFI_ACPI_5_0_FPDT_RUNTIME_RECORD_REVISION_S3_RESUME = 0x1,EFI_ACPI_5_0_FPDT_RUNTIME_RECORD_REVISION_S3_SUSPEND = 0x1,EFI_ACPI_5_0_FPDT_RUNTIME_RECORD_REVISION_FIRMWARE_BASIC_BOOT = 0x2,EFI_ACPI_5_0_FPDT_BOOT_PERFORMANCE_TABLE_SIGNATURE = 0x54504246,EFI_ACPI_5_0_FPDT_S3_PERFORMANCE_TABLE_SIGNATURE = 0x54503353,EFI_ACPI_5_0_GENERIC_TIMER_DESCRIPTION_TABLE_REVISION = 0x1,EFI_ACPI_5_0_GTDT_GLOBAL_FLAG_MEMORY_MAPPED_BLOCK_PRESENT = 0x1,EFI_ACPI_5_0_GTDT_GLOBAL_FLAG_INTERRUPT_MODE = 0x2,EFI_ACPI_5_0_GTDT_TIMER_FLAG_TIMER_INTERRUPT_MODE = 0x1,EFI_ACPI_5_0_GTDT_TIMER_FLAG_TIMER_INTERRUPT_POLARITY = 0x2,EFI_ACPI_5_0_BOOT_ERROR_RECORD_TABLE_REVISION = 0x1,EFI_ACPI_5_0_ERROR_SEVERITY_CORRECTABLE = 0x0,EFI_ACPI_5_0_ERROR_SEVERITY_FATAL = 0x1,EFI_ACPI_5_0_ERROR_SEVERITY_CORRECTED = 0x2,EFI_ACPI_5_0_ERROR_SEVERITY_NONE = 0x3,EFI_ACPI_5_0_GENERIC_ERROR_DATA_ENTRY_REVISION = 0x201,EFI_ACPI_5_0_HARDWARE_ERROR_SOURCE_TABLE_REVISION = 0x1,EFI_ACPI_5_0_IA32_ARCHITECTURE_MACHINE_CHECK_EXCEPTION = 0x0,EFI_ACPI_5_0_IA32_ARCHITECTURE_CORRECTED_MACHINE_CHECK = 0x1,EFI_ACPI_5_0_IA32_ARCHITECTURE_NMI_ERROR = 0x2,EFI_ACPI_5_0_PCI_EXPRESS_ROOT_PORT_AER = 0x6,EFI_ACPI_5_0_PCI_EXPRESS_DEVICE_AER = 0x7,EFI_ACPI_5_0_PCI_EXPRESS_BRIDGE_AER = 0x8,EFI_ACPI_5_0_GENERIC_HARDWARE_ERROR = 0x9,EFI_ACPI_5_0_ERROR_SOURCE_FLAG_FIRMWARE_FIRST = 0x1,EFI_ACPI_5_0_ERROR_SOURCE_FLAG_GLOBAL = 0x2,EFI_ACPI_5_0_IA32_ARCHITECTURE_MACHINE_CHECK_ERROR_DATA_FORMAT_IA32 = 0x0,EFI_ACPI_5_0_IA32_ARCHITECTURE_MACHINE_CHECK_ERROR_DATA_FORMAT_INTEL64 = 0x1,EFI_ACPI_5_0_IA32_ARCHITECTURE_MACHINE_CHECK_ERROR_DATA_FORMAT_AMD64 = 0x2,EFI_ACPI_5_0_HARDWARE_ERROR_NOTIFICATION_POLLED = 0x0,EFI_ACPI_5_0_HARDWARE_ERROR_NOTIFICATION_EXTERNAL_INTERRUPT = 0x1,EFI_ACPI_5_0_HARDWARE_ERROR_NOTIFICATION_LOCAL_INTERRUPT = 0x2,EFI_ACPI_5_0_HARDWARE_ERROR_NOTIFICATION_SCI = 0x3,EFI_ACPI_5_0_HARDWARE_ERROR_NOTIFICATION_NMI = 0x4,EFI_ACPI_5_0_ERROR_RECORD_SERIALIZATION_TABLE_REVISION = 0x1,EFI_ACPI_5_0_ERST_BEGIN_WRITE_OPERATION = 0x0,EFI_ACPI_5_0_ERST_BEGIN_READ_OPERATION = 0x1,EFI_ACPI_5_0_ERST_BEGIN_CLEAR_OPERATION = 0x2,EFI_ACPI_5_0_ERST_END_OPERATION = 0x3,EFI_ACPI_5_0_ERST_SET_RECORD_OFFSET = 0x4,EFI_ACPI_5_0_ERST_EXECUTE_OPERATION = 0x5,EFI_ACPI_5_0_ERST_CHECK_BUSY_STATUS = 0x6,EFI_ACPI_5_0_ERST_GET_COMMAND_STATUS = 0x7,EFI_ACPI_5_0_ERST_GET_RECORD_IDENTIFIER = 0x8,EFI_ACPI_5_0_ERST_SET_RECORD_IDENTIFIER = 0x9,EFI_ACPI_5_0_ERST_GET_RECORD_COUNT = 0xA,EFI_ACPI_5_0_ERST_BEGIN_DUMMY_WRITE_OPERATION = 0xB,EFI_ACPI_5_0_ERST_GET_ERROR_LOG_ADDRESS_RANGE = 0xD,EFI_ACPI_5_0_ERST_GET_ERROR_LOG_ADDRESS_RANGE_LENGTH = 0xE,EFI_ACPI_5_0_ERST_GET_ERROR_LOG_ADDRESS_RANGE_ATTRIBUTES = 0xF,EFI_ACPI_5_0_ERST_STATUS_SUCCESS = 0x0,EFI_ACPI_5_0_ERST_STATUS_NOT_ENOUGH_SPACE = 0x1,EFI_ACPI_5_0_ERST_STATUS_HARDWARE_NOT_AVAILABLE = 0x2,EFI_ACPI_5_0_ERST_STATUS_FAILED = 0x3,EFI_ACPI_5_0_ERST_STATUS_RECORD_STORE_EMPTY = 0x4,EFI_ACPI_5_0_ERST_STATUS_RECORD_NOT_FOUND = 0x5,EFI_ACPI_5_0_ERST_READ_REGISTER = 0x0,EFI_ACPI_5_0_ERST_READ_REGISTER_VALUE = 0x1,EFI_ACPI_5_0_ERST_WRITE_REGISTER = 0x2,EFI_ACPI_5_0_ERST_WRITE_REGISTER_VALUE = 0x3,EFI_ACPI_5_0_ERST_NOOP = 0x4,EFI_ACPI_5_0_ERST_LOAD_VAR1 = 0x5,EFI_ACPI_5_0_ERST_LOAD_VAR2 = 0x6,EFI_ACPI_5_0_ERST_STORE_VAR1 = 0x7,EFI_ACPI_5_0_ERST_ADD = 0x8,EFI_ACPI_5_0_ERST_SUBTRACT = 0x9,EFI_ACPI_5_0_ERST_ADD_VALUE = 0xA,EFI_ACPI_5_0_ERST_SUBTRACT_VALUE = 0xB,EFI_ACPI_5_0_ERST_STALL = 0xC,EFI_ACPI_5_0_ERST_STALL_WHILE_TRUE = 0xD,EFI_ACPI_5_0_ERST_SKIP_NEXT_INSTRUCTION_IF_TRUE = 0xE,EFI_ACPI_5_0_ERST_GOTO = 0xF,EFI_ACPI_5_0_ERST_SET_SRC_ADDRESS_BASE = 0x10,EFI_ACPI_5_0_ERST_SET_DST_ADDRESS_BASE = 0x11,EFI_ACPI_5_0_ERST_MOVE_DATA = 0x12,EFI_ACPI_5_0_ERST_PRESERVE_REGISTER = 0x1,EFI_ACPI_5_0_ERROR_INJECTION_TABLE_REVISION = 0x1,EFI_ACPI_5_0_EINJ_BEGIN_INJECTION_OPERATION = 0x0,EFI_ACPI_5_0_EINJ_GET_TRIGGER_ERROR_ACTION_TABLE = 0x1,EFI_ACPI_5_0_EINJ_SET_ERROR_TYPE = 0x2,EFI_ACPI_5_0_EINJ_GET_ERROR_TYPE = 0x3,EFI_ACPI_5_0_EINJ_END_OPERATION = 0x4,EFI_ACPI_5_0_EINJ_EXECUTE_OPERATION = 0x5,EFI_ACPI_5_0_EINJ_CHECK_BUSY_STATUS = 0x6,EFI_ACPI_5_0_EINJ_GET_COMMAND_STATUS = 0x7,EFI_ACPI_5_0_EINJ_TRIGGER_ERROR = 0xFF,EFI_ACPI_5_0_EINJ_STATUS_SUCCESS = 0x0,EFI_ACPI_5_0_EINJ_STATUS_UNKNOWN_FAILURE = 0x1,EFI_ACPI_5_0_EINJ_STATUS_INVALID_ACCESS = 0x2,EFI_ACPI_5_0_EINJ_ERROR_PROCESSOR_CORRECTABLE = 0x1,EFI_ACPI_5_0_EINJ_ERROR_PROCESSOR_UNCORRECTABLE_NONFATAL = 0x2,EFI_ACPI_5_0_EINJ_ERROR_PROCESSOR_UNCORRECTABLE_FATAL = 0x4,EFI_ACPI_5_0_EINJ_ERROR_MEMORY_CORRECTABLE = 0x8,EFI_ACPI_5_0_EINJ_ERROR_MEMORY_UNCORRECTABLE_NONFATAL = 0x10,EFI_ACPI_5_0_EINJ_ERROR_MEMORY_UNCORRECTABLE_FATAL = 0x20,EFI_ACPI_5_0_EINJ_ERROR_PCI_EXPRESS_CORRECTABLE = 0x40,EFI_ACPI_5_0_EINJ_ERROR_PCI_EXPRESS_UNCORRECTABLE_NONFATAL = 0x80,EFI_ACPI_5_0_EINJ_ERROR_PCI_EXPRESS_UNCORRECTABLE_FATAL = 0x100,EFI_ACPI_5_0_EINJ_ERROR_PLATFORM_CORRECTABLE = 0x200,EFI_ACPI_5_0_EINJ_ERROR_PLATFORM_UNCORRECTABLE_NONFATAL = 0x400,EFI_ACPI_5_0_EINJ_ERROR_PLATFORM_UNCORRECTABLE_FATAL = 0x800,EFI_ACPI_5_0_EINJ_READ_REGISTER = 0x0,EFI_ACPI_5_0_EINJ_READ_REGISTER_VALUE = 0x1,EFI_ACPI_5_0_EINJ_WRITE_REGISTER = 0x2,EFI_ACPI_5_0_EINJ_WRITE_REGISTER_VALUE = 0x3,EFI_ACPI_5_0_EINJ_NOOP = 0x4,EFI_ACPI_5_0_EINJ_PRESERVE_REGISTER = 0x1,EFI_ACPI_5_0_PLATFORM_COMMUNICATION_CHANNEL_TABLE_REVISION = 0x1,EFI_ACPI_5_0_PCCT_FLAGS_SCI_DOORBELL = 0x1,EFI_ACPI_5_0_PCCT_SUBSPACE_TYPE_GENERIC = 0x0,EFI_ACPI_5_0_ROOT_SYSTEM_DESCRIPTION_POINTER_SIGNATURE = 0x2052545020445352,EFI_ACPI_5_0_MULTIPLE_APIC_DESCRIPTION_TABLE_SIGNATURE = 0x43495041,EFI_ACPI_5_0_BOOT_ERROR_RECORD_TABLE_SIGNATURE = 0x54524542,EFI_ACPI_5_0_BOOT_GRAPHICS_RESOURCE_TABLE_SIGNATURE = 0x54524742,EFI_ACPI_5_0_CORRECTED_PLATFORM_ERROR_POLLING_TABLE_SIGNATURE = 0x50455043,EFI_ACPI_5_0_DIFFERENTIATED_SYSTEM_DESCRIPTION_TABLE_SIGNATURE = 0x54445344,EFI_ACPI_5_0_EMBEDDED_CONTROLLER_BOOT_RESOURCES_TABLE_SIGNATURE = 0x54444345,EFI_ACPI_5_0_ERROR_INJECTION_TABLE_SIGNATURE = 0x4A4E4945,EFI_ACPI_5_0_ERROR_RECORD_SERIALIZATION_TABLE_SIGNATURE = 0x54535245,EFI_ACPI_5_0_FIXED_ACPI_DESCRIPTION_TABLE_SIGNATURE = 0x50434146,EFI_ACPI_5_0_FIRMWARE_ACPI_CONTROL_STRUCTURE_SIGNATURE = 0x53434146,EFI_ACPI_5_0_FIRMWARE_PERFORMANCE_DATA_TABLE_SIGNATURE = 0x54445046,EFI_ACPI_5_0_GENERIC_TIMER_DESCRIPTION_TABLE_SIGNATURE = 0x54445447,EFI_ACPI_5_0_HARDWARE_ERROR_SOURCE_TABLE_SIGNATURE = 0x54534548,EFI_ACPI_5_0_MEMORY_POWER_STATE_TABLE_SIGNATURE = 0x5453504D,EFI_ACPI_5_0_MAXIMUM_SYSTEM_CHARACTERISTICS_TABLE_SIGNATURE = 0x5443534D,EFI_ACPI_5_0_PLATFORM_MEMORY_TOPOLOGY_TABLE_SIGNATURE = 0x54544D50,EFI_ACPI_5_0_PERSISTENT_SYSTEM_DESCRIPTION_TABLE_SIGNATURE = 0x54445350,EFI_ACPI_5_0_ACPI_RAS_FEATURE_TABLE_SIGNATURE = 0x46534152,EFI_ACPI_5_0_ROOT_SYSTEM_DESCRIPTION_TABLE_SIGNATURE = 0x54445352,EFI_ACPI_5_0_SMART_BATTERY_SPECIFICATION_TABLE_SIGNATURE = 0x54534253,EFI_ACPI_5_0_SYSTEM_LOCALITY_INFORMATION_TABLE_SIGNATURE = 0x54494C53,EFI_ACPI_5_0_SYSTEM_RESOURCE_AFFINITY_TABLE_SIGNATURE = 0x54415253,EFI_ACPI_5_0_SECONDARY_SYSTEM_DESCRIPTION_TABLE_SIGNATURE = 0x54445353,EFI_ACPI_5_0_EXTENDED_SYSTEM_DESCRIPTION_TABLE_SIGNATURE = 0x54445358,EFI_ACPI_5_0_SIMPLE_BOOT_FLAG_TABLE_SIGNATURE = 0x544F4F42,EFI_ACPI_5_0_CORE_SYSTEM_RESOURCE_TABLE_SIGNATURE = 0x54525343,EFI_ACPI_5_0_DEBUG_PORT_2_TABLE_SIGNATURE = 0x32474244,EFI_ACPI_5_0_DEBUG_PORT_TABLE_SIGNATURE = 0x50474244,EFI_ACPI_5_0_DMA_REMAPPING_TABLE_SIGNATURE = 0x52414D44,EFI_ACPI_5_0_DYNAMIC_ROOT_OF_TRUST_FOR_MEASUREMENT_TABLE_SIGNATURE = 0x4D545244,EFI_ACPI_5_0_EVENT_TIMER_DESCRIPTION_TABLE_SIGNATURE = 0x54445445,EFI_ACPI_5_0_HIGH_PRECISION_EVENT_TIMER_TABLE_SIGNATURE = 0x54455048,EFI_ACPI_5_0_ISCSI_BOOT_FIRMWARE_TABLE_SIGNATURE = 0x54464269,EFI_ACPI_5_0_IO_VIRTUALIZATION_REPORTING_STRUCTURE_SIGNATURE = 0x53525649,EFI_ACPI_5_0_PCI_EXPRESS_MEMORY_MAPPED_CONFIGURATION_SPACE_BASE_ADDRESS_DESCRIPTION_TABLE_SIGNATURE = 0x4746434D,EFI_ACPI_5_0_MANAGEMENT_CONTROLLER_HOST_INTERFACE_TABLE_SIGNATURE = 0x4948434D,EFI_ACPI_5_0_DATA_MANAGEMENT_TABLE_SIGNATURE = 0x4D44534D,EFI_ACPI_5_0_SOFTWARE_LICENSING_TABLE_SIGNATURE = 0x43494C53,EFI_ACPI_5_0_SERIAL_PORT_CONSOLE_REDIRECTION_TABLE_SIGNATURE = 0x52435053,EFI_ACPI_5_0_SERVER_PLATFORM_MANAGEMENT_INTERFACE_TABLE_SIGNATURE = 0x494D5053,EFI_ACPI_5_0_TRUSTED_COMPUTING_PLATFORM_ALLIANCE_CAPABILITIES_TABLE_SIGNATURE = 0x41504354,EFI_ACPI_5_0_TRUSTED_COMPUTING_PLATFORM_2_TABLE_SIGNATURE = 0x324D5054,EFI_ACPI_5_0_UEFI_ACPI_DATA_TABLE_SIGNATURE = 0x49464555,EFI_ACPI_5_0_WINDOWS_ACPI_EMULATED_DEVICES_TABLE_SIGNATURE = 0x54454157,EFI_ACPI_5_0_WINDOWS_ACPI_ENLIGHTENMENT_TABLE_SIGNATURE = 0x54454157,EFI_ACPI_5_0_WATCHDOG_ACTION_TABLE_SIGNATURE = 0x54414457,EFI_ACPI_5_0_WATCHDOG_RESOURCE_TABLE_SIGNATURE = 0x54524457,EFI_ACPI_5_0_PLATFORM_BINARY_TABLE_SIGNATURE = 0x54425057,EFI_ACPI_5_1_SYSTEM_MEMORY = 0x0,EFI_ACPI_5_1_SYSTEM_IO = 0x1,EFI_ACPI_5_1_PCI_CONFIGURATION_SPACE = 0x2,EFI_ACPI_5_1_EMBEDDED_CONTROLLER = 0x3,EFI_ACPI_5_1_SMBUS = 0x4,EFI_ACPI_5_1_PLATFORM_COMMUNICATION_CHANNEL = 0xA,EFI_ACPI_5_1_FUNCTIONAL_FIXED_HARDWARE = 0x7F,EFI_ACPI_5_1_UNDEFINED = 0x0,EFI_ACPI_5_1_BYTE = 0x1,EFI_ACPI_5_1_WORD = 0x2,EFI_ACPI_5_1_DWORD = 0x3,EFI_ACPI_5_1_QWORD = 0x4,EFI_ACPI_5_1_ROOT_SYSTEM_DESCRIPTION_POINTER_REVISION = 0x2,EFI_ACPI_5_1_ROOT_SYSTEM_DESCRIPTION_TABLE_REVISION = 0x1,EFI_ACPI_5_1_EXTENDED_SYSTEM_DESCRIPTION_TABLE_REVISION = 0x1,EFI_ACPI_5_1_FIXED_ACPI_DESCRIPTION_TABLE_REVISION = 0x5,EFI_ACPI_5_1_FIXED_ACPI_DESCRIPTION_TABLE_MINOR_REVISION = 0x1,EFI_ACPI_5_1_PM_PROFILE_UNSPECIFIED = 0x0,EFI_ACPI_5_1_PM_PROFILE_DESKTOP = 0x1,EFI_ACPI_5_1_PM_PROFILE_MOBILE = 0x2,EFI_ACPI_5_1_PM_PROFILE_WORKSTATION = 0x3,EFI_ACPI_5_1_PM_PROFILE_ENTERPRISE_SERVER = 0x4,EFI_ACPI_5_1_PM_PROFILE_SOHO_SERVER = 0x5,EFI_ACPI_5_1_PM_PROFILE_APPLIANCE_PC = 0x6,EFI_ACPI_5_1_PM_PROFILE_PERFORMANCE_SERVER = 0x7,EFI_ACPI_5_1_PM_PROFILE_TABLET = 0x8,EFI_ACPI_5_1_LEGACY_DEVICES = 0x1,EFI_ACPI_5_1_8042 = 0x2,EFI_ACPI_5_1_VGA_NOT_PRESENT = 0x4,EFI_ACPI_5_1_MSI_NOT_SUPPORTED = 0x8,EFI_ACPI_5_1_PCIE_ASPM_CONTROLS = 0x10,EFI_ACPI_5_1_CMOS_RTC_NOT_PRESENT = 0x20,EFI_ACPI_5_1_ARM_PSCI_COMPLIANT = 0x1,EFI_ACPI_5_1_ARM_PSCI_USE_HVC = 0x2,EFI_ACPI_5_1_WBINVD = 0x1,EFI_ACPI_5_1_WBINVD_FLUSH = 0x2,EFI_ACPI_5_1_PROC_C1 = 0x4,EFI_ACPI_5_1_P_LVL2_UP = 0x8,EFI_ACPI_5_1_PWR_BUTTON = 0x10,EFI_ACPI_5_1_SLP_BUTTON = 0x20,EFI_ACPI_5_1_FIX_RTC = 0x40,EFI_ACPI_5_1_RTC_S4 = 0x80,EFI_ACPI_5_1_TMR_VAL_EXT = 0x100,EFI_ACPI_5_1_DCK_CAP = 0x200,EFI_ACPI_5_1_RESET_REG_SUP = 0x400,EFI_ACPI_5_1_SEALED_CASE = 0x800,EFI_ACPI_5_1_HEADLESS = 0x1000,EFI_ACPI_5_1_CPU_SW_SLP = 0x2000,EFI_ACPI_5_1_PCI_EXP_WAK = 0x4000,EFI_ACPI_5_1_USE_PLATFORM_CLOCK = 0x8000,EFI_ACPI_5_1_S4_RTC_STS_VALID = 0x10000,EFI_ACPI_5_1_REMOTE_POWER_ON_CAPABLE = 0x20000,EFI_ACPI_5_1_FORCE_APIC_CLUSTER_MODEL = 0x40000,EFI_ACPI_5_1_FORCE_APIC_PHYSICAL_DESTINATION_MODE = 0x80000,EFI_ACPI_5_1_HW_REDUCED_ACPI = 0x100000,EFI_ACPI_5_1_LOW_POWER_S0_IDLE_CAPABLE = 0x200000,EFI_ACPI_5_1_FIRMWARE_ACPI_CONTROL_STRUCTURE_VERSION = 0x2,EFI_ACPI_5_1_S4BIOS_F = 0x1,EFI_ACPI_5_1_64BIT_WAKE_SUPPORTED_F = 0x2,EFI_ACPI_5_1_OSPM_64BIT_WAKE_F = 0x1,EFI_ACPI_5_1_DIFFERENTIATED_SYSTEM_DESCRIPTION_TABLE_REVISION = 0x2,EFI_ACPI_5_1_SECONDARY_SYSTEM_DESCRIPTION_TABLE_REVISION = 0x2,EFI_ACPI_5_1_MULTIPLE_APIC_DESCRIPTION_TABLE_REVISION = 0x3,EFI_ACPI_5_1_PCAT_COMPAT = 0x1,EFI_ACPI_5_1_PROCESSOR_LOCAL_APIC = 0x0,EFI_ACPI_5_1_IO_APIC = 0x1,EFI_ACPI_5_1_INTERRUPT_SOURCE_OVERRIDE = 0x2,EFI_ACPI_5_1_NON_MASKABLE_INTERRUPT_SOURCE = 0x3,EFI_ACPI_5_1_LOCAL_APIC_NMI = 0x4,EFI_ACPI_5_1_LOCAL_APIC_ADDRESS_OVERRIDE = 0x5,EFI_ACPI_5_1_IO_SAPIC = 0x6,EFI_ACPI_5_1_LOCAL_SAPIC = 0x7,EFI_ACPI_5_1_PLATFORM_INTERRUPT_SOURCES = 0x8,EFI_ACPI_5_1_PROCESSOR_LOCAL_X2APIC = 0x9,EFI_ACPI_5_1_LOCAL_X2APIC_NMI = 0xA,EFI_ACPI_5_1_GIC = 0xB,EFI_ACPI_5_1_GICD = 0xC,EFI_ACPI_5_1_GIC_MSI_FRAME = 0xD,EFI_ACPI_5_1_GICR = 0xE,EFI_ACPI_5_1_LOCAL_APIC_ENABLED = 0x1,EFI_ACPI_5_1_POLARITY = 0x3,EFI_ACPI_5_1_TRIGGER_MODE = 0xC,EFI_ACPI_5_1_CPEI_PROCESSOR_OVERRIDE = 0x1,EFI_ACPI_5_1_GIC_ENABLED = 0x1,EFI_ACPI_5_1_PERFORMANCE_INTERRUPT_MODEL = 0x2,EFI_ACPI_5_1_VGIC_MAINTENANCE_INTERRUPT_MODE_FLAGS = 0x4,EFI_ACPI_5_1_SPI_COUNT_BASE_SELECT = 0x1,EFI_ACPI_5_1_SMART_BATTERY_DESCRIPTION_TABLE_REVISION = 0x1,EFI_ACPI_5_1_EMBEDDED_CONTROLLER_BOOT_RESOURCES_TABLE_REVISION = 0x1,EFI_ACPI_5_1_SYSTEM_RESOURCE_AFFINITY_TABLE_REVISION = 0x3,EFI_ACPI_5_1_PROCESSOR_LOCAL_APIC_SAPIC_AFFINITY = 0x0,EFI_ACPI_5_1_MEMORY_AFFINITY = 0x1,EFI_ACPI_5_1_PROCESSOR_LOCAL_X2APIC_AFFINITY = 0x2,EFI_ACPI_5_1_GICC_AFFINITY = 0x3,EFI_ACPI_5_1_PROCESSOR_LOCAL_APIC_SAPIC_ENABLED = 0x1,EFI_ACPI_5_1_MEMORY_ENABLED = 0x1,EFI_ACPI_5_1_MEMORY_HOT_PLUGGABLE = 0x2,EFI_ACPI_5_1_MEMORY_NONVOLATILE = 0x4,EFI_ACPI_5_1_GICC_ENABLED = 0x1,EFI_ACPI_5_1_SYSTEM_LOCALITY_DISTANCE_INFORMATION_TABLE_REVISION = 0x1,EFI_ACPI_5_1_CORRECTED_PLATFORM_ERROR_POLLING_TABLE_REVISION = 0x1,EFI_ACPI_5_1_CPEP_PROCESSOR_APIC_SAPIC = 0x0,EFI_ACPI_5_1_MAXIMUM_SYSTEM_CHARACTERISTICS_TABLE_REVISION = 0x1,EFI_ACPI_5_1_RAS_FEATURE_TABLE_REVISION = 0x1,EFI_ACPI_5_1_RASF_PCC_COMMAND_CODE_EXECUTE_RASF_COMMAND = 0x1,EFI_ACPI_5_1_RASF_PLATFORM_RAS_CAPABILITY_HARDWARE_BASED_PATROL_SCRUB_SUPPOTED = 0x1,EFI_ACPI_5_1_RASF_PLATFORM_RAS_CAPABILITY_HARDWARE_BASED_PATROL_SCRUB_SUPPOTED_AND_EXPOSED_TO_SOFTWARE = 0x2,EFI_ACPI_5_1_RASF_PATROL_SCRUB_COMMAND_GET_PATROL_PARAMETERS = 0x1,EFI_ACPI_5_1_RASF_PATROL_SCRUB_COMMAND_START_PATROL_SCRUBBER = 0x2,EFI_ACPI_5_1_RASF_PATROL_SCRUB_COMMAND_STOP_PATROL_SCRUBBER = 0x3,EFI_ACPI_5_1_MEMORY_POWER_STATE_TABLE_REVISION = 0x1,EFI_ACPI_5_1_MPST_PCC_COMMAND_CODE_EXECUTE_MPST_COMMAND = 0x3,EFI_ACPI_5_1_MPST_MEMORY_POWER_COMMAND_GET_MEMORY_POWER_STATE = 0x1,EFI_ACPI_5_1_MPST_MEMORY_POWER_COMMAND_SET_MEMORY_POWER_STATE = 0x2,EFI_ACPI_5_1_MPST_MEMORY_POWER_COMMAND_GET_AVERAGE_POWER_CONSUMED = 0x3,EFI_ACPI_5_1_MPST_MEMORY_POWER_COMMAND_GET_MEMORY_ENERGY_CONSUMED = 0x4,EFI_ACPI_5_1_MPST_MEMORY_POWER_STRUCTURE_FLAG_ENABLE = 0x1,EFI_ACPI_5_1_MPST_MEMORY_POWER_STRUCTURE_FLAG_POWER_MANAGED = 0x2,EFI_ACPI_5_1_MPST_MEMORY_POWER_STRUCTURE_FLAG_HOT_PLUGGABLE = 0x4,EFI_ACPI_5_1_MPST_MEMORY_POWER_STATE_CHARACTERISTICS_STRUCTURE_FLAG_MEMORY_CONTENT_PRESERVED = 0x1,EFI_ACPI_5_1_MPST_MEMORY_POWER_STATE_CHARACTERISTICS_STRUCTURE_FLAG_AUTONOMOUS_MEMORY_POWER_STATE_ENTRY = 0x2,EFI_ACPI_5_1_MPST_MEMORY_POWER_STATE_CHARACTERISTICS_STRUCTURE_FLAG_AUTONOMOUS_MEMORY_POWER_STATE_EXIT = 0x4,EFI_ACPI_5_1_MEMORY_TOPOLOGY_TABLE_REVISION = 0x1,EFI_ACPI_5_1_PMMT_MEMORY_AGGREGATOR_DEVICE_TYPE_SOCKET = 0x1,EFI_ACPI_5_1_PMMT_MEMORY_AGGREGATOR_DEVICE_TYPE_MEMORY_CONTROLLER = 0x2,EFI_ACPI_5_1_PMMT_MEMORY_AGGREGATOR_DEVICE_TYPE_DIMM = 0x3,EFI_ACPI_5_1_BOOT_GRAPHICS_RESOURCE_TABLE_REVISION = 0x1,EFI_ACPI_5_1_BGRT_VERSION = 0x1,EFI_ACPI_5_1_BGRT_STATUS_NOT_DISPLAYED = 0x0,EFI_ACPI_5_1_BGRT_STATUS_DISPLAYED = 0x1,EFI_ACPI_5_1_BGRT_IMAGE_TYPE_BMP = 0x0,EFI_ACPI_5_1_FIRMWARE_PERFORMANCE_DATA_TABLE_REVISION = 0x1,EFI_ACPI_5_1_FPDT_RECORD_TYPE_FIRMWARE_BASIC_BOOT_POINTER = 0x0,EFI_ACPI_5_1_FPDT_RECORD_TYPE_S3_PERFORMANCE_TABLE_POINTER = 0x1,EFI_ACPI_5_1_FPDT_RECORD_REVISION_FIRMWARE_BASIC_BOOT_POINTER = 0x1,EFI_ACPI_5_1_FPDT_RECORD_REVISION_S3_PERFORMANCE_TABLE_POINTER = 0x1,EFI_ACPI_5_1_FPDT_RUNTIME_RECORD_TYPE_S3_RESUME = 0x0,EFI_ACPI_5_1_FPDT_RUNTIME_RECORD_TYPE_S3_SUSPEND = 0x1,EFI_ACPI_5_1_FPDT_RUNTIME_RECORD_TYPE_FIRMWARE_BASIC_BOOT = 0x2,EFI_ACPI_5_1_FPDT_RUNTIME_RECORD_REVISION_S3_RESUME = 0x1,EFI_ACPI_5_1_FPDT_RUNTIME_RECORD_REVISION_S3_SUSPEND = 0x1,EFI_ACPI_5_1_FPDT_RUNTIME_RECORD_REVISION_FIRMWARE_BASIC_BOOT = 0x2,EFI_ACPI_5_1_FPDT_BOOT_PERFORMANCE_TABLE_SIGNATURE = 0x54504246,EFI_ACPI_5_1_FPDT_S3_PERFORMANCE_TABLE_SIGNATURE = 0x54503353,EFI_ACPI_5_1_GENERIC_TIMER_DESCRIPTION_TABLE_REVISION = 0x2,EFI_ACPI_5_1_GTDT_TIMER_FLAG_TIMER_INTERRUPT_MODE = 0x1,EFI_ACPI_5_1_GTDT_TIMER_FLAG_TIMER_INTERRUPT_POLARITY = 0x2,EFI_ACPI_5_1_GTDT_TIMER_FLAG_ALWAYS_ON_CAPABILITY = 0x4,EFI_ACPI_5_1_GTDT_GT_BLOCK = 0x0,EFI_ACPI_5_1_GTDT_SBSA_GENERIC_WATCHDOG = 0x1,EFI_ACPI_5_1_GTDT_GT_BLOCK_TIMER_FLAG_TIMER_INTERRUPT_MODE = 0x1,EFI_ACPI_5_1_GTDT_GT_BLOCK_TIMER_FLAG_TIMER_INTERRUPT_POLARITY = 0x2,EFI_ACPI_5_1_GTDT_GT_BLOCK_COMMON_FLAG_SECURE_TIMER = 0x1,EFI_ACPI_5_1_GTDT_GT_BLOCK_COMMON_FLAG_ALWAYS_ON_CAPABILITY = 0x2,EFI_ACPI_5_1_GTDT_SBSA_GENERIC_WATCHDOG_FLAG_TIMER_INTERRUPT_MODE = 0x1,EFI_ACPI_5_1_GTDT_SBSA_GENERIC_WATCHDOG_FLAG_TIMER_INTERRUPT_POLARITY = 0x2,EFI_ACPI_5_1_GTDT_SBSA_GENERIC_WATCHDOG_FLAG_SECURE_TIMER = 0x4,EFI_ACPI_5_1_BOOT_ERROR_RECORD_TABLE_REVISION = 0x1,EFI_ACPI_5_1_ERROR_SEVERITY_CORRECTABLE = 0x0,EFI_ACPI_5_1_ERROR_SEVERITY_FATAL = 0x1,EFI_ACPI_5_1_ERROR_SEVERITY_CORRECTED = 0x2,EFI_ACPI_5_1_ERROR_SEVERITY_NONE = 0x3,EFI_ACPI_5_1_GENERIC_ERROR_DATA_ENTRY_REVISION = 0x201,EFI_ACPI_5_1_HARDWARE_ERROR_SOURCE_TABLE_REVISION = 0x1,EFI_ACPI_5_1_IA32_ARCHITECTURE_MACHINE_CHECK_EXCEPTION = 0x0,EFI_ACPI_5_1_IA32_ARCHITECTURE_CORRECTED_MACHINE_CHECK = 0x1,EFI_ACPI_5_1_IA32_ARCHITECTURE_NMI_ERROR = 0x2,EFI_ACPI_5_1_PCI_EXPRESS_ROOT_PORT_AER = 0x6,EFI_ACPI_5_1_PCI_EXPRESS_DEVICE_AER = 0x7,EFI_ACPI_5_1_PCI_EXPRESS_BRIDGE_AER = 0x8,EFI_ACPI_5_1_GENERIC_HARDWARE_ERROR = 0x9,EFI_ACPI_5_1_ERROR_SOURCE_FLAG_FIRMWARE_FIRST = 0x1,EFI_ACPI_5_1_ERROR_SOURCE_FLAG_GLOBAL = 0x2,EFI_ACPI_5_1_IA32_ARCHITECTURE_MACHINE_CHECK_ERROR_DATA_FORMAT_IA32 = 0x0,EFI_ACPI_5_1_IA32_ARCHITECTURE_MACHINE_CHECK_ERROR_DATA_FORMAT_INTEL64 = 0x1,EFI_ACPI_5_1_IA32_ARCHITECTURE_MACHINE_CHECK_ERROR_DATA_FORMAT_AMD64 = 0x2,EFI_ACPI_5_1_HARDWARE_ERROR_NOTIFICATION_POLLED = 0x0,EFI_ACPI_5_1_HARDWARE_ERROR_NOTIFICATION_EXTERNAL_INTERRUPT = 0x1,EFI_ACPI_5_1_HARDWARE_ERROR_NOTIFICATION_LOCAL_INTERRUPT = 0x2,EFI_ACPI_5_1_HARDWARE_ERROR_NOTIFICATION_SCI = 0x3,EFI_ACPI_5_1_HARDWARE_ERROR_NOTIFICATION_NMI = 0x4,EFI_ACPI_5_1_ERROR_RECORD_SERIALIZATION_TABLE_REVISION = 0x1,EFI_ACPI_5_1_ERST_BEGIN_WRITE_OPERATION = 0x0,EFI_ACPI_5_1_ERST_BEGIN_READ_OPERATION = 0x1,EFI_ACPI_5_1_ERST_BEGIN_CLEAR_OPERATION = 0x2,EFI_ACPI_5_1_ERST_END_OPERATION = 0x3,EFI_ACPI_5_1_ERST_SET_RECORD_OFFSET = 0x4,EFI_ACPI_5_1_ERST_EXECUTE_OPERATION = 0x5,EFI_ACPI_5_1_ERST_CHECK_BUSY_STATUS = 0x6,EFI_ACPI_5_1_ERST_GET_COMMAND_STATUS = 0x7,EFI_ACPI_5_1_ERST_GET_RECORD_IDENTIFIER = 0x8,EFI_ACPI_5_1_ERST_SET_RECORD_IDENTIFIER = 0x9,EFI_ACPI_5_1_ERST_GET_RECORD_COUNT = 0xA,EFI_ACPI_5_1_ERST_BEGIN_DUMMY_WRITE_OPERATION = 0xB,EFI_ACPI_5_1_ERST_GET_ERROR_LOG_ADDRESS_RANGE = 0xD,EFI_ACPI_5_1_ERST_GET_ERROR_LOG_ADDRESS_RANGE_LENGTH = 0xE,EFI_ACPI_5_1_ERST_GET_ERROR_LOG_ADDRESS_RANGE_ATTRIBUTES = 0xF,EFI_ACPI_5_1_ERST_STATUS_SUCCESS = 0x0,EFI_ACPI_5_1_ERST_STATUS_NOT_ENOUGH_SPACE = 0x1,EFI_ACPI_5_1_ERST_STATUS_HARDWARE_NOT_AVAILABLE = 0x2,EFI_ACPI_5_1_ERST_STATUS_FAILED = 0x3,EFI_ACPI_5_1_ERST_STATUS_RECORD_STORE_EMPTY = 0x4,EFI_ACPI_5_1_ERST_STATUS_RECORD_NOT_FOUND = 0x5,EFI_ACPI_5_1_ERST_READ_REGISTER = 0x0,EFI_ACPI_5_1_ERST_READ_REGISTER_VALUE = 0x1,EFI_ACPI_5_1_ERST_WRITE_REGISTER = 0x2,EFI_ACPI_5_1_ERST_WRITE_REGISTER_VALUE = 0x3,EFI_ACPI_5_1_ERST_NOOP = 0x4,EFI_ACPI_5_1_ERST_LOAD_VAR1 = 0x5,EFI_ACPI_5_1_ERST_LOAD_VAR2 = 0x6,EFI_ACPI_5_1_ERST_STORE_VAR1 = 0x7,EFI_ACPI_5_1_ERST_ADD = 0x8,EFI_ACPI_5_1_ERST_SUBTRACT = 0x9,EFI_ACPI_5_1_ERST_ADD_VALUE = 0xA,EFI_ACPI_5_1_ERST_SUBTRACT_VALUE = 0xB,EFI_ACPI_5_1_ERST_STALL = 0xC,EFI_ACPI_5_1_ERST_STALL_WHILE_TRUE = 0xD,EFI_ACPI_5_1_ERST_SKIP_NEXT_INSTRUCTION_IF_TRUE = 0xE,EFI_ACPI_5_1_ERST_GOTO = 0xF,EFI_ACPI_5_1_ERST_SET_SRC_ADDRESS_BASE = 0x10,EFI_ACPI_5_1_ERST_SET_DST_ADDRESS_BASE = 0x11,EFI_ACPI_5_1_ERST_MOVE_DATA = 0x12,EFI_ACPI_5_1_ERST_PRESERVE_REGISTER = 0x1,EFI_ACPI_5_1_ERROR_INJECTION_TABLE_REVISION = 0x1,EFI_ACPI_5_1_EINJ_BEGIN_INJECTION_OPERATION = 0x0,EFI_ACPI_5_1_EINJ_GET_TRIGGER_ERROR_ACTION_TABLE = 0x1,EFI_ACPI_5_1_EINJ_SET_ERROR_TYPE = 0x2,EFI_ACPI_5_1_EINJ_GET_ERROR_TYPE = 0x3,EFI_ACPI_5_1_EINJ_END_OPERATION = 0x4,EFI_ACPI_5_1_EINJ_EXECUTE_OPERATION = 0x5,EFI_ACPI_5_1_EINJ_CHECK_BUSY_STATUS = 0x6,EFI_ACPI_5_1_EINJ_GET_COMMAND_STATUS = 0x7,EFI_ACPI_5_1_EINJ_TRIGGER_ERROR = 0xFF,EFI_ACPI_5_1_EINJ_STATUS_SUCCESS = 0x0,EFI_ACPI_5_1_EINJ_STATUS_UNKNOWN_FAILURE = 0x1,EFI_ACPI_5_1_EINJ_STATUS_INVALID_ACCESS = 0x2,EFI_ACPI_5_1_EINJ_ERROR_PROCESSOR_CORRECTABLE = 0x1,EFI_ACPI_5_1_EINJ_ERROR_PROCESSOR_UNCORRECTABLE_NONFATAL = 0x2,EFI_ACPI_5_1_EINJ_ERROR_PROCESSOR_UNCORRECTABLE_FATAL = 0x4,EFI_ACPI_5_1_EINJ_ERROR_MEMORY_CORRECTABLE = 0x8,EFI_ACPI_5_1_EINJ_ERROR_MEMORY_UNCORRECTABLE_NONFATAL = 0x10,EFI_ACPI_5_1_EINJ_ERROR_MEMORY_UNCORRECTABLE_FATAL = 0x20,EFI_ACPI_5_1_EINJ_ERROR_PCI_EXPRESS_CORRECTABLE = 0x40,EFI_ACPI_5_1_EINJ_ERROR_PCI_EXPRESS_UNCORRECTABLE_NONFATAL = 0x80,EFI_ACPI_5_1_EINJ_ERROR_PCI_EXPRESS_UNCORRECTABLE_FATAL = 0x100,EFI_ACPI_5_1_EINJ_ERROR_PLATFORM_CORRECTABLE = 0x200,EFI_ACPI_5_1_EINJ_ERROR_PLATFORM_UNCORRECTABLE_NONFATAL = 0x400,EFI_ACPI_5_1_EINJ_ERROR_PLATFORM_UNCORRECTABLE_FATAL = 0x800,EFI_ACPI_5_1_EINJ_READ_REGISTER = 0x0,EFI_ACPI_5_1_EINJ_READ_REGISTER_VALUE = 0x1,EFI_ACPI_5_1_EINJ_WRITE_REGISTER = 0x2,EFI_ACPI_5_1_EINJ_WRITE_REGISTER_VALUE = 0x3,EFI_ACPI_5_1_EINJ_NOOP = 0x4,EFI_ACPI_5_1_EINJ_PRESERVE_REGISTER = 0x1,EFI_ACPI_5_1_PLATFORM_COMMUNICATION_CHANNEL_TABLE_REVISION = 0x1,EFI_ACPI_5_1_PCCT_FLAGS_SCI_DOORBELL = 0x1,EFI_ACPI_5_1_PCCT_SUBSPACE_TYPE_GENERIC = 0x0,EFI_ACPI_5_1_ROOT_SYSTEM_DESCRIPTION_POINTER_SIGNATURE = 0x2052545020445352,EFI_ACPI_5_1_MULTIPLE_APIC_DESCRIPTION_TABLE_SIGNATURE = 0x43495041,EFI_ACPI_5_1_BOOT_ERROR_RECORD_TABLE_SIGNATURE = 0x54524542,EFI_ACPI_5_1_BOOT_GRAPHICS_RESOURCE_TABLE_SIGNATURE = 0x54524742,EFI_ACPI_5_1_CORRECTED_PLATFORM_ERROR_POLLING_TABLE_SIGNATURE = 0x50455043,EFI_ACPI_5_1_DIFFERENTIATED_SYSTEM_DESCRIPTION_TABLE_SIGNATURE = 0x54445344,EFI_ACPI_5_1_EMBEDDED_CONTROLLER_BOOT_RESOURCES_TABLE_SIGNATURE = 0x54444345,EFI_ACPI_5_1_ERROR_INJECTION_TABLE_SIGNATURE = 0x4A4E4945,EFI_ACPI_5_1_ERROR_RECORD_SERIALIZATION_TABLE_SIGNATURE = 0x54535245,EFI_ACPI_5_1_FIXED_ACPI_DESCRIPTION_TABLE_SIGNATURE = 0x50434146,EFI_ACPI_5_1_FIRMWARE_ACPI_CONTROL_STRUCTURE_SIGNATURE = 0x53434146,EFI_ACPI_5_1_FIRMWARE_PERFORMANCE_DATA_TABLE_SIGNATURE = 0x54445046,EFI_ACPI_5_1_GENERIC_TIMER_DESCRIPTION_TABLE_SIGNATURE = 0x54445447,EFI_ACPI_5_1_HARDWARE_ERROR_SOURCE_TABLE_SIGNATURE = 0x54534548,EFI_ACPI_5_1_MEMORY_POWER_STATE_TABLE_SIGNATURE = 0x5453504D,EFI_ACPI_5_1_MAXIMUM_SYSTEM_CHARACTERISTICS_TABLE_SIGNATURE = 0x5443534D,EFI_ACPI_5_1_PLATFORM_MEMORY_TOPOLOGY_TABLE_SIGNATURE = 0x54544D50,EFI_ACPI_5_1_PERSISTENT_SYSTEM_DESCRIPTION_TABLE_SIGNATURE = 0x54445350,EFI_ACPI_5_1_ACPI_RAS_FEATURE_TABLE_SIGNATURE = 0x46534152,EFI_ACPI_5_1_ROOT_SYSTEM_DESCRIPTION_TABLE_SIGNATURE = 0x54445352,EFI_ACPI_5_1_SMART_BATTERY_SPECIFICATION_TABLE_SIGNATURE = 0x54534253,EFI_ACPI_5_1_SYSTEM_LOCALITY_INFORMATION_TABLE_SIGNATURE = 0x54494C53,EFI_ACPI_5_1_SYSTEM_RESOURCE_AFFINITY_TABLE_SIGNATURE = 0x54415253,EFI_ACPI_5_1_SECONDARY_SYSTEM_DESCRIPTION_TABLE_SIGNATURE = 0x54445353,EFI_ACPI_5_1_EXTENDED_SYSTEM_DESCRIPTION_TABLE_SIGNATURE = 0x54445358,EFI_ACPI_5_1_SIMPLE_BOOT_FLAG_TABLE_SIGNATURE = 0x544F4F42,EFI_ACPI_5_1_CORE_SYSTEM_RESOURCE_TABLE_SIGNATURE = 0x54525343,EFI_ACPI_5_1_DEBUG_PORT_2_TABLE_SIGNATURE = 0x32474244,EFI_ACPI_5_1_DEBUG_PORT_TABLE_SIGNATURE = 0x50474244,EFI_ACPI_5_1_DMA_REMAPPING_TABLE_SIGNATURE = 0x52414D44,EFI_ACPI_5_1_DYNAMIC_ROOT_OF_TRUST_FOR_MEASUREMENT_TABLE_SIGNATURE = 0x4D545244,EFI_ACPI_5_1_EVENT_TIMER_DESCRIPTION_TABLE_SIGNATURE = 0x54445445,EFI_ACPI_5_1_HIGH_PRECISION_EVENT_TIMER_TABLE_SIGNATURE = 0x54455048,EFI_ACPI_5_1_ISCSI_BOOT_FIRMWARE_TABLE_SIGNATURE = 0x54464269,EFI_ACPI_5_1_IO_VIRTUALIZATION_REPORTING_STRUCTURE_SIGNATURE = 0x53525649,EFI_ACPI_5_1_IO_LOW_POWER_IDLE_TABLE_STRUCTURE_SIGNATURE = 0x5449504C,EFI_ACPI_5_1_PCI_EXPRESS_MEMORY_MAPPED_CONFIGURATION_SPACE_BASE_ADDRESS_DESCRIPTION_TABLE_SIGNATURE = 0x4746434D,EFI_ACPI_5_1_MANAGEMENT_CONTROLLER_HOST_INTERFACE_TABLE_SIGNATURE = 0x4948434D,EFI_ACPI_5_1_DATA_MANAGEMENT_TABLE_SIGNATURE = 0x4D44534D,EFI_ACPI_5_1_SOFTWARE_LICENSING_TABLE_SIGNATURE = 0x43494C53,EFI_ACPI_5_1_SERIAL_PORT_CONSOLE_REDIRECTION_TABLE_SIGNATURE = 0x52435053,EFI_ACPI_5_1_SERVER_PLATFORM_MANAGEMENT_INTERFACE_TABLE_SIGNATURE = 0x494D5053,EFI_ACPI_5_1_TRUSTED_COMPUTING_PLATFORM_ALLIANCE_CAPABILITIES_TABLE_SIGNATURE = 0x41504354,EFI_ACPI_5_1_TRUSTED_COMPUTING_PLATFORM_2_TABLE_SIGNATURE = 0x324D5054,EFI_ACPI_5_1_UEFI_ACPI_DATA_TABLE_SIGNATURE = 0x49464555,EFI_ACPI_5_1_WINDOWS_ACPI_EMULATED_DEVICES_TABLE_SIGNATURE = 0x54454157,EFI_ACPI_5_1_WATCHDOG_ACTION_TABLE_SIGNATURE = 0x54414457,EFI_ACPI_5_1_WATCHDOG_RESOURCE_TABLE_SIGNATURE = 0x54524457,EFI_ACPI_5_1_PLATFORM_BINARY_TABLE_SIGNATURE = 0x54425057,EFI_ACPI_6_0_SYSTEM_MEMORY = 0x0,EFI_ACPI_6_0_SYSTEM_IO = 0x1,EFI_ACPI_6_0_PCI_CONFIGURATION_SPACE = 0x2,EFI_ACPI_6_0_EMBEDDED_CONTROLLER = 0x3,EFI_ACPI_6_0_SMBUS = 0x4,EFI_ACPI_6_0_PLATFORM_COMMUNICATION_CHANNEL = 0xA,EFI_ACPI_6_0_FUNCTIONAL_FIXED_HARDWARE = 0x7F,EFI_ACPI_6_0_UNDEFINED = 0x0,EFI_ACPI_6_0_BYTE = 0x1,EFI_ACPI_6_0_WORD = 0x2,EFI_ACPI_6_0_DWORD = 0x3,EFI_ACPI_6_0_QWORD = 0x4,EFI_ACPI_6_0_ROOT_SYSTEM_DESCRIPTION_POINTER_REVISION = 0x2,EFI_ACPI_6_0_ROOT_SYSTEM_DESCRIPTION_TABLE_REVISION = 0x1,EFI_ACPI_6_0_EXTENDED_SYSTEM_DESCRIPTION_TABLE_REVISION = 0x1,EFI_ACPI_6_0_FIXED_ACPI_DESCRIPTION_TABLE_REVISION = 0x6,EFI_ACPI_6_0_FIXED_ACPI_DESCRIPTION_TABLE_MINOR_REVISION = 0x0,EFI_ACPI_6_0_PM_PROFILE_UNSPECIFIED = 0x0,EFI_ACPI_6_0_PM_PROFILE_DESKTOP = 0x1,EFI_ACPI_6_0_PM_PROFILE_MOBILE = 0x2,EFI_ACPI_6_0_PM_PROFILE_WORKSTATION = 0x3,EFI_ACPI_6_0_PM_PROFILE_ENTERPRISE_SERVER = 0x4,EFI_ACPI_6_0_PM_PROFILE_SOHO_SERVER = 0x5,EFI_ACPI_6_0_PM_PROFILE_APPLIANCE_PC = 0x6,EFI_ACPI_6_0_PM_PROFILE_PERFORMANCE_SERVER = 0x7,EFI_ACPI_6_0_PM_PROFILE_TABLET = 0x8,EFI_ACPI_6_0_LEGACY_DEVICES = 0x1,EFI_ACPI_6_0_8042 = 0x2,EFI_ACPI_6_0_VGA_NOT_PRESENT = 0x4,EFI_ACPI_6_0_MSI_NOT_SUPPORTED = 0x8,EFI_ACPI_6_0_PCIE_ASPM_CONTROLS = 0x10,EFI_ACPI_6_0_CMOS_RTC_NOT_PRESENT = 0x20,EFI_ACPI_6_0_ARM_PSCI_COMPLIANT = 0x1,EFI_ACPI_6_0_ARM_PSCI_USE_HVC = 0x2,EFI_ACPI_6_0_WBINVD = 0x1,EFI_ACPI_6_0_WBINVD_FLUSH = 0x2,EFI_ACPI_6_0_PROC_C1 = 0x4,EFI_ACPI_6_0_P_LVL2_UP = 0x8,EFI_ACPI_6_0_PWR_BUTTON = 0x10,EFI_ACPI_6_0_SLP_BUTTON = 0x20,EFI_ACPI_6_0_FIX_RTC = 0x40,EFI_ACPI_6_0_RTC_S4 = 0x80,EFI_ACPI_6_0_TMR_VAL_EXT = 0x100,EFI_ACPI_6_0_DCK_CAP = 0x200,EFI_ACPI_6_0_RESET_REG_SUP = 0x400,EFI_ACPI_6_0_SEALED_CASE = 0x800,EFI_ACPI_6_0_HEADLESS = 0x1000,EFI_ACPI_6_0_CPU_SW_SLP = 0x2000,EFI_ACPI_6_0_PCI_EXP_WAK = 0x4000,EFI_ACPI_6_0_USE_PLATFORM_CLOCK = 0x8000,EFI_ACPI_6_0_S4_RTC_STS_VALID = 0x10000,EFI_ACPI_6_0_REMOTE_POWER_ON_CAPABLE = 0x20000,EFI_ACPI_6_0_FORCE_APIC_CLUSTER_MODEL = 0x40000,EFI_ACPI_6_0_FORCE_APIC_PHYSICAL_DESTINATION_MODE = 0x80000,EFI_ACPI_6_0_HW_REDUCED_ACPI = 0x100000,EFI_ACPI_6_0_LOW_POWER_S0_IDLE_CAPABLE = 0x200000,EFI_ACPI_6_0_FIRMWARE_ACPI_CONTROL_STRUCTURE_VERSION = 0x2,EFI_ACPI_6_0_S4BIOS_F = 0x1,EFI_ACPI_6_0_64BIT_WAKE_SUPPORTED_F = 0x2,EFI_ACPI_6_0_OSPM_64BIT_WAKE_F = 0x1,EFI_ACPI_6_0_DIFFERENTIATED_SYSTEM_DESCRIPTION_TABLE_REVISION = 0x2,EFI_ACPI_6_0_SECONDARY_SYSTEM_DESCRIPTION_TABLE_REVISION = 0x2,EFI_ACPI_6_0_MULTIPLE_APIC_DESCRIPTION_TABLE_REVISION = 0x3,EFI_ACPI_6_0_PCAT_COMPAT = 0x1,EFI_ACPI_6_0_PROCESSOR_LOCAL_APIC = 0x0,EFI_ACPI_6_0_IO_APIC = 0x1,EFI_ACPI_6_0_INTERRUPT_SOURCE_OVERRIDE = 0x2,EFI_ACPI_6_0_NON_MASKABLE_INTERRUPT_SOURCE = 0x3,EFI_ACPI_6_0_LOCAL_APIC_NMI = 0x4,EFI_ACPI_6_0_LOCAL_APIC_ADDRESS_OVERRIDE = 0x5,EFI_ACPI_6_0_IO_SAPIC = 0x6,EFI_ACPI_6_0_LOCAL_SAPIC = 0x7,EFI_ACPI_6_0_PLATFORM_INTERRUPT_SOURCES = 0x8,EFI_ACPI_6_0_PROCESSOR_LOCAL_X2APIC = 0x9,EFI_ACPI_6_0_LOCAL_X2APIC_NMI = 0xA,EFI_ACPI_6_0_GIC = 0xB,EFI_ACPI_6_0_GICD = 0xC,EFI_ACPI_6_0_GIC_MSI_FRAME = 0xD,EFI_ACPI_6_0_GICR = 0xE,EFI_ACPI_6_0_GIC_ITS = 0xF,EFI_ACPI_6_0_LOCAL_APIC_ENABLED = 0x1,EFI_ACPI_6_0_POLARITY = 0x3,EFI_ACPI_6_0_TRIGGER_MODE = 0xC,EFI_ACPI_6_0_CPEI_PROCESSOR_OVERRIDE = 0x1,EFI_ACPI_6_0_GIC_ENABLED = 0x1,EFI_ACPI_6_0_PERFORMANCE_INTERRUPT_MODEL = 0x2,EFI_ACPI_6_0_VGIC_MAINTENANCE_INTERRUPT_MODE_FLAGS = 0x4,EFI_ACPI_6_0_SPI_COUNT_BASE_SELECT = 0x1,EFI_ACPI_6_0_SMART_BATTERY_DESCRIPTION_TABLE_REVISION = 0x1,EFI_ACPI_6_0_EMBEDDED_CONTROLLER_BOOT_RESOURCES_TABLE_REVISION = 0x1,EFI_ACPI_6_0_SYSTEM_RESOURCE_AFFINITY_TABLE_REVISION = 0x3,EFI_ACPI_6_0_PROCESSOR_LOCAL_APIC_SAPIC_AFFINITY = 0x0,EFI_ACPI_6_0_MEMORY_AFFINITY = 0x1,EFI_ACPI_6_0_PROCESSOR_LOCAL_X2APIC_AFFINITY = 0x2,EFI_ACPI_6_0_GICC_AFFINITY = 0x3,EFI_ACPI_6_0_PROCESSOR_LOCAL_APIC_SAPIC_ENABLED = 0x1,EFI_ACPI_6_0_MEMORY_ENABLED = 0x1,EFI_ACPI_6_0_MEMORY_HOT_PLUGGABLE = 0x2,EFI_ACPI_6_0_MEMORY_NONVOLATILE = 0x4,EFI_ACPI_6_0_GICC_ENABLED = 0x1,EFI_ACPI_6_0_SYSTEM_LOCALITY_DISTANCE_INFORMATION_TABLE_REVISION = 0x1,EFI_ACPI_6_0_CORRECTED_PLATFORM_ERROR_POLLING_TABLE_REVISION = 0x1,EFI_ACPI_6_0_CPEP_PROCESSOR_APIC_SAPIC = 0x0,EFI_ACPI_6_0_MAXIMUM_SYSTEM_CHARACTERISTICS_TABLE_REVISION = 0x1,EFI_ACPI_6_0_RAS_FEATURE_TABLE_REVISION = 0x1,EFI_ACPI_6_0_RASF_PCC_COMMAND_CODE_EXECUTE_RASF_COMMAND = 0x1,EFI_ACPI_6_0_RASF_PLATFORM_RAS_CAPABILITY_HARDWARE_BASED_PATROL_SCRUB_SUPPOTED = 0x1,EFI_ACPI_6_0_RASF_PLATFORM_RAS_CAPABILITY_HARDWARE_BASED_PATROL_SCRUB_SUPPOTED_AND_EXPOSED_TO_SOFTWARE = 0x2,EFI_ACPI_6_0_RASF_PATROL_SCRUB_COMMAND_GET_PATROL_PARAMETERS = 0x1,EFI_ACPI_6_0_RASF_PATROL_SCRUB_COMMAND_START_PATROL_SCRUBBER = 0x2,EFI_ACPI_6_0_RASF_PATROL_SCRUB_COMMAND_STOP_PATROL_SCRUBBER = 0x3,EFI_ACPI_6_0_MEMORY_POWER_STATE_TABLE_REVISION = 0x1,EFI_ACPI_6_0_MPST_PCC_COMMAND_CODE_EXECUTE_MPST_COMMAND = 0x3,EFI_ACPI_6_0_MPST_MEMORY_POWER_COMMAND_GET_MEMORY_POWER_STATE = 0x1,EFI_ACPI_6_0_MPST_MEMORY_POWER_COMMAND_SET_MEMORY_POWER_STATE = 0x2,EFI_ACPI_6_0_MPST_MEMORY_POWER_COMMAND_GET_AVERAGE_POWER_CONSUMED = 0x3,EFI_ACPI_6_0_MPST_MEMORY_POWER_COMMAND_GET_MEMORY_ENERGY_CONSUMED = 0x4,EFI_ACPI_6_0_MPST_MEMORY_POWER_STRUCTURE_FLAG_ENABLE = 0x1,EFI_ACPI_6_0_MPST_MEMORY_POWER_STRUCTURE_FLAG_POWER_MANAGED = 0x2,EFI_ACPI_6_0_MPST_MEMORY_POWER_STRUCTURE_FLAG_HOT_PLUGGABLE = 0x4,EFI_ACPI_6_0_MPST_MEMORY_POWER_STATE_CHARACTERISTICS_STRUCTURE_FLAG_MEMORY_CONTENT_PRESERVED = 0x1,EFI_ACPI_6_0_MPST_MEMORY_POWER_STATE_CHARACTERISTICS_STRUCTURE_FLAG_AUTONOMOUS_MEMORY_POWER_STATE_ENTRY = 0x2,EFI_ACPI_6_0_MPST_MEMORY_POWER_STATE_CHARACTERISTICS_STRUCTURE_FLAG_AUTONOMOUS_MEMORY_POWER_STATE_EXIT = 0x4,EFI_ACPI_6_0_MEMORY_TOPOLOGY_TABLE_REVISION = 0x1,EFI_ACPI_6_0_PMMT_MEMORY_AGGREGATOR_DEVICE_TYPE_SOCKET = 0x1,EFI_ACPI_6_0_PMMT_MEMORY_AGGREGATOR_DEVICE_TYPE_MEMORY_CONTROLLER = 0x2,EFI_ACPI_6_0_PMMT_MEMORY_AGGREGATOR_DEVICE_TYPE_DIMM = 0x3,EFI_ACPI_6_0_BOOT_GRAPHICS_RESOURCE_TABLE_REVISION = 0x1,EFI_ACPI_6_0_BGRT_VERSION = 0x1,EFI_ACPI_6_0_BGRT_STATUS_NOT_DISPLAYED = 0x0,EFI_ACPI_6_0_BGRT_STATUS_DISPLAYED = 0x1,EFI_ACPI_6_0_BGRT_IMAGE_TYPE_BMP = 0x0,EFI_ACPI_6_0_FIRMWARE_PERFORMANCE_DATA_TABLE_REVISION = 0x1,EFI_ACPI_6_0_FPDT_RECORD_TYPE_FIRMWARE_BASIC_BOOT_POINTER = 0x0,EFI_ACPI_6_0_FPDT_RECORD_TYPE_S3_PERFORMANCE_TABLE_POINTER = 0x1,EFI_ACPI_6_0_FPDT_RECORD_REVISION_FIRMWARE_BASIC_BOOT_POINTER = 0x1,EFI_ACPI_6_0_FPDT_RECORD_REVISION_S3_PERFORMANCE_TABLE_POINTER = 0x1,EFI_ACPI_6_0_FPDT_RUNTIME_RECORD_TYPE_S3_RESUME = 0x0,EFI_ACPI_6_0_FPDT_RUNTIME_RECORD_TYPE_S3_SUSPEND = 0x1,EFI_ACPI_6_0_FPDT_RUNTIME_RECORD_TYPE_FIRMWARE_BASIC_BOOT = 0x2,EFI_ACPI_6_0_FPDT_RUNTIME_RECORD_REVISION_S3_RESUME = 0x1,EFI_ACPI_6_0_FPDT_RUNTIME_RECORD_REVISION_S3_SUSPEND = 0x1,EFI_ACPI_6_0_FPDT_RUNTIME_RECORD_REVISION_FIRMWARE_BASIC_BOOT = 0x2,EFI_ACPI_6_0_FPDT_BOOT_PERFORMANCE_TABLE_SIGNATURE = 0x54504246,EFI_ACPI_6_0_FPDT_S3_PERFORMANCE_TABLE_SIGNATURE = 0x54503353,EFI_ACPI_6_0_GENERIC_TIMER_DESCRIPTION_TABLE_REVISION = 0x2,EFI_ACPI_6_0_GTDT_TIMER_FLAG_TIMER_INTERRUPT_MODE = 0x1,EFI_ACPI_6_0_GTDT_TIMER_FLAG_TIMER_INTERRUPT_POLARITY = 0x2,EFI_ACPI_6_0_GTDT_TIMER_FLAG_ALWAYS_ON_CAPABILITY = 0x4,EFI_ACPI_6_0_GTDT_GT_BLOCK = 0x0,EFI_ACPI_6_0_GTDT_SBSA_GENERIC_WATCHDOG = 0x1,EFI_ACPI_6_0_GTDT_GT_BLOCK_TIMER_FLAG_TIMER_INTERRUPT_MODE = 0x1,EFI_ACPI_6_0_GTDT_GT_BLOCK_TIMER_FLAG_TIMER_INTERRUPT_POLARITY = 0x2,EFI_ACPI_6_0_GTDT_GT_BLOCK_COMMON_FLAG_SECURE_TIMER = 0x1,EFI_ACPI_6_0_GTDT_GT_BLOCK_COMMON_FLAG_ALWAYS_ON_CAPABILITY = 0x2,EFI_ACPI_6_0_GTDT_SBSA_GENERIC_WATCHDOG_FLAG_TIMER_INTERRUPT_MODE = 0x1,EFI_ACPI_6_0_GTDT_SBSA_GENERIC_WATCHDOG_FLAG_TIMER_INTERRUPT_POLARITY = 0x2,EFI_ACPI_6_0_GTDT_SBSA_GENERIC_WATCHDOG_FLAG_SECURE_TIMER = 0x4,EFI_ACPI_6_0_NVDIMM_FIRMWARE_INTERFACE_TABLE_REVISION = 0x1,EFI_ACPI_6_0_NFIT_SYSTEM_PHYSICAL_ADDRESS_RANGE_STRUCTURE_TYPE = 0x0,EFI_ACPI_6_0_NFIT_MEMORY_DEVICE_TO_SYSTEM_ADDRESS_RANGE_MAP_STRUCTURE_TYPE = 0x1,EFI_ACPI_6_0_NFIT_INTERLEAVE_STRUCTURE_TYPE = 0x2,EFI_ACPI_6_0_NFIT_SMBIOS_MANAGEMENT_INFORMATION_STRUCTURE_TYPE = 0x3,EFI_ACPI_6_0_NFIT_NVDIMM_CONTROL_REGION_STRUCTURE_TYPE = 0x4,EFI_ACPI_6_0_NFIT_NVDIMM_BLOCK_DATA_WINDOW_REGION_STRUCTURE_TYPE = 0x5,EFI_ACPI_6_0_NFIT_FLUSH_HINT_ADDRESS_STRUCTURE_TYPE = 0x6,EFI_ACPI_6_0_NFIT_SYSTEM_PHYSICAL_ADDRESS_RANGE_FLAGS_CONTROL_REGION_FOR_MANAGEMENT = 0x1,EFI_ACPI_6_0_NFIT_SYSTEM_PHYSICAL_ADDRESS_RANGE_FLAGS_PROXIMITY_DOMAIN_VALID = 0x2,EFI_ACPI_6_0_NFIT_MEMORY_DEVICE_STATE_FLAGS_PREVIOUS_SAVE_FAIL = 0x1,EFI_ACPI_6_0_NFIT_MEMORY_DEVICE_STATE_FLAGS_LAST_RESTORE_FAIL = 0x2,EFI_ACPI_6_0_NFIT_MEMORY_DEVICE_STATE_FLAGS_PLATFORM_FLUSH_FAIL = 0x4,EFI_ACPI_6_0_NFIT_MEMORY_DEVICE_STATE_FLAGS_NOT_ARMED_PRIOR_TO_OSPM_HAND_OFF = 0x8,EFI_ACPI_6_0_NFIT_MEMORY_DEVICE_STATE_FLAGS_SMART_HEALTH_EVENTS_PRIOR_OSPM_HAND_OFF = 0x10,EFI_ACPI_6_0_NFIT_MEMORY_DEVICE_STATE_FLAGS_FIRMWARE_ENABLED_TO_NOTIFY_OSPM_ON_SMART_HEALTH_EVENTS = 0x20,EFI_ACPI_6_0_NFIT_NVDIMM_CONTROL_REGION_FLAGS_BLOCK_DATA_WINDOWS_BUFFERED = 0x1,EFI_ACPI_6_0_BOOT_ERROR_RECORD_TABLE_REVISION = 0x1,EFI_ACPI_6_0_ERROR_SEVERITY_CORRECTABLE = 0x0,EFI_ACPI_6_0_ERROR_SEVERITY_FATAL = 0x1,EFI_ACPI_6_0_ERROR_SEVERITY_CORRECTED = 0x2,EFI_ACPI_6_0_ERROR_SEVERITY_NONE = 0x3,EFI_ACPI_6_0_GENERIC_ERROR_DATA_ENTRY_REVISION = 0x201,EFI_ACPI_6_0_HARDWARE_ERROR_SOURCE_TABLE_REVISION = 0x1,EFI_ACPI_6_0_IA32_ARCHITECTURE_MACHINE_CHECK_EXCEPTION = 0x0,EFI_ACPI_6_0_IA32_ARCHITECTURE_CORRECTED_MACHINE_CHECK = 0x1,EFI_ACPI_6_0_IA32_ARCHITECTURE_NMI_ERROR = 0x2,EFI_ACPI_6_0_PCI_EXPRESS_ROOT_PORT_AER = 0x6,EFI_ACPI_6_0_PCI_EXPRESS_DEVICE_AER = 0x7,EFI_ACPI_6_0_PCI_EXPRESS_BRIDGE_AER = 0x8,EFI_ACPI_6_0_GENERIC_HARDWARE_ERROR = 0x9,EFI_ACPI_6_0_ERROR_SOURCE_FLAG_FIRMWARE_FIRST = 0x1,EFI_ACPI_6_0_ERROR_SOURCE_FLAG_GLOBAL = 0x2,EFI_ACPI_6_0_IA32_ARCHITECTURE_MACHINE_CHECK_ERROR_DATA_FORMAT_IA32 = 0x0,EFI_ACPI_6_0_IA32_ARCHITECTURE_MACHINE_CHECK_ERROR_DATA_FORMAT_INTEL64 = 0x1,EFI_ACPI_6_0_IA32_ARCHITECTURE_MACHINE_CHECK_ERROR_DATA_FORMAT_AMD64 = 0x2,EFI_ACPI_6_0_HARDWARE_ERROR_NOTIFICATION_POLLED = 0x0,EFI_ACPI_6_0_HARDWARE_ERROR_NOTIFICATION_EXTERNAL_INTERRUPT = 0x1,EFI_ACPI_6_0_HARDWARE_ERROR_NOTIFICATION_LOCAL_INTERRUPT = 0x2,EFI_ACPI_6_0_HARDWARE_ERROR_NOTIFICATION_SCI = 0x3,EFI_ACPI_6_0_HARDWARE_ERROR_NOTIFICATION_NMI = 0x4,EFI_ACPI_6_0_ERROR_RECORD_SERIALIZATION_TABLE_REVISION = 0x1,EFI_ACPI_6_0_ERST_BEGIN_WRITE_OPERATION = 0x0,EFI_ACPI_6_0_ERST_BEGIN_READ_OPERATION = 0x1,EFI_ACPI_6_0_ERST_BEGIN_CLEAR_OPERATION = 0x2,EFI_ACPI_6_0_ERST_END_OPERATION = 0x3,EFI_ACPI_6_0_ERST_SET_RECORD_OFFSET = 0x4,EFI_ACPI_6_0_ERST_EXECUTE_OPERATION = 0x5,EFI_ACPI_6_0_ERST_CHECK_BUSY_STATUS = 0x6,EFI_ACPI_6_0_ERST_GET_COMMAND_STATUS = 0x7,EFI_ACPI_6_0_ERST_GET_RECORD_IDENTIFIER = 0x8,EFI_ACPI_6_0_ERST_SET_RECORD_IDENTIFIER = 0x9,EFI_ACPI_6_0_ERST_GET_RECORD_COUNT = 0xA,EFI_ACPI_6_0_ERST_BEGIN_DUMMY_WRITE_OPERATION = 0xB,EFI_ACPI_6_0_ERST_GET_ERROR_LOG_ADDRESS_RANGE = 0xD,EFI_ACPI_6_0_ERST_GET_ERROR_LOG_ADDRESS_RANGE_LENGTH = 0xE,EFI_ACPI_6_0_ERST_GET_ERROR_LOG_ADDRESS_RANGE_ATTRIBUTES = 0xF,EFI_ACPI_6_0_ERST_STATUS_SUCCESS = 0x0,EFI_ACPI_6_0_ERST_STATUS_NOT_ENOUGH_SPACE = 0x1,EFI_ACPI_6_0_ERST_STATUS_HARDWARE_NOT_AVAILABLE = 0x2,EFI_ACPI_6_0_ERST_STATUS_FAILED = 0x3,EFI_ACPI_6_0_ERST_STATUS_RECORD_STORE_EMPTY = 0x4,EFI_ACPI_6_0_ERST_STATUS_RECORD_NOT_FOUND = 0x5,EFI_ACPI_6_0_ERST_READ_REGISTER = 0x0,EFI_ACPI_6_0_ERST_READ_REGISTER_VALUE = 0x1,EFI_ACPI_6_0_ERST_WRITE_REGISTER = 0x2,EFI_ACPI_6_0_ERST_WRITE_REGISTER_VALUE = 0x3,EFI_ACPI_6_0_ERST_NOOP = 0x4,EFI_ACPI_6_0_ERST_LOAD_VAR1 = 0x5,EFI_ACPI_6_0_ERST_LOAD_VAR2 = 0x6,EFI_ACPI_6_0_ERST_STORE_VAR1 = 0x7,EFI_ACPI_6_0_ERST_ADD = 0x8,EFI_ACPI_6_0_ERST_SUBTRACT = 0x9,EFI_ACPI_6_0_ERST_ADD_VALUE = 0xA,EFI_ACPI_6_0_ERST_SUBTRACT_VALUE = 0xB,EFI_ACPI_6_0_ERST_STALL = 0xC,EFI_ACPI_6_0_ERST_STALL_WHILE_TRUE = 0xD,EFI_ACPI_6_0_ERST_SKIP_NEXT_INSTRUCTION_IF_TRUE = 0xE,EFI_ACPI_6_0_ERST_GOTO = 0xF,EFI_ACPI_6_0_ERST_SET_SRC_ADDRESS_BASE = 0x10,EFI_ACPI_6_0_ERST_SET_DST_ADDRESS_BASE = 0x11,EFI_ACPI_6_0_ERST_MOVE_DATA = 0x12,EFI_ACPI_6_0_ERST_PRESERVE_REGISTER = 0x1,EFI_ACPI_6_0_ERROR_INJECTION_TABLE_REVISION = 0x1,EFI_ACPI_6_0_EINJ_BEGIN_INJECTION_OPERATION = 0x0,EFI_ACPI_6_0_EINJ_GET_TRIGGER_ERROR_ACTION_TABLE = 0x1,EFI_ACPI_6_0_EINJ_SET_ERROR_TYPE = 0x2,EFI_ACPI_6_0_EINJ_GET_ERROR_TYPE = 0x3,EFI_ACPI_6_0_EINJ_END_OPERATION = 0x4,EFI_ACPI_6_0_EINJ_EXECUTE_OPERATION = 0x5,EFI_ACPI_6_0_EINJ_CHECK_BUSY_STATUS = 0x6,EFI_ACPI_6_0_EINJ_GET_COMMAND_STATUS = 0x7,EFI_ACPI_6_0_EINJ_TRIGGER_ERROR = 0xFF,EFI_ACPI_6_0_EINJ_STATUS_SUCCESS = 0x0,EFI_ACPI_6_0_EINJ_STATUS_UNKNOWN_FAILURE = 0x1,EFI_ACPI_6_0_EINJ_STATUS_INVALID_ACCESS = 0x2,EFI_ACPI_6_0_EINJ_ERROR_PROCESSOR_CORRECTABLE = 0x1,EFI_ACPI_6_0_EINJ_ERROR_PROCESSOR_UNCORRECTABLE_NONFATAL = 0x2,EFI_ACPI_6_0_EINJ_ERROR_PROCESSOR_UNCORRECTABLE_FATAL = 0x4,EFI_ACPI_6_0_EINJ_ERROR_MEMORY_CORRECTABLE = 0x8,EFI_ACPI_6_0_EINJ_ERROR_MEMORY_UNCORRECTABLE_NONFATAL = 0x10,EFI_ACPI_6_0_EINJ_ERROR_MEMORY_UNCORRECTABLE_FATAL = 0x20,EFI_ACPI_6_0_EINJ_ERROR_PCI_EXPRESS_CORRECTABLE = 0x40,EFI_ACPI_6_0_EINJ_ERROR_PCI_EXPRESS_UNCORRECTABLE_NONFATAL = 0x80,EFI_ACPI_6_0_EINJ_ERROR_PCI_EXPRESS_UNCORRECTABLE_FATAL = 0x100,EFI_ACPI_6_0_EINJ_ERROR_PLATFORM_CORRECTABLE = 0x200,EFI_ACPI_6_0_EINJ_ERROR_PLATFORM_UNCORRECTABLE_NONFATAL = 0x400,EFI_ACPI_6_0_EINJ_ERROR_PLATFORM_UNCORRECTABLE_FATAL = 0x800,EFI_ACPI_6_0_EINJ_READ_REGISTER = 0x0,EFI_ACPI_6_0_EINJ_READ_REGISTER_VALUE = 0x1,EFI_ACPI_6_0_EINJ_WRITE_REGISTER = 0x2,EFI_ACPI_6_0_EINJ_WRITE_REGISTER_VALUE = 0x3,EFI_ACPI_6_0_EINJ_NOOP = 0x4,EFI_ACPI_6_0_EINJ_PRESERVE_REGISTER = 0x1,EFI_ACPI_6_0_PLATFORM_COMMUNICATION_CHANNEL_TABLE_REVISION = 0x1,EFI_ACPI_6_0_PCCT_FLAGS_SCI_DOORBELL = 0x1,EFI_ACPI_6_0_PCCT_SUBSPACE_TYPE_GENERIC = 0x0,EFI_ACPI_6_0_ROOT_SYSTEM_DESCRIPTION_POINTER_SIGNATURE = 0x2052545020445352,EFI_ACPI_6_0_MULTIPLE_APIC_DESCRIPTION_TABLE_SIGNATURE = 0x43495041,EFI_ACPI_6_0_BOOT_ERROR_RECORD_TABLE_SIGNATURE = 0x54524542,EFI_ACPI_6_0_BOOT_GRAPHICS_RESOURCE_TABLE_SIGNATURE = 0x54524742,EFI_ACPI_6_0_CORRECTED_PLATFORM_ERROR_POLLING_TABLE_SIGNATURE = 0x50455043,EFI_ACPI_6_0_DIFFERENTIATED_SYSTEM_DESCRIPTION_TABLE_SIGNATURE = 0x54445344,EFI_ACPI_6_0_EMBEDDED_CONTROLLER_BOOT_RESOURCES_TABLE_SIGNATURE = 0x54444345,EFI_ACPI_6_0_ERROR_INJECTION_TABLE_SIGNATURE = 0x4A4E4945,EFI_ACPI_6_0_ERROR_RECORD_SERIALIZATION_TABLE_SIGNATURE = 0x54535245,EFI_ACPI_6_0_FIXED_ACPI_DESCRIPTION_TABLE_SIGNATURE = 0x50434146,EFI_ACPI_6_0_FIRMWARE_ACPI_CONTROL_STRUCTURE_SIGNATURE = 0x53434146,EFI_ACPI_6_0_FIRMWARE_PERFORMANCE_DATA_TABLE_SIGNATURE = 0x54445046,EFI_ACPI_6_0_GENERIC_TIMER_DESCRIPTION_TABLE_SIGNATURE = 0x54445447,EFI_ACPI_6_0_HARDWARE_ERROR_SOURCE_TABLE_SIGNATURE = 0x54534548,EFI_ACPI_6_0_MEMORY_POWER_STATE_TABLE_SIGNATURE = 0x5453504D,EFI_ACPI_6_0_MAXIMUM_SYSTEM_CHARACTERISTICS_TABLE_SIGNATURE = 0x5443534D,EFI_ACPI_6_0_NVDIMM_FIRMWARE_INTERFACE_TABLE_STRUCTURE_SIGNATURE = 0x5449464E,EFI_ACPI_6_0_PLATFORM_MEMORY_TOPOLOGY_TABLE_SIGNATURE = 0x54544D50,EFI_ACPI_6_0_PERSISTENT_SYSTEM_DESCRIPTION_TABLE_SIGNATURE = 0x54445350,EFI_ACPI_6_0_ACPI_RAS_FEATURE_TABLE_SIGNATURE = 0x46534152,EFI_ACPI_6_0_ROOT_SYSTEM_DESCRIPTION_TABLE_SIGNATURE = 0x54445352,EFI_ACPI_6_0_SMART_BATTERY_SPECIFICATION_TABLE_SIGNATURE = 0x54534253,EFI_ACPI_6_0_SYSTEM_LOCALITY_INFORMATION_TABLE_SIGNATURE = 0x54494C53,EFI_ACPI_6_0_SYSTEM_RESOURCE_AFFINITY_TABLE_SIGNATURE = 0x54415253,EFI_ACPI_6_0_SECONDARY_SYSTEM_DESCRIPTION_TABLE_SIGNATURE = 0x54445353,EFI_ACPI_6_0_EXTENDED_SYSTEM_DESCRIPTION_TABLE_SIGNATURE = 0x54445358,EFI_ACPI_6_0_SIMPLE_BOOT_FLAG_TABLE_SIGNATURE = 0x544F4F42,EFI_ACPI_6_0_CORE_SYSTEM_RESOURCE_TABLE_SIGNATURE = 0x54525343,EFI_ACPI_6_0_DEBUG_PORT_2_TABLE_SIGNATURE = 0x32474244,EFI_ACPI_6_0_DEBUG_PORT_TABLE_SIGNATURE = 0x50474244,EFI_ACPI_6_0_DMA_REMAPPING_TABLE_SIGNATURE = 0x52414D44,EFI_ACPI_6_0_DYNAMIC_ROOT_OF_TRUST_FOR_MEASUREMENT_TABLE_SIGNATURE = 0x4D545244,EFI_ACPI_6_0_EVENT_TIMER_DESCRIPTION_TABLE_SIGNATURE = 0x54445445,EFI_ACPI_6_0_HIGH_PRECISION_EVENT_TIMER_TABLE_SIGNATURE = 0x54455048,EFI_ACPI_6_0_ISCSI_BOOT_FIRMWARE_TABLE_SIGNATURE = 0x54464269,EFI_ACPI_6_0_INTERRUPT_SOURCE_OVERRIDE_SIGNATURE = 0x54524F49,EFI_ACPI_6_0_IO_VIRTUALIZATION_REPORTING_STRUCTURE_SIGNATURE = 0x53525649,EFI_ACPI_6_0_LOW_POWER_IDLE_TABLE_STRUCTURE_SIGNATURE = 0x5449504C,EFI_ACPI_6_0_PCI_EXPRESS_MEMORY_MAPPED_CONFIGURATION_SPACE_BASE_ADDRESS_DESCRIPTION_TABLE_SIGNATURE = 0x4746434D,EFI_ACPI_6_0_MANAGEMENT_CONTROLLER_HOST_INTERFACE_TABLE_SIGNATURE = 0x4948434D,EFI_ACPI_6_0_DATA_MANAGEMENT_TABLE_SIGNATURE = 0x4D44534D,EFI_ACPI_6_0_SOFTWARE_LICENSING_TABLE_SIGNATURE = 0x43494C53,EFI_ACPI_6_0_SERIAL_PORT_CONSOLE_REDIRECTION_TABLE_SIGNATURE = 0x52435053,EFI_ACPI_6_0_SERVER_PLATFORM_MANAGEMENT_INTERFACE_TABLE_SIGNATURE = 0x494D5053,EFI_ACPI_6_0_STA_OVERRIDE_TABLE_SIGNATURE = 0x4F415453,EFI_ACPI_6_0_TRUSTED_COMPUTING_PLATFORM_ALLIANCE_CAPABILITIES_TABLE_SIGNATURE = 0x41504354,EFI_ACPI_6_0_TRUSTED_COMPUTING_PLATFORM_2_TABLE_SIGNATURE = 0x324D5054,EFI_ACPI_6_0_UEFI_ACPI_DATA_TABLE_SIGNATURE = 0x49464555,EFI_ACPI_6_0_WINDOWS_ACPI_EMULATED_DEVICES_TABLE_SIGNATURE = 0x54454157,EFI_ACPI_6_0_WATCHDOG_ACTION_TABLE_SIGNATURE = 0x54414457,EFI_ACPI_6_0_WATCHDOG_RESOURCE_TABLE_SIGNATURE = 0x54524457,EFI_ACPI_6_0_PLATFORM_BINARY_TABLE_SIGNATURE = 0x54425057,EFI_ACPI_6_0_XEN_PROJECT_TABLE_SIGNATURE = 0x564E4558,};
enum MACRO_EFI_ACPI_HIGH {EFI_ACPI_HIGH_PRECISION_EVENT_TIMER_TABLE_REVISION = 0x1,EFI_ACPI_NO_PAGE_PROTECTION = 0x0,EFI_ACPI_4KB_PAGE_PROTECTION = 0x1,EFI_ACPI_64KB_PAGE_PROTECTION = 0x2,};
enum MACRO_EFI_PROCESSOR {EFI_PROCESSOR_SUBCLASS_VERSION = 0x10000,EFI_CACHE_SUBCLASS_VERSION = 0x10000,EFI_CACHE_L1 = 0x1,EFI_CACHE_L2 = 0x2,EFI_CACHE_L3 = 0x3,EFI_CACHE_L4 = 0x4,EFI_CACHE_LMAX = 0x4,EFI_CACHE_SOCKETED = 0x1,EFI_CACHE_NOT_SOCKETED = 0x0,EFI_CACHE_ENABLED = 0x1,EFI_CACHE_DISABLED = 0x0,EFI_MEMORY_SUBCLASS_VERSION = 0x100,EFI_MEMORY_SIZE_RECORD_NUMBER = 0x1,EFI_MEMORY_ARRAY_LOCATION_RECORD_NUMBER = 0x2,EFI_MEMORY_ARRAY_LINK_RECORD_NUMBER = 0x3,EFI_MEMORY_ARRAY_START_ADDRESS_RECORD_NUMBER = 0x4,EFI_MEMORY_DEVICE_START_ADDRESS_RECORD_NUMBER = 0x5,EFI_MEMORY_CHANNEL_TYPE_RECORD_NUMBER = 0x6,EFI_MEMORY_CHANNEL_DEVICE_RECORD_NUMBER = 0x7,EFI_MEMORY_CONTROLLER_INFORMATION_RECORD_NUMBER = 0x8,EFI_MEMORY_32BIT_ERROR_INFORMATION_RECORD_NUMBER = 0x9,EFI_MEMORY_64BIT_ERROR_INFORMATION_RECORD_NUMBER = 0xA,EFI_MISC_SUBCLASS_VERSION = 0x100,EFI_MISC_LAST_PCI_BUS_RECORD_NUMBER = 0x1,EFI_MISC_BIOS_VENDOR_RECORD_NUMBER = 0x2,EFI_MISC_SYSTEM_MANUFACTURER_RECORD_NUMBER = 0x3,EFI_MISC_BASE_BOARD_MANUFACTURER_RECORD_NUMBER = 0x4,EFI_MISC_CHASSIS_MANUFACTURER_RECORD_NUMBER = 0x5,EFI_MISC_PORT_INTERNAL_CONNECTOR_DESIGNATOR_RECORD_NUMBER = 0x6,EFI_MISC_SYSTEM_SLOT_DESIGNATION_RECORD_NUMBER = 0x7,EFI_MISC_ONBOARD_DEVICE_RECORD_NUMBER = 0x8,EFI_MISC_OEM_STRING_RECORD_NUMBER = 0x9,EFI_MISC_SYSTEM_OPTION_STRING_RECORD_NUMBER = 0xA,EFI_MISC_NUMBER_OF_INSTALLABLE_LANGUAGES_RECORD_NUMBER = 0xB,EFI_MISC_SYSTEM_LANGUAGE_STRING_RECORD_NUMBER = 0xC,EFI_MISC_GROUP_NAME_RECORD_NUMBER = 0xD,EFI_MISC_GROUP_ITEM_SET_RECORD_NUMBER = 0xE,EFI_MISC_POINTING_DEVICE_TYPE_RECORD_NUMBER = 0xF,EFI_MISC_PORTABLE_BATTERY_RECORD_NUMBER = 0x10,EFI_MISC_RESET_CAPABILITIES_RECORD_NUMBER = 0x11,EFI_MISC_HARDWARE_SECURITY_SETTINGS_DATA_RECORD_NUMBER = 0x12,EFI_MISC_SCHEDULED_POWER_ON_MONTH_RECORD_NUMBER = 0x13,EFI_MISC_VOLTAGE_PROBE_DESCRIPTION_RECORD_NUMBER = 0x14,EFI_MISC_COOLING_DEVICE_TEMP_LINK_RECORD_NUMBER = 0x15,EFI_MISC_TEMPERATURE_PROBE_DESCRIPTION_RECORD_NUMBER = 0x16,EFI_MISC_ELECTRICAL_CURRENT_PROBE_DESCRIPTION_RECORD_NUMBER = 0x17,EFI_MISC_REMOTE_ACCESS_MANUFACTURER_DESCRIPTION_RECORD_NUMBER = 0x18,EFI_MISC_BIS_ENTRY_POINT_RECORD_NUMBER = 0x19,EFI_MISC_BOOT_INFORMATION_STATUS_RECORD_NUMBER = 0x1A,EFI_MISC_MANAGEMENT_DEVICE_DESCRIPTION_RECORD_NUMBER = 0x1B,EFI_MISC_MANAGEMENT_DEVICE_COMPONENT_DESCRIPTION_RECORD_NUMBER = 0x1C,EFI_MISC_IPMI_INTERFACE_TYPE_RECORD_NUMBER = 0x1D,EFI_MISC_IPMI_INTERFACE_TYPE_DATA_RECORD_NUMBER = 0x1D,EFI_MISC_SYSTEM_POWER_SUPPLY_RECORD_NUMBER = 0x1E,EFI_MISC_SMBIOS_STRUCT_ENCAP_RECORD_NUMBER = 0x1F,EFI_MISC_SYSTEM_EVENT_LOG_RECORD_NUMBER = 0x20,};
enum MACRO_EFI_USB_SPEED {EFI_USB_SPEED_FULL = 0x0,EFI_USB_SPEED_LOW = 0x1,EFI_USB_SPEED_HIGH = 0x2,EFI_USB_SPEED_SUPER = 0x3,EFI_USB_HC_RESET_GLOBAL = 0x1,EFI_USB_HC_RESET_HOST_CONTROLLER = 0x2,EFI_USB_HC_RESET_GLOBAL_WITH_DEBUG = 0x4,EFI_USB_HC_RESET_HOST_WITH_DEBUG = 0x8,EFI_USB_MAX_BULK_BUFFER_NUM = 0xA,EFI_USB_MAX_ISO_BUFFER_NUM = 0x7,EFI_USB_MAX_ISO_BUFFER_NUM1 = 0x2,EFI_USBFN_IO_PROTOCOL_REVISION = 0x10001,EFI_USER_INFO_STORAGE = 0xF,EFI_USER_INFO_STORAGE_VOLATILE = 0x0,EFI_USER_INFO_STORAGE_CREDENTIAL_NV = 0x1,EFI_USER_INFO_STORAGE_PLATFORM_NV = 0x2,EFI_USER_INFO_ACCESS = 0x70,EFI_USER_INFO_PUBLIC = 0x10,EFI_USER_INFO_PRIVATE = 0x20,EFI_USER_INFO_PROTECTED = 0x30,EFI_USER_INFO_EXCLUSIVE = 0x80,EFI_CREDENTIAL_CAPABILITIES_ENROLL = 0x1,EFI_CREDENTIAL_LOGON_FLAG_AUTO = 0x1,EFI_CREDENTIAL_LOGON_FLAG_DEFAULT = 0x2,EFI_USER_INFO_EMPTY_RECORD = 0x0,EFI_USER_INFO_NAME_RECORD = 0x1,EFI_USER_INFO_CREATE_DATE_RECORD = 0x2,EFI_USER_INFO_USAGE_DATE_RECORD = 0x3,EFI_USER_INFO_USAGE_COUNT_RECORD = 0x4,EFI_USER_INFO_IDENTIFIER_RECORD = 0x5,EFI_USER_INFO_CREDENTIAL_TYPE_RECORD = 0x6,EFI_USER_INFO_CREDENTIAL_TYPE_NAME_RECORD = 0x7,EFI_USER_INFO_CREDENTIAL_PROVIDER_RECORD = 0x8,EFI_USER_INFO_CREDENTIAL_PROVIDER_NAME_RECORD = 0x9,EFI_USER_INFO_PKCS11_RECORD = 0xA,EFI_USER_INFO_CBEFF_RECORD = 0xB,EFI_USER_INFO_FAR_RECORD = 0xC,EFI_USER_INFO_RETRY_RECORD = 0xD,EFI_USER_INFO_ACCESS_POLICY_RECORD = 0xE,EFI_USER_INFO_ACCESS_FORBID_LOAD = 0x1,EFI_USER_INFO_ACCESS_PERMIT_LOAD = 0x2,EFI_USER_INFO_ACCESS_ENROLL_SELF = 0x3,EFI_USER_INFO_ACCESS_ENROLL_OTHERS = 0x4,EFI_USER_INFO_ACCESS_MANAGE = 0x5,EFI_USER_INFO_ACCESS_SETUP = 0x6,EFI_USER_INFO_ACCESS_FORBID_CONNECT = 0x7,EFI_USER_INFO_ACCESS_PERMIT_CONNECT = 0x8,EFI_USER_INFO_ACCESS_BOOT_ORDER = 0x9,EFI_USER_INFO_ACCESS_BOOT_ORDER_MASK = 0xF,EFI_USER_INFO_ACCESS_BOOT_ORDER_INSERT = 0x0,EFI_USER_INFO_ACCESS_BOOT_ORDER_APPEND = 0x1,EFI_USER_INFO_ACCESS_BOOT_ORDER_REPLACE = 0x2,EFI_USER_INFO_ACCESS_BOOT_ORDER_NODEFAULT = 0x10,EFI_USER_INFO_IDENTITY_POLICY_RECORD = 0xF,EFI_USER_INFO_IDENTITY_FALSE = 0x0,EFI_USER_INFO_IDENTITY_TRUE = 0x1,EFI_USER_INFO_IDENTITY_CREDENTIAL_TYPE = 0x2,EFI_USER_INFO_IDENTITY_CREDENTIAL_PROVIDER = 0x3,EFI_USER_INFO_IDENTITY_NOT = 0x10,EFI_USER_INFO_IDENTITY_AND = 0x11,EFI_USER_INFO_IDENTITY_OR = 0x12,EFI_USER_INFO_GUID_RECORD = 0xFF,};
enum MACRO_FRAMEWORK_EFI {FRAMEWORK_EFI_ACPI_S3_RESUME_SCRIPT_TABLE = 0x0,FRAMEWORK_EFI_BOOT_SCRIPT_MEM_POLL_OPCODE = 0x9,FRAMEWORK_EFI_BOOT_SCRIPT_DISPATCH_2_OPCODE = 0xD,FRAMEWORK_EFI_BOOT_SCRIPT_TABLE_OPCODE = 0xAA,FRAMEWORK_EFI_BOOT_SCRIPT_TERMINATE_OPCODE = 0xFF,};
enum MACRO_FRAMEWORK_PEI {FRAMEWORK_PEI_SPECIFICATION_MAJOR_REVISION = 0,FRAMEWORK_PEI_SPECIFICATION_MINOR_REVISION = 91,FRAMEWORK_PEI_SERVICES_SIGNATURE = 6220110258678351184,FRAMEWORK_PEI_SERVICES_REVISION = 91,};
enum MACRO_MBR_SIGNATURE {MBR_SIGNATURE = 0xAA55,};
enum MACRO_PCI_EXPANSION {PCI_EXPANSION_ROM_HEADER_SIGNATURE = 0xAA55,PCI_DATA_STRUCTURE_SIGNATURE = 0x52494350,PCI_CODE_TYPE_PCAT_IMAGE = 0x0,};
enum MACRO_TPM_GENERATED {TPM_GENERATED_VALUE = 0xFF544347,TPM_ALG_ERROR = 0x0,TPM_ALG_FIRST = 0x1,TPM_ALG_SHA1 = 0x4,TPM_ALG_AES = 0x6,TPM_ALG_KEYEDHASH = 0x8,TPM_ALG_SHA256 = 0xB,TPM_ALG_SHA384 = 0xC,TPM_ALG_SHA512 = 0xD,TPM_ALG_NULL = 0x10,TPM_ALG_SM3_256 = 0x12,TPM_ALG_SM4 = 0x13,TPM_ALG_RSASSA = 0x14,TPM_ALG_RSAES = 0x15,TPM_ALG_RSAPSS = 0x16,TPM_ALG_OAEP = 0x17,TPM_ALG_ECDSA = 0x18,TPM_ALG_ECDH = 0x19,TPM_ALG_ECDAA = 0x1A,TPM_ALG_SM2 = 0x1B,TPM_ALG_ECSCHNORR = 0x1C,TPM_ALG_ECMQV = 0x1D,TPM_ALG_KDF1_SP800_56a = 0x20,TPM_ALG_KDF2 = 0x21,TPM_ALG_KDF1_SP800_108 = 0x22,TPM_ALG_ECC = 0x23,TPM_ALG_SYMCIPHER = 0x25,TPM_ALG_CTR = 0x40,TPM_ALG_OFB = 0x41,TPM_ALG_CBC = 0x42,TPM_ALG_CFB = 0x43,TPM_ALG_ECB = 0x44,TPM_ALG_LAST = 0x44,TPM_ECC_NONE = 0x0,TPM_ECC_NIST_P192 = 0x1,TPM_ECC_NIST_P224 = 0x2,TPM_ECC_NIST_P256 = 0x3,TPM_ECC_NIST_P384 = 0x4,TPM_ECC_NIST_P521 = 0x5,TPM_ECC_BN_P256 = 0x10,TPM_ECC_BN_P638 = 0x11,TPM_ECC_SM2_P256 = 0x20,TPM_CC_FIRST = 0x11F,TPM_CC_PP_FIRST = 0x11F,TPM_CC_NV_UndefineSpaceSpecial = 0x11F,TPM_CC_EvictControl = 0x120,TPM_CC_HierarchyControl = 0x121,TPM_CC_NV_UndefineSpace = 0x122,TPM_CC_ChangeEPS = 0x124,TPM_CC_ChangePPS = 0x125,TPM_CC_Clear = 0x126,TPM_CC_ClearControl = 0x127,TPM_CC_ClockSet = 0x128,TPM_CC_HierarchyChangeAuth = 0x129,TPM_CC_NV_DefineSpace = 0x12A,TPM_CC_PCR_Allocate = 0x12B,TPM_CC_PCR_SetAuthPolicy = 0x12C,TPM_CC_PP_Commands = 0x12D,TPM_CC_SetPrimaryPolicy = 0x12E,TPM_CC_FieldUpgradeStart = 0x12F,TPM_CC_ClockRateAdjust = 0x130,TPM_CC_CreatePrimary = 0x131,TPM_CC_NV_GlobalWriteLock = 0x132,TPM_CC_PP_LAST = 0x132,TPM_CC_GetCommandAuditDigest = 0x133,TPM_CC_NV_Increment = 0x134,TPM_CC_NV_SetBits = 0x135,TPM_CC_NV_Extend = 0x136,TPM_CC_NV_Write = 0x137,TPM_CC_NV_WriteLock = 0x138,TPM_CC_DictionaryAttackLockReset = 0x139,TPM_CC_DictionaryAttackParameters = 0x13A,TPM_CC_NV_ChangeAuth = 0x13B,TPM_CC_PCR_Event = 0x13C,TPM_CC_PCR_Reset = 0x13D,TPM_CC_SequenceComplete = 0x13E,TPM_CC_SetAlgorithmSet = 0x13F,TPM_CC_SetCommandCodeAuditStatus = 0x140,TPM_CC_FieldUpgradeData = 0x141,TPM_CC_IncrementalSelfTest = 0x142,TPM_CC_SelfTest = 0x143,TPM_CC_Startup = 0x144,TPM_CC_Shutdown = 0x145,TPM_CC_StirRandom = 0x146,TPM_CC_ActivateCredential = 0x147,TPM_CC_Certify = 0x148,TPM_CC_PolicyNV = 0x149,TPM_CC_CertifyCreation = 0x14A,TPM_CC_Duplicate = 0x14B,TPM_CC_GetTime = 0x14C,TPM_CC_GetSessionAuditDigest = 0x14D,TPM_CC_NV_Read = 0x14E,TPM_CC_NV_ReadLock = 0x14F,TPM_CC_ObjectChangeAuth = 0x150,TPM_CC_PolicySecret = 0x151,TPM_CC_Rewrap = 0x152,TPM_CC_Create = 0x153,TPM_CC_ECDH_ZGen = 0x154,TPM_CC_HMAC = 0x155,TPM_CC_Import = 0x156,TPM_CC_Load = 0x157,TPM_CC_Quote = 0x158,TPM_CC_RSA_Decrypt = 0x159,TPM_CC_HMAC_Start = 0x15B,TPM_CC_SequenceUpdate = 0x15C,TPM_CC_Sign = 0x15D,TPM_CC_Unseal = 0x15E,TPM_CC_PolicySigned = 0x160,TPM_CC_ContextLoad = 0x161,TPM_CC_ContextSave = 0x162,TPM_CC_ECDH_KeyGen = 0x163,TPM_CC_EncryptDecrypt = 0x164,TPM_CC_FlushContext = 0x165,TPM_CC_LoadExternal = 0x167,TPM_CC_MakeCredential = 0x168,TPM_CC_NV_ReadPublic = 0x169,TPM_CC_PolicyAuthorize = 0x16A,TPM_CC_PolicyAuthValue = 0x16B,TPM_CC_PolicyCommandCode = 0x16C,TPM_CC_PolicyCounterTimer = 0x16D,TPM_CC_PolicyCpHash = 0x16E,TPM_CC_PolicyLocality = 0x16F,TPM_CC_PolicyNameHash = 0x170,TPM_CC_PolicyOR = 0x171,TPM_CC_PolicyTicket = 0x172,TPM_CC_ReadPublic = 0x173,TPM_CC_RSA_Encrypt = 0x174,TPM_CC_StartAuthSession = 0x176,TPM_CC_VerifySignature = 0x177,TPM_CC_ECC_Parameters = 0x178,TPM_CC_FirmwareRead = 0x179,TPM_CC_GetCapability = 0x17A,TPM_CC_GetRandom = 0x17B,TPM_CC_GetTestResult = 0x17C,TPM_CC_Hash = 0x17D,TPM_CC_PCR_Read = 0x17E,TPM_CC_PolicyPCR = 0x17F,TPM_CC_PolicyRestart = 0x180,TPM_CC_ReadClock = 0x181,TPM_CC_PCR_Extend = 0x182,TPM_CC_PCR_SetAuthValue = 0x183,TPM_CC_NV_Certify = 0x184,TPM_CC_EventSequenceComplete = 0x185,TPM_CC_HashSequenceStart = 0x186,TPM_CC_PolicyPhysicalPresence = 0x187,TPM_CC_PolicyDuplicationSelect = 0x188,TPM_CC_PolicyGetDigest = 0x189,TPM_CC_TestParms = 0x18A,TPM_CC_Commit = 0x18B,TPM_CC_PolicyPassword = 0x18C,TPM_CC_ZGen_2Phase = 0x18D,TPM_CC_EC_Ephemeral = 0x18E,TPM_CC_LAST = 0x18E,TPM_RC_SUCCESS = 0x0,TPM_RC_BAD_TAG = 0x30,};
enum MACRO_TREE_PHYSICAL {TREE_PHYSICAL_PRESENCE_VENDOR_SPECIFIC_OPERATION = 128,TREE_BIOS_TPM_MANAGEMENT_FLAG_NO_PPI_CLEAR = 2,TREE_VENDOR_LIB_FLAG_RESET_TRACK = 8,TREE_PP_OPERATION_RESPONSE_SUCCESS = 0,TREE_PP_OPERATION_RESPONSE_USER_ABORT = -16,TREE_PP_OPERATION_RESPONSE_BIOS_FAILURE = -15,TREE_PP_SUBMIT_REQUEST_TO_PREOS_SUCCESS = 0,TREE_PP_SUBMIT_REQUEST_TO_PREOS_NOT_IMPLEMENTED = 1,TREE_PP_SUBMIT_REQUEST_TO_PREOS_GENERAL_FAILURE = 2,TREE_PP_SUBMIT_REQUEST_TO_PREOS_BLOCKED_BY_BIOS_SETTINGS = 3,TREE_PP_GET_USER_CONFIRMATION_NOT_IMPLEMENTED = 0,TREE_PP_GET_USER_CONFIRMATION_BIOS_ONLY = 1,TREE_PP_GET_USER_CONFIRMATION_BLOCKED_BY_BIOS_CONFIGURATION = 2,TREE_PP_GET_USER_CONFIRMATION_ALLOWED_AND_PPUSER_REQUIRED = 3,TREE_PP_GET_USER_CONFIRMATION_ALLOWED_AND_PPUSER_NOT_REQUIRED = 4,};
typedef struct _0831F8F0C244ACA3C5EEA0CD710FB4C5 MEMORY_CURRENT_TYPE;
typedef struct _MTRR_FIXED_SETTINGS_ MTRR_FIXED_SETTINGS;
typedef void (*NET_VECTOR_EXT_FREE)(void *Arg);
typedef struct _52F38D82287F88B2A17E25A2ED2468AA PEI_NT_AUTOSCAN_PPI;
typedef struct _PEI_SMM_CONTROL_PPI PEI_SMM_CONTROL_PPI;
typedef struct _C04C39A66757B1B312A1927BE6696E8E PROCESSOR_SIGNATURE;
typedef struct s_pxe_cpb_fill_header PXE_CPB_FILL_HEADER;
typedef union u_pxe_cpb_nvdata_bulk PXE_CPB_NVDATA_BULK;
typedef struct s_pxe_pcc_config_info PXE_PCC_CONFIG_INFO;
typedef struct s_pxe_pci_config_info PXE_PCI_CONFIG_INFO;
typedef struct _BB3921AB7F528B09C1A593D3B64EBEAD SAL_ST_TR_DECRIPTOR;
typedef struct _CE9A3204B8C1C2509BA36FC45EB55845 SCRIPT_COMMAND_LIST;
struct SECURITY_ATTRIBUTES;
typedef struct _8628C3DD88575B338D7ABAAFA3EAD15C SMBIOS_TABLE_TYPE10;
typedef struct _100D81B4237FAB0EBA630D1B6897A38B SMBIOS_TABLE_TYPE11;
typedef struct _100D81B4237FAB0EBA630D1B6897A38B SMBIOS_TABLE_TYPE12;
typedef struct _E605436B6D69FC7AD8B1625024596CB4 SMBIOS_TABLE_TYPE13;
typedef struct _8F68734F21FB1945F73C1D59FD3D19D0 SMBIOS_TABLE_TYPE14;
typedef struct _6F94CA10078635A6F69CDB6765474AFB SMBIOS_TABLE_TYPE15;
typedef struct _8CCFC712507343159710C2C6E9B9EE3D SMBIOS_TABLE_TYPE16;
typedef struct _990147E37745A780E6F9BC0FFF0E7591 SMBIOS_TABLE_TYPE17;
typedef struct _1FD5E1697B5014547CA1AF0794430D19 SMBIOS_TABLE_TYPE18;
typedef struct _8773C7B7E197EAF8615A1D8A34F133BB SMBIOS_TABLE_TYPE19;
typedef struct _1C77B76F7209E6FA2397C6D5BFA84409 SMBIOS_TABLE_TYPE20;
typedef struct _FA14C0B71678195363B92AA831A8E66C SMBIOS_TABLE_TYPE21;
typedef struct _7C39655131502DCAEDDA105E88BDBF6D SMBIOS_TABLE_TYPE22;
typedef struct _D6E0E84002FDFC4F36E9C535A677D09E SMBIOS_TABLE_TYPE23;
typedef struct _C739D6E54704F587F137AFFE9786274F SMBIOS_TABLE_TYPE24;
typedef struct _0E283308D13FEE21B5F736A1468FA7B5 SMBIOS_TABLE_TYPE25;
typedef struct _70130FD93B81EEC2C8493C4688E5C28A SMBIOS_TABLE_TYPE26;
typedef struct _ED33D109A02D5772A279DF2D26963171 SMBIOS_TABLE_TYPE27;
typedef struct _401C12086CCA49F0E88941330385927B SMBIOS_TABLE_TYPE28;
typedef struct _31AB4F14E1C573210755755B47923018 SMBIOS_TABLE_TYPE29;
typedef struct _15A49F419DCE8915B951AE1411FD501B SMBIOS_TABLE_TYPE30;
typedef struct _758791F50DE192112E59CD06B1C0A25A SMBIOS_TABLE_TYPE31;
typedef struct _CE454202E1196C7D0F36AA94D7758685 SMBIOS_TABLE_TYPE32;
typedef struct _6733347D6230688C87E04513380F5605 SMBIOS_TABLE_TYPE33;
typedef struct _D7001D855D9D35654C2AB824290A5586 SMBIOS_TABLE_TYPE34;
typedef struct _99D936DB04230E832F57F71DE50411A4 SMBIOS_TABLE_TYPE35;
typedef struct _8960061FCCBB7A36C6DBDC8DDD8214CE SMBIOS_TABLE_TYPE36;
typedef struct _5E0CFDD1D00C5657448370B9A8E9AF5F SMBIOS_TABLE_TYPE37;
typedef struct _A7AA59FC18C624779D556E8F6729DDF8 SMBIOS_TABLE_TYPE38;
typedef struct _4386EE58264757D1F2365CEF729FF06D SMBIOS_TABLE_TYPE39;
typedef struct _F3F4EB21D4CD1644BEF61DF9960042A1 SMBIOS_TABLE_TYPE40;
typedef struct _958A0E0CAD30DEEE399D82016069823E SMBIOS_TABLE_TYPE41;
typedef struct _916275EA6FA5F558428BF0B97726939A SMBIOS_TABLE_TYPE42;
typedef struct _5DECBD7F3322FDC6BFF233D91FC4F66F SMM_S3_RESUME_STATE;
typedef struct _E9F6C04F95593CCF2492DE00493F0DD8 TCP4_IO_CONFIG_DATA;
typedef struct _4E39C5AFB1C491ADEFB864B6659C7AD8 TCP6_IO_CONFIG_DATA;
typedef union _1D15C627A7B6A1604BA06230A4689DD1 TCP_IO_LISTEN_TOKEN;
typedef struct _9D264345311208DC54CDE5FE65FDDECE TPM12_PCR_SELECTION;
typedef struct _8E62989F1CECE56FEC4E86432FBA7D0A TPM2B_CREATION_DATA;
typedef struct _B6C5964CB910F0099F62EF9C07DF52E6 TPM2B_DIGEST_VALUES;
typedef struct _EBA360CF91A54674EFD80EDA165ECE6A TPM2B_ECC_PARAMETER;
typedef struct _527B574472DA6B2ACA7924B57D9DCFDB TPM2B_MAX_NV_BUFFER;
typedef struct _9550CB126FCD617E5CD0AFA0E08ED7ED TPM2_COMMAND_HEADER;
typedef struct _4ABC1B5E6ED33879201640F22DCC37CF TPMS_SCHEME_SIGHASH;
typedef struct _0B1486E1B93958FC8F6A72435EE19098 TPMT_SYM_DEF_OBJECT;
typedef struct tdTPM_AUDIT_EVENT_OUT TPM_AUDIT_EVENT_OUT;
typedef struct tdTPM_CMK_MA_APPROVAL TPM_CMK_MA_APPROVAL;
typedef struct tdTPM_DA_INFO_LIMITED TPM_DA_INFO_LIMITED;
typedef struct tdTPM_DELEGATE_PUBLIC TPM_DELEGATE_PUBLIC;
typedef struct tdTPM_KEY_HANDLE_LIST TPM_KEY_HANDLE_LIST;
typedef struct tdTPM_MIGRATE_ASYMKEY TPM_MIGRATE_ASYMKEY;
typedef struct tdTPM_PERMANENT_FLAGS TPM_PERMANENT_FLAGS;
typedef struct tdTPM_RQU_COMMAND_HDR TPM_RQU_COMMAND_HDR;
typedef struct tdTPM_RSP_COMMAND_HDR TPM_RSP_COMMAND_HDR;
typedef struct _VARIABLE_INFO_ENTRY VARIABLE_INFO_ENTRY;
typedef struct _74097EF1038EE9B28B2F1ACB82BBA633 ATA5_IDENTIFY_DATA;
typedef struct _BA7E834680A60A49D93770311CBE8601 ATAPI_INQUIRY_DATA;
typedef struct _1E0D073C36FF4EEB406B745BB1E29357 AUTH_VARIABLE_INFO;
typedef struct _44CD0FFB1E5A9FF01876F1F6AAADC243 EFI_BLOCK_IO_MEDIA;
typedef struct _1DC9A8B91EFF5C97ABBBC3E0E26E6DE5 EFI_CAPSULE_HEADER;
typedef struct _EFI_DHCP4_PROTOCOL EFI_DHCP4_PROTOCOL;
typedef struct _EFI_DHCP6_PROTOCOL EFI_DHCP6_PROTOCOL;
typedef struct _4D869B13F060BA3FEE65879E2810998E EFI_DISK_IO2_TOKEN;
typedef struct _B44D925D15888068842F296C53A42C40 EFI_DNS4_MODE_DATA;
typedef struct _CC8A8E7BC00E3AE52B3C896EC08E5AF9 EFI_DNS6_MODE_DATA;
typedef struct _0B4D06972EA9D643500DE895FC601FFB EFI_EXP_BASE2_DATA;
typedef struct _EFI_HASH2_PROTOCOL EFI_HASH2_PROTOCOL;
typedef struct _F2E155DB6D099B6798F04C649E8B92A6 EFI_HII_DATA_TABLE;
typedef struct _EFI_HII_GLYPH_INFO EFI_HII_GLYPH_INFO;
typedef struct _EFI_IFR_BITWISE_OR EFI_IFR_BITWISE_OR;
typedef struct _8292127E0542D73B0C01312C9382287A EFI_IFR_DATA_ARRAY;
typedef struct _03C169547699C2033BF44B51FAFF1E5C EFI_IFR_DATA_ENTRY;
typedef struct _EFI_IFR_DISABLE_IF EFI_IFR_DISABLE_IF;
typedef struct _BE973F4FDB064641654791385863872C EFI_IFR_END_ONE_OF;
typedef struct _91CBCF8FA4E4D584341D4DA50085DD74 EFI_IFR_EQ_VAR_VAL;
typedef struct _EFI_IFR_GUID_CLASS EFI_IFR_GUID_CLASS;
typedef struct _EFI_IFR_GUID_LABEL EFI_IFR_GUID_LABEL;
typedef struct _EFI_IFR_LESS_EQUAL EFI_IFR_LESS_EQUAL;
typedef struct _EFI_IFR_REFRESH_ID EFI_IFR_REFRESH_ID;
typedef struct _EFI_IFR_SHIFT_LEFT EFI_IFR_SHIFT_LEFT;
typedef struct _EFI_IFR_TO_BOOLEAN EFI_IFR_TO_BOOLEAN;
typedef union _4EA06DB75466BFF2377E9F8190FC5FC8 EFI_IFR_TYPE_VALUE;
typedef struct _EFI_IFR_WARNING_IF EFI_IFR_WARNING_IF;
typedef struct _EFI_IPSEC_PAD_DATA EFI_IPSEC_PAD_DATA;
typedef struct _EFI_IPSEC_PROTOCOL EFI_IPSEC_PROTOCOL;
typedef struct _EFI_IPSEC_SA_DATA2 EFI_IPSEC_SA_DATA2;
typedef struct _EFI_IPSEC_SPD_DATA EFI_IPSEC_SPD_DATA;
typedef struct _AF461F30A45AE1004748489948099869 EFI_KEY_DESCRIPTOR;
typedef union _A7D7BDD8B24B112D605A993696560BF6 EFI_PCI_ROM_HEADER;
typedef struct _EFI_PEI_CPU_IO_PPI EFI_PEI_CPU_IO_PPI;
typedef union _E3C5383F745E4FC61C1B778FD0896220 EFI_PEI_DESCRIPTOR;
typedef struct _EFI_PEI_RESET2_PPI EFI_PEI_RESET2_PPI;
typedef struct _EFI_PEI_SMBUS2_PPI EFI_PEI_SMBUS2_PPI;
typedef struct _7C61700BBDD1F47A3FB1C80AED773DFE EFI_SERIAL_IO_MODE;
typedef struct _EFI_SHELL_ARG_INFO EFI_SHELL_ARG_INFO;
typedef struct _EFI_SHELL_PROTOCOL EFI_SHELL_PROTOCOL;
typedef struct _A0B3582B041A72DF0474C8B839A5C8C0 EFI_SIGNATURE_DATA;
typedef struct _D7D01B9099636E49AAF0C9F275D09F74 EFI_SIGNATURE_LIST;
typedef struct _B2A071DCF8C2EFE52336CEBC18503C32 EFI_SMM_IO_ACCESS2;
typedef struct _8BBF95EF49E646019DF2D64A9CA75947 EFI_SMM_SW_CONTEXT;
typedef union _7B8A6F160A252FAE1A70EEA141D54239 EFI_SYSTEM_CONTEXT;
typedef struct _E61BC969A8C3B70E128DC9F089720568 EFI_VLAN_FIND_DATA;
typedef struct _GB_NIC_DEVICE_PATH GB_NIC_DEVICE_PATH;
typedef struct _53CB2C6CEB72FF4C5581D54CAF7F12D2 IDE_REGS_BASE_ADDR;
typedef union _1BD84297A21C9A50FCE6DE8FD55A3DE1 LOCAL_APIC_ICR_LOW;
typedef union _B5A92F8B2B3252A716F3F5184DF78D07 LOCAL_APIC_VERSION;
typedef struct CRITICAL_SECTION *LPCRITICAL_SECTION;
enum MACRO_BASE_LIBRARY {BASE_LIBRARY_JUMP_BUFFER_ALIGNMENT = 8,};
enum MACRO_BLOCKELEMENT {BLOCKELEMENT_FULL_BLOCK = 0x2588,BLOCKELEMENT_LIGHT_SHADE = 0x2591,};
enum MACRO_DEFAULT_INIT {DEFAULT_INIT_ROW = 1,DEFAULT_AUTO_LF = 0,};
enum MACRO_EFI_FIRMWARE {EFI_FIRMWARE_IMAGE_DESCRIPTOR_VERSION = 3,};
enum MACRO_EFI_HII_FONT {EFI_HII_FONT = 1,EFI_HII_STRING = 2,EFI_HII_IFR = 3,EFI_HII_KEYBOARD = 4,EFI_HII_HANDLES = 5,EFI_HII_VARIABLE = 6,EFI_HII_DEVICE_PATH = 7,};
enum MACRO_EFI_IFR_LAST {EFI_IFR_LAST_OPCODE = 38,EFI_IFR_OEM_OP = 254,EFI_IFR_NV_ACCESS_COMMAND = 255,EFI_IFR_FLAG_DEFAULT = 1,EFI_IFR_FLAG_MANUFACTURING = 2,EFI_IFR_FLAG_INTERACTIVE = 4,EFI_IFR_FLAG_NV_ACCESS = 8,EFI_IFR_FLAG_LATE_CHECK = 32,EFI_IFR_FLAG_CREATED = 128,EFI_IFR_BANNER_TIMEOUT = 255,EFI_AGGREGATE_AUTH_STATUS_PLATFORM_OVERRIDE = 1,EFI_AGGREGATE_AUTH_STATUS_IMAGE_SIGNED = 2,EFI_AGGREGATE_AUTH_STATUS_NOT_TESTED = 4,EFI_AGGREGATE_AUTH_STATUS_TEST_FAILED = 8,EFI_AGGREGATE_AUTH_STATUS_ALL = 15,EFI_LOCAL_AUTH_STATUS_PLATFORM_OVERRIDE = 65536,EFI_LOCAL_AUTH_STATUS_IMAGE_SIGNED = 131072,EFI_LOCAL_AUTH_STATUS_NOT_TESTED = 262144,EFI_LOCAL_AUTH_STATUS_TEST_FAILED = 524288,EFI_LOCAL_AUTH_STATUS_ALL = 983040,EFI_FVB_READ_DISABLED_CAP = 1,EFI_FVB_READ_ENABLED_CAP = 2,EFI_FVB_READ_STATUS = 4,EFI_FVB_WRITE_DISABLED_CAP = 8,EFI_FVB_WRITE_ENABLED_CAP = 16,EFI_FVB_WRITE_STATUS = 32,EFI_FVB_LOCK_CAP = 64,EFI_FVB_LOCK_STATUS = 128,EFI_FVB_STICKY_WRITE = 512,EFI_FVB_MEMORY_MAPPED = 1024,EFI_FVB_ERASE_POLARITY = 2048,EFI_FVB_ALIGNMENT_CAP = 32768,EFI_FVB_ALIGNMENT_2 = 65536,EFI_FVB_ALIGNMENT_4 = 131072,EFI_FVB_ALIGNMENT_8 = 262144,EFI_FVB_ALIGNMENT_16 = 524288,EFI_FVB_ALIGNMENT_32 = 1048576,EFI_FVB_ALIGNMENT_64 = 2097152,EFI_FVB_ALIGNMENT_128 = 4194304,EFI_FVB_ALIGNMENT_256 = 8388608,EFI_FVB_ALIGNMENT_512 = 16777216,EFI_FVB_ALIGNMENT_1K = 33554432,EFI_FVB_ALIGNMENT_2K = 67108864,EFI_FVB_ALIGNMENT_4K = 134217728,EFI_FVB_ALIGNMENT_8K = 268435456,EFI_FVB_ALIGNMENT_16K = 536870912,EFI_FVB_ALIGNMENT_32K = 1073741824,EFI_FVB_ALIGNMENT_64K = -2147483648,EFI_FVB_CAPABILITIES = 91,EFI_FVB_STATUS = 164,EFI_HOB_TYPE_CV = 8,};
enum MACRO_EFI_IFR_TYPE {EFI_IFR_TYPE_NUM_SIZE_8 = 0x0,EFI_IFR_TYPE_NUM_SIZE_16 = 0x1,EFI_IFR_TYPE_NUM_SIZE_32 = 0x2,EFI_IFR_TYPE_NUM_SIZE_64 = 0x3,EFI_IFR_TYPE_BOOLEAN = 0x4,EFI_IFR_TYPE_TIME = 0x5,EFI_IFR_TYPE_DATE = 0x6,EFI_IFR_TYPE_STRING = 0x7,EFI_IFR_TYPE_OTHER = 0x8,EFI_IFR_TYPE_UNDEFINED = 0x9,EFI_IFR_TYPE_ACTION = 0xA,EFI_IFR_TYPE_BUFFER = 0xB,EFI_IFR_TYPE_REF = 0xC,EFI_IFR_OPTION_DEFAULT = 0x10,EFI_IFR_OPTION_DEFAULT_MFG = 0x20,EFI_IFR_STRING_UNSIGNED_DEC = 0x0,EFI_IFR_STRING_SIGNED_DEC = 0x1,EFI_IFR_STRING_LOWERCASE_HEX = 0x2,EFI_IFR_STRING_UPPERCASE_HEX = 0x3,EFI_IFR_STRING_ASCII = 0x0,EFI_IFR_STRING_UNICODE = 0x8,EFI_IFR_FF_CASE_SENSITIVE = 0x0,EFI_IFR_FF_CASE_INSENSITIVE = 0x1,EFI_IFR_FLAGS_FIRST_MATCHING = 0x0,EFI_IFR_FLAGS_FIRST_NON_MATCHING = 0x1,EFI_AFFECTED_BY_STANDARD_SHIFT = 0x1,EFI_AFFECTED_BY_CAPS_LOCK = 0x2,EFI_AFFECTED_BY_NUM_LOCK = 0x4,EFI_NULL_MODIFIER = 0x0,EFI_LEFT_CONTROL_MODIFIER = 0x1,EFI_RIGHT_CONTROL_MODIFIER = 0x2,EFI_LEFT_ALT_MODIFIER = 0x3,EFI_RIGHT_ALT_MODIFIER = 0x4,EFI_ALT_GR_MODIFIER = 0x5,EFI_INSERT_MODIFIER = 0x6,EFI_DELETE_MODIFIER = 0x7,EFI_PAGE_DOWN_MODIFIER = 0x8,EFI_PAGE_UP_MODIFIER = 0x9,EFI_HOME_MODIFIER = 0xA,EFI_END_MODIFIER = 0xB,EFI_LEFT_SHIFT_MODIFIER = 0xC,EFI_RIGHT_SHIFT_MODIFIER = 0xD,EFI_CAPS_LOCK_MODIFIER = 0xE,EFI_NUM_LOCK_MODIFIER = 0xF,EFI_LEFT_ARROW_MODIFIER = 0x10,EFI_RIGHT_ARROW_MODIFIER = 0x11,EFI_DOWN_ARROW_MODIFIER = 0x12,EFI_UP_ARROW_MODIFIER = 0x13,EFI_NS_KEY_MODIFIER = 0x14,EFI_NS_KEY_DEPENDENCY_MODIFIER = 0x15,EFI_FUNCTION_KEY_ONE_MODIFIER = 0x16,EFI_FUNCTION_KEY_TWO_MODIFIER = 0x17,EFI_FUNCTION_KEY_THREE_MODIFIER = 0x18,EFI_FUNCTION_KEY_FOUR_MODIFIER = 0x19,EFI_FUNCTION_KEY_FIVE_MODIFIER = 0x1A,EFI_FUNCTION_KEY_SIX_MODIFIER = 0x1B,EFI_FUNCTION_KEY_SEVEN_MODIFIER = 0x1C,EFI_FUNCTION_KEY_EIGHT_MODIFIER = 0x1D,EFI_FUNCTION_KEY_NINE_MODIFIER = 0x1E,EFI_FUNCTION_KEY_TEN_MODIFIER = 0x1F,EFI_FUNCTION_KEY_ELEVEN_MODIFIER = 0x20,EFI_FUNCTION_KEY_TWELVE_MODIFIER = 0x21,EFI_PRINT_MODIFIER = 0x22,EFI_SYS_REQUEST_MODIFIER = 0x23,EFI_SCROLL_LOCK_MODIFIER = 0x24,EFI_PAUSE_MODIFIER = 0x25,EFI_BREAK_MODIFIER = 0x26,EFI_LEFT_LOGO_MODIFIER = 0x27,EFI_RIGHT_LOGO_MODIFIER = 0x28,EFI_MENU_MODIFIER = 0x29,EFI_HII_AIBT_END = 0x0,EFI_HII_AIBT_OVERLAY_IMAGES = 0x10,EFI_HII_AIBT_CLEAR_IMAGES = 0x11,EFI_HII_AIBT_RESTORE_SCRN = 0x12,EFI_HII_AIBT_OVERLAY_IMAGES_LOOP = 0x18,EFI_HII_AIBT_CLEAR_IMAGES_LOOP = 0x19,EFI_HII_AIBT_RESTORE_SCRN_LOOP = 0x1A,EFI_HII_AIBT_DUPLICATE = 0x20,EFI_HII_AIBT_SKIP2 = 0x21,EFI_HII_AIBT_SKIP1 = 0x22,EFI_HII_AIBT_EXT1 = 0x30,EFI_HII_AIBT_EXT2 = 0x31,EFI_HII_AIBT_EXT4 = 0x32,EFI_FV_FILE_ATTRIB_ALIGNMENT = 0x1F,EFI_FV_FILE_ATTRIB_FIXED = 0x100,EFI_FV_FILE_ATTRIB_MEMORY_MAPPED = 0x200,EFI_FVB2_READ_DISABLED_CAP = 0x1,EFI_FVB2_READ_ENABLED_CAP = 0x2,EFI_FVB2_READ_STATUS = 0x4,EFI_FVB2_WRITE_DISABLED_CAP = 0x8,EFI_FVB2_WRITE_ENABLED_CAP = 0x10,EFI_FVB2_WRITE_STATUS = 0x20,EFI_FVB2_LOCK_CAP = 0x40,EFI_FVB2_LOCK_STATUS = 0x80,EFI_FVB2_STICKY_WRITE = 0x200,EFI_FVB2_MEMORY_MAPPED = 0x400,EFI_FVB2_ERASE_POLARITY = 0x800,EFI_FVB2_READ_LOCK_CAP = 0x1000,EFI_FVB2_READ_LOCK_STATUS = 0x2000,EFI_FVB2_WRITE_LOCK_CAP = 0x4000,EFI_FVB2_WRITE_LOCK_STATUS = 0x8000,EFI_FVB2_ALIGNMENT = 0x1F0000,EFI_FVB2_ALIGNMENT_1 = 0x0,EFI_FVB2_ALIGNMENT_2 = 0x10000,EFI_FVB2_ALIGNMENT_4 = 0x20000,EFI_FVB2_ALIGNMENT_8 = 0x30000,EFI_FVB2_ALIGNMENT_16 = 0x40000,EFI_FVB2_ALIGNMENT_32 = 0x50000,EFI_FVB2_ALIGNMENT_64 = 0x60000,EFI_FVB2_ALIGNMENT_128 = 0x70000,EFI_FVB2_ALIGNMENT_256 = 0x80000,EFI_FVB2_ALIGNMENT_512 = 0x90000,EFI_FVB2_ALIGNMENT_1K = 0xA0000,EFI_FVB2_ALIGNMENT_2K = 0xB0000,EFI_FVB2_ALIGNMENT_4K = 0xC0000,EFI_FVB2_ALIGNMENT_8K = 0xD0000,EFI_FVB2_ALIGNMENT_16K = 0xE0000,EFI_FVB2_ALIGNMENT_32K = 0xF0000,EFI_FVB2_ALIGNMENT_64K = 0x100000,EFI_FVB2_ALIGNMENT_128K = 0x110000,EFI_FVB2_ALIGNMENT_256K = 0x120000,EFI_FVB2_ALIGNMENT_512K = 0x130000,EFI_FVB2_ALIGNMENT_1M = 0x140000,EFI_FVB2_ALIGNMENT_2M = 0x150000,EFI_FVB2_ALIGNMENT_4M = 0x160000,EFI_FVB2_ALIGNMENT_8M = 0x170000,EFI_FVB2_ALIGNMENT_16M = 0x180000,EFI_FVB2_ALIGNMENT_32M = 0x190000,EFI_FVB2_ALIGNMENT_64M = 0x1A0000,EFI_FVB2_ALIGNMENT_128M = 0x1B0000,EFI_FVB2_ALIGNMENT_256M = 0x1C0000,EFI_FVB2_ALIGNMENT_512M = 0x1D0000,EFI_FVB2_ALIGNMENT_1G = 0x1E0000,EFI_FVB2_ALIGNMENT_2G = 0x1F0000,EFI_FVB2_WEAK_ALIGNMENT = 0x80000000,EFI_FVH_SIGNATURE = 0x4856465F,EFI_FVH_REVISION = 0x2,EFI_FV_EXT_TYPE_OEM_TYPE = 0x1,EFI_FV_EXT_TYPE_GUID_TYPE = 0x2,};
enum MACRO_EFI_SMM_LOCK {EFI_SMM_LOCK_BOX_COMMAND_SAVE = 0x1,EFI_SMM_LOCK_BOX_COMMAND_UPDATE = 0x2,EFI_SMM_LOCK_BOX_COMMAND_RESTORE = 0x3,EFI_SMM_LOCK_BOX_COMMAND_SET_ATTRIBUTES = 0x4,EFI_SMM_LOCK_BOX_COMMAND_RESTORE_ALL_IN_PLACE = 0x5,};
enum MACRO_EFI_VARIABLE {EFI_VARIABLE_NON_VOLATILE = 0x1,EFI_VARIABLE_BOOTSERVICE_ACCESS = 0x2,EFI_VARIABLE_RUNTIME_ACCESS = 0x4,EFI_VARIABLE_HARDWARE_ERROR_RECORD = 0x8,EFI_VARIABLE_AUTHENTICATED_WRITE_ACCESS = 0x10,EFI_VARIABLE_TIME_BASED_AUTHENTICATED_WRITE_ACCESS = 0x20,EFI_VARIABLE_APPEND_WRITE = 0x40,};
enum MACRO_FORM_DISPLAY {FORM_DISPLAY_ENGINE_STATEMENT_SIGNATURE = 1096045382,};
enum MACRO_PRIMARY_SEED {PRIMARY_SEED_SIZE = 32,};
enum MACRO_SMM_VARIABLE {SMM_VARIABLE_FUNCTION_GET_VARIABLE = 1,SMM_VARIABLE_FUNCTION_GET_NEXT_VARIABLE_NAME = 2,SMM_VARIABLE_FUNCTION_SET_VARIABLE = 3,SMM_VARIABLE_FUNCTION_QUERY_VARIABLE_INFO = 4,SMM_VARIABLE_FUNCTION_READY_TO_BOOT = 5,SMM_VARIABLE_FUNCTION_EXIT_BOOT_SERVICE = 6,SMM_VARIABLE_FUNCTION_GET_STATISTICS = 7,SMM_VARIABLE_FUNCTION_LOCK_VARIABLE = 8,SMM_VARIABLE_FUNCTION_VAR_CHECK_VARIABLE_PROPERTY_SET = 9,SMM_VARIABLE_FUNCTION_VAR_CHECK_VARIABLE_PROPERTY_GET = 10,SMM_VARIABLE_FUNCTION_GET_PAYLOAD_SIZE = 11,};
enum MACRO_TCG_PLATFORM {TCG_PLATFORM_TYPE_CLIENT = 0,TCG_PLATFORM_TYPE_SERVER = 1,};
enum MACRO_VALID_LEGACY {VALID_LEGACY_ROM = 0x2,};
typedef struct _0B50ACA466291C2012B3546AEC85F4D2 MASTER_BOOT_RECORD;
typedef struct _9941F41FF0093C2959C1E393EB931501 MBCE_BIOS_RESERVED;
typedef struct _5837AA804C503539073946008DD14B2D MEMMAP_DEVICE_PATH;
typedef union _45BF217DBC3ED611F5A350EB16713DCF MSR_IA32_APIC_BASE;
typedef struct _3586E27D6D83D790E2F9C12516575AD2 NET_IP6_PSEUDO_HDR;
struct ORDERED_COLLECTION;
typedef struct _27D43449F90631E0AAF884FCC32869E8 PAL_TEST_INFO_INFO;
typedef struct _400C452C8F1EA0F2732C5164BBBC743C PAL_TLB_CHECK_INFO;
typedef struct _4B92571A797B6C02A24506DEE28228C3 PCCARD_DEVICE_PATH;
typedef struct _B99BE8752E42F1AB2FB6C58C636F30A3 PCI_DATA_STRUCTURE;
typedef struct _PEI_SMM_ACCESS_PPI PEI_SMM_ACCESS_PPI;
typedef struct s_pxe_cpb_initialize PXE_CPB_INITIALIZE;
typedef struct _147023CBBDBEDFDDB4978B461569FA75 SMBIOS_TABLE_TYPE0;
typedef struct _DED7ACBE1609AE7F7A12B82E8489D170 SMBIOS_TABLE_TYPE1;
typedef struct _7676233044F4F64A1DC4AC7E4996AEE6 SMBIOS_TABLE_TYPE2;
typedef struct _75D146EAF28C090BF60BE4D627294663 SMBIOS_TABLE_TYPE3;
typedef struct _23F89506555E7CF5AAADC8587C0EADC7 SMBIOS_TABLE_TYPE4;
typedef struct _CE2359FB6E2262580F7E492B83DE161B SMBIOS_TABLE_TYPE5;
typedef struct _A71D4C743651D25933CAA165006EBDF6 SMBIOS_TABLE_TYPE6;
typedef struct _A5357F3918FAAF90A6D6A34513CB52A2 SMBIOS_TABLE_TYPE7;
typedef struct _8177E03AC5A73E42434DF8F008FC2948 SMBIOS_TABLE_TYPE8;
typedef struct _9D1FBE9AA270F62D1110F10C83E964EB SMBIOS_TABLE_TYPE9;
typedef union _D1BE984AFB0100A4AE6FF980B7D60BE7 TCP_IO_CLOSE_TOKEN;
typedef union _ECDB53E3AB324F7DEE2A08EF635387FD TCP_IO_CONFIG_DATA;
typedef struct _139C1CF7A7B81607B0C74C6F8C17369D TPM2B_CONTEXT_DATA;
typedef struct _FB82E4901BECB6AC97749608974BB812 TPMA_STARTUP_CLEAR;
typedef struct _7CD83565691D17B24BA4D69D5CC3F0C9 TPML_DIGEST_VALUES;
typedef struct _745924604C6CB7260525BFD61C2FEAC5 TPML_PCR_SELECTION;
typedef struct _7A0A3F0C2529F585ED2AB4428A32AE8F TPMS_AUTH_RESPONSE;
typedef struct _B7581651F071A82BA983F24B2EDABE69 TPMS_CREATION_DATA;
typedef struct _A2D971EEC14FEC66AC419AE99ED8FA36 TPMS_CREATION_INFO;
typedef struct _D12245CE441E111193CC72D90D0AB154 TPMS_PCR_SELECTION;
typedef struct tdTPM_AUDIT_EVENT_IN TPM_AUDIT_EVENT_IN;
typedef struct tdTPM_DA_ACTION_TYPE TPM_DA_ACTION_TYPE;
typedef struct tdTPM_DELEGATE_LABEL TPM_DELEGATE_LABEL;
typedef struct tdTPM_DELEGATE_TABLE TPM_DELEGATE_TABLE;
typedef struct tdTPM_IDENTITY_PROOF TPM_IDENTITY_PROOF;
typedef struct tdTPM_NV_DATA_PUBLIC TPM_NV_DATA_PUBLIC;
typedef struct tdTPM_PCR_ATTRIBUTES TPM_PCR_ATTRIBUTES;
typedef struct tdTPM_PCR_INFO_SHORT TPM_PCR_INFO_SHORT;
typedef struct tdTPM_TRANSPORT_AUTH TPM_TRANSPORT_AUTH;
typedef struct _8495EDE704E4D8AE4EE20320278A9DC6 USB_DEVICE_REQUEST;
typedef struct _999FCC054EBD657D3F6DB4B2D8714F97 VENDOR_DEVICE_PATH;
enum _EFI_USBFN_MESSAGE {EfiUsbMsgNone = 0x0,EfiUsbMsgSetupPacket = 0x1,EfiUsbMsgEndpointStatusChangedRx = 0x2,EfiUsbMsgEndpointStatusChangedTx = 0x3,EfiUsbMsgBusEventDetach = 0x4,EfiUsbMsgBusEventAttach = 0x5,EfiUsbMsgBusEventReset = 0x6,EfiUsbMsgBusEventSuspend = 0x7,EfiUsbMsgBusEventResume = 0x8,EfiUsbMsgBusEventSpeed = 0x9,};
enum _EFI_USB_BUS_SPEED {UsbBusSpeedUnknown = 0x0,UsbBusSpeedLow = 0x1,UsbBusSpeedFull = 0x2,UsbBusSpeedHigh = 0x3,UsbBusSpeedSuper = 0x4,UsbBusSpeedMaximum = 0x4,};
typedef struct _AA032A76E921DB3BA10EE007C0115DA6 ATAPI_DEVICE_PATH;
typedef struct _B7EFE20DA3377E7AD2E71A2611ECA892 ATAPI_INQUIRY_CMD;
typedef struct _440914D3252E6E454F55D4FFE5D43D8B ATA_IDENTIFY_DATA;
typedef struct _05D489AAC0F9BB1887D00026D4310FE7 BDS_COMMON_OPTION;
typedef struct _5F3F6D3C0B4739D9A0ECDC40C1BF2C33 BLUETOOTH_ADDRESS;
typedef struct _D356719F7093E106E03D0DCF65678C87 CDROM_DEVICE_PATH;
typedef struct _EC1CCB0312C034DEB00F9C27D95C6285 CONTAINED_ELEMENT;
typedef void *DEBUG_PORT_HANDLE;
typedef struct _3447B62854163D4AEE09FE9F61549458 DYNAMICEX_MAPPING;
typedef struct _AC37B632FD87D504B62B3B503AC53191 EFI_ACPI_ASF_ADDR;
typedef struct _72AAB91DE3EEFC11230A4F397747C93D EFI_ACPI_ASF_ALRT;
typedef struct _B46353AB51234BADCBFF12757BFEF0BC EFI_ACPI_ASF_INFO;
typedef struct _E8DF9B3292661BC507CCAEA539B3F92E EFI_ACPI_ASF_RCTL;
typedef struct _5A83377D323A27282E50E2B8AEC0090F EFI_ACPI_ASF_RMCP;
typedef struct _49B141972C267017F3D798ECA1B5380C EFI_ARP_FIND_DATA;
typedef union _AD5D0A6DCE5F64CFAF357BB3A0648A64 EFI_BOOT_KEY_DATA;
typedef struct _FB71CE30D7CCDDEC85E5BB8165632F3B EFI_BOOT_SERVICES;
typedef struct _94668F84F3B04721E425FCF53448BF01 EFI_CAPSULE_TABLE;
typedef struct _EFI_DNS4_PROTOCOL EFI_DNS4_PROTOCOL;
typedef struct _EFI_DNS6_PROTOCOL EFI_DNS6_PROTOCOL;
typedef void (*EFI_DPC_PROCEDURE)(void *DpcContext);
typedef struct _BB2A9CEFE9788E770B3AB0AB3F9F5135 EFI_FILE_IO_TOKEN;
typedef struct _EFI_FILE_PROTOCOL EFI_FILE_PROTOCOL;
typedef struct _EFI_FTP4_PROTOCOL EFI_FTP4_PROTOCOL;
typedef struct _700F669AAAA0065862E665F7FCF885B4 EFI_FV_FILE_INFO2;
typedef struct _EFI_HASH_PROTOCOL EFI_HASH_PROTOCOL;
typedef struct _10C10574ED0AE2ED1280822FCD0AF487 EFI_HII_FONT_PACK;
typedef struct _EFI_HII_RGB_PIXEL EFI_HII_RGB_PIXEL;
typedef struct _6FF651407ECBCC5ECC66469A81BF91B5 EFI_HOB_GUID_TYPE;
typedef struct _EFI_HTTP_PROTOCOL EFI_HTTP_PROTOCOL;
typedef struct _352D1AB719DE4F69FB6A98BC0FF8FA7B EFI_I2C_OPERATION;
typedef union _3252EF1C391473AA09CA889665471465 EFI_IDENTIFY_DATA;
typedef struct _EFI_IFR_ANIMATION EFI_IFR_ANIMATION;
typedef struct _554224674F69B86A1891A44045034893 EFI_IFR_CHECK_BOX;
typedef struct _EFI_IFR_DEFAULT_2 EFI_IFR_DEFAULT_2;
typedef struct _EFI_IFR_EQ_ID_VAL EFI_IFR_EQ_ID_VAL;
typedef struct _820CFB4FB5CF3CE13AC7E48DA3FE278C EFI_IFR_INVENTORY;
typedef struct _EFI_IFR_LESS_THAN EFI_IFR_LESS_THAN;
typedef struct _EFI_IFR_MODAL_TAG EFI_IFR_MODAL_TAG;
typedef struct _EFI_IFR_NOT_EQUAL EFI_IFR_NOT_EQUAL;
typedef struct _EFI_IFR_OP_HEADER EFI_IFR_OP_HEADER;
typedef struct _EFI_IFR_TO_STRING EFI_IFR_TO_STRING;
typedef struct _EFI_IFR_UNDEFINED EFI_IFR_UNDEFINED;
typedef struct _D179931413783EC21FDC57CE001D407C EFI_IP4_ICMP_TYPE;
typedef struct _93AFBAB3DF2401AC2D1BF9FF936BC51A EFI_IP4_MODE_DATA;
typedef struct _D179931413783EC21FDC57CE001D407C EFI_IP6_ICMP_TYPE;
typedef struct _FDD4725E56523ABD335FF2140BAFF3CA EFI_IP6_MODE_DATA;
typedef struct _EFI_IPSEC_SA_DATA EFI_IPSEC_SA_DATA;
typedef struct _FB5A10229933A8A55CD34CE9FAB61744 EFI_MISC_ELEMENTS;
typedef struct _D30FC8BF03F61B6660B9FED1D6DCFABB EFI_MTFTP4_OPTION;
typedef union _128168933DC57D6D560051B3DFD63BA3 EFI_MTFTP4_PACKET;
typedef struct _D30FC8BF03F61B6660B9FED1D6DCFABB EFI_MTFTP6_OPTION;
typedef union _CFED43B28AC7585DEFF643418DE0D8FB EFI_MTFTP6_PACKET;
typedef void *EFI_PEI_FV_HANDLE;
typedef struct _6BD28D9232744C53F8596E93389AFC65 EFI_PEI_RESET_PPI;
typedef struct _EFI_PEI_SMBUS_PPI EFI_PEI_SMBUS_PPI;
typedef struct _EFI_PEI_STALL_PPI EFI_PEI_STALL_PPI;
typedef struct _892A7B8B66E90ADE7F47F6E41103E6CC EFI_PIXEL_BITMASK;
typedef struct _E888D1400815DBA055347ED727EA37C1 EFI_REGEX_CAPTURE;
typedef struct _EFI_REST_PROTOCOL EFI_REST_PROTOCOL;
typedef struct _6FCBEE6BA0754DD9E119508C869DC7B5 EFI_SAL_FIT_ENTRY;
typedef union _08801BEA1B1EEB150B067CE39DB07F05 EFI_SMM_CPU_STATE;
typedef struct _FC60D38E48AB1C9DD1AEF485EB8C0EF1 EFI_SMM_IO_ACCESS;
typedef struct tdEFI_TCG2_PROTOCOL EFI_TCG2_PROTOCOL;
typedef struct _08D4D8EF781E325E516B9DF5F384A04D EFI_TCP4_IO_TOKEN;
typedef struct _EFI_TCP4_PROTOCOL EFI_TCP4_PROTOCOL;
typedef struct _79DA16AE253D27DC3A6F31A8B9020499 EFI_TCP6_IO_TOKEN;
typedef struct _EFI_TCP6_PROTOCOL EFI_TCP6_PROTOCOL;
typedef struct _EFI_TREE_PROTOCOL EFI_TREE_PROTOCOL;
typedef struct _EFI_UDP4_PROTOCOL EFI_UDP4_PROTOCOL;
typedef struct _EFI_UDP6_PROTOCOL EFI_UDP6_PROTOCOL;
typedef struct tdEFI_VARIABLE_DATA EFI_VARIABLE_DATA;
typedef struct _A8E5B033BD80DF5482A26EDD8868544F F1394_DEVICE_PATH;
typedef struct _B83B54D0511FC7118B2F502FFD9F4FA0 GAUGE_DATA_HEADER;
typedef struct _138354A4B6EE32FB8CA73971C51237F0 HANDLE_ENUMERATOR;
typedef union _C54F2C9D3A2B4295AFFA7925B1211165 IP_IO_IP_PROTOCOL;
typedef struct _6A67D9631EF9DAF31FBD55DA2AAAE815 ISCSI_DEVICE_PATH;
typedef WIN32_FIND_DATA *LPWIN32_FIND_DATA;
enum MACRO_ACPI_DEVICE {ACPI_DEVICE_PATH = 0x2,ACPI_DP = 0x1,ACPI_EXTENDED_DP = 0x2,};
enum MACRO_ATA_REQUEST {ATA_REQUEST_SENSE_ERROR = 0x70,ATA_SK_NO_SENSE = 0x0,ATA_SK_RECOVERY_ERROR = 0x1,ATA_SK_NOT_READY = 0x2,ATA_SK_MEDIUM_ERROR = 0x3,ATA_SK_HARDWARE_ERROR = 0x4,ATA_SK_ILLEGAL_REQUEST = 0x5,ATA_SK_UNIT_ATTENTION = 0x6,ATA_SK_DATA_PROTECT = 0x7,ATA_SK_BLANK_CHECK = 0x8,ATA_SK_VENDOR_SPECIFIC = 0x9,ATA_SK_RESERVED_A = 0xA,ATA_SK_ABORT = 0xB,ATA_SK_RESERVED_C = 0xC,ATA_SK_OVERFLOW = 0xD,ATA_SK_MISCOMPARE = 0xE,ATA_SK_RESERVED_F = 0xF,ATA_ASC_NOT_READY = 0x4,ATA_ASC_MEDIA_ERR1 = 0x10,ATA_ASC_MEDIA_ERR2 = 0x11,ATA_ASC_MEDIA_ERR3 = 0x14,ATA_ASC_MEDIA_ERR4 = 0x30,ATA_ASC_MEDIA_UPSIDE_DOWN = 0x6,ATA_ASC_INVALID_CMD = 0x20,ATA_ASC_LBA_OUT_OF_RANGE = 0x21,ATA_ASC_INVALID_FIELD = 0x24,ATA_ASC_WRITE_PROTECTED = 0x27,ATA_ASC_MEDIA_CHANGE = 0x28,ATA_ASC_RESET = 0x29,ATA_ASC_ILLEGAL_FIELD = 0x26,ATA_ASC_NO_MEDIA = 0x3A,ATA_ASC_ILLEGAL_MODE_FOR_THIS_TRACK = 0x64,ATA_ASCQ_IN_PROGRESS = 0x1,ATA_ERRREG_BBK = 0x80,ATA_ERRREG_UNC = 0x40,ATA_ERRREG_MC = 0x20,ATA_ERRREG_IDNF = 0x10,ATA_ERRREG_MCR = 0x8,ATA_ERRREG_ABRT = 0x4,ATA_ERRREG_TK0NF = 0x2,ATA_ERRREG_AMNF = 0x1,ATA_STSREG_BSY = 0x80,ATA_STSREG_DRDY = 0x40,ATA_STSREG_DWF = 0x20,ATA_STSREG_DF = 0x20,ATA_STSREG_DSC = 0x10,ATA_STSREG_DRQ = 0x8,ATA_STSREG_CORR = 0x4,ATA_STSREG_IDX = 0x2,ATA_STSREG_ERR = 0x1,ATA_CTLREG_SRST = 0x4,ATA_CTLREG_IEN_L = 0x2,};
enum MACRO_BOOT_OPTION {BOOT_OPTION_MAX_CHAR = 10,};
enum MACRO_BROWSER_HOT {BROWSER_HOT_KEY_SIGNATURE = 1397442626,FORM_DISPLAY_ENGINE_FORM_SIGNATURE = 1297237574,};
enum MACRO_DEBUG_AGENT {DEBUG_AGENT_INIT_PREMEM_SEC = 1,DEBUG_AGENT_INIT_POSTMEM_SEC = 2,DEBUG_AGENT_INIT_DXE_CORE = 3,DEBUG_AGENT_INIT_SMM = 4,DEBUG_AGENT_INIT_ENTER_SMI = 5,DEBUG_AGENT_INIT_EXIT_SMI = 6,DEBUG_AGENT_INIT_S3 = 7,DEBUG_AGENT_INIT_DXE_AP = 8,DEBUG_AGENT_INIT_PEI = 9,DEBUG_AGENT_INIT_DXE_LOAD = 10,DEBUG_AGENT_INIT_DXE_UNLOAD = 11,DEBUG_AGENT_INIT_THUNK_PEI_IA32TOX64 = 12,};
enum MACRO_DIGEST_SIZE {MD4_DIGEST_SIZE = 16,MD5_DIGEST_SIZE = 16,TDES_BLOCK_SIZE = 8,AES_BLOCK_SIZE = 16,MAX_STRING_SIZE = 4096,};
enum MACRO_EFI_FV_READ {EFI_FV_READ_DISABLE_CAP = 0x1,EFI_FV_READ_ENABLE_CAP = 0x2,EFI_FV_READ_STATUS = 0x4,EFI_FV_WRITE_DISABLE_CAP = 0x8,EFI_FV_WRITE_ENABLE_CAP = 0x10,EFI_FV_WRITE_STATUS = 0x20,EFI_FV_LOCK_CAP = 0x40,EFI_FV_LOCK_STATUS = 0x80,EFI_FV_WRITE_POLICY_RELIABLE = 0x100,EFI_FV_ALIGNMENT_CAP = 0x8000,EFI_FV_ALIGNMENT_2 = 0x10000,EFI_FV_ALIGNMENT_4 = 0x20000,EFI_FV_ALIGNMENT_8 = 0x40000,EFI_FV_ALIGNMENT_16 = 0x80000,EFI_FV_ALIGNMENT_32 = 0x100000,EFI_FV_ALIGNMENT_64 = 0x200000,EFI_FV_ALIGNMENT_128 = 0x400000,EFI_FV_ALIGNMENT_256 = 0x800000,EFI_FV_ALIGNMENT_512 = 0x1000000,EFI_FV_ALIGNMENT_1K = 0x2000000,EFI_FV_ALIGNMENT_2K = 0x4000000,EFI_FV_ALIGNMENT_4K = 0x8000000,EFI_FV_ALIGNMENT_8K = 0x10000000,EFI_FV_ALIGNMENT_16K = 0x20000000,EFI_FV_ALIGNMENT_32K = 0x40000000,EFI_FV_ALIGNMENT_64K = 0x80000000,};
enum MACRO_EFI_SCSI_IO {EFI_SCSI_IO_TYPE_RESERVED_LOW = 0x12,EFI_SCSI_IO_TYPE_RESERVED_HIGH = 0x1E,EFI_SCSI_IO_TYPE_UNKNOWN = 0x1F,EFI_SCSI_IO_DATA_DIRECTION_READ = 0x0,EFI_SCSI_IO_DATA_DIRECTION_WRITE = 0x1,EFI_SCSI_IO_DATA_DIRECTION_BIDIRECTIONAL = 0x2,EFI_SCSI_IO_STATUS_HOST_ADAPTER_OK = 0x0,EFI_SCSI_IO_STATUS_HOST_ADAPTER_TIMEOUT_COMMAND = 0x9,EFI_SCSI_IO_STATUS_HOST_ADAPTER_TIMEOUT = 0xB,EFI_SCSI_IO_STATUS_HOST_ADAPTER_MESSAGE_REJECT = 0xD,EFI_SCSI_IO_STATUS_HOST_ADAPTER_BUS_RESET = 0xE,EFI_SCSI_IO_STATUS_HOST_ADAPTER_PARITY_ERROR = 0xF,EFI_SCSI_IO_STATUS_HOST_ADAPTER_REQUEST_SENSE_FAILED = 0x10,EFI_SCSI_IO_STATUS_HOST_ADAPTER_SELECTION_TIMEOUT = 0x11,EFI_SCSI_IO_STATUS_HOST_ADAPTER_DATA_OVERRUN_UNDERRUN = 0x12,EFI_SCSI_IO_STATUS_HOST_ADAPTER_BUS_FREE = 0x13,EFI_SCSI_IO_STATUS_HOST_ADAPTER_PHASE_ERROR = 0x14,EFI_SCSI_IO_STATUS_HOST_ADAPTER_OTHER = 0x7F,EFI_SCSI_IO_STATUS_TARGET_GOOD = 0x0,EFI_SCSI_IO_STATUS_TARGET_CHECK_CONDITION = 0x2,EFI_SCSI_IO_STATUS_TARGET_CONDITION_MET = 0x4,EFI_SCSI_IO_STATUS_TARGET_BUSY = 0x8,EFI_SCSI_IO_STATUS_TARGET_INTERMEDIATE = 0x10,EFI_SCSI_IO_STATUS_TARGET_INTERMEDIATE_CONDITION_MET = 0x14,EFI_SCSI_IO_STATUS_TARGET_RESERVATION_CONFLICT = 0x18,EFI_SCSI_IO_STATUS_TARGET_COMMOND_TERMINATED = 0x22,EFI_SCSI_IO_STATUS_TARGET_QUEUE_FULL = 0x28,EFI_USB_NOERROR = 0x0,EFI_USB_ERR_NOTEXECUTE = 0x1,EFI_USB_ERR_STALL = 0x2,EFI_USB_ERR_BUFFER = 0x4,EFI_USB_ERR_BABBLE = 0x8,EFI_USB_ERR_NAK = 0x10,EFI_USB_ERR_CRC = 0x20,EFI_USB_ERR_TIMEOUT = 0x40,EFI_USB_ERR_BITSTUFF = 0x80,EFI_USB_ERR_SYSTEM = 0x100,};
enum MACRO_EFI_UNICODE {EFI_UNICODE_BYTE_ORDER_MARK = 65279,};
enum MACRO_FIELD_VALID {AUTH_PERIOD_FIELD_VALID = 0x1,HELD_PERIOD_FIELD_VALID = 0x2,START_PERIOD_FIELD_VALID = 0x4,MAX_START_FIELD_VALID = 0x8,};
enum MACRO_IMAGE_ERROR {IMAGE_ERROR_SUCCESS = 0,IMAGE_ERROR_IMAGE_READ = 1,IMAGE_ERROR_INVALID_PE_HEADER_SIGNATURE = 2,IMAGE_ERROR_INVALID_MACHINE_TYPE = 3,IMAGE_ERROR_INVALID_SUBSYSTEM = 4,IMAGE_ERROR_INVALID_IMAGE_ADDRESS = 5,IMAGE_ERROR_INVALID_IMAGE_SIZE = 6,IMAGE_ERROR_INVALID_SECTION_ALIGNMENT = 7,IMAGE_ERROR_SECTION_NOT_LOADED = 8,IMAGE_ERROR_FAILED_RELOCATION = 9,IMAGE_ERROR_FAILED_ICACHE_FLUSH = 10,IMAGE_ERROR_UNSUPPORTED = 11,};
enum MACRO_MAX_AARCH64 {MAX_AARCH64_EXCEPTION = 3,};
enum MACRO_MAX_COMMAND {MAX_COMMAND_SIZE = 4096,MAX_RESPONSE_SIZE = 4096,};
enum MACRO_MAX_CONTEXT {MAX_CONTEXT_SIZE = 4000,MAX_DIGEST_BUFFER = 1024,MAX_NV_INDEX_SIZE = 1024,MAX_CAP_BUFFER = 1024,};
enum MACRO_MAX_ORDERLY {MAX_ORDERLY_COUNT = 255,MAX_SYM_DATA = 128,MAX_RNG_ENTROPY_SIZE = 64,};
enum MACRO_MAX_SESSION {MAX_SESSION_NUMBER = 3,};
enum MACRO_MEDIA_CDROM {MEDIA_CDROM_DP = 0x2,MEDIA_VENDOR_DP = 0x3,MEDIA_FILEPATH_DP = 0x4,MEDIA_PROTOCOL_DP = 0x5,MEDIA_PIWG_FW_FILE_DP = 0x6,MEDIA_PIWG_FW_VOL_DP = 0x7,MEDIA_RELATIVE_OFFSET_RANGE_DP = 0x8,MEDIA_RAM_DISK_DP = 0x9,};
enum MACRO_MTRR_NUMBER {MTRR_NUMBER_OF_FIXED_MTRR = 11,};
enum MACRO_PCI_EXPRESS {PCI_EXPRESS_EXTENDED_CAPABILITY_ADVANCED_ERROR_REPORTING_ID = 0x1,PCI_EXPRESS_EXTENDED_CAPABILITY_ADVANCED_ERROR_REPORTING_VER1 = 0x1,PCI_EXPRESS_EXTENDED_CAPABILITY_ADVANCED_ERROR_REPORTING_VER2 = 0x2,PCI_EXPRESS_EXTENDED_CAPABILITY_VIRTUAL_CHANNEL_ID = 0x2,PCI_EXPRESS_EXTENDED_CAPABILITY_VIRTUAL_CHANNEL_MFVC = 0x9,PCI_EXPRESS_EXTENDED_CAPABILITY_VIRTUAL_CHANNEL_VER1 = 0x1,PCI_EXPRESS_EXTENDED_CAPABILITY_SERIAL_NUMBER_ID = 0x3,PCI_EXPRESS_EXTENDED_CAPABILITY_SERIAL_NUMBER_VER1 = 0x1,PCI_EXPRESS_EXTENDED_CAPABILITY_LINK_DECLARATION_ID = 0x5,PCI_EXPRESS_EXTENDED_CAPABILITY_LINK_DECLARATION_VER1 = 0x1,PCI_EXPRESS_EXTENDED_CAPABILITY_LINK_CONTROL_ID = 0x6,PCI_EXPRESS_EXTENDED_CAPABILITY_LINK_CONTROL_VER1 = 0x1,PCI_EXPRESS_EXTENDED_CAPABILITY_POWER_BUDGETING_ID = 0x4,PCI_EXPRESS_EXTENDED_CAPABILITY_POWER_BUDGETING_VER1 = 0x1,PCI_EXPRESS_EXTENDED_CAPABILITY_ACS_EXTENDED_ID = 0xD,PCI_EXPRESS_EXTENDED_CAPABILITY_ACS_EXTENDED_VER1 = 0x1,PCI_EXPRESS_EXTENDED_CAPABILITY_EVENT_COLLECTOR_ENDPOINT_ASSOCIATION_ID = 0x7,PCI_EXPRESS_EXTENDED_CAPABILITY_EVENT_COLLECTOR_ENDPOINT_ASSOCIATION_VER1 = 0x1,PCI_EXPRESS_EXTENDED_CAPABILITY_MULTI_FUNCTION_VIRTUAL_CHANNEL_ID = 0x8,PCI_EXPRESS_EXTENDED_CAPABILITY_MULTI_FUNCTION_VIRTUAL_CHANNEL_VER1 = 0x1,PCI_EXPRESS_EXTENDED_CAPABILITY_VENDOR_SPECIFIC_ID = 0xB,PCI_EXPRESS_EXTENDED_CAPABILITY_VENDOR_SPECIFIC_VER1 = 0x1,PCI_EXPRESS_EXTENDED_CAPABILITY_RCRB_HEADER_ID = 0xA,PCI_EXPRESS_EXTENDED_CAPABILITY_RCRB_HEADER_VER1 = 0x1,PCI_EXPRESS_EXTENDED_CAPABILITY_MULTICAST_ID = 0x12,PCI_EXPRESS_EXTENDED_CAPABILITY_MULTICAST_VER1 = 0x1,PCI_EXPRESS_EXTENDED_CAPABILITY_RESIZABLE_BAR_ID = 0x15,PCI_EXPRESS_EXTENDED_CAPABILITY_RESIZABLE_BAR_VER1 = 0x1,PCI_EXPRESS_EXTENDED_CAPABILITY_ARI_CAPABILITY_ID = 0xE,PCI_EXPRESS_EXTENDED_CAPABILITY_ARI_CAPABILITY_VER1 = 0x1,PCI_EXPRESS_EXTENDED_CAPABILITY_DYNAMIC_POWER_ALLOCATION_ID = 0x16,PCI_EXPRESS_EXTENDED_CAPABILITY_DYNAMIC_POWER_ALLOCATION_VER1 = 0x1,PCI_EXPRESS_EXTENDED_CAPABILITY_LATENCE_TOLERANCE_REPORTING_ID = 0x18,PCI_EXPRESS_EXTENDED_CAPABILITY_LATENCE_TOLERANCE_REPORTING_VER1 = 0x1,PCI_EXPRESS_EXTENDED_CAPABILITY_TPH_ID = 0x17,PCI_EXPRESS_EXTENDED_CAPABILITY_TPH_VER1 = 0x1,PCI_EXPRESS_EXTENDED_CAPABILITY_SECONDARY_PCIE_ID = 0x19,PCI_EXPRESS_EXTENDED_CAPABILITY_SECONDARY_PCIE_VER1 = 0x1,};
enum MACRO_PERFORMANCE {PERFORMANCE_SIGNATURE = 1718773072,};
enum MACRO_SECURE_BOOT {SECURE_BOOT_ENABLE = 1,SECURE_BOOT_DISABLE = 0,};
typedef struct _52FB2BE3912FD461A39F8430FF490DD0 MEASURED_HOB_DATA;
typedef struct _A1AA68FFA304BCE5A080072956243EF0 MEMORY_SPEED_TYPE;
typedef struct _D9DBAD3B20FF391AB4124197CBA327FA PAL_PLATFORM_INFO;
typedef struct _53473F06F9F395079C926B7BB88DD702 PCD_DATABASE_INIT;
typedef struct _0570B17222F3251C7E7975035D72282F PROCESSOR_ID_DATA;
typedef struct _688032D942D0A7D34EBB3FC94491FB6C PROCESSOR_VOLTAGE;
typedef struct _826166A315AD7F815B158091A827ADAE PSI_STATIC_STRUCT;
typedef struct s_pxe_db_get_status PXE_DB_GET_STATUS;
typedef struct s_pxe_db_initialize PXE_DB_INITIALIZE;
typedef struct s_pxe_db_statistics PXE_DB_STATISTICS;
typedef struct _FC1570775E7D1D4DC0C9D75FBE11BCB6 SAL_RECORD_HEADER;
typedef struct _05C0B7DFCC4B801203DDDF0EC0F7B25C SASEX_DEVICE_PATH;
typedef void *SHELL_FILE_HANDLE;
typedef struct tdTCG_PCR_EVENT_HDR TCG_PCR_EVENT_HDR;
typedef struct _6E0D180C745C9A79C39BC1FA90A9C0D8 TPML_ALG_PROPERTY;
typedef struct _92276E1B8A80B5159F464799742CD4E5 TPMS_ALG_PROPERTY;
typedef struct _FF5829BC88506E44C19973610DF8FFB1 TPMS_AUTH_COMMAND;
typedef struct _5B5F54FF204B33D9368F2209DA317CEF TPMS_CERTIFY_INFO;
typedef struct _E6239745ADE66C0A5D56B297D9B2B73C TPMS_CONTEXT_DATA;
typedef struct _E01EF2602DEBD78E635316685D577E29 TPMS_SCHEME_ECDAA;
typedef struct _FAD9E14BAE1BD4EEF8AB3A8C7429C8D0 TPMT_PUBLIC_PARMS;
typedef struct _474560A1B1DCBD1C24AD6598535B5A26 TPMT_TK_HASHCHECK;
typedef union _123E07857B1D3AADB4E61F24EB33B88D TPMU_CAPABILITIES;
typedef union _216B2186A7BA92D3D6EC7F4F72322E99 TPMU_PUBLIC_PARMS;
typedef union _05333A0F315413F4B234A464077EED47 TPMU_SYM_KEY_BITS;
typedef struct tdTPM_CERTIFY_INFO2 TPM_CERTIFY_INFO2;
typedef struct tdTPM_CMK_SIGTICKET TPM_CMK_SIGTICKET;
typedef struct tdTPM_COUNTER_VALUE TPM_COUNTER_VALUE;
typedef struct tdTPM_CURRENT_TICKS TPM_CURRENT_TICKS;
typedef struct tdTPM_DAA_SENSITIVE TPM_DAA_SENSITIVE;
typedef struct tdTPM_MSA_COMPOSITE TPM_MSA_COMPOSITE;
typedef struct tdTPM_NV_ATTRIBUTES TPM_NV_ATTRIBUTES;
typedef struct tdTPM_PCR_COMPOSITE TPM_PCR_COMPOSITE;
typedef struct tdTPM_PCR_INFO_LONG TPM_PCR_INFO_LONG;
typedef struct tdTPM_PCR_SELECTION TPM_PCR_SELECTION;
typedef struct tdTPM_STCLEAR_FLAGS TPM_STCLEAR_FLAGS;
typedef struct tdTPM_STORED_DATA12 TPM_STORED_DATA12;
typedef struct tdTPM_STORE_ASYMKEY TPM_STORE_ASYMKEY;
typedef struct tdTPM_STORE_PRIVKEY TPM_STORE_PRIVKEY;
typedef struct tdTPM_SYMMETRIC_KEY TPM_SYMMETRIC_KEY;
typedef struct _B657CEE4355D321E905412328E8C698B TrEE_EVENT_HEADER;
typedef union _4F1B8228CBDC668E7C1212969EC76646 UDP_TRANSMIT_DATA;
typedef struct undiconfig_table UNDI_CONFIG_TABLE;
typedef struct _55E4D2FC038374726F40A1D0C9425FFB ATAPI_READ10_CMD;
typedef struct _577B04073320737B875C0A6130C3E711 AUTH_NODE_HEADER;
typedef struct _7F4A2FF0E27B4FE6701C5CB0230B4949 BBS_STATUS_FLAGS;
typedef struct _B0CFE40299B2241B6D88CD103817DCF3 BMP_IMAGE_HEADER;
typedef struct _A2BB91E5C6574EE92762E6C832C7F2C8 CAPSULE_HOB_INFO;
typedef void (*EFI_AP_PROCEDURE)(void *Buffer);
typedef struct _EFI_ARP_PROTOCOL EFI_ARP_PROTOCOL;
typedef struct _EFI_BIS_PROTOCOL EFI_BIS_PROTOCOL;
typedef union _2EFADF1D0568BC49D90C26C7EF2D672C EFI_DEV_PATH_PTR;
typedef struct _515CEDC9B43131FD8B481EBCCB022659 EFI_DHCP4_HEADER;
typedef struct _A49E72078B76F4AC4F7118FBBDCD4631 EFI_DHCP4_PACKET;
typedef struct _3EE6D0D90E56B9C09100C124EDAC75FA EFI_DHCP6_HEADER;
typedef struct _8B2452E5B9D1FF29DC352664F48A8AF5 EFI_DHCP6_PACKET;
typedef struct _EFI_DPC_PROTOCOL EFI_DPC_PROTOCOL;
typedef struct _EFI_EAP_PROTOCOL EFI_EAP_PROTOCOL;
typedef struct _EFI_EBC_PROTOCOL EFI_EBC_PROTOCOL;
typedef struct _37A7EE8BF5E08FF8A71FA9F64F2825BD EFI_FV_FILE_INFO;
typedef union _3280120D17039F0C35393F7BCB14168E EFI_HASH2_OUTPUT;
typedef union _72DB0F79E0951D75542C31FE649E11C3 EFI_HEALTH_FLAGS;
typedef struct _76DF60A307B2AF677FDBB7728CC04997 EFI_HII_IFR_PACK;
typedef struct _BD4007E3E0C6D8CDC04540D2589E7968 EFI_HII_PACKAGES;
typedef struct _EFI_HII_PROTOCOL EFI_HII_PROTOCOL;
typedef struct _EFI_HII_ROW_INFO EFI_HII_ROW_INFO;
typedef struct _A4AC343ACBC8884B813ED3A3A73BDE99 EFI_HPC_LOCATION;
typedef struct _43A0E8C65EC56F9D699C6118165E9DE1 EFI_HTTP_MESSAGE;
typedef struct _EFI_IFR_ACTION_1 EFI_IFR_ACTION_1;
typedef struct _EFI_IFR_CATENATE EFI_IFR_CATENATE;
typedef struct _EFI_IFR_CHECKBOX EFI_IFR_CHECKBOX;
typedef struct _BE973F4FDB064641654791385863872C EFI_IFR_END_EXPR;
typedef struct _BE973F4FDB064641654791385863872C EFI_IFR_END_FORM;
typedef struct _EFI_IFR_EQ_ID_ID EFI_IFR_EQ_ID_ID;
typedef struct _EFI_IFR_FORM_MAP EFI_IFR_FORM_MAP;
typedef struct _EFI_IFR_FORM_SET EFI_IFR_FORM_SET;
typedef struct _A45E222FBF0E16471D786CEC6B9CAF4A EFI_IFR_GRAY_OUT;
typedef struct _EFI_IFR_MULTIPLY EFI_IFR_MULTIPLY;
typedef struct _EFI_IFR_PASSWORD EFI_IFR_PASSWORD;
typedef struct _EFI_IFR_RULE_REF EFI_IFR_RULE_REF;
typedef struct _EFI_IFR_SECURITY EFI_IFR_SECURITY;
typedef struct _EFI_IFR_SUBTITLE EFI_IFR_SUBTITLE;
typedef struct _EFI_IFR_SUBTRACT EFI_IFR_SUBTRACT;
typedef struct _A45E222FBF0E16471D786CEC6B9CAF4A EFI_IFR_SUPPRESS;
typedef struct _EFI_IFR_TO_LOWER EFI_IFR_TO_LOWER;
typedef struct _EFI_IFR_TO_UPPER EFI_IFR_TO_UPPER;
typedef struct _EFI_IFR_VARSTORE EFI_IFR_VARSTORE;
typedef struct _EFI_IMAGE_OUTPUT EFI_IMAGE_OUTPUT;
typedef struct _EFI_IP4_PROTOCOL EFI_IP4_PROTOCOL;
typedef struct _EFI_IP6_PROTOCOL EFI_IP6_PROTOCOL;
typedef struct _EFI_IPSEC_PAD_ID EFI_IPSEC_PAD_ID;
typedef struct _F78A0D139DB8C0035378F46675C6CBCF EFI_IPv4_ADDRESS;
typedef struct _E02AC8286318CBC14CD488B4B6212C6D EFI_IPv6_ADDRESS;
typedef struct _EFI_KMS_PROTOCOL EFI_KMS_PROTOCOL;
typedef struct _EFI_MTFTP4_TOKEN EFI_MTFTP4_TOKEN;
typedef struct _EFI_MTFTP6_TOKEN EFI_MTFTP6_TOKEN;
typedef struct _5C868509DF35970C1E194AE5854857CF EFI_NARROW_GLYPH;
typedef struct _EFI_PCD_PROTOCOL EFI_PCD_PROTOCOL;
typedef struct _EFI_PEI_SERVICES EFI_PEI_SERVICES;
typedef struct _EFI_RNG_PROTOCOL EFI_RNG_PROTOCOL;
typedef struct _EFI_SIO_PROTOCOL EFI_SIO_PROTOCOL;
typedef struct _9EA7D7CA7C4015174F893B7D167DF337 EFI_SYSTEM_TABLE;
typedef struct _EDEF2C6FBD1A6ED66EE2D29E201317E7 EFI_TABLE_HEADER;
typedef struct tdEFI_TCG2_VERSION EFI_TCG2_VERSION;
typedef struct _EFI_TCG_PROTOCOL EFI_TCG_PROTOCOL;
typedef union _63B58ABB6690812C9E02ADD697E36664 ELTORITO_CATALOG;
typedef struct _959F1E59735416E17B958F606B1E2001 GAUGE_DATA_ENTRY;
typedef struct _GET_PCD_INFO_PPI GET_PCD_INFO_PPI;
typedef union _B0501B9B93CFDD8D3C38257E77C447BD IP_IO_IP_RX_DATA;
typedef union _6215CD2E124325B080EA1FAB21DF5785 IP_IO_IP_TX_DATA;
typedef struct _IP_IO_SEND_ENTRY IP_IO_SEND_ENTRY;
typedef struct _3FF780582ABAFC11917E478BB2F072BE IPv4_DEVICE_PATH;
typedef struct _4CA45CAB643221FAE06100C5E3A3059C IPv6_DEVICE_PATH;
enum MACRO_ACPI_LARGE {ACPI_LARGE_GENERIC_REGISTER_DESCRIPTOR_NAME = 0x2,ACPI_GENERIC_REGISTER_DESCRIPTOR = 0x82,};
enum MACRO_ACPI_SMALL {ACPI_SMALL_FIXED_DMA_DESCRIPTOR_NAME = 0xA,ACPI_LARGE_GPIO_CONNECTION_DESCRIPTOR_NAME = 0xC,ACPI_LARGE_GENERIC_SERIAL_BUS_CONNECTION_DESCRIPTOR_NAME = 0xE,ACPI_FIXED_DMA_DESCRIPTOR = 0x55,ACPI_GPIO_CONNECTION_DESCRIPTOR = 0x8C,ACPI_GENERIC_SERIAL_BUS_CONNECTION_DESCRIPTOR = 0x8E,};
enum MACRO_BBS_FLOPPY {BBS_FLOPPY = 0x1,BBS_HARDDISK = 0x2,BBS_CDROM = 0x3,BBS_PCMCIA = 0x4,BBS_USB = 0x5,BBS_EMBED_NETWORK = 0x6,BBS_BEV_DEVICE = 0x80,BBS_UNKNOWN = 0xFF,BBS_DO_NOT_BOOT_FROM = 0xFFFC,BBS_LOWEST_PRIORITY = 0xFFFD,BBS_UNPRIORITIZED_ENTRY = 0xFFFE,BBS_IGNORE_ENTRY = 0xFFFF,};
enum MACRO_BROWSER_NO {BROWSER_NO_CHANGES = 0,BROWSER_SAVE_CHANGES = 1,BROWSER_DISCARD_CHANGES = 2,BROWSER_KEEP_CURRENT = 3,BROWSER_ACTION_UNREGISTER = 0,BROWSER_ACTION_DISCARD = 1,BROWSER_ACTION_DEFAULT = 2,BROWSER_ACTION_SUBMIT = 4,BROWSER_ACTION_RESET = 8,BROWSER_ACTION_EXIT = 16,BROWSER_ACTION_GOTO = 32,BROWSER_EXTENSION2_VERSION_1 = 65536,BROWSER_EXTENSION2_VERSION_1_1 = 65537,};
enum MACRO_CONSOLE_IN {CONSOLE_IN = 0x4,CONSOLE_ALL = 0x7,};
enum MACRO_EFI_ACPI_2 {EFI_ACPI_2_0_SYSTEM_MEMORY = 0,EFI_ACPI_2_0_SYSTEM_IO = 1,EFI_ACPI_2_0_PCI_CONFIGURATION_SPACE = 2,EFI_ACPI_2_0_EMBEDDED_CONTROLLER = 3,EFI_ACPI_2_0_SMBUS = 4,EFI_ACPI_2_0_FUNCTIONAL_FIXED_HARDWARE = 127,EFI_ACPI_2_0_ROOT_SYSTEM_DESCRIPTION_POINTER_REVISION = 2,EFI_ACPI_2_0_ROOT_SYSTEM_DESCRIPTION_TABLE_REVISION = 1,EFI_ACPI_2_0_EXTENDED_SYSTEM_DESCRIPTION_TABLE_REVISION = 1,EFI_ACPI_2_0_FIXED_ACPI_DESCRIPTION_TABLE_REVISION = 3,EFI_ACPI_2_0_PM_PROFILE_UNSPECIFIED = 0,EFI_ACPI_2_0_PM_PROFILE_DESKTOP = 1,EFI_ACPI_2_0_PM_PROFILE_MOBILE = 2,EFI_ACPI_2_0_PM_PROFILE_WORKSTATION = 3,EFI_ACPI_2_0_PM_PROFILE_ENTERPRISE_SERVER = 4,EFI_ACPI_2_0_PM_PROFILE_SOHO_SERVER = 5,EFI_ACPI_2_0_PM_PROFILE_APPLIANCE_PC = 6,EFI_ACPI_2_0_LEGACY_DEVICES = 1,EFI_ACPI_2_0_8042 = 2,EFI_ACPI_2_0_WBINVD = 1,EFI_ACPI_2_0_WBINVD_FLUSH = 2,EFI_ACPI_2_0_PROC_C1 = 4,EFI_ACPI_2_0_P_LVL2_UP = 8,EFI_ACPI_2_0_PWR_BUTTON = 16,EFI_ACPI_2_0_SLP_BUTTON = 32,EFI_ACPI_2_0_FIX_RTC = 64,EFI_ACPI_2_0_RTC_S4 = 128,EFI_ACPI_2_0_TMR_VAL_EXT = 256,EFI_ACPI_2_0_DCK_CAP = 512,EFI_ACPI_2_0_RESET_REG_SUP = 1024,EFI_ACPI_2_0_SEALED_CASE = 2048,EFI_ACPI_2_0_HEADLESS = 4096,EFI_ACPI_2_0_CPU_SW_SLP = 8192,EFI_ACPI_2_0_FIRMWARE_ACPI_CONTROL_STRUCTURE_VERSION = 1,EFI_ACPI_2_0_S4BIOS_F = 1,EFI_ACPI_2_0_MULTIPLE_APIC_DESCRIPTION_TABLE_REVISION = 1,EFI_ACPI_2_0_PCAT_COMPAT = 1,EFI_ACPI_2_0_PROCESSOR_LOCAL_APIC = 0,EFI_ACPI_2_0_IO_APIC = 1,EFI_ACPI_2_0_INTERRUPT_SOURCE_OVERRIDE = 2,EFI_ACPI_2_0_NON_MASKABLE_INTERRUPT_SOURCE = 3,EFI_ACPI_2_0_LOCAL_APIC_NMI = 4,EFI_ACPI_2_0_LOCAL_APIC_ADDRESS_OVERRIDE = 5,EFI_ACPI_2_0_IO_SAPIC = 6,EFI_ACPI_2_0_PROCESSOR_LOCAL_SAPIC = 7,EFI_ACPI_2_0_PLATFORM_INTERRUPT_SOURCES = 8,EFI_ACPI_2_0_LOCAL_APIC_ENABLED = 1,EFI_ACPI_2_0_SMART_BATTERY_DESCRIPTION_TABLE_REVISION = 1,EFI_ACPI_2_0_EMBEDDED_CONTROLLER_BOOT_RESOURCES_TABLE_REVISION = 1,EFI_ACPI_2_0_ROOT_SYSTEM_DESCRIPTION_POINTER_SIGNATURE = 2329016660419433298,EFI_ACPI_2_0_MULTIPLE_SAPIC_DESCRIPTION_TABLE_SIGNATURE = 1128878145,EFI_ACPI_2_0_SIMPLE_BOOT_FLAG_TABLE_SIGNATURE = 1414483778,EFI_ACPI_2_0_DEBUG_PORT_TABLE_SIGNATURE = 1346847300,EFI_ACPI_2_0_DIFFERENTIATED_SYSTEM_DESCRIPTION_TABLE_SIGNATURE = 1413763908,EFI_ACPI_2_0_EMBEDDED_CONTROLLER_BOOT_RESOURCES_TABLE_SIGNATURE = 1413759813,EFI_ACPI_2_0_EVENT_TIMER_DESCRIPTION_TABLE_SIGNATURE = 1413764165,EFI_ACPI_2_0_FIRMWARE_ACPI_CONTROL_STRUCTURE_SIGNATURE = 1396916550,EFI_ACPI_2_0_FIXED_ACPI_DESCRIPTION_TABLE_SIGNATURE = 1346584902,EFI_ACPI_2_0_MULTIPLE_APIC_DESCRIPTION_TABLE_SIGNATURE = 1128878145,EFI_ACPI_2_0_PERSISTENT_SYSTEM_DESCRIPTION_TABLE_SIGNATURE = 1413763920,EFI_ACPI_2_0_ROOT_SYSTEM_DESCRIPTION_TABLE_SIGNATURE = 1413763922,EFI_ACPI_2_0_SMART_BATTERY_SPECIFICATION_TABLE_SIGNATURE = 1414742611,EFI_ACPI_2_0_SYSTEM_LOCALITY_INFORMATION_TABLE_SIGNATURE = 1414089811,EFI_ACPI_2_0_SERIAL_PORT_CONSOLE_REDIRECTION_TABLE_SIGNATURE = 1380143187,EFI_ACPI_2_0_STATIC_RESOURCE_AFFINITY_TABLE_SIGNATURE = 1413567059,EFI_ACPI_2_0_SECONDARY_SYSTEM_DESCRIPTION_TABLE_SIGNATURE = 1413763923,EFI_ACPI_2_0_SERVER_PLATFORM_MANAGEMENT_INTERFACE_SIGNATURE = 1229803603,EFI_ACPI_2_0_EXTENDED_SYSTEM_DESCRIPTION_TABLE_SIGNATURE = 1413763928,EFI_ACPI_2_0_MEMORY_MAPPED_CONFIGURATION_BASE_ADDRESS_TABLE_SIGNATURE = 1195787085,};
enum MACRO_EFI_DEVICE {EFI_DEVICE_NAME_USE_COMPONENT_NAME = 0x1,EFI_DEVICE_NAME_USE_DEVICE_PATH = 0x2,};
enum MACRO_EFI_DRIVER {EFI_DRIVER_CONFIGURATION_SAFE_DEFAULTS = 0x0,EFI_DRIVER_CONFIGURATION_MANUFACTURING_DEFAULTS = 0x1,EFI_DRIVER_CONFIGURATION_CUSTOM_DEFAULTS = 0x2,EFI_DRIVER_CONFIGURATION_PERORMANCE_DEFAULTS = 0x3,EFI_SCSI_IO_TYPE_DISK = 0x0,EFI_SCSI_IO_TYPE_TAPE = 0x1,EFI_SCSI_IO_TYPE_PRINTER = 0x2,EFI_SCSI_IO_TYPE_PROCESSOR = 0x3,EFI_SCSI_IO_TYPE_WORM = 0x4,EFI_SCSI_IO_TYPE_CDROM = 0x5,EFI_SCSI_IO_TYPE_SCANNER = 0x6,EFI_SCSI_IO_TYPE_OPTICAL = 0x7,EFI_SCSI_IO_TYPE_MEDIUMCHANGER = 0x8,EFI_SCSI_IO_TYPE_COMMUNICATION = 0x9,};
enum MACRO_EFI_LEGACY {EFI_LEGACY_PIRQ_TABLE_SIGNATURE = 1380536356,EFI_HANDLER_SUCCESS = 0,EFI_HANDLER_CRITICAL_EXIT = 1,EFI_HANDLER_SOURCE_QUIESCED = 2,EFI_HANDLER_SOURCE_PENDING = 3,EFI_SMM_MIN_REV_ID_x64 = 196614,};
enum MACRO_EFI_SAL_ST {EFI_SAL_ST_TR_USAGE_INSTRUCTION = 0x0,EFI_SAL_ST_TR_USAGE_DATA = 0x1,EFI_SAL_FIT_FIT_HEADER_TYPE = 0x0,EFI_SAL_FIT_PAL_B_TYPE = 0x1,EFI_SAL_FIT_PROCESSOR_SPECIFIC_PAL_A_TYPE = 0xE,EFI_SAL_FIT_PAL_A_TYPE = 0xF,EFI_SAL_FIT_PEI_CORE_TYPE = 0x10,EFI_SAL_FIT_UNUSED_TYPE = 0x7F,EFI_SAL_FIT_ENTRY_PTR = 0xFFFFFFE0,EFI_SAL_FIT_PALA_ENTRY = 0xFFFFFFD0,EFI_SAL_FIT_PALB_TYPE = 0x1,};
enum MACRO_EFI_SIMPLE {EFI_SIMPLE_NETWORK_PROTOCOL_REVISION = 0x10000,EFI_SIMPLE_NETWORK_INTERFACE_REVISION = 0x10000,};
enum MACRO_EFI_SMBIOS {EFI_SMBIOS_TYPE_BIOS_INFORMATION = 0,EFI_SMBIOS_TYPE_SYSTEM_INFORMATION = 1,EFI_SMBIOS_TYPE_BASEBOARD_INFORMATION = 2,EFI_SMBIOS_TYPE_SYSTEM_ENCLOSURE = 3,EFI_SMBIOS_TYPE_PROCESSOR_INFORMATION = 4,EFI_SMBIOS_TYPE_MEMORY_CONTROLLER_INFORMATION = 5,EFI_SMBIOS_TYPE_MEMORY_MODULE_INFORMATON = 6,EFI_SMBIOS_TYPE_CACHE_INFORMATION = 7,EFI_SMBIOS_TYPE_PORT_CONNECTOR_INFORMATION = 8,EFI_SMBIOS_TYPE_SYSTEM_SLOTS = 9,EFI_SMBIOS_TYPE_ONBOARD_DEVICE_INFORMATION = 10,EFI_SMBIOS_TYPE_OEM_STRINGS = 11,EFI_SMBIOS_TYPE_SYSTEM_CONFIGURATION_OPTIONS = 12,EFI_SMBIOS_TYPE_BIOS_LANGUAGE_INFORMATION = 13,EFI_SMBIOS_TYPE_GROUP_ASSOCIATIONS = 14,EFI_SMBIOS_TYPE_SYSTEM_EVENT_LOG = 15,EFI_SMBIOS_TYPE_PHYSICAL_MEMORY_ARRAY = 16,EFI_SMBIOS_TYPE_MEMORY_DEVICE = 17,EFI_SMBIOS_TYPE_32BIT_MEMORY_ERROR_INFORMATION = 18,EFI_SMBIOS_TYPE_MEMORY_ARRAY_MAPPED_ADDRESS = 19,EFI_SMBIOS_TYPE_MEMORY_DEVICE_MAPPED_ADDRESS = 20,EFI_SMBIOS_TYPE_BUILT_IN_POINTING_DEVICE = 21,EFI_SMBIOS_TYPE_PORTABLE_BATTERY = 22,EFI_SMBIOS_TYPE_SYSTEM_RESET = 23,EFI_SMBIOS_TYPE_HARDWARE_SECURITY = 24,EFI_SMBIOS_TYPE_SYSTEM_POWER_CONTROLS = 25,EFI_SMBIOS_TYPE_VOLTAGE_PROBE = 26,EFI_SMBIOS_TYPE_COOLING_DEVICE = 27,EFI_SMBIOS_TYPE_TEMPERATURE_PROBE = 28,EFI_SMBIOS_TYPE_ELECTRICAL_CURRENT_PROBE = 29,EFI_SMBIOS_TYPE_OUT_OF_BAND_REMOTE_ACCESS = 30,EFI_SMBIOS_TYPE_BOOT_INTEGRITY_SERVICE = 31,EFI_SMBIOS_TYPE_SYSTEM_BOOT_INFORMATION = 32,EFI_SMBIOS_TYPE_64BIT_MEMORY_ERROR_INFORMATION = 33,EFI_SMBIOS_TYPE_MANAGEMENT_DEVICE = 34,EFI_SMBIOS_TYPE_MANAGEMENT_DEVICE_COMPONENT = 35,EFI_SMBIOS_TYPE_MANAGEMENT_DEVICE_THRESHOLD_DATA = 36,EFI_SMBIOS_TYPE_MEMORY_CHANNEL = 37,EFI_SMBIOS_TYPE_IPMI_DEVICE_INFORMATION = 38,EFI_SMBIOS_TYPE_SYSTEM_POWER_SUPPLY = 39,EFI_SMBIOS_TYPE_ADDITIONAL_INFORMATION = 40,EFI_SMBIOS_TYPE_ONBOARD_DEVICES_EXTENDED_INFORMATION = 41,EFI_SMBIOS_TYPE_MANAGEMENT_CONTROLLER_HOST_INTERFACE = 42,EFI_SMBIOS_TYPE_INACTIVE = 126,EFI_SMBIOS_TYPE_END_OF_TABLE = 127,EFI_SMBIOS_OEM_BEGIN = 128,EFI_SMBIOS_OEM_END = 255,EFI_SMM_SAVE_STATE_REGISTER_LMA_32BIT = 32,EFI_SMM_SAVE_STATE_REGISTER_LMA_64BIT = 64,EFI_TCG2_EVENT_LOG_FORMAT_TCG_1_2 = 1,EFI_TCG2_EVENT_LOG_FORMAT_TCG_2 = 2,EFI_TCG2_BOOT_HASH_ALG_SHA1 = 1,EFI_TCG2_BOOT_HASH_ALG_SHA256 = 2,EFI_TCG2_BOOT_HASH_ALG_SHA384 = 4,EFI_TCG2_BOOT_HASH_ALG_SHA512 = 8,EFI_TCG2_BOOT_HASH_ALG_SM3_256 = 16,EFI_TCG2_EXTEND_ONLY = 1,};
enum MACRO_EFI_STATUS {EFI_STATUS_CODE_TYPE_MASK = 0xFF,EFI_STATUS_CODE_SEVERITY_MASK = 0xFFFFFFFFFF000000,EFI_STATUS_CODE_RESERVED_MASK = 0xFFFF00,EFI_PROGRESS_CODE = 0x1,EFI_ERROR_CODE = 0x2,EFI_DEBUG_CODE = 0x3,EFI_ERROR_MINOR = 0x40000000,EFI_ERROR_MAJOR = 0xFFFFFFFF80000000,EFI_ERROR_UNRECOVERED = 0xFFFFFFFF90000000,EFI_ERROR_UNCONTAINED = 0xFFFFFFFFA0000000,EFI_STATUS_CODE_CLASS_MASK = 0xFFFFFFFFFF000000,EFI_STATUS_CODE_SUBCLASS_MASK = 0xFF0000,EFI_STATUS_CODE_OPERATION_MASK = 0xFFFF,EFI_SUBCLASS_SPECIFIC = 0x1000,EFI_OEM_SPECIFIC = 0x8000,EFI_DC_UNSPECIFIED = 0x0,EFI_COMPUTING_UNIT = 0x0,EFI_PERIPHERAL = 0x1000000,EFI_IO_BUS = 0x2000000,EFI_SOFTWARE = 0x3000000,EFI_COMPUTING_UNIT_UNSPECIFIED = 0x0,EFI_COMPUTING_UNIT_HOST_PROCESSOR = 0x10000,EFI_COMPUTING_UNIT_FIRMWARE_PROCESSOR = 0x20000,EFI_COMPUTING_UNIT_IO_PROCESSOR = 0x30000,EFI_COMPUTING_UNIT_CACHE = 0x40000,EFI_COMPUTING_UNIT_MEMORY = 0x50000,EFI_COMPUTING_UNIT_CHIPSET = 0x60000,EFI_CU_PC_INIT_BEGIN = 0x0,EFI_CU_PC_INIT_END = 0x1,EFI_CU_HP_PC_POWER_ON_INIT = 0x1000,EFI_CU_HP_PC_CACHE_INIT = 0x1001,EFI_CU_HP_PC_RAM_INIT = 0x1002,EFI_CU_HP_PC_MEMORY_CONTROLLER_INIT = 0x1003,EFI_CU_HP_PC_IO_INIT = 0x1004,EFI_CU_HP_PC_BSP_SELECT = 0x1005,EFI_CU_HP_PC_BSP_RESELECT = 0x1006,EFI_CU_HP_PC_AP_INIT = 0x1007,EFI_CU_HP_PC_SMM_INIT = 0x1008,EFI_CU_CACHE_PC_PRESENCE_DETECT = 0x1000,EFI_CU_CACHE_PC_CONFIGURATION = 0x1001,EFI_CU_MEMORY_PC_SPD_READ = 0x1000,EFI_CU_MEMORY_PC_PRESENCE_DETECT = 0x1001,EFI_CU_MEMORY_PC_TIMING = 0x1002,EFI_CU_MEMORY_PC_CONFIGURING = 0x1003,EFI_CU_MEMORY_PC_OPTIMIZING = 0x1004,EFI_CU_MEMORY_PC_INIT = 0x1005,EFI_CU_MEMORY_PC_TEST = 0x1006,EFI_CHIPSET_PC_PEI_CAR_SB_INIT = 0x1000,EFI_CHIPSET_PC_PEI_CAR_NB_INIT = 0x1001,EFI_CHIPSET_PC_PEI_MEM_SB_INIT = 0x1002,EFI_CHIPSET_PC_PEI_MEM_NB_INIT = 0x1003,EFI_CHIPSET_PC_DXE_HB_INIT = 0x1004,EFI_CHIPSET_PC_DXE_NB_INIT = 0x1005,EFI_CHIPSET_PC_DXE_NB_SMM_INIT = 0x1006,EFI_CHIPSET_PC_DXE_SB_RT_INIT = 0x1007,EFI_CHIPSET_PC_DXE_SB_INIT = 0x1008,EFI_CHIPSET_PC_DXE_SB_SMM_INIT = 0x1009,EFI_CHIPSET_PC_DXE_SB_DEVICES_INIT = 0x100A,EFI_CU_EC_NON_SPECIFIC = 0x0,EFI_CU_EC_DISABLED = 0x1,EFI_CU_EC_NOT_SUPPORTED = 0x2,EFI_CU_EC_NOT_DETECTED = 0x3,EFI_CU_EC_NOT_CONFIGURED = 0x4,EFI_CU_HP_EC_INVALID_TYPE = 0x1000,EFI_CU_HP_EC_INVALID_SPEED = 0x1001,EFI_CU_HP_EC_MISMATCH = 0x1002,EFI_CU_HP_EC_TIMER_EXPIRED = 0x1003,EFI_CU_HP_EC_SELF_TEST = 0x1004,EFI_CU_HP_EC_INTERNAL = 0x1005,EFI_CU_HP_EC_THERMAL = 0x1006,EFI_CU_HP_EC_LOW_VOLTAGE = 0x1007,EFI_CU_HP_EC_HIGH_VOLTAGE = 0x1008,EFI_CU_HP_EC_CACHE = 0x1009,EFI_CU_HP_EC_MICROCODE_UPDATE = 0x100A,EFI_CU_HP_EC_CORRECTABLE = 0x100B,EFI_CU_HP_EC_UNCORRECTABLE = 0x100C,EFI_CU_HP_EC_NO_MICROCODE_UPDATE = 0x100D,EFI_CU_FP_EC_HARD_FAIL = 0x1000,EFI_CU_FP_EC_SOFT_FAIL = 0x1001,EFI_CU_FP_EC_COMM_ERROR = 0x1002,EFI_CU_CACHE_EC_INVALID_TYPE = 0x1000,EFI_CU_CACHE_EC_INVALID_SPEED = 0x1001,EFI_CU_CACHE_EC_INVALID_SIZE = 0x1002,EFI_CU_CACHE_EC_MISMATCH = 0x1003,EFI_CU_MEMORY_EC_INVALID_TYPE = 0x1000,EFI_CU_MEMORY_EC_INVALID_SPEED = 0x1001,EFI_CU_MEMORY_EC_CORRECTABLE = 0x1002,EFI_CU_MEMORY_EC_UNCORRECTABLE = 0x1003,EFI_CU_MEMORY_EC_SPD_FAIL = 0x1004,EFI_CU_MEMORY_EC_INVALID_SIZE = 0x1005,EFI_CU_MEMORY_EC_MISMATCH = 0x1006,EFI_CU_MEMORY_EC_S3_RESUME_FAIL = 0x1007,EFI_CU_MEMORY_EC_UPDATE_FAIL = 0x1008,EFI_CU_MEMORY_EC_NONE_DETECTED = 0x1009,EFI_CU_MEMORY_EC_NONE_USEFUL = 0x100A,EFI_CHIPSET_EC_BAD_BATTERY = 0x1000,EFI_CHIPSET_EC_DXE_NB_ERROR = 0x1001,EFI_CHIPSET_EC_DXE_SB_ERROR = 0x1002,EFI_PERIPHERAL_UNSPECIFIED = 0x1000000,EFI_PERIPHERAL_KEYBOARD = 0x1010000,EFI_PERIPHERAL_MOUSE = 0x1020000,EFI_PERIPHERAL_LOCAL_CONSOLE = 0x1030000,EFI_PERIPHERAL_REMOTE_CONSOLE = 0x1040000,EFI_PERIPHERAL_SERIAL_PORT = 0x1050000,EFI_PERIPHERAL_PARALLEL_PORT = 0x1060000,EFI_PERIPHERAL_FIXED_MEDIA = 0x1070000,EFI_PERIPHERAL_REMOVABLE_MEDIA = 0x1080000,EFI_PERIPHERAL_AUDIO_INPUT = 0x1090000,EFI_PERIPHERAL_AUDIO_OUTPUT = 0x10A0000,EFI_PERIPHERAL_LCD_DEVICE = 0x10B0000,EFI_PERIPHERAL_NETWORK = 0x10C0000,EFI_P_PC_INIT = 0x0,EFI_P_PC_RESET = 0x1,EFI_P_PC_DISABLE = 0x2,EFI_P_PC_PRESENCE_DETECT = 0x3,EFI_P_PC_ENABLE = 0x4,EFI_P_PC_RECONFIG = 0x5,EFI_P_PC_DETECTED = 0x6,EFI_P_KEYBOARD_PC_CLEAR_BUFFER = 0x1000,EFI_P_KEYBOARD_PC_SELF_TEST = 0x1001,EFI_P_MOUSE_PC_SELF_TEST = 0x1000,EFI_P_SERIAL_PORT_PC_CLEAR_BUFFER = 0x1000,EFI_P_EC_NON_SPECIFIC = 0x0,EFI_P_EC_DISABLED = 0x1,EFI_P_EC_NOT_SUPPORTED = 0x2,EFI_P_EC_NOT_DETECTED = 0x3,EFI_P_EC_NOT_CONFIGURED = 0x4,EFI_P_EC_INTERFACE_ERROR = 0x5,EFI_P_EC_CONTROLLER_ERROR = 0x6,EFI_P_EC_INPUT_ERROR = 0x7,EFI_P_EC_OUTPUT_ERROR = 0x8,EFI_P_EC_RESOURCE_CONFLICT = 0x9,EFI_P_KEYBOARD_EC_LOCKED = 0x1000,EFI_P_KEYBOARD_EC_STUCK_KEY = 0x1001,EFI_P_MOUSE_EC_LOCKED = 0x1000,EFI_IO_BUS_UNSPECIFIED = 0x2000000,EFI_IO_BUS_PCI = 0x2010000,EFI_IO_BUS_USB = 0x2020000,EFI_IO_BUS_IBA = 0x2030000,EFI_IO_BUS_AGP = 0x2040000,EFI_IO_BUS_PC_CARD = 0x2050000,EFI_IO_BUS_LPC = 0x2060000,EFI_IO_BUS_SCSI = 0x2070000,EFI_IO_BUS_ATA_ATAPI = 0x2080000,EFI_IO_BUS_FC = 0x2090000,EFI_IO_BUS_IP_NETWORK = 0x20A0000,EFI_IO_BUS_SMBUS = 0x20B0000,EFI_IO_BUS_I2C = 0x20C0000,EFI_IOB_PC_INIT = 0x0,EFI_IOB_PC_RESET = 0x1,EFI_IOB_PC_DISABLE = 0x2,EFI_IOB_PC_DETECT = 0x3,EFI_IOB_PC_ENABLE = 0x4,EFI_IOB_PC_RECONFIG = 0x5,EFI_IOB_PC_HOTPLUG = 0x6,EFI_IOB_PCI_BUS_ENUM = 0x1000,EFI_IOB_PCI_RES_ALLOC = 0x1001,EFI_IOB_PCI_HPC_INIT = 0x1002,EFI_IOB_ATA_BUS_SMART_ENABLE = 0x1000,EFI_IOB_ATA_BUS_SMART_DISABLE = 0x1001,EFI_IOB_ATA_BUS_SMART_OVERTHRESHOLD = 0x1002,EFI_IOB_ATA_BUS_SMART_UNDERTHRESHOLD = 0x1003,EFI_IOB_EC_NON_SPECIFIC = 0x0,EFI_IOB_EC_DISABLED = 0x1,EFI_IOB_EC_NOT_SUPPORTED = 0x2,EFI_IOB_EC_NOT_DETECTED = 0x3,EFI_IOB_EC_NOT_CONFIGURED = 0x4,EFI_IOB_EC_INTERFACE_ERROR = 0x5,EFI_IOB_EC_CONTROLLER_ERROR = 0x6,EFI_IOB_EC_READ_ERROR = 0x7,EFI_IOB_EC_WRITE_ERROR = 0x8,EFI_IOB_EC_RESOURCE_CONFLICT = 0x9,EFI_IOB_PCI_EC_PERR = 0x1000,EFI_IOB_PCI_EC_SERR = 0x1001,EFI_IOB_ATA_BUS_SMART_NOTSUPPORTED = 0x1000,EFI_IOB_ATA_BUS_SMART_DISABLED = 0x1001,EFI_SOFTWARE_UNSPECIFIED = 0x3000000,EFI_SOFTWARE_SEC = 0x3010000,EFI_SOFTWARE_PEI_CORE = 0x3020000,EFI_SOFTWARE_PEI_MODULE = 0x3030000,EFI_SOFTWARE_DXE_CORE = 0x3040000,EFI_SOFTWARE_DXE_BS_DRIVER = 0x3050000,EFI_SOFTWARE_DXE_RT_DRIVER = 0x3060000,EFI_SOFTWARE_SMM_DRIVER = 0x3070000,EFI_SOFTWARE_EFI_APPLICATION = 0x3080000,EFI_SOFTWARE_EFI_OS_LOADER = 0x3090000,EFI_SOFTWARE_RT = 0x30A0000,EFI_SOFTWARE_AL = 0x30B0000,EFI_SOFTWARE_EBC_EXCEPTION = 0x30C0000,EFI_SOFTWARE_IA32_EXCEPTION = 0x30D0000,EFI_SOFTWARE_IPF_EXCEPTION = 0x30E0000,EFI_SOFTWARE_PEI_SERVICE = 0x30F0000,EFI_SOFTWARE_EFI_BOOT_SERVICE = 0x3100000,EFI_SOFTWARE_EFI_RUNTIME_SERVICE = 0x3110000,EFI_SOFTWARE_EFI_DXE_SERVICE = 0x3120000,EFI_SOFTWARE_X64_EXCEPTION = 0x3130000,EFI_SOFTWARE_ARM_EXCEPTION = 0x3140000,EFI_SW_PC_INIT = 0x0,EFI_SW_PC_LOAD = 0x1,EFI_SW_PC_INIT_BEGIN = 0x2,EFI_SW_PC_INIT_END = 0x3,EFI_SW_PC_AUTHENTICATE_BEGIN = 0x4,EFI_SW_PC_AUTHENTICATE_END = 0x5,EFI_SW_PC_INPUT_WAIT = 0x6,EFI_SW_PC_USER_SETUP = 0x7,EFI_SW_SEC_PC_ENTRY_POINT = 0x1000,EFI_SW_SEC_PC_HANDOFF_TO_NEXT = 0x1001,EFI_SW_PEI_CORE_PC_ENTRY_POINT = 0x1000,EFI_SW_PEI_CORE_PC_HANDOFF_TO_NEXT = 0x1001,EFI_SW_PEI_CORE_PC_RETURN_TO_LAST = 0x1002,EFI_SW_PEI_PC_RECOVERY_BEGIN = 0x1000,EFI_SW_PEI_PC_CAPSULE_LOAD = 0x1001,EFI_SW_PEI_PC_CAPSULE_START = 0x1002,EFI_SW_PEI_PC_RECOVERY_USER = 0x1003,EFI_SW_PEI_PC_RECOVERY_AUTO = 0x1004,EFI_SW_PEI_PC_S3_BOOT_SCRIPT = 0x1005,EFI_SW_PEI_PC_OS_WAKE = 0x1006,EFI_SW_DXE_CORE_PC_ENTRY_POINT = 0x1000,EFI_SW_DXE_CORE_PC_HANDOFF_TO_NEXT = 0x1001,EFI_SW_DXE_CORE_PC_RETURN_TO_LAST = 0x1002,EFI_SW_DXE_CORE_PC_START_DRIVER = 0x1003,EFI_SW_DXE_CORE_PC_ARCH_READY = 0x1004,EFI_SW_DXE_BS_PC_LEGACY_OPROM_INIT = 0x1000,EFI_SW_DXE_BS_PC_READY_TO_BOOT_EVENT = 0x1001,EFI_SW_DXE_BS_PC_LEGACY_BOOT_EVENT = 0x1002,EFI_SW_DXE_BS_PC_EXIT_BOOT_SERVICES_EVENT = 0x1003,EFI_SW_DXE_BS_PC_VIRTUAL_ADDRESS_CHANGE_EVENT = 0x1004,EFI_SW_RT_PC_ENTRY_POINT = 0x1000,EFI_SW_RT_PC_HANDOFF_TO_NEXT = 0x1001,EFI_SW_RT_PC_RETURN_TO_LAST = 0x1002,EFI_SW_PS_PC_INSTALL_PPI = 0x1000,EFI_SW_PS_PC_REINSTALL_PPI = 0x1001,EFI_SW_PS_PC_LOCATE_PPI = 0x1002,EFI_SW_PS_PC_NOTIFY_PPI = 0x1003,EFI_SW_PS_PC_GET_BOOT_MODE = 0x1004,EFI_SW_PS_PC_SET_BOOT_MODE = 0x1005,EFI_SW_PS_PC_GET_HOB_LIST = 0x1006,EFI_SW_PS_PC_CREATE_HOB = 0x1007,EFI_SW_PS_PC_FFS_FIND_NEXT_VOLUME = 0x1008,EFI_SW_PS_PC_FFS_FIND_NEXT_FILE = 0x1009,EFI_SW_PS_PC_FFS_FIND_SECTION_DATA = 0x100A,EFI_SW_PS_PC_INSTALL_PEI_MEMORY = 0x100B,EFI_SW_PS_PC_ALLOCATE_PAGES = 0x100C,EFI_SW_PS_PC_ALLOCATE_POOL = 0x100D,EFI_SW_PS_PC_COPY_MEM = 0x100E,EFI_SW_PS_PC_SET_MEM = 0x100F,EFI_SW_PS_PC_RESET_SYSTEM = 0x1010,EFI_SW_PS_PC_FFS_FIND_FILE_BY_NAME = 0x1013,EFI_SW_PS_PC_FFS_GET_FILE_INFO = 0x1014,EFI_SW_PS_PC_FFS_GET_VOLUME_INFO = 0x1015,EFI_SW_PS_PC_FFS_REGISTER_FOR_SHADOW = 0x1016,EFI_SW_BS_PC_RAISE_TPL = 0x1000,EFI_SW_BS_PC_RESTORE_TPL = 0x1001,EFI_SW_BS_PC_ALLOCATE_PAGES = 0x1002,EFI_SW_BS_PC_FREE_PAGES = 0x1003,EFI_SW_BS_PC_GET_MEMORY_MAP = 0x1004,EFI_SW_BS_PC_ALLOCATE_POOL = 0x1005,EFI_SW_BS_PC_FREE_POOL = 0x1006,EFI_SW_BS_PC_CREATE_EVENT = 0x1007,EFI_SW_BS_PC_SET_TIMER = 0x1008,EFI_SW_BS_PC_WAIT_FOR_EVENT = 0x1009,EFI_SW_BS_PC_SIGNAL_EVENT = 0x100A,EFI_SW_BS_PC_CLOSE_EVENT = 0x100B,EFI_SW_BS_PC_CHECK_EVENT = 0x100C,EFI_SW_BS_PC_INSTALL_PROTOCOL_INTERFACE = 0x100D,EFI_SW_BS_PC_REINSTALL_PROTOCOL_INTERFACE = 0x100E,EFI_SW_BS_PC_UNINSTALL_PROTOCOL_INTERFACE = 0x100F,EFI_SW_BS_PC_HANDLE_PROTOCOL = 0x1010,EFI_SW_BS_PC_PC_HANDLE_PROTOCOL = 0x1011,EFI_SW_BS_PC_REGISTER_PROTOCOL_NOTIFY = 0x1012,EFI_SW_BS_PC_LOCATE_HANDLE = 0x1013,EFI_SW_BS_PC_INSTALL_CONFIGURATION_TABLE = 0x1014,EFI_SW_BS_PC_LOAD_IMAGE = 0x1015,EFI_SW_BS_PC_START_IMAGE = 0x1016,EFI_SW_BS_PC_EXIT = 0x1017,EFI_SW_BS_PC_UNLOAD_IMAGE = 0x1018,EFI_SW_BS_PC_EXIT_BOOT_SERVICES = 0x1019,EFI_SW_BS_PC_GET_NEXT_MONOTONIC_COUNT = 0x101A,EFI_SW_BS_PC_STALL = 0x101B,EFI_SW_BS_PC_SET_WATCHDOG_TIMER = 0x101C,EFI_SW_BS_PC_CONNECT_CONTROLLER = 0x101D,EFI_SW_BS_PC_DISCONNECT_CONTROLLER = 0x101E,EFI_SW_BS_PC_OPEN_PROTOCOL = 0x101F,EFI_SW_BS_PC_CLOSE_PROTOCOL = 0x1020,EFI_SW_BS_PC_OPEN_PROTOCOL_INFORMATION = 0x1021,EFI_SW_BS_PC_PROTOCOLS_PER_HANDLE = 0x1022,EFI_SW_BS_PC_LOCATE_HANDLE_BUFFER = 0x1023,EFI_SW_BS_PC_LOCATE_PROTOCOL = 0x1024,EFI_SW_BS_PC_INSTALL_MULTIPLE_INTERFACES = 0x1025,EFI_SW_BS_PC_UNINSTALL_MULTIPLE_INTERFACES = 0x1026,EFI_SW_BS_PC_CALCULATE_CRC_32 = 0x1027,EFI_SW_BS_PC_COPY_MEM = 0x1028,EFI_SW_BS_PC_SET_MEM = 0x1029,EFI_SW_BS_PC_CREATE_EVENT_EX = 0x102A,EFI_SW_RS_PC_GET_TIME = 0x1000,EFI_SW_RS_PC_SET_TIME = 0x1001,EFI_SW_RS_PC_GET_WAKEUP_TIME = 0x1002,EFI_SW_RS_PC_SET_WAKEUP_TIME = 0x1003,EFI_SW_RS_PC_SET_VIRTUAL_ADDRESS_MAP = 0x1004,EFI_SW_RS_PC_CONVERT_POINTER = 0x1005,EFI_SW_RS_PC_GET_VARIABLE = 0x1006,EFI_SW_RS_PC_GET_NEXT_VARIABLE_NAME = 0x1007,EFI_SW_RS_PC_SET_VARIABLE = 0x1008,EFI_SW_RS_PC_GET_NEXT_HIGH_MONOTONIC_COUNT = 0x1009,EFI_SW_RS_PC_RESET_SYSTEM = 0x100A,EFI_SW_RS_PC_UPDATE_CAPSULE = 0x100B,EFI_SW_RS_PC_QUERY_CAPSULE_CAPABILITIES = 0x100C,EFI_SW_RS_PC_QUERY_VARIABLE_INFO = 0x100D,EFI_SW_DS_PC_ADD_MEMORY_SPACE = 0x1000,EFI_SW_DS_PC_ALLOCATE_MEMORY_SPACE = 0x1001,EFI_SW_DS_PC_FREE_MEMORY_SPACE = 0x1002,EFI_SW_DS_PC_REMOVE_MEMORY_SPACE = 0x1003,EFI_SW_DS_PC_GET_MEMORY_SPACE_DESCRIPTOR = 0x1004,EFI_SW_DS_PC_SET_MEMORY_SPACE_ATTRIBUTES = 0x1005,EFI_SW_DS_PC_GET_MEMORY_SPACE_MAP = 0x1006,EFI_SW_DS_PC_ADD_IO_SPACE = 0x1007,EFI_SW_DS_PC_ALLOCATE_IO_SPACE = 0x1008,EFI_SW_DS_PC_FREE_IO_SPACE = 0x1009,EFI_SW_DS_PC_REMOVE_IO_SPACE = 0x100A,EFI_SW_DS_PC_GET_IO_SPACE_DESCRIPTOR = 0x100B,EFI_SW_DS_PC_GET_IO_SPACE_MAP = 0x100C,EFI_SW_DS_PC_DISPATCH = 0x100D,EFI_SW_DS_PC_SCHEDULE = 0x100E,EFI_SW_DS_PC_TRUST = 0x100F,EFI_SW_DS_PC_PROCESS_FIRMWARE_VOLUME = 0x1010,EFI_SW_EC_NON_SPECIFIC = 0x0,EFI_SW_EC_LOAD_ERROR = 0x1,EFI_SW_EC_INVALID_PARAMETER = 0x2,EFI_SW_EC_UNSUPPORTED = 0x3,EFI_SW_EC_INVALID_BUFFER = 0x4,EFI_SW_EC_OUT_OF_RESOURCES = 0x5,EFI_SW_EC_ABORTED = 0x6,EFI_SW_EC_ILLEGAL_SOFTWARE_STATE = 0x7,EFI_SW_EC_ILLEGAL_HARDWARE_STATE = 0x8,EFI_SW_EC_START_ERROR = 0x9,EFI_SW_EC_BAD_DATE_TIME = 0xA,EFI_SW_EC_CFG_INVALID = 0xB,EFI_SW_EC_CFG_CLR_REQUEST = 0xC,EFI_SW_EC_CFG_DEFAULT = 0xD,EFI_SW_EC_PWD_INVALID = 0xE,EFI_SW_EC_PWD_CLR_REQUEST = 0xF,EFI_SW_EC_PWD_CLEARED = 0x10,EFI_SW_EC_EVENT_LOG_FULL = 0x11,EFI_SW_PEI_CORE_EC_DXE_CORRUPT = 0x1000,EFI_SW_PEI_CORE_EC_DXEIPL_NOT_FOUND = 0x1001,EFI_SW_PEI_CORE_EC_MEMORY_NOT_INSTALLED = 0x1002,EFI_SW_PEI_EC_NO_RECOVERY_CAPSULE = 0x1000,EFI_SW_PEI_EC_INVALID_CAPSULE_DESCRIPTOR = 0x1001,EFI_SW_PEI_EC_S3_RESUME_PPI_NOT_FOUND = 0x1002,EFI_SW_PEI_EC_S3_BOOT_SCRIPT_ERROR = 0x1003,EFI_SW_PEI_EC_S3_OS_WAKE_ERROR = 0x1004,EFI_SW_PEI_EC_S3_RESUME_FAILED = 0x1005,EFI_SW_PEI_EC_RECOVERY_PPI_NOT_FOUND = 0x1006,EFI_SW_PEI_EC_RECOVERY_FAILED = 0x1007,EFI_SW_DXE_CORE_EC_NO_ARCH = 0x1000,EFI_SW_DXE_BS_EC_LEGACY_OPROM_NO_SPACE = 0x1000,EFI_SW_DXE_BS_EC_INVALID_PASSWORD = 0x1001,EFI_SW_DXE_BS_EC_BOOT_OPTION_LOAD_ERROR = 0x1002,EFI_SW_DXE_BS_EC_BOOT_OPTION_FAILED = 0x1003,EFI_SW_DXE_BS_EC_INVALID_IDE_PASSWORD = 0x1004,EFI_SW_EC_EBC_UNDEFINED = 0x0,EFI_SW_EC_EBC_DIVIDE_ERROR = 0x1,EFI_SW_EC_EBC_DEBUG = 0x2,EFI_SW_EC_EBC_BREAKPOINT = 0x3,EFI_SW_EC_EBC_OVERFLOW = 0x4,EFI_SW_EC_EBC_INVALID_OPCODE = 0x5,EFI_SW_EC_EBC_STACK_FAULT = 0x6,EFI_SW_EC_EBC_ALIGNMENT_CHECK = 0x7,EFI_SW_EC_EBC_INSTRUCTION_ENCODING = 0x8,EFI_SW_EC_EBC_BAD_BREAK = 0x9,EFI_SW_EC_EBC_STEP = 0xA,EFI_SW_EC_IA32_DIVIDE_ERROR = 0x0,EFI_SW_EC_IA32_DEBUG = 0x1,EFI_SW_EC_IA32_NMI = 0x2,EFI_SW_EC_IA32_BREAKPOINT = 0x3,EFI_SW_EC_IA32_OVERFLOW = 0x4,EFI_SW_EC_IA32_BOUND = 0x5,EFI_SW_EC_IA32_INVALID_OPCODE = 0x6,EFI_SW_EC_IA32_DOUBLE_FAULT = 0x8,EFI_SW_EC_IA32_INVALID_TSS = 0xA,EFI_SW_EC_IA32_SEG_NOT_PRESENT = 0xB,EFI_SW_EC_IA32_STACK_FAULT = 0xC,EFI_SW_EC_IA32_GP_FAULT = 0xD,EFI_SW_EC_IA32_PAGE_FAULT = 0xE,EFI_SW_EC_IA32_FP_ERROR = 0x10,EFI_SW_EC_IA32_ALIGNMENT_CHECK = 0x11,EFI_SW_EC_IA32_MACHINE_CHECK = 0x12,EFI_SW_EC_IA32_SIMD = 0x13,EFI_SW_EC_IPF_BREAKPOINT = 0xB,EFI_SW_EC_IPF_EXTERNAL_INTERRUPT = 0xC,EFI_SW_EC_IPF_NAT_CONSUMPTION = 0x1A,EFI_SW_EC_IPF_FP_FAULT = 0x20,EFI_SW_EC_IPF_FP_TRAP = 0x21,EFI_SW_EC_IPF_TAKEN_BRANCH = 0x23,EFI_SW_EC_IPF_SINGLE_STEP = 0x24,EFI_SW_PS_EC_RESET_NOT_AVAILABLE = 0x1000,EFI_SW_PS_EC_MEMORY_INSTALLED_TWICE = 0x1001,EFI_SW_DXE_BS_PC_BEGIN_CONNECTING_DRIVERS = 0x1005,EFI_SW_DXE_BS_PC_VERIFYING_PASSWORD = 0x1006,EFI_SW_DXE_RT_PC_S0 = 0x1000,EFI_SW_DXE_RT_PC_S1 = 0x1001,EFI_SW_DXE_RT_PC_S2 = 0x1002,EFI_SW_DXE_RT_PC_S3 = 0x1003,EFI_SW_DXE_RT_PC_S4 = 0x1004,EFI_SW_DXE_RT_PC_S5 = 0x1005,EFI_SW_EC_X64_DIVIDE_ERROR = 0x0,EFI_SW_EC_X64_DEBUG = 0x1,EFI_SW_EC_X64_NMI = 0x2,EFI_SW_EC_X64_BREAKPOINT = 0x3,EFI_SW_EC_X64_OVERFLOW = 0x4,EFI_SW_EC_X64_BOUND = 0x5,EFI_SW_EC_X64_INVALID_OPCODE = 0x6,EFI_SW_EC_X64_DOUBLE_FAULT = 0x8,EFI_SW_EC_X64_INVALID_TSS = 0xA,EFI_SW_EC_X64_SEG_NOT_PRESENT = 0xB,EFI_SW_EC_X64_STACK_FAULT = 0xC,EFI_SW_EC_X64_GP_FAULT = 0xD,EFI_SW_EC_X64_PAGE_FAULT = 0xE,EFI_SW_EC_X64_FP_ERROR = 0x10,EFI_SW_EC_X64_ALIGNMENT_CHECK = 0x11,EFI_SW_EC_X64_MACHINE_CHECK = 0x12,EFI_SW_EC_X64_SIMD = 0x13,EFI_SW_EC_ARM_RESET = 0x0,EFI_SW_EC_ARM_UNDEFINED_INSTRUCTION = 0x1,EFI_SW_EC_ARM_SOFTWARE_INTERRUPT = 0x2,EFI_SW_EC_ARM_PREFETCH_ABORT = 0x3,EFI_SW_EC_ARM_DATA_ABORT = 0x4,EFI_SW_EC_ARM_RESERVED = 0x5,EFI_SW_EC_ARM_IRQ = 0x6,EFI_SW_EC_ARM_FIQ = 0x7,EFI_BOOT_SCRIPT_IO_WRITE_OPCODE = 0x0,EFI_BOOT_SCRIPT_IO_READ_WRITE_OPCODE = 0x1,EFI_BOOT_SCRIPT_MEM_WRITE_OPCODE = 0x2,EFI_BOOT_SCRIPT_MEM_READ_WRITE_OPCODE = 0x3,EFI_BOOT_SCRIPT_PCI_CONFIG_WRITE_OPCODE = 0x4,EFI_BOOT_SCRIPT_PCI_CONFIG_READ_WRITE_OPCODE = 0x5,EFI_BOOT_SCRIPT_SMBUS_EXECUTE_OPCODE = 0x6,EFI_BOOT_SCRIPT_STALL_OPCODE = 0x7,EFI_BOOT_SCRIPT_DISPATCH_OPCODE = 0x8,EFI_BOOT_SCRIPT_DISPATCH_2_OPCODE = 0x9,EFI_BOOT_SCRIPT_INFORMATION_OPCODE = 0xA,EFI_BOOT_SCRIPT_PCI_CONFIG2_WRITE_OPCODE = 0xB,EFI_BOOT_SCRIPT_PCI_CONFIG2_READ_WRITE_OPCODE = 0xC,EFI_BOOT_SCRIPT_IO_POLL_OPCODE = 0xD,EFI_BOOT_SCRIPT_MEM_POLL_OPCODE = 0xE,EFI_BOOT_SCRIPT_PCI_CONFIG_POLL_OPCODE = 0xF,EFI_BOOT_SCRIPT_PCI_CONFIG2_POLL_OPCODE = 0x10,EFI_REQUEST_UNLOAD_IMAGE = 0xA000000000000001,EFI_NOT_AVAILABLE_YET = 0xA000000000000002,EFI_INTERRUPT_PENDING = 0xA000000000000000,EFI_WARN_INTERRUPT_SOURCE_PENDING = 0x2000000000000000,EFI_WARN_INTERRUPT_SOURCE_QUIESCED = 0x2000000000000001,EFI_AUTH_STATUS_PLATFORM_OVERRIDE = 0x1,EFI_AUTH_STATUS_IMAGE_SIGNED = 0x2,EFI_AUTH_STATUS_NOT_TESTED = 0x4,EFI_AUTH_STATUS_TEST_FAILED = 0x8,EFI_AUTH_STATUS_ALL = 0xF,EFI_SMRAM_OPEN = 0x1,EFI_SMRAM_CLOSED = 0x2,EFI_SMRAM_LOCKED = 0x4,EFI_CACHEABLE = 0x8,EFI_ALLOCATED = 0x10,EFI_NEEDS_TESTING = 0x20,EFI_NEEDS_ECC_INITIALIZATION = 0x40,};
enum MACRO_EFI_VECTOR {EFI_VECTOR_HANDOFF_DO_NOT_HOOK = 0x0,EFI_VECTOR_HANDOFF_HOOK_BEFORE = 0x1,EFI_VECTOR_HANDOFF_HOOK_AFTER = 0x2,EFI_VECTOR_HANDOFF_LAST_ENTRY = 0x80000000,EFI_ACPI_2_0_ASF_DESCRIPTION_TABLE_REVISION = 0x20,EFI_ACPI_ASF_DESCRIPTION_TABLE_SIGNATURE = 0x21465341,};
enum MACRO_EXCEPT_ARM {EXCEPT_ARM_RESET = 0,EXCEPT_ARM_UNDEFINED_INSTRUCTION = 1,EXCEPT_ARM_SOFTWARE_INTERRUPT = 2,EXCEPT_ARM_PREFETCH_ABORT = 3,EXCEPT_ARM_DATA_ABORT = 4,EXCEPT_ARM_RESERVED = 5,EXCEPT_ARM_IRQ = 6,EXCEPT_ARM_FIQ = 7,};
enum MACRO_FFS_ATTRIB {FFS_ATTRIB_LARGE_FILE = 0x1,FFS_ATTRIB_FIXED = 0x4,FFS_ATTRIB_DATA_ALIGNMENT = 0x38,FFS_ATTRIB_CHECKSUM = 0x40,};
enum MACRO_FORM_ENTRY {FORM_ENTRY_INFO_SIGNATURE = 1936287078,FORM_QUESTION_ATTRIBUTE_OVERRIDE_SIGNATURE = 1936683366,};
enum MACRO_HR_UNKNOWN {HR_UNKNOWN = 0,HR_IMAGE_HANDLE = 2,HR_DRIVER_BINDING_HANDLE = 4,HR_DEVICE_DRIVER = 8,HR_BUS_DRIVER = 16,HR_DRIVER_CONFIGURATION_HANDLE = 32,HR_DRIVER_DIAGNOSTICS_HANDLE = 64,HR_COMPONENT_NAME_HANDLE = 128,HR_DEVICE_HANDLE = 256,HR_PARENT_HANDLE = 512,HR_CONTROLLER_HANDLE = 1024,HR_CHILD_HANDLE = 2048,HR_VALID_MASK = 4094,};
enum MACRO_IMAGE_LOAD {IMAGE_LOAD_SIGNATURE = 1145130828,IMAGE_UNLOAD_SIGNATURE = 1330400853,};
enum MACRO_INFINIBAND {INFINIBAND_RESOURCE_FLAG_IOC_SERVICE = 0x1,INFINIBAND_RESOURCE_FLAG_EXTENDED_BOOT_ENVIRONMENT = 0x2,INFINIBAND_RESOURCE_FLAG_CONSOLE_PROTOCOL = 0x4,INFINIBAND_RESOURCE_FLAG_STORAGE_PROTOCOL = 0x8,INFINIBAND_RESOURCE_FLAG_NETWORK_PROTOCOL = 0x10,};
enum MACRO_IP6_PREFIX {IP6_PREFIX_NUM = 129,IP6_HOP_BY_HOP = 0,IP6_DESTINATION = 60,IP6_ROUTING = 43,IP6_FRAGMENT = 44,IP6_AH = 51,IP6_ESP = 50,IP6_NO_NEXT_HEADER = 59,};
enum MACRO_LOCAL_APIC {LOCAL_APIC_DELIVERY_MODE_FIXED = 0,LOCAL_APIC_DELIVERY_MODE_LOWEST_PRIORITY = 1,LOCAL_APIC_DELIVERY_MODE_SMI = 2,LOCAL_APIC_DELIVERY_MODE_NMI = 4,LOCAL_APIC_DELIVERY_MODE_INIT = 5,LOCAL_APIC_DELIVERY_MODE_STARTUP = 6,LOCAL_APIC_DELIVERY_MODE_EXTINT = 7,LOCAL_APIC_DESTINATION_SHORTHAND_NO_SHORTHAND = 0,LOCAL_APIC_DESTINATION_SHORTHAND_SELF = 1,LOCAL_APIC_DESTINATION_SHORTHAND_ALL_INCLUDING_SELF = 2,LOCAL_APIC_DESTINATION_SHORTHAND_ALL_EXCLUDING_SELF = 3,};
enum MACRO_MAX_HANDLE {MAX_HANDLE_NUM = 3,MAX_ACTIVE_SESSIONS = 64,MAX_LOADED_SESSIONS = 3,MAX_SESSION_NUM = 3,MAX_LOADED_OBJECTS = 3,};
enum MACRO_MAX_PEERID {MAX_PEERID_LEN = 128,};
enum MACRO_NET_SYSLOG {NET_SYSLOG_FACILITY = 16,NET_SYSLOG_PACKET_LEN = 512,NET_SYSLOG_TX_TIMEOUT = 5000000,NET_DEBUG_MSG_LEN = 470,};
enum MACRO_NUM_POLICY {NUM_POLICY_PCR_GROUP = 1,NUM_AUTHVALUE_PCR_GROUP = 1,};
enum MACRO_NUM_STATIC {NUM_STATIC_PCR = 16,};
enum MACRO_NV_CHANGED {NV_CHANGED = 8,NV_NOT_CHANGED = 16,};
enum MACRO_NV_STORAGE {NV_STORAGE_SIZE = 0x4000,NV_FTW_WORKING_SIZE = 0x2000,NV_FTW_SPARE_SIZE = 0x10000,};
enum MACRO_PCI_BRIDGE {PCI_BRIDGE_ROMBAR = 0x38,PCI_MAX_BAR = 0x6,PCI_MAX_CONFIG_OFFSET = 0x100,PCI_VENDOR_ID_OFFSET = 0x0,PCI_DEVICE_ID_OFFSET = 0x2,PCI_COMMAND_OFFSET = 0x4,PCI_PRIMARY_STATUS_OFFSET = 0x6,PCI_REVISION_ID_OFFSET = 0x8,PCI_CLASSCODE_OFFSET = 0x9,PCI_CACHELINE_SIZE_OFFSET = 0xC,PCI_LATENCY_TIMER_OFFSET = 0xD,PCI_HEADER_TYPE_OFFSET = 0xE,PCI_BIST_OFFSET = 0xF,PCI_BASE_ADDRESSREG_OFFSET = 0x10,PCI_CARDBUS_CIS_OFFSET = 0x28,PCI_SVID_OFFSET = 0x2C,PCI_SUBSYSTEM_VENDOR_ID_OFFSET = 0x2C,PCI_SID_OFFSET = 0x2E,PCI_SUBSYSTEM_ID_OFFSET = 0x2E,PCI_EXPANSION_ROM_BASE = 0x30,PCI_CAPBILITY_POINTER_OFFSET = 0x34,PCI_INT_LINE_OFFSET = 0x3C,PCI_INT_PIN_OFFSET = 0x3D,PCI_MAXGNT_OFFSET = 0x3E,PCI_MAXLAT_OFFSET = 0x3F,PCI_BRIDGE_PRIMARY_BUS_REGISTER_OFFSET = 0x18,PCI_BRIDGE_SECONDARY_BUS_REGISTER_OFFSET = 0x19,PCI_BRIDGE_SUBORDINATE_BUS_REGISTER_OFFSET = 0x1A,PCI_BRIDGE_SECONDARY_LATENCY_TIMER_OFFSET = 0x1B,PCI_BRIDGE_STATUS_REGISTER_OFFSET = 0x1E,PCI_BRIDGE_CONTROL_REGISTER_OFFSET = 0x3E,PCI_INT_LINE_UNKNOWN = 0xFF,};
enum MACRO_PCI_UNUSED {PCI_UNUSED = 0x0,PCI_USED = 0xFF,};
enum MACRO_PCR_SELECT {PCR_SELECT_MIN = 3,PCR_SELECT_MAX = 3,};
enum MACRO_PERSISTENT {PERSISTENT_FIRST = 2164260864,PERSISTENT_LAST = 2181038079,};
typedef struct _5611705F5C2D06F0C65376E03C4AFA39 PAL_TEST_CONTROL;
typedef struct _76AD9C089835C1FF861F166B1D790D1B PAL_VERSION_INFO;
typedef union _E614E9AE1745E14DE570CCD3E419327A PCI_TYPE_GENERIC;
typedef struct _2D320466B587A93666D40489CEDD31F0 PEI_NT_THUNK_PPI;
typedef struct _A8E47D60411A404345D4BF258A4FC575 *PUGA_DEVICE_DATA;
typedef struct s_pxe_cpb_start_30 PXE_CPB_START_30;
typedef struct s_pxe_cpb_start_31 PXE_CPB_START_31;
typedef struct s_pxe_cpb_transmit PXE_CPB_TRANSMIT;
typedef struct _RIDE_DEVICE_PATH RIDE_DEVICE_PATH;
typedef struct _8D894963043A327D1CB91F38619B7FB7 SATA_DEVICE_PATH;
typedef struct _920435F1B70ECB33392B90E7D3ACCFDB SCSI_DEVICE_PATH;
typedef struct _A8501743E5A0AB903D80C6F79FFDCCCC SHELL_PARAM_ITEM;
typedef struct _1D71F8E09FA05ED6FAA2CBB8B3F79E1E SMBIOS_STRUCTURE;
typedef struct _491D735FCC2C7A181F51DF61FB6548E9 TIS_PC_REGISTERS;
typedef struct _527B574472DA6B2ACA7924B57D9DCFDB TPM2B_MAX_BUFFER;
typedef struct _4ABC1B5E6ED33879201640F22DCC37CF TPMS_SCHEME_ECDH;
typedef struct _4ABC1B5E6ED33879201640F22DCC37CF TPMS_SCHEME_KDF2;
typedef struct _4ABC1B5E6ED33879201640F22DCC37CF TPMS_SCHEME_MGF1;
typedef struct _4ABC1B5E6ED33879201640F22DCC37CF TPMS_SCHEME_OAEP;
typedef struct _AA8B70F900FF5238C230F4A4228535F6 TPMT_ASYM_SCHEME;
typedef struct _2A3F985ABF5054CEFB126C29095BA930 TPMT_RSA_DECRYPT;
typedef struct _474560A1B1DCBD1C24AD6598535B5A26 TPMT_TK_CREATION;
typedef struct _474560A1B1DCBD1C24AD6598535B5A26 TPMT_TK_VERIFIED;
typedef union _A41B3C68B782CC6B04DA902C88EF54D2 TPMU_ASYM_SCHEME;
typedef struct tdTPM_CERTIFY_INFO TPM_CERTIFY_INFO;
typedef struct tdTPM_CONTEXT_BLOB TPM_CONTEXT_BLOB;
typedef struct tdTPM_DAA_JOINDATA TPM_DAA_JOINDATA;
typedef struct tdTPM_EK_BLOB_AUTH TPM_EK_BLOB_AUTH;
typedef struct tdTPM_FAMILY_LABEL TPM_FAMILY_LABEL;
typedef struct tdTPM_FAMILY_TABLE TPM_FAMILY_TABLE;
typedef struct tdTPM_IDENTITY_REQ TPM_IDENTITY_REQ;
typedef struct tdTPM_STCLEAR_DATA TPM_STCLEAR_DATA;
typedef struct tdTPM_STORE_PUBKEY TPM_STORE_PUBKEY;
typedef struct _182665C6086B79FDC64227DFF8CA49B3 UART_DEVICE_PATH;
typedef union _11CEE68E50CEECB8C366DF9DDD7306D1 UDP_SESSION_DATA;
typedef struct _BA955201829052531E7B341E0F25818D VLAN_DEVICE_PATH;
typedef struct _3B73284331852D03FD87BEF8A696A753 WIFI_DEVICE_PATH;
typedef struct _0C7935E5C3B449DD062B7B3924850C94 ACPI_S3_CONTEXT;
typedef struct _C80725C5166B216A223488BFB7F21C47 BMC_DEVICE_PATH;
typedef struct _5A93820126A648CA4B4D7CC159E8A880 BROWSER_HOT_KEY;
typedef void *EFI_ACPI_HANDLE;
typedef struct _532A9AF1593900B2B5CFF34B454237AB EFI_BIS_VERSION;
typedef struct _EFI_DXE_IPL_PPI EFI_DXE_IPL_PPI;
typedef struct _EFI_FILE_PROTOCOL *EFI_FILE_HANDLE;
typedef void *EFI_FONT_HANDLE;
typedef union _6D90CA3A7F9BFC9264A02136A8ABC8EE EFI_HASH_OUTPUT;
typedef struct _CF4D72811399137CA7E88D146026D65C EFI_HTTP_HEADER;
typedef struct _EFI_IFR_DEFAULT EFI_IFR_DEFAULT;
typedef struct _EFI_IFR_NUMERIC EFI_IFR_NUMERIC;
typedef struct _475F28E1336F170E4F5CA435530F1271 EFI_IFR_NV_DATA;
typedef struct _EFI_IFR_REFRESH EFI_IFR_REFRESH;
typedef struct _EFI_IFR_TO_UINT EFI_IFR_TO_UINT;
typedef struct _EFI_IFR_VERSION EFI_IFR_VERSION;
typedef struct _EFI_IMAGE_INPUT EFI_IMAGE_INPUT;
typedef struct _EFI_IPSEC_SA_ID EFI_IPSEC_SA_ID;
typedef struct _EFI_LOAD_OPTION EFI_LOAD_OPTION;
typedef struct _1008A27E3314C410F0C714DEBA727987 EFI_MAC_ADDRESS;
typedef struct _41B3A175AE25B0BCD91769F5CBDEAF65 EFI_PEI_PCD_PPI;
typedef void *EFI_PORT_HANDLE;
typedef struct _EFI_TAPE_HEADER EFI_TAPE_HEADER;
typedef struct _BCC89F5383D3C1B61C6BEDCD220446A1 EFI_TCP4_OPTION;
typedef struct _BCC89F5383D3C1B61C6BEDCD220446A1 EFI_TCP6_OPTION;
typedef struct _F6C017084C31B64B3252FA677EBE0C8C FORM_ENTRY_INFO;
typedef struct _8B011148F1BB53F5CDF603C2B7E621CD I2O_DEVICE_PATH;
typedef struct _7054B44EE30EB830E8E2D8442E4DB9B3 ICMP_ERROR_INFO;
typedef struct _IDE_DEVICE_PATH IDE_DEVICE_PATH;
typedef union _2583E43EAC8C47D8851C57B0317D7D44 IP_IO_IP_HEADER;
typedef struct _IP_IO_OPEN_DATA IP_IO_OPEN_DATA;
enum MACRO_ALIGNMENT {ALIGNMENT = 1,};
enum MACRO_ATAPI_MAX {ATAPI_MAX_BYTE_COUNT = 0xFFFE,};
enum MACRO_BLUETOOTH {BLUETOOTH_HCI_COMMAND_LOCAL_READABLE_NAME_MAX_SIZE = 248,BLUETOOTH_HCI_LINK_KEY_SIZE = 16,};
enum MACRO_DEVICE_ID {DEVICE_ID_NOCARE = 0xFFFF,};
enum MACRO_EFI_BLACK {EFI_BLACK = 0x0,EFI_BLUE = 0x1,EFI_GREEN = 0x2,EFI_CYAN = 0x3,EFI_RED = 0x4,EFI_MAGENTA = 0x5,EFI_BROWN = 0x6,EFI_LIGHTGRAY = 0x7,EFI_BRIGHT = 0x8,EFI_DARKGRAY = 0x8,EFI_LIGHTBLUE = 0x9,EFI_LIGHTGREEN = 0xA,EFI_LIGHTCYAN = 0xB,EFI_LIGHTRED = 0xC,EFI_LIGHTMAGENTA = 0xD,EFI_YELLOW = 0xE,EFI_WHITE = 0xF,EFI_BACKGROUND_BLACK = 0x0,EFI_BACKGROUND_BLUE = 0x10,EFI_BACKGROUND_GREEN = 0x20,EFI_BACKGROUND_CYAN = 0x30,EFI_BACKGROUND_RED = 0x40,EFI_BACKGROUND_MAGENTA = 0x50,EFI_BACKGROUND_BROWN = 0x60,EFI_BACKGROUND_LIGHTGRAY = 0x70,EFI_WIDE_ATTRIBUTE = 0x80,EFI_TIME_ADJUST_DAYLIGHT = 0x1,EFI_TIME_IN_DAYLIGHT = 0x2,EFI_UNSPECIFIED_TIMEZONE = 0x7FF,EFI_MEMORY_UC = 0x1,EFI_MEMORY_WC = 0x2,EFI_MEMORY_WT = 0x4,EFI_MEMORY_WB = 0x8,EFI_MEMORY_UCE = 0x10,EFI_MEMORY_WP = 0x1000,EFI_MEMORY_RP = 0x2000,EFI_MEMORY_XP = 0x4000,EFI_MEMORY_RO = 0x20000,EFI_MEMORY_NV = 0x8000,EFI_MEMORY_MORE_RELIABLE = 0x10000,EFI_MEMORY_RUNTIME = 0x8000000000000000,EFI_MEMORY_DESCRIPTOR_VERSION = 0x1,EFI_OPTIONAL_PTR = 0x1,};
enum MACRO_EFI_BLOCK {EFI_BLOCK_IO_PROTOCOL_REVISION = 0x10000,EFI_BLOCK_IO_PROTOCOL_REVISION2 = 0x20001,EFI_BLOCK_IO_PROTOCOL_REVISION3 = 0x20031,EFI_BLOCK_IO_INTERFACE_REVISION = 0x10000,EFI_BLOCK_IO_CRYPTO_INDEX_ANY = 0xFFFFFFFF,EFI_BLUETOOTH_CONFIG_REMOTE_DEVICE_STATE_CONNECTED = 0x1,EFI_BLUETOOTH_CONFIG_REMOTE_DEVICE_STATE_PAIRED = 0x2,EFI_BOOT_MANAGER_POLICY_PROTOCOL_REVISION = 0x10000,EFI_DHCP6_IA_TYPE_NA = 0x3,EFI_DHCP6_IA_TYPE_TA = 0x4,EFI_DISK_IO2_PROTOCOL_REVISION = 0x20000,EFI_DISK_IO_PROTOCOL_REVISION = 0x10000,EFI_DISK_IO_INTERFACE_REVISION = 0x10000,EFI_EAP_TYPE_ATTRIBUTE = 0x0,EFI_EAP_TYPE_IDENTITY = 0x1,EFI_EAP_TYPE_NOTIFICATION = 0x2,EFI_EAP_TYPE_NAK = 0x3,EFI_EAP_TYPE_MD5CHALLENGE = 0x4,EFI_EAP_TYPE_OTP = 0x5,EFI_EAP_TYPE_GTC = 0x6,EFI_EAP_TYPE_EAPTLS = 0xD,EFI_EAP_TYPE_EAPSIM = 0x12,EFI_EAP_TYPE_TTLS = 0x15,EFI_EAP_TYPE_PEAP = 0x19,EFI_EAP_TYPE_MSCHAPV2 = 0x1A,EFI_EAP_TYPE_EAP_EXTENSION = 0x21,EFI_EAP_TYPE_TLS = 0xD,EFI_EAP_TYPE_MD5 = 0x4,EFI_EAP_TYPE_TOKEN_CARD = 0x6,};
enum MACRO_EFI_DEBUG {EFI_DEBUG_MASK_REVISION = 0x10000,};
enum MACRO_EFI_FLASH {EFI_FLASH_AREA_FV = 0x1,EFI_FLASH_AREA_SUBFV = 0x2,EFI_FLASH_AREA_MEMMAPPED_FV = 0x4,EFI_FLASH_AREA_REQUIRED = 0x8,EFI_FLASH_AREA_CORRUPT = 0x10,EFI_FLASH_AREA_RECOVERY_BIOS = 0x0,EFI_FLASH_AREA_MAIN_BIOS = 0x1,EFI_FLASH_AREA_PAL_B = 0x2,EFI_FLASH_AREA_RESERVED_03 = 0x3,EFI_FLASH_AREA_RESERVED_04 = 0x4,EFI_FLASH_AREA_DMI_FRU = 0x5,EFI_FLASH_AREA_OEM_BINARY = 0x6,EFI_FLASH_AREA_RESERVED_07 = 0x7,EFI_FLASH_AREA_RESERVED_08 = 0x8,EFI_FLASH_AREA_RESERVED_09 = 0x9,EFI_FLASH_AREA_RESERVED_0A = 0xA,EFI_FLASH_AREA_EFI_VARIABLES = 0xB,EFI_FLASH_AREA_MCA_LOG = 0xC,EFI_FLASH_AREA_SMBIOS_LOG = 0xD,EFI_FLASH_AREA_FTW_BACKUP = 0xE,EFI_FLASH_AREA_FTW_STATE = 0xF,EFI_FLASH_AREA_UNUSED = 0xFD,EFI_FLASH_AREA_GUID_DEFINED = 0xFE,};
enum MACRO_EFI_IMAGE {EFI_IMAGE_DOS_SIGNATURE = 23117,EFI_IMAGE_OS2_SIGNATURE = 17742,EFI_IMAGE_OS2_SIGNATURE_LE = 17740,EFI_IMAGE_NT_SIGNATURE = 17744,EFI_IMAGE_SIZEOF_FILE_HEADER = 20,EFI_IMAGE_FILE_RELOCS_STRIPPED = 1,EFI_IMAGE_FILE_EXECUTABLE_IMAGE = 2,EFI_IMAGE_FILE_LINE_NUMS_STRIPPED = 4,EFI_IMAGE_FILE_LOCAL_SYMS_STRIPPED = 8,EFI_IMAGE_FILE_BYTES_REVERSED_LO = 128,EFI_IMAGE_FILE_32BIT_MACHINE = 256,EFI_IMAGE_FILE_DEBUG_STRIPPED = 512,EFI_IMAGE_FILE_SYSTEM = 4096,EFI_IMAGE_FILE_DLL = 8192,EFI_IMAGE_FILE_BYTES_REVERSED_HI = 32768,EFI_IMAGE_DIRECTORY_ENTRY_EXPORT = 0,EFI_IMAGE_DIRECTORY_ENTRY_IMPORT = 1,EFI_IMAGE_DIRECTORY_ENTRY_RESOURCE = 2,EFI_IMAGE_DIRECTORY_ENTRY_EXCEPTION = 3,EFI_IMAGE_DIRECTORY_ENTRY_SECURITY = 4,EFI_IMAGE_DIRECTORY_ENTRY_BASERELOC = 5,EFI_IMAGE_DIRECTORY_ENTRY_DEBUG = 6,EFI_IMAGE_DIRECTORY_ENTRY_COPYRIGHT = 7,EFI_IMAGE_DIRECTORY_ENTRY_GLOBALPTR = 8,EFI_IMAGE_DIRECTORY_ENTRY_TLS = 9,EFI_IMAGE_DIRECTORY_ENTRY_LOAD_CONFIG = 10,EFI_IMAGE_NUMBER_OF_DIRECTORY_ENTRIES = 16,EFI_IMAGE_NT_OPTIONAL_HDR32_MAGIC = 267,EFI_IMAGE_NT_OPTIONAL_HDR64_MAGIC = 523,EFI_IMAGE_SUBSYSTEM_UNKNOWN = 0,EFI_IMAGE_SUBSYSTEM_NATIVE = 1,EFI_IMAGE_SUBSYSTEM_WINDOWS_GUI = 2,EFI_IMAGE_SUBSYSTEM_WINDOWS_CUI = 3,EFI_IMAGE_SUBSYSTEM_OS2_CUI = 5,EFI_IMAGE_SUBSYSTEM_POSIX_CUI = 7,EFI_IMAGE_SIZEOF_SHORT_NAME = 8,EFI_IMAGE_SIZEOF_SECTION_HEADER = 40,EFI_IMAGE_SCN_TYPE_NO_PAD = 8,EFI_IMAGE_SCN_CNT_CODE = 32,EFI_IMAGE_SCN_CNT_INITIALIZED_DATA = 64,EFI_IMAGE_SCN_CNT_UNINITIALIZED_DATA = 128,EFI_IMAGE_SCN_LNK_OTHER = 256,EFI_IMAGE_SCN_LNK_INFO = 512,EFI_IMAGE_SCN_LNK_REMOVE = 2048,EFI_IMAGE_SCN_LNK_COMDAT = 4096,EFI_IMAGE_SCN_ALIGN_1BYTES = 1048576,EFI_IMAGE_SCN_ALIGN_2BYTES = 2097152,EFI_IMAGE_SCN_ALIGN_4BYTES = 3145728,EFI_IMAGE_SCN_ALIGN_8BYTES = 4194304,EFI_IMAGE_SCN_ALIGN_16BYTES = 5242880,EFI_IMAGE_SCN_ALIGN_32BYTES = 6291456,EFI_IMAGE_SCN_ALIGN_64BYTES = 7340032,EFI_IMAGE_SCN_MEM_DISCARDABLE = 33554432,EFI_IMAGE_SCN_MEM_NOT_CACHED = 67108864,EFI_IMAGE_SCN_MEM_NOT_PAGED = 134217728,EFI_IMAGE_SCN_MEM_SHARED = 268435456,EFI_IMAGE_SCN_MEM_EXECUTE = 536870912,EFI_IMAGE_SCN_MEM_READ = 1073741824,EFI_IMAGE_SCN_MEM_WRITE = -2147483648,EFI_IMAGE_SIZEOF_SYMBOL = 18,EFI_IMAGE_SYM_UNDEFINED = 0,EFI_IMAGE_SYM_ABSOLUTE = 65535,EFI_IMAGE_SYM_DEBUG = 65534,EFI_IMAGE_SYM_TYPE_NULL = 0,EFI_IMAGE_SYM_TYPE_VOID = 1,EFI_IMAGE_SYM_TYPE_CHAR = 2,EFI_IMAGE_SYM_TYPE_SHORT = 3,EFI_IMAGE_SYM_TYPE_INT = 4,EFI_IMAGE_SYM_TYPE_LONG = 5,EFI_IMAGE_SYM_TYPE_FLOAT = 6,EFI_IMAGE_SYM_TYPE_DOUBLE = 7,EFI_IMAGE_SYM_TYPE_STRUCT = 8,EFI_IMAGE_SYM_TYPE_UNION = 9,EFI_IMAGE_SYM_TYPE_ENUM = 10,EFI_IMAGE_SYM_TYPE_MOE = 11,EFI_IMAGE_SYM_TYPE_BYTE = 12,EFI_IMAGE_SYM_TYPE_WORD = 13,EFI_IMAGE_SYM_TYPE_UINT = 14,EFI_IMAGE_SYM_TYPE_DWORD = 15,EFI_IMAGE_SYM_DTYPE_NULL = 0,EFI_IMAGE_SYM_DTYPE_POINTER = 1,EFI_IMAGE_SYM_DTYPE_FUNCTION = 2,EFI_IMAGE_SYM_DTYPE_ARRAY = 3,EFI_IMAGE_SYM_CLASS_END_OF_FUNCTION = 255,EFI_IMAGE_SYM_CLASS_NULL = 0,EFI_IMAGE_SYM_CLASS_AUTOMATIC = 1,EFI_IMAGE_SYM_CLASS_EXTERNAL = 2,EFI_IMAGE_SYM_CLASS_STATIC = 3,EFI_IMAGE_SYM_CLASS_REGISTER = 4,EFI_IMAGE_SYM_CLASS_EXTERNAL_DEF = 5,EFI_IMAGE_SYM_CLASS_LABEL = 6,EFI_IMAGE_SYM_CLASS_UNDEFINED_LABEL = 7,EFI_IMAGE_SYM_CLASS_MEMBER_OF_STRUCT = 8,EFI_IMAGE_SYM_CLASS_ARGUMENT = 9,EFI_IMAGE_SYM_CLASS_STRUCT_TAG = 10,EFI_IMAGE_SYM_CLASS_MEMBER_OF_UNION = 11,EFI_IMAGE_SYM_CLASS_UNION_TAG = 12,EFI_IMAGE_SYM_CLASS_TYPE_DEFINITION = 13,EFI_IMAGE_SYM_CLASS_UNDEFINED_STATIC = 14,EFI_IMAGE_SYM_CLASS_ENUM_TAG = 15,EFI_IMAGE_SYM_CLASS_MEMBER_OF_ENUM = 16,EFI_IMAGE_SYM_CLASS_REGISTER_PARAM = 17,EFI_IMAGE_SYM_CLASS_BIT_FIELD = 18,EFI_IMAGE_SYM_CLASS_BLOCK = 100,EFI_IMAGE_SYM_CLASS_FUNCTION = 101,EFI_IMAGE_SYM_CLASS_END_OF_STRUCT = 102,EFI_IMAGE_SYM_CLASS_FILE = 103,EFI_IMAGE_SYM_CLASS_SECTION = 104,EFI_IMAGE_SYM_CLASS_WEAK_EXTERNAL = 105,EFI_IMAGE_N_BTMASK = 15,EFI_IMAGE_N_TMASK = 48,EFI_IMAGE_N_TMASK1 = 192,EFI_IMAGE_N_TMASK2 = 240,EFI_IMAGE_N_BTSHFT = 4,EFI_IMAGE_N_TSHIFT = 2,EFI_IMAGE_COMDAT_SELECT_NODUPLICATES = 1,EFI_IMAGE_COMDAT_SELECT_ANY = 2,EFI_IMAGE_COMDAT_SELECT_SAME_SIZE = 3,EFI_IMAGE_COMDAT_SELECT_EXACT_MATCH = 4,EFI_IMAGE_COMDAT_SELECT_ASSOCIATIVE = 5,EFI_IMAGE_WEAK_EXTERN_SEARCH_NOLIBRARY = 1,EFI_IMAGE_WEAK_EXTERN_SEARCH_LIBRARY = 2,EFI_IMAGE_WEAK_EXTERN_SEARCH_ALIAS = 3,EFI_IMAGE_SIZEOF_RELOCATION = 10,EFI_IMAGE_REL_I386_ABSOLUTE = 0,EFI_IMAGE_REL_I386_DIR16 = 1,EFI_IMAGE_REL_I386_REL16 = 2,EFI_IMAGE_REL_I386_DIR32 = 6,EFI_IMAGE_REL_I386_DIR32NB = 7,EFI_IMAGE_REL_I386_SEG12 = 9,EFI_IMAGE_REL_I386_SECTION = 10,EFI_IMAGE_REL_I386_SECREL = 11,EFI_IMAGE_REL_I386_REL32 = 20,};
enum MACRO_EFI_SHELL {EFI_SHELL_MAJOR_VER = 0x1,EFI_SHELL_MINOR_VER = 0x0,};
enum MACRO_EFI_SHIFT {EFI_SHIFT_STATE_VALID = 0x80000000,EFI_RIGHT_SHIFT_PRESSED = 0x1,EFI_LEFT_SHIFT_PRESSED = 0x2,EFI_RIGHT_CONTROL_PRESSED = 0x4,EFI_LEFT_CONTROL_PRESSED = 0x8,EFI_RIGHT_ALT_PRESSED = 0x10,EFI_LEFT_ALT_PRESSED = 0x20,EFI_RIGHT_LOGO_PRESSED = 0x40,EFI_LEFT_LOGO_PRESSED = 0x80,EFI_MENU_KEY_PRESSED = 0x100,EFI_SYS_REQ_PRESSED = 0x200,EFI_TOGGLE_STATE_VALID = 0x80,EFI_KEY_STATE_EXPOSED = 0x40,EFI_SCROLL_LOCK_ACTIVE = 0x1,EFI_NUM_LOCK_ACTIVE = 0x2,EFI_CAPS_LOCK_ACTIVE = 0x4,};
enum MACRO_FRAMEWORK {FRAMEWORK_EFI_IFR_FORM_OP = 0x1,FRAMEWORK_EFI_IFR_SUBTITLE_OP = 0x2,FRAMEWORK_EFI_IFR_TEXT_OP = 0x3,};
enum MACRO_ICMP_TYPE {ICMP_TYPE_UNREACH = 3,ICMP_TYPE_TIMXCEED = 11,ICMP_TYPE_PARAMPROB = 12,ICMP_TYPE_SOURCEQUENCH = 4,ICMP_CODE_UNREACH_NET = 0,ICMP_CODE_UNREACH_HOST = 1,ICMP_CODE_UNREACH_PROTOCOL = 2,ICMP_CODE_UNREACH_PORT = 3,ICMP_CODE_UNREACH_NEEDFRAG = 4,ICMP_CODE_UNREACH_SRCFAIL = 5,ICMP_CODE_UNREACH_NET_UNKNOWN = 6,ICMP_CODE_UNREACH_HOST_UNKNOWN = 7,ICMP_CODE_UNREACH_ISOLATED = 8,ICMP_CODE_UNREACH_NET_PROHIB = 9,ICMP_CODE_UNREACH_HOST_PROHIB = 10,ICMP_CODE_UNREACH_TOSNET = 11,ICMP_CODE_UNREACH_TOSHOST = 12,ICMP_ERR_UNREACH_NET = 0,ICMP_ERR_UNREACH_HOST = 1,ICMP_ERR_UNREACH_PROTOCOL = 2,ICMP_ERR_UNREACH_PORT = 3,ICMP_ERR_MSGSIZE = 4,ICMP_ERR_UNREACH_SRCFAIL = 5,ICMP_ERR_TIMXCEED_INTRANS = 6,ICMP_ERR_TIMXCEED_REASS = 7,ICMP_ERR_QUENCH = 8,ICMP_ERR_PARAMPROB = 9,};
enum MACRO_IMAGE_REL {IMAGE_REL_AMD64_ABSOLUTE = 0x0,IMAGE_REL_AMD64_ADDR64 = 0x1,IMAGE_REL_AMD64_ADDR32 = 0x2,IMAGE_REL_AMD64_ADDR32NB = 0x3,IMAGE_REL_AMD64_REL32 = 0x4,IMAGE_REL_AMD64_REL32_1 = 0x5,IMAGE_REL_AMD64_REL32_2 = 0x6,IMAGE_REL_AMD64_REL32_3 = 0x7,IMAGE_REL_AMD64_REL32_4 = 0x8,IMAGE_REL_AMD64_REL32_5 = 0x9,IMAGE_REL_AMD64_SECTION = 0xA,IMAGE_REL_AMD64_SECREL = 0xB,IMAGE_REL_AMD64_SECREL7 = 0xC,IMAGE_REL_AMD64_TOKEN = 0xD,IMAGE_REL_AMD64_SREL32 = 0xE,IMAGE_REL_AMD64_PAIR = 0xF,IMAGE_REL_AMD64_SSPAN32 = 0x10,};
enum MACRO_IP4_PROTO {IP4_PROTO_IGMP = 0x2,};
enum MACRO_MAX_MCAST {MAX_MCAST_FILTER_CNT = 16,};
enum MACRO_MESSAGING {MESSAGING_DEVICE_PATH = 0x3,};
enum MACRO_MSG_SASEX {MSG_SASEX_DP = 0x16,MSG_NVME_NAMESPACE_DP = 0x17,MSG_URI_DP = 0x18,MSG_UFS_DP = 0x19,MSG_SD_DP = 0x1A,MSG_ISCSI_DP = 0x13,};
enum MACRO_PARTITION {PMBR_GPT_PARTITION = 0xEE,EFI_PARTITION = 0xEF,};
enum MACRO_PCI_CLASS {PCI_CLASS_MASS_STORAGE_ATA = 0x5,PCI_IF_MASS_STORAGE_SINGLE_DMA = 0x20,PCI_IF_MASS_STORAGE_CHAINED_DMA = 0x30,PCI_CLASS_NETWORK_WORLDFIP = 0x5,PCI_CLASS_NETWORK_PICMG_MULTI_COMPUTING = 0x6,PCI_CLASS_BRIDGE_SEMI_TRANSPARENT_P2P = 0x9,PCI_IF_BRIDGE_SEMI_TRANSPARENT_P2P_PRIMARY = 0x40,PCI_IF_BRIDGE_SEMI_TRANSPARENT_P2P_SECONDARY = 0x80,PCI_CLASS_BRIDGE_INFINIBAND_TO_PCI = 0xA,PCI_SUBCLASS_GPIB = 0x4,PCI_SUBCLASS_SMART_CARD = 0x5,PCI_IF_EHCI = 0x20,PCI_CLASS_SERIAL_IB = 0x6,PCI_CLASS_SERIAL_IPMI = 0x7,PCI_IF_IPMI_SMIC = 0x0,PCI_IF_IPMI_KCS = 0x1,PCI_IF_IPMI_BT = 0x2,PCI_CLASS_SERIAL_SERCOS = 0x8,PCI_CLASS_SERIAL_CANBUS = 0x9,PCI_SUBCLASS_BLUETOOTH = 0x11,PCI_SUBCLASS_BROADBAND = 0x12,PCI_SUBCLASS_PERFORMANCE_COUNTERS = 0x1,PCI_SUBCLASS_COMMUNICATION_SYNCHRONIZATION = 0x10,PCI_SUBCLASS_MANAGEMENT_CARD = 0x20,PCI_EXP_MAX_CONFIG_OFFSET = 0x1000,};
enum MACRO_PCR_FIRST {PCR_FIRST = 0,PCR_LAST = 23,};
enum MACRO_PERMANENT {PERMANENT_FIRST = 1073741824,PERMANENT_LAST = 1073741836,};
enum MACRO_PROCESSOR {PROCESSOR_AS_BSP_BIT = 0x1,PROCESSOR_ENABLED_BIT = 0x2,PROCESSOR_HEALTH_STATUS_BIT = 0x4,};
enum MACRO_PXE_DELAY {PXE_DELAY_MILLISECOND = 1000,PXE_DELAY_SECOND = 1000000,PXE_IO_READ = 0,PXE_IO_WRITE = 1,PXE_MEM_READ = 2,PXE_MEM_WRITE = 4,PXE_MAX_TXRX_UNIT_ETHER = 1500,PXE_HWADDR_LEN_ETHER = 6,PXE_MAC_HEADER_LEN_ETHER = 14,PXE_DUPLEX_ENABLE_FULL_SUPPORTED = 1,PXE_DUPLEX_FORCE_FULL_SUPPORTED = 2,PXE_LOOPBACK_INTERNAL_SUPPORTED = 1,PXE_LOOPBACK_EXTERNAL_SUPPORTED = 2,PXE_DUPLEX_DEFAULT = 0,PXE_FORCE_FULL_DUPLEX = 1,PXE_ENABLE_FULL_DUPLEX = 2,PXE_FORCE_HALF_DUPLEX = 4,PXE_DISABLE_FULL_DUPLEX = 8,};
enum MACRO_SIGNATURE {SIGNATURE_TYPE_MBR = 0x1,SIGNATURE_TYPE_GUID = 0x2,};
enum MACRO_STATEMENT {STATEMENT_VALID = 0x0,STATEMENT_INVALID = 0x80000000,};
enum MACRO_TCG2_BIOS {TCG2_BIOS_TPM_MANAGEMENT_FLAG_PP_REQUIRED_FOR_CLEAR = 2,TCG2_LIB_PP_FLAG_RESET_TRACK = 8,TCG2_BIOS_TPM_MANAGEMENT_FLAG_PP_REQUIRED_FOR_TURN_ON = 16,TCG2_BIOS_TPM_MANAGEMENT_FLAG_PP_REQUIRED_FOR_TURN_OFF = 32,TCG2_BIOS_TPM_MANAGEMENT_FLAG_PP_REQUIRED_FOR_CHANGE_EPS = 64,TCG2_BIOS_TPM_MANAGEMENT_FLAG_PP_REQUIRED_FOR_CHANGE_PCRS = 128,TCG2_BIOS_INFORMATION_FLAG_HIERACHY_CONTROL_STORAGE_DISABLE = 256,TCG2_BIOS_INFORMATION_FLAG_HIERACHY_CONTROL_ENDORSEMENT_DISABLE = 512,TCG2_BIOS_STORAGE_MANAGEMENT_FLAG_PP_REQUIRED_FOR_ENABLE_BLOCK_SID = 65536,TCG2_BIOS_STORAGE_MANAGEMENT_FLAG_PP_REQUIRED_FOR_DISABLE_BLOCK_SID = 131072,TCG2_BIOS_TPM_MANAGEMENT_FLAG_DEFAULT = 226,};
enum MACRO_TREE_FLAG {TREE_FLAG_NO_PPI_CLEAR = 2,TREE_FLAG_RESET_TRACK = 8,TREE_PHYSICAL_PRESENCE_NO_ACTION = 0,TREE_PHYSICAL_PRESENCE_CLEAR_CONTROL_CLEAR = 5,TREE_PHYSICAL_PRESENCE_CLEAR_CONTROL_CLEAR_2 = 14,TREE_PHYSICAL_PRESENCE_SET_NO_PPI_CLEAR_FALSE = 17,TREE_PHYSICAL_PRESENCE_SET_NO_PPI_CLEAR_TRUE = 18,TREE_PHYSICAL_PRESENCE_CLEAR_CONTROL_CLEAR_3 = 21,TREE_PHYSICAL_PRESENCE_CLEAR_CONTROL_CLEAR_4 = 22,TREE_PHYSICAL_PRESENCE_NO_ACTION_MAX = 22,};
enum MACRO_VAR_ERROR {VAR_ERROR_FLAG_NO_ERROR = 0xFF,VAR_ERROR_FLAG_SYSTEM_ERROR = 0xEF,VAR_ERROR_FLAG_USER_ERROR = 0xFE,};
typedef struct _C5A49CCB2EE5B7D1464BF1603863C578 MEMORY_DESC_HOB;
typedef union _31E9CB5CFBDE614C3E2B0999B633A6B4 MINMAXSTEP_DATA;
typedef struct _4F88675427993AD5D393EBFFE084774F PCI_DEVICE_PATH;
typedef struct _EFI_ISA_HC_PPI *PEFI_ISA_HC_PPI;
typedef struct _EFI_PEI_CAPSULE_PPI PEI_CAPSULE_PPI;
typedef struct _864F357D2D335F20052F07A9C9C9B544 *PUGA_IO_REQUEST;
typedef ULARGE_INTEGER *PULARGE_INTEGER;
typedef struct s_pxe_cpb_receive PXE_CPB_RECEIVE;
typedef struct _E6FD69CE8E5A82DF22B0F915D720319F SAL_PCI_ADDRESS;
typedef struct _976A27DAFF15E5ADEA0945F986C3C134 SAL_RETURN_REGS;
typedef struct _798FF404241DBA6102FC87294FCDE779 SAS_DEVICE_PATH;
typedef union _FCBD8BC731F2D3A4BD0C752F426A1602 TCP_IO_IO_TOKEN;
typedef union _BD5314CD2BE3AB5CE52973ACDBD99966 TCP_IO_PROTOCOL;
typedef struct _E5F76CF1869745FF7824621BB58928FA TPM2B_ECC_POINT;
typedef struct _04145B7E34126927318BEC00867DE1C0 TPM2B_ID_OBJECT;
typedef struct _2D377D1DEDF6E4D5EE5F6C0C172C418F TPM2B_NV_PUBLIC;
typedef struct _7A6A0F46ABA0CA06A591AFD40E69204D TPM2B_SENSITIVE;
typedef struct _765F2016A6B70354055390603066FC8B TPMS_ASYM_PARMS;
typedef struct _0BE4EA6FDFC9F098B57474A52E44A82D TPMS_CLOCK_INFO;
typedef struct _494914B86E6CDF22F878F39362A29687 TPMS_PCR_SELECT;
typedef struct _896216A836D57BF4B1D0B373A62CE411 TPMS_QUOTE_INFO;
typedef struct _D37DC79DDC42880AEACC6D620E19C86A TPMS_SCHEME_XOR;
typedef struct _92268411103B3D7D351D0E9627E9807B TPMT_ECC_SCHEME;
typedef struct _B68A72A39E6B29140139916F2ADA8BCC TPMT_KDF_SCHEME;
typedef struct _774345F8850CD97B16B7F38A57137C1D TPMT_RSA_SCHEME;
typedef struct _A0CE1414CFE73DDB6A5A45B584E5B563 TPMT_SIG_SCHEME;
typedef union _253E16287E1610AF0271BFD5397148D6 TPMU_KDF_SCHEME;
typedef union _6BC81C86F5ED2B6C7BBC43FC80963407 TPMU_SIG_SCHEME;
typedef struct tdTPM_CMK_MIGAUTH TPM_CMK_MIGAUTH;
typedef struct tdTPM_DAA_CONTEXT TPM_DAA_CONTEXT;
typedef struct tdTPM_DELEGATIONS TPM_DELEGATIONS;
typedef struct tdTPM_QUOTE_INFO2 TPM_QUOTE_INFO2;
typedef struct tdTPM_SEALED_DATA TPM_SEALED_DATA;
typedef struct tdTPM_SELECT_SIZE TPM_SELECT_SIZE;
typedef struct tdTPM_STANY_FLAGS TPM_STANY_FLAGS;
typedef struct tdTPM_STORED_DATA TPM_STORED_DATA;
typedef struct _400D51D6C0F8DB819BF4AC264E39B514 UFS_DEVICE_PATH;
typedef struct _A8E47D60411A404345D4BF258A4FC575 UGA_DEVICE_DATA;
typedef struct _A6F01FCCD003A3506A4BC4949BFC9341 URI_DEVICE_PATH;
typedef struct _6C539C0FC0E7F1AB04835013C6DD4726 USB_DEVICE_PATH;
typedef struct _EBA4FB6A469BBC38A010BC96DB327D60 VARIABLE_HEADER;
struct WIN32_FIND_DATA;
typedef struct _922A102EF0DE789699C98A721CFF83F9 WIN_CERTIFICATE;
enum tdTPM_KEY_FLAGS {redirection = 0x1,migratable = 0x2,isVolatile = 0x4,pcrIgnoredOnRead = 0x8,migrateAuthority = 0x10,};
typedef struct _03FCBC19C10EBCCF3C938B73B2A76388 ATAPI_IDENTIFY;
typedef struct _74CC277CB86DBF393966D2A8256E64EC EFI_DEBUG_INFO;
typedef struct _28B0E3C3F8158DEFF17B56B84F095520 EFI_DHCP6_DUID;
typedef struct _27F8FE6A6BCF7AEB14041AF9ACCB4FC7 EFI_DWORD_REGS;
typedef struct _EE59026B979B77D0E8B4BCCAB1AFE8A2 EFI_EFLAGS_REG;
typedef void *EFI_HII_HANDLE;
typedef struct _579EB430BA9997F315857B805E1254B9 EFI_HII_PACKET;
typedef struct _349131A490B3DCC13E0B058762E5091B EFI_HTTP_TOKEN;
typedef struct _20ED846744D509B620B690D658C2AC6D EFI_I2C_DEVICE;
typedef struct _EFI_IFR_ACTION EFI_IFR_ACTION;
typedef struct _203545BB35CF1DA97401FB9442416DCA EFI_IFR_BANNER;
typedef struct _EFI_IFR_DIVIDE EFI_IFR_DIVIDE;
typedef struct _BE973F4FDB064641654791385863872C EFI_IFR_END_IF;
typedef struct _1D81A62B985707A48E0901106C1EB1C5 EFI_IFR_HIDDEN;
typedef struct _EFI_IFR_LENGTH EFI_IFR_LENGTH;
typedef struct _EFI_IFR_LOCKED EFI_IFR_LOCKED;
typedef struct _EFI_IFR_MATCH2 EFI_IFR_MATCH2;
typedef struct _EFI_IFR_MODULO EFI_IFR_MODULO;
typedef struct _EFI_IFR_ONE_OF EFI_IFR_ONE_OF;
typedef struct _9077B6028AA1E2315235F4CA294EB815 EFI_IFR_PACKET;
typedef struct _EFI_IFR_STRING EFI_IFR_STRING;
typedef struct _EFI_IFR_UINT16 EFI_IFR_UINT16;
typedef struct _EFI_IFR_UINT32 EFI_IFR_UINT32;
typedef struct _EFI_IFR_UINT64 EFI_IFR_UINT64;
typedef struct _526690B6FDCBF90BFE8DDB73F83CC4AF EFI_IP4_HEADER;
typedef struct _EFI_IP6_HEADER EFI_IP6_HEADER;
typedef union _149F3B707450891669292D33A510652F EFI_IP_ADDRESS;
typedef struct _EFI_ISA_HC_PPI EFI_ISA_HC_PPI;
typedef struct _318BB5C1C3DF58EA36C90E5CB8A1C7D8 EFI_KEY_OPTION;
typedef struct _16D263F2539C0B1C79D62B0DEF479AC3 EFI_SMBUS_UDID;
typedef struct tdEFI_TCG2_EVENT EFI_TCG2_EVENT;
typedef struct _33EFD90D9BAD8D970035A0DA91BDBBB9 EFI_UDP_HEADER;
typedef struct _F45FF1BC91AF929EB0B363B4AC224A3E EFI_WIDE_GLYPH;
typedef struct _120BA447C6AA090F9036528BA5F22CD6 EVENT_LOG_TYPE;
typedef struct _D9803BDD96BE0854BBF62FAC3DCED6FD FEATUREBYTE2_5;
typedef struct _7EBE2FFF53B6C02FD1AF6B36F0E879E8 HASH_INTERFACE;
typedef union _6D8834E078AC6CD70A1398B3A5476142 IP_IO_OVERRIDE;
typedef union _21300D4394F4C27F6B0FB693B1665CFE LOCAL_APIC_DCR;
typedef union _A9C6387FF17B0FE0A5B3AEC55D0E1F1C LOCAL_APIC_SVR;
typedef COMMTIMEOUTS *LPCOMMTIMEOUTS;
enum MACRO_ACPI_ADR {ACPI_ADR_DP = 0x3,ACPI_ADR_DISPLAY_TYPE_OTHER = 0x0,ACPI_ADR_DISPLAY_TYPE_VGA = 0x1,ACPI_ADR_DISPLAY_TYPE_TV = 0x2,ACPI_ADR_DISPLAY_TYPE_EXTERNAL_DIGITAL = 0x3,ACPI_ADR_DISPLAY_TYPE_INTERNAL_DIGITAL = 0x4,};
enum MACRO_BIT_MASK {CHECK_INFO_VALID_BIT_MASK = 0x1,REQUESTOR_ID_VALID_BIT_MASK = 0x2,RESPONDER_ID_VALID_BIT_MASK = 0x4,TARGER_ID_VALID_BIT_MASK = 0x8,PRECISE_IP_VALID_BIT_MASK = 0x10,MIN_STATE_VALID_BIT_MASK = 0x1,BR_VALID_BIT_MASK = 0x2,CR_VALID_BIT_MASK = 0x4,AR_VALID_BIT_MASK = 0x8,RR_VALID_BIT_MASK = 0x10,FR_VALID_BIT_MASK = 0x20,PROC_ERROR_MAP_VALID_BIT_MASK = 0x1,PROC_STATE_PARAMETER_VALID_BIT_MASK = 0x2,PROC_CR_LID_VALID_BIT_MASK = 0x4,PROC_STATIC_STRUCT_VALID_BIT_MASK = 0x8,CPU_INFO_VALID_BIT_MASK = 0x1000000,MEMORY_ERROR_STATUS_VALID_BIT_MASK = 0x1,MEMORY_PHYSICAL_ADDRESS_VALID_BIT_MASK = 0x2,MEMORY_ADDR_BIT_MASK = 0x4,MEMORY_NODE_VALID_BIT_MASK = 0x8,MEMORY_CARD_VALID_BIT_MASK = 0x10,MEMORY_MODULE_VALID_BIT_MASK = 0x20,MEMORY_BANK_VALID_BIT_MASK = 0x40,MEMORY_DEVICE_VALID_BIT_MASK = 0x80,MEMORY_ROW_VALID_BIT_MASK = 0x100,MEMORY_COLUMN_VALID_BIT_MASK = 0x200,MEMORY_BIT_POSITION_VALID_BIT_MASK = 0x400,MEMORY_PLATFORM_REQUESTOR_ID_VALID_BIT_MASK = 0x800,MEMORY_PLATFORM_RESPONDER_ID_VALID_BIT_MASK = 0x1000,MEMORY_PLATFORM_TARGET_VALID_BIT_MASK = 0x2000,MEMORY_PLATFORM_BUS_SPECIFIC_DATA_VALID_BIT_MASK = 0x4000,MEMORY_PLATFORM_OEM_ID_VALID_BIT_MASK = 0x8000,MEMORY_PLATFORM_OEM_DATA_STRUCT_VALID_BIT_MASK = 0x10000,PCI_BUS_ERROR_STATUS_VALID_BIT_MASK = 0x1,PCI_BUS_ERROR_TYPE_VALID_BIT_MASK = 0x2,PCI_BUS_ID_VALID_BIT_MASK = 0x4,PCI_BUS_ADDRESS_VALID_BIT_MASK = 0x8,PCI_BUS_DATA_VALID_BIT_MASK = 0x10,PCI_BUS_CMD_VALID_BIT_MASK = 0x20,PCI_BUS_REQUESTOR_ID_VALID_BIT_MASK = 0x40,PCI_BUS_RESPONDER_ID_VALID_BIT_MASK = 0x80,PCI_BUS_TARGET_VALID_BIT_MASK = 0x100,PCI_BUS_OEM_ID_VALID_BIT_MASK = 0x200,PCI_BUS_OEM_DATA_STRUCT_VALID_BIT_MASK = 0x400,PCI_COMP_ERROR_STATUS_VALID_BIT_MASK = 0x1,PCI_COMP_INFO_VALID_BIT_MASK = 0x2,PCI_COMP_MEM_NUM_VALID_BIT_MASK = 0x4,PCI_COMP_IO_NUM_VALID_BIT_MASK = 0x8,PCI_COMP_REG_DATA_PAIR_VALID_BIT_MASK = 0x10,PCI_COMP_OEM_DATA_STRUCT_VALID_BIT_MASK = 0x20,SMBIOS_EVENT_TYPE_VALID_BIT_MASK = 0x1,SMBIOS_LENGTH_VALID_BIT_MASK = 0x2,SMBIOS_TIME_STAMP_VALID_BIT_MASK = 0x4,SMBIOS_DATA_VALID_BIT_MASK = 0x8,PLATFORM_ERROR_STATUS_VALID_BIT_MASK = 0x1,PLATFORM_REQUESTOR_ID_VALID_BIT_MASK = 0x2,PLATFORM_RESPONDER_ID_VALID_BIT_MASK = 0x4,PLATFORM_TARGET_VALID_BIT_MASK = 0x8,PLATFORM_SPECIFIC_DATA_VALID_BIT_MASK = 0x10,PLATFORM_OEM_ID_VALID_BIT_MASK = 0x20,PLATFORM_OEM_DATA_STRUCT_VALID_BIT_MASK = 0x40,PLATFORM_OEM_DEVICE_PATH_VALID_BIT_MASK = 0x80,};
enum MACRO_CODEVIEW {CODEVIEW_SIGNATURE_NB10 = 808534606,CODEVIEW_SIGNATURE_RSDS = 1396986706,CODEVIEW_SIGNATURE_MTOC = 1129272397,};
enum MACRO_DELIVERY {DELIVERY_MODE_FIXED = 0x0,DELIVERY_MODE_LOWEST_PRIORITY = 0x1,DELIVERY_MODE_SMI = 0x2,DELIVERY_MODE_REMOTE_READ = 0x3,DELIVERY_MODE_NMI = 0x4,DELIVERY_MODE_INIT = 0x5,DELIVERY_MODE_SIPI = 0x6,DELIVERY_MODE_MAX = 0x7,};
enum MACRO_EFI_ACPI {EFI_ACPI_RESERVED_BYTE = 0x0,EFI_ACPI_RESERVED_WORD = 0x0,EFI_ACPI_RESERVED_DWORD = 0x0,EFI_ACPI_RESERVED_QWORD = 0x0,EFI_ACPI_MEMORY_RESOURCE_SPECIFIC_FLAG_READ_WRITE = 0x1,EFI_ACPI_MEMORY_RESOURCE_SPECIFIC_FLAG_READ_ONLY = 0x0,EFI_ACPI_MEMORY_RESOURCE_SPECIFIC_FLAG_NON_CACHEABLE = 0x0,EFI_ACPI_MEMORY_RESOURCE_SPECIFIC_FLAG_CACHEABLE = 0x2,EFI_ACPI_MEMORY_RESOURCE_SPECIFIC_FLAG_CACHEABLE_WRITE_COMBINING = 0x4,EFI_ACPI_MEMORY_RESOURCE_SPECIFIC_FLAG_CACHEABLE_PREFETCHABLE = 0x6,EFI_ACPI_MEMORY_RESOURCE_SPECIFIC_FLAG_ADDRESS_RANGE_MEMORY = 0x0,EFI_ACPI_MEMORY_RESOURCE_SPECIFIC_FLAG_ADDRESS_RANGE_RESERVED = 0x8,EFI_ACPI_MEMORY_RESOURCE_SPECIFIC_FLAG_ADDRESS_RANGE_ACPI = 0x10,EFI_APCI_MEMORY_RESOURCE_SPECIFIC_FLAG_ADDRESS_RANGE_NVS = 0x18,EFI_ACPI_MEMORY_RESOURCE_SPECIFIC_FLAG_TYPE_TRANSLATION = 0x20,EFI_ACPI_MEMORY_RESOURCE_SPECIFIC_FLAG_TYPE_STATIC = 0x0,EFI_ACPI_IRQ_SHARABLE_MASK = 0x10,EFI_ACPI_IRQ_SHARABLE = 0x10,EFI_ACPI_IRQ_POLARITY_MASK = 0x8,EFI_ACPI_IRQ_HIGH_TRUE = 0x0,EFI_ACPI_IRQ_LOW_FALSE = 0x8,EFI_ACPI_IRQ_MODE = 0x1,EFI_ACPI_IRQ_LEVEL_TRIGGERED = 0x0,EFI_ACPI_IRQ_EDGE_TRIGGERED = 0x1,EFI_ACPI_DMA_SPEED_TYPE_MASK = 0x60,EFI_ACPI_DMA_SPEED_TYPE_COMPATIBILITY = 0x0,EFI_ACPI_DMA_SPEED_TYPE_A = 0x20,EFI_ACPI_DMA_SPEED_TYPE_B = 0x40,EFI_ACPI_DMA_SPEED_TYPE_F = 0x60,EFI_ACPI_DMA_BUS_MASTER_MASK = 0x4,EFI_ACPI_DMA_BUS_MASTER = 0x4,EFI_ACPI_DMA_TRANSFER_TYPE_MASK = 0x3,EFI_ACPI_DMA_TRANSFER_TYPE_8_BIT = 0x0,EFI_ACPI_DMA_TRANSFER_TYPE_8_BIT_AND_16_BIT = 0x1,EFI_ACPI_DMA_TRANSFER_TYPE_16_BIT = 0x10,EFI_ACPI_IO_DECODE_MASK = 0x1,EFI_ACPI_IO_DECODE_16_BIT = 0x1,EFI_ACPI_IO_DECODE_10_BIT = 0x0,EFI_ACPI_MEMORY_WRITE_STATUS_MASK = 0x1,EFI_ACPI_MEMORY_WRITABLE = 0x1,EFI_ACPI_MEMORY_NON_WRITABLE = 0x0,EFI_ACPI_1_0_ROOT_SYSTEM_DESCRIPTION_TABLE_REVISION = 0x1,EFI_ACPI_1_0_FIXED_ACPI_DESCRIPTION_TABLE_REVISION = 0x1,EFI_ACPI_1_0_INT_MODE_DUAL_PIC = 0x0,EFI_ACPI_1_0_INT_MODE_MULTIPLE_APIC = 0x1,EFI_ACPI_1_0_WBINVD = 0x1,EFI_ACPI_1_0_WBINVD_FLUSH = 0x2,EFI_ACPI_1_0_PROC_C1 = 0x4,EFI_ACPI_1_0_P_LVL2_UP = 0x8,EFI_ACPI_1_0_PWR_BUTTON = 0x10,EFI_ACPI_1_0_SLP_BUTTON = 0x20,EFI_ACPI_1_0_FIX_RTC = 0x40,EFI_ACPI_1_0_RTC_S4 = 0x80,EFI_ACPI_1_0_TMR_VAL_EXT = 0x100,EFI_ACPI_1_0_DCK_CAP = 0x200,EFI_ACPI_1_0_S4BIOS_F = 0x1,EFI_ACPI_1_0_MULTIPLE_APIC_DESCRIPTION_TABLE_REVISION = 0x1,EFI_ACPI_1_0_PCAT_COMPAT = 0x1,EFI_ACPI_1_0_PROCESSOR_LOCAL_APIC = 0x0,EFI_ACPI_1_0_IO_APIC = 0x1,EFI_ACPI_1_0_INTERRUPT_SOURCE_OVERRIDE = 0x2,EFI_ACPI_1_0_NON_MASKABLE_INTERRUPT_SOURCE = 0x3,EFI_ACPI_1_0_LOCAL_APIC_NMI = 0x4,EFI_ACPI_1_0_LOCAL_APIC_ENABLED = 0x1,EFI_ACPI_1_0_ROOT_SYSTEM_DESCRIPTION_POINTER_SIGNATURE = 0x2052545020445352,EFI_ACPI_1_0_APIC_SIGNATURE = 0x43495041,EFI_ACPI_1_0_DIFFERENTIATED_SYSTEM_DESCRIPTION_TABLE_SIGNATURE = 0x54445344,EFI_ACPI_1_0_FIRMWARE_ACPI_CONTROL_STRUCTURE_SIGNATURE = 0x53434146,EFI_ACPI_1_0_FIXED_ACPI_DESCRIPTION_TABLE_SIGNATURE = 0x50434146,EFI_ACPI_1_0_PERSISTENT_SYSTEM_DESCRIPTION_TABLE_SIGNATURE = 0x54445350,EFI_ACPI_1_0_ROOT_SYSTEM_DESCRIPTION_TABLE_SIGNATURE = 0x54445352,EFI_ACPI_1_0_SMART_BATTERY_SPECIFICATION_TABLE_SIGNATURE = 0x54534253,EFI_ACPI_1_0_SECONDARY_SYSTEM_DESCRIPTION_TABLE_SIGNATURE = 0x54445353,};
enum MACRO_EFI_BOOT {EFI_BOOT_OPTION_SUPPORT_KEY = 0x1,EFI_BOOT_OPTION_SUPPORT_APP = 0x2,EFI_BOOT_OPTION_SUPPORT_SYSPREP = 0x10,EFI_BOOT_OPTION_SUPPORT_COUNT = 0x300,};
enum MACRO_EFI_EDID {EFI_EDID_OVERRIDE_DONT_OVERRIDE = 0x1,EFI_EDID_OVERRIDE_ENABLE_HOT_PLUG = 0x2,EFI_EXTENDED_SAL_BASE_IO_SERVICES_PROTOCOL_GUID_LO = 0x451531E15AEA42B5,EFI_EXTENDED_SAL_BASE_IO_SERVICES_PROTOCOL_GUID_HI = 0xA6657525D5B831BC,EFI_EXTENDED_SAL_STALL_SERVICES_PROTOCOL_GUID_LO = 0x4D8CAC2753A58D06,EFI_EXTENDED_SAL_STALL_SERVICES_PROTOCOL_GUID_HI = 0x704165808AF0E9B5,EFI_EXTENDED_SAL_RTC_SERVICES_PROTOCOL_GUID_LO = 0x4D02EFDB7E97A470,EFI_EXTENDED_SAL_RTC_SERVICES_PROTOCOL_GUID_HI = 0x96A27BD29061CE8F,EFI_EXTENDED_SAL_VARIABLE_SERVICES_PROTOCOL_GUID_LO = 0x4370C6414ECB6C53,EFI_EXTENDED_SAL_VARIABLE_SERVICES_PROTOCOL_GUID_HI = 0x78836E490E3BB28C,EFI_EXTENDED_SAL_MTC_SERVICES_PROTOCOL_GUID_LO = 0x408B75E8899AFD18,EFI_EXTENDED_SAL_MTC_SERVICES_PROTOCOL_GUID_HI = 0x54F4CD7E2E6E1AA4,EFI_EXTENDED_SAL_RESET_SERVICES_PROTOCOL_GUID_LO = 0x46F58CE17D019990,EFI_EXTENDED_SAL_RESET_SERVICES_PROTOCOL_GUID_HI = 0xA06A6798513C76A7,EFI_EXTENDED_SAL_STATUS_CODE_SERVICES_PROTOCOL_GUID_LO = 0x420F55E9DBD91D,EFI_EXTENDED_SAL_STATUS_CODE_SERVICES_PROTOCOL_GUID_HI = 0x4FB437849F5E3996,EFI_EXTENDED_SAL_FV_BLOCK_SERVICES_PROTOCOL_GUID_LO = 0x4F1DBCBBA2271DF1,EFI_EXTENDED_SAL_FV_BLOCK_SERVICES_PROTOCOL_GUID_HI = 0x1A072F17BC06A998,EFI_EXTENDED_SAL_MP_SERVICES_PROTOCOL_GUID_LO = 0x4DC0CF18697D81A2,EFI_EXTENDED_SAL_MP_SERVICES_PROTOCOL_GUID_HI = 0x3F8A613B11060D9E,EFI_EXTENDED_SAL_PAL_SERVICES_PROTOCOL_GUID_LO = 0x438D0FC2E1CD9D21,EFI_EXTENDED_SAL_PAL_SERVICES_PROTOCOL_GUID_HI = 0x571E966DE6040397,EFI_EXTENDED_SAL_BASE_SERVICES_PROTOCOL_GUID_LO = 0x41C30FE0D9E9FA06,EFI_EXTENDED_SAL_BASE_SERVICES_PROTOCOL_GUID_HI = 0xF894335A4283FB96,EFI_EXTENDED_SAL_MCA_SERVICES_PROTOCOL_GUID_LO = 0x42B16CC72A591128,EFI_EXTENDED_SAL_MCA_SERVICES_PROTOCOL_GUID_HI = 0xBB2D683B9358F08A,EFI_EXTENDED_SAL_PCI_SERVICES_PROTOCOL_GUID_LO = 0x4905AD66A46B1A31,EFI_EXTENDED_SAL_PCI_SERVICES_PROTOCOL_GUID_HI = 0x6330DC59462BF692,EFI_EXTENDED_SAL_CACHE_SERVICES_PROTOCOL_GUID_LO = 0x4BA52743EDC9494,EFI_EXTENDED_SAL_CACHE_SERVICES_PROTOCOL_GUID_HI = 0x88F11352EF0A1888,EFI_EXTENDED_SAL_MCA_LOG_SERVICES_PROTOCOL_GUID_LO = 0x4C0338A3CB3FD86E,EFI_EXTENDED_SAL_MCA_LOG_SERVICES_PROTOCOL_GUID_HI = 0x7AABA2A3CF905C9A,};
enum MACRO_EFI_FILE {EFI_FILE_HEADER_CONSTRUCTION = 0x1,EFI_FILE_HEADER_VALID = 0x2,EFI_FILE_DATA_VALID = 0x4,EFI_FILE_MARKED_FOR_UPDATE = 0x8,EFI_FILE_DELETED = 0x10,EFI_FILE_HEADER_INVALID = 0x20,EFI_SECTION_ALL = 0x0,EFI_SECTION_COMPRESSION = 0x1,EFI_SECTION_GUID_DEFINED = 0x2,EFI_SECTION_DISPOSABLE = 0x3,EFI_SECTION_PE32 = 0x10,EFI_SECTION_PIC = 0x11,EFI_SECTION_TE = 0x12,EFI_SECTION_DXE_DEPEX = 0x13,EFI_SECTION_VERSION = 0x14,EFI_SECTION_USER_INTERFACE = 0x15,EFI_SECTION_COMPATIBILITY16 = 0x16,EFI_SECTION_FIRMWARE_VOLUME_IMAGE = 0x17,EFI_SECTION_FREEFORM_SUBTYPE_GUID = 0x18,EFI_SECTION_RAW = 0x19,EFI_SECTION_PEI_DEPEX = 0x1B,EFI_SECTION_SMM_DEPEX = 0x1C,EFI_NOT_COMPRESSED = 0x0,EFI_STANDARD_COMPRESSION = 0x1,EFI_GUIDED_SECTION_PROCESSING_REQUIRED = 0x1,EFI_GUIDED_SECTION_AUTH_STATUS_VALID = 0x2,};
enum MACRO_EFI_LOAD {EFI_LOAD_PE_IMAGE_ATTRIBUTE_NONE = 0x0,EFI_LOAD_PE_IMAGE_ATTRIBUTE_RUNTIME_REGISTRATION = 0x1,EFI_LOAD_PE_IMAGE_ATTRIBUTE_DEBUG_IMAGE_INFO_TABLE_REGISTRATION = 0x2,EFI_UNSUPPORT_LOCK = 0x0,EFI_SOFTWARE_LOCK = 0x1,EFI_HARDWARE_LOCK = 0x2,};
enum MACRO_EFI_MISC {EFI_MISC_MANAGEMENT_DEVICE_THRESHOLD_RECORD_NUMBER = 0x21,EFI_SUBCLASS_INSTANCE_RESERVED = 0x0,EFI_SUBCLASS_INSTANCE_NON_APPLICABLE = 0xFFFF,};
enum MACRO_EFI_OPEN {EFI_OPEN_PROTOCOL_BY_HANDLE_PROTOCOL = 0x1,EFI_OPEN_PROTOCOL_GET_PROTOCOL = 0x2,EFI_OPEN_PROTOCOL_TEST_PROTOCOL = 0x4,EFI_OPEN_PROTOCOL_BY_CHILD_CONTROLLER = 0x8,EFI_OPEN_PROTOCOL_BY_DRIVER = 0x10,EFI_OPEN_PROTOCOL_EXCLUSIVE = 0x20,};
enum MACRO_EFI_PCIE {EFI_PCIE_CAPABILITY_BASE_OFFSET = 0x100,EFI_PCIE_CAPABILITY_ID_SRIOV_CONTROL_ARI_HIERARCHY = 0x10,EFI_PCIE_CAPABILITY_DEVICE_CAPABILITIES_2_OFFSET = 0x24,EFI_PCIE_CAPABILITY_DEVICE_CAPABILITIES_2_ARI_FORWARDING = 0x20,EFI_PCIE_CAPABILITY_DEVICE_CONTROL_2_OFFSET = 0x28,EFI_PCIE_CAPABILITY_DEVICE_CONTROL_2_ARI_FORWARDING = 0x20,EFI_PCIE_CAPABILITY_ID_ARI = 0xE,EFI_PCIE_CAPABILITY_ID_ATS = 0xF,EFI_PCIE_CAPABILITY_ID_SRIOV = 0x10,EFI_PCIE_CAPABILITY_ID_MRIOV = 0x11,EFI_PCIE_CAPABILITY_ID_SRIOV_CAPABILITIES = 0x4,EFI_PCIE_CAPABILITY_ID_SRIOV_CONTROL = 0x8,EFI_PCIE_CAPABILITY_ID_SRIOV_STATUS = 0xA,EFI_PCIE_CAPABILITY_ID_SRIOV_INITIALVFS = 0xC,EFI_PCIE_CAPABILITY_ID_SRIOV_TOTALVFS = 0xE,EFI_PCIE_CAPABILITY_ID_SRIOV_NUMVFS = 0x10,EFI_PCIE_CAPABILITY_ID_SRIOV_FUNCTION_DEPENDENCY_LINK = 0x12,EFI_PCIE_CAPABILITY_ID_SRIOV_FIRSTVF = 0x14,EFI_PCIE_CAPABILITY_ID_SRIOV_VFSTRIDE = 0x16,EFI_PCIE_CAPABILITY_ID_SRIOV_VFDEVICEID = 0x1A,EFI_PCIE_CAPABILITY_ID_SRIOV_SUPPORTED_PAGE_SIZE = 0x1C,EFI_PCIE_CAPABILITY_ID_SRIOV_SYSTEM_PAGE_SIZE = 0x20,EFI_PCIE_CAPABILITY_ID_SRIOV_BAR0 = 0x24,EFI_PCIE_CAPABILITY_ID_SRIOV_BAR1 = 0x28,EFI_PCIE_CAPABILITY_ID_SRIOV_BAR2 = 0x2C,EFI_PCIE_CAPABILITY_ID_SRIOV_BAR3 = 0x30,EFI_PCIE_CAPABILITY_ID_SRIOV_BAR4 = 0x34,EFI_PCIE_CAPABILITY_ID_SRIOV_BAR5 = 0x38,EFI_PCIE_CAPABILITY_ID_SRIOV_VF_MIGRATION_STATE = 0x3C,};
enum MACRO_EFI_PTAB {EFI_PTAB_HEADER_ID = 6075990659671082565,EFI_HII_PACKAGE_TYPE_ALL = 0,EFI_HII_PACKAGE_TYPE_GUID = 1,EFI_HII_PACKAGE_FORMS = 2,EFI_HII_PACKAGE_STRINGS = 4,EFI_HII_PACKAGE_FONTS = 5,EFI_HII_PACKAGE_IMAGES = 6,EFI_HII_PACKAGE_SIMPLE_FONTS = 7,EFI_HII_PACKAGE_DEVICE_PATH = 8,EFI_HII_PACKAGE_KEYBOARD_LAYOUT = 9,EFI_HII_PACKAGE_ANIMATIONS = 10,EFI_HII_PACKAGE_END = 223,EFI_HII_PACKAGE_TYPE_SYSTEM_BEGIN = 224,EFI_HII_PACKAGE_TYPE_SYSTEM_END = 255,EFI_GLYPH_NON_SPACING = 1,EFI_GLYPH_WIDE = 2,EFI_GLYPH_HEIGHT = 19,EFI_GLYPH_WIDTH = 8,EFI_HII_FONT_STYLE_NORMAL = 0,EFI_HII_FONT_STYLE_BOLD = 1,EFI_HII_FONT_STYLE_ITALIC = 2,EFI_HII_FONT_STYLE_EMBOSS = 65536,EFI_HII_FONT_STYLE_OUTLINE = 131072,EFI_HII_FONT_STYLE_SHADOW = 262144,EFI_HII_FONT_STYLE_UNDERLINE = 524288,EFI_HII_FONT_STYLE_DBL_UNDER = 1048576,EFI_HII_GIBT_END = 0,EFI_HII_GIBT_GLYPH = 16,EFI_HII_GIBT_GLYPHS = 17,EFI_HII_GIBT_GLYPH_DEFAULT = 18,EFI_HII_GIBT_GLYPHS_DEFAULT = 19,EFI_HII_GIBT_DUPLICATE = 32,EFI_HII_GIBT_SKIP2 = 33,EFI_HII_GIBT_SKIP1 = 34,EFI_HII_GIBT_DEFAULTS = 35,EFI_HII_GIBT_EXT1 = 48,EFI_HII_GIBT_EXT2 = 49,EFI_HII_GIBT_EXT4 = 50,EFI_HII_SIBT_END = 0,EFI_HII_SIBT_STRING_SCSU = 16,EFI_HII_SIBT_STRING_SCSU_FONT = 17,EFI_HII_SIBT_STRINGS_SCSU = 18,EFI_HII_SIBT_STRINGS_SCSU_FONT = 19,EFI_HII_SIBT_STRING_UCS2 = 20,EFI_HII_SIBT_STRING_UCS2_FONT = 21,EFI_HII_SIBT_STRINGS_UCS2 = 22,EFI_HII_SIBT_STRINGS_UCS2_FONT = 23,EFI_HII_SIBT_DUPLICATE = 32,EFI_HII_SIBT_SKIP2 = 33,EFI_HII_SIBT_SKIP1 = 34,EFI_HII_SIBT_EXT1 = 48,EFI_HII_SIBT_EXT2 = 49,EFI_HII_SIBT_EXT4 = 50,EFI_HII_SIBT_FONT = 64,EFI_HII_IIBT_END = 0,EFI_HII_IIBT_IMAGE_1BIT = 16,EFI_HII_IIBT_IMAGE_1BIT_TRANS = 17,EFI_HII_IIBT_IMAGE_4BIT = 18,EFI_HII_IIBT_IMAGE_4BIT_TRANS = 19,EFI_HII_IIBT_IMAGE_8BIT = 20,EFI_HII_IIBT_IMAGE_8BIT_TRANS = 21,EFI_HII_IIBT_IMAGE_24BIT = 22,EFI_HII_IIBT_IMAGE_24BIT_TRANS = 23,EFI_HII_IIBT_IMAGE_JPEG = 24,EFI_HII_IIBT_DUPLICATE = 32,EFI_HII_IIBT_SKIP2 = 33,EFI_HII_IIBT_SKIP1 = 34,EFI_HII_IIBT_EXT1 = 48,EFI_HII_IIBT_EXT2 = 49,EFI_HII_IIBT_EXT4 = 50,EFI_IFR_FORM_OP = 1,EFI_IFR_SUBTITLE_OP = 2,EFI_IFR_TEXT_OP = 3,EFI_IFR_IMAGE_OP = 4,EFI_IFR_ONE_OF_OP = 5,EFI_IFR_CHECKBOX_OP = 6,EFI_IFR_NUMERIC_OP = 7,EFI_IFR_PASSWORD_OP = 8,EFI_IFR_ONE_OF_OPTION_OP = 9,EFI_IFR_SUPPRESS_IF_OP = 10,EFI_IFR_LOCKED_OP = 11,EFI_IFR_ACTION_OP = 12,EFI_IFR_RESET_BUTTON_OP = 13,EFI_IFR_FORM_SET_OP = 14,EFI_IFR_REF_OP = 15,EFI_IFR_NO_SUBMIT_IF_OP = 16,EFI_IFR_INCONSISTENT_IF_OP = 17,EFI_IFR_EQ_ID_VAL_OP = 18,EFI_IFR_EQ_ID_ID_OP = 19,EFI_IFR_EQ_ID_VAL_LIST_OP = 20,EFI_IFR_AND_OP = 21,EFI_IFR_OR_OP = 22,EFI_IFR_NOT_OP = 23,EFI_IFR_RULE_OP = 24,EFI_IFR_GRAY_OUT_IF_OP = 25,EFI_IFR_DATE_OP = 26,EFI_IFR_TIME_OP = 27,EFI_IFR_STRING_OP = 28,EFI_IFR_REFRESH_OP = 29,EFI_IFR_DISABLE_IF_OP = 30,EFI_IFR_ANIMATION_OP = 31,EFI_IFR_TO_LOWER_OP = 32,EFI_IFR_TO_UPPER_OP = 33,EFI_IFR_MAP_OP = 34,EFI_IFR_ORDERED_LIST_OP = 35,EFI_IFR_VARSTORE_OP = 36,EFI_IFR_VARSTORE_NAME_VALUE_OP = 37,EFI_IFR_VARSTORE_EFI_OP = 38,EFI_IFR_VARSTORE_DEVICE_OP = 39,EFI_IFR_VERSION_OP = 40,EFI_IFR_END_OP = 41,EFI_IFR_MATCH_OP = 42,EFI_IFR_GET_OP = 43,EFI_IFR_SET_OP = 44,EFI_IFR_READ_OP = 45,EFI_IFR_WRITE_OP = 46,EFI_IFR_EQUAL_OP = 47,EFI_IFR_NOT_EQUAL_OP = 48,EFI_IFR_GREATER_THAN_OP = 49,EFI_IFR_GREATER_EQUAL_OP = 50,EFI_IFR_LESS_THAN_OP = 51,EFI_IFR_LESS_EQUAL_OP = 52,EFI_IFR_BITWISE_AND_OP = 53,EFI_IFR_BITWISE_OR_OP = 54,EFI_IFR_BITWISE_NOT_OP = 55,EFI_IFR_SHIFT_LEFT_OP = 56,EFI_IFR_SHIFT_RIGHT_OP = 57,EFI_IFR_ADD_OP = 58,EFI_IFR_SUBTRACT_OP = 59,EFI_IFR_MULTIPLY_OP = 60,EFI_IFR_DIVIDE_OP = 61,EFI_IFR_MODULO_OP = 62,EFI_IFR_RULE_REF_OP = 63,EFI_IFR_QUESTION_REF1_OP = 64,EFI_IFR_QUESTION_REF2_OP = 65,EFI_IFR_UINT8_OP = 66,EFI_IFR_UINT16_OP = 67,EFI_IFR_UINT32_OP = 68,EFI_IFR_UINT64_OP = 69,EFI_IFR_TRUE_OP = 70,EFI_IFR_FALSE_OP = 71,EFI_IFR_TO_UINT_OP = 72,EFI_IFR_TO_STRING_OP = 73,EFI_IFR_TO_BOOLEAN_OP = 74,EFI_IFR_MID_OP = 75,EFI_IFR_FIND_OP = 76,EFI_IFR_TOKEN_OP = 77,EFI_IFR_STRING_REF1_OP = 78,EFI_IFR_STRING_REF2_OP = 79,EFI_IFR_CONDITIONAL_OP = 80,EFI_IFR_QUESTION_REF3_OP = 81,EFI_IFR_ZERO_OP = 82,EFI_IFR_ONE_OP = 83,EFI_IFR_ONES_OP = 84,EFI_IFR_UNDEFINED_OP = 85,EFI_IFR_LENGTH_OP = 86,EFI_IFR_DUP_OP = 87,EFI_IFR_THIS_OP = 88,EFI_IFR_SPAN_OP = 89,EFI_IFR_VALUE_OP = 90,EFI_IFR_DEFAULT_OP = 91,EFI_IFR_DEFAULTSTORE_OP = 92,EFI_IFR_FORM_MAP_OP = 93,EFI_IFR_CATENATE_OP = 94,EFI_IFR_GUID_OP = 95,EFI_IFR_SECURITY_OP = 96,EFI_IFR_MODAL_TAG_OP = 97,EFI_IFR_REFRESH_ID_OP = 98,EFI_IFR_WARNING_IF_OP = 99,EFI_IFR_MATCH2_OP = 100,EFI_IFR_FLAG_READ_ONLY = 1,EFI_IFR_FLAG_CALLBACK = 4,EFI_IFR_FLAG_RESET_REQUIRED = 16,EFI_IFR_FLAG_RECONNECT_REQUIRED = 64,EFI_IFR_FLAG_OPTIONS_ONLY = 128,EFI_HII_DEFAULT_CLASS_STANDARD = 0,EFI_HII_DEFAULT_CLASS_MANUFACTURING = 1,EFI_HII_DEFAULT_CLASS_SAFE = 2,EFI_HII_DEFAULT_CLASS_PLATFORM_BEGIN = 16384,EFI_HII_DEFAULT_CLASS_PLATFORM_END = 32767,EFI_HII_DEFAULT_CLASS_HARDWARE_BEGIN = 32768,EFI_HII_DEFAULT_CLASS_HARDWARE_END = 49151,EFI_HII_DEFAULT_CLASS_FIRMWARE_BEGIN = 49152,EFI_HII_DEFAULT_CLASS_FIRMWARE_END = 65535,EFI_IFR_FLAGS_HORIZONTAL = 1,EFI_IFR_CHECKBOX_DEFAULT = 1,EFI_IFR_CHECKBOX_DEFAULT_MFG = 2,EFI_QF_DATE_YEAR_SUPPRESS = 1,EFI_QF_DATE_MONTH_SUPPRESS = 2,EFI_QF_DATE_DAY_SUPPRESS = 4,EFI_QF_DATE_STORAGE = 48,};
enum MACRO_EFI_ROOT {EFI_ROOT_BRIDGE_LIST = 1701868130,EFI_PCI_EXPANSION_ROM_HEADER_EFISIGNATURE = 3825,};
enum MACRO_EFI_SCSI {EFI_SCSI_OP_CHANGE_DEFINITION = 0x40,EFI_SCSI_OP_COMPARE = 0x39,EFI_SCSI_OP_COPY = 0x18,EFI_SCSI_OP_COPY_VERIFY = 0x3A,EFI_SCSI_OP_INQUIRY = 0x12,EFI_SCSI_OP_LOG_SELECT = 0x4C,EFI_SCSI_OP_LOG_SENSE = 0x4D,EFI_SCSI_OP_MODE_SEL6 = 0x15,EFI_SCSI_OP_MODE_SEL10 = 0x55,EFI_SCSI_OP_MODE_SEN6 = 0x1A,EFI_SCSI_OP_MODE_SEN10 = 0x5A,EFI_SCSI_OP_READ_BUFFER = 0x3C,EFI_SCSI_OP_RECEIVE_DIAG = 0x1C,EFI_SCSI_OP_REQUEST_SENSE = 0x3,EFI_SCSI_OP_SEND_DIAG = 0x1D,EFI_SCSI_OP_TEST_UNIT_READY = 0x0,EFI_SCSI_OP_WRITE_BUFF = 0x3B,EFI_SCSI_OP_FORMAT = 0x4,EFI_SCSI_OP_LOCK_UN_CACHE = 0x36,EFI_SCSI_OP_PREFETCH = 0x34,EFI_SCSI_OP_MEDIA_REMOVAL = 0x1E,EFI_SCSI_OP_READ6 = 0x8,EFI_SCSI_OP_READ10 = 0x28,EFI_SCSI_OP_READ16 = 0x88,EFI_SCSI_OP_READ_CAPACITY = 0x25,EFI_SCSI_OP_READ_CAPACITY16 = 0x9E,EFI_SCSI_OP_READ_DEFECT = 0x37,EFI_SCSI_OP_READ_LONG = 0x3E,EFI_SCSI_OP_REASSIGN_BLK = 0x7,EFI_SCSI_OP_RELEASE = 0x17,EFI_SCSI_OP_REZERO = 0x1,EFI_SCSI_OP_SEARCH_DATA_E = 0x31,EFI_SCSI_OP_SEARCH_DATA_H = 0x30,EFI_SCSI_OP_SEARCH_DATA_L = 0x32,EFI_SCSI_OP_SEEK6 = 0xB,EFI_SCSI_OP_SEEK10 = 0x2B,EFI_SCSI_OP_SET_LIMIT = 0x33,EFI_SCSI_OP_START_STOP_UNIT = 0x1B,EFI_SCSI_OP_SYNC_CACHE = 0x35,EFI_SCSI_OP_VERIFY = 0x2F,EFI_SCSI_OP_WRITE6 = 0xA,EFI_SCSI_OP_WRITE10 = 0x2A,EFI_SCSI_OP_WRITE16 = 0x8A,EFI_SCSI_OP_WRITE_VERIFY = 0x2E,EFI_SCSI_OP_WRITE_LONG = 0x3F,EFI_SCSI_OP_WRITE_SAME = 0x41,EFI_SCSI_OP_ERASE = 0x19,EFI_SCSI_OP_LOAD_UNLOAD = 0x1B,EFI_SCSI_OP_LOCATE = 0x2B,EFI_SCSI_OP_READ_BLOCK_LIMIT = 0x5,EFI_SCSI_OP_READ_POS = 0x34,EFI_SCSI_OP_READ_REVERSE = 0xF,EFI_SCSI_OP_RECOVER_BUF_DATA = 0x14,EFI_SCSI_OP_RESERVE_UNIT = 0x16,EFI_SCSI_OP_REWIND = 0x1,EFI_SCSI_OP_SPACE = 0x11,EFI_SCSI_OP_VERIFY_TAPE = 0x13,EFI_SCSI_OP_WRITE_FILEMARK = 0x10,EFI_SCSI_OP_PRINT = 0xA,EFI_SCSI_OP_SLEW_PRINT = 0xB,EFI_SCSI_OP_STOP_PRINT = 0x1B,EFI_SCSI_OP_SYNC_BUFF = 0x10,EFI_SCSI_OP_RECEIVE = 0x8,EFI_SCSI_OP_SEND = 0xA,EFI_SCSI_OP_MEDIUM_SCAN = 0x38,EFI_SCSI_OP_SEARCH_DAT_E10 = 0x31,EFI_SCSI_OP_SEARCH_DAT_E12 = 0xB1,EFI_SCSI_OP_SEARCH_DAT_H10 = 0x30,EFI_SCSI_OP_SEARCH_DAT_H12 = 0xB0,EFI_SCSI_OP_SEARCH_DAT_L10 = 0x32,EFI_SCSI_OP_SEARCH_DAT_L12 = 0xB2,EFI_SCSI_OP_SET_LIMIT10 = 0x33,EFI_SCSI_OP_SET_LIMIT12 = 0xB3,EFI_SCSI_OP_VERIFY10 = 0x2F,EFI_SCSI_OP_VERIFY12 = 0xAF,EFI_SCSI_OP_WRITE12 = 0xAA,EFI_SCSI_OP_WRITE_VERIFY10 = 0x2E,EFI_SCSI_OP_WRITE_VERIFY12 = 0xAE,EFI_SCSI_OP_PLAY_AUD_10 = 0x45,EFI_SCSI_OP_PLAY_AUD_12 = 0xA5,EFI_SCSI_OP_PLAY_AUD_MSF = 0x47,EFI_SCSI_OP_PLAY_AUD_TKIN = 0x48,EFI_SCSI_OP_PLAY_TK_REL10 = 0x49,EFI_SCSI_OP_PLAY_TK_REL12 = 0xA9,EFI_SCSI_OP_READ_CD_CAPACITY = 0x25,EFI_SCSI_OP_READ_HEADER = 0x44,EFI_SCSI_OP_READ_SUB_CHANNEL = 0x42,EFI_SCSI_OP_READ_TOC = 0x43,EFI_SCSI_OP_GET_DATABUFF_STAT = 0x34,EFI_SCSI_OP_GET_WINDOW = 0x25,EFI_SCSI_OP_OBJECT_POS = 0x31,EFI_SCSI_OP_SCAN = 0x1B,EFI_SCSI_OP_SET_WINDOW = 0x24,EFI_SCSI_OP_UPDATE_BLOCK = 0x3D,EFI_SCSI_OP_EXCHANGE_MEDIUM = 0xA6,EFI_SCSI_OP_INIT_ELEMENT_STAT = 0x7,EFI_SCSI_OP_POS_TO_ELEMENT = 0x2B,EFI_SCSI_OP_REQUEST_VE_ADDR = 0xB5,EFI_SCSI_OP_SEND_VOL_TAG = 0xB6,EFI_SCSI_OP_GET_MESSAGE6 = 0x8,EFI_SCSI_OP_GET_MESSAGE10 = 0x28,EFI_SCSI_OP_GET_MESSAGE12 = 0xA8,EFI_SCSI_OP_SEND_MESSAGE6 = 0xA,EFI_SCSI_OP_SEND_MESSAGE10 = 0x2A,EFI_SCSI_OP_SEND_MESSAGE12 = 0xAA,EFI_SCSI_DATA_IN = 0x0,EFI_SCSI_DATA_OUT = 0x1,EFI_SCSI_TYPE_DISK = 0x0,EFI_SCSI_TYPE_TAPE = 0x1,EFI_SCSI_TYPE_PRINTER = 0x2,EFI_SCSI_TYPE_PROCESSOR = 0x3,EFI_SCSI_TYPE_WORM = 0x4,EFI_SCSI_TYPE_CDROM = 0x5,EFI_SCSI_TYPE_SCANNER = 0x6,EFI_SCSI_TYPE_OPTICAL = 0x7,EFI_SCSI_TYPE_MEDIUMCHANGER = 0x8,EFI_SCSI_TYPE_COMMUNICATION = 0x9,EFI_SCSI_TYPE_ASCIT8_1 = 0xA,EFI_SCSI_TYPE_ASCIT8_2 = 0xB,EFI_SCSI_TYPE_UNKNOWN = 0x1F,EFI_SCSI_PAGE_CODE_SUPPORTED_VPD = 0x0,EFI_SCSI_PAGE_CODE_BLOCK_LIMITS_VPD = 0xB0,EFI_SCSI_SK_NO_SENSE = 0x0,EFI_SCSI_SK_RECOVERY_ERROR = 0x1,EFI_SCSI_SK_NOT_READY = 0x2,EFI_SCSI_SK_MEDIUM_ERROR = 0x3,EFI_SCSI_SK_HARDWARE_ERROR = 0x4,EFI_SCSI_SK_ILLEGAL_REQUEST = 0x5,EFI_SCSI_SK_UNIT_ATTENTION = 0x6,EFI_SCSI_SK_DATA_PROTECT = 0x7,EFI_SCSI_SK_BLANK_CHECK = 0x8,EFI_SCSI_SK_VENDOR_SPECIFIC = 0x9,EFI_SCSI_SK_RESERVED_A = 0xA,EFI_SCSI_SK_ABORT = 0xB,EFI_SCSI_SK_RESERVED_C = 0xC,EFI_SCSI_SK_OVERFLOW = 0xD,EFI_SCSI_SK_MISCOMPARE = 0xE,EFI_SCSI_SK_RESERVED_F = 0xF,EFI_SCSI_ASC_NOT_READY = 0x4,EFI_SCSI_ASCQ_IN_PROGRESS = 0x1,EFI_SCSI_ASC_MEDIA_ERR1 = 0x10,EFI_SCSI_ASC_MEDIA_ERR2 = 0x11,EFI_SCSI_ASC_MEDIA_ERR3 = 0x14,EFI_SCSI_ASC_MEDIA_ERR4 = 0x30,EFI_SCSI_ASC_MEDIA_UPSIDE_DOWN = 0x6,EFI_SCSI_ASC_INVALID_CMD = 0x20,EFI_SCSI_ASC_LBA_OUT_OF_RANGE = 0x21,EFI_SCSI_ASC_INVALID_FIELD = 0x24,EFI_SCSI_ASC_WRITE_PROTECTED = 0x27,EFI_SCSI_ASC_MEDIA_CHANGE = 0x28,EFI_SCSI_ASC_RESET = 0x29,EFI_SCSI_ASC_ILLEGAL_FIELD = 0x26,EFI_SCSI_ASC_NO_MEDIA = 0x3A,EFI_SCSI_ASC_ILLEGAL_MODE_FOR_THIS_TRACK = 0x64,};
enum MACRO_EFI_TCG2 {EFI_TCG2_EVENT_HEADER_VERSION = 1,EFI_TCG2_FINAL_EVENTS_TABLE_VERSION = 1,};
enum MACRO_EFI_TPM2 {EFI_TPM2_ACPI_TABLE_REVISION = 3,EFI_TPM2_ACPI_TABLE_START_METHOD_ACPI = 2,EFI_TPM2_ACPI_TABLE_START_METHOD_TIS = 6,EFI_TPM2_ACPI_TABLE_START_METHOD_COMMAND_RESPONSE_BUFFER_INTERFACE = 7,EFI_TPM2_ACPI_TABLE_START_METHOD_COMMAND_RESPONSE_BUFFER_INTERFACE_WITH_ACPI = 8,};
enum MACRO_ELTORITO {ELTORITO_ID_CATALOG = 0x1,ELTORITO_ID_SECTION_BOOTABLE = 0x88,ELTORITO_ID_SECTION_NOT_BOOTABLE = 0x0,ELTORITO_ID_SECTION_HEADER = 0x90,ELTORITO_ID_SECTION_HEADER_FINAL = 0x91,ELTORITO_NO_EMULATION = 0x0,ELTORITO_12_DISKETTE = 0x1,ELTORITO_14_DISKETTE = 0x2,ELTORITO_28_DISKETTE = 0x3,ELTORITO_HARD_DISK = 0x4,};
enum MACRO_EXTENDED {EXTENDED_DOS_PARTITION = 0x5,EXTENDED_WINDOWS_PARTITION = 0xF,};
enum MACRO_FIRMWARE {FIRMWARE_VARIABLE_MTRR_NUMBER = 6,};
enum MACRO_FV_BLOCK {FV_BLOCK_SIZE = 0x10000,FV_BLOCK_MASK = 0xFFFF,};
enum MACRO_HARDWARE {HARDWARE_DEVICE_PATH = 0x1,};
enum MACRO_HASH_ALG {HASH_ALG_SHA1 = 0x1,HASH_ALG_SHA256 = 0x2,HASH_ALG_SHA384 = 0x4,HASH_ALG_SHA512 = 0x8,HASH_ALG_SM3_256 = 0x10,};
enum MACRO_INIT_SMM {INIT_SMM_GAUGE_DATA_ENTRIES = 200,};
enum MACRO_IP4_ADDR {IP4_ADDR_CLASSA = 1,IP4_ADDR_CLASSB = 2,IP4_ADDR_CLASSC = 3,IP4_ADDR_CLASSD = 4,IP4_ADDR_CLASSE = 5,IP4_MASK_NUM = 33,};
enum MACRO_LOOPBACK {LOOPBACK_NORMAL = 0,LOOPBACK_INTERNAL = 1,LOOPBACK_EXTERNAL = 2,};
enum MACRO_MAX_CHAR {MAX_CHAR = 480,MAX_CHAR_SIZE = 960,};
enum MACRO_MAX_FILE {MAX_FILE_NAME_LEN = 512,};
enum MACRO_MAX_INT8 {MAX_INT8 = 127,MAX_UINT8 = 255,MAX_INT16 = 32767,MAX_UINT16 = 65535,MAX_INT32 = 2147483647,MAX_UINT32 = 4294967295,MAX_INT64 = 9223372036854775807,MAX_UINT64 = -1,};
enum MACRO_MAX_XMIT {MAX_XMIT_FRAGMENTS = 16,};
enum MACRO_MBR_SIZE {MBR_SIZE = 512,};
enum MACRO_MSG_UART {MSG_UART_DP = 0xE,MSG_VENDOR_DP = 0xA,};
enum MACRO_MSG_VLAN {MSG_VLAN_DP = 0x14,MSG_BLUETOOTH_DP = 0x1B,MSG_WIFI_DP = 0x1C,};
enum MACRO_MTRR_LIB {MTRR_LIB_IA32_MTRR_CAP = 0xFE,MTRR_LIB_IA32_MTRR_CAP_VCNT_MASK = 0xFF,MTRR_LIB_IA32_MTRR_FIX64K_00000 = 0x250,MTRR_LIB_IA32_MTRR_FIX16K_80000 = 0x258,MTRR_LIB_IA32_MTRR_FIX16K_A0000 = 0x259,MTRR_LIB_IA32_MTRR_FIX4K_C0000 = 0x268,MTRR_LIB_IA32_MTRR_FIX4K_C8000 = 0x269,MTRR_LIB_IA32_MTRR_FIX4K_D0000 = 0x26A,MTRR_LIB_IA32_MTRR_FIX4K_D8000 = 0x26B,MTRR_LIB_IA32_MTRR_FIX4K_E0000 = 0x26C,MTRR_LIB_IA32_MTRR_FIX4K_E8000 = 0x26D,MTRR_LIB_IA32_MTRR_FIX4K_F0000 = 0x26E,MTRR_LIB_IA32_MTRR_FIX4K_F8000 = 0x26F,MTRR_LIB_IA32_VARIABLE_MTRR_BASE = 0x200,MTRR_LIB_IA32_VARIABLE_MTRR_END = 0x20F,MTRR_LIB_IA32_MTRR_DEF_TYPE = 0x2FF,MTRR_LIB_MSR_VALID_MASK = 0xFFFFFFFFF,MTRR_LIB_CACHE_VALID_ADDRESS = 0xFFFFFF000,MTRR_LIB_CACHE_MTRR_ENABLED = 0x800,MTRR_LIB_CACHE_FIXED_MTRR_ENABLED = 0x400,MTRR_CACHE_UNCACHEABLE = 0x0,MTRR_CACHE_WRITE_COMBINING = 0x1,MTRR_CACHE_WRITE_THROUGH = 0x4,MTRR_CACHE_WRITE_PROTECTED = 0x5,MTRR_CACHE_WRITE_BACK = 0x6,MTRR_CACHE_INVALID_TYPE = 0x7,};
enum MACRO_NETDEBUG {NETDEBUG_LEVEL_TRACE = 5,NETDEBUG_LEVEL_WARNING = 4,NETDEBUG_LEVEL_ERROR = 3,};
enum MACRO_NV_CLOCK {NV_CLOCK_UPDATE_INTERVAL = 12,};
enum MACRO_NV_INDEX {NV_INDEX_FIRST = 16777216,NV_INDEX_LAST = 33554431,};
enum MACRO_PCD_TYPE {PCD_TYPE_SHIFT = 28,PCD_TYPE_DATA = 0,PCD_TYPE_HII = 2147483648,PCD_TYPE_VPD = 1073741824,PCD_TYPE_SKU_ENABLED = 536870912,PCD_TYPE_STRING = 268435456,PCD_TYPE_ALL_SET = 4026531840,PCD_DATUM_TYPE_SHIFT = 24,PCD_DATUM_TYPE_POINTER = 0,PCD_DATUM_TYPE_UINT8 = 16777216,PCD_DATUM_TYPE_UINT16 = 33554432,PCD_DATUM_TYPE_UINT32 = 67108864,PCD_DATUM_TYPE_UINT64 = 134217728,PCD_DATUM_TYPE_ALL_SET = 251658240,PCD_DATUM_TYPE_SHIFT2 = 20,PCD_DATUM_TYPE_UINT8_BOOLEAN = 1048576,PCD_DATABASE_OFFSET_MASK = -4279238657,};
enum MACRO_PCI_ACPI {PCI_ACPI_UNUSED = 0,PCI_BAR_NOCHANGE = 0,PCI_BAR_OLD_ALIGN = -1,PCI_BAR_EVEN_ALIGN = -2,PCI_BAR_SQUAD_ALIGN = -3,PCI_BAR_DQUAD_ALIGN = -4,PCI_BAR_IDX0 = 0,PCI_BAR_IDX1 = 1,PCI_BAR_IDX2 = 2,PCI_BAR_IDX3 = 3,PCI_BAR_IDX4 = 4,PCI_BAR_IDX5 = 5,PCI_BAR_ALL = 255,};
enum MACRO_PCI_CODE {PCI_CODE_TYPE_EFI_IMAGE = 0x3,PCI_CLASS_MASS_STORAGE_SATADPA = 0x6,PCI_IF_MASS_STORAGE_SATA = 0x0,PCI_IF_MASS_STORAGE_AHCI = 0x1,PCI_SUBCLASS_ETHERNET_80211A = 0x20,PCI_SUBCLASS_ETHERNET_80211B = 0x21,};
enum MACRO_PERIODIC {PERIODIC_SMI_LIBRARY_ANY_CPU = 0xFFFFFFFF,};
enum MACRO_PHYSICAL {PHYSICAL_PRESENCE_NO_ACTION = 0,PHYSICAL_PRESENCE_ENABLE = 1,PHYSICAL_PRESENCE_DISABLE = 2,PHYSICAL_PRESENCE_ACTIVATE = 3,PHYSICAL_PRESENCE_DEACTIVATE = 4,PHYSICAL_PRESENCE_CLEAR = 5,PHYSICAL_PRESENCE_ENABLE_ACTIVATE = 6,PHYSICAL_PRESENCE_DEACTIVATE_DISABLE = 7,PHYSICAL_PRESENCE_SET_OWNER_INSTALL_TRUE = 8,PHYSICAL_PRESENCE_SET_OWNER_INSTALL_FALSE = 9,PHYSICAL_PRESENCE_ENABLE_ACTIVATE_OWNER_TRUE = 10,PHYSICAL_PRESENCE_DEACTIVATE_DISABLE_OWNER_FALSE = 11,PHYSICAL_PRESENCE_DEFERRED_PP_UNOWNERED_FIELD_UPGRADE = 12,PHYSICAL_PRESENCE_SET_OPERATOR_AUTH = 13,PHYSICAL_PRESENCE_CLEAR_ENABLE_ACTIVATE = 14,PHYSICAL_PRESENCE_SET_NO_PPI_PROVISION_FALSE = 15,PHYSICAL_PRESENCE_SET_NO_PPI_PROVISION_TRUE = 16,PHYSICAL_PRESENCE_SET_NO_PPI_CLEAR_FALSE = 17,PHYSICAL_PRESENCE_SET_NO_PPI_CLEAR_TRUE = 18,PHYSICAL_PRESENCE_SET_NO_PPI_MAINTENANCE_FALSE = 19,PHYSICAL_PRESENCE_SET_NO_PPI_MAINTENANCE_TRUE = 20,PHYSICAL_PRESENCE_ENABLE_ACTIVATE_CLEAR = 21,PHYSICAL_PRESENCE_ENABLE_ACTIVATE_CLEAR_ENABLE_ACTIVATE = 22,};
enum MACRO_PLATFORM {PLATFORM_SECURITY_VERSION_VNEXTCS = 0x3,PLATFORM_SECURITY_ROLE_PLATFORM_REFERENCE = 0x1,PLATFORM_SECURITY_ROLE_PLATFORM_IBV = 0x2,PLATFORM_SECURITY_ROLE_IMPLEMENTOR_OEM = 0x3,PLATFORM_SECURITY_ROLE_IMPLEMENTOR_ODM = 0x4,};
enum MACRO_PROTOCOL {PROTOCOL_INFO_SIGNATURE = 1852403827,};
enum MACRO_REQUIRED {RESET_REQUIRED = 1,EXIT_REQUIRED = 2,SAVE_REQUIRED = 4,};
enum MACRO_RESERVED {RESERVED_FIRMWARE_VARIABLE_MTRR_NUMBER = 2,};
enum MACRO_ROM_WITH {ROM_WITH_CONFIG = 0x4,};
enum MACRO_SCAN_F11 {SCAN_F11 = 0x15,SCAN_F12 = 0x16,SCAN_PAUSE = 0x48,SCAN_F13 = 0x68,SCAN_F14 = 0x69,SCAN_F15 = 0x6A,SCAN_F16 = 0x6B,SCAN_F17 = 0x6C,SCAN_F18 = 0x6D,SCAN_F19 = 0x6E,SCAN_F20 = 0x6F,SCAN_F21 = 0x70,SCAN_F22 = 0x71,SCAN_F23 = 0x72,SCAN_F24 = 0x73,SCAN_MUTE = 0x7F,SCAN_VOLUME_UP = 0x80,SCAN_VOLUME_DOWN = 0x81,SCAN_BRIGHTNESS_UP = 0x100,SCAN_BRIGHTNESS_DOWN = 0x101,SCAN_SUSPEND = 0x102,SCAN_HIBERNATE = 0x103,SCAN_TOGGLE_DISPLAY = 0x104,SCAN_RECOVERY = 0x105,SCAN_EJECT = 0x106,};
enum MACRO_SCARD_AM {SCARD_AM_READER = 0x1,SCARD_AM_CARD = 0x2,SCARD_CA_NORESET = 0x0,SCARD_CA_COLDRESET = 0x1,SCARD_CA_WARMRESET = 0x2,SCARD_CA_UNPOWER = 0x3,SCARD_CA_EJECT = 0x4,SCARD_PROTOCOL_UNDEFINED = 0x0,SCARD_PROTOCOL_T0 = 0x1,SCARD_PROTOCOL_T1 = 0x2,SCARD_PROTOCOL_RAW = 0x4,SCARD_UNKNOWN = 0x0,SCARD_ABSENT = 0x1,SCARD_INACTIVE = 0x2,SCARD_ACTIVE = 0x3,};
enum MACRO_SMM_FPDT {SMM_FPDT_FUNCTION_GET_BOOT_RECORD_SIZE = 1,SMM_FPDT_FUNCTION_GET_BOOT_RECORD_DATA = 2,};
enum MACRO_SMM_PERF {SMM_PERF_FUNCTION_GET_GAUGE_ENTRY_NUMBER = 1,SMM_PERF_FUNCTION_GET_GAUGE_DATA = 2,};
enum MACRO_STANDARD {STANDARD_IO = 0x0,STANDARD_MEMORY = 0x1,};
enum MACRO_TCG_BIOS {TCG_BIOS_TPM_MANAGEMENT_FLAG_NO_PPI_PROVISION = 1,TCG_BIOS_TPM_MANAGEMENT_FLAG_NO_PPI_CLEAR = 2,TCG_BIOS_TPM_MANAGEMENT_FLAG_NO_PPI_MAINTENANCE = 4,TCG_VENDOR_LIB_FLAG_RESET_TRACK = 8,};
enum MACRO_TPM_BASE {TPM_BASE_ADDRESS = 0xFED40000,};
enum MACRO_USB_PORT {USB_PORT_STAT_CONNECTION = 0x1,USB_PORT_STAT_ENABLE = 0x2,USB_PORT_STAT_SUSPEND = 0x4,USB_PORT_STAT_OVERCURRENT = 0x8,USB_PORT_STAT_RESET = 0x10,USB_PORT_STAT_POWER = 0x100,USB_PORT_STAT_LOW_SPEED = 0x200,USB_PORT_STAT_HIGH_SPEED = 0x400,USB_PORT_STAT_SUPER_SPEED = 0x800,USB_PORT_STAT_OWNER = 0x2000,USB_PORT_STAT_C_CONNECTION = 0x1,USB_PORT_STAT_C_ENABLE = 0x2,USB_PORT_STAT_C_SUSPEND = 0x4,USB_PORT_STAT_C_OVERCURRENT = 0x8,USB_PORT_STAT_C_RESET = 0x10,};
enum MACRO_VARIABLE {VARIABLE_STORE_FORMATTED = 0x5A,VARIABLE_STORE_HEALTHY = 0xFE,VARIABLE_DATA = 0x55AA,};
typedef struct _A87A74325978861265FAE567512FF340 MOD_ERROR_INFO;
typedef struct _6AC903B1141559794FAA802AD579D498 NET_PSEUDO_HDR;
typedef struct _D9FD1BC7612AFECFA6AB634B5B1E16EB PCD_NAME_INDEX;
typedef struct _PEI_USB_IO_PPI PEI_USB_IO_PPI;
typedef struct s_pxe_db_receive PXE_DB_RECEIVE;
typedef struct _9029BC86F03C3FCA17B56D2EF3BF232B SAL_SEC_HEADER;
typedef struct _442F6D906E36E38DEFB617BFE953DA2C SAL_TIME_STAMP;
typedef struct _F809494E5EBBD7AB39E4CBE1C36C7080 SD_DEVICE_PATH;
typedef struct _FB70E6CA8292B432E3A410FF93C01143 SHELL_FILE_ARG;
typedef struct _D2E56FB53E9B18B8508926D2DFAC18C1 SHELL_MAP_LIST;
typedef struct _5CD6AD5EA41653098E3415F2ACAFEF1D SMM_ATTRIBUTES;
typedef struct tdTCG_PCR_EVENT2 TCG_PCR_EVENT2;
typedef struct _2E55797B6F4566322CE54CA5389087BA TPMA_ALGORITHM;
typedef struct _D1C2977590748E16F232F61B852C1342 TPMA_PERMANENT;
typedef struct _35C4D481EC05A8B672834DE7498ABDB4 TPML_ECC_CURVE;
typedef struct _9BCCD84CA09B0CF28A9A013C7961FBBF TPMS_ECC_PARMS;
typedef struct _AB4F6334FFDB14156B773BDB1AAB0CF0 TPMS_ECC_POINT;
typedef struct _846F00D9E97F385097775185843E5372 TPMS_NV_PUBLIC;
typedef struct _DB1EAEA7716C1AF942FAFA5B5893C7DC TPMS_RSA_PARMS;
typedef struct _C6EEF798281BD88F1E2006F84FDBEE1F TPMS_TIME_INFO;
typedef struct _D32BBD84251B2A6AAF1C75D15D0C504A TPMT_SENSITIVE;
typedef struct _6AC2D4DF0EFCB3F6004902CC322AC1F6 TPMT_SIGNATURE;
typedef union _591BF0AC490AC5BA075A2021D8EADA1D TPMU_PUBLIC_ID;
typedef union _3B35CDC5D61CFFE1B0CA5FCE3EBF2BD3 TPMU_SIGNATURE;
typedef struct tdTPM_BOUND_DATA TPM_BOUND_DATA;
typedef struct tdTPM_DAA_ISSUER TPM_DAA_ISSUER;
typedef struct tdTPM_QUOTE_INFO TPM_QUOTE_INFO;
typedef struct tdTPM_STRUCT_VER TPM_STRUCT_VER;
typedef struct _76BAA508F77C33FE638674C6C23A8C80 UDC_ATTRIBUTES;
typedef struct _864F357D2D335F20052F07A9C9C9B544 UGA_IO_REQUEST;
struct ULARGE_INTEGER;
typedef void __sighandler_t(int);
typedef struct _A63D8E7FAAB623CF824F0D871B91118C BMP_COLOR_MAP;
typedef struct _E4C30ED7F8D2125F7573B2240B454B7A DEVICE_STRUCT;
typedef struct _EFILDRHANDOFF EFILDRHANDOFF;
typedef struct _5B97CA5679D7ACE99F5F725DE30AD913 EFILDR_HEADER;
typedef struct _48E8A6CD9A533B33AB6E769A97C9DB1F EFI_BYTE_REGS;
typedef struct _88437CFCFBFFE8519053CC29314A2CD7 EFI_FILE_INFO;
typedef struct _E81C3621FE4B8D0647DEBCD1A2C3FDDB EFI_FLAGS_REG;
typedef struct _4F3DD3A2627D1E5DA0774D7D31FB1A93 EFI_FONT_INFO;
typedef struct _1D968FBACBA87C9F0C85783A77EF2C95 EFI_HII_VALUE;
typedef struct _EFI_IFR_EQUAL EFI_IFR_EQUAL;
typedef struct _EFI_IFR_FALSE EFI_IFR_FALSE;
typedef struct _EFI_IFR_IMAGE EFI_IFR_IMAGE;
typedef struct _1945A6013D58E9BCC453AA4D31F6530C EFI_IFR_LABEL;
typedef struct _EFI_IFR_MATCH EFI_IFR_MATCH;
typedef struct _EFI_IFR_TOKEN EFI_IFR_TOKEN;
typedef struct _EFI_IFR_UINT8 EFI_IFR_UINT8;
typedef struct _EFI_IFR_VALUE EFI_IFR_VALUE;
typedef struct _EFI_IFR_WRITE EFI_IFR_WRITE;
typedef struct _42C9EB6349DA318FBEC3A9F1F9657B3F EFI_INPUT_KEY;
typedef struct _DF3BC5FD17EFDA646BF5E85682013C25 EFI_IO_ACCESS;
typedef struct _EFI_KEY_STATE EFI_KEY_STATE;
typedef struct _77EFA24C873E40E6F2166631E5BEE457 EFI_MP_HEALTH;
typedef union _C3A285CD1904EDCDB417EC8F5027A1F0 EFI_PCI_PMCSR;
typedef struct _A63D8E7FAAB623CF824F0D871B91118C EFI_UGA_PIXEL;
typedef struct _A4466E56061ADCBDAD4B2A6DC7E81187 EFI_USER_INFO;
typedef struct _8F021B924EEDB0F537F7DEDF0965F2AA EFI_WORD_REGS;
typedef struct _88765E7F9D12F50D22D201E19D014097 IP4_ICMP_HEAD;
typedef struct _88765E7F9D12F50D22D201E19D014097 IP6_ICMP_HEAD;
typedef struct _IP_IO_IP_INFO IP_IO_IP_INFO;
typedef union _F33B98B34D2E7A59DA07EED7E263E778 IP_IO_IP_MASK;
struct LARGE_INTEGER;
typedef PAINTSTRUCT *LPPAINTSTRUCT;
enum MACRO_BOXDRAW {BOXDRAW_HORIZONTAL = 0x2500,BOXDRAW_VERTICAL = 0x2502,BOXDRAW_DOWN_RIGHT = 0x250C,BOXDRAW_DOWN_LEFT = 0x2510,BOXDRAW_UP_RIGHT = 0x2514,BOXDRAW_UP_LEFT = 0x2518,BOXDRAW_VERTICAL_RIGHT = 0x251C,BOXDRAW_VERTICAL_LEFT = 0x2524,BOXDRAW_DOWN_HORIZONTAL = 0x252C,BOXDRAW_UP_HORIZONTAL = 0x2534,BOXDRAW_VERTICAL_HORIZONTAL = 0x253C,BOXDRAW_DOUBLE_HORIZONTAL = 0x2550,BOXDRAW_DOUBLE_VERTICAL = 0x2551,BOXDRAW_DOWN_RIGHT_DOUBLE = 0x2552,BOXDRAW_DOWN_DOUBLE_RIGHT = 0x2553,BOXDRAW_DOUBLE_DOWN_RIGHT = 0x2554,BOXDRAW_DOWN_LEFT_DOUBLE = 0x2555,BOXDRAW_DOWN_DOUBLE_LEFT = 0x2556,BOXDRAW_DOUBLE_DOWN_LEFT = 0x2557,BOXDRAW_UP_RIGHT_DOUBLE = 0x2558,BOXDRAW_UP_DOUBLE_RIGHT = 0x2559,BOXDRAW_DOUBLE_UP_RIGHT = 0x255A,BOXDRAW_UP_LEFT_DOUBLE = 0x255B,BOXDRAW_UP_DOUBLE_LEFT = 0x255C,BOXDRAW_DOUBLE_UP_LEFT = 0x255D,BOXDRAW_VERTICAL_RIGHT_DOUBLE = 0x255E,BOXDRAW_VERTICAL_DOUBLE_RIGHT = 0x255F,BOXDRAW_DOUBLE_VERTICAL_RIGHT = 0x2560,BOXDRAW_VERTICAL_LEFT_DOUBLE = 0x2561,BOXDRAW_VERTICAL_DOUBLE_LEFT = 0x2562,BOXDRAW_DOUBLE_VERTICAL_LEFT = 0x2563,BOXDRAW_DOWN_HORIZONTAL_DOUBLE = 0x2564,BOXDRAW_DOWN_DOUBLE_HORIZONTAL = 0x2565,BOXDRAW_DOUBLE_DOWN_HORIZONTAL = 0x2566,BOXDRAW_UP_HORIZONTAL_DOUBLE = 0x2567,BOXDRAW_UP_DOUBLE_HORIZONTAL = 0x2568,BOXDRAW_DOUBLE_UP_HORIZONTAL = 0x2569,BOXDRAW_VERTICAL_HORIZONTAL_DOUBLE = 0x256A,BOXDRAW_VERTICAL_DOUBLE_HORIZONTAL = 0x256B,BOXDRAW_DOUBLE_VERTICAL_HORIZONTAL = 0x256C,};
enum MACRO_BROWSER {BROWSER_STATE_VALIDATE_PASSWORD = 0,BROWSER_STATE_SET_PASSWORD = 1,};
enum MACRO_CAPSULE {CAPSULE_FLAGS_PERSIST_ACROSS_RESET = 0x10000,CAPSULE_FLAGS_POPULATE_SYSTEM_TABLE = 0x20000,CAPSULE_FLAGS_INITIATE_RESET = 0x40000,};
enum MACRO_CONSOLE {CONSOLE_OUT = 0x1,};
enum MACRO_CONTEXT {CONTEXT_ENCRYPT_KEY_BITS = 128,CONTEXT_ENCRYPT_KEY_BYTES = 16,CONTEXT_INTEGRITY_HASH_SIZE = 32,};
enum MACRO_DEFAULT {DEFAULT_TTL = 16,DEFAULT_ToS = 0,};
enum MACRO_DISPLAY {DISPLAY_QUESTION_OPTION_SIGNATURE = 1414549329,};
enum MACRO_EFI_EXT {EFI_EXT_SCSI_PASS_THRU_ATTRIBUTES_PHYSICAL = 0x1,EFI_EXT_SCSI_PASS_THRU_ATTRIBUTES_LOGICAL = 0x2,EFI_EXT_SCSI_PASS_THRU_ATTRIBUTES_NONBLOCKIO = 0x4,EFI_EXT_SCSI_DATA_DIRECTION_READ = 0x0,EFI_EXT_SCSI_DATA_DIRECTION_WRITE = 0x1,EFI_EXT_SCSI_DATA_DIRECTION_BIDIRECTIONAL = 0x2,EFI_EXT_SCSI_STATUS_HOST_ADAPTER_OK = 0x0,EFI_EXT_SCSI_STATUS_HOST_ADAPTER_TIMEOUT_COMMAND = 0x9,EFI_EXT_SCSI_STATUS_HOST_ADAPTER_TIMEOUT = 0xB,EFI_EXT_SCSI_STATUS_HOST_ADAPTER_MESSAGE_REJECT = 0xD,EFI_EXT_SCSI_STATUS_HOST_ADAPTER_BUS_RESET = 0xE,EFI_EXT_SCSI_STATUS_HOST_ADAPTER_PARITY_ERROR = 0xF,EFI_EXT_SCSI_STATUS_HOST_ADAPTER_REQUEST_SENSE_FAILED = 0x10,EFI_EXT_SCSI_STATUS_HOST_ADAPTER_SELECTION_TIMEOUT = 0x11,EFI_EXT_SCSI_STATUS_HOST_ADAPTER_DATA_OVERRUN_UNDERRUN = 0x12,EFI_EXT_SCSI_STATUS_HOST_ADAPTER_BUS_FREE = 0x13,EFI_EXT_SCSI_STATUS_HOST_ADAPTER_PHASE_ERROR = 0x14,EFI_EXT_SCSI_STATUS_HOST_ADAPTER_OTHER = 0x7F,EFI_EXT_SCSI_STATUS_TARGET_GOOD = 0x0,EFI_EXT_SCSI_STATUS_TARGET_CHECK_CONDITION = 0x2,EFI_EXT_SCSI_STATUS_TARGET_CONDITION_MET = 0x4,EFI_EXT_SCSI_STATUS_TARGET_BUSY = 0x8,EFI_EXT_SCSI_STATUS_TARGET_INTERMEDIATE = 0x10,EFI_EXT_SCSI_STATUS_TARGET_INTERMEDIATE_CONDITION_MET = 0x14,EFI_EXT_SCSI_STATUS_TARGET_RESERVATION_CONFLICT = 0x18,EFI_EXT_SCSI_STATUS_TARGET_TASK_SET_FULL = 0x28,EFI_EXT_SCSI_STATUS_TARGET_ACA_ACTIVE = 0x30,EFI_EXT_SCSI_STATUS_TARGET_TASK_ABORTED = 0x40,EFI_SCSI_PASS_THRU_ATTRIBUTES_PHYSICAL = 0x1,EFI_SCSI_PASS_THRU_ATTRIBUTES_LOGICAL = 0x2,EFI_SCSI_PASS_THRU_ATTRIBUTES_NONBLOCKIO = 0x4,EFI_SCSI_STATUS_HOST_ADAPTER_OK = 0x0,EFI_SCSI_STATUS_HOST_ADAPTER_TIMEOUT_COMMAND = 0x9,EFI_SCSI_STATUS_HOST_ADAPTER_TIMEOUT = 0xB,EFI_SCSI_STATUS_HOST_ADAPTER_MESSAGE_REJECT = 0xD,EFI_SCSI_STATUS_HOST_ADAPTER_BUS_RESET = 0xE,EFI_SCSI_STATUS_HOST_ADAPTER_PARITY_ERROR = 0xF,EFI_SCSI_STATUS_HOST_ADAPTER_REQUEST_SENSE_FAILED = 0x10,EFI_SCSI_STATUS_HOST_ADAPTER_SELECTION_TIMEOUT = 0x11,EFI_SCSI_STATUS_HOST_ADAPTER_DATA_OVERRUN_UNDERRUN = 0x12,EFI_SCSI_STATUS_HOST_ADAPTER_BUS_FREE = 0x13,EFI_SCSI_STATUS_HOST_ADAPTER_PHASE_ERROR = 0x14,EFI_SCSI_STATUS_HOST_ADAPTER_OTHER = 0x7F,EFI_SCSI_STATUS_TARGET_GOOD = 0x0,EFI_SCSI_STATUS_TARGET_CHECK_CONDITION = 0x2,EFI_SCSI_STATUS_TARGET_CONDITION_MET = 0x4,EFI_SCSI_STATUS_TARGET_BUSY = 0x8,EFI_SCSI_STATUS_TARGET_INTERMEDIATE = 0x10,EFI_SCSI_STATUS_TARGET_INTERMEDIATE_CONDITION_MET = 0x14,EFI_SCSI_STATUS_TARGET_RESERVATION_CONFLICT = 0x18,EFI_SCSI_STATUS_TARGET_COMMOND_TERMINATED = 0x22,EFI_SCSI_STATUS_TARGET_QUEUE_FULL = 0x28,EFI_SERIAL_CLEAR_TO_SEND = 0x10,EFI_SERIAL_DATA_SET_READY = 0x20,EFI_SERIAL_RING_INDICATE = 0x40,EFI_SERIAL_CARRIER_DETECT = 0x80,EFI_SERIAL_INPUT_BUFFER_EMPTY = 0x100,EFI_SERIAL_OUTPUT_BUFFER_EMPTY = 0x200,EFI_SERIAL_REQUEST_TO_SEND = 0x2,EFI_SERIAL_DATA_TERMINAL_READY = 0x1,EFI_SERIAL_HARDWARE_LOOPBACK_ENABLE = 0x1000,EFI_SERIAL_SOFTWARE_LOOPBACK_ENABLE = 0x2000,EFI_SERIAL_HARDWARE_FLOW_CONTROL_ENABLE = 0x4000,EFI_SERIAL_IO_PROTOCOL_REVISION = 0x10000,};
enum MACRO_EFI_FV2 {EFI_FV2_READ_DISABLE_CAP = 0x1,EFI_FV2_READ_ENABLE_CAP = 0x2,EFI_FV2_READ_STATUS = 0x4,EFI_FV2_WRITE_DISABLE_CAP = 0x8,EFI_FV2_WRITE_ENABLE_CAP = 0x10,EFI_FV2_WRITE_STATUS = 0x20,EFI_FV2_LOCK_CAP = 0x40,EFI_FV2_LOCK_STATUS = 0x80,EFI_FV2_WRITE_POLICY_RELIABLE = 0x100,EFI_FV2_READ_LOCK_CAP = 0x1000,EFI_FV2_READ_LOCK_STATUS = 0x2000,EFI_FV2_WRITE_LOCK_CAP = 0x4000,EFI_FV2_WRITE_LOCK_STATUS = 0x8000,EFI_FV2_ALIGNMENT = 0x1F0000,EFI_FV2_ALIGNMENT_1 = 0x0,EFI_FV2_ALIGNMENT_2 = 0x10000,EFI_FV2_ALIGNMENT_4 = 0x20000,EFI_FV2_ALIGNMENT_8 = 0x30000,EFI_FV2_ALIGNMENT_16 = 0x40000,EFI_FV2_ALIGNMENT_32 = 0x50000,EFI_FV2_ALIGNMENT_64 = 0x60000,EFI_FV2_ALIGNMENT_128 = 0x70000,EFI_FV2_ALIGNMENT_256 = 0x80000,EFI_FV2_ALIGNMENT_512 = 0x90000,EFI_FV2_ALIGNMENT_1K = 0xA0000,EFI_FV2_ALIGNMENT_2K = 0xB0000,EFI_FV2_ALIGNMENT_4K = 0xC0000,EFI_FV2_ALIGNMENT_8K = 0xD0000,EFI_FV2_ALIGNMENT_16K = 0xE0000,EFI_FV2_ALIGNMENT_32K = 0xF0000,EFI_FV2_ALIGNMENT_64K = 0x100000,EFI_FV2_ALIGNMENT_128K = 0x110000,EFI_FV2_ALIGNMENT_256K = 0x120000,EFI_FV2_ALIGNMENT_512K = 0x130000,EFI_FV2_ALIGNMENT_1M = 0x140000,EFI_FV2_ALIGNMENT_2M = 0x150000,EFI_FV2_ALIGNMENT_4M = 0x160000,EFI_FV2_ALIGNMENT_8M = 0x170000,EFI_FV2_ALIGNMENT_16M = 0x180000,EFI_FV2_ALIGNMENT_32M = 0x190000,EFI_FV2_ALIGNMENT_64M = 0x1A0000,EFI_FV2_ALIGNMENT_128M = 0x1B0000,EFI_FV2_ALIGNMENT_256M = 0x1C0000,EFI_FV2_ALIGNMENT_512M = 0x1D0000,EFI_FV2_ALIGNMENT_1G = 0x1E0000,EFI_FV2_ALIGNMENT_2G = 0x1F0000,EFI_FV_UNRELIABLE_WRITE = 0x0,EFI_FV_RELIABLE_WRITE = 0x1,EFI_LBA_LIST_TERMINATOR = 0xFFFFFFFF,EFI_BROWSER_ACTION_REQUEST_NONE = 0x0,EFI_BROWSER_ACTION_REQUEST_RESET = 0x1,EFI_BROWSER_ACTION_REQUEST_SUBMIT = 0x2,EFI_BROWSER_ACTION_REQUEST_EXIT = 0x3,EFI_BROWSER_ACTION_REQUEST_FORM_SUBMIT_EXIT = 0x4,EFI_BROWSER_ACTION_REQUEST_FORM_DISCARD_EXIT = 0x5,EFI_BROWSER_ACTION_REQUEST_FORM_APPLY = 0x6,EFI_BROWSER_ACTION_REQUEST_FORM_DISCARD = 0x7,EFI_BROWSER_ACTION_REQUEST_RECONNECT = 0x8,EFI_BROWSER_ACTION_CHANGING = 0x0,EFI_BROWSER_ACTION_CHANGED = 0x1,EFI_BROWSER_ACTION_RETRIEVE = 0x2,EFI_BROWSER_ACTION_FORM_OPEN = 0x3,EFI_BROWSER_ACTION_FORM_CLOSE = 0x4,EFI_BROWSER_ACTION_DEFAULT_STANDARD = 0x1000,EFI_BROWSER_ACTION_DEFAULT_MANUFACTURING = 0x1001,EFI_BROWSER_ACTION_DEFAULT_SAFE = 0x1002,EFI_BROWSER_ACTION_DEFAULT_PLATFORM = 0x2000,EFI_BROWSER_ACTION_DEFAULT_HARDWARE = 0x3000,EFI_BROWSER_ACTION_DEFAULT_FIRMWARE = 0x4000,};
enum MACRO_EFI_HII {EFI_HII_DATABASE_NOTIFY_NEW_PACK = 0x1,EFI_HII_DATABASE_NOTIFY_REMOVE_PACK = 0x2,EFI_HII_DATABASE_NOTIFY_EXPORT_PACK = 0x4,EFI_HII_DATABASE_NOTIFY_ADD_PACK = 0x8,EFI_IMAGE_TRANSPARENT = 0x1,EFI_HII_DRAW_FLAG_CLIP = 0x1,EFI_HII_DRAW_FLAG_TRANSPARENT = 0x30,EFI_HII_DRAW_FLAG_DEFAULT = 0x0,EFI_HII_DRAW_FLAG_FORCE_TRANS = 0x10,EFI_HII_DRAW_FLAG_FORCE_OPAQUE = 0x20,EFI_HII_DIRECT_TO_SCREEN = 0x80,EFI_HII_OUT_FLAG_CLIP = 0x1,EFI_HII_OUT_FLAG_WRAP = 0x2,EFI_HII_OUT_FLAG_CLIP_CLEAN_Y = 0x4,EFI_HII_OUT_FLAG_CLIP_CLEAN_X = 0x8,EFI_HII_OUT_FLAG_TRANSPARENT = 0x10,EFI_HII_IGNORE_IF_NO_GLYPH = 0x20,EFI_HII_IGNORE_LINE_BREAK = 0x40,EFI_FONT_INFO_SYS_FONT = 0x1,EFI_FONT_INFO_SYS_SIZE = 0x2,EFI_FONT_INFO_SYS_STYLE = 0x4,EFI_FONT_INFO_SYS_FORE_COLOR = 0x10,EFI_FONT_INFO_SYS_BACK_COLOR = 0x20,EFI_FONT_INFO_RESIZE = 0x1000,EFI_FONT_INFO_RESTYLE = 0x2000,EFI_FONT_INFO_ANY_FONT = 0x10000,EFI_FONT_INFO_ANY_SIZE = 0x20000,EFI_FONT_INFO_ANY_STYLE = 0x40000,EFI_SATA_AUTO_SPEED = 0x0,EFI_SATA_GEN1_SPEED = 0x1,EFI_SATA_GEN2_SPEED = 0x2,EFI_ATAPI_DEVICE_IDENTIFY_DATA = 0x8000,EFI_SIMPLE_NETWORK_RECEIVE_UNICAST = 0x1,EFI_SIMPLE_NETWORK_RECEIVE_MULTICAST = 0x2,EFI_SIMPLE_NETWORK_RECEIVE_BROADCAST = 0x4,EFI_SIMPLE_NETWORK_RECEIVE_PROMISCUOUS = 0x8,EFI_SIMPLE_NETWORK_RECEIVE_PROMISCUOUS_MULTICAST = 0x10,EFI_SIMPLE_NETWORK_RECEIVE_INTERRUPT = 0x1,EFI_SIMPLE_NETWORK_TRANSMIT_INTERRUPT = 0x2,EFI_SIMPLE_NETWORK_COMMAND_INTERRUPT = 0x4,EFI_SIMPLE_NETWORK_SOFTWARE_INTERRUPT = 0x8,};
enum MACRO_EFI_HOB {EFI_HOB_TYPE_HANDOFF = 0x1,EFI_HOB_TYPE_MEMORY_ALLOCATION = 0x2,EFI_HOB_TYPE_RESOURCE_DESCRIPTOR = 0x3,EFI_HOB_TYPE_GUID_EXTENSION = 0x4,EFI_HOB_TYPE_FV = 0x5,EFI_HOB_TYPE_CPU = 0x6,EFI_HOB_TYPE_MEMORY_POOL = 0x7,EFI_HOB_TYPE_FV2 = 0x9,EFI_HOB_TYPE_LOAD_PEIM_UNUSED = 0xA,EFI_HOB_TYPE_UEFI_CAPSULE = 0xB,EFI_HOB_TYPE_UNUSED = 0xFFFE,EFI_HOB_TYPE_END_OF_HOB_LIST = 0xFFFF,EFI_HOB_HANDOFF_TABLE_VERSION = 0x9,EFI_RESOURCE_SYSTEM_MEMORY = 0x0,EFI_RESOURCE_MEMORY_MAPPED_IO = 0x1,EFI_RESOURCE_IO = 0x2,EFI_RESOURCE_FIRMWARE_DEVICE = 0x3,EFI_RESOURCE_MEMORY_MAPPED_IO_PORT = 0x4,EFI_RESOURCE_MEMORY_RESERVED = 0x5,EFI_RESOURCE_IO_RESERVED = 0x6,EFI_RESOURCE_MAX_MEMORY_TYPE = 0x7,EFI_RESOURCE_ATTRIBUTE_PRESENT = 0x1,EFI_RESOURCE_ATTRIBUTE_INITIALIZED = 0x2,EFI_RESOURCE_ATTRIBUTE_TESTED = 0x4,EFI_RESOURCE_ATTRIBUTE_READ_PROTECTED = 0x80,EFI_RESOURCE_ATTRIBUTE_WRITE_PROTECTED = 0x100,EFI_RESOURCE_ATTRIBUTE_EXECUTION_PROTECTED = 0x200,EFI_RESOURCE_ATTRIBUTE_PERSISTENT = 0x800000,EFI_RESOURCE_ATTRIBUTE_SINGLE_BIT_ECC = 0x8,EFI_RESOURCE_ATTRIBUTE_MULTIPLE_BIT_ECC = 0x10,EFI_RESOURCE_ATTRIBUTE_ECC_RESERVED_1 = 0x20,EFI_RESOURCE_ATTRIBUTE_ECC_RESERVED_2 = 0x40,EFI_RESOURCE_ATTRIBUTE_UNCACHEABLE = 0x400,EFI_RESOURCE_ATTRIBUTE_WRITE_COMBINEABLE = 0x800,EFI_RESOURCE_ATTRIBUTE_WRITE_THROUGH_CACHEABLE = 0x1000,EFI_RESOURCE_ATTRIBUTE_WRITE_BACK_CACHEABLE = 0x2000,EFI_RESOURCE_ATTRIBUTE_16_BIT_IO = 0x4000,EFI_RESOURCE_ATTRIBUTE_32_BIT_IO = 0x8000,EFI_RESOURCE_ATTRIBUTE_64_BIT_IO = 0x10000,EFI_RESOURCE_ATTRIBUTE_UNCACHED_EXPORTED = 0x20000,EFI_RESOURCE_ATTRIBUTE_READ_PROTECTABLE = 0x100000,EFI_RESOURCE_ATTRIBUTE_WRITE_PROTECTABLE = 0x200000,EFI_RESOURCE_ATTRIBUTE_EXECUTION_PROTECTABLE = 0x400000,EFI_RESOURCE_ATTRIBUTE_PERSISTABLE = 0x1000000,EFI_RESOURCE_ATTRIBUTE_READ_ONLY_PROTECTED = 0x40000,EFI_RESOURCE_ATTRIBUTE_READ_ONLY_PROTECTABLE = 0x800000,EFI_RESOURCE_ATTRIBUTE_MORE_RELIABLE = 0x2000000,EFI_DEP_BEFORE = 0x0,EFI_DEP_AFTER = 0x1,EFI_DEP_PUSH = 0x2,EFI_DEP_AND = 0x3,EFI_DEP_OR = 0x4,EFI_DEP_NOT = 0x5,EFI_DEP_TRUE = 0x6,EFI_DEP_FALSE = 0x7,EFI_DEP_END = 0x8,EFI_DEP_SOR = 0x9,EFI_IMAGE_SUBSYSTEM_EFI_APPLICATION = 0xA,EFI_IMAGE_SUBSYSTEM_EFI_BOOT_SERVICE_DRIVER = 0xB,EFI_IMAGE_SUBSYSTEM_EFI_RUNTIME_DRIVER = 0xC,EFI_IMAGE_SUBSYSTEM_SAL_RUNTIME_DRIVER = 0xD,};
enum MACRO_EFI_IFR {EFI_IFR_NUMERIC_SIZE = 0x3,EFI_IFR_NUMERIC_SIZE_1 = 0x0,EFI_IFR_NUMERIC_SIZE_2 = 0x1,EFI_IFR_NUMERIC_SIZE_4 = 0x2,EFI_IFR_NUMERIC_SIZE_8 = 0x3,EFI_IFR_DISPLAY = 0x30,EFI_IFR_DISPLAY_INT_DEC = 0x0,EFI_IFR_DISPLAY_UINT_DEC = 0x10,EFI_IFR_DISPLAY_UINT_HEX = 0x20,EFI_IFR_STRING_MULTI_LINE = 0x1,EFI_IFR_UNIQUE_SET = 0x1,EFI_IFR_NO_EMPTY_SET = 0x2,};
enum MACRO_EFI_ISA {EFI_ISA_ACPI_IRQ_TYPE_HIGH_TRUE_EDGE_SENSITIVE = 0x1,EFI_ISA_ACPI_IRQ_TYPE_LOW_TRUE_EDGE_SENSITIVE = 0x2,EFI_ISA_ACPI_IRQ_TYPE_HIGH_TRUE_LEVEL_SENSITIVE = 0x4,EFI_ISA_ACPI_IRQ_TYPE_LOW_TRUE_LEVEL_SENSITIVE = 0x8,EFI_ISA_ACPI_DMA_SPEED_TYPE_MASK = 0x3,EFI_ISA_ACPI_DMA_SPEED_TYPE_COMPATIBILITY = 0x0,EFI_ISA_ACPI_DMA_SPEED_TYPE_A = 0x1,EFI_ISA_ACPI_DMA_SPEED_TYPE_B = 0x2,EFI_ISA_ACPI_DMA_SPEED_TYPE_F = 0x3,EFI_ISA_ACPI_DMA_COUNT_BY_BYTE = 0x4,EFI_ISA_ACPI_DMA_COUNT_BY_WORD = 0x8,EFI_ISA_ACPI_DMA_BUS_MASTER = 0x10,EFI_ISA_ACPI_DMA_TRANSFER_TYPE_8_BIT = 0x20,EFI_ISA_ACPI_DMA_TRANSFER_TYPE_8_BIT_AND_16_BIT = 0x40,EFI_ISA_ACPI_DMA_TRANSFER_TYPE_16_BIT = 0x80,EFI_ISA_ACPI_MEMORY_WIDTH_MASK = 0x3,EFI_ISA_ACPI_MEMORY_WIDTH_8_BIT = 0x0,EFI_ISA_ACPI_MEMORY_WIDTH_16_BIT = 0x1,EFI_ISA_ACPI_MEMORY_WIDTH_8_BIT_AND_16_BIT = 0x2,EFI_ISA_ACPI_MEMORY_WRITEABLE = 0x4,EFI_ISA_ACPI_MEMORY_CACHEABLE = 0x8,EFI_ISA_ACPI_MEMORY_SHADOWABLE = 0x10,EFI_ISA_ACPI_MEMORY_EXPANSION_ROM = 0x20,EFI_ISA_ACPI_IO_DECODE_10_BITS = 0x1,EFI_ISA_ACPI_IO_DECODE_16_BITS = 0x2,EFI_ISA_IO_ATTRIBUTE_MEMORY_WRITE_COMBINE = 0x80,EFI_ISA_IO_ATTRIBUTE_MEMORY_CACHED = 0x800,EFI_ISA_IO_ATTRIBUTE_MEMORY_DISABLE = 0x1000,EFI_ISA_IO_SLAVE_DMA_ATTRIBUTE_SPEED_COMPATIBLE = 0x1,EFI_ISA_IO_SLAVE_DMA_ATTRIBUTE_SPEED_A = 0x2,EFI_ISA_IO_SLAVE_DMA_ATTRIBUTE_SPEED_B = 0x4,EFI_ISA_IO_SLAVE_DMA_ATTRIBUTE_SPEED_C = 0x8,EFI_ISA_IO_SLAVE_DMA_ATTRIBUTE_WIDTH_8 = 0x10,EFI_ISA_IO_SLAVE_DMA_ATTRIBUTE_WIDTH_16 = 0x20,EFI_ISA_IO_SLAVE_DMA_ATTRIBUTE_SINGLE_MODE = 0x40,EFI_ISA_IO_SLAVE_DMA_ATTRIBUTE_DEMAND_MODE = 0x80,EFI_ISA_IO_SLAVE_DMA_ATTRIBUTE_AUTO_INITIALIZE = 0x100,EFI_KEYBOARD_CAPSLOCK = 0x4,EFI_KEYBOARD_NUMLOCK = 0x2,EFI_KEYBOARD_SCROLLLOCK = 0x1,};
enum MACRO_EFI_KMS {EFI_KMS_DATA_TYPE_NONE = 0,EFI_KMS_DATA_TYPE_BINARY = 1,EFI_KMS_DATA_TYPE_ASCII = 2,EFI_KMS_DATA_TYPE_UNICODE = 4,EFI_KMS_DATA_TYPE_UTF8 = 8,EFI_KMS_ATTRIBUTE_TYPE_NONE = 0,EFI_KMS_ATTRIBUTE_TYPE_INTEGER = 1,EFI_KMS_ATTRIBUTE_TYPE_LONG_INTEGER = 2,EFI_KMS_ATTRIBUTE_TYPE_BIG_INTEGER = 3,EFI_KMS_ATTRIBUTE_TYPE_ENUMERATION = 4,EFI_KMS_ATTRIBUTE_TYPE_BOOLEAN = 5,EFI_KMS_ATTRIBUTE_TYPE_BYTE_STRING = 6,EFI_KMS_ATTRIBUTE_TYPE_TEXT_STRING = 7,EFI_KMS_ATTRIBUTE_TYPE_DATE_TIME = 8,EFI_KMS_ATTRIBUTE_TYPE_INTERVAL = 9,EFI_KMS_ATTRIBUTE_TYPE_STRUCTURE = 10,EFI_KMS_ATTRIBUTE_TYPE_DYNAMIC = 11,EFI_MTFTP4_OPCODE_RRQ = 1,EFI_MTFTP4_OPCODE_WRQ = 2,EFI_MTFTP4_OPCODE_DATA = 3,EFI_MTFTP4_OPCODE_ACK = 4,EFI_MTFTP4_OPCODE_ERROR = 5,EFI_MTFTP4_OPCODE_OACK = 6,EFI_MTFTP4_OPCODE_DIR = 7,EFI_MTFTP4_OPCODE_DATA8 = 8,EFI_MTFTP4_OPCODE_ACK8 = 9,EFI_MTFTP4_ERRORCODE_NOT_DEFINED = 0,EFI_MTFTP4_ERRORCODE_FILE_NOT_FOUND = 1,EFI_MTFTP4_ERRORCODE_ACCESS_VIOLATION = 2,EFI_MTFTP4_ERRORCODE_DISK_FULL = 3,EFI_MTFTP4_ERRORCODE_ILLEGAL_OPERATION = 4,EFI_MTFTP4_ERRORCODE_UNKNOWN_TRANSFER_ID = 5,EFI_MTFTP4_ERRORCODE_FILE_ALREADY_EXISTS = 6,EFI_MTFTP4_ERRORCODE_NO_SUCH_USER = 7,EFI_MTFTP4_ERRORCODE_REQUEST_DENIED = 8,EFI_MTFTP6_OPCODE_RRQ = 1,EFI_MTFTP6_OPCODE_WRQ = 2,EFI_MTFTP6_OPCODE_DATA = 3,EFI_MTFTP6_OPCODE_ACK = 4,EFI_MTFTP6_OPCODE_ERROR = 5,EFI_MTFTP6_OPCODE_OACK = 6,EFI_MTFTP6_OPCODE_DIR = 7,EFI_MTFTP6_OPCODE_DATA8 = 8,EFI_MTFTP6_OPCODE_ACK8 = 9,EFI_MTFTP6_ERRORCODE_NOT_DEFINED = 0,EFI_MTFTP6_ERRORCODE_FILE_NOT_FOUND = 1,EFI_MTFTP6_ERRORCODE_ACCESS_VIOLATION = 2,EFI_MTFTP6_ERRORCODE_DISK_FULL = 3,EFI_MTFTP6_ERRORCODE_ILLEGAL_OPERATION = 6,EFI_MTFTP6_ERRORCODE_UNKNOWN_TRANSFER_ID = 5,EFI_MTFTP6_ERRORCODE_FILE_ALREADY_EXISTS = 6,EFI_MTFTP6_ERRORCODE_NO_SUCH_USER = 7,EFI_MTFTP6_ERRORCODE_REQUEST_DENIED = 8,EFI_NETWORK_INTERFACE_IDENTIFIER_PROTOCOL_REVISION = 131072,EFI_NETWORK_INTERFACE_IDENTIFIER_INTERFACE_REVISION = 131072,EFI_NVM_EXPRESS_PASS_THRU_ATTRIBUTES_PHYSICAL = 1,EFI_NVM_EXPRESS_PASS_THRU_ATTRIBUTES_LOGICAL = 2,EFI_NVM_EXPRESS_PASS_THRU_ATTRIBUTES_NONBLOCKIO = 4,EFI_NVM_EXPRESS_PASS_THRU_ATTRIBUTES_CMD_SET_NVM = 8,};
enum MACRO_EFI_PCI {EFI_PCI_COMMAND_IO_SPACE = 1,EFI_PCI_COMMAND_MEMORY_SPACE = 2,EFI_PCI_COMMAND_BUS_MASTER = 4,EFI_PCI_COMMAND_SPECIAL_CYCLE = 8,EFI_PCI_COMMAND_MEMORY_WRITE_AND_INVALIDATE = 16,EFI_PCI_COMMAND_VGA_PALETTE_SNOOP = 32,EFI_PCI_COMMAND_PARITY_ERROR_RESPOND = 64,EFI_PCI_COMMAND_STEPPING_CONTROL = 128,EFI_PCI_COMMAND_SERR = 256,EFI_PCI_COMMAND_FAST_BACK_TO_BACK = 512,EFI_PCI_BRIDGE_CONTROL_PARITY_ERROR_RESPONSE = 1,EFI_PCI_BRIDGE_CONTROL_SERR = 2,EFI_PCI_BRIDGE_CONTROL_ISA = 4,EFI_PCI_BRIDGE_CONTROL_VGA = 8,EFI_PCI_BRIDGE_CONTROL_VGA_16 = 16,EFI_PCI_BRIDGE_CONTROL_MASTER_ABORT = 32,EFI_PCI_BRIDGE_CONTROL_RESET_SECONDARY_BUS = 64,EFI_PCI_BRIDGE_CONTROL_FAST_BACK_TO_BACK = 128,EFI_PCI_BRIDGE_CONTROL_PRIMARY_DISCARD_TIMER = 256,EFI_PCI_BRIDGE_CONTROL_SECONDARY_DISCARD_TIMER = 512,EFI_PCI_BRIDGE_CONTROL_TIMER_STATUS = 1024,EFI_PCI_BRIDGE_CONTROL_DISCARD_TIMER_SERR = 2048,EFI_PCI_BRIDGE_CONTROL_IREQINT_ENABLE = 128,EFI_PCI_BRIDGE_CONTROL_RANGE0_MEMORY_TYPE = 256,EFI_PCI_BRIDGE_CONTROL_RANGE1_MEMORY_TYPE = 512,EFI_PCI_BRIDGE_CONTROL_WRITE_POSTING_ENABLE = 1024,EFI_PCI_STATUS_CAPABILITY = 16,EFI_PCI_STATUS_66MZ_CAPABLE = 32,EFI_PCI_FAST_BACK_TO_BACK_CAPABLE = 128,EFI_PCI_MASTER_DATA_PARITY_ERROR = 256,EFI_PCI_CARDBUS_BRIDGE_CAPABILITY_PTR = 20,EFI_PCI_CAPABILITY_ID_PMI = 1,EFI_PCI_CAPABILITY_ID_AGP = 2,EFI_PCI_CAPABILITY_ID_VPD = 3,EFI_PCI_CAPABILITY_ID_SLOTID = 4,EFI_PCI_CAPABILITY_ID_MSI = 5,EFI_PCI_CAPABILITY_ID_HOTPLUG = 6,EFI_PCI_PMC_D3_COLD_MASK = 32768,};
enum MACRO_EFI_PEI {EFI_PEI_PPI_DESCRIPTOR_PIC = 0x1,EFI_PEI_PPI_DESCRIPTOR_PPI = 0x10,EFI_PEI_PPI_DESCRIPTOR_NOTIFY_CALLBACK = 0x20,EFI_PEI_PPI_DESCRIPTOR_NOTIFY_DISPATCH = 0x40,EFI_PEI_PPI_DESCRIPTOR_NOTIFY_TYPES = 0x60,EFI_PEI_PPI_DESCRIPTOR_TERMINATE_LIST = 0x80000000,};
enum MACRO_EFI_PXE {EFI_PXE_BASE_CODE_MAX_IPCNT = 8,EFI_PXE_BASE_CODE_IP_FILTER_STATION_IP = 1,EFI_PXE_BASE_CODE_IP_FILTER_BROADCAST = 2,EFI_PXE_BASE_CODE_IP_FILTER_PROMISCUOUS = 4,EFI_PXE_BASE_CODE_IP_FILTER_PROMISCUOUS_MULTICAST = 8,EFI_PXE_BASE_CODE_UDP_OPFLAGS_ANY_SRC_IP = 1,EFI_PXE_BASE_CODE_UDP_OPFLAGS_ANY_SRC_PORT = 2,EFI_PXE_BASE_CODE_UDP_OPFLAGS_ANY_DEST_IP = 4,EFI_PXE_BASE_CODE_UDP_OPFLAGS_ANY_DEST_PORT = 8,EFI_PXE_BASE_CODE_UDP_OPFLAGS_USE_FILTER = 16,EFI_PXE_BASE_CODE_UDP_OPFLAGS_MAY_FRAGMENT = 32,EFI_PXE_BASE_CODE_BOOT_TYPE_BOOTSTRAP = 0,EFI_PXE_BASE_CODE_BOOT_TYPE_MS_WINNT_RIS = 1,EFI_PXE_BASE_CODE_BOOT_TYPE_INTEL_LCM = 2,EFI_PXE_BASE_CODE_BOOT_TYPE_DOSUNDI = 3,EFI_PXE_BASE_CODE_BOOT_TYPE_NEC_ESMPRO = 4,EFI_PXE_BASE_CODE_BOOT_TYPE_IBM_WSoD = 5,EFI_PXE_BASE_CODE_BOOT_TYPE_IBM_LCCM = 6,EFI_PXE_BASE_CODE_BOOT_TYPE_CA_UNICENTER_TNG = 7,EFI_PXE_BASE_CODE_BOOT_TYPE_HP_OPENVIEW = 8,EFI_PXE_BASE_CODE_BOOT_TYPE_ALTIRIS_9 = 9,EFI_PXE_BASE_CODE_BOOT_TYPE_ALTIRIS_10 = 10,EFI_PXE_BASE_CODE_BOOT_TYPE_ALTIRIS_11 = 11,EFI_PXE_BASE_CODE_BOOT_TYPE_NOT_USED_12 = 12,EFI_PXE_BASE_CODE_BOOT_TYPE_REDHAT_INSTALL = 13,EFI_PXE_BASE_CODE_BOOT_TYPE_REDHAT_BOOT = 14,EFI_PXE_BASE_CODE_BOOT_TYPE_REMBO = 15,EFI_PXE_BASE_CODE_BOOT_TYPE_BEOBOOT = 16,EFI_PXE_BASE_CODE_BOOT_TYPE_PXETEST = 65535,EFI_PXE_BASE_CODE_BOOT_LAYER_MASK = 32767,EFI_PXE_BASE_CODE_BOOT_LAYER_INITIAL = 0,EFI_PXE_CLIENT_SYSTEM_ARCHITECTURE = 11,EFI_PXE_BASE_CODE_MAX_ARP_ENTRIES = 8,EFI_PXE_BASE_CODE_MAX_ROUTE_ENTRIES = 8,EFI_PXE_BASE_CODE_PROTOCOL_REVISION = 65536,EFI_PXE_BASE_CODE_INTERFACE_REVISION = 65536,EFI_PXE_BASE_CODE_CALLBACK_PROTOCOL_REVISION = 65536,EFI_PXE_BASE_CODE_CALLBACK_INTERFACE_REVISION = 65536,};
enum MACRO_EFI_SAL {EFI_SAL_SUCCESS = 0,EFI_SAL_OVERFLOW = 1,EFI_SAL_WARM_BOOT_NEEDED = 2,EFI_SAL_MORE_RECORDS = 3,EFI_SAL_NOT_IMPLEMENTED = -1,EFI_SAL_INVALID_ARGUMENT = -2,EFI_SAL_ERROR = -3,EFI_SAL_VIRTUAL_ADDRESS_ERROR = -4,EFI_SAL_NO_INFORMATION = -5,EFI_SAL_NOT_ENOUGH_SCRATCH = -9,EFI_SAL_SET_VECTORS = 16777216,EFI_SAL_GET_STATE_INFO = 16777217,EFI_SAL_GET_STATE_INFO_SIZE = 16777218,EFI_SAL_CLEAR_STATE_INFO = 16777219,EFI_SAL_MC_RENDEZ = 16777220,EFI_SAL_MC_SET_PARAMS = 16777221,EFI_SAL_REGISTER_PHYSICAL_ADDR = 16777222,EFI_SAL_CACHE_FLUSH = 16777224,EFI_SAL_CACHE_INIT = 16777225,EFI_SAL_PCI_CONFIG_READ = 16777232,EFI_SAL_PCI_CONFIG_WRITE = 16777233,EFI_SAL_FREQ_BASE = 16777234,EFI_SAL_PHYSICAL_ID_INFO = 16777235,EFI_SAL_UPDATE_PAL = 16777248,EFI_SAL_FUNCTION_ID_MASK = 65535,EFI_SAL_MAX_SAL_FUNCTION_ID = 33,EFI_SAL_SET_MCA_VECTOR = 0,EFI_SAL_SET_INIT_VECTOR = 1,EFI_SAL_SET_BOOT_RENDEZ_VECTOR = 2,EFI_SAL_MCA_STATE_INFO = 0,EFI_SAL_INIT_STATE_INFO = 1,EFI_SAL_CMC_STATE_INFO = 2,EFI_SAL_CP_STATE_INFO = 3,EFI_SAL_MC_SET_RENDEZ_PARAM = 1,EFI_SAL_MC_SET_WAKEUP_PARAM = 2,EFI_SAL_MC_SET_CPE_PARAM = 3,EFI_SAL_MC_SET_INTR_PARAM = 1,EFI_SAL_MC_SET_MEM_PARAM = 2,EFI_SAL_REGISTER_PAL_ADDR = 0,EFI_SAL_FLUSH_I_CACHE = 1,EFI_SAL_FLUSH_D_CACHE = 2,EFI_SAL_FLUSH_BOTH_CACHE = 3,EFI_SAL_FLUSH_MAKE_COHERENT = 4,EFI_SAL_PCI_CONFIG_ONE_BYTE = 1,EFI_SAL_PCI_CONFIG_TWO_BYTES = 2,EFI_SAL_PCI_CONFIG_FOUR_BYTES = 4,EFI_SAL_PCI_COMPATIBLE_ADDRESS = 0,EFI_SAL_PCI_EXTENDED_REGISTER_ADDRESS = 1,EFI_SAL_CPU_INPUT_FREQ_BASE = 0,EFI_SAL_PLATFORM_IT_FREQ_BASE = 1,EFI_SAL_PLATFORM_RTC_FREQ_BASE = 2,EFI_SAL_UPDATE_BAD_PAL_VERSION = -1,EFI_SAL_UPDATE_PAL_AUTH_FAIL = -2,EFI_SAL_UPDATE_PAL_BAD_TYPE = -3,EFI_SAL_UPDATE_PAL_READONLY = -4,EFI_SAL_UPDATE_PAL_WRITE_FAIL = -10,EFI_SAL_UPDATE_PAL_ERASE_FAIL = -11,EFI_SAL_UPDATE_PAL_READ_FAIL = -12,EFI_SAL_UPDATE_PAL_CANT_FIT = -13,EFI_SAL_REVISION = 800,EFI_SAL_ST_ENTRY_POINT = 0,EFI_SAL_ST_MEMORY_DESCRIPTOR = 1,EFI_SAL_ST_PLATFORM_FEATURES = 2,EFI_SAL_ST_TR_USAGE = 3,EFI_SAL_ST_PTC = 4,EFI_SAL_ST_AP_WAKEUP = 5,EFI_SAL_ST_ENTRY_POINT_SIZE = 48,EFI_SAL_ST_MEMORY_DESCRIPTOR_SIZE = 32,EFI_SAL_ST_PLATFORM_FEATURES_SIZE = 16,EFI_SAL_ST_TR_USAGE_SIZE = 32,EFI_SAL_ST_PTC_SIZE = 16,EFI_SAL_ST_AP_WAKEUP_SIZE = 16,};
enum MACRO_EFI_SIO {EFI_SIO_LDN_GLOBAL = 0xFF,EFI_ACPI_PNP_HID_END = 0x41D0,EFI_ABSP_SupportsAltActive = 0x1,EFI_ABSP_SupportsPressureAsZ = 0x2,EFI_ABSP_TouchActive = 0x1,EFI_ABS_AltActive = 0x2,EFI_ACPI_TABLE_VERSION_NONE = 0x1,EFI_ACPI_TABLE_VERSION_1_0B = 0x2,EFI_ACPI_TABLE_VERSION_2_0 = 0x4,EFI_ACPI_TABLE_VERSION_3_0 = 0x8,EFI_ACPI_TABLE_VERSION_4_0 = 0x10,EFI_ACPI_TABLE_VERSION_5_0 = 0x20,EFI_ACPI_DATA_TYPE_NONE = 0x0,EFI_ACPI_DATA_TYPE_OPCODE = 0x1,EFI_ACPI_DATA_TYPE_NAME_STRING = 0x2,EFI_ACPI_DATA_TYPE_OP = 0x3,EFI_ACPI_DATA_TYPE_UINT = 0x4,EFI_ACPI_DATA_TYPE_STRING = 0x5,EFI_ACPI_DATA_TYPE_CHILD = 0x6,EFI_ATA_PASS_THRU_ATTRIBUTES_PHYSICAL = 0x1,EFI_ATA_PASS_THRU_ATTRIBUTES_LOGICAL = 0x2,EFI_ATA_PASS_THRU_ATTRIBUTES_NONBLOCKIO = 0x4,EFI_ATA_PASS_THRU_PROTOCOL_ATA_HARDWARE_RESET = 0x0,EFI_ATA_PASS_THRU_PROTOCOL_ATA_SOFTWARE_RESET = 0x1,EFI_ATA_PASS_THRU_PROTOCOL_ATA_NON_DATA = 0x2,EFI_ATA_PASS_THRU_PROTOCOL_PIO_DATA_IN = 0x4,EFI_ATA_PASS_THRU_PROTOCOL_PIO_DATA_OUT = 0x5,EFI_ATA_PASS_THRU_PROTOCOL_DMA = 0x6,EFI_ATA_PASS_THRU_PROTOCOL_DMA_QUEUED = 0x7,EFI_ATA_PASS_THRU_PROTOCOL_DEVICE_DIAGNOSTIC = 0x8,EFI_ATA_PASS_THRU_PROTOCOL_DEVICE_RESET = 0x9,EFI_ATA_PASS_THRU_PROTOCOL_UDMA_DATA_IN = 0xA,EFI_ATA_PASS_THRU_PROTOCOL_UDMA_DATA_OUT = 0xB,EFI_ATA_PASS_THRU_PROTOCOL_FPDMA = 0xC,EFI_ATA_PASS_THRU_PROTOCOL_RETURN_RESPONSE = 0xFF,EFI_ATA_PASS_THRU_LENGTH_BYTES = 0x80,EFI_ATA_PASS_THRU_LENGTH_MASK = 0x70,EFI_ATA_PASS_THRU_LENGTH_NO_DATA_TRANSFER = 0x0,EFI_ATA_PASS_THRU_LENGTH_FEATURES = 0x10,EFI_ATA_PASS_THRU_LENGTH_SECTOR_COUNT = 0x20,EFI_ATA_PASS_THRU_LENGTH_TPSIU = 0x30,EFI_ATA_PASS_THRU_LENGTH_COUNT = 0xF,};
enum MACRO_EFI_SMM {EFI_SMM_SYSTEM_TABLE2_REVISION = 65576,EFI_ERROR_RECORD_SIGNATURE_START = 1380274243,EFI_ERROR_RECORD_SIGNATURE_END = -1,EFI_GENERIC_ERROR_RECOVERABLE = 0,EFI_GENERIC_ERROR_FATAL = 1,EFI_GENERIC_ERROR_CORRECTED = 2,EFI_GENERIC_ERROR_INFO = 3,EFI_ERROR_RECORD_HEADER_PLATFORM_ID_VALID = 1,EFI_ERROR_RECORD_HEADER_TIME_STAMP_VALID = 2,EFI_ERROR_RECORD_HEADER_PARTITION_ID_VALID = 4,EFI_ERROR_TIME_STAMP_PRECISE = 1,EFI_HW_ERROR_FLAGS_RECOVERED = 1,EFI_HW_ERROR_FLAGS_PREVERR = 2,EFI_HW_ERROR_FLAGS_SIMULATED = 4,EFI_ERROR_SECTION_FRU_ID_VALID = 1,EFI_ERROR_SECTION_FRU_STRING_VALID = 2,EFI_ERROR_SECTION_FLAGS_PRIMARY = 1,EFI_ERROR_SECTION_FLAGS_CONTAINMENT_WARNING = 2,EFI_ERROR_SECTION_FLAGS_RESET = 4,EFI_ERROR_SECTION_FLAGS_ERROR_THRESHOLD_EXCEEDED = 8,EFI_ERROR_SECTION_FLAGS_RESOURCE_NOT_ACCESSIBLE = 16,EFI_ERROR_SECTION_FLAGS_LATENT_ERROR = 32,EFI_GENERIC_ERROR_PROC_TYPE_VALID = 1,EFI_GENERIC_ERROR_PROC_ISA_VALID = 2,EFI_GENERIC_ERROR_PROC_ERROR_TYPE_VALID = 4,EFI_GENERIC_ERROR_PROC_OPERATION_VALID = 8,EFI_GENERIC_ERROR_PROC_FLAGS_VALID = 16,EFI_GENERIC_ERROR_PROC_LEVEL_VALID = 32,EFI_GENERIC_ERROR_PROC_VERSION_VALID = 64,EFI_GENERIC_ERROR_PROC_BRAND_VALID = 128,EFI_GENERIC_ERROR_PROC_ID_VALID = 256,EFI_GENERIC_ERROR_PROC_TARGET_ADDR_VALID = 512,EFI_GENERIC_ERROR_PROC_REQUESTER_ID_VALID = 1024,EFI_GENERIC_ERROR_PROC_RESPONDER_ID_VALID = 2048,EFI_GENERIC_ERROR_PROC_INST_IP_VALID = 4096,EFI_GENERIC_ERROR_PROC_TYPE_IA32_X64 = 0,EFI_GENERIC_ERROR_PROC_TYPE_IA64 = 1,EFI_GENERIC_ERROR_PROC_ISA_IA32 = 0,EFI_GENERIC_ERROR_PROC_ISA_IA64 = 1,EFI_GENERIC_ERROR_PROC_ISA_X64 = 2,EFI_GENERIC_ERROR_PROC_ERROR_TYPE_UNKNOWN = 0,EFI_GENERIC_ERROR_PROC_ERROR_TYPE_CACHE = 1,EFI_GENERIC_ERROR_PROC_ERROR_TYPE_TLB = 2,EFI_GENERIC_ERROR_PROC_ERROR_TYPE_BUS = 4,EFI_GENERIC_ERROR_PROC_ERROR_TYPE_MICRO_ARCH = 8,EFI_GENERIC_ERROR_PROC_OPERATION_GENERIC = 0,EFI_GENERIC_ERROR_PROC_OPERATION_DATA_READ = 1,EFI_GENERIC_ERROR_PROC_OPERATION_DATA_WRITE = 2,EFI_GENERIC_ERROR_PROC_OPERATION_INSTRUCTION_EXEC = 3,EFI_GENERIC_ERROR_PROC_FLAGS_RESTARTABLE = 1,EFI_GENERIC_ERROR_PROC_FLAGS_PRECISE_IP = 2,EFI_GENERIC_ERROR_PROC_FLAGS_OVERFLOW = 4,EFI_GENERIC_ERROR_PROC_FLAGS_CORRECTED = 8,EFI_PLATFORM_MEMORY_ERROR_STATUS_VALID = 1,EFI_PLATFORM_MEMORY_PHY_ADDRESS_VALID = 2,EFI_PLATFORM_MEMORY_PHY_ADDRESS_MASK_VALID = 4,EFI_PLATFORM_MEMORY_NODE_VALID = 8,EFI_PLATFORM_MEMORY_CARD_VALID = 16,EFI_PLATFORM_MEMORY_MODULE_VALID = 32,EFI_PLATFORM_MEMORY_BANK_VALID = 64,EFI_PLATFORM_MEMORY_DEVICE_VALID = 128,EFI_PLATFORM_MEMORY_ROW_VALID = 256,EFI_PLATFORM_MEMORY_COLUMN_VALID = 512,EFI_PLATFORM_MEMORY_BIT_POS_VALID = 1024,EFI_PLATFORM_MEMORY_REQUESTOR_ID_VALID = 2048,EFI_PLATFORM_MEMORY_RESPONDER_ID_VALID = 4096,EFI_PLATFORM_MEMORY_TARGET_ID_VALID = 8192,EFI_PLATFORM_MEMORY_ERROR_TYPE_VALID = 16384,EFI_PLATFORM_MEMORY_ERROR_RANK_NUM_VALID = 32768,EFI_PLATFORM_MEMORY_ERROR_CARD_HANDLE_VALID = 65536,EFI_PLATFORM_MEMORY_ERROR_MODULE_HANDLE_VALID = 131072,EFI_PLATFORM_MEMORY_ERROR_EXTENDED_ROW_BIT_16_17_VALID = 262144,EFI_PLATFORM_MEMORY_ERROR_BANK_GROUP_VALID = 524288,EFI_PLATFORM_MEMORY_ERROR_BANK_ADDRESS_VALID = 1048576,EFI_PLATFORM_MEMORY_ERROR_CHIP_IDENTIFICATION_VALID = 2097152,EFI_PLATFORM_MEMORY_ERROR_UNKNOWN = 0,EFI_PLATFORM_MEMORY_ERROR_NONE = 1,EFI_PLATFORM_MEMORY_ERROR_SINGLEBIT_ECC = 2,EFI_PLATFORM_MEMORY_ERROR_MLTIBIT_ECC = 3,EFI_PLATFORM_MEMORY_ERROR_SINGLESYMBOLS_CHIPKILL = 4,EFI_PLATFORM_MEMORY_ERROR_MULTISYMBOL_CHIPKILL = 5,EFI_PLATFORM_MEMORY_ERROR_MATER_ABORT = 6,EFI_PLATFORM_MEMORY_ERROR_TARGET_ABORT = 7,EFI_PLATFORM_MEMORY_ERROR_PARITY = 8,EFI_PLATFORM_MEMORY_ERROR_WDT = 9,EFI_PLATFORM_MEMORY_ERROR_INVALID_ADDRESS = 10,EFI_PLATFORM_MEMORY_ERROR_MIRROR_FAILED = 11,EFI_PLATFORM_MEMORY_ERROR_SPARING = 12,EFI_PLATFORM_MEMORY_ERROR_SCRUB_CORRECTED = 13,EFI_PLATFORM_MEMORY_ERROR_SCRUB_UNCORRECTED = 14,EFI_PLATFORM_MEMORY_ERROR_MEMORY_MAP_EVENT = 15,EFI_PLATFORM_MEMORY2_ERROR_STATUS_VALID = 1,EFI_PLATFORM_MEMORY2_PHY_ADDRESS_VALID = 2,EFI_PLATFORM_MEMORY2_PHY_ADDRESS_MASK_VALID = 4,EFI_PLATFORM_MEMORY2_NODE_VALID = 8,EFI_PLATFORM_MEMORY2_CARD_VALID = 16,EFI_PLATFORM_MEMORY2_MODULE_VALID = 32,EFI_PLATFORM_MEMORY2_BANK_VALID = 64,EFI_PLATFORM_MEMORY2_DEVICE_VALID = 128,EFI_PLATFORM_MEMORY2_ROW_VALID = 256,EFI_PLATFORM_MEMORY2_COLUMN_VALID = 512,EFI_PLATFORM_MEMORY2_RANK_VALID = 1024,EFI_PLATFORM_MEMORY2_BIT_POS_VALID = 2048,EFI_PLATFORM_MEMORY2_CHIP_ID_VALID = 4096,EFI_PLATFORM_MEMORY2_MEMORY_ERROR_TYPE_VALID = 8192,EFI_PLATFORM_MEMORY2_STATUS_VALID = 16384,EFI_PLATFORM_MEMORY2_REQUESTOR_ID_VALID = 32768,EFI_PLATFORM_MEMORY2_RESPONDER_ID_VALID = 65536,EFI_PLATFORM_MEMORY2_TARGET_ID_VALID = 131072,EFI_PLATFORM_MEMORY2_CARD_HANDLE_VALID = 262144,EFI_PLATFORM_MEMORY2_MODULE_HANDLE_VALID = 524288,EFI_PLATFORM_MEMORY2_BANK_GROUP_VALID = 1048576,EFI_PLATFORM_MEMORY2_BANK_ADDRESS_VALID = 2097152,EFI_PLATFORM_MEMORY2_ERROR_UNKNOWN = 0,EFI_PLATFORM_MEMORY2_ERROR_NONE = 1,EFI_PLATFORM_MEMORY2_ERROR_SINGLEBIT_ECC = 2,EFI_PLATFORM_MEMORY2_ERROR_MLTIBIT_ECC = 3,EFI_PLATFORM_MEMORY2_ERROR_SINGLESYMBOL_CHIPKILL = 4,EFI_PLATFORM_MEMORY2_ERROR_MULTISYMBOL_CHIPKILL = 5,EFI_PLATFORM_MEMORY2_ERROR_MASTER_ABORT = 6,EFI_PLATFORM_MEMORY2_ERROR_TARGET_ABORT = 7,EFI_PLATFORM_MEMORY2_ERROR_PARITY = 8,EFI_PLATFORM_MEMORY2_ERROR_WDT = 9,EFI_PLATFORM_MEMORY2_ERROR_INVALID_ADDRESS = 10,EFI_PLATFORM_MEMORY2_ERROR_MIRROR_BROKEN = 11,EFI_PLATFORM_MEMORY2_ERROR_MEMORY_SPARING = 12,EFI_PLATFORM_MEMORY2_ERROR_SCRUB_CORRECTED = 13,EFI_PLATFORM_MEMORY2_ERROR_SCRUB_UNCORRECTED = 14,EFI_PLATFORM_MEMORY2_ERROR_MEMORY_MAP_EVENT = 15,EFI_PCIE_ERROR_PORT_TYPE_VALID = 1,EFI_PCIE_ERROR_VERSION_VALID = 2,EFI_PCIE_ERROR_COMMAND_STATUS_VALID = 4,EFI_PCIE_ERROR_DEVICE_ID_VALID = 8,EFI_PCIE_ERROR_SERIAL_NO_VALID = 16,EFI_PCIE_ERROR_BRIDGE_CRL_STS_VALID = 32,EFI_PCIE_ERROR_CAPABILITY_INFO_VALID = 64,EFI_PCIE_ERROR_AER_INFO_VALID = 128,EFI_PCIE_ERROR_PORT_PCIE_ENDPOINT = 0,EFI_PCIE_ERROR_PORT_PCI_ENDPOINT = 1,EFI_PCIE_ERROR_PORT_ROOT_PORT = 4,EFI_PCIE_ERROR_PORT_UPSWITCH_PORT = 5,EFI_PCIE_ERROR_PORT_DOWNSWITCH_PORT = 6,EFI_PCIE_ERROR_PORT_PCIE_TO_PCI_BRIDGE = 7,EFI_PCIE_ERROR_PORT_PCI_TO_PCIE_BRIDGE = 8,EFI_PCIE_ERROR_PORT_ROOT_INT_ENDPOINT = 9,EFI_PCIE_ERROR_PORT_ROOT_EVENT_COLLECTOR = 10,EFI_PCI_PCIX_BUS_ERROR_STATUS_VALID = 1,EFI_PCI_PCIX_BUS_ERROR_TYPE_VALID = 2,EFI_PCI_PCIX_BUS_ERROR_BUS_ID_VALID = 4,EFI_PCI_PCIX_BUS_ERROR_BUS_ADDRESS_VALID = 8,EFI_PCI_PCIX_BUS_ERROR_BUS_DATA_VALID = 16,EFI_PCI_PCIX_BUS_ERROR_COMMAND_VALID = 32,EFI_PCI_PCIX_BUS_ERROR_REQUESTOR_ID_VALID = 64,EFI_PCI_PCIX_BUS_ERROR_COMPLETER_ID_VALID = 128,EFI_PCI_PCIX_BUS_ERROR_TARGET_ID_VALID = 256,EFI_PCI_PCIX_BUS_ERROR_UNKNOWN = 0,EFI_PCI_PCIX_BUS_ERROR_DATA_PARITY = 1,EFI_PCI_PCIX_BUS_ERROR_SYSTEM = 2,EFI_PCI_PCIX_BUS_ERROR_MASTER_ABORT = 3,EFI_PCI_PCIX_BUS_ERROR_BUS_TIMEOUT = 4,EFI_PCI_PCIX_BUS_ERROR_MASTER_DATA_PARITY = 5,EFI_PCI_PCIX_BUS_ERROR_ADDRESS_PARITY = 6,EFI_PCI_PCIX_BUS_ERROR_COMMAND_PARITY = 7,EFI_PCI_PCIX_DEVICE_ERROR_STATUS_VALID = 1,EFI_PCI_PCIX_DEVICE_ERROR_ID_INFO_VALID = 2,EFI_PCI_PCIX_DEVICE_ERROR_MEM_NUM_VALID = 4,EFI_PCI_PCIX_DEVICE_ERROR_IO_NUM_VALID = 8,EFI_PCI_PCIX_DEVICE_ERROR_REG_DATA_PAIR_VALID = 16,EFI_FIRMWARE_ERROR_TYPE_IPF_SAL = 0,EFI_DMA_FAULT_REASON_TABLE_ENTRY_NOT_PRESENT = 1,EFI_DMA_FAULT_REASON_TABLE_ENTRY_INVALID = 2,EFI_DMA_FAULT_REASON_ACCESS_MAPPING_TABLE_ERROR = 3,EFI_DMA_FAULT_REASON_RESV_BIT_ERROR_IN_MAPPING_TABLE = 4,EFI_DMA_FAULT_REASON_ACCESS_ADDR_OUT_OF_SPACE = 5,EFI_DMA_FAULT_REASON_INVALID_ACCESS = 6,EFI_DMA_FAULT_REASON_INVALID_REQUEST = 7,EFI_DMA_FAULT_REASON_ACCESS_TRANSLATE_TABLE_ERROR = 8,EFI_DMA_FAULT_REASON_RESV_BIT_ERROR_IN_TRANSLATE_TABLE = 9,EFI_DMA_FAULT_REASON_INVALID_COMMAOND = 10,EFI_DMA_FAULT_REASON_ACCESS_COMMAND_BUFFER_ERROR = 11,EFI_DMA_ACCESS_TYPE_READ = 0,EFI_DMA_ACCESS_TYPE_WRITE = 1,EFI_DMA_ADDRESS_UNTRANSLATED = 0,EFI_DMA_ADDRESS_TRANSLATION = 1,EFI_DMA_ARCH_TYPE_VT = 1,EFI_DMA_ARCH_TYPE_IOMMU = 2,EFI_LOADED_IMAGE_PROTOCOL_REVISION = 4096,EFI_LOADED_IMAGE_INFORMATION_REVISION = 4096,EFI_DEBUG_IMAGE_INFO_UPDATE_IN_PROGRESS = 1,EFI_DEBUG_IMAGE_INFO_TABLE_MODIFIED = 2,EFI_DEBUG_IMAGE_INFO_TYPE_NORMAL = 1,EFI_FIRMWARE_MANAGEMENT_CAPSULE_HEADER_INIT_VERSION = 1,EFI_FIRMWARE_MANAGEMENT_CAPSULE_IMAGE_HEADER_INIT_VERSION = 2,};
enum MACRO_EFI_USB {EFI_USB_GET_REPORT_REQUEST = 0x1,EFI_USB_GET_IDLE_REQUEST = 0x2,EFI_USB_GET_PROTOCOL_REQUEST = 0x3,EFI_USB_SET_REPORT_REQUEST = 0x9,EFI_USB_SET_IDLE_REQUEST = 0xA,EFI_USB_SET_PROTOCOL_REQUEST = 0xB,EFI_ACPI_WATCHDOG_ACTION_1_0_TABLE_REVISION = 0x1,EFI_ACPI_WDAT_1_0_WATCHDOG_ENABLED = 0x1,EFI_ACPI_WDAT_1_0_WATCHDOG_STOPPED_IN_SLEEP_STATE = 0x80,EFI_ACPI_WDAT_1_0_WATCHDOG_ACTION_RESET = 0x1,EFI_ACPI_WDAT_1_0_WATCHDOG_ACTION_QUERY_CURRENT_COUNTDOWN_PERIOD = 0x4,EFI_ACPI_WDAT_1_0_WATCHDOG_ACTION_QUERY_COUNTDOWN_PERIOD = 0x5,EFI_ACPI_WDAT_1_0_WATCHDOG_ACTION_SET_COUNTDOWN_PERIOD = 0x6,EFI_ACPI_WDAT_1_0_WATCHDOG_ACTION_QUERY_RUNNING_STATE = 0x8,EFI_ACPI_WDAT_1_0_WATCHDOG_ACTION_SET_RUNNING_STATE = 0x9,EFI_ACPI_WDAT_1_0_WATCHDOG_ACTION_QUERY_STOPPED_STATE = 0xA,EFI_ACPI_WDAT_1_0_WATCHDOG_ACTION_SET_STOPPED_STATE = 0xB,EFI_ACPI_WDAT_1_0_WATCHDOG_ACTION_QUERY_REBOOT = 0x10,EFI_ACPI_WDAT_1_0_WATCHDOG_ACTION_SET_REBOOT = 0x11,EFI_ACPI_WDAT_1_0_WATCHDOG_ACTION_QUERY_SHUTDOWN = 0x12,EFI_ACPI_WDAT_1_0_WATCHDOG_ACTION_SET_SHUTDOWN = 0x13,EFI_ACPI_WDAT_1_0_WATCHDOG_ACTION_QUERY_WATCHDOG_STATUS = 0x20,EFI_ACPI_WDAT_1_0_WATCHDOG_ACTION_SET_WATCHDOG_STATUS = 0x21,EFI_ACPI_WDAT_1_0_WATCHDOG_INSTRUCTION_READ_VALUE = 0x0,EFI_ACPI_WDAT_1_0_WATCHDOG_INSTRUCTION_READ_COUNTDOWN = 0x1,EFI_ACPI_WDAT_1_0_WATCHDOG_INSTRUCTION_WRITE_VALUE = 0x2,EFI_ACPI_WDAT_1_0_WATCHDOG_INSTRUCTION_WRITE_COUNTDOWN = 0x3,EFI_ACPI_WDAT_1_0_WATCHDOG_INSTRUCTION_PRESERVE_REGISTER = 0x80,EFI_ACPI_WATCHDOG_RESOURCE_1_0_TABLE_REVISION = 0x1,EFI_ACPI_WDRT_1_0_COUNT_UNIT_1_SEC_PER_COUNT = 0x1,EFI_ACPI_WDRT_1_0_COUNT_UNIT_100_MILLISEC_PER_COUNT = 0x2,EFI_ACPI_WDRT_1_0_COUNT_UNIT_10_MILLISEC_PER_COUNT = 0x3,};
enum MACRO_EFI_WIN {EFI_WIN_NT_THUNK_PROTOCOL_SIGNATURE = 1414812750,};
enum MACRO_ENABLED {PERFORMANCE_LIBRARY_PROPERTY_MEASUREMENT_ENABLED = 0x1,POST_CODE_PROPERTY_POST_CODE_ENABLED = 0x8,POST_CODE_PROPERTY_POST_CODE_DESCRIPTION_ENABLED = 0x10,};
enum MACRO_IF_TRUE {INCOSISTENT_IF_TRUE = 0x80000001,WARNING_IF_TRUE = 0x80000002,};
enum MACRO_IO_PORT {IO_PORT_BREAKPOINT_ADDRESS = 0x84,};
enum MACRO_KEYWORD {KEYWORD_HANDLER_NO_ERROR = 0x0,KEYWORD_HANDLER_NAMESPACE_ID_NOT_FOUND = 0x1,KEYWORD_HANDLER_MALFORMED_STRING = 0x2,KEYWORD_HANDLER_KEYWORD_NOT_FOUND = 0x4,KEYWORD_HANDLER_INCOMPATIBLE_VALUE_DETECTED = 0x8,KEYWORD_HANDLER_ACCESS_NOT_PERMITTED = 0x10,KEYWORD_HANDLER_UNDEFINED_PROCESSING_ERROR = 0x80000000,};
enum MACRO_MAXIMUM {MAXIMUM_VALUE_CHARACTERS = 38,};
enum MACRO_MAX_ALG {MAX_ALG_LIST_SIZE = 64,};
enum MACRO_MAX_ARM {MAX_ARM_EXCEPTION = 7,};
enum MACRO_MAX_EBC {MAX_EBC_EXCEPTION = 10,};
enum MACRO_MAX_IDE {MAX_IDE_CONTROLLER = 8,};
enum MACRO_MAX_MBR {MAX_MBR_PARTITIONS = 4,};
enum MACRO_MAX_PCI {MAX_PCI_CONFIG_LEN = 64,MAX_EEPROM_LEN = 128,MAX_XMIT_BUFFERS = 32,MAX_MCAST_ADDRESS_CNT = 8,};
enum MACRO_MAX_PCR {MAX_PCR_INDEX = 23,};
enum MACRO_MAX_RSA {MAX_RSA_KEY_BITS = 2048,MAX_RSA_KEY_BYTES = 256,MAX_ECC_KEY_BITS = 256,MAX_ECC_KEY_BYTES = 32,MAX_AES_KEY_BITS = 128,MAX_AES_BLOCK_SIZE_BYTES = 16,MAX_AES_KEY_BYTES = 16,MAX_SM4_KEY_BITS = 128,MAX_SM4_BLOCK_SIZE_BYTES = 16,MAX_SM4_KEY_BYTES = 16,MAX_SYM_KEY_BITS = 128,MAX_SYM_KEY_BYTES = 16,MAX_SYM_BLOCK_SIZE = 16,};
enum MACRO_MSG_I2O {MSG_I2O_DP = 0x6,MSG_MAC_ADDR_DP = 0xB,MSG_IPv4_DP = 0xC,MSG_IPv6_DP = 0xD,MSG_INFINIBAND_DP = 0x9,};
enum MACRO_NET_MAP {NET_MAP_INCREAMENT = 64,NET_BUF_SIGNATURE = 1718968942,NET_VECTOR_SIGNATURE = 1667593838,NET_QUE_SIGNATURE = 1970365038,NET_PROTO_DATA = 64,NET_BUF_HEAD = 1,NET_BUF_TAIL = 0,NET_VECTOR_OWN_FIRST = 1,};
enum MACRO_ORDERLY {ORDERLY_BITS = 8,};
enum MACRO_PACKAGE {PACKAGE_ATTRIBUTE_VERSION_UPDATABLE = 0x1,PACKAGE_ATTRIBUTE_RESET_REQUIRED = 0x2,PACKAGE_ATTRIBUTE_AUTHENTICATION_REQUIRED = 0x4,};
enum MACRO_PCI_BUS {PCI_BUS_NUMBER_ICH = 0x0,PCI_DEVICE_NUMBER_ICH_LPC = 0x1F,PCI_FUNCTION_NUMBER_ICH_LPC = 0x0,};
enum MACRO_PEI_ICH {PEI_ICH_IDE_NONE = 0x0,PEI_ICH_IDE_PRIMARY = 0x1,PEI_ICH_IDE_SECONDARY = 0x2,PEI_ICH_SATA_NONE = 0x4,PEI_ICH_SATA_PRIMARY = 0x8,PEI_ICH_SATA_SECONDARY = 0x10,PEI_UHCI_CONTROLLER = 0x1,PEI_OHCI_CONTROLLER = 0x2,PEI_EHCI_CONTROLLER = 0x3,PEI_XHCI_CONTROLLER = 0x4,};
enum MACRO_PRIMARY {PRIMARY_PART_HEADER_LBA = 1,};
enum MACRO_PRIVATE {PRIVATE_VENDOR_SPECIFIC_BYTES = 640,};
enum MACRO_QF_TIME {QF_TIME_HOUR_SUPPRESS = 0x1,QF_TIME_MINUTE_SUPPRESS = 0x2,QF_TIME_SECOND_SUPPRESS = 0x4,QF_TIME_STORAGE = 0x30,QF_TIME_STORAGE_NORMAL = 0x0,QF_TIME_STORAGE_TIME = 0x10,QF_TIME_STORAGE_WAKEUP = 0x20,};
enum MACRO_RC_WARN {RC_WARN = 0x900,};
enum MACRO_TPM_CAP {TPM_CAP_PROP_CONTEXT_DIST = 0x11B,TPM_CAP_PROP_DAA_INTERRUPT = 0x11C,TPM_CAP_PROP_SESSIONS = 0x11D,TPM_CAP_PROP_MAX_SESSIONS = 0x11E,TPM_CAP_PROP_CMK_RESTRICTION = 0x11F,TPM_CAP_PROP_DURATION = 0x120,TPM_CAP_PROP_ACTIVE_COUNTER = 0x122,TPM_CAP_PROP_MAX_NV_AVAILABLE = 0x123,TPM_CAP_PROP_INPUT_BUFFER = 0x124,TPM_SET_PERM_FLAGS = 0x1,TPM_SET_PERM_DATA = 0x2,TPM_SET_STCLEAR_FLAGS = 0x3,TPM_SET_STCLEAR_DATA = 0x4,TPM_SET_STANY_FLAGS = 0x5,TPM_SET_STANY_DATA = 0x6,TPM_DA_ACTION_FAILURE_MODE = 0x8,TPM_DA_ACTION_DEACTIVATE = 0x4,TPM_DA_ACTION_DISABLE = 0x2,TPM_DA_ACTION_TIMEOUT = 0x1,TPM_DA_STATE_INACTIVE = 0x0,TPM_DA_STATE_ACTIVE = 0x1,TPM_DAA_SIZE_r0 = 0x2B,TPM_DAA_SIZE_r1 = 0x2B,TPM_DAA_SIZE_r2 = 0x80,TPM_DAA_SIZE_r3 = 0xA8,TPM_DAA_SIZE_r4 = 0xDB,TPM_DAA_SIZE_NT = 0x14,TPM_DAA_SIZE_v0 = 0x80,TPM_DAA_SIZE_v1 = 0xC0,TPM_DAA_SIZE_NE = 0x100,TPM_DAA_SIZE_w = 0x100,TPM_DAA_SIZE_issuerModulus = 0x100,TPM_DAA_power0 = 0x68,TPM_DAA_power1 = 0x400,TPM_REDIR_GPIO = 0x1,};
enum MACRO_WORKING {WORKING_BLOCK_VALID = 0x1,WORKING_BLOCK_INVALID = 0x2,};
typedef struct _388A0A822047BCA9116365DAF41AB443 MEMORY_DEVICE;
typedef struct _MTRR_SETTINGS_ MTRR_SETTINGS;
typedef struct _B54899351EF7B33BF0507C4E1D20B79A NET_BUF_QUEUE;
typedef struct _977E3E064D7534F4B455022DDA6963C0 PCI_COMP_INFO;
typedef struct _EFI_SIO_INFO *PEFI_SIO_INFO;
typedef INPUT_RECORD *PINPUT_RECORD;
typedef struct _DF4487F9FF56DB1070FB86D3C5DEA292 PROTOCOL_INFO;
typedef struct s_pxe_db_nvdata PXE_DB_NVDATA;
typedef struct tdTCG_PCR_EVENT TCG_PCR_EVENT;
typedef struct _CC1DB6E4372870F41C66C79D6A501D01 TPM2B_PRIVATE;
typedef struct _AE16DBD85043B20BDA4ABD45345AC744 TPM2B_SYM_KEY;
typedef struct _AD263D7C0C927523A3D26C1277C0100F TPM2B_TIMEOUT;
typedef struct _2D0A6C92B66271E9401738EEEFEBE79C TPMA_LOCALITY;
typedef union _F1C594884B56499A144068841DCCBD9C TPMU_SYM_MODE;
typedef struct tdTPM_KEY_PARMS TPM_KEY_PARMS;
typedef struct tdTPM_SIGN_INFO TPM_SIGN_INFO;
typedef struct _34C4AA3B6BDC0960B7F24D4539248B78 UDP_END_POINT;
typedef struct _18FF71C523EE0E659FF9048C9ADED567 VARIABLE_HEAD;
typedef struct _4E2DDC218E68011859DBCA0F5D8383DB VARIABLE_MTRR;
typedef struct _D21600D66FC6D272348927E5C05F5461 COMMAND_LIST;
struct COMMTIMEOUTS;
typedef struct _3D90DC302D39627B69518384DF4F2103 DXE_SERVICES;
typedef struct _54E38EAA5065929F8A713E64281272CF EFILDR_IMAGE;
typedef struct _FD5F374D24F14A6FD6462F294476DE9F EFI_ATA_MODE;
typedef struct _AF7F7AD21AC17C6E716F27057D264F4D EFI_BIS_DATA;
typedef union _34000335362FFFA4AA2EC6446A30E5B3 EFI_DEV_PATH;
typedef struct _B986BC8AB1E2DF0C026584965AA8D100 EFI_DHCP6_IA;
typedef struct tdEFI_GPT_DATA EFI_GPT_DATA;
typedef struct _873F0BF6A4610C6D0FECF44220B1B459 EFI_HII_DATE;
typedef struct _AB1521D88F443A509348BCDC539B84B9 EFI_HII_TIME;
typedef struct _EFI_IFR_DATE EFI_IFR_DATE;
typedef struct _EFI_IFR_FIND EFI_IFR_FIND;
typedef struct _EFI_IFR_FORM EFI_IFR_FORM;
typedef struct _EFI_IFR_GUID EFI_IFR_GUID;
typedef struct _EFI_IFR_ONES EFI_IFR_ONES;
typedef struct _EFI_IFR_READ EFI_IFR_READ;
typedef struct _EFI_IFR_REF2 EFI_IFR_REF2;
typedef struct _EFI_IFR_REF3 EFI_IFR_REF3;
typedef struct _EFI_IFR_REF4 EFI_IFR_REF4;
typedef struct _EFI_IFR_REF5 EFI_IFR_REF5;
typedef struct _EFI_IFR_RULE EFI_IFR_RULE;
typedef struct _EFI_IFR_SPAN EFI_IFR_SPAN;
typedef struct _EFI_IFR_TEXT EFI_IFR_TEXT;
typedef struct _EFI_IFR_THIS EFI_IFR_THIS;
typedef struct _EFI_IFR_TIME EFI_IFR_TIME;
typedef struct _EFI_IFR_TRUE EFI_IFR_TRUE;
typedef struct _EFI_IFR_ZERO EFI_IFR_ZERO;
typedef struct _27CFB8A34AF8CAFEC925675D8C64A4A1 EFI_KEY_DATA;
typedef struct _5F39539F893D2EC61BF82E07B9E9DB3E EFI_PCD_INFO;
typedef struct _EFI_SIO_INFO EFI_SIO_INFO;
typedef void (*EXIT_DISPLAY)(void);
typedef void (*EXIT_HANDLER)(void);
typedef struct _BC00DB91D6EAEDBED7A9E912894394C9 GROUP_STRUCT;
struct INPUT_RECORD;
typedef OVERLAPPED *LPOVERLAPPED;
typedef SYSTEMTIME *LPSYSTEMTIME;
enum MACRO_ACCESS {ACCESS_INDEXIO_1INDEX8BIT_DATA8BIT = 0x0,ACCESS_INDEXIO_2INDEX8BIT_DATA8BIT = 0x1,ACCESS_INDEXIO_1INDEX16BIT_DATA8BIT = 0x2,ACCESS_MEMORY_MAPPED = 0x3,ACCESS_GPNV = 0x4,};
enum MACRO_ACTIVE {ACTIVE_SESSION_LAST = 50331711,TRANSIENT_LAST = 2147483650,};
enum MACRO_BUFFER {BUFFER_ALIGNMENT = 4,};
enum MACRO_DEVICE {TO_AND_FROM_DEVICE = 0,FROM_DEVICE = 1,TO_DEVICE = 2,};
enum MACRO_EFILDR {EFILDR_BASE_SEGMENT = 0x2000,EFILDR_LOAD_ADDRESS = 0x20000,EFILDR_HEADER_ADDRESS = 0x22000,EFILDR_CB_VA = 0x0,};
enum MACRO_EFI_FV {EFI_FV_FILETYPE_ALL = 0x0,EFI_FV_FILETYPE_RAW = 0x1,EFI_FV_FILETYPE_FREEFORM = 0x2,EFI_FV_FILETYPE_SECURITY_CORE = 0x3,EFI_FV_FILETYPE_PEI_CORE = 0x4,EFI_FV_FILETYPE_DXE_CORE = 0x5,EFI_FV_FILETYPE_PEIM = 0x6,EFI_FV_FILETYPE_DRIVER = 0x7,EFI_FV_FILETYPE_COMBINED_PEIM_DRIVER = 0x8,EFI_FV_FILETYPE_APPLICATION = 0x9,EFI_FV_FILETYPE_SMM = 0xA,EFI_FV_FILETYPE_FIRMWARE_VOLUME_IMAGE = 0xB,EFI_FV_FILETYPE_COMBINED_SMM_DXE = 0xC,EFI_FV_FILETYPE_SMM_CORE = 0xD,EFI_FV_FILETYPE_OEM_MIN = 0xC0,EFI_FV_FILETYPE_OEM_MAX = 0xDF,EFI_FV_FILETYPE_DEBUG_MIN = 0xE0,EFI_FV_FILETYPE_DEBUG_MAX = 0xEF,EFI_FV_FILETYPE_FFS_MIN = 0xF0,EFI_FV_FILETYPE_FFS_MAX = 0xFF,EFI_FV_FILETYPE_FFS_PAD = 0xF0,};
enum MACRO_EFI_IP {EFI_IP_PROTO_UDP = 0x11,EFI_IP_PROTO_TCP = 0x6,EFI_IP_PROTO_ICMP = 0x1,};
enum MACRO_EFI_MP {EFI_MP_HEALTH_FLAGS_STATUS_HEALTHY = 0x0,EFI_MP_HEALTH_FLAGS_STATUS_PERFORMANCE_RESTRICTED = 0x1,EFI_MP_HEALTH_FLAGS_STATUS_FUNCTIONALLY_RESTRICTED = 0x2,EFI_COMPATIBILITY16_TABLE_SIGNATURE = 0x24454649,};
enum MACRO_EFI_OS {EFI_OS_INDICATIONS_BOOT_TO_FW_UI = 0x1,EFI_OS_INDICATIONS_TIMESTAMP_REVOCATION = 0x2,EFI_OS_INDICATIONS_FILE_CAPSULE_DELIVERY_SUPPORTED = 0x4,EFI_OS_INDICATIONS_FMP_CAPSULE_SUPPORTED = 0x8,EFI_OS_INDICATIONS_CAPSULE_RESULT_VAR_SUPPORTED = 0x10,EFI_SYSTEM_TABLE_SIGNATURE = 0x5453595320494249,EFI_2_50_SYSTEM_TABLE_REVISION = 0x20032,EFI_2_40_SYSTEM_TABLE_REVISION = 0x20028,EFI_2_31_SYSTEM_TABLE_REVISION = 0x2001F,EFI_2_30_SYSTEM_TABLE_REVISION = 0x2001E,EFI_2_20_SYSTEM_TABLE_REVISION = 0x20014,EFI_2_10_SYSTEM_TABLE_REVISION = 0x2000A,EFI_2_00_SYSTEM_TABLE_REVISION = 0x20000,EFI_1_10_SYSTEM_TABLE_REVISION = 0x1000A,EFI_1_02_SYSTEM_TABLE_REVISION = 0x10002,EFI_SYSTEM_TABLE_REVISION = 0x20032,EFI_SPECIFICATION_VERSION = 0x20032,EFI_RUNTIME_SERVICES_SIGNATURE = 0x56524553544E5552,EFI_RUNTIME_SERVICES_REVISION = 0x20032,EFI_BOOT_SERVICES_SIGNATURE = 0x56524553544F4F42,EFI_BOOT_SERVICES_REVISION = 0x20032,};
enum MACRO_EFI_SW {EFI_SW_AL_PC_ENTRY_POINT = 0x1000,EFI_SW_AL_PC_RETURN_TO_LAST = 0x1001,EFI_SW_CSM_LEGACY_ROM_INIT = 0x1000,EFI_CPU_CAUSE_NOT_DISABLED = 0x0,EFI_SW_PEIM_PC_RECOVERY_BEGIN = 0x1000,EFI_SW_PEIM_PC_CAPSULE_LOAD = 0x1001,EFI_SW_PEIM_PC_CAPSULE_START = 0x1002,EFI_SW_PEIM_PC_RECOVERY_USER = 0x1003,EFI_SW_PEIM_PC_RECOVERY_AUTO = 0x1004,EFI_SW_PEIM_CORE_EC_DXE_CORRUPT = 0x1000,EFI_SW_PEIM_CORE_EC_DXEIPL_NOT_FOUND = 0x1001,EFI_EVENT_RUNTIME_CONTEXT = 0x20000000,EFI_EVENT_NOTIFY_SIGNAL_ALL = 0x400,EFI_EVENT_SIGNAL_READY_TO_BOOT = 0x203,EFI_EVENT_SIGNAL_LEGACY_BOOT = 0x204,};
enum MACRO_EFI_TE {EFI_TE_IMAGE_HEADER_SIGNATURE = 23126,EFI_TE_IMAGE_DIRECTORY_ENTRY_BASERELOC = 0,EFI_TE_IMAGE_DIRECTORY_ENTRY_DEBUG = 1,};
enum MACRO_EFI_TO {EFI_TO_LEGACY_MAJOR_VERSION = 0x2,EFI_TO_LEGACY_MINOR_VERSION = 0x0,};
enum MACRO_EINVAL {EINVAL = 22,BUFSIZ = 1024,};
enum MACRO_END_OF {END_OF_CPU_LIST = 0xFFFFFFFF,};
enum MACRO_ENOMEM {ENOMEM = 12,};
enum MACRO_EXCEPT {EXCEPT_IA32_DIVIDE_ERROR = 0,EXCEPT_IA32_DEBUG = 1,EXCEPT_IA32_NMI = 2,EXCEPT_IA32_BREAKPOINT = 3,EXCEPT_IA32_OVERFLOW = 4,EXCEPT_IA32_BOUND = 5,EXCEPT_IA32_INVALID_OPCODE = 6,EXCEPT_IA32_DOUBLE_FAULT = 8,EXCEPT_IA32_INVALID_TSS = 10,EXCEPT_IA32_SEG_NOT_PRESENT = 11,EXCEPT_IA32_STACK_FAULT = 12,EXCEPT_IA32_GP_FAULT = 13,EXCEPT_IA32_PAGE_FAULT = 14,EXCEPT_IA32_FP_ERROR = 16,EXCEPT_IA32_ALIGNMENT_CHECK = 17,EXCEPT_IA32_MACHINE_CHECK = 18,EXCEPT_IA32_SIMD = 19,EXCEPT_X64_DIVIDE_ERROR = 0,EXCEPT_X64_DEBUG = 1,EXCEPT_X64_NMI = 2,EXCEPT_X64_BREAKPOINT = 3,EXCEPT_X64_OVERFLOW = 4,EXCEPT_X64_BOUND = 5,EXCEPT_X64_INVALID_OPCODE = 6,EXCEPT_X64_DOUBLE_FAULT = 8,EXCEPT_X64_INVALID_TSS = 10,EXCEPT_X64_SEG_NOT_PRESENT = 11,EXCEPT_X64_STACK_FAULT = 12,EXCEPT_X64_GP_FAULT = 13,EXCEPT_X64_PAGE_FAULT = 14,EXCEPT_X64_FP_ERROR = 16,EXCEPT_X64_ALIGNMENT_CHECK = 17,EXCEPT_X64_MACHINE_CHECK = 18,EXCEPT_X64_SIMD = 19,EXCEPT_IPF_VHTP_TRANSLATION = 0,EXCEPT_IPF_INSTRUCTION_TLB = 1,EXCEPT_IPF_DATA_TLB = 2,EXCEPT_IPF_ALT_INSTRUCTION_TLB = 3,EXCEPT_IPF_ALT_DATA_TLB = 4,EXCEPT_IPF_DATA_NESTED_TLB = 5,EXCEPT_IPF_INSTRUCTION_KEY_MISSED = 6,EXCEPT_IPF_DATA_KEY_MISSED = 7,EXCEPT_IPF_DIRTY_BIT = 8,EXCEPT_IPF_INSTRUCTION_ACCESS_BIT = 9,EXCEPT_IPF_DATA_ACCESS_BIT = 10,EXCEPT_IPF_BREAKPOINT = 11,EXCEPT_IPF_EXTERNAL_INTERRUPT = 12,EXCEPT_IPF_PAGE_NOT_PRESENT = 20,EXCEPT_IPF_KEY_PERMISSION = 21,EXCEPT_IPF_INSTRUCTION_ACCESS_RIGHTS = 22,EXCEPT_IPF_DATA_ACCESS_RIGHTS = 23,EXCEPT_IPF_GENERAL_EXCEPTION = 24,EXCEPT_IPF_DISABLED_FP_REGISTER = 25,EXCEPT_IPF_NAT_CONSUMPTION = 26,EXCEPT_IPF_SPECULATION = 27,EXCEPT_IPF_DEBUG = 29,EXCEPT_IPF_UNALIGNED_REFERENCE = 30,EXCEPT_IPF_UNSUPPORTED_DATA_REFERENCE = 31,EXCEPT_IPF_FP_FAULT = 32,EXCEPT_IPF_FP_TRAP = 33,EXCEPT_IPF_LOWER_PRIVILEGE_TRANSFER_TRAP = 34,EXCEPT_IPF_TAKEN_BRANCH = 35,EXCEPT_IPF_SINGLE_STEP = 36,EXCEPT_IPF_IA32_EXCEPTION = 45,EXCEPT_IPF_IA32_INTERCEPT = 46,EXCEPT_IPF_IA32_INTERRUPT = 47,EXCEPT_EBC_UNDEFINED = 0,EXCEPT_EBC_DIVIDE_ERROR = 1,EXCEPT_EBC_DEBUG = 2,EXCEPT_EBC_BREAKPOINT = 3,EXCEPT_EBC_OVERFLOW = 4,EXCEPT_EBC_INVALID_OPCODE = 5,EXCEPT_EBC_STACK_FAULT = 6,EXCEPT_EBC_ALIGNMENT_CHECK = 7,EXCEPT_EBC_INSTRUCTION_ENCODING = 8,EXCEPT_EBC_BAD_BREAK = 9,EXCEPT_EBC_STEP = 10,};
enum MACRO_HEADER {HEADER_TYPE_DEVICE = 0x0,HEADER_TYPE_PCI_TO_PCI_BRIDGE = 0x1,HEADER_TYPE_CARDBUS_BRIDGE = 0x2,HEADER_TYPE_MULTI_FUNCTION = 0x80,HEADER_LAYOUT_CODE = 0x7F,};
enum MACRO_IOAPIC {IOAPIC_INDEX_OFFSET = 0x0,IOAPIC_DATA_OFFSET = 0x10,};
enum MACRO_LEGACY {LEGACY_USED = 0xFE,};
enum MACRO_LOADED {LOADED_SESSION_FIRST = 33554432,LOADED_SESSION_LAST = 33554495,};
enum MACRO_MEMORY {MEMORY_PROFILE_CONTEXT_SIGNATURE = 1413697613,MEMORY_PROFILE_CONTEXT_REVISION = 2,MEMORY_PROFILE_DRIVER_INFO_SIGNATURE = 1229213773,MEMORY_PROFILE_DRIVER_INFO_REVISION = 2,MEMORY_PROFILE_ALLOC_INFO_SIGNATURE = 1229017165,MEMORY_PROFILE_ALLOC_INFO_REVISION = 1,MEMORY_PROFILE_DESCRIPTOR_SIGNATURE = 1380208717,MEMORY_PROFILE_DESCRIPTOR_REVISION = 1,MEMORY_PROFILE_FREE_MEMORY_SIGNATURE = 1297240141,MEMORY_PROFILE_FREE_MEMORY_REVISION = 1,MEMORY_PROFILE_MEMORY_RANGE_SIGNATURE = 1380798541,MEMORY_PROFILE_MEMORY_RANGE_REVISION = 1,};
enum MACRO_NARROW {NARROW_CHAR = 0xFFF0,WIDE_CHAR = 0xFFF1,NON_BREAKING_CHAR = 0xFFF2,};
enum MACRO_NO_ROM {NO_ROM = 0x0,};
enum MACRO_PCI_IF {PCI_IF_MASS_STORAGE_SCSI_VENDOR_SPECIFIC = 0x0,PCI_IF_MASS_STORAGE_SCSI_DEVICE_PQI = 0x11,PCI_IF_MASS_STORAGE_SCSI_CONTROLLER_PQI = 0x12,PCI_IF_MASS_STORAGE_SCSI_DEVICE_CONTROLLER_PQI = 0x13,PCI_IF_MASS_STORAGE_SCSI_DEVICE_NVM_EXPRESS = 0x21,PCI_IF_MASS_STORAGE_SATA_SERIAL_BUS = 0x2,PCI_CLASS_MASS_STORAGE_SAS = 0x7,PCI_IF_MASS_STORAGE_SAS = 0x0,PCI_IF_MASS_STORAGE_SAS_SERIAL_BUS = 0x1,PCI_CLASS_MASS_STORAGE_SOLID_STATE = 0x8,PCI_IF_MASS_STORAGE_SOLID_STATE = 0x0,PCI_IF_MASS_STORAGE_SOLID_STATE_NVMHCI = 0x1,PCI_IF_MASS_STORAGE_SOLID_STATE_ENTERPRISE_NVMHCI = 0x2,PCI_CLASS_NETWORK_INFINIBAND = 0x7,PCI_CLASS_MEDIA_MIXED_MODE = 0x3,PCI_CLASS_BRIDGE_ADVANCED_SWITCHING_TO_PCI = 0xB,PCI_IF_BRIDGE_ADVANCED_SWITCHING_TO_PCI_CUSTOM = 0x0,PCI_IF_BRIDGE_ADVANCED_SWITCHING_TO_PCI_ASI_SIG = 0x1,PCI_IF_HPET = 0x3,PCI_SUBCLASS_SD_HOST_CONTROLLER = 0x5,PCI_SUBCLASS_IOMMU = 0x6,PCI_SUBCLASS_PROC_OTHER = 0x80,PCI_IF_XHCI = 0x30,PCI_CLASS_SERIAL_OTHER = 0x80,PCI_SUBCLASS_SATELLITE_OTHER = 0x80,PCI_CLASS_PROCESSING_ACCELERATOR = 0x12,};
enum MACRO_POLICY {POLICY_SESSION_FIRST = 50331648,POLICY_SESSION_LAST = 50331711,};
enum MACRO_PREFIX {PREFIX_ZERO = 0x20,};
enum MACRO_PT_VAR {PT_VAR = 512,};
enum MACRO_RC_MAX {RC_MAX_FM0 = 383,RC_FMT1 = 128,};
enum MACRO_REPORT {REPORT_STATUS_CODE_PROPERTY_PROGRESS_CODE_ENABLED = 0x1,REPORT_STATUS_CODE_PROPERTY_ERROR_CODE_ENABLED = 0x2,REPORT_STATUS_CODE_PROPERTY_DEBUG_CODE_ENABLED = 0x4,};
enum MACRO_RETURN {RETURN_SUCCESS = 0,RETURN_LOAD_ERROR = -9223372036854775807,RETURN_INVALID_PARAMETER = -9223372036854775806,RETURN_UNSUPPORTED = -9223372036854775805,RETURN_BAD_BUFFER_SIZE = -9223372036854775804,RETURN_BUFFER_TOO_SMALL = -9223372036854775803,RETURN_NOT_READY = -9223372036854775802,RETURN_DEVICE_ERROR = -9223372036854775801,RETURN_WRITE_PROTECTED = -9223372036854775800,RETURN_OUT_OF_RESOURCES = -9223372036854775799,RETURN_VOLUME_CORRUPTED = -9223372036854775798,RETURN_VOLUME_FULL = -9223372036854775797,RETURN_NO_MEDIA = -9223372036854775796,RETURN_MEDIA_CHANGED = -9223372036854775795,RETURN_NOT_FOUND = -9223372036854775794,RETURN_ACCESS_DENIED = -9223372036854775793,RETURN_NO_RESPONSE = -9223372036854775792,RETURN_NO_MAPPING = -9223372036854775791,RETURN_TIMEOUT = -9223372036854775790,RETURN_NOT_STARTED = -9223372036854775789,RETURN_ALREADY_STARTED = -9223372036854775788,RETURN_ABORTED = -9223372036854775787,RETURN_ICMP_ERROR = -9223372036854775786,RETURN_TFTP_ERROR = -9223372036854775785,RETURN_PROTOCOL_ERROR = -9223372036854775784,RETURN_INCOMPATIBLE_VERSION = -9223372036854775783,RETURN_SECURITY_VIOLATION = -9223372036854775782,RETURN_CRC_ERROR = -9223372036854775781,RETURN_END_OF_MEDIA = -9223372036854775780,RETURN_END_OF_FILE = -9223372036854775777,RETURN_INVALID_LANGUAGE = -9223372036854775776,RETURN_COMPROMISED_DATA = -9223372036854775775,RETURN_WARN_UNKNOWN_GLYPH = 1,RETURN_WARN_DELETE_FAILURE = 2,RETURN_WARN_WRITE_FAILURE = 3,RETURN_WARN_BUFFER_TOO_SMALL = 4,RETURN_WARN_STALE_DATA = 5,};
enum MACRO_R_ACPI {R_ACPI_PM1_TMR = 0x8,};
enum MACRO_SECURE {SECURE_BOOT_MODE_ENABLE = 1,SECURE_BOOT_MODE_DISABLE = 0,};
enum MACRO_SERIAL {SERIAL_IO_INTERFACE_REVISION = 65536,};
enum MACRO_SHA256 {SHA256_DIGEST_SIZE = 32,SHA256_BLOCK_SIZE = 64,};
enum MACRO_SHA384 {SHA384_DIGEST_SIZE = 48,SHA384_BLOCK_SIZE = 128,};
enum MACRO_SHA512 {SHA512_DIGEST_SIZE = 64,SHA512_BLOCK_SIZE = 128,};
enum MACRO_SMBIOS {SMBIOS_HANDLE_RESERVED_BEGIN = 0xFF00,SMBIOS_HANDLE_PI_RESERVED = 0xFFFE,SMBIOS_STRING_MAX_LENGTH = 0x40,SMBIOS_TYPE_INACTIVE = 0x7E,SMBIOS_TYPE_END_OF_TABLE = 0x7F,};
enum MACRO_SMM_S3 {SMM_S3_RESUME_SMM_32 = 3617339599754186067,SMM_S3_RESUME_SMM_64 = 3762299212760173907,};
enum MACRO_STRING {STRING_TOO_LONG = 0x80000003,};
enum MACRO_TARGET {TARGET_MAX_BYTES = 0x10,};
enum MACRO_TPM_NV {TPM_NV_INDEX_LOCK = 4294967295,TPM_NV_INDEX0 = 0,TPM_NV_INDEX_DIR = 268435457,TPM_NV_INDEX_EKCert = 61440,TPM_NV_INDEX_TPM_CC = 61441,TPM_NV_INDEX_PlatformCert = 61442,TPM_NV_INDEX_Platform_CC = 61443,TPM_NV_INDEX_TSS_BASE = 69888,TPM_NV_INDEX_PC_BASE = 70144,TPM_NV_INDEX_SERVER_BASE = 70400,TPM_NV_INDEX_MOBILE_BASE = 70656,TPM_NV_INDEX_PERIPHERAL_BASE = 70912,TPM_NV_INDEX_GROUP_RESV_BASE = 65536,TPM_NV_PER_READ_STCLEAR = -2147483648,TPM_NV_PER_AUTHREAD = 262144,TPM_NV_PER_OWNERREAD = 131072,TPM_NV_PER_PPREAD = 65536,TPM_NV_PER_GLOBALLOCK = 32768,TPM_NV_PER_WRITE_STCLEAR = 16384,TPM_NV_PER_WRITEDEFINE = 8192,TPM_NV_PER_WRITEALL = 4096,TPM_NV_PER_AUTHWRITE = 4,TPM_NV_PER_OWNERWRITE = 2,TPM_NV_PER_PPWRITE = 1,TPM_DEL_OWNER_BITS = 1,TPM_DEL_KEY_BITS = 2,TPM_DELEGATE_SetOrdinalAuditStatus = 1073741824,TPM_DELEGATE_DirWriteAuth = 536870912,TPM_DELEGATE_CMK_ApproveMA = 268435456,TPM_DELEGATE_NV_WriteValue = 134217728,TPM_DELEGATE_CMK_CreateTicket = 67108864,TPM_DELEGATE_NV_ReadValue = 33554432,TPM_DELEGATE_Delegate_LoadOwnerDelegation = 16777216,TPM_DELEGATE_DAA_Join = 8388608,TPM_DELEGATE_AuthorizeMigrationKey = 4194304,TPM_DELEGATE_CreateMaintenanceArchive = 2097152,TPM_DELEGATE_LoadMaintenanceArchive = 1048576,TPM_DELEGATE_KillMaintenanceFeature = 524288,TPM_DELEGATE_OwnerReadInteralPub = 262144,TPM_DELEGATE_ResetLockValue = 131072,TPM_DELEGATE_OwnerClear = 65536,TPM_DELEGATE_DisableOwnerClear = 32768,TPM_DELEGATE_NV_DefineSpace = 16384,TPM_DELEGATE_OwnerSetDisable = 8192,TPM_DELEGATE_SetCapability = 4096,TPM_DELEGATE_MakeIdentity = 2048,TPM_DELEGATE_ActivateIdentity = 1024,TPM_DELEGATE_OwnerReadPubek = 512,TPM_DELEGATE_DisablePubekRead = 256,TPM_DELEGATE_SetRedirection = 128,TPM_DELEGATE_FieldUpgrade = 64,TPM_DELEGATE_Delegate_UpdateVerification = 32,TPM_DELEGATE_CreateCounter = 16,TPM_DELEGATE_ReleaseCounterOwner = 8,TPM_DELEGATE_DelegateManage = 4,TPM_DELEGATE_Delegate_CreateOwnerDelegation = 2,TPM_DELEGATE_DAA_Sign = 1,TPM_KEY_DELEGATE_CMK_ConvertMigration = 268435456,TPM_KEY_DELEGATE_TickStampBlob = 134217728,TPM_KEY_DELEGATE_ChangeAuthAsymStart = 67108864,TPM_KEY_DELEGATE_ChangeAuthAsymFinish = 33554432,TPM_KEY_DELEGATE_CMK_CreateKey = 16777216,TPM_KEY_DELEGATE_MigrateKey = 8388608,TPM_KEY_DELEGATE_LoadKey2 = 4194304,TPM_KEY_DELEGATE_EstablishTransport = 2097152,TPM_KEY_DELEGATE_ReleaseTransportSigned = 1048576,TPM_KEY_DELEGATE_Quote2 = 524288,TPM_KEY_DELEGATE_Sealx = 262144,TPM_KEY_DELEGATE_MakeIdentity = 131072,TPM_KEY_DELEGATE_ActivateIdentity = 65536,TPM_KEY_DELEGATE_GetAuditDigestSigned = 32768,TPM_KEY_DELEGATE_Sign = 16384,TPM_KEY_DELEGATE_CertifyKey2 = 8192,TPM_KEY_DELEGATE_CertifyKey = 4096,TPM_KEY_DELEGATE_CreateWrapKey = 2048,TPM_KEY_DELEGATE_CMK_CreateBlob = 1024,TPM_KEY_DELEGATE_CreateMigrationBlob = 512,TPM_KEY_DELEGATE_ConvertMigrationBlob = 256,TPM_KEY_DELEGATE_CreateKeyDelegation = 128,TPM_KEY_DELEGATE_ChangeAuth = 64,TPM_KEY_DELEGATE_GetPubKey = 32,TPM_KEY_DELEGATE_UnBind = 16,TPM_KEY_DELEGATE_Quote = 8,TPM_KEY_DELEGATE_Unseal = 4,TPM_KEY_DELEGATE_Seal = 2,TPM_KEY_DELEGATE_LoadKey = 1,TPM_DELEGATE_ADMIN_LOCK = 2,TPM_FAMFLAG_ENABLE = 1,TPM_NUM_FAMILY_TABLE_ENTRY_MIN = 8,TPM_NUM_DELEGATE_TABLE_ENTRY_MIN = 2,TPM_FAMILY_CREATE = 1,TPM_FAMILY_ENABLE = 2,TPM_FAMILY_ADMIN = 3,TPM_FAMILY_INVALIDATE = 4,TPM_CAP_ORD = 1,TPM_CAP_ALG = 2,TPM_CAP_PID = 3,TPM_CAP_FLAG = 4,TPM_CAP_PROPERTY = 5,TPM_CAP_VERSION = 6,TPM_CAP_KEY_HANDLE = 7,TPM_CAP_CHECK_LOADED = 8,TPM_CAP_SYM_MODE = 9,TPM_CAP_KEY_STATUS = 12,TPM_CAP_NV_LIST = 13,TPM_CAP_MFR = 16,TPM_CAP_NV_INDEX = 17,TPM_CAP_TRANS_ALG = 18,TPM_CAP_HANDLE = 20,TPM_CAP_TRANS_ES = 21,TPM_CAP_AUTH_ENCRYPT = 23,TPM_CAP_SELECT_SIZE = 24,TPM_CAP_VERSION_VAL = 26,TPM_CAP_FLAG_PERMANENT = 264,TPM_CAP_FLAG_VOLATILE = 265,TPM_CAP_PROP_PCR = 257,TPM_CAP_PROP_DIR = 258,TPM_CAP_PROP_MANUFACTURER = 259,TPM_CAP_PROP_KEYS = 260,TPM_CAP_PROP_MIN_COUNTER = 263,TPM_CAP_PROP_AUTHSESS = 266,TPM_CAP_PROP_TRANSESS = 267,TPM_CAP_PROP_COUNTERS = 268,TPM_CAP_PROP_MAX_AUTHSESS = 269,TPM_CAP_PROP_MAX_TRANSESS = 270,TPM_CAP_PROP_MAX_COUNTERS = 271,TPM_CAP_PROP_MAX_KEYS = 272,TPM_CAP_PROP_OWNER = 273,TPM_CAP_PROP_CONTEXT = 274,TPM_CAP_PROP_MAX_CONTEXT = 275,TPM_CAP_PROP_FAMILYROWS = 276,TPM_CAP_PROP_TIS_TIMEOUT = 277,TPM_CAP_PROP_STARTUP_EFFECT = 278,TPM_CAP_PROP_DELEGATE_ROW = 279,TPM_CAP_PROP_DAA_MAX = 281,};
enum MACRO_TPM_PT {TPM_PT_FAMILY_INDICATOR = 256,TPM_PT_LEVEL = 257,TPM_PT_REVISION = 258,TPM_PT_DAY_OF_YEAR = 259,TPM_PT_YEAR = 260,TPM_PT_MANUFACTURER = 261,TPM_PT_VENDOR_STRING_1 = 262,TPM_PT_VENDOR_STRING_2 = 263,TPM_PT_VENDOR_STRING_3 = 264,TPM_PT_VENDOR_STRING_4 = 265,TPM_PT_VENDOR_TPM_TYPE = 266,TPM_PT_FIRMWARE_VERSION_1 = 267,TPM_PT_FIRMWARE_VERSION_2 = 268,TPM_PT_INPUT_BUFFER = 269,TPM_PT_HR_TRANSIENT_MIN = 270,TPM_PT_HR_PERSISTENT_MIN = 271,TPM_PT_HR_LOADED_MIN = 272,TPM_PT_ACTIVE_SESSIONS_MAX = 273,TPM_PT_PCR_COUNT = 274,TPM_PT_PCR_SELECT_MIN = 275,TPM_PT_CONTEXT_GAP_MAX = 276,TPM_PT_NV_COUNTERS_MAX = 278,TPM_PT_NV_INDEX_MAX = 279,TPM_PT_MEMORY = 280,TPM_PT_CLOCK_UPDATE = 281,TPM_PT_CONTEXT_HASH = 282,TPM_PT_CONTEXT_SYM = 283,TPM_PT_CONTEXT_SYM_SIZE = 284,TPM_PT_ORDERLY_COUNT = 285,TPM_PT_MAX_COMMAND_SIZE = 286,TPM_PT_MAX_RESPONSE_SIZE = 287,TPM_PT_MAX_DIGEST = 288,TPM_PT_MAX_OBJECT_CONTEXT = 289,TPM_PT_MAX_SESSION_CONTEXT = 290,TPM_PT_PS_FAMILY_INDICATOR = 291,TPM_PT_PS_LEVEL = 292,TPM_PT_PS_REVISION = 293,TPM_PT_PS_DAY_OF_YEAR = 294,TPM_PT_PS_YEAR = 295,TPM_PT_SPLIT_MAX = 296,TPM_PT_TOTAL_COMMANDS = 297,TPM_PT_LIBRARY_COMMANDS = 298,TPM_PT_VENDOR_COMMANDS = 299,};
enum MACRO_TPM_RC {TPM_RC_INITIALIZE = 256,TPM_RC_FAILURE = 257,TPM_RC_SEQUENCE = 259,TPM_RC_PRIVATE = 267,TPM_RC_HMAC = 281,TPM_RC_DISABLED = 288,TPM_RC_EXCLUSIVE = 289,TPM_RC_AUTH_TYPE = 292,TPM_RC_AUTH_MISSING = 293,TPM_RC_POLICY = 294,TPM_RC_PCR = 295,TPM_RC_PCR_CHANGED = 296,TPM_RC_UPGRADE = 301,TPM_RC_TOO_MANY_CONTEXTS = 302,TPM_RC_AUTH_UNAVAILABLE = 303,TPM_RC_REBOOT = 304,TPM_RC_UNBALANCED = 305,TPM_RC_COMMAND_SIZE = 322,TPM_RC_COMMAND_CODE = 323,TPM_RC_AUTHSIZE = 324,TPM_RC_AUTH_CONTEXT = 325,TPM_RC_NV_RANGE = 326,TPM_RC_NV_SIZE = 327,TPM_RC_NV_LOCKED = 328,TPM_RC_NV_AUTHORIZATION = 329,TPM_RC_NV_UNINITIALIZED = 330,TPM_RC_NV_SPACE = 331,TPM_RC_NV_DEFINED = 332,TPM_RC_BAD_CONTEXT = 336,TPM_RC_CPHASH = 337,TPM_RC_PARENT = 338,TPM_RC_NEEDS_TEST = 339,TPM_RC_NO_RESULT = 340,TPM_RC_SENSITIVE = 341,};
enum MACRO_VAR_IN {VAR_IN_DELETED_TRANSITION = 0xFE,VAR_DELETED = 0xFD,VAR_HEADER_VALID_ONLY = 0x7F,VAR_ADDED = 0x3F,};
enum MACRO_VENDOR {VENDOR_KEYS_VALID = 1,VENDOR_KEYS_MODIFIED = 0,};
enum MACRO_X2APIC {X2APIC_MSR_BASE_ADDRESS = 0x800,X2APIC_MSR_ICR_ADDRESS = 0x830,};
typedef struct _1BC61AC7E1182BB70CE7EB3AE9DEEC10 NET_BLOCK_OP;
typedef struct _4C11609B2457407E1D40095F665BFD38 NET_FRAGMENT;
typedef struct _92DD745DF4632D6793D56D62C055DD39 NET_MAP_ITEM;
typedef struct _0F2D904792B9EA847A4B26FF6B417642 PAL_VM_INFO1;
typedef struct _BDB77D81536F85D8299C89EBAF86574B PAL_VM_INFO2;
typedef struct _22A2111A59A4E7F8B11ABAF35EC73175 PCD_DATABASE;
typedef struct _068E160FC62FFE8A9A8C3D0DCCD74500 PCD_PROTOCOL;
typedef struct _EFI_SIO_PPI *PEFI_SIO_PPI;
typedef struct _92B466D6FD853B76FDC043D739C0EAE7 SMM_FUNCTION;
enum ShellVersion {SHELL_MAJOR_VERSION = 0x2,SHELL_MINOR_VERSION = 0x1,};
typedef struct _2AB31C5C84D666EC665B67DCDCB65006 TPM2B_ATTEST;
typedef struct _9494D6F578DF86DB7A8186CCEAB2EA6B TPM2B_DIGEST;
typedef struct _DF78B669A5C1A1C1BDE3D8CC445CEA09 TPM2B_PUBLIC;
typedef struct _B123E5742C25A9708371954634D8BB88 TPMA_SESSION;
typedef struct _E3E4B7A8D56AE54705F23ABC4231B6F7 TPMS_CONTEXT;
typedef struct _F54A966A3AD46C3DA1EAD3D96FA6D167 TPMT_SYM_DEF;
typedef struct _474560A1B1DCBD1C24AD6598535B5A26 TPMT_TK_AUTH;
typedef struct tdTPM_CMK_AUTH TPM_CMK_AUTH;
typedef struct tdTPM_DAA_BLOB TPM_DAA_BLOB;
typedef struct tdTPM_PCR_INFO TPM_PCR_INFO;
typedef struct _TREE_VERSION TREE_VERSION;
typedef struct _07D3EF598D540C16FB35D413F0F252D7 UDP_RX_TOKEN;
typedef struct _8BB8C0C20D73A7427CF22D29875A4755 UDP_TX_TOKEN;
typedef struct _BF85A3118A1FF8C651A0C1F778F983B0 BUFFER_LIST;
typedef struct _F76F58FED370FE550FAE95E2DB6495AB EFI_FV_INFO;
typedef struct _E3B7EAE0BB3E863E9704D88F999B9602 EFI_HII_REF;
typedef struct _ECF61D23EA53CCA39F9AEDBD220B29FC EFI_HOB_CPU;
typedef struct _EFI_IFR_ADD EFI_IFR_ADD;
typedef struct _EFI_IFR_AND EFI_IFR_AND;
typedef struct _EFI_IFR_DUP EFI_IFR_DUP;
typedef struct _EFI_IFR_END EFI_IFR_END;
typedef struct _EFI_IFR_GET EFI_IFR_GET;
typedef struct _EFI_IFR_MAP EFI_IFR_MAP;
typedef struct _EFI_IFR_MID EFI_IFR_MID;
typedef struct _EFI_IFR_NOT EFI_IFR_NOT;
typedef struct _EFI_IFR_ONE EFI_IFR_ONE;
typedef struct _EFI_IFR_REF EFI_IFR_REF;
typedef struct _EFI_IFR_SET EFI_IFR_SET;
typedef union _2BC16837220E81124E1F23E51D05BC4D EFI_PCI_PMC;
typedef struct _EFI_SIO_PPI EFI_SIO_PPI;
enum MACRO_AGENT {AGENT_HANDLER_SIGNATURE = 1213482817,};
enum MACRO_ARROW {ARROW_LEFT = 0x2190,ARROW_UP = 0x2191,ARROW_RIGHT = 0x2192,ARROW_DOWN = 0x2193,};
enum MACRO_ATAPI {ATAPI_MAX_DMA_EXT_CMD_SECTORS = 0x10000,ATAPI_MAX_DMA_CMD_SECTORS = 0x100,};
enum MACRO_BIT32 {BIT32 = 0x100000000,BIT33 = 0x200000000,BIT34 = 0x400000000,BIT35 = 0x800000000,BIT36 = 0x1000000000,BIT37 = 0x2000000000,BIT38 = 0x4000000000,BIT39 = 0x8000000000,BIT40 = 0x10000000000,BIT41 = 0x20000000000,BIT42 = 0x40000000000,BIT43 = 0x80000000000,BIT44 = 0x100000000000,BIT45 = 0x200000000000,BIT46 = 0x400000000000,BIT47 = 0x800000000000,BIT48 = 0x1000000000000,BIT49 = 0x2000000000000,BIT50 = 0x4000000000000,BIT51 = 0x8000000000000,BIT52 = 0x10000000000000,BIT53 = 0x20000000000000,BIT54 = 0x40000000000000,BIT55 = 0x80000000000000,BIT56 = 0x100000000000000,BIT57 = 0x200000000000000,BIT58 = 0x400000000000000,BIT59 = 0x800000000000000,BIT60 = 0x1000000000000000,BIT61 = 0x2000000000000000,BIT62 = 0x4000000000000000,BIT63 = 0x8000000000000000,};
enum MACRO_B_ICH {B_ICH_LPC_ACPI_CNT_ACPI_EN = 0x80,};
enum MACRO_CARRY {CARRY_FLAG = 0x1,};
enum MACRO_CDVOL {CDVOL_TYPE_STANDARD = 0x0,CDVOL_TYPE_CODED = 0x1,CDVOL_TYPE_END = 0xFF,};
enum MACRO_CLEAR {CLEAR = 0,};
enum MACRO_COMMA {COMMA_TYPE = 0x8,};
enum MACRO_CPUID {CPUID_SIGNATURE = 0x0,CPUID_VERSION_INFO = 0x1,CPUID_CACHE_PARAMS = 0x4,CPUID_EXTENDED_TOPOLOGY = 0xB,CPUID_EXTENDED_TOPOLOGY_LEVEL_TYPE_INVALID = 0x0,CPUID_EXTENDED_TOPOLOGY_LEVEL_TYPE_SMT = 0x1,CPUID_EXTENDED_TOPOLOGY_LEVEL_TYPE_CORE = 0x2,CPUID_EXTENDED_FUNCTION = 0x80000000,CPUID_VIR_PHY_ADDRESS_SIZE = 0x80000008,};
enum MACRO_DEBUG {DEBUG_PROPERTY_DEBUG_ASSERT_ENABLED = 0x1,DEBUG_PROPERTY_DEBUG_PRINT_ENABLED = 0x2,DEBUG_PROPERTY_DEBUG_CODE_ENABLED = 0x4,DEBUG_PROPERTY_CLEAR_MEMORY_ENABLED = 0x8,DEBUG_PROPERTY_ASSERT_BREAKPOINT_ENABLED = 0x10,DEBUG_PROPERTY_ASSERT_DEADLOOP_ENABLED = 0x20,DEBUG_INIT = 0x1,DEBUG_WARN = 0x2,DEBUG_LOAD = 0x4,DEBUG_FS = 0x8,DEBUG_POOL = 0x10,DEBUG_PAGE = 0x20,DEBUG_INFO = 0x40,DEBUG_DISPATCH = 0x80,DEBUG_VARIABLE = 0x100,DEBUG_BM = 0x400,DEBUG_BLKIO = 0x1000,DEBUG_NET = 0x4000,DEBUG_UNDI = 0x10000,DEBUG_LOADFILE = 0x20000,DEBUG_GCD = 0x100000,DEBUG_CACHE = 0x200000,DEBUG_VERBOSE = 0x400000,DEBUG_ERROR = 0x80000000,};
enum MACRO_EFI_D {EFI_D_INIT = 1,EFI_D_WARN = 2,EFI_D_LOAD = 4,EFI_D_FS = 8,EFI_D_POOL = 16,EFI_D_PAGE = 32,EFI_D_INFO = 64,EFI_D_DISPATCH = 128,EFI_D_VARIABLE = 256,EFI_D_BM = 1024,EFI_D_BLKIO = 4096,EFI_D_NET = 16384,EFI_D_UNDI = 65536,EFI_D_LOADFILE = 131072,EFI_D_EVENT = 524288,EFI_D_VERBOSE = 4194304,EFI_D_ERROR = -2147483648,EFI_SIMPLE_FILE_SYSTEM_PROTOCOL_REVISION = 65536,EFI_FILE_IO_INTERFACE_REVISION = 65536,EFI_FILE_MODE_READ = 1,EFI_FILE_MODE_WRITE = 2,EFI_FILE_MODE_CREATE = -9223372036854775808,EFI_FILE_READ_ONLY = 1,EFI_FILE_HIDDEN = 2,EFI_FILE_SYSTEM = 4,EFI_FILE_RESERVED = 8,EFI_FILE_DIRECTORY = 16,EFI_FILE_ARCHIVE = 32,EFI_FILE_VALID_ATTR = 55,EFI_FILE_PROTOCOL_REVISION = 65536,EFI_FILE_PROTOCOL_REVISION2 = 131072,EFI_FILE_PROTOCOL_LATEST_REVISION = 131072,EFI_FILE_REVISION = 65536,};
enum MACRO_ETHER {ETHER_TYPE_VLAN = 0x8100,};
enum MACRO_FIRST {TRANSIENT_FIRST = 2147483648,ACTIVE_SESSION_FIRST = 50331648,};
enum MACRO_FRONT {FRONT_PAGE_QUESTION_ID = 0x0,FRONT_PAGE_DATA_WIDTH = 0x1,};
enum MACRO_ICMP6 {ICMP6_ERR_UNREACH_NET = 0,ICMP6_ERR_UNREACH_HOST = 1,ICMP6_ERR_UNREACH_PROTOCOL = 2,ICMP6_ERR_UNREACH_PORT = 3,ICMP6_ERR_PACKAGE_TOOBIG = 4,ICMP6_ERR_TIMXCEED_HOPLIMIT = 5,ICMP6_ERR_TIMXCEED_REASS = 6,ICMP6_ERR_PARAMPROB_HEADER = 7,ICMP6_ERR_PARAMPROB_NEXHEADER = 8,ICMP6_ERR_PARAMPROB_IPV6OPTION = 9,};
enum MACRO_IMAGE {IMAGE_FILE_MACHINE_I386 = 0x14C,IMAGE_FILE_MACHINE_IA64 = 0x200,IMAGE_FILE_MACHINE_EBC = 0xEBC,IMAGE_FILE_MACHINE_X64 = 0x8664,IMAGE_FILE_MACHINE_ARMTHUMB_MIXED = 0x1C2,IMAGE_FILE_MACHINE_ARM64 = 0xAA64,};
enum MACRO_INT15 {INT15_D042 = 0x0,};
enum MACRO_ISCSI {ISCSI_LOGIN_OPTION_NO_HEADER_DIGEST = 0x0,ISCSI_LOGIN_OPTION_HEADER_DIGEST_USING_CRC32C = 0x2,ISCSI_LOGIN_OPTION_NO_DATA_DIGEST = 0x0,ISCSI_LOGIN_OPTION_DATA_DIGEST_USING_CRC32C = 0x8,ISCSI_LOGIN_OPTION_AUTHMETHOD_CHAP = 0x0,ISCSI_LOGIN_OPTION_AUTHMETHOD_NON = 0x1000,ISCSI_LOGIN_OPTION_CHAP_BI = 0x0,ISCSI_LOGIN_OPTION_CHAP_UNI = 0x2000,};
enum MACRO_LOCAL {LOCAL_APIC_MODE_XAPIC = 0x1,LOCAL_APIC_MODE_X2APIC = 0x2,};
enum MACRO_MEDIA {MEDIA_DEVICE_PATH = 0x4,MEDIA_HARDDRIVE_DP = 0x1,};
enum MACRO_OWNER {STANDARD_OWNER = 0x0,OEM_OWNER = 0x1,};
enum MACRO_PROOF {PROOF_SIZE = 32,};
enum MACRO_RADIX {RADIX_HEX = 0x80,};
enum MACRO_R_ICH {R_ICH_LPC_ACPI_CNT = 0x44,};
enum MACRO_SCARD {SCARD_AID_MAXSIZE = 0x10,SCARD_CSN_SIZE = 0x10,};
enum MACRO_SHELL {SHELL_FILE_ARG_SIGNATURE = 1717662311,};
enum MACRO_SMART {SMART_CARD_EDGE_PROTOCOL_VERSION_1 = 0x100,};
enum MACRO_SMRAM {SMRAM_PROFILE_COMMAND_GET_PROFILE_INFO = 0x1,SMRAM_PROFILE_COMMAND_GET_PROFILE_DATA = 0x2,SMRAM_PROFILE_COMMAND_REGISTER_IMAGE = 0x3,SMRAM_PROFILE_COMMAND_UNREGISTER_IMAGE = 0x4,};
enum MACRO_TICKS {TICKS_PER_MS = 10000,TICKS_PER_SECOND = 10000000,};
enum MACRO_TIMER {TIMER_PRESCALE = 100000,};
enum MACRO_ULONG {ULONG_MAX = 0xFFFFFFFF,};
enum MACRO_VALID {CDW2_VALID = 0x1,CDW3_VALID = 0x2,CDW10_VALID = 0x4,CDW11_VALID = 0x8,CDW12_VALID = 0x10,CDW13_VALID = 0x20,CDW14_VALID = 0x40,CDW15_VALID = 0x80,};
enum MACRO_XAPIC {XAPIC_ID_OFFSET = 0x20,XAPIC_VERSION_OFFSET = 0x30,XAPIC_EOI_OFFSET = 0xB0,XAPIC_ICR_DFR_OFFSET = 0xE0,XAPIC_SPURIOUS_VECTOR_OFFSET = 0xF0,XAPIC_ICR_LOW_OFFSET = 0x300,XAPIC_ICR_HIGH_OFFSET = 0x310,XAPIC_LVT_TIMER_OFFSET = 0x320,XAPIC_LVT_LINT0_OFFSET = 0x350,XAPIC_LVT_LINT1_OFFSET = 0x360,XAPIC_TIMER_INIT_COUNT_OFFSET = 0x380,XAPIC_TIMER_CURRENT_COUNT_OFFSET = 0x390,XAPIC_TIMER_DIVIDE_CONFIGURATION_OFFSET = 0x3E0,};
typedef union _D157DDF93F430BB7D7000FD375B743F9 NET_IP_HEAD;
struct PAINTSTRUCT;
typedef struct _99481C1AA640EC00BD412A1CA689A01E PAL_TC_INFO;
typedef struct _7E26CD9489C37A85D50C2973C4AF7AA0 PERF_HEADER;
typedef SMALL_RECT *PSMALL_RECT;
typedef struct _UGA_DEVICE *PUGA_DEVICE;
typedef struct s_pxe_hw_undi PXE_HW_UNDI;
typedef union u_pxe_ip_addr PXE_IP_ADDR;
typedef struct s_pxe_sw_undi PXE_SW_UNDI;
typedef struct _DFF60F2A0689B8A7B841535D9A1F0D00 SCRIPT_FILE;
typedef struct _B63C7211F3C075200AACA9CBBD019A89 TCG_VERSION;
typedef struct _527B574472DA6B2ACA7924B57D9DCFDB TPM2B_EVENT;
typedef struct _1E1CF64703927002B617103938E22FA5 TPMA_MEMORY;
typedef struct _9D13FA2F3D4DC3DA2AD12B3B17827103 TPMA_OBJECT;
typedef struct _EEA73679987C372D7777CBD7A073E350 TPML_DIGEST;
typedef struct _C3F4E3F01E6B33F305781F79A91109DF TPML_HANDLE;
typedef struct _F28A51465BCE27322D6C3CE71832DC07 TPMS_ATTEST;
typedef struct _37FE5FDAC942EB6E0E5F2E84772A13B3 TPMT_PUBLIC;
typedef union _9A02540346A735F815445FCE0D2E77D0 TPMU_ATTEST;
typedef struct tdTPM_DAA_TPM TPM_DAA_TPM;
typedef struct tdTPM_DA_INFO TPM_DA_INFO;
typedef struct tdTPM_EK_BLOB TPM_EK_BLOB;
typedef struct tdTPM_VERSION TPM_VERSION;
typedef struct _E193AB1C93E05B1762D23774FC06574E ALIAS_LIST;
struct BITMAPINFO;
typedef struct _B4F231955C2D1055548E7E9782035139 CPUID_INFO;
typedef void *EFI_HANDLE;
typedef struct _EFI_IFR_OR EFI_IFR_OR;
typedef struct _DA66546684685EC3A70FA5A97845B96D ETHER_HEAD;
typedef struct _6EB51CED1E48D524F66C3DACB14CC471 FIXED_MTRR;
typedef struct _LIST_ENTRY LIST_ENTRY;
typedef FILETIME *LPFILETIME;
enum MACRO_ACPI {ACPI_SMALL_ITEM_FLAG = 0x0,ACPI_LARGE_ITEM_FLAG = 0x1,ACPI_SMALL_IRQ_DESCRIPTOR_NAME = 0x4,ACPI_SMALL_DMA_DESCRIPTOR_NAME = 0x5,ACPI_SMALL_START_DEPENDENT_DESCRIPTOR_NAME = 0x6,ACPI_SMALL_END_DEPENDENT_DESCRIPTOR_NAME = 0x7,ACPI_SMALL_IO_PORT_DESCRIPTOR_NAME = 0x8,ACPI_SMALL_FIXED_IO_PORT_DESCRIPTOR_NAME = 0x9,ACPI_SMALL_VENDOR_DEFINED_DESCRIPTOR_NAME = 0xE,ACPI_SMALL_END_TAG_DESCRIPTOR_NAME = 0xF,ACPI_LARGE_24_BIT_MEMORY_RANGE_DESCRIPTOR_NAME = 0x1,ACPI_LARGE_VENDOR_DEFINED_DESCRIPTOR_NAME = 0x4,ACPI_LARGE_32_BIT_MEMORY_RANGE_DESCRIPTOR_NAME = 0x5,ACPI_LARGE_32_BIT_FIXED_MEMORY_RANGE_DESCRIPTOR_NAME = 0x6,ACPI_LARGE_DWORD_ADDRESS_SPACE_DESCRIPTOR_NAME = 0x7,ACPI_LARGE_WORD_ADDRESS_SPACE_DESCRIPTOR_NAME = 0x8,ACPI_LARGE_EXTENDED_IRQ_DESCRIPTOR_NAME = 0x9,ACPI_LARGE_QWORD_ADDRESS_SPACE_DESCRIPTOR_NAME = 0xA,ACPI_IRQ_NOFLAG_DESCRIPTOR = 0x22,ACPI_IRQ_DESCRIPTOR = 0x23,ACPI_DMA_DESCRIPTOR = 0x2A,ACPI_START_DEPENDENT_DESCRIPTOR = 0x30,ACPI_START_DEPENDENT_EX_DESCRIPTOR = 0x31,ACPI_END_DEPENDENT_DESCRIPTOR = 0x38,ACPI_IO_PORT_DESCRIPTOR = 0x47,ACPI_FIXED_LOCATION_IO_PORT_DESCRIPTOR = 0x4B,ACPI_END_TAG_DESCRIPTOR = 0x79,ACPI_24_BIT_MEMORY_RANGE_DESCRIPTOR = 0x81,ACPI_32_BIT_MEMORY_RANGE_DESCRIPTOR = 0x85,ACPI_32_BIT_FIXED_MEMORY_RANGE_DESCRIPTOR = 0x86,ACPI_DWORD_ADDRESS_SPACE_DESCRIPTOR = 0x87,ACPI_WORD_ADDRESS_SPACE_DESCRIPTOR = 0x88,ACPI_EXTENDED_INTERRUPT_DESCRIPTOR = 0x89,ACPI_QWORD_ADDRESS_SPACE_DESCRIPTOR = 0x8A,ACPI_ADDRESS_SPACE_DESCRIPTOR = 0x8A,ACPI_ADDRESS_SPACE_TYPE_MEM = 0x0,ACPI_ADDRESS_SPACE_TYPE_IO = 0x1,ACPI_ADDRESS_SPACE_TYPE_BUS = 0x2,ACPI_TIMER_FREQUENCY = 0x369E99,};
enum MACRO_AUTH {AUTH_VAR_LIB_CONTEXT_IN_STRUCT_VERSION = 0x1,AUTH_VAR_LIB_CONTEXT_OUT_STRUCT_VERSION = 0x1,};
enum MACRO_BASE {BASE_1KB = 0x400,BASE_2KB = 0x800,BASE_4KB = 0x1000,BASE_8KB = 0x2000,BASE_16KB = 0x4000,BASE_32KB = 0x8000,BASE_64KB = 0x10000,BASE_128KB = 0x20000,BASE_256KB = 0x40000,BASE_512KB = 0x80000,BASE_1MB = 0x100000,BASE_2MB = 0x200000,BASE_4MB = 0x400000,BASE_8MB = 0x800000,BASE_16MB = 0x1000000,BASE_32MB = 0x2000000,BASE_64MB = 0x4000000,BASE_128MB = 0x8000000,BASE_256MB = 0x10000000,BASE_512MB = 0x20000000,BASE_1GB = 0x40000000,BASE_2GB = 0xFFFFFFFF80000000,BASE_4GB = 0x100000000,BASE_8GB = 0x200000000,BASE_16GB = 0x400000000,BASE_32GB = 0x800000000,BASE_64GB = 0x1000000000,BASE_128GB = 0x2000000000,BASE_256GB = 0x4000000000,BASE_512GB = 0x8000000000,BASE_1TB = 0x10000000000,BASE_2TB = 0x20000000000,BASE_4TB = 0x40000000000,BASE_8TB = 0x80000000000,BASE_16TB = 0x100000000000,BASE_32TB = 0x200000000000,BASE_64TB = 0x400000000000,BASE_128TB = 0x800000000000,BASE_256TB = 0x1000000000000,BASE_512TB = 0x2000000000000,BASE_1PB = 0x4000000000000,BASE_2PB = 0x8000000000000,BASE_4PB = 0x10000000000000,BASE_8PB = 0x20000000000000,BASE_16PB = 0x40000000000000,BASE_32PB = 0x80000000000000,BASE_64PB = 0x100000000000000,BASE_128PB = 0x200000000000000,BASE_256PB = 0x400000000000000,BASE_512PB = 0x800000000000000,BASE_1EB = 0x1000000000000000,BASE_2EB = 0x2000000000000000,BASE_4EB = 0x4000000000000000,BASE_8EB = 0x8000000000000000,};
enum MACRO_BIT0 {BIT0 = 0x1,BIT1 = 0x2,BIT2 = 0x4,BIT3 = 0x8,BIT4 = 0x10,BIT5 = 0x20,BIT6 = 0x40,BIT7 = 0x80,BIT8 = 0x100,BIT9 = 0x200,BIT10 = 0x400,BIT11 = 0x800,BIT12 = 0x1000,BIT13 = 0x2000,BIT14 = 0x4000,BIT15 = 0x8000,BIT16 = 0x10000,BIT17 = 0x20000,BIT18 = 0x40000,BIT19 = 0x80000,BIT20 = 0x100000,BIT21 = 0x200000,BIT22 = 0x400000,BIT23 = 0x800000,BIT24 = 0x1000000,BIT25 = 0x2000000,BIT26 = 0x4000000,BIT27 = 0x8000000,BIT28 = 0x10000000,BIT29 = 0x20000000,BIT30 = 0x40000000,BIT31 = 0x80000000,};
enum MACRO_BOOL {TRUE = 1,FALSE = 0,};
enum MACRO_BOOT {BOOT_WITH_FULL_CONFIGURATION = 0x0,BOOT_WITH_MINIMAL_CONFIGURATION = 0x1,BOOT_ASSUMING_NO_CONFIGURATION_CHANGES = 0x2,BOOT_WITH_FULL_CONFIGURATION_PLUS_DIAGNOSTICS = 0x3,BOOT_WITH_DEFAULT_SETTINGS = 0x4,BOOT_ON_S4_RESUME = 0x5,BOOT_ON_S5_RESUME = 0x6,BOOT_WITH_MFG_MODE_SETTINGS = 0x7,BOOT_ON_S2_RESUME = 0x10,BOOT_ON_S3_RESUME = 0x11,BOOT_ON_FLASH_UPDATE = 0x12,BOOT_IN_RECOVERY_MODE = 0x20,};
enum MACRO_CALL {NORMAL_BOOT_CALL = 0x0,RECOVERY_CHECK_CALL = 0x3,};
enum MACRO_CHAR {CHAR_NULL = 0x0,CHAR_BACKSPACE = 0x8,CHAR_TAB = 0x9,CHAR_LINEFEED = 0xA,CHAR_CARRIAGE_RETURN = 0xD,};
enum MACRO_DATA {DATA_SIZE_8 = 0x0,DATA_SIZE_16 = 0x1,DATA_SIZE_32 = 0x2,DATA_SIZE_64 = 0x3,};
enum MACRO_ESRT {ESRT_FW_TYPE_UNKNOWN = 0x0,ESRT_FW_TYPE_SYSTEMFIRMWARE = 0x1,ESRT_FW_TYPE_DEVICEFIRMWARE = 0x2,ESRT_FW_TYPE_UEFIDRIVER = 0x3,};
enum MACRO_FLAG {FLAG_NO_PPI_PROVISION = 1,FLAG_NO_PPI_CLEAR = 2,FLAG_NO_PPI_MAINTENANCE = 4,FLAG_RESET_TRACK = 8,};
enum MACRO_FORM {FORM_DISPLAY_ENGINE_STATEMENT_VERSION_1 = 0x10000,FORM_DISPLAY_ENGINE_VERSION_1 = 0x10000,};
enum MACRO_HASH {HASH_COUNT = 5,};
enum MACRO_HMAC {HMAC_SESSION_FIRST = 33554432,HMAC_SESSION_LAST = 33554495,};
enum MACRO_HPET {HPET_GENERAL_CAPABILITIES_ID_OFFSET = 0x0,HPET_GENERAL_CONFIGURATION_OFFSET = 0x10,HPET_GENERAL_INTERRUPT_STATUS_OFFSET = 0x20,HPET_MAIN_COUNTER_OFFSET = 0xF0,HPET_TIMER_CONFIGURATION_OFFSET = 0x100,HPET_TIMER_COMPARATOR_OFFSET = 0x108,HPET_TIMER_MSI_ROUTE_OFFSET = 0x110,HPET_TIMER_STRIDE = 0x20,};
enum MACRO_ICMP {ICMP_V6_DEST_UNREACHABLE = 0x1,ICMP_V6_PACKET_TOO_BIG = 0x2,ICMP_V6_TIME_EXCEEDED = 0x3,ICMP_V6_PARAMETER_PROBLEM = 0x4,ICMP_V6_ECHO_REQUEST = 0x80,ICMP_V6_ECHO_REPLY = 0x81,ICMP_V6_LISTENER_QUERY = 0x82,ICMP_V6_LISTENER_REPORT = 0x83,ICMP_V6_LISTENER_DONE = 0x84,ICMP_V6_ROUTER_SOLICIT = 0x85,ICMP_V6_ROUTER_ADVERTISE = 0x86,ICMP_V6_NEIGHBOR_SOLICIT = 0x87,ICMP_V6_NEIGHBOR_ADVERTISE = 0x88,ICMP_V6_REDIRECT = 0x89,ICMP_V6_LISTENER_REPORT_2 = 0x8F,ICMP_V6_NO_ROUTE_TO_DEST = 0x0,ICMP_V6_COMM_PROHIBITED = 0x1,ICMP_V6_BEYOND_SCOPE = 0x2,ICMP_V6_ADDR_UNREACHABLE = 0x3,ICMP_V6_PORT_UNREACHABLE = 0x4,ICMP_V6_SOURCE_ADDR_FAILED = 0x5,ICMP_V6_ROUTE_REJECTED = 0x6,ICMP_V6_TIMEOUT_HOP_LIMIT = 0x0,ICMP_V6_TIMEOUT_REASSEMBLE = 0x1,ICMP_V6_ERRONEOUS_HEADER = 0x0,ICMP_V6_UNRECOGNIZE_NEXT_HDR = 0x1,ICMP_V6_UNRECOGNIZE_OPTION = 0x2,};
enum MACRO_INIT {INIT_DXE_GAUGE_DATA_ENTRIES = 800,};
enum MACRO_LANG {LANG_RIGHT_TO_LEFT = 0x1,};
enum MACRO_LAST {LAST_ATTEMPT_STATUS_SUCCESS = 0x0,LAST_ATTEMPT_STATUS_ERROR_UNSUCCESSFUL = 0x1,LAST_ATTEMPT_STATUS_ERROR_INSUFFICIENT_RESOURCES = 0x2,LAST_ATTEMPT_STATUS_ERROR_INCORRECT_VERSION = 0x3,LAST_ATTEMPT_STATUS_ERROR_INVALID_FORMAT = 0x4,LAST_ATTEMPT_STATUS_ERROR_AUTH_ERROR = 0x5,LAST_ATTEMPT_STATUS_ERROR_PWR_EVT_AC = 0x6,LAST_ATTEMPT_STATUS_ERROR_PWR_EVT_BATT = 0x7,};
enum MACRO_LEFT {LEFT_JUSTIFY = 0x1,};
enum MACRO_LOAD {LOAD_OPTION_ACTIVE = 0x1,LOAD_OPTION_FORCE_RECONNECT = 0x2,LOAD_OPTION_HIDDEN = 0x8,LOAD_OPTION_CATEGORY = 0x1F00,LOAD_OPTION_CATEGORY_BOOT = 0x0,LOAD_OPTION_CATEGORY_APP = 0x100,};
enum MACRO_LOCK {LOCK_BOX_ATTRIBUTE_RESTORE_IN_PLACE = 1,};
enum MACRO_LONG {LONG_MAX = 2147483647,LONG_MIN = -2147483648,};
enum MACRO_MODE {SETUP_MODE = 1,USER_MODE = 0,};
enum MACRO_MTRR {MTRR_NUMBER_OF_VARIABLE_MTRR = 32,};
enum MACRO_NO_0 {NO = 0,SET = 1,};
enum MACRO_NULL {NULL = 0,};
enum MACRO_NVME {NVME_ADMIN_QUEUE = 0x0,NVME_IO_QUEUE = 0x1,};
enum MACRO_PERF {PERF_TOKEN_SIZE = 28,PERF_TOKEN_LENGTH = 27,PERF_PEI_ENTRY_MAX_NUM = 50,PERF_DATA_MAX_LENGTH = 16384,};
enum MACRO_PORT {PORT_SIZE_8 = 0x0,PORT_SIZE_16 = 0x1,PORT_SIZE_32 = 0x2,PORT_SIZE_64 = 0x3,};
enum MACRO_SATA {SATA_HBA_DIRECT_CONNECT_FLAG = 0x8000,};
enum MACRO_SCAN {SCAN_NULL = 0x0,SCAN_UP = 0x1,SCAN_DOWN = 0x2,SCAN_RIGHT = 0x3,SCAN_LEFT = 0x4,SCAN_HOME = 0x5,SCAN_END = 0x6,SCAN_INSERT = 0x7,SCAN_DELETE = 0x8,SCAN_PAGE_UP = 0x9,SCAN_PAGE_DOWN = 0xA,SCAN_F1 = 0xB,SCAN_F2 = 0xC,SCAN_F3 = 0xD,SCAN_F4 = 0xE,SCAN_F5 = 0xF,SCAN_F6 = 0x10,SCAN_F7 = 0x11,SCAN_F8 = 0x12,SCAN_F9 = 0x13,SCAN_F10 = 0x14,SCAN_ESC = 0x17,};
enum MACRO_SHA1 {SHA1_DIGEST_SIZE = 20,SHA1_BLOCK_SIZE = 64,};
enum MACRO_SIZE {SIZE_1KB = 0x400,SIZE_2KB = 0x800,SIZE_4KB = 0x1000,SIZE_8KB = 0x2000,SIZE_16KB = 0x4000,SIZE_32KB = 0x8000,SIZE_64KB = 0x10000,SIZE_128KB = 0x20000,SIZE_256KB = 0x40000,SIZE_512KB = 0x80000,SIZE_1MB = 0x100000,SIZE_2MB = 0x200000,SIZE_4MB = 0x400000,SIZE_8MB = 0x800000,SIZE_16MB = 0x1000000,SIZE_32MB = 0x2000000,SIZE_64MB = 0x4000000,SIZE_128MB = 0x8000000,SIZE_256MB = 0x10000000,SIZE_512MB = 0x20000000,SIZE_1GB = 0x40000000,SIZE_2GB = 0xFFFFFFFF80000000,SIZE_4GB = 0x100000000,SIZE_8GB = 0x200000000,SIZE_16GB = 0x400000000,SIZE_32GB = 0x800000000,SIZE_64GB = 0x1000000000,SIZE_128GB = 0x2000000000,SIZE_256GB = 0x4000000000,SIZE_512GB = 0x8000000000,SIZE_1TB = 0x10000000000,SIZE_2TB = 0x20000000000,SIZE_4TB = 0x40000000000,SIZE_8TB = 0x80000000000,SIZE_16TB = 0x100000000000,SIZE_32TB = 0x200000000000,SIZE_64TB = 0x400000000000,SIZE_128TB = 0x800000000000,SIZE_256TB = 0x1000000000000,SIZE_512TB = 0x2000000000000,SIZE_1PB = 0x4000000000000,SIZE_2PB = 0x8000000000000,SIZE_4PB = 0x10000000000000,SIZE_8PB = 0x20000000000000,SIZE_16PB = 0x40000000000000,SIZE_32PB = 0x80000000000000,SIZE_64PB = 0x100000000000000,SIZE_128PB = 0x200000000000000,SIZE_256PB = 0x400000000000000,SIZE_512PB = 0x800000000000000,SIZE_1EB = 0x1000000000000000,SIZE_2EB = 0x2000000000000000,SIZE_4EB = 0x4000000000000000,SIZE_8EB = 0x8000000000000000,};
enum MACRO_TCG2 {TCG2_PHYSICAL_PRESENCE_NO_ACTION = 0,TCG2_PHYSICAL_PRESENCE_ENABLE = 1,TCG2_PHYSICAL_PRESENCE_DISABLE = 2,TCG2_PHYSICAL_PRESENCE_CLEAR = 5,TCG2_PHYSICAL_PRESENCE_ENABLE_CLEAR = 14,TCG2_PHYSICAL_PRESENCE_SET_PP_REQUIRED_FOR_CLEAR_TRUE = 17,TCG2_PHYSICAL_PRESENCE_SET_PP_REQUIRED_FOR_CLEAR_FALSE = 18,TCG2_PHYSICAL_PRESENCE_ENABLE_CLEAR_2 = 21,TCG2_PHYSICAL_PRESENCE_ENABLE_CLEAR_3 = 22,TCG2_PHYSICAL_PRESENCE_SET_PCR_BANKS = 23,TCG2_PHYSICAL_PRESENCE_CHANGE_EPS = 24,TCG2_PHYSICAL_PRESENCE_SET_PP_REQUIRED_FOR_CHANGE_PCRS_FALSE = 25,TCG2_PHYSICAL_PRESENCE_SET_PP_REQUIRED_FOR_CHANGE_PCRS_TRUE = 26,TCG2_PHYSICAL_PRESENCE_SET_PP_REQUIRED_FOR_TURN_ON_FALSE = 27,TCG2_PHYSICAL_PRESENCE_SET_PP_REQUIRED_FOR_TURN_ON_TRUE = 28,TCG2_PHYSICAL_PRESENCE_SET_PP_REQUIRED_FOR_TURN_OFF_FALSE = 29,TCG2_PHYSICAL_PRESENCE_SET_PP_REQUIRED_FOR_TURN_OFF_TRUE = 30,TCG2_PHYSICAL_PRESENCE_SET_PP_REQUIRED_FOR_CHANGE_EPS_FALSE = 31,TCG2_PHYSICAL_PRESENCE_SET_PP_REQUIRED_FOR_CHANGE_EPS_TRUE = 32,TCG2_PHYSICAL_PRESENCE_LOG_ALL_DIGESTS = 33,TCG2_PHYSICAL_PRESENCE_DISABLE_ENDORSEMENT_ENABLE_STORAGE_HIERARCHY = 34,TCG2_PHYSICAL_PRESENCE_NO_ACTION_MAX = 34,TCG2_PHYSICAL_PRESENCE_STORAGE_MANAGEMENT_BEGIN = 96,TCG2_PHYSICAL_PRESENCE_ENABLE_BLOCK_SID = 96,TCG2_PHYSICAL_PRESENCE_DISABLE_BLOCK_SID = 97,TCG2_PHYSICAL_PRESENCE_SET_PP_REQUIRED_FOR_ENABLE_BLOCK_SID_FUNC_TRUE = 98,TCG2_PHYSICAL_PRESENCE_SET_PP_REQUIRED_FOR_ENABLE_BLOCK_SID_FUNC_FALSE = 99,TCG2_PHYSICAL_PRESENCE_SET_PP_REQUIRED_FOR_DISABLE_BLOCK_SID_FUNC_TRUE = 100,TCG2_PHYSICAL_PRESENCE_SET_PP_REQUIRED_FOR_DISABLE_BLOCK_SID_FUNC_FALSE = 101,TCG2_PHYSICAL_PRESENCE_VENDOR_SPECIFIC_OPERATION = 128,};
enum MACRO_TREE {TREE_EVENT_LOG_FORMAT_TCG_1_2 = 0x1,TREE_BOOT_HASH_ALG_SHA1 = 0x1,TREE_BOOT_HASH_ALG_SHA256 = 0x2,TREE_BOOT_HASH_ALG_SHA384 = 0x4,TREE_BOOT_HASH_ALG_SHA512 = 0x8,TREE_EXTEND_ONLY = 0x1,TREE_EVENT_HEADER_VERSION = 0x1,};
enum MACRO_UART {UART_FLOW_CONTROL_HARDWARE = 0x1,UART_FLOW_CONTROL_XON_XOFF = 0x10,};
enum MACRO_VLAN {VLAN_TCI_CFI_CANONICAL_MAC = 0,VLAN_TCI_CFI_NON_CANONICAL_MAC = 1,};
typedef struct _01201FCFD96DE29838922AB74111EF6C NET_VECTOR;
typedef struct _2CA9EC6012C6584BFB94BC02F6C66B70 NT_FWH_PPI;
struct OVERLAPPED;
typedef struct _3C65EE24A7D7405EB55CFDAE3ED0C45F PCI_BUS_ID;
typedef struct _46EBA86FEFC5D2D17D3C15CDD470698D PCI_TYPE00;
typedef struct _7114304ACBCFC2CC37D3D31EDBCDC4D6 PCI_TYPE01;
typedef struct _53CD7FEA8F1E7594E1164D776F18E8D1 POOL_PRINT;
typedef union pxe_device PXE_DEVICE;
struct SMALL_RECT;
struct SYSTEMTIME;
typedef struct _392019E8CCB9750AD5665539B6417DAB TPM2B_DATA;
typedef struct _F2D678FC8FC5654A334F5779CED9391B TPM2B_NAME;
typedef struct tdTPM_DIGEST TPM_DIGEST;
typedef struct tdTPM_PUBKEY TPM_PUBKEY;
typedef struct _D2CC7C8315B809F58AD6BC37C9EE51AE TrEE_EVENT;
typedef struct _UGA_DEVICE UGA_DEVICE;
typedef struct _1D0A4F22DA7C3812E451925235ECCAB6 USER_INPUT;
typedef struct _7013F136B8763F60FE72FA74A020DEAE VM_CONTEXT;
struct WNDCLASSEX;
typedef struct _ED528C06F0D57DB23B67217FFB880EAB _ID_OBJECT;
typedef struct _87471D6BC66CEF79FF28070FD078E8D1 BBS_TABLE;
struct CHAR_INFO;
typedef void *EFI_EVENT;
typedef struct _9094725A69D8547E84752F140DA0F190 FR_STRUCT;
typedef COMSTAT *LPCOMSTAT;
enum MACRO_AML {AML_ZERO_OP = 0x0,AML_ONE_OP = 0x1,AML_ALIAS_OP = 0x6,AML_NAME_OP = 0x8,AML_BYTE_PREFIX = 0xA,AML_WORD_PREFIX = 0xB,AML_DWORD_PREFIX = 0xC,AML_STRING_PREFIX = 0xD,AML_QWORD_PREFIX = 0xE,AML_SCOPE_OP = 0x10,AML_BUFFER_OP = 0x11,AML_PACKAGE_OP = 0x12,AML_VAR_PACKAGE_OP = 0x13,AML_METHOD_OP = 0x14,AML_DUAL_NAME_PREFIX = 0x2E,AML_MULTI_NAME_PREFIX = 0x2F,AML_NAME_CHAR_A = 0x41,AML_NAME_CHAR_B = 0x42,AML_NAME_CHAR_C = 0x43,AML_NAME_CHAR_D = 0x44,AML_NAME_CHAR_E = 0x45,AML_NAME_CHAR_F = 0x46,AML_NAME_CHAR_G = 0x47,AML_NAME_CHAR_H = 0x48,AML_NAME_CHAR_I = 0x49,AML_NAME_CHAR_J = 0x4A,AML_NAME_CHAR_K = 0x4B,AML_NAME_CHAR_L = 0x4C,AML_NAME_CHAR_M = 0x4D,AML_NAME_CHAR_N = 0x4E,AML_NAME_CHAR_O = 0x4F,AML_NAME_CHAR_P = 0x50,AML_NAME_CHAR_Q = 0x51,AML_NAME_CHAR_R = 0x52,AML_NAME_CHAR_S = 0x53,AML_NAME_CHAR_T = 0x54,AML_NAME_CHAR_U = 0x55,AML_NAME_CHAR_V = 0x56,AML_NAME_CHAR_W = 0x57,AML_NAME_CHAR_X = 0x58,AML_NAME_CHAR_Y = 0x59,AML_NAME_CHAR_Z = 0x5A,AML_ROOT_CHAR = 0x5C,AML_PARENT_PREFIX_CHAR = 0x5E,AML_NAME_CHAR__ = 0x5F,AML_LOCAL0 = 0x60,AML_LOCAL1 = 0x61,AML_LOCAL2 = 0x62,AML_LOCAL3 = 0x63,AML_LOCAL4 = 0x64,AML_LOCAL5 = 0x65,AML_LOCAL6 = 0x66,AML_LOCAL7 = 0x67,AML_ARG0 = 0x68,AML_ARG1 = 0x69,AML_ARG2 = 0x6A,AML_ARG3 = 0x6B,AML_ARG4 = 0x6C,AML_ARG5 = 0x6D,AML_ARG6 = 0x6E,AML_STORE_OP = 0x70,AML_REF_OF_OP = 0x71,AML_ADD_OP = 0x72,AML_CONCAT_OP = 0x73,AML_SUBTRACT_OP = 0x74,AML_INCREMENT_OP = 0x75,AML_DECREMENT_OP = 0x76,AML_MULTIPLY_OP = 0x77,AML_DIVIDE_OP = 0x78,AML_SHIFT_LEFT_OP = 0x79,AML_SHIFT_RIGHT_OP = 0x7A,AML_AND_OP = 0x7B,AML_NAND_OP = 0x7C,AML_OR_OP = 0x7D,AML_NOR_OP = 0x7E,AML_XOR_OP = 0x7F,AML_NOT_OP = 0x80,AML_FIND_SET_LEFT_BIT_OP = 0x81,AML_FIND_SET_RIGHT_BIT_OP = 0x82,AML_DEREF_OF_OP = 0x83,AML_CONCAT_RES_OP = 0x84,AML_MOD_OP = 0x85,AML_NOTIFY_OP = 0x86,AML_SIZE_OF_OP = 0x87,AML_INDEX_OP = 0x88,AML_MATCH_OP = 0x89,AML_CREATE_DWORD_FIELD_OP = 0x8A,AML_CREATE_WORD_FIELD_OP = 0x8B,AML_CREATE_BYTE_FIELD_OP = 0x8C,AML_CREATE_BIT_FIELD_OP = 0x8D,AML_OBJECT_TYPE_OP = 0x8E,AML_CREATE_QWORD_FIELD_OP = 0x8F,AML_LAND_OP = 0x90,AML_LOR_OP = 0x91,AML_LNOT_OP = 0x92,AML_LEQUAL_OP = 0x93,AML_LGREATER_OP = 0x94,AML_LLESS_OP = 0x95,AML_TO_BUFFER_OP = 0x96,AML_TO_DEC_STRING_OP = 0x97,AML_TO_HEX_STRING_OP = 0x98,AML_TO_INTEGER_OP = 0x99,AML_TO_STRING_OP = 0x9C,AML_COPY_OBJECT_OP = 0x9D,AML_MID_OP = 0x9E,AML_CONTINUE_OP = 0x9F,AML_IF_OP = 0xA0,AML_ELSE_OP = 0xA1,AML_WHILE_OP = 0xA2,AML_NOOP_OP = 0xA3,AML_RETURN_OP = 0xA4,AML_BREAK_OP = 0xA5,AML_BREAK_POINT_OP = 0xCC,AML_ONES_OP = 0xFF,AML_EXT_OP = 0x5B,AML_EXT_MUTEX_OP = 0x1,AML_EXT_EVENT_OP = 0x2,AML_EXT_COND_REF_OF_OP = 0x12,AML_EXT_CREATE_FIELD_OP = 0x13,AML_EXT_LOAD_TABLE_OP = 0x1F,AML_EXT_LOAD_OP = 0x20,AML_EXT_STALL_OP = 0x21,AML_EXT_SLEEP_OP = 0x22,AML_EXT_ACQUIRE_OP = 0x23,AML_EXT_SIGNAL_OP = 0x24,AML_EXT_WAIT_OP = 0x25,AML_EXT_RESET_OP = 0x26,AML_EXT_RELEASE_OP = 0x27,AML_EXT_FROM_BCD_OP = 0x28,AML_EXT_TO_BCD_OP = 0x29,AML_EXT_UNLOAD_OP = 0x2A,AML_EXT_REVISION_OP = 0x30,AML_EXT_DEBUG_OP = 0x31,AML_EXT_FATAL_OP = 0x32,AML_EXT_TIMER_OP = 0x33,AML_EXT_REGION_OP = 0x80,AML_EXT_FIELD_OP = 0x81,AML_EXT_DEVICE_OP = 0x82,AML_EXT_PROCESSOR_OP = 0x83,AML_EXT_POWER_RES_OP = 0x84,AML_EXT_THERMAL_ZONE_OP = 0x85,AML_EXT_INDEX_FIELD_OP = 0x86,AML_EXT_BANK_FIELD_OP = 0x87,AML_EXT_DATA_REGION_OP = 0x88,};
enum MACRO_ATA {ATA_CMD_SOFT_RESET = 0x8,ATA_CMD_PACKET = 0xA0,ATA_CMD_IDENTIFY_DEVICE = 0xA1,ATA_CMD_SERVICE = 0xA2,ATA_CMD_TEST_UNIT_READY = 0x0,ATA_CMD_REQUEST_SENSE = 0x3,ATA_CMD_INQUIRY = 0x12,ATA_CMD_READ_FORMAT_CAPACITY = 0x23,ATA_CMD_READ_CAPACITY = 0x25,ATA_CMD_READ_10 = 0x28,ATA_CMD_WRITE_10 = 0x2A,ATA_CMD_READ_12 = 0xA8,ATA_CMD_WRITE_12 = 0xAA,ATA_CMD_START_STOP_UNIT = 0x1B,ATA_CMD_SUBOP_STOP_DISC = 0x0,ATA_CMD_SUBOP_START_DISC = 0x1,ATA_CMD_SUBOP_EJECT_DISC = 0x2,ATA_CMD_SUBOP_CLOSE_TRAY = 0x3,ATA_CMD_IDENTIFY_DRIVE = 0xEC,ATA_CMD_READ_BUFFER = 0xE4,ATA_CMD_READ_SECTORS = 0x20,ATA_CMD_READ_SECTORS_WITH_RETRY = 0x21,ATA_CMD_READ_LONG = 0x22,ATA_CMD_READ_LONG_WITH_RETRY = 0x23,ATA_CMD_READ_SECTORS_EXT = 0x24,ATA_CMD_FORMAT_TRACK = 0x50,ATA_CMD_WRITE_BUFFER = 0xE8,ATA_CMD_WRITE_SECTORS = 0x30,ATA_CMD_WRITE_SECTORS_WITH_RETRY = 0x31,ATA_CMD_WRITE_LONG = 0x32,ATA_CMD_WRITE_LONG_WITH_RETRY = 0x33,ATA_CMD_WRITE_VERIFY = 0x3C,ATA_CMD_WRITE_SECTORS_EXT = 0x34,ATA_CMD_ACK_MEDIA_CHANGE = 0xDB,ATA_CMD_BOOT_POST_BOOT = 0xDC,ATA_CMD_BOOT_PRE_BOOT = 0xDD,ATA_CMD_CHECK_POWER_MODE = 0x98,ATA_CMD_CHECK_POWER_MODE_ALIAS = 0xE5,ATA_CMD_DOOR_LOCK = 0xDE,ATA_CMD_DOOR_UNLOCK = 0xDF,ATA_CMD_EXEC_DRIVE_DIAG = 0x90,ATA_CMD_IDLE_ALIAS = 0x97,ATA_CMD_IDLE = 0xE3,ATA_CMD_IDLE_IMMEDIATE = 0x95,ATA_CMD_IDLE_IMMEDIATE_ALIAS = 0xE1,ATA_CMD_INIT_DRIVE_PARAM = 0x91,ATA_CMD_RECALIBRATE = 0x10,ATA_CMD_READ_DRIVE_STATE = 0xE9,ATA_CMD_SET_MULTIPLE_MODE = 0xC6,ATA_CMD_READ_VERIFY = 0x40,ATA_CMD_READ_VERIFY_WITH_RETRY = 0x41,ATA_CMD_SEEK = 0x70,ATA_CMD_SET_FEATURES = 0xEF,ATA_CMD_STANDBY = 0x96,ATA_CMD_STANDBY_ALIAS = 0xE2,ATA_CMD_STANDBY_IMMEDIATE = 0x94,ATA_CMD_STANDBY_IMMEDIATE_ALIAS = 0xE0,ATA_CMD_SMART = 0xB0,ATA_CONSTANT_C2 = 0xC2,ATA_CONSTANT_4F = 0x4F,ATA_SMART_ENABLE_OPERATION = 0xD8,ATA_SMART_RETURN_STATUS = 0xDA,ATA_CMD_READ_DMA = 0xC8,ATA_CMD_READ_DMA_WITH_RETRY = 0xC9,ATA_CMD_READ_DMA_EXT = 0x25,ATA_CMD_WRITE_DMA = 0xCA,ATA_CMD_WRITE_DMA_WITH_RETRY = 0xCB,ATA_CMD_WRITE_DMA_EXT = 0x35,ATA_DEFAULT_CTL = 0xA,ATA_DEFAULT_CMD = 0xA0,};
enum MACRO_BBS {BBS_DEVICE_PATH = 0x5,BBS_BBS_DP = 0x1,BBS_TYPE_FLOPPY = 0x1,BBS_TYPE_HARDDRIVE = 0x2,BBS_TYPE_CDROM = 0x3,BBS_TYPE_PCMCIA = 0x4,BBS_TYPE_USB = 0x5,BBS_TYPE_EMBEDDED_NETWORK = 0x6,BBS_TYPE_BEV = 0x80,BBS_TYPE_UNKNOWN = 0xFF,};
enum MACRO_BDS {BDS_LOAD_OPTION_SIGNATURE = 1329816642,BDS_EFI_ACPI_FLOPPY_BOOT = 513,BDS_EFI_MESSAGE_ATAPI_BOOT = 769,BDS_EFI_MESSAGE_SCSI_BOOT = 770,BDS_EFI_MESSAGE_USB_DEVICE_BOOT = 773,BDS_EFI_MESSAGE_SATA_BOOT = 786,BDS_EFI_MESSAGE_MAC_BOOT = 779,BDS_EFI_MESSAGE_MISC_BOOT = 1023,BDS_EFI_MEDIA_HD_BOOT = 1025,BDS_EFI_MEDIA_CDROM_BOOT = 1026,BDS_LEGACY_BBS_BOOT = 1281,BDS_EFI_UNSUPPORT = 65535,};
enum MACRO_BIS {BIS_VERSION_1 = 1,BIS_ALG_DSA = 41,BIS_ALG_RSA_MD5 = 42,BIS_CERT_ID_DSA = 41,BIS_CERT_ID_RSA_MD5 = 42,BIS_CERT_ID_MASK = -8421377,};
enum MACRO_CAP {CAP_PROP_SESSION_DAA = 0x11A,};
enum MACRO_CMD {NORMAL_CMD = 0x0,FUSED_FIRST_CMD = 0x1,FUSED_SECOND_CMD = 0x2,};
enum MACRO_CPU {CPU_STACK_ALIGNMENT = 16,};
enum MACRO_CRT {CRT_FORMAT_RSA = 1,};
enum MACRO_DMI {DMI_PNP_50_57 = 0x2,};
enum MACRO_DXE {DXE_SERVICES_SIGNATURE = 0x565245535F455844,DXE_SPECIFICATION_MAJOR_REVISION = 0x1,DXE_SPECIFICATION_MINOR_REVISION = 0x28,DXE_SERVICES_REVISION = 0x10028,};
enum MACRO_EFI {EFI_SUCCESS = 0,EFI_LOAD_ERROR = -9223372036854775807,EFI_INVALID_PARAMETER = -9223372036854775806,EFI_UNSUPPORTED = -9223372036854775805,EFI_BAD_BUFFER_SIZE = -9223372036854775804,EFI_BUFFER_TOO_SMALL = -9223372036854775803,EFI_NOT_READY = -9223372036854775802,EFI_DEVICE_ERROR = -9223372036854775801,EFI_WRITE_PROTECTED = -9223372036854775800,EFI_OUT_OF_RESOURCES = -9223372036854775799,EFI_VOLUME_CORRUPTED = -9223372036854775798,EFI_VOLUME_FULL = -9223372036854775797,EFI_NO_MEDIA = -9223372036854775796,EFI_MEDIA_CHANGED = -9223372036854775795,EFI_NOT_FOUND = -9223372036854775794,EFI_ACCESS_DENIED = -9223372036854775793,EFI_NO_RESPONSE = -9223372036854775792,EFI_NO_MAPPING = -9223372036854775791,EFI_TIMEOUT = -9223372036854775790,EFI_NOT_STARTED = -9223372036854775789,EFI_ALREADY_STARTED = -9223372036854775788,EFI_ABORTED = -9223372036854775787,EFI_ICMP_ERROR = -9223372036854775786,EFI_TFTP_ERROR = -9223372036854775785,EFI_PROTOCOL_ERROR = -9223372036854775784,EFI_INCOMPATIBLE_VERSION = -9223372036854775783,EFI_SECURITY_VIOLATION = -9223372036854775782,EFI_CRC_ERROR = -9223372036854775781,EFI_END_OF_MEDIA = -9223372036854775780,EFI_END_OF_FILE = -9223372036854775777,EFI_INVALID_LANGUAGE = -9223372036854775776,EFI_COMPROMISED_DATA = -9223372036854775775,EFI_WARN_UNKNOWN_GLYPH = 1,EFI_WARN_DELETE_FAILURE = 2,EFI_WARN_WRITE_FAILURE = 3,EFI_WARN_BUFFER_TOO_SMALL = 4,EFI_WARN_STALE_DATA = 5,EFI_NETWORK_UNREACHABLE = -9223372036854775708,EFI_HOST_UNREACHABLE = -9223372036854775707,EFI_PROTOCOL_UNREACHABLE = -9223372036854775706,EFI_PORT_UNREACHABLE = -9223372036854775705,EFI_CONNECTION_FIN = -9223372036854775704,EFI_CONNECTION_RESET = -9223372036854775703,EFI_CONNECTION_REFUSED = -9223372036854775702,EFI_PAGE_SIZE = 4096,EFI_PAGE_MASK = 4095,EFI_PAGE_SHIFT = 12,EFI_IMAGE_MACHINE_IA32 = 332,EFI_IMAGE_MACHINE_IA64 = 512,EFI_IMAGE_MACHINE_EBC = 3772,EFI_IMAGE_MACHINE_X64 = 34404,EFI_IMAGE_MACHINE_ARMTHUMB_MIXED = 450,EFI_IMAGE_MACHINE_AARCH64 = 43620,};
enum MACRO_END {END_DEVICE_PATH_TYPE = 0x7F,END_ENTIRE_DEVICE_PATH_SUBTYPE = 0xFF,END_INSTANCE_DEVICE_PATH_SUBTYPE = 0x1,};
enum MACRO_EVT {EVT_TIMER = 0x80000000,EVT_RUNTIME = 0x40000000,EVT_NOTIFY_WAIT = 0x100,EVT_NOTIFY_SIGNAL = 0x200,EVT_SIGNAL_EXIT_BOOT_SERVICES = 0x201,EVT_SIGNAL_VIRTUAL_ADDRESS_CHANGE = 0x60000202,EVT_RUNTIME_CONTEXT = 0x20000000,};
enum MACRO_FFS {FFS_FIXED_CHECKSUM = 0xAA,};
enum MACRO_FTW {FTW_VALID_STATE = 0,FTW_INVALID_STATE = 1,};
enum MACRO_GET {GET_USB_BOOT_INFO = 0x1,};
enum MACRO_HDD {HDD_PRIMARY = 0x1,HDD_SECONDARY = 0x2,HDD_MASTER_ATAPI_CDROM = 0x4,HDD_SLAVE_ATAPI_CDROM = 0x8,HDD_MASTER_IDE = 0x20,HDD_SLAVE_IDE = 0x40,HDD_MASTER_ATAPI_ZIPDISK = 0x10,HDD_SLAVE_ATAPI_ZIPDISK = 0x80,};
enum MACRO_HID {HID_ITEM_FORMAT_SHORT = 0,HID_ITEM_FORMAT_LONG = 1,HID_ITEM_TAG_LONG = 15,HID_ITEM_TYPE_MAIN = 0,HID_ITEM_TYPE_GLOBAL = 1,HID_ITEM_TYPE_LOCAL = 2,HID_ITEM_TYPE_RESERVED = 3,HID_MAIN_ITEM_TAG_INPUT = 8,HID_MAIN_ITEM_TAG_OUTPUT = 9,HID_MAIN_ITEM_TAG_FEATURE = 11,HID_MAIN_ITEM_TAG_BEGIN_COLLECTION = 10,HID_MAIN_ITEM_TAG_END_COLLECTION = 12,HID_MAIN_ITEM_CONSTANT = 1,HID_MAIN_ITEM_VARIABLE = 2,HID_MAIN_ITEM_RELATIVE = 4,HID_MAIN_ITEM_WRAP = 8,HID_MAIN_ITEM_NONLINEAR = 16,HID_MAIN_ITEM_NO_PREFERRED = 32,HID_MAIN_ITEM_NULL_STATE = 64,HID_MAIN_ITEM_VOLATILE = 128,HID_MAIN_ITEM_BUFFERED_BYTE = 256,HID_COLLECTION_PHYSICAL = 0,HID_COLLECTION_APPLICATION = 1,HID_COLLECTION_LOGICAL = 2,HID_GLOBAL_ITEM_TAG_USAGE_PAGE = 0,HID_GLOBAL_ITEM_TAG_LOGICAL_MINIMUM = 1,HID_GLOBAL_ITEM_TAG_LOGICAL_MAXIMUM = 2,HID_GLOBAL_ITEM_TAG_PHYSICAL_MINIMUM = 3,HID_GLOBAL_ITEM_TAG_PHYSICAL_MAXIMUM = 4,HID_GLOBAL_ITEM_TAG_UNIT_EXPONENT = 5,HID_GLOBAL_ITEM_TAG_UNIT = 6,HID_GLOBAL_ITEM_TAG_REPORT_SIZE = 7,HID_GLOBAL_ITEM_TAG_REPORT_ID = 8,HID_GLOBAL_ITEM_TAG_REPORT_COUNT = 9,HID_GLOBAL_ITEM_TAG_PUSH = 10,HID_GLOBAL_ITEM_TAG_POP = 11,HID_LOCAL_ITEM_TAG_USAGE = 0,HID_LOCAL_ITEM_TAG_USAGE_MINIMUM = 1,HID_LOCAL_ITEM_TAG_USAGE_MAXIMUM = 2,HID_LOCAL_ITEM_TAG_DESIGNATOR_INDEX = 3,HID_LOCAL_ITEM_TAG_DESIGNATOR_MINIMUM = 4,HID_LOCAL_ITEM_TAG_DESIGNATOR_MAXIMUM = 5,HID_LOCAL_ITEM_TAG_STRING_INDEX = 7,HID_LOCAL_ITEM_TAG_STRING_MINIMUM = 8,HID_LOCAL_ITEM_TAG_STRING_MAXIMUM = 9,HID_LOCAL_ITEM_TAG_DELIMITER = 10,HID_INPUT_REPORT = 1,HID_OUTPUT_REPORT = 2,HID_FEATURE_REPORT = 3,};
enum MACRO_HII {HII_DISPLAY_NONE = 0,HII_DISPLAY_GRAYOUT = 1,HII_DISPLAY_LOCK = 2,HII_DISPLAY_READONLY = 4,HII_DISPLAY_MODAL = 8,HII_DISPLAY_SUPPRESS = 16,};
enum MACRO_I2C {I2C_ADDRESSING_10_BIT = 0x80000000,I2C_FLAG_READ = 0x1,I2C_FLAG_SMBUS_OPERATION = 0x10000,I2C_FLAG_SMBUS_BLOCK = 0x20000,I2C_FLAG_SMBUS_PROCESS_CALL = 0x40000,I2C_FLAG_SMBUS_PEC = 0x80000,};
enum MACRO_INT {INT_MAX = 2147483647,INT_MIN = -2147483648,};
enum MACRO_IP4 {IP4_CONFIG_VARIABLE_ATTRIBUTES = 3,};
enum MACRO_IP6 {IP6_ICMP = 58,};
enum MACRO_LOG {LOG_DAEMON = 24,LOG_EMERG = 0,LOG_ALERT = 1,LOG_CRIT = 2,LOG_ERR = 3,LOG_WARNING = 4,LOG_NOTICE = 5,LOG_INFO = 6,LOG_DEBUG = 7,LOG_PID = 1,LOG_CONS = 2,};
enum MACRO_MAX {MAX_BIT = 0x8000000000000000,MAX_2_BITS = 0xC000000000000000,MAX_ADDRESS = 0xFFFFFFFFFFFFFFFF,MAX_INTN = 0x7FFFFFFFFFFFFFFF,MAX_UINTN = 0xFFFFFFFFFFFFFFFF,};
enum MACRO_MBR {MBR_TYPE_PCAT = 0x1,MBR_TYPE_EFI_PARTITION_TABLE_HEADER = 0x2,};
enum MACRO_MFI {MFI_SCSI_IO_TYPE_A = 0xA,MFI_SCSI_IO_TYPE_B = 0xB,MFI_SCSI_IO_TYPE_RAID = 0xC,MFI_SCSI_IO_TYPE_SES = 0xD,MFI_SCSI_IO_TYPE_RBC = 0xE,MFI_SCSI_IO_TYPE_OCRW = 0xF,MFI_SCSI_IO_TYPE_BRIDGE = 0x10,MFI_SCSI_IO_TYPE_OSD = 0x11,};
enum MACRO_MIN {MIN_EVICT_OBJECTS = 2,};
enum MACRO_MOR {MOR_CLEAR_MEMORY_BIT_MASK = 0x1,MOR_DISABLEAUTODETECT_BIT_MASK = 0x10,MOR_CLEAR_MEMORY_BIT_OFFSET = 0x0,MOR_DISABLEAUTODETECT_BIT_OFFSET = 0x4,};
enum MACRO_MSG {MSG_ATAPI_DP = 0x1,MSG_SCSI_DP = 0x2,MSG_FIBRECHANNEL_DP = 0x3,MSG_FIBRECHANNELEX_DP = 0x15,MSG_1394_DP = 0x4,MSG_USB_DP = 0x5,MSG_USB_CLASS_DP = 0xF,MSG_USB_WWID_DP = 0x10,MSG_DEVICE_LOGICAL_UNIT_DP = 0x11,MSG_SATA_DP = 0x12,};
enum MACRO_MSR {MSR_IA32_APIC_BASE_ADDRESS = 0x1B,};
enum MACRO_NET {NET_ETHER_ADDR_LEN = 6,NET_IFTYPE_ETHERNET = 1,NET_VLAN_TAG_LEN = 4,};
enum MACRO_NUM {NUM_LOCALITIES = 5,};
enum MACRO_PAE {PAE_SUPPORT_AUTHENTICATOR = 0x1,PAE_SUPPORT_SUPPLICANT = 0x2,};
enum MACRO_PAL {PAL_SUCCESS = 0x0,PAL_CACHE_FLUSH_INSTRUCTION_ALL = 0x1,PAL_CACHE_FLUSH_DATA_ALL = 0x2,PAL_CACHE_FLUSH_ALL = 0x3,PAL_CACHE_FLUSH_SYNC_TO_DATA = 0x4,PAL_CACHE_FLUSH_INVALIDATE_LINES = 0x1,PAL_CACHE_FLUSH_NO_INVALIDATE_LINES = 0x0,PAL_CACHE_FLUSH_POLL_INTERRUPT = 0x2,PAL_CACHE_FLUSH_NO_INTERRUPT = 0x0,PAL_CACHE_FLUSH = 0x1,PAL_CACHE_ATTR_WT = 0x0,PAL_CACHE_ATTR_WB = 0x1,PAL_CACHE_STORE_TEMPORAL = 0x0,PAL_CACHE_STORE_NONE_TEMPORAL = 0x3,PAL_CACHE_STORE_TEMPORAL_LVL_1 = 0x0,PAL_CACHE_STORE_NONE_TEMPORAL_LVL_ALL = 0x3,PAL_CACHE_LOAD_TEMPORAL_LVL_1 = 0x0,PAL_CACHE_LOAD_NONE_TEMPORAL_LVL_1 = 0x1,PAL_CACHE_LOAD_NONE_TEMPORAL_LVL_ALL = 0x3,PAL_CACHE_INFO = 0x2,PAL_CACHE_INIT_ALL = 0xFFFFFFFFFFFFFFFF,PAL_CACHE_INIT_TYPE_INSTRUCTION = 0x1,PAL_CACHE_INIT_TYPE_DATA = 0x2,PAL_CACHE_INIT_TYPE_INSTRUCTION_AND_DATA = 0x3,PAL_CACHE_INIT_NO_RESTRICT = 0x0,PAL_CACHE_INIT_RESTRICTED = 0x1,PAL_CACHE_INIT = 0x3,PAL_CACHE_PROTECTION_NONE_PROTECT = 0x0,PAL_CACHE_PROTECTION_ODD_PROTECT = 0x1,PAL_CACHE_PROTECTION_EVEN_PROTECT = 0x2,PAL_CACHE_PROTECTION_ECC_PROTECT = 0x3,PAL_CACHE_PROTECTION_PROTECT_DATA = 0x0,PAL_CACHE_PROTECTION_PROTECT_TAG = 0x1,PAL_CACHE_PROTECTION_PROTECT_TAG_ANDTHEN_DATA = 0x2,PAL_CACHE_PROTECTION_PROTECT_DATA_ANDTHEN_TAG = 0x3,PAL_CACHE_PROT_INFO = 0x26,PAL_CACHE_SHARED_INFO = 0x2B,PAL_CACHE_SUMMARY = 0x4,PAL_MEMORY_ATTR_WB = 0x0,PAL_MEMORY_ATTR_WC = 0x6,PAL_MEMORY_ATTR_UC = 0x4,PAL_MEMORY_ATTR_UCE = 0x5,PAL_MEMORY_ATTR_NATPAGE = 0x7,PAL_MEM_ATTRIB = 0x5,PAL_PREFETCH_VISIBILITY = 0x29,PAL_PTCE_INFO = 0x6,PAL_VM_INFO = 0x7,PAL_VM_PAGE_SIZE = 0x22,PAL_VM_SUMMARY = 0x8,PAL_TR_ACCESS_RIGHT_IS_VALID = 0x1,PAL_TR_PRIVILEGE_LEVEL_IS_VALID = 0x2,PAL_TR_DIRTY_IS_VALID = 0x4,PAL_TR_MEMORY_ATTR_IS_VALID = 0x8,PAL_VM_TR_READ = 0x105,PAL_BUS_DISABLE_DATA_ERROR_SIGNALLING = 0x8000000000000000,PAL_BUS_DISABLE_ADDRESS_ERROR_SIGNALLING = 0x4000000000000000,PAL_BUS_DISABLE_ADDRESS_ERROR_CHECK = 0x2000000000000000,PAL_BUS_DISABLE_INITIALIZATION_EVENT_SIGNALLING = 0x1000000000000000,PAL_BUS_DISABLE_INITIALIZATION_EVENT_CHECK = 0x800000000000000,PAL_BUS_DISABLE_ERROR_SIGNALLING = 0x400000000000000,PAL_BUS_DISABLE__INTERNAL_ERROR_SIGNALLING = 0x200000000000000,PAL_BUS_DISABLE_ERROR_CHECK = 0x100000000000000,PAL_BUS_DISABLE_RSP_ERROR_CHECK = 0x80000000000000,PAL_BUS_DISABLE_TRANSACTION_QUEUE = 0x40000000000000,PAL_BUS_ENABLE_EXCLUSIVE_CACHE_LINE_REPLACEMENT = 0x20000000000000,PAL_BUS_ENABLE_SHARED_CACHE_LINE_REPLACEMENT = 0x10000000000000,PAL_BUS_ENABLE_HALF_TRANSFER = 0x40000000,PAL_BUS_REQUEST_BUS_PARKING = 0x20000000,PAL_BUS_GET_FEATURES = 0x9,PAL_BUS_SET_FEATURES = 0xA,PAL_DEBUG_INFO = 0xB,PAL_FIXED_ADDR = 0xC,PAL_FREQ_BASE = 0xD,PAL_FREQ_RATIOS = 0xE,PAL_LOGICAL_TO_PHYSICAL = 0x2A,PAL_PERF_MON_INFO = 0xF,PAL_PLATFORM_ADDR_INTERRUPT_BLOCK_TOKEN = 0x0,PAL_PLATFORM_ADDR_IO_BLOCK_TOKEN = 0x1,PAL_PLATFORM_ADDR = 0x10,PAL_PROC_GET_FEATURES = 0x11,PAL_PROC_SET_FEATURES = 0x12,PAL_APPLICATION_REGISTER_IMPLEMENTED = 0x0,PAL_APPLICATION_REGISTER_READABLE = 0x1,PAL_CONTROL_REGISTER_IMPLEMENTED = 0x2,PAL_CONTROL_REGISTER_READABLE = 0x3,PAL_REGISTER_INFO = 0x27,PAL_RSE_INFO = 0x13,PAL_VERSION = 0x14,PAL_MC_PENDING = 0x1,PAL_INIT_PENDING = 0x2,PAL_MC_CLEAR_LOG = 0x15,PAL_MC_DRAIN = 0x16,PAL_MC_DYNAMIC_STATE = 0x18,PAL_PROCESSOR_ERROR_MAP = 0x0,PAL_PROCESSOR_STATE_PARAM = 0x1,PAL_STRUCTURE_SPECIFIC_ERROR = 0x2,PAL_ERR_INFO_BY_LEVEL_INDEX = 0x0,PAL_ERR_INFO_TARGET_ADDRESS = 0x1,PAL_ERR_INFO_REQUESTER_IDENTIFIER = 0x2,PAL_ERR_INFO_REPONSER_INDENTIFIER = 0x3,PAL_ERR_INFO_PRECISE_INSTRUCTION_POINTER = 0x4,PAL_MC_ERROR_INFO = 0x19,PAL_MC_EXPECTED = 0x17,PAL_MC_REGISTER_MEM = 0x1B,PAL_MC_RESUME = 0x1A,PAL_HALT = 0x1C,PAL_HALT_INFO = 0x101,PAL_HALT_LIGHT = 0x1D,PAL_CACHE_LINE_INIT = 0x1F,PAL_CACHE_READ = 0x103,PAL_CACHE_WRITE = 0x104,PAL_TEST_INFO = 0x25,PAL_TEST_PROC = 0x102,PAL_COPY_INFO = 0x1E,PAL_COPY_PAL = 0x100,PAL_ENTER_IA_32_ENV = 0x21,PAL_PMI_ENTRYPOINT = 0x20,PAL_BRAND_INFO_ID_REQUEST = 0x0,PAL_BRAND_INFO = 0x112,PAL_GET_HW_POLICY = 0x30,PAL_SET_HW_POLICY_PERFORMANCE = 0x0,PAL_SET_HW_POLICY_FAIRNESS = 0x1,PAL_SET_HW_POLICY_HIGH_PRIORITY = 0x2,PAL_SET_HW_POLICY_EXCLUSIVE_HIGH_PRIORITY = 0x3,PAL_SET_HW_POLICY = 0x31,PAL_MC_ERROR_INJECT = 0x114,PAL_GET_PSTATE_RECENT = 0x0,PAL_GET_PSTATE_AVERAGE_NEW_START = 0x1,PAL_GET_PSTATE_AVERAGE = 0x2,PAL_GET_PSTATE_NOW = 0x3,PAL_GET_PSTATE = 0x106,PAL_PSTATE_INFO = 0x2C,PAL_SET_PSTATE = 0x107,PAL_SHUTDOWN = 0x2D,PAL_MEMORY_BUFFER = 0x115,PAL_VP_CREATE = 0x109,PAL_VP_ENV_INFO = 0x10A,PAL_VP_EXIT_ENV = 0x10B,PAL_VP_INIT_ENV = 0x10C,PAL_VP_REGISTER = 0x10D,PAL_VP_RESTORE = 0x10E,PAL_VP_SAVE = 0x10F,PAL_VP_TERMINATE = 0x110,};
enum MACRO_PCD {PCD_MAX_SKU_ID = 0x100,};
enum MACRO_PCI {PCI_MAX_BUS = 255,PCI_MAX_DEVICE = 31,PCI_MAX_FUNC = 7,PCI_CLASS_OLD = 0,PCI_CLASS_OLD_OTHER = 0,PCI_CLASS_OLD_VGA = 1,PCI_CLASS_MASS_STORAGE = 1,PCI_CLASS_MASS_STORAGE_SCSI = 0,PCI_CLASS_MASS_STORAGE_IDE = 1,PCI_CLASS_MASS_STORAGE_FLOPPY = 2,PCI_CLASS_MASS_STORAGE_IPI = 3,PCI_CLASS_MASS_STORAGE_RAID = 4,PCI_CLASS_MASS_STORAGE_OTHER = 128,PCI_CLASS_NETWORK = 2,PCI_CLASS_NETWORK_ETHERNET = 0,PCI_CLASS_NETWORK_TOKENRING = 1,PCI_CLASS_NETWORK_FDDI = 2,PCI_CLASS_NETWORK_ATM = 3,PCI_CLASS_NETWORK_ISDN = 4,PCI_CLASS_NETWORK_OTHER = 128,PCI_CLASS_DISPLAY = 3,PCI_CLASS_DISPLAY_VGA = 0,PCI_IF_VGA_VGA = 0,PCI_IF_VGA_8514 = 1,PCI_CLASS_DISPLAY_XGA = 1,PCI_CLASS_DISPLAY_3D = 2,PCI_CLASS_DISPLAY_OTHER = 128,PCI_CLASS_MEDIA = 4,PCI_CLASS_MEDIA_VIDEO = 0,PCI_CLASS_MEDIA_AUDIO = 1,PCI_CLASS_MEDIA_TELEPHONE = 2,PCI_CLASS_MEDIA_OTHER = 128,PCI_CLASS_MEMORY_CONTROLLER = 5,PCI_CLASS_MEMORY_RAM = 0,PCI_CLASS_MEMORY_FLASH = 1,PCI_CLASS_MEMORY_OTHER = 128,PCI_CLASS_BRIDGE = 6,PCI_CLASS_BRIDGE_HOST = 0,PCI_CLASS_BRIDGE_ISA = 1,PCI_CLASS_BRIDGE_EISA = 2,PCI_CLASS_BRIDGE_MCA = 3,PCI_CLASS_BRIDGE_P2P = 4,PCI_IF_BRIDGE_P2P = 0,PCI_IF_BRIDGE_P2P_SUBTRACTIVE = 1,PCI_CLASS_BRIDGE_PCMCIA = 5,PCI_CLASS_BRIDGE_NUBUS = 6,PCI_CLASS_BRIDGE_CARDBUS = 7,PCI_CLASS_BRIDGE_RACEWAY = 8,PCI_CLASS_BRIDGE_OTHER = 128,PCI_CLASS_BRIDGE_ISA_PDECODE = 128,PCI_CLASS_SCC = 7,PCI_SUBCLASS_SERIAL = 0,PCI_IF_GENERIC_XT = 0,PCI_IF_16450 = 1,PCI_IF_16550 = 2,PCI_IF_16650 = 3,PCI_IF_16750 = 4,PCI_IF_16850 = 5,PCI_IF_16950 = 6,PCI_SUBCLASS_PARALLEL = 1,PCI_IF_PARALLEL_PORT = 0,PCI_IF_BI_DIR_PARALLEL_PORT = 1,PCI_IF_ECP_PARALLEL_PORT = 2,PCI_IF_1284_CONTROLLER = 3,PCI_IF_1284_DEVICE = 254,PCI_SUBCLASS_MULTIPORT_SERIAL = 2,PCI_SUBCLASS_MODEM = 3,PCI_IF_GENERIC_MODEM = 0,PCI_IF_16450_MODEM = 1,PCI_IF_16550_MODEM = 2,PCI_IF_16650_MODEM = 3,PCI_IF_16750_MODEM = 4,PCI_SUBCLASS_SCC_OTHER = 128,PCI_CLASS_SYSTEM_PERIPHERAL = 8,PCI_SUBCLASS_PIC = 0,PCI_IF_8259_PIC = 0,PCI_IF_ISA_PIC = 1,PCI_IF_EISA_PIC = 2,PCI_IF_APIC_CONTROLLER = 16,PCI_IF_APIC_CONTROLLER2 = 32,PCI_SUBCLASS_DMA = 1,PCI_IF_8237_DMA = 0,PCI_IF_ISA_DMA = 1,PCI_IF_EISA_DMA = 2,PCI_SUBCLASS_TIMER = 2,PCI_IF_8254_TIMER = 0,PCI_IF_ISA_TIMER = 1,PCI_IF_EISA_TIMER = 2,PCI_SUBCLASS_RTC = 3,PCI_IF_GENERIC_RTC = 0,PCI_IF_ISA_RTC = 1,PCI_SUBCLASS_PNP_CONTROLLER = 4,PCI_SUBCLASS_PERIPHERAL_OTHER = 128,PCI_CLASS_INPUT_DEVICE = 9,PCI_SUBCLASS_KEYBOARD = 0,PCI_SUBCLASS_PEN = 1,PCI_SUBCLASS_MOUSE_CONTROLLER = 2,PCI_SUBCLASS_SCAN_CONTROLLER = 3,PCI_SUBCLASS_GAMEPORT = 4,PCI_IF_GAMEPORT = 0,PCI_IF_GAMEPORT1 = 16,PCI_SUBCLASS_INPUT_OTHER = 128,PCI_CLASS_DOCKING_STATION = 10,PCI_SUBCLASS_DOCKING_GENERIC = 0,PCI_SUBCLASS_DOCKING_OTHER = 128,PCI_CLASS_PROCESSOR = 11,PCI_SUBCLASS_PROC_386 = 0,PCI_SUBCLASS_PROC_486 = 1,PCI_SUBCLASS_PROC_PENTIUM = 2,PCI_SUBCLASS_PROC_ALPHA = 16,PCI_SUBCLASS_PROC_POWERPC = 32,PCI_SUBCLASS_PROC_MIPS = 48,PCI_SUBCLASS_PROC_CO_PORC = 64,PCI_CLASS_SERIAL = 12,PCI_CLASS_SERIAL_FIREWIRE = 0,PCI_IF_1394 = 0,PCI_IF_1394_OPEN_HCI = 16,PCI_CLASS_SERIAL_ACCESS_BUS = 1,PCI_CLASS_SERIAL_SSA = 2,PCI_CLASS_SERIAL_USB = 3,PCI_IF_UHCI = 0,PCI_IF_OHCI = 16,PCI_IF_USB_OTHER = 128,PCI_IF_USB_DEVICE = 254,PCI_CLASS_SERIAL_FIBRECHANNEL = 4,PCI_CLASS_SERIAL_SMB = 5,PCI_CLASS_WIRELESS = 13,PCI_SUBCLASS_IRDA = 0,PCI_SUBCLASS_IR = 1,PCI_SUBCLASS_RF = 16,PCI_SUBCLASS_WIRELESS_OTHER = 128,PCI_CLASS_INTELLIGENT_IO = 14,PCI_CLASS_SATELLITE = 15,PCI_SUBCLASS_TV = 1,PCI_SUBCLASS_AUDIO = 2,PCI_SUBCLASS_VOICE = 3,PCI_SUBCLASS_DATA = 4,PCI_SECURITY_CONTROLLER = 16,PCI_SUBCLASS_NET_COMPUT = 0,PCI_SUBCLASS_ENTERTAINMENT = 16,PCI_SUBCLASS_SECURITY_OTHER = 128,PCI_CLASS_DPIO = 17,PCI_SUBCLASS_DPIO = 0,PCI_SUBCLASS_DPIO_OTHER = 128,};
enum MACRO_PCR {IMPLEMENTATION_PCR = 24,PLATFORM_PCR = 24,DRTM_PCR = 17,};
enum MACRO_PEI {PEI_SPECIFICATION_MAJOR_REVISION = 1,PEI_SPECIFICATION_MINOR_REVISION = 40,PEI_SERVICES_SIGNATURE = 6220110258678351184,PEI_SERVICES_REVISION = 65576,};
enum MACRO_PNP {PNP_EISA_ID_CONST = 0x41D0,PNP_EISA_ID_MASK = 0xFFFF,};
enum MACRO_PXE {PXE_CPBSIZE_NOT_USED = 0,PXE_DBSIZE_NOT_USED = 0,PXE_FALSE = 0,PXE_TRUE = 1,PXE_OPCODE_GET_STATE = 0,PXE_OPCODE_START = 1,PXE_OPCODE_STOP = 2,PXE_OPCODE_GET_INIT_INFO = 3,PXE_OPCODE_GET_CONFIG_INFO = 4,PXE_OPCODE_INITIALIZE = 5,PXE_OPCODE_RESET = 6,PXE_OPCODE_SHUTDOWN = 7,PXE_OPCODE_INTERRUPT_ENABLES = 8,PXE_OPCODE_RECEIVE_FILTERS = 9,PXE_OPCODE_STATION_ADDRESS = 10,PXE_OPCODE_STATISTICS = 11,PXE_OPCODE_MCAST_IP_TO_MAC = 12,PXE_OPCODE_NVDATA = 13,PXE_OPCODE_GET_STATUS = 14,PXE_OPCODE_FILL_HEADER = 15,PXE_OPCODE_TRANSMIT = 16,PXE_OPCODE_RECEIVE = 17,PXE_OPCODE_LAST_VALID = 17,PXE_OPFLAGS_NOT_USED = 0,PXE_OPFLAGS_INITIALIZE_CABLE_DETECT_MASK = 1,PXE_OPFLAGS_INITIALIZE_DETECT_CABLE = 0,PXE_OPFLAGS_INITIALIZE_DO_NOT_DETECT_CABLE = 1,PXE_OPFLAGS_RESET_DISABLE_INTERRUPTS = 1,PXE_OPFLAGS_RESET_DISABLE_FILTERS = 2,PXE_OPFLAGS_INTERRUPT_OPMASK = 49152,PXE_OPFLAGS_INTERRUPT_ENABLE = 32768,PXE_OPFLAGS_INTERRUPT_DISABLE = 16384,PXE_OPFLAGS_INTERRUPT_READ = 0,PXE_OPFLAGS_INTERRUPT_RECEIVE = 1,PXE_OPFLAGS_INTERRUPT_TRANSMIT = 2,PXE_OPFLAGS_INTERRUPT_COMMAND = 4,PXE_OPFLAGS_INTERRUPT_SOFTWARE = 8,PXE_OPFLAGS_RECEIVE_FILTER_OPMASK = 49152,PXE_OPFLAGS_RECEIVE_FILTER_ENABLE = 32768,PXE_OPFLAGS_RECEIVE_FILTER_DISABLE = 16384,PXE_OPFLAGS_RECEIVE_FILTER_READ = 0,PXE_OPFLAGS_RECEIVE_FILTER_RESET_MCAST_LIST = 8192,PXE_OPFLAGS_RECEIVE_FILTER_UNICAST = 1,PXE_OPFLAGS_RECEIVE_FILTER_BROADCAST = 2,PXE_OPFLAGS_RECEIVE_FILTER_FILTERED_MULTICAST = 4,PXE_OPFLAGS_RECEIVE_FILTER_PROMISCUOUS = 8,PXE_OPFLAGS_RECEIVE_FILTER_ALL_MULTICAST = 16,PXE_OPFLAGS_STATION_ADDRESS_READ = 0,PXE_OPFLAGS_STATION_ADDRESS_WRITE = 0,PXE_OPFLAGS_STATION_ADDRESS_RESET = 1,PXE_OPFLAGS_STATISTICS_READ = 0,PXE_OPFLAGS_STATISTICS_RESET = 1,PXE_OPFLAGS_MCAST_IP_TO_MAC_OPMASK = 3,PXE_OPFLAGS_MCAST_IPV4_TO_MAC = 0,PXE_OPFLAGS_MCAST_IPV6_TO_MAC = 1,PXE_OPFLAGS_NVDATA_OPMASK = 1,PXE_OPFLAGS_NVDATA_READ = 0,PXE_OPFLAGS_NVDATA_WRITE = 1,PXE_OPFLAGS_GET_INTERRUPT_STATUS = 1,PXE_OPFLAGS_GET_TRANSMITTED_BUFFERS = 2,PXE_OPFLAGS_GET_MEDIA_STATUS = 4,PXE_OPFLAGS_FILL_HEADER_OPMASK = 1,PXE_OPFLAGS_FILL_HEADER_FRAGMENTED = 1,PXE_OPFLAGS_FILL_HEADER_WHOLE = 0,PXE_OPFLAGS_SWUNDI_TRANSMIT_OPMASK = 1,PXE_OPFLAGS_TRANSMIT_BLOCK = 1,PXE_OPFLAGS_TRANSMIT_DONT_BLOCK = 0,PXE_OPFLAGS_TRANSMIT_OPMASK = 2,PXE_OPFLAGS_TRANSMIT_FRAGMENTED = 2,PXE_OPFLAGS_TRANSMIT_WHOLE = 0,PXE_STATFLAGS_INITIALIZE = 0,PXE_STATFLAGS_STATUS_MASK = 49152,PXE_STATFLAGS_COMMAND_COMPLETE = 49152,PXE_STATFLAGS_COMMAND_FAILED = 32768,PXE_STATFLAGS_COMMAND_QUEUED = 16384,PXE_STATFLAGS_GET_STATE_MASK = 3,PXE_STATFLAGS_GET_STATE_INITIALIZED = 2,PXE_STATFLAGS_GET_STATE_STARTED = 1,PXE_STATFLAGS_GET_STATE_STOPPED = 0,PXE_STATFLAGS_CABLE_DETECT_MASK = 1,PXE_STATFLAGS_CABLE_DETECT_NOT_SUPPORTED = 0,PXE_STATFLAGS_CABLE_DETECT_SUPPORTED = 1,PXE_STATFLAGS_GET_STATUS_NO_MEDIA_MASK = 2,PXE_STATFLAGS_GET_STATUS_NO_MEDIA_NOT_SUPPORTED = 0,PXE_STATFLAGS_GET_STATUS_NO_MEDIA_SUPPORTED = 2,PXE_STATFLAGS_INITIALIZED_NO_MEDIA = 1,PXE_STATFLAGS_RESET_NO_MEDIA = 1,PXE_STATFLAGS_INTERRUPT_RECEIVE = 1,PXE_STATFLAGS_INTERRUPT_TRANSMIT = 2,PXE_STATFLAGS_INTERRUPT_COMMAND = 4,PXE_STATFLAGS_RECEIVE_FILTER_UNICAST = 1,PXE_STATFLAGS_RECEIVE_FILTER_BROADCAST = 2,PXE_STATFLAGS_RECEIVE_FILTER_FILTERED_MULTICAST = 4,PXE_STATFLAGS_RECEIVE_FILTER_PROMISCUOUS = 8,PXE_STATFLAGS_RECEIVE_FILTER_ALL_MULTICAST = 16,PXE_STATFLAGS_GET_STATUS_INTERRUPT_MASK = 15,PXE_STATFLAGS_GET_STATUS_NO_INTERRUPTS = 0,PXE_STATFLAGS_GET_STATUS_RECEIVE = 1,PXE_STATFLAGS_GET_STATUS_TRANSMIT = 2,PXE_STATFLAGS_GET_STATUS_COMMAND = 4,PXE_STATFLAGS_GET_STATUS_SOFTWARE = 8,PXE_STATFLAGS_GET_STATUS_TXBUF_QUEUE_EMPTY = 16,PXE_STATFLAGS_GET_STATUS_NO_TXBUFS_WRITTEN = 32,PXE_STATFLAGS_GET_STATUS_NO_MEDIA = 64,PXE_STATCODE_INITIALIZE = 0,PXE_STATCODE_SUCCESS = 0,PXE_STATCODE_INVALID_CDB = 1,PXE_STATCODE_INVALID_CPB = 2,PXE_STATCODE_BUSY = 3,PXE_STATCODE_QUEUE_FULL = 4,PXE_STATCODE_ALREADY_STARTED = 5,PXE_STATCODE_NOT_STARTED = 6,PXE_STATCODE_NOT_SHUTDOWN = 7,PXE_STATCODE_ALREADY_INITIALIZED = 8,PXE_STATCODE_NOT_INITIALIZED = 9,PXE_STATCODE_DEVICE_FAILURE = 10,PXE_STATCODE_NVDATA_FAILURE = 11,PXE_STATCODE_UNSUPPORTED = 12,PXE_STATCODE_BUFFER_FULL = 13,PXE_STATCODE_INVALID_PARAMETER = 14,PXE_STATCODE_INVALID_UNDI = 15,PXE_STATCODE_IPV4_NOT_SUPPORTED = 16,PXE_STATCODE_IPV6_NOT_SUPPORTED = 17,PXE_STATCODE_NOT_ENOUGH_MEMORY = 18,PXE_STATCODE_NO_DATA = 19,PXE_IFNUM_START = 0,PXE_IFNUM_INVALID = 0,PXE_CONTROL_QUEUE_IF_BUSY = 2,PXE_CONTROL_LINK = 1,PXE_CONTROL_LAST_CDB_IN_LIST = 0,PXE_FRAME_TYPE_NONE = 0,PXE_FRAME_TYPE_UNICAST = 1,PXE_FRAME_TYPE_BROADCAST = 2,PXE_FRAME_TYPE_FILTERED_MULTICAST = 3,PXE_FRAME_TYPE_PROMISCUOUS = 4,PXE_FRAME_TYPE_PROMISCUOUS_MULTICAST = 5,PXE_FRAME_TYPE_MULTICAST = 3,PXE_MAC_LENGTH = 32,PXE_IFTYPE_ETHERNET = 1,PXE_IFTYPE_TOKENRING = 4,PXE_IFTYPE_FIBRE_CHANNEL = 18,PXE_HWSTAT_STATE_MASK = -1073741824,PXE_HWSTAT_BUSY = -1073741824,PXE_HWSTAT_INITIALIZED = -2147483648,PXE_HWSTAT_STARTED = 1073741824,PXE_HWSTAT_STOPPED = 0,PXE_HWSTAT_COMMAND_FAILED = 536870912,PXE_HWSTAT_PROMISCUOUS_MULTICAST_RX_ENABLED = 4096,PXE_HWSTAT_PROMISCUOUS_RX_ENABLED = 2048,PXE_HWSTAT_BROADCAST_RX_ENABLED = 1024,PXE_HWSTAT_MULTICAST_RX_ENABLED = 512,PXE_HWSTAT_UNICAST_RX_ENABLED = 256,PXE_HWSTAT_SOFTWARE_INT_ENABLED = 128,PXE_HWSTAT_TX_COMPLETE_INT_ENABLED = 64,PXE_HWSTAT_PACKET_RX_INT_ENABLED = 32,PXE_HWSTAT_CMD_COMPLETE_INT_ENABLED = 16,PXE_HWSTAT_SOFTWARE_INT_PENDING = 8,PXE_HWSTAT_TX_COMPLETE_INT_PENDING = 4,PXE_HWSTAT_PACKET_RX_INT_PENDING = 2,PXE_HWSTAT_CMD_COMPLETE_INT_PENDING = 1,PXE_HWCMD_ISSUE_COMMAND = -2147483648,PXE_HWCMD_INTS_AND_FILTS = 0,PXE_HWCMD_PROMISCUOUS_MULTICAST_RX_ENABLE = 4096,PXE_HWCMD_PROMISCUOUS_RX_ENABLE = 2048,PXE_HWCMD_BROADCAST_RX_ENABLE = 1024,PXE_HWCMD_MULTICAST_RX_ENABLE = 512,PXE_HWCMD_UNICAST_RX_ENABLE = 256,PXE_HWCMD_SOFTWARE_INT_ENABLE = 128,PXE_HWCMD_TX_COMPLETE_INT_ENABLE = 64,PXE_HWCMD_PACKET_RX_INT_ENABLE = 32,PXE_HWCMD_CMD_COMPLETE_INT_ENABLE = 16,PXE_HWCMD_CLEAR_SOFTWARE_INT = 8,PXE_HWCMD_CLEAR_TX_COMPLETE_INT = 4,PXE_HWCMD_CLEAR_PACKET_RX_INT = 2,PXE_HWCMD_CLEAR_CMD_COMPLETE_INT = 1,PXE_ROMID_SIGNATURE = 1163415585,PXE_ROMID_REV = 2,PXE_ROMID_MAJORVER = 3,PXE_ROMID_MINORVER = 1,PXE_ROMID_IMP_HW_UNDI = -2147483648,PXE_ROMID_IMP_SW_VIRT_ADDR = 1073741824,PXE_ROMID_IMP_64BIT_DEVICE = 65536,PXE_ROMID_IMP_FRAG_SUPPORTED = 32768,PXE_ROMID_IMP_CMD_LINK_SUPPORTED = 16384,PXE_ROMID_IMP_CMD_QUEUE_SUPPORTED = 8192,PXE_ROMID_IMP_MULTI_FRAME_SUPPORTED = 4096,PXE_ROMID_IMP_NVDATA_SUPPORT_MASK = 3072,PXE_ROMID_IMP_NVDATA_BULK_WRITABLE = 3072,PXE_ROMID_IMP_NVDATA_SPARSE_WRITABLE = 2048,PXE_ROMID_IMP_NVDATA_READ_ONLY = 1024,PXE_ROMID_IMP_NVDATA_NOT_AVAILABLE = 0,PXE_ROMID_IMP_STATISTICS_SUPPORTED = 512,PXE_ROMID_IMP_STATION_ADDR_SETTABLE = 256,PXE_ROMID_IMP_PROMISCUOUS_MULTICAST_RX_SUPPORTED = 128,PXE_ROMID_IMP_PROMISCUOUS_RX_SUPPORTED = 64,PXE_ROMID_IMP_BROADCAST_RX_SUPPORTED = 32,PXE_ROMID_IMP_FILTERED_MULTICAST_RX_SUPPORTED = 16,PXE_ROMID_IMP_SOFTWARE_INT_SUPPORTED = 8,PXE_ROMID_IMP_TX_COMPLETE_INT_SUPPORTED = 4,PXE_ROMID_IMP_PACKET_RX_INT_SUPPORTED = 2,PXE_ROMID_IMP_CMD_COMPLETE_INT_SUPPORTED = 1,};
enum MACRO_RAM {RAM_INDEX_SPACE = 512,};
enum MACRO_ROM {ROM_FOUND = 0x1,};
enum MACRO_RSA {RSA_DEFAULT_PUBLIC_EXPONENT = 0x10001,};
enum MACRO_SAL {SAL_PLAT_FEAT_BUS_LOCK = 0x1,SAL_PLAT_FEAT_PLAT_IPI_HINT = 0x2,SAL_PLAT_FEAT_PROC_IPI_HINT = 0x4,};
enum MACRO_SM3 {SM3_256_DIGEST_SIZE = 32,SM3_256_BLOCK_SIZE = 64,};
enum MACRO_SMM {SMM_SMST_SIGNATURE = 1414745427,SMM_SPECIFICATION_MAJOR_REVISION = 1,SMM_SPECIFICATION_MINOR_REVISION = 40,};
enum MACRO_SPD {SPD_MEMORY_TYPE = 2,SPD_SDRAM_ROW_ADDR = 3,SPD_SDRAM_COL_ADDR = 4,SPD_SDRAM_MODULE_ROWS = 5,SPD_SDRAM_MODULE_DATA_WIDTH_LSB = 6,SPD_SDRAM_MODULE_DATA_WIDTH_MSB = 7,SPD_SDRAM_ECC_SUPPORT = 11,SPD_SDRAM_REFRESH = 12,SPD_SDRAM_WIDTH = 13,SPD_SDRAM_ERROR_WIDTH = 14,SPD_SDRAM_BURST_LENGTH = 16,SPD_SDRAM_NO_OF_BANKS = 17,SPD_SDRAM_CAS_LATENCY = 18,SPD_SDRAM_MODULE_ATTR = 21,SPD_SDRAM_TCLK1_PULSE = 9,SPD_SDRAM_TAC1_PULSE = 10,SPD_SDRAM_TCLK2_PULSE = 23,SPD_SDRAM_TAC2_PULSE = 24,SPD_SDRAM_TCLK3_PULSE = 25,SPD_SDRAM_TAC3_PULSE = 26,SPD_SDRAM_MIN_PRECHARGE = 27,SPD_SDRAM_ACTIVE_MIN = 28,SPD_SDRAM_RAS_CAS = 29,SPD_SDRAM_RAS_PULSE = 30,SPD_SDRAM_DENSITY = 31,SPD_VAL_SDR_TYPE = 4,SPD_VAL_DDR_TYPE = 7,SPD_VAL_DDR2_TYPE = 8,SPD_ECC_TYPE_NONE = 0,SPD_ECC_TYPE_PARITY = 1,SPD_ECC_TYPE_ECC = 2,SPD_BUFFERED = 1,SPD_REGISTERED = 2,};
enum MACRO_STD {STD_ERROR = 0x2,};
enum MACRO_TCG {TCG_ACPI_FUNCTION_GET_PHYSICAL_PRESENCE_INTERFACE_VERSION = 1,TCG_ACPI_FUNCTION_SUBMIT_REQUEST_TO_BIOS = 2,TCG_ACPI_FUNCTION_GET_PENDING_REQUEST_BY_OS = 3,TCG_ACPI_FUNCTION_GET_PLATFORM_ACTION_TO_TRANSITION_TO_BIOS = 4,TCG_ACPI_FUNCTION_RETURN_REQUEST_RESPONSE_TO_OS = 5,TCG_ACPI_FUNCTION_SUBMIT_PREFERRED_USER_LANGUAGE = 6,TCG_ACPI_FUNCTION_SUBMIT_REQUEST_TO_BIOS_2 = 7,TCG_ACPI_FUNCTION_GET_USER_CONFIRMATION_STATUS_FOR_REQUEST = 8,TCG_PP_OPERATION_RESPONSE_SUCCESS = 0,TCG_PP_OPERATION_RESPONSE_USER_ABORT = -16,TCG_PP_OPERATION_RESPONSE_BIOS_FAILURE = -15,TCG_PP_RETURN_TPM_OPERATION_RESPONSE_SUCCESS = 0,TCG_PP_RETURN_TPM_OPERATION_RESPONSE_FAILURE = 1,TCG_PP_SUBMIT_REQUEST_TO_PREOS_SUCCESS = 0,TCG_PP_SUBMIT_REQUEST_TO_PREOS_NOT_IMPLEMENTED = 1,TCG_PP_SUBMIT_REQUEST_TO_PREOS_GENERAL_FAILURE = 2,TCG_PP_SUBMIT_REQUEST_TO_PREOS_BLOCKED_BY_BIOS_SETTINGS = 3,TCG_PP_GET_USER_CONFIRMATION_NOT_IMPLEMENTED = 0,TCG_PP_GET_USER_CONFIRMATION_BIOS_ONLY = 1,TCG_PP_GET_USER_CONFIRMATION_BLOCKED_BY_BIOS_CONFIGURATION = 2,TCG_PP_GET_USER_CONFIRMATION_ALLOWED_AND_PPUSER_REQUIRED = 3,TCG_PP_GET_USER_CONFIRMATION_ALLOWED_AND_PPUSER_NOT_REQUIRED = 4,TCG_PHYSICAL_PRESENCE_NO_ACTION = 0,TCG_PHYSICAL_PRESENCE_ENABLE = 1,TCG_PHYSICAL_PRESENCE_DISABLE = 2,TCG_PHYSICAL_PRESENCE_ACTIVATE = 3,TCG_PHYSICAL_PRESENCE_DEACTIVATE = 4,TCG_PHYSICAL_PRESENCE_CLEAR = 5,TCG_PHYSICAL_PRESENCE_ENABLE_ACTIVATE = 6,TCG_PHYSICAL_PRESENCE_DEACTIVATE_DISABLE = 7,TCG_PHYSICAL_PRESENCE_SET_OWNER_INSTALL_TRUE = 8,TCG_PHYSICAL_PRESENCE_SET_OWNER_INSTALL_FALSE = 9,TCG_PHYSICAL_PRESENCE_ENABLE_ACTIVATE_OWNER_TRUE = 10,TCG_PHYSICAL_PRESENCE_DEACTIVATE_DISABLE_OWNER_FALSE = 11,TCG_PHYSICAL_PRESENCE_DEFERRED_PP_UNOWNERED_FIELD_UPGRADE = 12,TCG_PHYSICAL_PRESENCE_SET_OPERATOR_AUTH = 13,TCG_PHYSICAL_PRESENCE_CLEAR_ENABLE_ACTIVATE = 14,TCG_PHYSICAL_PRESENCE_SET_NO_PPI_PROVISION_FALSE = 15,TCG_PHYSICAL_PRESENCE_SET_NO_PPI_PROVISION_TRUE = 16,TCG_PHYSICAL_PRESENCE_SET_NO_PPI_CLEAR_FALSE = 17,TCG_PHYSICAL_PRESENCE_SET_NO_PPI_CLEAR_TRUE = 18,TCG_PHYSICAL_PRESENCE_SET_NO_PPI_MAINTENANCE_FALSE = 19,TCG_PHYSICAL_PRESENCE_SET_NO_PPI_MAINTENANCE_TRUE = 20,TCG_PHYSICAL_PRESENCE_ENABLE_ACTIVATE_CLEAR = 21,TCG_PHYSICAL_PRESENCE_ENABLE_ACTIVATE_CLEAR_ENABLE_ACTIVATE = 22,TCG_PHYSICAL_PRESENCE_VENDOR_SPECIFIC_OPERATION = 128,};
enum MACRO_TCP {TCP_VERSION_4 = 4,TCP_VERSION_6 = 6,TCP_GET_MAPPING_TIMEOUT = 100000000,};
enum MACRO_TIS {TIS_PC_VALID = 128,TIS_PC_ACC_ACTIVE = 32,TIS_PC_ACC_SEIZED = 16,TIS_PC_ACC_SEIZE = 8,TIS_PC_ACC_PENDIND = 4,TIS_PC_ACC_RQUUSE = 2,TIS_PC_ACC_ESTABLISH = 1,TIS_PC_STS_READY = 64,TIS_PC_STS_GO = 32,TIS_PC_STS_DATA = 16,TIS_PC_STS_EXPECT = 8,TIS_PC_STS_RETRY = 2,TIS_TIMEOUT_A = 750000,TIS_TIMEOUT_B = 2000000,TIS_TIMEOUT_C = 750000,TIS_TIMEOUT_D = 750000,};
enum MACRO_TPL {TPL_APPLICATION = 4,TPL_CALLBACK = 8,TPL_NOTIFY = 16,TPL_HIGH_LEVEL = 31,};
enum MACRO_TPM {TPM_BASE = 0,TPM_Vendor_Specific32 = 1024,TPM_Vendor_Specific8 = 128,TPM_TAG_CONTEXTBLOB = 1,TPM_TAG_CONTEXT_SENSITIVE = 2,TPM_TAG_CONTEXTPOINTER = 3,TPM_TAG_CONTEXTLIST = 4,TPM_TAG_SIGNINFO = 5,TPM_TAG_PCR_INFO_LONG = 6,TPM_TAG_PERSISTENT_FLAGS = 7,TPM_TAG_VOLATILE_FLAGS = 8,TPM_TAG_PERSISTENT_DATA = 9,TPM_TAG_VOLATILE_DATA = 10,TPM_TAG_SV_DATA = 11,TPM_TAG_EK_BLOB = 12,TPM_TAG_EK_BLOB_AUTH = 13,TPM_TAG_COUNTER_VALUE = 14,TPM_TAG_TRANSPORT_INTERNAL = 15,TPM_TAG_TRANSPORT_LOG_IN = 16,TPM_TAG_TRANSPORT_LOG_OUT = 17,TPM_TAG_AUDIT_EVENT_IN = 18,TPM_TAG_AUDIT_EVENT_OUT = 19,TPM_TAG_CURRENT_TICKS = 20,TPM_TAG_KEY = 21,TPM_TAG_STORED_DATA12 = 22,TPM_TAG_NV_ATTRIBUTES = 23,TPM_TAG_NV_DATA_PUBLIC = 24,TPM_TAG_NV_DATA_SENSITIVE = 25,TPM_TAG_DELEGATIONS = 26,TPM_TAG_DELEGATE_PUBLIC = 27,TPM_TAG_DELEGATE_TABLE_ROW = 28,TPM_TAG_TRANSPORT_AUTH = 29,TPM_TAG_TRANSPORT_PUBLIC = 30,TPM_TAG_PERMANENT_FLAGS = 31,TPM_TAG_STCLEAR_FLAGS = 32,TPM_TAG_STANY_FLAGS = 33,TPM_TAG_PERMANENT_DATA = 34,TPM_TAG_STCLEAR_DATA = 35,TPM_TAG_STANY_DATA = 36,TPM_TAG_FAMILY_TABLE_ENTRY = 37,TPM_TAG_DELEGATE_SENSITIVE = 38,TPM_TAG_DELG_KEY_BLOB = 39,TPM_TAG_KEY12 = 40,TPM_TAG_CERTIFY_INFO2 = 41,TPM_TAG_DELEGATE_OWNER_BLOB = 42,TPM_TAG_EK_BLOB_ACTIVATE = 43,TPM_TAG_DAA_BLOB = 44,TPM_TAG_DAA_CONTEXT = 45,TPM_TAG_DAA_ENFORCE = 46,TPM_TAG_DAA_ISSUER = 47,TPM_TAG_CAP_VERSION_INFO = 48,TPM_TAG_DAA_SENSITIVE = 49,TPM_TAG_DAA_TPM = 50,TPM_TAG_CMK_MIGAUTH = 51,TPM_TAG_CMK_SIGTICKET = 52,TPM_TAG_CMK_MA_APPROVAL = 53,TPM_TAG_QUOTE_INFO2 = 54,TPM_TAG_DA_INFO = 55,TPM_TAG_DA_LIMITED = 56,TPM_TAG_DA_ACTION_TYPE = 57,TPM_RT_KEY = 1,TPM_RT_AUTH = 2,TPM_RT_HASH = 3,TPM_RT_TRANS = 4,TPM_RT_CONTEXT = 5,TPM_RT_COUNTER = 6,TPM_RT_DELEGATE = 7,TPM_RT_DAA_TPM = 8,TPM_RT_DAA_V0 = 9,TPM_RT_DAA_V1 = 10,TPM_PT_ASYM = 1,TPM_PT_BIND = 2,TPM_PT_MIGRATE = 3,TPM_PT_MAINT = 4,TPM_PT_SEAL = 5,TPM_PT_MIGRATE_RESTRICTED = 6,TPM_PT_MIGRATE_EXTERNAL = 7,TPM_PT_CMK_MIGRATE = 8,TPM_PT_VENDOR_SPECIFIC = 128,TPM_ET_KEYHANDLE = 1,TPM_ET_OWNER = 2,TPM_ET_DATA = 3,TPM_ET_SRK = 4,TPM_ET_KEY = 5,TPM_ET_REVOKE = 6,TPM_ET_DEL_OWNER_BLOB = 7,TPM_ET_DEL_ROW = 8,TPM_ET_DEL_KEY_BLOB = 9,TPM_ET_COUNTER = 10,TPM_ET_NV = 11,TPM_ET_OPERATOR = 12,TPM_ET_RESERVED_HANDLE = 64,TPM_ET_XOR = 0,TPM_ET_AES128 = 6,TPM_KH_SRK = 1073741824,TPM_KH_OWNER = 1073741825,TPM_KH_REVOKE = 1073741826,TPM_KH_TRANSPORT = 1073741827,TPM_KH_OPERATOR = 1073741828,TPM_KH_ADMIN = 1073741829,TPM_KH_EK = 1073741830,TPM_ST_CLEAR = 1,TPM_ST_STATE = 2,TPM_ST_DEACTIVATED = 3,TPM_PID_OIAP = 1,TPM_PID_OSAP = 2,TPM_PID_ADIP = 3,TPM_PID_ADCP = 4,TPM_PID_OWNER = 5,TPM_PID_DSAP = 6,TPM_PID_TRANSPORT = 7,TPM_ALG_RSA = 1,TPM_ALG_DES = 2,TPM_ALG_3DES = 3,TPM_ALG_SHA = 4,TPM_ALG_HMAC = 5,TPM_ALG_AES128 = 6,TPM_ALG_MGF1 = 7,TPM_ALG_AES192 = 8,TPM_ALG_AES256 = 9,TPM_ALG_XOR = 10,TPM_PHYSICAL_PRESENCE_HW_DISABLE = 512,TPM_PHYSICAL_PRESENCE_CMD_DISABLE = 256,TPM_PHYSICAL_PRESENCE_LIFETIME_LOCK = 128,TPM_PHYSICAL_PRESENCE_HW_ENABLE = 64,TPM_PHYSICAL_PRESENCE_CMD_ENABLE = 32,TPM_PHYSICAL_PRESENCE_NOTPRESENT = 16,TPM_PHYSICAL_PRESENCE_PRESENT = 8,TPM_PHYSICAL_PRESENCE_LOCK = 4,TPM_MS_MIGRATE = 1,TPM_MS_REWRAP = 2,TPM_MS_MAINT = 3,TPM_MS_RESTRICT_MIGRATE = 4,TPM_MS_RESTRICT_APPROVE_DOUBLE = 5,TPM_EK_TYPE_ACTIVATE = 1,TPM_EK_TYPE_AUTH = 2,TPM_PS_PC_11 = 1,TPM_PS_PC_12 = 2,TPM_PS_PDA_12 = 3,TPM_PS_Server_12 = 4,TPM_PS_Mobile_12 = 5,TPM_SHA1_160_HASH_LEN = 20,TPM_SHA1BASED_NONCE_LEN = 20,TPM_KEY_SIGNING = 16,TPM_KEY_STORAGE = 17,TPM_KEY_IDENTITY = 18,TPM_KEY_AUTHCHANGE = 19,TPM_KEY_BIND = 20,TPM_KEY_LEGACY = 21,TPM_KEY_MIGRATE = 22,TPM_ES_NONE = 1,TPM_ES_RSAESPKCSv15 = 2,TPM_ES_RSAESOAEP_SHA1_MGF1 = 3,TPM_ES_SYM_CNT = 4,TPM_ES_SYM_CTR = 4,TPM_ES_SYM_OFB = 5,TPM_SS_NONE = 1,TPM_SS_RSASSAPKCS1v15_SHA1 = 2,TPM_SS_RSASSAPKCS1v15_DER = 3,TPM_SS_RSASSAPKCS1v15_INFO = 4,TPM_AUTH_NEVER = 0,TPM_AUTH_ALWAYS = 1,TPM_AUTH_PRIV_USE_ONLY = 3,TPM_CMK_DELEGATE_SIGNING = 2147483648,TPM_CMK_DELEGATE_STORAGE = 1073741824,TPM_CMK_DELEGATE_BIND = 536870912,TPM_CMK_DELEGATE_LEGACY = 268435456,TPM_CMK_DELEGATE_MIGRATE = 134217728,TPM_TAG_RQU_COMMAND = 193,TPM_TAG_RQU_AUTH1_COMMAND = 194,TPM_TAG_RQU_AUTH2_COMMAND = 195,TPM_TAG_RSP_COMMAND = 196,TPM_TAG_RSP_AUTH1_COMMAND = 197,TPM_TAG_RSP_AUTH2_COMMAND = 198,TPM_PF_DISABLE = 1,TPM_PF_OWNERSHIP = 2,TPM_PF_DEACTIVATED = 3,TPM_PF_READPUBEK = 4,TPM_PF_DISABLEOWNERCLEAR = 5,TPM_PF_ALLOWMAINTENANCE = 6,TPM_PF_PHYSICALPRESENCELIFETIMELOCK = 7,TPM_PF_PHYSICALPRESENCEHWENABLE = 8,TPM_PF_PHYSICALPRESENCECMDENABLE = 9,TPM_PF_CEKPUSED = 10,TPM_PF_TPMPOST = 11,TPM_PF_TPMPOSTLOCK = 12,TPM_PF_FIPS = 13,TPM_PF_OPERATOR = 14,TPM_PF_ENABLEREVOKEEK = 15,TPM_PF_NV_LOCKED = 16,TPM_PF_READSRKPUB = 17,TPM_PF_TPMESTABLISHED = 18,TPM_PF_MAINTENANCEDONE = 19,TPM_PF_DISABLEFULLDALOGICINFO = 20,TPM_SF_DEACTIVATED = 1,TPM_SF_DISABLEFORCECLEAR = 2,TPM_SF_PHYSICALPRESENCE = 3,TPM_SF_PHYSICALPRESENCELOCK = 4,TPM_SF_BGLOBALLOCK = 5,TPM_AF_POSTINITIALISE = 1,TPM_AF_LOCALITYMODIFIER = 2,TPM_AF_TRANSPORTEXCLUSIVE = 3,TPM_AF_TOSPRESENT = 4,TPM_MIN_COUNTERS = 4,TPM_NUM_PCR = 16,TPM_MAX_NV_WRITE_NOOWNER = 64,TPM_PD_REVMAJOR = 1,TPM_PD_REVMINOR = 2,TPM_PD_TPMPROOF = 3,TPM_PD_OWNERAUTH = 4,TPM_PD_OPERATORAUTH = 5,TPM_PD_MANUMAINTPUB = 6,TPM_PD_ENDORSEMENTKEY = 7,TPM_PD_SRK = 8,TPM_PD_DELEGATEKEY = 9,TPM_PD_CONTEXTKEY = 10,TPM_PD_AUDITMONOTONICCOUNTER = 11,TPM_PD_MONOTONICCOUNTER = 12,TPM_PD_PCRATTRIB = 13,TPM_PD_ORDINALAUDITSTATUS = 14,TPM_PD_AUTHDIR = 15,TPM_PD_RNGSTATE = 16,TPM_PD_FAMILYTABLE = 17,TPM_DELEGATETABLE = 18,TPM_PD_EKRESET = 19,TPM_PD_MAXNVBUFSIZE = 20,TPM_PD_LASTFAMILYID = 21,TPM_PD_NOOWNERNVWRITE = 22,TPM_PD_RESTRICTDELEGATE = 23,TPM_PD_TPMDAASEED = 24,TPM_PD_DAAPROOF = 25,TPM_SD_CONTEXTNONCEKEY = 1,TPM_SD_COUNTID = 2,TPM_SD_OWNERREFERENCE = 3,TPM_SD_DISABLERESETLOCK = 4,TPM_SD_PCR = 5,TPM_SD_DEFERREDPHYSICALPRESENCE = 6,TPM_AD_CONTEXTNONCESESSION = 1,TPM_AD_AUDITDIGEST = 2,TPM_AD_CURRENTTICKS = 3,TPM_AD_CONTEXTCOUNT = 4,TPM_AD_CONTEXTLIST = 5,TPM_AD_SESSIONS = 6,TPM_LOC_FOUR = 16,TPM_LOC_THREE = 8,TPM_LOC_TWO = 4,TPM_LOC_ONE = 2,TPM_LOC_ZERO = 1,TPM_KEY_CONTROL_OWNER_EVICT = 1,TPM_TRANSPORT_ENCRYPT = 1,TPM_TRANSPORT_LOG = 2,TPM_TRANSPORT_EXCLUSIVE = 4,TPM_VENDOR_ERROR = 1024,TPM_NON_FATAL = 2048,TPM_SUCCESS = 0,TPM_AUTHFAIL = 1,TPM_BADINDEX = 2,TPM_BAD_PARAMETER = 3,TPM_AUDITFAILURE = 4,TPM_CLEAR_DISABLED = 5,TPM_DEACTIVATED = 6,TPM_DISABLED = 7,TPM_DISABLED_CMD = 8,TPM_FAIL = 9,TPM_BAD_ORDINAL = 10,TPM_INSTALL_DISABLED = 11,TPM_INVALID_KEYHANDLE = 12,TPM_KEYNOTFOUND = 13,TPM_INAPPROPRIATE_ENC = 14,TPM_MIGRATEFAIL = 15,TPM_INVALID_PCR_INFO = 16,TPM_NOSPACE = 17,TPM_NOSRK = 18,TPM_NOTSEALED_BLOB = 19,TPM_OWNER_SET = 20,TPM_RESOURCES = 21,TPM_SHORTRANDOM = 22,TPM_SIZE = 23,TPM_WRONGPCRVAL = 24,TPM_BAD_PARAM_SIZE = 25,TPM_SHA_THREAD = 26,TPM_SHA_ERROR = 27,TPM_FAILEDSELFTEST = 28,TPM_AUTH2FAIL = 29,TPM_BADTAG = 30,TPM_IOERROR = 31,TPM_ENCRYPT_ERROR = 32,TPM_DECRYPT_ERROR = 33,TPM_INVALID_AUTHHANDLE = 34,TPM_NO_ENDORSEMENT = 35,TPM_INVALID_KEYUSAGE = 36,TPM_WRONG_ENTITYTYPE = 37,TPM_INVALID_POSTINIT = 38,TPM_INAPPROPRIATE_SIG = 39,TPM_BAD_KEY_PROPERTY = 40,TPM_BAD_MIGRATION = 41,TPM_BAD_SCHEME = 42,TPM_BAD_DATASIZE = 43,TPM_BAD_MODE = 44,TPM_BAD_PRESENCE = 45,TPM_BAD_VERSION = 46,TPM_NO_WRAP_TRANSPORT = 47,TPM_AUDITFAIL_UNSUCCESSFUL = 48,TPM_AUDITFAIL_SUCCESSFUL = 49,TPM_NOTRESETABLE = 50,TPM_NOTLOCAL = 51,TPM_BAD_TYPE = 52,TPM_INVALID_RESOURCE = 53,TPM_NOTFIPS = 54,TPM_INVALID_FAMILY = 55,TPM_NO_NV_PERMISSION = 56,TPM_REQUIRES_SIGN = 57,TPM_KEY_NOTSUPPORTED = 58,TPM_AUTH_CONFLICT = 59,TPM_AREA_LOCKED = 60,TPM_BAD_LOCALITY = 61,TPM_READ_ONLY = 62,TPM_PER_NOWRITE = 63,TPM_FAMILYCOUNT = 64,TPM_WRITE_LOCKED = 65,TPM_BAD_ATTRIBUTES = 66,TPM_INVALID_STRUCTURE = 67,TPM_KEY_OWNER_CONTROL = 68,TPM_BAD_COUNTER = 69,TPM_NOT_FULLWRITE = 70,TPM_CONTEXT_GAP = 71,TPM_MAXNVWRITES = 72,TPM_NOOPERATOR = 73,TPM_RESOURCEMISSING = 74,TPM_DELEGATE_LOCK = 75,TPM_DELEGATE_FAMILY = 76,TPM_DELEGATE_ADMIN = 77,TPM_TRANSPORT_NOTEXCLUSIVE = 78,TPM_OWNER_CONTROL = 79,TPM_DAA_RESOURCES = 80,TPM_DAA_INPUT_DATA0 = 81,TPM_DAA_INPUT_DATA1 = 82,TPM_DAA_ISSUER_SETTINGS = 83,TPM_DAA_TPM_SETTINGS = 84,TPM_DAA_STAGE = 85,TPM_DAA_ISSUER_VALIDITY = 86,TPM_DAA_WRONG_W = 87,TPM_BAD_HANDLE = 88,TPM_BAD_DELEGATE = 89,TPM_BADCONTEXT = 90,TPM_TOOMANYCONTEXTS = 91,TPM_MA_TICKET_SIGNATURE = 92,TPM_MA_DESTINATION = 93,TPM_MA_SOURCE = 94,TPM_MA_AUTHORITY = 95,TPM_PERMANENTEK = 97,TPM_BAD_SIGNATURE = 98,TPM_NOCONTEXTSPACE = 99,TPM_RETRY = 2048,TPM_NEEDS_SELFTEST = 2049,TPM_DOING_SELFTEST = 2050,TPM_DEFEND_LOCK_RUNNING = 2051,TPM_ORD_ActivateIdentity = 122,TPM_ORD_AuthorizeMigrationKey = 43,TPM_ORD_CertifyKey = 50,TPM_ORD_CertifyKey2 = 51,TPM_ORD_CertifySelfTest = 82,TPM_ORD_ChangeAuth = 12,TPM_ORD_ChangeAuthAsymFinish = 15,TPM_ORD_ChangeAuthAsymStart = 14,TPM_ORD_ChangeAuthOwner = 16,TPM_ORD_CMK_ApproveMA = 29,TPM_ORD_CMK_ConvertMigration = 36,TPM_ORD_CMK_CreateBlob = 27,TPM_ORD_CMK_CreateKey = 19,TPM_ORD_CMK_CreateTicket = 18,TPM_ORD_CMK_SetRestrictions = 28,TPM_ORD_ContinueSelfTest = 83,TPM_ORD_ConvertMigrationBlob = 42,TPM_ORD_CreateCounter = 220,TPM_ORD_CreateEndorsementKeyPair = 120,TPM_ORD_CreateMaintenanceArchive = 44,TPM_ORD_CreateMigrationBlob = 40,TPM_ORD_CreateRevocableEK = 127,TPM_ORD_CreateWrapKey = 31,TPM_ORD_DAA_JOIN = 41,TPM_ORD_DAA_SIGN = 49,TPM_ORD_Delegate_CreateKeyDelegation = 212,TPM_ORD_Delegate_CreateOwnerDelegation = 213,TPM_ORD_Delegate_LoadOwnerDelegation = 216,TPM_ORD_Delegate_Manage = 210,TPM_ORD_Delegate_ReadTable = 219,TPM_ORD_Delegate_UpdateVerification = 209,TPM_ORD_Delegate_VerifyDelegation = 214,TPM_ORD_DirRead = 26,TPM_ORD_DirWriteAuth = 25,TPM_ORD_DisableForceClear = 94,TPM_ORD_DisableOwnerClear = 92,TPM_ORD_DisablePubekRead = 126,TPM_ORD_DSAP = 17,TPM_ORD_EstablishTransport = 230,TPM_ORD_EvictKey = 34,TPM_ORD_ExecuteTransport = 231,TPM_ORD_Extend = 20,TPM_ORD_FieldUpgrade = 170,TPM_ORD_FlushSpecific = 186,TPM_ORD_ForceClear = 93,TPM_ORD_GetAuditDigest = 133,TPM_ORD_GetAuditDigestSigned = 134,TPM_ORD_GetAuditEvent = 130,TPM_ORD_GetAuditEventSigned = 131,TPM_ORD_GetCapability = 101,TPM_ORD_GetCapabilityOwner = 102,TPM_ORD_GetCapabilitySigned = 100,TPM_ORD_GetOrdinalAuditStatus = 140,TPM_ORD_GetPubKey = 33,TPM_ORD_GetRandom = 70,TPM_ORD_GetTestResult = 84,TPM_ORD_GetTicks = 241,TPM_ORD_IncrementCounter = 221,TPM_ORD_Init = 151,TPM_ORD_KeyControlOwner = 35,TPM_ORD_KillMaintenanceFeature = 46,TPM_ORD_LoadAuthContext = 183,TPM_ORD_LoadContext = 185,TPM_ORD_LoadKey = 32,TPM_ORD_LoadKey2 = 65,TPM_ORD_LoadKeyContext = 181,TPM_ORD_LoadMaintenanceArchive = 45,TPM_ORD_LoadManuMaintPub = 47,TPM_ORD_MakeIdentity = 121,TPM_ORD_MigrateKey = 37,TPM_ORD_NV_DefineSpace = 204,TPM_ORD_NV_ReadValue = 207,TPM_ORD_NV_ReadValueAuth = 208,TPM_ORD_NV_WriteValue = 205,TPM_ORD_NV_WriteValueAuth = 206,TPM_ORD_OIAP = 10,TPM_ORD_OSAP = 11,TPM_ORD_OwnerClear = 91,TPM_ORD_OwnerReadInternalPub = 129,TPM_ORD_OwnerReadPubek = 125,TPM_ORD_OwnerSetDisable = 110,TPM_ORD_PCR_Reset = 200,TPM_ORD_PcrRead = 21,TPM_ORD_PhysicalDisable = 112,TPM_ORD_PhysicalEnable = 111,TPM_ORD_PhysicalSetDeactivated = 114,TPM_ORD_Quote = 22,TPM_ORD_Quote2 = 62,TPM_ORD_ReadCounter = 222,TPM_ORD_ReadManuMaintPub = 48,TPM_ORD_ReadPubek = 124,TPM_ORD_ReleaseCounter = 223,TPM_ORD_ReleaseCounterOwner = 224,TPM_ORD_ReleaseTransportSigned = 232,TPM_ORD_Reset = 90,TPM_ORD_ResetLockValue = 64,TPM_ORD_RevokeTrust = 128,TPM_ORD_SaveAuthContext = 182,TPM_ORD_SaveContext = 184,TPM_ORD_SaveKeyContext = 180,TPM_ORD_SaveState = 152,TPM_ORD_Seal = 23,TPM_ORD_Sealx = 61,TPM_ORD_SelfTestFull = 80,TPM_ORD_SetCapability = 63,TPM_ORD_SetOperatorAuth = 116,TPM_ORD_SetOrdinalAuditStatus = 141,TPM_ORD_SetOwnerInstall = 113,TPM_ORD_SetOwnerPointer = 117,TPM_ORD_SetRedirection = 154,TPM_ORD_SetTempDeactivated = 115,TPM_ORD_SHA1Complete = 162,TPM_ORD_SHA1CompleteExtend = 163,TPM_ORD_SHA1Start = 160,TPM_ORD_SHA1Update = 161,TPM_ORD_Sign = 60,TPM_ORD_Startup = 153,TPM_ORD_StirRandom = 71,TPM_ORD_TakeOwnership = 13,TPM_ORD_Terminate_Handle = 150,TPM_ORD_TickStampBlob = 242,TPM_ORD_UnBind = 30,TPM_ORD_Unseal = 24,};
enum MACRO_TSC {TSC_ORD_PhysicalPresence = 0x4000000A,TSC_ORD_ResetEstablishmentBit = 0x4000000B,};
enum MACRO_TSS {TSS_EVENT_DATA_MAX_SIZE = 256,};
enum MACRO_UDP {UDP_IO_RX_SIGNATURE = 1380992085,UDP_IO_TX_SIGNATURE = 1414546517,UDP_IO_SIGNATURE = 1229997141,UDP_IO_UDP4_VERSION = 4,UDP_IO_UDP6_VERSION = 6,};
enum MACRO_USB {USB_MASS_STORE_CLASS = 0x8,USB_MASS_STORE_RBC = 0x1,USB_MASS_STORE_8020I = 0x2,USB_MASS_STORE_QIC = 0x3,USB_MASS_STORE_UFI = 0x4,USB_MASS_STORE_8070I = 0x5,USB_MASS_STORE_SCSI = 0x6,USB_MASS_STORE_CBI0 = 0x0,USB_MASS_STORE_CBI1 = 0x1,USB_MASS_STORE_BOT = 0x50,USB_DEV_GET_STATUS = 0x0,USB_DEV_GET_STATUS_REQ_TYPE_D = 0x80,USB_DEV_GET_STATUS_REQ_TYPE_I = 0x81,USB_DEV_GET_STATUS_REQ_TYPE_E = 0x82,USB_DEV_CLEAR_FEATURE = 0x1,USB_DEV_CLEAR_FEATURE_REQ_TYPE_D = 0x0,USB_DEV_CLEAR_FEATURE_REQ_TYPE_I = 0x1,USB_DEV_CLEAR_FEATURE_REQ_TYPE_E = 0x2,USB_DEV_SET_FEATURE = 0x3,USB_DEV_SET_FEATURE_REQ_TYPE_D = 0x0,USB_DEV_SET_FEATURE_REQ_TYPE_I = 0x1,USB_DEV_SET_FEATURE_REQ_TYPE_E = 0x2,USB_DEV_SET_ADDRESS = 0x5,USB_DEV_SET_ADDRESS_REQ_TYPE = 0x0,USB_DEV_GET_DESCRIPTOR = 0x6,USB_DEV_GET_DESCRIPTOR_REQ_TYPE = 0x80,USB_DEV_SET_DESCRIPTOR = 0x7,USB_DEV_SET_DESCRIPTOR_REQ_TYPE = 0x0,USB_DEV_GET_CONFIGURATION = 0x8,USB_DEV_GET_CONFIGURATION_REQ_TYPE = 0x80,USB_DEV_SET_CONFIGURATION = 0x9,USB_DEV_SET_CONFIGURATION_REQ_TYPE = 0x0,USB_DEV_GET_INTERFACE = 0xA,USB_DEV_GET_INTERFACE_REQ_TYPE = 0x81,USB_DEV_SET_INTERFACE = 0xB,USB_DEV_SET_INTERFACE_REQ_TYPE = 0x1,USB_DEV_SYNCH_FRAME = 0xC,USB_DEV_SYNCH_FRAME_REQ_TYPE = 0x82,USB_HID_GET_DESCRIPTOR_REQ_TYPE = 0x81,USB_HID_CLASS_GET_REQ_TYPE = 0xA1,USB_HID_CLASS_SET_REQ_TYPE = 0x21,};
enum MACRO_VAR {VAR_CHECK_VARIABLE_PROPERTY_REVISION = 0x1,VAR_CHECK_VARIABLE_PROPERTY_READ_ONLY = 0x1,};
enum MACRO_WIN {WIN_CERT_TYPE_PKCS_SIGNED_DATA = 0x2,WIN_CERT_TYPE_EFI_PKCS115 = 0xEF0,WIN_CERT_TYPE_EFI_GUID = 0xEF1,};
enum MACRO_YES {YES = 1,};
typedef struct _4C11609B2457407E1D40095F665BFD38 NET_BLOCK;
typedef struct _D2B893A4D7D1EC443488152BB8E12929 NVME_CDW0;
typedef struct _242AB9A269C1F8977AAACB4B96496CF4 PERF_DATA;
typedef struct _45F2A5B0079B86285D2438A26C66E8CF SMM_ENTRY;
typedef struct _6E616B3B14004CB8BC9634A2D1DEDED9 SMM_TABLE;
typedef union _06DD80FC04169EA2A724593886CB6922 TPMU_NAME;
typedef struct tdTPM_KEY12 TPM_KEY12;
typedef struct tdTPM_NONCE TPM_NONCE;
typedef struct _C3113ED673D5FF4B72ABA90C2A8D9E13 EFI_LOCK;
typedef struct _934C7E7549B79FCA437F36F4A12AB250 EFI_TIME;
struct FILETIME;
typedef struct _AC684B819368CF3987AE9ACE81BE85AE HDD_INFO;
typedef struct _365641D7BE1820E0053F489ED61CB991 IP4_HEAD;
enum MACRO_CM {CM_IOCTL_GET_FEATURE_REQUEST = 1107299656,};
enum MACRO_FV {FV_DEVICE_SIGNATURE = 1599489631,};
enum MACRO_HR {HR_HANDLE_MASK = 0xFFFFFF,HR_RANGE_MASK = 0xFF000000,HR_SHIFT = 0x18,HR_PCR = 0x0,HR_HMAC_SESSION = 0x2000000,HR_POLICY_SESSION = 0x3000000,HR_TRANSIENT = 0x80000000,HR_PERSISTENT = 0x81000000,HR_NV_INDEX = 0x1000000,HR_PERMANENT = 0x40000000,};
enum MACRO_HW {HW_PCI_DP = 0x1,HW_PCCARD_DP = 0x2,HW_MEMMAP_DP = 0x3,HW_VENDOR_DP = 0x4,HW_CONTROLLER_DP = 0x5,HW_BMC_DP = 0x6,};
enum MACRO_IO {IO_APIC_IDENTIFICATION_REGISTER_INDEX = 0x0,IO_APIC_VERSION_REGISTER_INDEX = 0x1,IO_APIC_REDIRECTION_TABLE_ENTRY_INDEX = 0x10,IO_APIC_DELIVERY_MODE_FIXED = 0x0,IO_APIC_DELIVERY_MODE_LOWEST_PRIORITY = 0x1,IO_APIC_DELIVERY_MODE_SMI = 0x2,IO_APIC_DELIVERY_MODE_NMI = 0x4,IO_APIC_DELIVERY_MODE_INIT = 0x5,IO_APIC_DELIVERY_MODE_EXTINT = 0x7,};
enum MACRO_IP {IP_VERSION_4 = 4,IP_VERSION_6 = 6,};
enum MACRO_NO {NO_DISK_SIGNATURE = 0x0,};
enum MACRO_NV {NV_MEMORY_SIZE = 16384,};
enum MACRO_OP {EFI_IFR_GRAPHIC_OP = 0x4,FRAMEWORK_EFI_IFR_ONE_OF_OP = 0x5,FRAMEWORK_EFI_IFR_CHECKBOX_OP = 0x6,FRAMEWORK_EFI_IFR_NUMERIC_OP = 0x7,FRAMEWORK_EFI_IFR_PASSWORD_OP = 0x8,FRAMEWORK_EFI_IFR_ONE_OF_OPTION_OP = 0x9,FRAMEWORK_EFI_IFR_SUPPRESS_IF_OP = 0xA,EFI_IFR_END_FORM_OP = 0xB,EFI_IFR_HIDDEN_OP = 0xC,EFI_IFR_END_FORM_SET_OP = 0xD,FRAMEWORK_EFI_IFR_FORM_SET_OP = 0xE,FRAMEWORK_EFI_IFR_REF_OP = 0xF,EFI_IFR_END_ONE_OF_OP = 0x10,FRAMEWORK_EFI_IFR_END_OP = 0x10,FRAMEWORK_EFI_IFR_INCONSISTENT_IF_OP = 0x11,FRAMEWORK_EFI_IFR_EQ_ID_VAL_OP = 0x12,FRAMEWORK_EFI_IFR_EQ_ID_ID_OP = 0x13,FRAMEWORK_EFI_IFR_EQ_ID_LIST_OP = 0x14,FRAMEWORK_EFI_IFR_AND_OP = 0x15,FRAMEWORK_EFI_IFR_OR_OP = 0x16,FRAMEWORK_EFI_IFR_NOT_OP = 0x17,EFI_IFR_END_IF_OP = 0x18,EFI_IFR_GRAYOUT_IF_OP = 0x19,FRAMEWORK_EFI_IFR_DATE_OP = 0x1A,FRAMEWORK_EFI_IFR_TIME_OP = 0x1B,FRAMEWORK_EFI_IFR_STRING_OP = 0x1C,EFI_IFR_LABEL_OP = 0x1D,EFI_IFR_SAVE_DEFAULTS_OP = 0x1E,EFI_IFR_RESTORE_DEFAULTS_OP = 0x1F,EFI_IFR_BANNER_OP = 0x20,EFI_IFR_INVENTORY_OP = 0x21,EFI_IFR_EQ_VAR_VAL_OP = 0x22,FRAMEWORK_EFI_IFR_ORDERED_LIST_OP = 0x23,FRAMEWORK_EFI_IFR_VARSTORE_OP = 0x24,EFI_IFR_VARSTORE_SELECT_OP = 0x25,EFI_IFR_VARSTORE_SELECT_PAIR_OP = 0x26,};
enum MACRO_PE {PE_COFF_IMAGE = 0x10,};
enum MACRO_PT {PT_GROUP = 0x100,PT_FIXED = 0x100,};
enum MACRO_QF {QF_DATE_STORAGE_NORMAL = 0x0,QF_DATE_STORAGE_TIME = 0x10,QF_DATE_STORAGE_WAKEUP = 0x20,};
enum MACRO_RC {RC_VER1 = 0x100,};
enum MACRO_SC {SC_EDGE_TAG_HEADER = 0x0,SC_EDGE_TAG_CERT = 0x1,SC_EDGE_TAG_KEY_ID = 0x2,SC_EDGE_TAG_KEY_TYPE = 0x3,SC_EDGE_TAG_KEY_SIZE = 0x4,SC_EDGE_L_SIZE_HEADER = 0x1,SC_EDGE_L_SIZE_CERT = 0x2,SC_EDGE_L_SIZE_KEY_ID = 0x1,SC_EDGE_L_SIZE_KEY_TYPE = 0x1,SC_EDGE_L_SIZE_KEY_SIZE = 0x2,SC_EDGE_L_VALUE_HEADER = 0x1,SC_EDGE_L_VALUE_KEY_ID = 0x1,SC_EDGE_L_VALUE_KEY_TYPE = 0x1,SC_EDGE_L_VALUE_KEY_SIZE = 0x2,SC_EDGE_RSA_EXCHANGE = 0x1,SC_EDGE_RSA_SIGNATURE = 0x2,SC_EDGE_ECDSA_256 = 0x3,SC_EDGE_ECDSA_384 = 0x4,SC_EDGE_ECDSA_521 = 0x5,SC_EDGE_ECDH_256 = 0x6,SC_EDGE_ECDH_384 = 0x7,SC_EDGE_ECDH_521 = 0x8,};
typedef struct _B444406F386FA06D5BC4117DCE5A236C PCD_INFO;
typedef union u_pxe_undi PXE_UNDI;
typedef void PXE_VOID;
typedef struct _317D5CCA3E2F07BAE2E88F8B9E96A86E SKU_HEAD;
typedef struct _78A47FEDE07E4D9711F995C0E2C7B125 TCP_HEAD;
typedef struct _AE16DBD85043B20BDA4ABD45345AC744 TPM2B_IV;
typedef struct _D0D511F2FD891F706411DB7675B0E214 TPML_ALG;
typedef struct _83C70947A07E9162E2D1F09982FD84F4 TPML_CCA;
typedef struct _1146BED2FF4E61E742E6E1487898EE2B UD_TABLE;
typedef unsigned int UINT_PTR;
typedef union _A5F962F37CF2F693830E47777CAE8939 VLAN_TCI;
typedef struct _DC980AFFEFD48DDAF42EA15F1F5BC0EA VPD_HEAD;
typedef struct _3ACE1CF93237BB82D17E0610DB6007EE _PRIVATE;
typedef unsigned __int8 BOOLEAN;
struct COMSTAT;
typedef int (__stdcall *FARPROC)();
typedef const void *LPCVOID;
typedef POINT *LPPOINT;
enum MACRO_B {B_ICH_LPC_ACPI_BASE_BAR = 0xFF80,};
enum MACRO_R {R_ICH_LPC_ACPI_BASE = 0x40,};
enum MACRO_V {V_ACPI_TMR_FREQUENCY = 3579545,V_ACPI_PM1_TMR_MAX_VAL = 16777216,};
typedef struct _EA7F40BFB8C559DD1B04E9AC3E704430 NET_BUF;
typedef struct _AAF66D85676894CAA54D36565BB4BDF7 NET_MAP;
typedef struct _33F599C01F472A75885CD02E1089BF19 PCD_PPI;
typedef struct s_pxe_cdb PXE_CDB;
typedef struct _AD1E4E03DCEFA33088EE2AE0997F3288 TPMA_CC;
typedef struct _0C2D9EAA83889452A7A72FC6A5E83CA9 TPMA_NV;
typedef struct _3CC8AB98B6D3DA5B57DC01638DDC8302 TPML_CC;
typedef struct _7654F8B5F1CA2FA52493765D27CB3B7A TPMT_HA;
typedef union _F16F3B0C6B17F21C6855DE9E95AA430E TPMU_HA;
typedef struct tdTPM_KEY TPM_KEY;
typedef unsigned int clock_t;
struct timeval {int tv_sec;int tv_usec;};
typedef unsigned __int16 CHAR16;
typedef const char *LPCSTR;
typedef RECT *LPRECT;
typedef void *LPVOID;
typedef struct _COORD *PCOORD;
typedef struct _C41080AFCE16CDA5A4F1A1DBB87DA081 TCP_IO;
typedef struct _UDP_IO UDP_IO;
typedef unsigned __int16 UINT16;
typedef unsigned __int32 UINT32;
typedef unsigned __int64 UINT64;
typedef int time_t;
typedef char CHAR8;
typedef struct _COORD COORD;
typedef unsigned int DWORD;
typedef __int16 INT16;
typedef __int32 INT32;
typedef __int64 INT64;
typedef struct _IP_IO IP_IO;
typedef DCB *LPDCB;
typedef MSG *LPMSG;
struct POINT;
typedef void *PVOID;
typedef __int16 SHORT;
typedef char TCHAR;
typedef unsigned __int8 UINT8;
typedef unsigned __int16 WCHAR;
typedef int pid_t;
typedef int BOOL;
typedef void *FILE;
typedef struct _EA78F3BF8BD8468A78FEAD14EA377F96 GUID;
typedef signed __int8 INT8;
typedef int LONG;
struct RECT;
typedef unsigned int UINT;
typedef unsigned __int16 WORD;
struct DCB;
typedef void *DIR;
struct MSG;
struct tm {int tm_sec;int tm_min;int tm_hour;int tm_mday;int tm_mon;int tm_year;int tm_wday;int tm_yday;int tm_isdst;int tm_gmtoff;char *tm_zone;};
typedef PCI_EXPRESS_EXTENDED_CAPABILITIES_VIRTUAL_CHANNEL_CAPABILITY PCI_EXPRESS_EXTENDED_CAPABILITIES_MULTI_FUNCTION_VIRTUAL_CHANNEL_CAPABILITY;
struct ____DC0BAFAEDE9FCAFF80C457AFB6D04FDA___DADC775BEF5E9EA8DCFD18C68E476C3D {UINT16 Identifier;UINT16 Sequence;};
union _053218E54E0AD47DEB9BF7DE578D522B___C7D0B743AB952EFC2A7AFEAC431E367D {UINT32 PhysicalAddress;UINT32 VirtualSize;};
struct _31E9CB5CFBDE614C3E2B0999B633A6B4___2ABA17BD0BBC6518571AFE7296D4D674 {UINT8 MinValue;UINT8 MaxValue;UINT8 Step;};
struct _31E9CB5CFBDE614C3E2B0999B633A6B4___2BAFA71B4E3F86C6DE401586015B2E35 {UINT32 MinValue;UINT32 MaxValue;UINT32 Step;};
struct _31E9CB5CFBDE614C3E2B0999B633A6B4___412D3563C96312F953403FD110B45676 {UINT16 MinValue;UINT16 MaxValue;UINT16 Step;};
struct _31E9CB5CFBDE614C3E2B0999B633A6B4___E4442E5F6EC1640A130B3E3B0DF32964 {UINT64 MinValue;UINT64 MaxValue;UINT64 Step;};
struct _63B58ABB6690812C9E02ADD697E36664___52BDCD81E958047DDA7B3FF817AAA801 {CHAR8 Reserved[32];};
struct _80683930D45E06D3195B4F9BDBEC48CB___FFB3E7B8DBDAAE83694BDE6360C01F1F {unsigned __int32 Reserved0 : 1;unsigned __int32 LevelTriggeredInterrupt : 1;unsigned __int32 InterruptEnable : 1;unsigned __int32 PeriodicInterruptEnable : 1;unsigned __int32 PeriodicInterruptCapablity : 1;unsigned __int32 CounterSizeCapablity : 1;unsigned __int32 ValueSetEnable : 1;unsigned __int32 Reserved1 : 1;unsigned __int32 CounterSizeEnable : 1;unsigned __int32 InterruptRoute : 5;unsigned __int32 MsiInterruptEnable : 1;unsigned __int32 MsiInterruptCapablity : 1;unsigned __int32 Reserved2 : 16;UINT32 InterruptRouteCapability;};
union _A85672E1F3F2CA4FD8275099D6728D85___C1429C3019ECE9730FDABFDC49B7E27B {UINT32 SymbolTableIndex;UINT32 VirtualAddress;};
struct _BAA371FD3705A9DA82A7651CF9EF53DA___78056429B4AE981D96BF2EB5C0ABFB5E {UINT32 Low;UINT32 High;};
struct _E05C756931CF804D039B8584A5FAC0BF___DAC29709A469181C8D406C586558B3B0 {UINT8 Header;UINT8 File;};
typedef enum _444B2FEFA1CECE51140F0B8504328865 EFI_LEGACY_MP_TABLE_ENTRY_EXT_SYS_ADDR_SPACE_MAPPING_TYPE;
typedef enum _D78241CB2ADAB82AE1F33A0DB8760A87 EFI_LEGACY_MP_TABLE_ENTRY_LOCAL_INT_FLAGS_POLARITY;
typedef enum _6727549795A61C17F8BDE9AE769E5510 EFI_LEGACY_MP_TABLE_ENTRY_LOCAL_INT_FLAGS_TRIGGER;
typedef EFI_MISC_MANAGEMENT_DEVICE_COMPONENT_DESCRIPTION_DATA EFI_MISC_MANAGEMENT_DEVICE_COMPONENT_DESCRIPTION;
typedef enum _06440B68A3B4721AC350D846B5332791 EFI_LEGACY_MP_TABLE_ENTRY_IO_INT_FLAGS_POLARITY;
typedef EFI_MISC_REMOTE_ACCESS_MANUFACTURER_DESCRIPTION_DATA EFI_MISC_REMOTE_ACCESS_MANUFACTURER_DESCRIPTION;
typedef enum _11CA649B97EFEADE1045E3AB5C58033C EFI_LEGACY_MP_TABLE_ENTRY_IO_INT_FLAGS_TRIGGER;
typedef UINT32 EFI_BLUETOOTH_CONFIG_REMOTE_DEVICE_STATE_TYPE;
typedef enum _F410EC407F5E563BE8D0A3E8D6F21628 EFI_EXTENDED_SAL_STATUS_CODE_SERVICES_FUNC_ID;
typedef EFI_MISC_ELECTRICAL_CURRENT_PROBE_DESCRIPTION_DATA EFI_MISC_ELECTRICAL_CURRENT_PROBE_DESCRIPTION;
typedef enum _291CBADD0B451492DAB3278FD48304FE EFI_PCI_HOST_BRIDGE_RESOURCE_ALLOCATION_PHASE;
typedef enum _9D0E62C210C2681D8E327F353B61EB5C EFI_BLUETOOTH_CONNECT_COMPLETE_CALLBACK_TYPE;
typedef enum _83B777DA911D31EC8E54A9EBBBCC461E EFI_PCI_CONTROLLER_RESOURCE_ALLOCATION_PHASE;
typedef EFI_MISC_PORT_INTERNAL_CONNECTOR_DESIGNATOR_DATA EFI_MISC_PORT_INTERNAL_CONNECTOR_DESIGNATOR;
typedef enum _0E25DA482AC46FD7BEDA46D0A70987D3 EFI_EXTENDED_SAL_FV_BLOCK_SERVICES_FUNC_ID;
typedef enum _15C2A3468736860E3AEA9A63B4F246BE EFI_EXTENDED_SAL_VARIABLE_SERVICES_FUNC_ID;
typedef enum _228D566C85106D8F19F0E86138FD6ED6 EFI_MISC_BOOT_INFORMATION_STATUS_DATA_TYPE;
typedef enum _A299BA90A63ED48EEBDAF6B55010F314 EFI_MISC_PORTABLE_BATTERY_DEVICE_CHEMISTRY;
typedef EFI_NETWORK_INTERFACE_IDENTIFIER_PROTOCOL EFI_NETWORK_INTERFACE_IDENTIFIER_INTERFACE;
struct _EFI_DRIVER_SUPPORTED_EFI_VERSION_PROTOCOL {UINT32 Length;UINT32 FirmwareVersion;};
typedef enum _68A3FD67FAFE063CC38FA105F85980EA EFI_EXTENDED_SAL_BASE_IO_SERVICES_FUNC_ID;
typedef enum _CFA4505BBDB06FEC8F6202BB7238D362 EFI_EXTENDED_SAL_MCA_LOG_SERVICES_FUNC_ID;
typedef enum _AA7BAA2B861C19E798BB13C0EE31D598 EFI_PCI_ROOT_BRIDGE_IO_PROTOCOL_OPERATION;
typedef enum _96C91716420F1E8AE6D45422D4AE7826 EDKII_UFS_HOST_CONTROLLER_PROTOCOL_WIDTH;
typedef enum _EEB291B15B648ABDE4B36ED296CC9ED8 EFI_DRIVER_CONFIGURATION_ACTION_REQUIRED;
typedef enum _971A3FD93355A67CE0FB1B851D138455 EFI_LEGACY_MP_TABLE_ENTRY_LOCAL_INT_TYPE;
typedef EFI_MISC_NUMBER_OF_INSTALLABLE_LANGUAGES_DATA EFI_MISC_NUMBER_OF_INSTALLABLE_LANGUAGES;
typedef enum _9DED694C5CF8D6AFFE222F69F2EEC155 EFI_EXTENDED_SAL_CACHE_SERVICES_FUNC_ID;
typedef enum _E66621B17FF7D6808B0DC04D4F01C32D EFI_EXTENDED_SAL_RESET_SERVICES_FUNC_ID;
typedef enum _AFA10D688E4DDA6F698B42EE7737E392 EFI_MISC_MANAGEMENT_DEVICE_ADDRESS_TYPE;
typedef enum _AFC23D8695F224D2818BAB6A2850B4BF EFI_PCI_IO_PROTOCOL_ATTRIBUTE_OPERATION;
typedef enum _66E5F831483F77A64993EE6F273DF642 EFI_EXTENDED_SAL_BASE_SERVICES_FUNC_ID;
typedef EFI_HII_AIBT_OVERLAY_IMAGES_BLOCK EFI_HII_AIBT_OVERLAY_IMAGES_LOOP_BLOCK;
typedef EFI_MISC_MANAGEMENT_DEVICE_DESCRIPTION_DATA EFI_MISC_MANAGEMENT_DEVICE_DESCRIPTION;
typedef EFI_MISC_TEMPERATURE_PROBE_DESCRIPTION_DATA EFI_MISC_TEMPERATURE_PROBE_DESCRIPTION;
typedef UINT32 EFI_PROCESSOR_APIC_VERSION_NUMBER_DATA;
typedef EFI_EXP_BASE10_DATA *EFI_PROCESSOR_CORE_FREQUENCY_LIST_DATA;
typedef EFI_FIRMWARE_VOLUME_BLOCK_PROTOCOL EFI_SMM_FIRMWARE_VOLUME_BLOCK_PROTOCOL;
typedef CHAR16 *EFI_USER_INFO_CREDENTIAL_PROVIDER_NAME;
typedef enum _28335F8F674B121FB50F263052558627 MISC_BOOT_INFORMATION_STATUS_DATA_TYPE;
typedef SMM_VARIABLE_COMMUNICATE_GET_NEXT_VARIABLE_NAME SMM_VARIABLE_COMMUNICATE_LOCK_VARIABLE;
typedef EFI_DEVICE_PATH_PROTOCOL *(*EFI_DEVICE_PATH_UTILS_APPEND_INSTANCE)(const EFI_DEVICE_PATH_PROTOCOL *DevicePath, const EFI_DEVICE_PATH_PROTOCOL *DevicePathInstance);
typedef EFI_DEVICE_PATH_PROTOCOL *(*EFI_DEVICE_PATH_UTILS_DUP_DEVICE_PATH)(const EFI_DEVICE_PATH_PROTOCOL *DevicePath);
typedef enum _3C2E87340B2ECB3987890C370C2F1A6D EFI_EXTENDED_SAL_MCA_SERVICES_FUNC_ID;
typedef enum _A33916867FA0679FD06A21CCD1FA099D EFI_EXTENDED_SAL_MTC_SERVICES_FUNC_ID;
typedef enum _6C6286A946E9A50EAB480669720C2063 EFI_EXTENDED_SAL_PAL_SERVICES_FUNC_ID;
typedef enum _2B741E987BCE6E75B46A72FBF4FBB2F1 EFI_EXTENDED_SAL_PCI_SERVICES_FUNC_ID;
typedef enum _C72F4BD5F5A673D64E8D26D9FA1E85F0 EFI_EXTENDED_SAL_RTC_SERVICES_FUNC_ID;
typedef enum _5600CE6B24E65D2C626E2368EC93E622 EFI_LEGACY_MP_TABLE_ENTRY_IO_INT_TYPE;
typedef enum _CC5966C4B42F99E407704A4672239B68 EFI_PCI_ROOT_BRIDGE_IO_PROTOCOL_WIDTH;
typedef UINT8 EFI_PROCESSOR_ENABLED_CORE_COUNT_DATA;
typedef EFI_EXP_BASE10_DATA *EFI_PROCESSOR_FSB_FREQUENCY_LIST_DATA;
typedef EFI_EXP_BASE10_DATA EFI_PROCESSOR_MAX_CORE_FREQUENCY_DATA;
typedef EFI_FAULT_TOLERANT_WRITE_PROTOCOL EFI_SMM_FAULT_TOLERANT_WRITE_PROTOCOL;
typedef enum _2809477D9BE48B6D6398F34312F4748F EFI_EXTENDED_SAL_MP_SERVICES_FUNC_ID;
typedef EFI_HII_AIBT_CLEAR_IMAGES_BLOCK EFI_HII_AIBT_CLEAR_IMAGES_LOOP_BLOCK;
typedef EFI_HII_AIBT_RESTORE_SCRN_BLOCK EFI_HII_AIBT_RESTORE_SCRN_LOOP_BLOCK;
typedef EFI_MISC_SMBIOS_STRUCT_ENCAPSULATION_DATA EFI_MISC_SMBIOS_STRUCT_ENCAPSULATION;
typedef EFI_EXP_BASE10_DATA EFI_PROCESSOR_MAX_FSB_FREQUENCY_DATA;
typedef enum _5A383AE503DF1EF2DA7EA1269CD23EB9 EDKII_UFS_HOST_CONTROLLER_OPERATION;
typedef enum _D603210ECBD6F215D124C5E1484CC874 EFI_BOOT_MANAGER_LOAD_OPTION_NUMBER;
typedef EFI_FIRMWARE_VOLUME_BLOCK_PROTOCOL EFI_FIRMWARE_VOLUME_BLOCK2_PROTOCOL;
typedef enum _F2160CDE02B348176156DBB7870003AA EFI_GENERIC_ERROR_STATUS_ERROR_TYPE;
typedef enum _5947ECD62441D74C35F7059985B6D0AB EFI_MEMORY_ERROR_DETECT_METHOD_TYPE;
typedef EFI_PCI_ROOT_BRIDGE_IO_PROTOCOL EFI_SMM_PCI_ROOT_BRIDGE_IO_PROTOCOL;
typedef EFI_SWAP_ADDRESS_RANGE_PROTOCOL EFI_SMM_SWAP_ADDRESS_RANGE_PROTOCOL;
typedef UINT32 EFI_USER_INFO_ACCESS_BOOT_ORDER_HDR;
typedef enum _42DEA996CB1173985AAFC9743FF83965 MISC_MANAGEMENT_DEVICE_ADDRESS_TYPE;
typedef enum _B76326B8051BB8DDE6D9C20C0E079616 EFI_80211_AUTHENTICATE_RESULT_CODE;
typedef enum _1379702E921F74395970B155E65F02EF EFI_80211_DISASSOCIATE_RESULT_CODE;
typedef EFI_COMMON_SECTION_HEADER2 EFI_FIRMWARE_VOLUME_IMAGE_SECTION2;
typedef enum _82FEAFD02D31575BA50B03CC98CD8C60 EFI_MEMORY_SUPPORT_INTERLEAVE_TYPE;
typedef enum _56B4C09C4EC272A765469B7123F55FB9 EFI_MISC_POINTING_DEVICE_INTERFACE;
typedef EFI_MISC_VOLTAGE_PROBE_DESCRIPTION_DATA EFI_MISC_VOLTAGE_PROBE_DESCRIPTION;
typedef CHAR16 *EFI_USER_INFO_CREDENTIAL_TYPE_NAME;
struct _EFI_HII_IMAGE_PALETTE_INFO_HEADER {UINT16 PaletteCount;};
struct _0187B879DFDE98BF50709C8BB4D8DC1A {CHAR16 VolumeLabel[1];};
struct _03FCBC19C10EBCCF3C938B73B2A76388 {UINT16 Raw[256];};
struct _054D116A6266D7B79D025BB0E63173BB {UINT8 Addr[6];};
struct _0704109AA9E0FECF23DFB168BA173E5D {UINT32 VirtualAddress;UINT32 SizeOfBlock;};
struct _0B4D06972EA9D643500DE895FC601FFB {UINT16 Value;UINT16 Exponent;};
struct _0C7BCB68DD0E324F4A9D3964DBF59972 {UINT64 GpiNum;};
struct _0C90ECF20B74BF0C999246AF56E6C728 {UINT16 OpCode;UINT16 Block[1];};
struct _0DFB5ABEC4B6100E9816A4F84E51E06B {UINT32 Signature;UINT32 Unknown;UINT32 Unknown2;UINT32 Unknown3;};
struct _0EE4DE2734B075BC9FABFCD2440FDF22 {UINT64 X0;UINT64 X1;UINT64 X2;UINT64 X3;UINT64 X4;UINT64 X5;UINT64 X6;UINT64 X7;UINT64 X8;UINT64 X9;UINT64 X10;UINT64 X11;UINT64 X12;UINT64 X13;UINT64 X14;UINT64 X15;UINT64 X16;UINT64 X17;UINT64 X18;UINT64 X19;UINT64 X20;UINT64 X21;UINT64 X22;UINT64 X23;UINT64 X24;UINT64 X25;UINT64 X26;UINT64 X27;UINT64 X28;UINT64 FP;UINT64 LR;UINT64 SP;UINT64 V0[2];UINT64 V1[2];UINT64 V2[2];UINT64 V3[2];UINT64 V4[2];UINT64 V5[2];UINT64 V6[2];UINT64 V7[2];UINT64 V8[2];UINT64 V9[2];UINT64 V10[2];UINT64 V11[2];UINT64 V12[2];UINT64 V13[2];UINT64 V14[2];UINT64 V15[2];UINT64 V16[2];UINT64 V17[2];UINT64 V18[2];UINT64 V19[2];UINT64 V20[2];UINT64 V21[2];UINT64 V22[2];UINT64 V23[2];UINT64 V24[2];UINT64 V25[2];UINT64 V26[2];UINT64 V27[2];UINT64 V28[2];UINT64 V29[2];UINT64 V30[2];UINT64 V31[2];UINT64 ELR;UINT64 SPSR;UINT64 FPSR;UINT64 ESR;UINT64 FAR;};
struct _1008A27E3314C410F0C714DEBA727987 {UINT8 Addr[32];};
struct _120BA447C6AA090F9036528BA5F22CD6 {UINT8 LogType;UINT8 DataFormatType;};
struct _1409ABB5DE15AF90B779F0C11012079A {UINT32 R0;UINT32 R1;UINT32 R2;UINT32 R3;UINT32 R4;UINT32 R5;UINT32 R6;UINT32 R7;UINT32 R8;UINT32 R9;UINT32 R10;UINT32 R11;UINT32 R12;UINT32 SP;UINT32 LR;UINT32 PC;UINT32 CPSR;UINT32 DFSR;UINT32 DFAR;UINT32 IFSR;UINT32 IFAR;};
struct _16724BBD91DBF8D47E877525B5D02DAA {FRAMEWORK_EFI_IFR_NUMERIC Year;FRAMEWORK_EFI_IFR_NUMERIC Month;FRAMEWORK_EFI_IFR_NUMERIC Day;};
struct _16C1C0501231D7862009016A4B74D4C3 {VARIABLE_HEADER *CurrPtr;VARIABLE_HEADER *EndPtr;VARIABLE_HEADER *StartPtr;};
struct _16F9082739EE6C04847F72AA2153A45C {EFI_ACPI_5_1_FPDT_PERFORMANCE_TABLE_HEADER Header;};
struct _1AFA0B1BEAF8357FC0FB7159EE6E5404 {UINT32 NumBlocks;UINT32 Length;};
struct _1EA17B726046B3496B0436F45751EDB9 {EFI_SMM_LOCK_BOX_PARAMETER_HEADER Header;};
struct _244D31417EE53E4184DFD3241B59D73A {UINT32 ConOutColumn;UINT32 ConOutRow;};
struct _24C64E6FF9FEFC4F546A1515D1BC2428 {UINT8 OpCode;UINT8 Length;};
struct _26B16192F256D03156C6EFAB277DFED7 {UINT16 ExtEntrySize;UINT16 ExtEntryType;};
struct _2D320466B587A93666D40489CEDD31F0 {PEI_NT_THUNK_INTERFACE NtThunk;};
struct _317D5CCA3E2F07BAE2E88F8B9E96A86E {UINT32 SkuDataStartOffset;UINT32 SkuIdTableOffset;};
struct _3375147F2BA8E6E33D62D81E584F04A1 {UINT8 Irq;UINT8 Used;};
struct _33EFD90D9BAD8D970035A0DA91BDBBB9 {UINT16 SrcPort;UINT16 DstPort;UINT16 Length;UINT16 Checksum;};
struct _348ED7D33E03403EE12F92BD2829FF3E {BOOLEAN iScsiIpv4BootCapablity;BOOLEAN iScsiIpv6BootCapablity;BOOLEAN FCoeBootCapablity;BOOLEAN OffloadCapability;BOOLEAN iScsiMpioCapability;BOOLEAN iScsiIpv4Boot;BOOLEAN iScsiIpv6Boot;BOOLEAN FCoeBoot;};
struct _3AE93AF66E5CDFC959FD4700EA8A3AFF {FRAMEWORK_EFI_IFR_NUMERIC Hour;FRAMEWORK_EFI_IFR_NUMERIC Minute;FRAMEWORK_EFI_IFR_NUMERIC Second;};
struct _3B20605EA09536B4367411F2FAFF7675 {UINT8 OperatingExtId;UINT8 OperatingClass;UINT8 CoverageClass;};
struct _3B3E1E99674685BB73C22F9320B2CB91 {CHAR16 *HostName;};
struct _3B494AB02174C47782BE1700D6EAB32E {UINT8 Type;UINT8 SubType;UINT8 Length[2];};
struct _3C65EE24A7D7405EB55CFDAE3ED0C45F {UINT8 BusNumber;UINT8 SegmentNumber;};
struct _3DB03835212DDBC2D34A437E663C5170 {UINT8 DeviceAddress;UINT8 Command;UINT8 DataMask;UINT8 CompareValue;UINT8 EventSenseType;UINT8 EventType;UINT8 EventOffset;UINT8 EventSourceType;UINT8 EventSeverity;UINT8 SensorNumber;UINT8 Entity;UINT8 EntityInstance;};
union _3E67EB895903F84199FB26C795967668 {EFI_SMI_CPU_SAVE_STATE Ia32SaveState;};
struct _3EF65AC5CDE14CA7FFCAB6F0D1921DE1 {unsigned __int8 CommandComplete : 1;unsigned __int8 SciDoorbell : 1;unsigned __int8 Error : 1;unsigned __int8 PlatformNotification : 1;unsigned __int8 Reserved : 4;UINT8 Reserved1;};
struct _3F721F7E75155B3A893AD9E3169C16C0 {UINT8 Seconds;UINT8 Minutes;UINT8 Hours;UINT8 Flag;UINT8 Day;UINT8 Month;UINT8 Year;UINT8 Century;};
struct _41285EA2700927FB7EA2A41D735B4286 {UINT32 PPFlags;};
struct _432E330A9C7A5946C7D3E709D76A2466 {UINT32 DupAddrDetectTransmits;};
struct _43C3FB58CE5610592662F3E5656061A9 {UINT8 LastPciBus;};
struct _442F6D906E36E38DEFB617BFE953DA2C {UINT8 Seconds;UINT8 Minutes;UINT8 Hours;UINT8 Reserved;UINT8 Day;UINT8 Month;UINT8 Year;UINT8 Century;};
struct _4534D1011D9CEF71C49F848901F967E1 {UINT64 R0;UINT64 R1;UINT64 R2;UINT64 R3;UINT64 R4;UINT64 R5;UINT64 R6;UINT64 R7;UINT64 Flags;UINT64 ControlFlags;UINT64 Ip;};
struct _4537036C5940158056D50D54486E77E7 {UINT64 Period;UINT64 SmiTickInterval;};
struct _456973BE6483CBF66CB9F4134511B36A {UINT8 opcode;unsigned __int8 reserved_1 : 5;unsigned __int8 lun : 3;UINT8 reserved_2;UINT8 reserved_3;UINT8 allocation_length;UINT8 reserved_5;UINT8 reserved_6;UINT8 reserved_7;UINT8 reserved_8;UINT8 reserved_9;UINT8 reserved_10;UINT8 reserved_11;};
struct _47D66F58E5F6426F5B779F0231FFCB5E {INT16 Value;INT16 Exponent;};
struct _4A270D6A1801963C90715604F1249229 {UINT8 Name[16];UINT8 Date[12];UINT8 UserID[6];UINT8 GroupID[6];UINT8 Mode[8];UINT8 Size[10];UINT8 EndHeader[2];};
struct _4A90C62CD962DACDB51DD5DF93BE7C21 {UINT8 Type;UINT8 Length;};
struct _4F42FF7208C7032221F0AFE65CDE6B10 {UINT8 Type;UINT8 PlatformFeatures;UINT8 Reserved[14];};
struct _4FBACC2AF460480C3B910C6B42145D5D {UINT32 AdapterId;UINT32 Attributes;UINT32 IoAlign;};
struct _501B5AB5E1108C43AC9B253DE6317146 {EFI_MAC_ADDRESS SanMacAddress;};
struct _50CD466421330932FB97D67515483505 {EFI_ACPI_5_0_FPDT_PERFORMANCE_TABLE_HEADER Header;};
struct _532A9AF1593900B2B5CFF34B454237AB {UINT32 Major;UINT32 Minor;};
struct _5390CCC7619F965D278579BBB9B5F30C {SMBIOS_STRUCTURE Hdr;};
struct _53CB2C6CEB72FF4C5581D54CAF7F12D2 {UINT16 CommandBlockBaseAddr;UINT16 ControlBlockBaseAddr;};
struct _543F6701E62D7EB496B46C6BDAD369A2 {UINT8 ElementID;UINT8 Length;};
struct _5440331CAFA6ABD3C02CFEC11FF9250F {unsigned __int8 Peripheral_Type : 5;unsigned __int8 Peripheral_Qualifier : 3;UINT8 PageCode;UINT8 Reserved_2;UINT8 PageLength;UINT8 Reserved_4_5[2];UINT8 OptimalTransferLengthGranularity2;UINT8 OptimalTransferLengthGranularity1;UINT8 MaximumTransferLength4;UINT8 MaximumTransferLength3;UINT8 MaximumTransferLength2;UINT8 MaximumTransferLength1;UINT8 OptimalTransferLength4;UINT8 OptimalTransferLength3;UINT8 OptimalTransferLength2;UINT8 OptimalTransferLength1;UINT8 MaximumPrefetchXdreadXdwriteTransferLength4;UINT8 MaximumPrefetchXdreadXdwriteTransferLength3;UINT8 MaximumPrefetchXdreadXdwriteTransferLength2;UINT8 MaximumPrefetchXdreadXdwriteTransferLength1;};
struct _54FE3DB773D7B15849DFA3D4C6C5E58D {UINT32 FragmentLength;void *FragmentBuffer;};
struct _55E4D2FC038374726F40A1D0C9425FFB {UINT8 opcode;unsigned __int8 reserved_1 : 5;unsigned __int8 lun : 3;UINT8 Lba0;UINT8 Lba1;UINT8 Lba2;UINT8 Lba3;UINT8 reserved_6;UINT8 TranLen0;UINT8 TranLen1;UINT8 reserved_9;UINT8 reserved_10;UINT8 reserved_11;};
struct _56B0FCAB77808F3FEC78AD79AAF332E1 {UINT32 Attributes;UINT32 IoAlign;UINT32 NvmeVersion;};
struct _58458B46D190575D5AC2EE75F1C79484 {EFI_TCP6_COMPLETION_TOKEN CompletionToken;};
struct _5A765037B17BAD4D06DAA996E7CCF176 {UINT32 Type;UINT32 Size;};
struct _5B5F54FF204B33D9368F2209DA317CEF {TPM2B_NAME name;TPM2B_NAME qualifiedName;};
struct _5B97CA5679D7ACE99F5F725DE30AD913 {UINT32 Signature;UINT32 HeaderCheckSum;UINT32 FileLength;UINT32 NumberOfImages;};
struct _5BB075E3BD7EB0C29B04C8800F5BFD3D {UINT8 CapabilityID;UINT8 NextItemPtr;};
struct _5F3F6D3C0B4739D9A0ECDC40C1BF2C33 {UINT8 Address[6];};
struct _5FD42F7B800E31DA07875AD4D46FD084 {UINT8 TranslatorHubAddress;UINT8 TranslatorPortNumber;};
struct _6027857916414684B693573B4A22B1E3 {EFI_ACPI_DESCRIPTION_HEADER Header;};
struct _6B11944D848591EA84BD0403BC571A74 {UINT8 Command;unsigned __int8 Reserved : 7;unsigned __int8 GenerateSci : 1;};
struct _6BD8254A58F4666E375C9F1EF7748CFA {UINT8 Id[8];};
struct _6E10D8C8C16DA8379B9DEB89A5C74789 {UINT32 VirtualAddress;UINT32 Size;};
struct _6E17AA64CD37FB54DCAAEB752A277C69 {UINT32 DW0;UINT32 DW1;UINT32 DW2;UINT32 DW3;};
struct _6EB51CED1E48D524F66C3DACB14CC471 {UINT32 Msr;UINT32 BaseAddress;UINT32 Length;};
struct _6F6EE827B4FA5A9551504B14859E325D {UINT8 opcode;unsigned __int8 reserved_1 : 5;unsigned __int8 lun : 3;UINT8 reserved_2;UINT8 reserved_3;UINT8 reserved_4;UINT8 reserved_5;UINT8 reserved_6;UINT8 allocation_length_hi;UINT8 allocation_length_lo;UINT8 reserved_9;UINT8 reserved_10;UINT8 reserved_11;};
struct _701FE7AFA81149B1EC002359B3E8F6D6 {EFI_HOB_GENERIC_HEADER Header;};
struct _7054B44EE30EB830E8E2D8442E4DB9B3 {BOOLEAN IsHard;BOOLEAN Notify;};
struct _706EAF03690DB7D8F4777AD8723438A1 {UINT64 Size;};
struct _70C88BBAC6A895EE89DD072EE7C5A19E {UINT8 BlockType;};
struct _74CC277CB86DBF393966D2A8256E64EC {UINT32 ErrorLevel;};
struct _76DF60A307B2AF677FDBB7728CC04997 {EFI_HII_PACK_HEADER Header;};
struct _775CA34CBECCC7D29F5B2C6C3B79D91F {UINT64 RxTotalFrames;UINT64 RxGoodFrames;UINT64 RxUndersizeFrames;UINT64 RxOversizeFrames;UINT64 RxDroppedFrames;UINT64 RxUnicastFrames;UINT64 RxBroadcastFrames;UINT64 RxMulticastFrames;UINT64 RxCrcErrorFrames;UINT64 RxTotalBytes;UINT64 TxTotalFrames;UINT64 TxGoodFrames;UINT64 TxUndersizeFrames;UINT64 TxOversizeFrames;UINT64 TxDroppedFrames;UINT64 TxUnicastFrames;UINT64 TxBroadcastFrames;UINT64 TxMulticastFrames;UINT64 TxCrcErrorFrames;UINT64 TxTotalBytes;UINT64 Collisions;UINT64 UnsupportedProtocol;};
struct _7929C563E7B63FC05769B8F72B15925C {UINT32 Version;UINT32 HeaderSize;UINT32 SizeOfEntries;UINT32 NumberOfEntries;};
struct _7A80A566819C1D2378DE230434781E7C {UINT8 EntryType;};
struct _7AAE256296D889623FA30C003164E569 {EFI_IP_ADDRESS IpAddr;EFI_IP_ADDRESS SubnetMask;EFI_IP_ADDRESS GwAddr;};
struct _7E9AB06D160639A5C09D295A039575CE {EFI_PCI_CAPABILITY_HDR Hdr;};
struct _81F0D2C61C824F8B236B19C895A58EED {UINT64 f2[2];UINT64 f3[2];UINT64 f4[2];UINT64 f5[2];UINT64 f6[2];UINT64 f7[2];UINT64 f8[2];UINT64 f9[2];UINT64 f10[2];UINT64 f11[2];UINT64 f12[2];UINT64 f13[2];UINT64 f14[2];UINT64 f15[2];UINT64 f16[2];UINT64 f17[2];UINT64 f18[2];UINT64 f19[2];UINT64 f20[2];UINT64 f21[2];UINT64 f22[2];UINT64 f23[2];UINT64 f24[2];UINT64 f25[2];UINT64 f26[2];UINT64 f27[2];UINT64 f28[2];UINT64 f29[2];UINT64 f30[2];UINT64 f31[2];};
struct _8292127E0542D73B0C01312C9382287A {void *NvRamMap;UINT32 EntryCount;};
struct _892A7B8B66E90ADE7F47F6E41103E6CC {UINT32 RedMask;UINT32 GreenMask;UINT32 BlueMask;UINT32 ReservedMask;};
struct _8A15A7F84F1451ACE700F39DC39AEB35 {UINT8 reserved_0;UINT8 reserved_1;UINT8 reserved_2;UINT8 Capacity_Length;UINT8 LastLba3;UINT8 LastLba2;UINT8 LastLba1;UINT8 LastLba0;unsigned __int8 DesCode : 2;unsigned __int8 reserved_9 : 6;UINT8 BlockSize2;UINT8 BlockSize1;UINT8 BlockSize0;};
struct _9094725A69D8547E84752F140DA0F190 {UINT64 FrLow;UINT64 FrHigh;};
struct _90E32EF08B0EB3D73D5F2CC5F62B8DAE {EFI_STATUS_CODE_DATA DataHeader;};
struct _92DD745DF4632D6793D56D62C055DD39 {LIST_ENTRY Link;void *Key;void *Value;};
struct _93A65022EF1C4BD008724E599E68410C {unsigned __int32 PerformanceIndex : 7;unsigned __int32 Reserved1 : 5;unsigned __int32 TypicalPowerDissipation : 20;UINT32 TransitionLatency1;UINT32 TransitionLatency2;UINT32 Reserved2;};
struct _94668F84F3B04721E425FCF53448BF01 {UINT32 CapsuleArrayNumber;void *CapsulePtr[1];};
struct _94B90FE610E36811F89326FEA542A5F8 {UINT8 SubElementID;UINT8 Length;UINT8 Data[1];};
struct _97E249F812B4D790FE9B3BA3EEE14A5A {EFI_IPv4_ADDRESS SubnetAddress;EFI_IPv4_ADDRESS SubnetMask;EFI_IPv4_ADDRESS GatewayAddress;};
struct _9802A0BB7B0B0D6C622372855E5DAB1D {UINT8 SmiTriggerRegister;UINT8 SmiDataRegister;};
struct _983E57500E9B507B029E1E75021F3B41 {EFI_ACPI_6_0_FPDT_PERFORMANCE_TABLE_HEADER Header;};
struct _9B6083668C49B11131D9AC874471408F {UINT8 FirstChannelNumber;UINT8 NumberOfChannels;};
struct _9BCDB97CCD6963F32812F091F8E01AA1 {UINT64 NumberOfProcessors;UINT64 LocalIDRegister;};
struct _9BF4DBB8ED4FAFF7CD583EAD000338FE {UINT8 PcieAer[96];};
struct _9D89345825FDE1AAB589E77F01DBB08D {UINT16 ScheduledPoweronMonth;UINT16 ScheduledPoweronDayOfMonth;UINT16 ScheduledPoweronHour;UINT16 ScheduledPoweronMinute;UINT16 ScheduledPoweronSecond;};
struct _9FC8A72A735B8C834CE9E22C02A94C15 {UINT8 BootIndicator;UINT8 StartHead;UINT8 StartSector;UINT8 StartTrack;UINT8 OSIndicator;UINT8 EndHead;UINT8 EndSector;UINT8 EndTrack;UINT8 StartingLBA[4];UINT8 SizeInLBA[4];};
struct _A14CB1401ABA57E2B089C5FB45E218F1 {UINT64 Frequency;UINT64 EndValue;};
struct _A1AE7E9EF66810FE800C427EFBE34A13 {unsigned __int8 error_code : 7;unsigned __int8 valid : 1;UINT8 reserved_1;unsigned __int8 sense_key : 4;unsigned __int8 reserved_2 : 1;unsigned __int8 Vendor_specifc_1 : 3;UINT8 vendor_specific_3;UINT8 vendor_specific_4;UINT8 vendor_specific_5;UINT8 vendor_specific_6;UINT8 addnl_sense_length;UINT8 vendor_specific_8;UINT8 vendor_specific_9;UINT8 vendor_specific_10;UINT8 vendor_specific_11;UINT8 addnl_sense_code;UINT8 addnl_sense_code_qualifier;UINT8 field_replaceable_unit_code;unsigned __int8 sense_key_specific_15 : 7;unsigned __int8 SKSV : 1;UINT8 sense_key_specific_16;UINT8 sense_key_specific_17;};
struct _A4AC343ACBC8884B813ED3A3A73BDE99 {EFI_DEVICE_PATH_PROTOCOL *HpcDevicePath;EFI_DEVICE_PATH_PROTOCOL *HpbDevicePath;};
struct _A63D8E7FAAB623CF824F0D871B91118C {UINT8 Blue;UINT8 Green;UINT8 Red;UINT8 Reserved;};
struct _A87A74325978861265FAE567512FF340 {unsigned __int64 InfoValid : 1;unsigned __int64 ReqValid : 1;unsigned __int64 RespValid : 1;unsigned __int64 TargetValid : 1;unsigned __int64 IpValid : 1;unsigned __int64 Reserved : 59;UINT64 Info;UINT64 Req;UINT64 Resp;UINT64 Target;UINT64 Ip;};
struct _A8B12E604CDA1E20D8FEE87F3D46AD69 {TPMT_KEYEDHASH_SCHEME scheme;};
struct _A9A65444F717697998060671D7C6CCD7 {UINT64 ElapsedTime;};
struct _AAAD731627CE9493AB267F8807E487A3 {UINT32 StructureSizeInBytes;UINT32 MaximumReceiveBytes;UINT32 MaximumTransmitBytes;UINT32 MaximumTotalBytes;};
struct _AB1521D88F443A509348BCDC539B84B9 {UINT8 Hour;UINT8 Minute;UINT8 Second;};
struct _AB4F02EC5D8687CEDE27BD0DC086A076 {UINT8 PPFlags;};
struct _AB4F6334FFDB14156B773BDB1AAB0CF0 {TPM2B_ECC_PARAMETER x;TPM2B_ECC_PARAMETER y;};
struct _ACEDB2296F40976713AE47A4177828DE {UINT8 FirstChannelNum;UINT8 NumOfChannels;UINT8 MaxTxPowerLevel;};
struct _ADB22225E3F1BB84FBD64DC9B54AA0BC {UINT8 PcieCap[60];};
struct _B0D2910FF2727F70CAB5F17F43E00BCE {UINT8 opcode;UINT8 reserved_1;UINT8 reserved_2;UINT8 reserved_3;UINT8 reserved_4;UINT8 reserved_5;UINT8 reserved_6;UINT8 reserved_7;UINT8 reserved_8;UINT8 reserved_9;UINT8 reserved_10;UINT8 reserved_11;};
struct _B36FBEF63788BC4566C7951A6089AED9 {UINT32 WriteData;};
struct _B3EA06631073B7989159535C953318FD {TPMT_SYM_DEF_OBJECT sym;};
struct _B4327EB9331D82A86C9489779186A121 {UINT8 opcode;unsigned __int8 reserved_1 : 5;unsigned __int8 lun : 3;unsigned __int8 page_code : 6;unsigned __int8 page_control : 2;UINT8 reserved_3;UINT8 reserved_4;UINT8 reserved_5;UINT8 reserved_6;UINT8 parameter_list_length_hi;UINT8 parameter_list_length_lo;UINT8 reserved_9;UINT8 reserved_10;UINT8 reserved_11;};
struct _B4EC90CC378E611CA57EECB0114DEA34 {UINT16 algorithmId;UINT16 digestSize;};
struct _B4F231955C2D1055548E7E9782035139 {UINT8 CpuidInfo[40];UINT8 Reserved;};
struct _B63C7211F3C075200AACA9CBBD019A89 {UINT8 Major;UINT8 Minor;UINT8 RevMajor;UINT8 RevMinor;};
struct _B6F702E32E8BF14F27DA388268F3DA51 {UINT8 Register;UINT8 AndMask;UINT8 OrMask;};
struct _B7EFE20DA3377E7AD2E71A2611ECA892 {UINT8 opcode;unsigned __int8 reserved_1 : 5;unsigned __int8 lun : 3;UINT8 page_code;UINT8 reserved_3;UINT8 allocation_length;UINT8 reserved_5;UINT8 reserved_6;UINT8 reserved_7;UINT8 reserved_8;UINT8 reserved_9;UINT8 reserved_10;UINT8 reserved_11;};
struct _B81BF1EA0941E9D51BE17A7DCF0447FA {EFI_IPv4_ADDRESS Address;EFI_IPv4_ADDRESS SubnetMask;};
struct _B83B54D0511FC7118B2F502FFD9F4FA0 {UINT32 NumberOfEntries;UINT32 Reserved;};
struct _B89301B30D0E817DC03EB0FC8FA82100 {UINT32 Signature;UINT32 Unknown;UINT32 Unknown2;UINT32 Unknown3;UINT32 Unknown4;UINT32 Unknown5;};
struct _B9E2DC9C06918896C3006BFFAE6298E5 {UINT64 X19;UINT64 X20;UINT64 X21;UINT64 X22;UINT64 X23;UINT64 X24;UINT64 X25;UINT64 X26;UINT64 X27;UINT64 X28;UINT64 FP;UINT64 LR;UINT64 IP0;UINT64 D8;UINT64 D9;UINT64 D10;UINT64 D11;UINT64 D12;UINT64 D13;UINT64 D14;UINT64 D15;};
struct _BA3848C2DD630DD4F1277941FDE05257 {UINT8 Length;UINT8 DescriptorType;UINT8 InterfaceNumber;UINT8 AlternateSetting;UINT8 NumEndpoints;UINT8 InterfaceClass;UINT8 InterfaceSubClass;UINT8 InterfaceProtocol;UINT8 Interface;};
struct _BA7E834680A60A49D93770311CBE8601 {UINT8 peripheral_type;UINT8 RMB;UINT8 version;UINT8 response_data_format;UINT8 addnl_length;UINT8 reserved_5;UINT8 reserved_6;UINT8 reserved_7;UINT8 vendor_info[8];UINT8 product_id[16];UINT8 product_revision_level[4];UINT8 vendor_specific_36_55[20];UINT8 reserved_56_95[40];UINT8 vendor_specific_96_253[158];};
struct _BB3F6D5B5CBCB21FB44B2A4EFF4AF7FF {UINT64 InputSize;};
struct _BC2985D9EF55848D4A341A78DE21738D {UINT64 Period;UINT64 SmiTickInterval;UINT64 ElapsedTime;};
struct _BC6D55FECCACCAF7037456793F823877 {UINT64 reserved;UINT64 r1;UINT64 r2;UINT64 r3;UINT64 r4;UINT64 r5;UINT64 r6;UINT64 r7;UINT64 r8;UINT64 r9;UINT64 r10;UINT64 r11;UINT64 r12;UINT64 r13;UINT64 r14;UINT64 r15;UINT64 r16;UINT64 r17;UINT64 r18;UINT64 r19;UINT64 r20;UINT64 r21;UINT64 r22;UINT64 r23;UINT64 r24;UINT64 r25;UINT64 r26;UINT64 r27;UINT64 r28;UINT64 r29;UINT64 r30;UINT64 r31;UINT64 pr;UINT64 b0;UINT64 b1;UINT64 b2;UINT64 b3;UINT64 b4;UINT64 b5;UINT64 b6;UINT64 b7;UINT64 ar_rsc;UINT64 ar_bsp;UINT64 ar_bspstore;UINT64 ar_rnat;UINT64 ar_fcr;UINT64 ar_eflag;UINT64 ar_csd;UINT64 ar_ssd;UINT64 ar_cflg;UINT64 ar_fsr;UINT64 ar_fir;UINT64 ar_fdr;UINT64 ar_ccv;UINT64 ar_unat;UINT64 ar_fpsr;UINT64 ar_pfs;UINT64 ar_lc;UINT64 ar_ec;UINT64 cr_dcr;UINT64 cr_itm;UINT64 cr_iva;UINT64 cr_pta;UINT64 cr_ipsr;UINT64 cr_isr;UINT64 cr_iip;UINT64 cr_ifa;UINT64 cr_itir;UINT64 cr_iipa;UINT64 cr_ifs;UINT64 cr_iim;UINT64 cr_iha;UINT64 dbr0;UINT64 dbr1;UINT64 dbr2;UINT64 dbr3;UINT64 dbr4;UINT64 dbr5;UINT64 dbr6;UINT64 dbr7;UINT64 ibr0;UINT64 ibr1;UINT64 ibr2;UINT64 ibr3;UINT64 ibr4;UINT64 ibr5;UINT64 ibr6;UINT64 ibr7;UINT64 int_nat;};
struct _BCCB89A561BF63803226833E096228B3 {UINT8 LastLba7;UINT8 LastLba6;UINT8 LastLba5;UINT8 LastLba4;UINT8 LastLba3;UINT8 LastLba2;UINT8 LastLba1;UINT8 LastLba0;UINT8 BlockSize3;UINT8 BlockSize2;UINT8 BlockSize1;UINT8 BlockSize0;UINT8 Protection;UINT8 LogicPerPhysical;UINT8 LowestAlignLogic2;UINT8 LowestAlignLogic1;UINT8 Reserved[16];};
struct _BE973F4FDB064641654791385863872C {FRAMEWORK_EFI_IFR_OP_HEADER Header;};
struct _BF85A3118A1FF8C651A0C1F778F983B0 {LIST_ENTRY Link;void *Buffer;};
struct _C34F4C0FC3A8EA2F0BD17F4F5C2AADB7 {UINT16 LowerThresNonCritical;UINT16 UpperThresNonCritical;UINT16 LowerThresCritical;UINT16 UpperThresCritical;UINT16 LowerThresNonRecover;UINT16 UpperThresNonRecover;};
struct _C48BC651D97767035F229214B70F9A9F {UINT32 HeaderSize;UINT32 Revision;UINT32 TableSize;UINT32 EntryCount;};
struct _C4A3E1EFE16F6103EF853C7429C07B27 {unsigned __int32 MessageType : 8;unsigned __int32 TransactionId : 24;UINT8 DhcpOptions[1024];};
struct _C6DD94A0C2AC913EBAE6968FD609D5F8 {UINT64 Reserved;UINT64 R1;UINT64 R2;UINT64 R3;UINT64 R4;UINT64 R5;UINT64 R6;UINT64 R7;UINT64 R8;UINT64 R9;UINT64 R10;UINT64 R11;UINT64 R12;UINT64 R13;UINT64 R14;UINT64 R15;UINT64 R16;UINT64 R17;UINT64 R18;UINT64 R19;UINT64 R20;UINT64 R21;UINT64 R22;UINT64 R23;UINT64 R24;UINT64 R25;UINT64 R26;UINT64 R27;UINT64 R28;UINT64 R29;UINT64 R30;UINT64 R31;UINT64 F2[2];UINT64 F3[2];UINT64 F4[2];UINT64 F5[2];UINT64 F6[2];UINT64 F7[2];UINT64 F8[2];UINT64 F9[2];UINT64 F10[2];UINT64 F11[2];UINT64 F12[2];UINT64 F13[2];UINT64 F14[2];UINT64 F15[2];UINT64 F16[2];UINT64 F17[2];UINT64 F18[2];UINT64 F19[2];UINT64 F20[2];UINT64 F21[2];UINT64 F22[2];UINT64 F23[2];UINT64 F24[2];UINT64 F25[2];UINT64 F26[2];UINT64 F27[2];UINT64 F28[2];UINT64 F29[2];UINT64 F30[2];UINT64 F31[2];UINT64 Pr;UINT64 B0;UINT64 B1;UINT64 B2;UINT64 B3;UINT64 B4;UINT64 B5;UINT64 B6;UINT64 B7;UINT64 ArRsc;UINT64 ArBsp;UINT64 ArBspstore;UINT64 ArRnat;UINT64 ArFcr;UINT64 ArEflag;UINT64 ArCsd;UINT64 ArSsd;UINT64 ArCflg;UINT64 ArFsr;UINT64 ArFir;UINT64 ArFdr;UINT64 ArCcv;UINT64 ArUnat;UINT64 ArFpsr;UINT64 ArPfs;UINT64 ArLc;UINT64 ArEc;UINT64 CrDcr;UINT64 CrItm;UINT64 CrIva;UINT64 CrPta;UINT64 CrIpsr;UINT64 CrIsr;UINT64 CrIip;UINT64 CrIfa;UINT64 CrItir;UINT64 CrIipa;UINT64 CrIfs;UINT64 CrIim;UINT64 CrIha;UINT64 Dbr0;UINT64 Dbr1;UINT64 Dbr2;UINT64 Dbr3;UINT64 Dbr4;UINT64 Dbr5;UINT64 Dbr6;UINT64 Dbr7;UINT64 Ibr0;UINT64 Ibr1;UINT64 Ibr2;UINT64 Ibr3;UINT64 Ibr4;UINT64 Ibr5;UINT64 Ibr6;UINT64 Ibr7;UINT64 IntNat;};
struct _CC3F58864E42F55138B52E10E756FDE3 {UINT64 ResetEnd;};
struct _CEEA5E1F904DF18632526980A4AC8A63 {UINT64 TrigerAddress;unsigned __int64 VirtualPageNumber : 52;unsigned __int64 Reserved1 : 8;unsigned __int64 RegionId : 24;unsigned __int64 Reserved2 : 40;};
struct _CF02D691DB7E7F7F31F4CE9A6F6F351A {UINT32 Irt;UINT32 Mrc;UINT32 Mrt;UINT32 Mrd;};
struct _CF4D72811399137CA7E88D146026D65C {CHAR8 *FieldName;CHAR8 *FieldValue;};
struct _D179931413783EC21FDC57CE001D407C {UINT8 Type;UINT8 Code;};
struct _D2D53D95DB781080B9E5DD0DD8CF7DC0 {UINT32 Attributes;UINT32 IoAlign;};
struct _D30FC8BF03F61B6660B9FED1D6DCFABB {UINT8 *OptionStr;UINT8 *ValueStr;};
struct _D9DBAD3B20FF391AB4124197CBA327FA {UINT32 NumberOfInterruptControllers;UINT32 NumberOfProcessors;};
struct _D9FD1BC7612AFECFA6AB634B5B1E16EB {UINT32 TokenSpaceCNameIndex;UINT32 PcdCNameIndex;};
struct _DA2370F135774DAC578057B93BF5B56B {UINT32 Signature;UINT32 Length;};
struct _DC980AFFEFD48DDAF42EA15F1F5BC0EA {UINT32 Offset;};
struct _DDB859AD2652ECFFF12EB6BF2AD08988 {unsigned __int8 Error_Code : 7;unsigned __int8 Valid : 1;UINT8 Segment_Number;unsigned __int8 Sense_Key : 4;unsigned __int8 Reserved_21 : 1;unsigned __int8 Ili : 1;unsigned __int8 Reserved_22 : 2;UINT8 Information_3_6[4];UINT8 Addnl_Sense_Length;UINT8 Vendor_Specific_8_11[4];UINT8 Addnl_Sense_Code;UINT8 Addnl_Sense_Code_Qualifier;UINT8 Field_Replaceable_Unit_Code;UINT8 Reserved_15_17[3];};
struct _DEF74FC8B9AC1B107FB68B49FF3CF276 {unsigned __int8 Peripheral_Type : 5;unsigned __int8 Peripheral_Qualifier : 3;unsigned __int8 DeviceType_Modifier : 7;unsigned __int8 Rmb : 1;UINT8 Version;UINT8 Response_Data_Format;UINT8 Addnl_Length;UINT8 Reserved_5_95[91];};
struct _DFAF79501E995C8EA71EDDBBC5BE2E03 {UINT32 HID;UINT32 UID;};
struct _E02AC8286318CBC14CD488B4B6212C6D {UINT8 Addr[16];};
struct _E1F60BB2CD39EE4B0DE30D99134EA3B4 {UINT8 LastLba3;UINT8 LastLba2;UINT8 LastLba1;UINT8 LastLba0;UINT8 BlockSize3;UINT8 BlockSize2;UINT8 BlockSize1;UINT8 BlockSize0;};
struct _E320AD1080A0279E564D8403C68B77A1 {UINT16 Type;UINT16 Length;};
struct _E4F9981999F477848E844330CAD341B0 {EFI_MISC_HARDWARE_SECURITY_SETTINGS HardwareSecuritySettings;};
struct _EAB02E269A14A57FD4134AF1A62FF8F7 {UINT16 PortStatus;UINT16 PortChangeStatus;};
struct _EAC2E2A17271872096986BE83875F537 {UINT8 OpCode;UINT8 Length;UINT8 Data[1];};
struct _EB8A3CD07E0BF00E4FD5FF7ABAF3321C {UINT8 Function;UINT8 DeviceAddress;UINT8 Command;UINT8 DataValue;};
struct _EC0BA3AFE8D2ACF3A8E8B9154D00680B {UINT32 Type;UINT32 Length;};
struct _EC1CCB0312C034DEB00F9C27D95C6285 {UINT8 ContainedElementType;UINT8 ContainedElementMinimum;UINT8 ContainedElementMaximum;};
struct _ED528C06F0D57DB23B67217FFB880EAB {TPM2B_DIGEST integrityHMAC;TPM2B_DIGEST encIdentity;};
struct _ED77853CEA1192D0B8E3AED4CD5C7E1B {UINT8 Desc;UINT8 Checksum;};
struct _EEE11938D794A1BF7B1DC13B55727429 {UINT32 Type;UINT32 NumberOfPages;};
struct _F1B84B2FEC13665EC90B5878F7A30391 {UINT32 OffsetToData;UINT32 Size;UINT32 CodePage;UINT32 Reserved;};
struct _F6F503A5BF14C3E7E5412CF4EB8F9FA5 {EFI_TCP4_COMPLETION_TOKEN CompletionToken;};
struct _F78A0D139DB8C0035378F46675C6CBCF {UINT8 Addr[4];};
struct _F948C5F68E3369377A3565AD89807131 {BOOLEAN Ipv6Support;};
struct _F949FA152F73701F4284BFAE0FE56425 {unsigned __int8 Peripheral_Type : 5;unsigned __int8 Peripheral_Qualifier : 3;UINT8 PageCode;UINT8 PageLength2;UINT8 PageLength1;UINT8 SupportedVpdPageList[256];};
struct _FAE113C48115BAA8175D7C1704E7D818 {UINT8 PowerStateValue;UINT8 PowerStateInformationIndex;};
struct _FE2731A7F9F42BC25FF8CF36F24478FC {UINT32 Package;UINT32 Core;UINT32 Thread;};
typedef enum _458F0BDE7B14A246AE22B2F50C12D7D7 BUILTIN_POINTING_DEVICE_INTERFACE;
typedef enum _3EB6853DD283D543A378516B3DA4EFDA EFI_BOOT_MANAGER_LOAD_OPTION_TYPE;
typedef EFI_DEVICE_PATH_PROTOCOL *(*EFI_DEVICE_PATH_UTILS_APPEND_NODE)(const EFI_DEVICE_PATH_PROTOCOL *DevicePath, const EFI_DEVICE_PATH_PROTOCOL *DeviceNode);
typedef EFI_DEVICE_PATH_PROTOCOL *(*EFI_DEVICE_PATH_UTILS_APPEND_PATH)(const EFI_DEVICE_PATH_PROTOCOL *Src1, const EFI_DEVICE_PATH_PROTOCOL *Src2);
typedef EFI_COMMON_SECTION_HEADER EFI_FIRMWARE_VOLUME_IMAGE_SECTION;
typedef enum _F6811BBD1543E1A6B53242B43FD60336 EFI_GRAPHICS_OUTPUT_BLT_OPERATION;
typedef enum _540F40D125FA5FA7759108AD821413DC EFI_MEMORY_ERROR_GRANULARITY_TYPE;
typedef EFI_MISC_COOLING_DEVICE_TEMP_LINK_DATA EFI_MISC_COOLING_DEVICE_TEMP_LINK;
typedef enum _4F856CCBB9B00374BC435FBDFFF560CE EFI_MISC_HARDWARE_SECURITY_STATUS;
typedef EFI_MISC_POINTING_DEVICE_TYPE_DATA EFI_MISC_ONBOARD_DEVICE_TYPE_DATA;
typedef EFI_MISC_SCHEDULED_POWER_ON_MONTH_DATA EFI_MISC_SCHEDULED_POWER_ON_MONTH;
typedef enum _E72E378AD077682DAA371466853F7DBD EFI_PLATFORM_CONFIGURATION_ACTION;
typedef EFI_EXP_BASE10_DATA EFI_PROCESSOR_CORE_FREQUENCY_DATA;
typedef enum _688FE0653D219825B48911AE4604D818 EFI_PXE_BASE_CODE_CALLBACK_STATUS;
typedef enum _B15F5856ACFF16C183F1EFE4FB3B38D9 ONBOARD_DEVICE_EXTENDED_INFO_TYPE;
typedef enum _1EB0B297BD0425F9A7B5E8569165748D PORTABLE_BATTERY_DEVICE_CHEMISTRY;
typedef enum _4D9124BC8391B94B3204274D61B14C88 EFI_INSTRUCTION_SET_ARCHITECTURE;
typedef EFI_MISC_BASE_BOARD_MANUFACTURER_DATA EFI_MISC_BASE_BOARD_MANUFACTURER;
typedef EFI_MISC_BOOT_INFORMATION_STATUS_DATA EFI_MISC_BOOT_INFORMATION_STATUS;
typedef EFI_MISC_SYSTEM_SLOT_DESIGNATION_DATA EFI_MISC_SYSTEM_SLOT_DESIGNATION;
typedef EFI_EXP_BASE10_DATA EFI_PROCESSOR_FSB_FREQUENCY_DATA;
struct _EFI_HII_DEVICE_PATH_PACKAGE_HDR {EFI_HII_PACKAGE_HEADER Header;};
struct _EFI_PEI_VECTOR_HANDOFF_INFO_PPI {EFI_VECTOR_HANDOFF_INFO *Info;};
struct _EFI_SMM_CPU_SAVE_STATE_PROTOCOL {EFI_SMM_CPU_STATE **CpuSaveState;};
typedef enum _C8C896A2FF55122E4FDF3CD9C1B0A192 EFI_80211_ASSOCIATE_RESULT_CODE;
typedef EFI_ACPI_DESCRIPTION_HEADER EFI_ACPI_ASF_DESCRIPTION_HEADER;
typedef enum _229CA6925EF914F0313A9E18BFD7D26A EFI_BLUETOOTH_PIN_CALLBACK_TYPE;
typedef enum _194BDA72BA78BC5F9316B64E71EA655D EFI_MEMORY_ERROR_OPERATION_TYPE;
typedef enum _74097A74A7E68475E478B88E510F1360 EFI_MISC_CHASSIS_SECURITY_STATE;
typedef enum _60295EAFE753499E627081DDD5130B9C EFI_MISC_MANAGEMENT_DEVICE_TYPE;
typedef EFI_MISC_SYSTEM_LANGUAGE_STRING_DATA EFI_MISC_SYSTEM_LANGUAGE_STRING;
typedef UINT8 EFI_PROCESSOR_THREAD_COUNT_DATA;
typedef UINT32 EFI_TCG2_EVENT_ALGORITHM_BITMAP;
typedef UINT8 EFI_ATA_PASS_THRU_CMD_PROTOCOL;
typedef enum _3F9A49CD9C69B11408E19D98723F52DA EFI_BLUETOOTH_CONFIG_DATA_TYPE;
typedef enum _3E35765601AB01BD7005107D9AB516B6 EFI_CACHE_VARIABLE_RECORD_TYPE;
typedef enum _EFI_EAPOL_SUPPLICANT_PAE_STATE EFI_EAPOL_SUPPLICANT_PAE_STATE;
typedef enum _1D5AFB93174D0399D902A9406F3A0A82 EFI_EXTENDED_SAL_STALL_FUNC_ID;
typedef enum _7C12C6BA9D7F0DFBC46D28BBDFC33B64 EFI_PROCESSOR_SOCKET_TYPE_DATA;
typedef UINT64 EFI_RESOURCE_ALLOCATION_STATUS;
typedef EFI_S3_SAVE_STATE_PROTOCOL EFI_S3_SMM_SAVE_STATE_PROTOCOL;
typedef enum _56EF9D5457696C841AC383950266ECAC MEMORY_SUPPORT_INTERLEAVE_TYPE;
typedef void (__stdcall *WinNtInitializeCriticalSection)(LPCRITICAL_SECTION lpCriticalSection);
typedef BOOL (__stdcall *WinNtQueryPerformanceFrequency)(LARGE_INTEGER *Frequency);
typedef enum _F4B9D3021B7E9F7B6383E4593AEAEC8F EFI_80211_AUTHENTICATION_TYPE;
typedef enum _8B17A6546B860A2E5177FC6C11A9BA7E EFI_ATA_EXT_TRANSFER_PROTOCOL;
typedef enum _F80FD94BC9380409383958F1E1704729 EFI_BADGING_DISPLAY_ATTRIBUTE;
typedef EFI_HII_PACKAGE_LIST_HEADER *EFI_HII_PACKAGE_LIST_PROTOCOL;
typedef enum _D869608897851A02265460CB3E54D600 EFI_IDE_CONTROLLER_ENUM_PHASE;
typedef enum _442B5354D27DA642B7FAAB3699EEB755 EFI_ISA_IO_PROTOCOL_OPERATION;
typedef EFI_MISC_CHASSIS_MANUFACTURER_DATA EFI_MISC_CHASSIS_MANUFACTURER;
typedef enum _ACDEC2FC431F4E266F572DB95D4E3A9D EFI_MISC_POINTING_DEVICE_TYPE;
typedef EFI_MISC_SYSTEM_OPTION_STRING_DATA EFI_MISC_SYSTEM_OPTION_STRING;
typedef enum _2FDC8088BBAE2908122B83A6449A4D18 EFI_PCI_IO_PROTOCOL_OPERATION;
typedef UINT8 EFI_PROCESSOR_CORE_COUNT_DATA;
typedef enum _5F5254821497CACADC8A84ED190646AB EFI_PXE_BASE_CODE_TFTP_OPCODE;
typedef BOOLEAN (*EFI_RUNTIME_CRYPT_SHA256_INIT)(void *Sha256Context);
typedef enum _262E59A4A2C3D5C69BE970A07867D778 EFI_SMM_IO_TRAP_DISPATCH_TYPE;
typedef UINT32 FRAMEWORK_EFI_FV_WRITE_POLICY;
struct tdEFI_TCG2_FINAL_EVENTS_TABLE {UINT64 Version;UINT64 NumberOfEvents;};
typedef enum _FB55D95FD8EF50A3D8A3058B012DA2B2 BUILTIN_POINTING_DEVICE_TYPE;
typedef void (*EFI_BOOT_MANAGER_LEGACY_BOOT)(EFI_BOOT_MANAGER_LOAD_OPTION *BootOption);
typedef enum _72FEBD157A72F2E6FF0BD8052D723A78 EFI_CACHE_ASSOCIATIVITY_DATA;
typedef EFI_COMMON_SECTION_HEADER2 EFI_COMPATIBILITY16_SECTION2;
typedef enum _F1A0100F1B5431C2EA5BC18FC8E0713B EFI_CPU_VARIABLE_RECORD_TYPE;
typedef enum _B3FC5742C891AF505A2762C1E6B2B98A EFI_GET_PLATFORM_HANDLE_MODE;
typedef enum _AA464D288FD4430E2899565191565752 EFI_IPSEC_AUTH_PROTOCOL_TYPE;
typedef UINT8 EFI_MEMORY_ERROR_GRANULARITY;
typedef enum _0DD11FF58B6E35659433583402DDC02E EFI_MISC_IPMI_INTERFACE_TYPE;
typedef enum _5F0B8BD01C02E89FCDBD7E4A97326CC9 EFI_MISC_ONBOARD_DEVICE_TYPE;
typedef enum _D1B936570B0E4E70CEFBF14B63080DF4 EFI_MISC_PORT_CONNECTOR_TYPE;
typedef enum _1C79ECC146A1E268509C5BA410F9B8F8 EFI_MISC_SLOT_DATA_BUS_WIDTH;
typedef EFI_MISC_SYSTEM_MANUFACTURER_DATA EFI_MISC_SYSTEM_MANUFACTURER;
typedef EFI_MISC_SYSTEM_POWER_SUPPLY_DATA EFI_MISC_SYSTEM_POWER_SUPPLY;
typedef enum _D2BB01D62F748AB2E186F0BE4B91EDA7 EFI_PROCESSOR_MICROCODE_TYPE;
typedef enum _EFI_USBFN_ENDPOINT_DIRECTION EFI_USBFN_ENDPOINT_DIRECTION;
typedef USB_INTERFACE_DESCRIPTOR EFI_USB_INTERFACE_DESCRIPTOR;
typedef void (*PERIODIC_SMI_LIBRARY_HANDLER)(const void *Context, UINT64 ElapsedTime);
typedef BOOLEAN (*SHELLENV_GET_EXECUTION_BREAK)(void);
typedef EFI_SIMPLE_TEXT_OUTPUT_PROTOCOL SIMPLE_TEXT_OUTPUT_INTERFACE;
typedef TREE_BOOT_SERVICE_CAPABILITY_1_0 TREE_BOOT_SERVICE_CAPABILITY;
typedef BOOL (__stdcall *WinNtQueryPerformanceCounter)(LARGE_INTEGER *PerformanceCount);
typedef EFI_CACHE_SRAM_TYPE_DATA EFI_CACHE_SRAM_INSTALL_DATA;
typedef EFI_COMMON_SECTION_HEADER EFI_COMPATIBILITY16_SECTION;
typedef enum _F1FFDB90C6402710275536A9AE14D7CB EFI_COMPATIBILITY_FUNCTIONS;
typedef UINT64 EFI_CREDENTIAL_CAPABILITIES;
typedef enum _B178AB96F9C60D47C62476B65EFA1419 EFI_LEGACY_REGION_ATTRIBUTE;
typedef EFI_EXP_BASE2_DATA EFI_MAXIMUM_CACHE_SIZE_DATA;
typedef enum _EFI_MEMORY_ERROR_CORRECTION EFI_MEMORY_ERROR_CORRECTION;
typedef enum _DAB14F083DB9415FC6116219CD1B0FF3 EFI_MISC_SYSTEM_WAKEUP_TYPE;
typedef enum _0BEF523315D4FECD384FE4F849820B9F EFI_PROCESSOR_HEALTH_STATUS;
typedef UINT32 EFI_RESOURCE_ATTRIBUTE_TYPE;
typedef UINT32 EFI_SHELL_DEVICE_NAME_FLAGS;
typedef enum _253F20433F5652E4F033338CB90E3644 EFI_SMM_SAVE_STATE_IO_WIDTH;
typedef enum _DD2967A2FFD758D2B3051F27AF152EA8 EFI_SMM_SAVE_STATE_REGISTER;
typedef USB_ENDPOINT_DESCRIPTOR EFI_USB_ENDPOINT_DESCRIPTOR;
typedef EFI_USER_INFO_ACCESS_CONTROL EFI_USER_INFO_ACCESS_POLICY;
typedef UINT64 FRAMEWORK_EFI_FV_ATTRIBUTES;
typedef enum _161F4614949C29B67504D8F745914594 MISC_CHASSIS_SECURITY_STATE;
typedef enum _AE01C214B699FBB54E5C6019F68326B4 MISC_MANAGEMENT_DEVICE_TYPE;
typedef void (*SHELLENV_DUMP_PROTOCOL_INFO)(EFI_HANDLE Handle, void *Interface);
typedef EFI_UNICODE_COLLATION_PROTOCOL UNICODE_COLLATION_INTERFACE;
struct _EFI_HII_VARIABLE_PACK_LIST {struct _EFI_HII_VARIABLE_PACK_LIST *NextVariablePack;EFI_HII_VARIABLE_PACK *VariablePack;};
typedef enum _209431BC1AEBAC6E22AF21AEC0B3F6B8 EFI_80211_SCAN_RESULT_CODE;
typedef EFI_INTER_LINK_DATA EFI_CACHE_ASSOCIATION_DATA;
typedef enum _C69E8B22FB21F2268952C60E189C51D2 EFI_CACHE_OPERATIONAL_MODE;
typedef UINT32 EFI_CPU_STATE_CHANGE_CAUSE;
typedef UINT32 EFI_CREDENTIAL_LOGON_FLAGS;
typedef enum _22063EE454AA037E3599F362180542C3 EFI_DRIVER_DIAGNOSTIC_TYPE;
typedef enum _0FE351ACE328F42981821B05E750A0C4 EFI_GET_PLATFORM_HOOK_MODE;
typedef enum _342202A4054765D55C0BA3B3480B833F EFI_GET_PLATFORM_INFO_MODE;
typedef enum _D399EDAE00DDF9BCF717605B2DC5E23E EFI_HPC_PADDING_ATTRIBUTES;
typedef UINT32 EFI_IMAGE_EXECUTION_ACTION;
typedef enum _158B7C82DAF37FC42835E46CA89A8D66 EFI_IPSEC_CONFIG_DATA_TYPE;
typedef enum _B7FAA2BAB59E8AAD801FDD6BB12A6264 EFI_IPSEC_TUNNEL_DF_OPTION;
typedef enum _9952D96D536BC2FE24D9C9282A861FEE EFI_ISA_ACPI_RESOURCE_TYPE;
typedef UINT8 EFI_MEMORY_ERROR_OPERATION;
typedef enum _A0C7A8B03AB39EC9EAA1DD81FF30C415 EFI_NETWORK_INTERFACE_TYPE;
typedef UINT32 EFI_PROCESSOR_APIC_ID_DATA;
typedef enum _4D955D7C3CF952FEE63E33CCE1AA655A EFI_PROCESSOR_FAMILY2_DATA;
typedef EFI_EXP_BASE10_DATA EFI_PROCESSOR_VOLTAGE_DATA;
typedef EFI_PXE_BASE_CODE_CALLBACK_PROTOCOL EFI_PXE_BASE_CODE_CALLBACK;
typedef enum _C62C243F0C5C483F72E85EE69F51A00F EFI_PXE_BASE_CODE_FUNCTION;
typedef UINT16 EFI_PXE_BASE_CODE_UDP_PORT;
typedef enum _1B347F0DD01B07107620DCF9F689723D EFI_SMM_SAVE_STATE_IO_TYPE;
typedef enum _40D0395D41CFB92396724052539456BA MEMORY_ERROR_DETECT_METHOD;
typedef VENDOR_DEVICE_PATH VENDOR_DEFINED_DEVICE_PATH;
typedef void (__stdcall *WinNtDeleteCriticalSection)(LPCRITICAL_SECTION lpCriticalSection);
typedef enum _39AB1F33965152490369B0F15402C8A6 EFI_CACHE_ERROR_TYPE_DATA;
typedef enum _2C0E6BED741645056D5101FFAD61EDBD EFI_CPU_IO_PROTOCOL_WIDTH;
typedef UINT32 EFI_FLASH_AREA_ATTRIBUTES;
typedef enum _194506F6037DE6F792F5AE6DB7307C59 EFI_GRAPHICS_PIXEL_FORMAT;
typedef enum _ADD36AC798F6E527B10EE73D774F8888 EFI_IP4_CONFIG2_DATA_TYPE;
typedef enum _2BB474928AB8B1918324CF9B6F801F61 EFI_ISA_IO_PROTOCOL_WIDTH;
typedef enum _EFI_MEMORY_ARRAY_LOCATION EFI_MEMORY_ARRAY_LOCATION;
typedef EFI_MISC_SYSTEM_EVENT_LOG_DATA EFI_MISC_SYSTEM_EVENT_LOG;
typedef enum _0D5FF9D6AC426DC3594861BEDA2B4F3A EFI_PCI_HOTPLUG_OPERATION;
typedef enum _FD0EA93A930B2E5D5B959C35A81D8275 EFI_PCI_IO_PROTOCOL_WIDTH;
typedef EFI_PCI_PLATFORM_PROTOCOL EFI_PCI_OVERRIDE_PROTOCOL;
typedef enum _CF89EC65AF45EC99BA7EBFC0917E56F7 EFI_PEI_BLOCK_DEVICE_TYPE;
typedef enum _0033834A84128E2393CD9DDEED42A2D5 EFI_PEI_PCI_CFG_PPI_WIDTH;
typedef enum _20911B5A379DF99BE7D6E69576338BB1 EFI_PROCESSOR_FAMILY_DATA;
typedef BOOLEAN (*EFI_SHELL_BATCH_IS_ACTIVE)(void);
typedef UINT32 EFI_TCG2_EVENT_LOG_BITMAP;
typedef UINT32 EFI_TCG2_EVENT_LOG_FORMAT;
typedef enum _E0AB8ED5DBAB2087C9ABE0A02DDF87F8 EFI_TCP4_CONNECTION_STATE;
typedef enum _14B987FA633863A28E054DFB8DB4E065 EFI_TCP6_CONNECTION_STATE;
typedef enum _EFI_USBFN_TRANSFER_STATUS EFI_USBFN_TRANSFER_STATUS;
typedef USB_CONFIG_DESCRIPTOR EFI_USB_CONFIG_DESCRIPTOR;
typedef USB_DEVICE_DESCRIPTOR EFI_USB_DEVICE_DESCRIPTOR;
typedef EFI_TIME EFI_USER_INFO_CREATE_DATE;
typedef UINT64 EFI_USER_INFO_USAGE_COUNT;
typedef void (*EFI_WATCHDOG_TIMER_NOTIFY)(UINT64 Time);
typedef enum _90717D1297E26A6756269DE38C3548CE SHELL_PROMPT_REQUEST_TYPE;
typedef void (__stdcall *WinNtEnterCriticalSection)(LPCRITICAL_SECTION lpCriticalSection);
typedef void (__stdcall *WinNtLeaveCriticalSection)(LPCRITICAL_SECTION lpCriticalSection);
typedef BOOL (__stdcall *WinNtSystemTimeToFileTime)(SYSTEMTIME *SystemTime, FILETIME *FileTime);
struct _EFI_GLYPH_GIBT_END_BLOCK {EFI_HII_GLYPH_BLOCK Header;};
struct _EFI_HII_AIBT_SKIP1_BLOCK {UINT8 SkipCount;};
struct _EFI_HII_AIBT_SKIP2_BLOCK {UINT16 SkipCount;};
struct _EFI_HII_FORM_PACKAGE_HDR {EFI_HII_PACKAGE_HEADER Header;};
struct _EFI_SMM_CPU_IO2_PROTOCOL {EFI_SMM_IO_ACCESS2 Mem;EFI_SMM_IO_ACCESS2 Io;};
struct _EFI_SMM_CPU_IO_INTERFACE {EFI_SMM_IO_ACCESS Mem;EFI_SMM_IO_ACCESS Io;};
struct s_pxe_cpb_mcast_ip_to_mac {PXE_IP_ADDR IP;};
typedef enum _4370B3612B4D5CFE319D85265DD94FC6 CACHE_ASSOCIATIVITY_DATA;
typedef UINT8 EFI_ATA_PASS_THRU_LENGTH;
typedef enum _E91975BE49339FF85DEF21B3736E1341 EFI_DRIVER_HEALTH_STATUS;
typedef enum _5EA3491EF32105B7A862FEC7A9545EAD EFI_EAP_CONFIG_DATA_TYPE;
typedef enum _57D756C7A8DB1434843BCEC5AA15CDB1 EFI_IP6_CONFIG_DATA_TYPE;
typedef EFI_MISC_BIS_ENTRY_POINT_DATA EFI_MISC_BIS_ENTRY_POINT;
typedef enum _51C1AFD47B5AB406FF3AB4AD771221D8 EFI_PEI_CPU_IO_PPI_WIDTH;
typedef enum _FAF8C4326046EF113A8D313610673ECC EFI_SHELL_ARG_INFO_TYPES;
typedef BOOLEAN (*EFI_SHELL_GET_PAGE_BREAK)(void);
typedef enum _713F9861A2AF4CB50D2AC90E3A7BA751 EFI_SIMPLE_NETWORK_STATE;
typedef enum _C116679D3C4381D6EBC62E6B404B9837 EFI_STANDBY_BUTTON_PHASE;
typedef UINT8 EFI_SWAP_LOCK_CAPABILITY;
typedef enum _EFI_USBFN_DEVICE_INFO_ID EFI_USBFN_DEVICE_INFO_ID;
typedef UINT8 EFI_USER_INFO_IDENTIFIER[16];
typedef EFI_TIME EFI_USER_INFO_USAGE_DATE;
typedef enum _99E8DC30B2785BE9E6C25AF582127452 EXTENDMEM_COVERAGE_LEVEL;
typedef UINT16 FRAMEWORK_EFI_HII_HANDLE;
typedef BOOLEAN (*IS_BROWSER_DATA_MODIFIED)(void);
typedef enum _B17A4B2C2FCB43DE443CAB0FAD694BC7 MEMORY_ERROR_GRANULARITY;
typedef enum _26B151884521DA6F7B5458685F081D1C MISC_ONBOARD_DEVICE_TYPE;
typedef enum _02994B86F73C38215FD183C71F1ACB19 MISC_PORT_CONNECTOR_TYPE;
typedef enum _CE5BF07BBDBC0A77A59EA4F5710024DF MISC_SLOT_DATA_BUS_WIDTH;
typedef enum _18F9C5178A01E4F7F7884FC55391B020 S3_BOOT_SCRIPT_LIB_WIDTH;
typedef BOOLEAN (*SHELLENV_BATCH_IS_ACTIVE)(void);
typedef UINT32 TPM_TRANSPORT_ATTRIBUTES;
typedef enum _A10527042240B4E279A00A923C588A4C VAR_CHECK_REQUEST_SOURCE;
struct _EFI_HII_ANIMATION_BLOCK {UINT8 BlockType;};
struct _EFI_IPSEC_FRAGMENT_DATA {UINT32 FragmentLength;void *FragmentBuffer;};
struct _MTRR_VARIABLE_SETTINGS_ {MTRR_VARIABLE_SETTING Mtrr[32];};
typedef BOOLEAN (*AUTH_VAR_LIB_AT_RUNTIME)(void);
typedef ATAPI_IDENTIFY_DATA EFI_ATAPI_IDENTIFY_DATA;
typedef EFI_DEVICE_IO_PROTOCOL EFI_DEVICE_IO_INTERFACE;
typedef EFI_COMMON_SECTION_HEADER2 EFI_DISPOSABLE_SECTION2;
typedef UINT8 EFI_FFS_FILE_ATTRIBUTES;
typedef enum _16F73C42F6A89E727B0F2D676F240B4F EFI_IPSEC_PROTOCOL_TYPE;
typedef EFI_LOAD_FILE_PROTOCOL EFI_LOAD_FILE_INTERFACE;
typedef enum _EFI_MEMORY_CHANNEL_TYPE EFI_MEMORY_CHANNEL_TYPE;
typedef EFI_MISC_ONBOARD_DEVICE_DATA EFI_MISC_ONBOARD_DEVICE;
typedef enum _697E276E4535CD8CEC92B79E42743B15 EFI_PCI_EXECUTION_PHASE;
typedef UINT32 EFI_PCI_PLATFORM_POLICY;
typedef enum _EB357A142A77DFEF25315D39B9B608BA EFI_PROCESSOR_TYPE_DATA;
typedef BOOLEAN (*EFI_SHELL_IS_ROOT_SHELL)(void);
typedef enum _318B24658C7CF251A2A0EE0AA47658F7 EVENT_LOG_VARIABLE_DATA;
typedef enum _12A31AB23B90DFF7A19F8CE42F29D75A MEMORY_ERROR_CORRECTION;
typedef enum _F7509066599408C2FA2794A73E29ED09 MISC_SYSTEM_WAKEUP_TYPE;
typedef UINT32 (*SHELLENV_GET_KEY_FILTER)(void);
typedef BOOLEAN (*SHELLENV_GET_PAGE_BREAK)(void);
typedef void (*SHELLENV_SET_KEY_FILTER)(UINT32 KeyFilter);
typedef UINT32 TPM_FAMILY_VERIFICATION;
typedef DWORD (__stdcall *WinNtGetCurrentThreadId)();
struct _EFI_HII_IIBT_END_BLOCK {EFI_HII_IMAGE_BLOCK Header;};
struct _EFI_HII_SIBT_END_BLOCK {EFI_HII_STRING_BLOCK Header;};
struct _MTRR_VARIABLE_SETTING_ {UINT64 Base;UINT64 Mask;};
typedef enum _F9FA34DEB47BB784E78B8C588968892C EFI_80211_ACC_NET_TYPE;
typedef UINT32 EFI_ACPI_TABLE_VERSION;
typedef EFI_COMMON_SECTION_HEADER EFI_DISPOSABLE_SECTION;
typedef enum _F8512085666538BA112F66D07CB7B171 EFI_DRIVER_HANOFF_ENUM;
typedef EFI_COMMON_SECTION_HEADER2 EFI_DXE_DEPEX_SECTION2;
typedef UINT32 EFI_FV_FILE_ATTRIBUTES;
typedef enum _7A3767199AA51BDED5CBD28E9C086913 EFI_IP4_CONFIG2_POLICY;
typedef enum _6B30FA8520B87C80395D7C67827CCBD0 EFI_IP6_NEIGHBOR_STATE;
typedef enum _C6B9B55EC0CF2CC10BC8BD6EC3D85252 EFI_LOCATE_SEARCH_TYPE;
typedef enum _EFI_MEMORY_FORM_FACTOR EFI_MEMORY_FORM_FACTOR;
typedef enum _EFI_MEMORY_REGION_TYPE EFI_MEMORY_REGION_TYPE;
typedef enum _CAFB146B87FD2034DB1C3FACC2BD5413 EFI_MISC_CHASSIS_STATE;
typedef EFI_COMMON_SECTION_HEADER2 EFI_PEI_DEPEX_SECTION2;
typedef enum _C5C8319CD3A72760061BD65C5F8E3DEF EFI_POWER_BUTTON_PHASE;
typedef EFI_COMMON_SECTION_HEADER2 EFI_SMM_DEPEX_SECTION2;
typedef enum _DEE2E38004EBAA49A179805F7F651A2C EFI_USB_DATA_DIRECTION;
typedef USB_DEVICE_REQUEST EFI_USB_DEVICE_REQUEST;
typedef enum _BFF62DD46CF870630879AC1A8133124C MEMORY_ERROR_OPERATION;
typedef enum _79C567BA78FB110F9B1A2028E09F5E5D MTRR_MEMORY_CACHE_TYPE;
typedef enum _2C1AEF22A6601FC9F8304EE3BC884049 PROCESSOR_FAMILY2_DATA;
typedef BOOLEAN (*SHELLENV_IS_ROOT_SHELL)(void);
typedef const CHAR16 *(*SHELL_GET_MAN_FILENAME)(void);
typedef UINT32 TPM_AUTHORIZATION_SIZE;
typedef UINT8 TPM_LOCALITY_SELECTION;
typedef UINT32 TPM_MODIFIER_INDICATOR;
struct _EFI_ATA_COMMAND_BLOCK {UINT8 Reserved1[2];UINT8 AtaCommand;UINT8 AtaFeatures;UINT8 AtaSectorNumber;UINT8 AtaCylinderLow;UINT8 AtaCylinderHigh;UINT8 AtaDeviceHead;UINT8 AtaSectorNumberExp;UINT8 AtaCylinderLowExp;UINT8 AtaCylinderHighExp;UINT8 AtaFeaturesExp;UINT8 AtaSectorCount;UINT8 AtaSectorCountExp;UINT8 Reserved2[6];};
struct _EFI_IFR_GREATER_EQUAL {EFI_IFR_OP_HEADER Header;};
struct _EFI_IFR_QUESTION_REF2 {EFI_IFR_OP_HEADER Header;};
struct _EFI_IFR_QUESTION_REF3 {EFI_IFR_OP_HEADER Header;};
struct _EFI_IP6_FRAGMENT_DATA {UINT32 FragmentLength;void *FragmentBuffer;};
struct _EFI_IPSEC_SA_LIFETIME {UINT64 ByteCount;UINT64 SoftLifetime;UINT64 HardLifetime;};
typedef enum _DA366707E422B4A903DA7CC971FC9573 BROWSER_SETTING_SCOPE;
typedef enum _EAE5BD83641377C66842C97A46850E79 CACHE_ERROR_TYPE_DATA;
typedef enum _5F18C87F459960569B358870608D44A8 EFI_80211_REASON_CODE;
typedef ATA_IDENTIFY_DATA EFI_ATA_IDENTIFY_DATA;
typedef enum _1917AE24BB1D9C4633175E8C3AC0F71B EFI_BOOT_SCRIPT_WIDTH;
typedef EFI_COMMON_SECTION_HEADER EFI_DXE_DEPEX_SECTION;
typedef EFI_SIMPLE_FILE_SYSTEM_PROTOCOL EFI_FILE_IO_INTERFACE;
typedef enum _5C84BADFD720A584A29094B416AF2EBB EFI_GCD_ALLOCATE_TYPE;
typedef enum _CBEB9D737C90FE4F601F542377EA32AE EFI_IO_OPERATION_TYPE;
typedef enum _C3F53859152DC2913060FB84F66D40BE EFI_IP6_CONFIG_POLICY;
typedef enum _ABA9330DC8794E68D59C5DDCCAAEF90F EFI_IPSEC_AUTH_METHOD;
typedef enum _EF11D5BB7C1332D7393EF9664B01AFE6 EFI_IPSEC_TRAFFIC_DIR;
typedef enum _EFI_MEMORY_ARRAY_TYPE EFI_MEMORY_ARRAY_TYPE;
typedef enum _8E2407300B256BA1705D658810BFCEF6 EFI_MEMORY_ERROR_TYPE;
typedef enum _C87C8F97728902EB195A54590E235E72 EFI_MISC_CHASSIS_TYPE;
typedef EFI_MISC_LAST_PCI_BUS_DATA EFI_MISC_LAST_PCI_BUS;
typedef EFI_COMMON_SECTION_HEADER EFI_PEI_DEPEX_SECTION;
typedef void (*EFI_PERIODIC_CALLBACK)(EFI_SYSTEM_CONTEXT SystemContext);
typedef const CHAR16 *(*EFI_SHELL_GET_CUR_DIR)(const CHAR16 *FileSystemMapping);
typedef EFI_COMMON_SECTION_HEADER EFI_SMM_DEPEX_SECTION;
typedef enum _000B8FDC2AFE9859FACDBC26CE2CF0A9 EFI_SMM_ICHN_SMI_TYPE;
typedef UINT32 EFI_STATUS_CODE_VALUE;
typedef enum _2130585625D2A3CCE57096BF12F3187D EFI_UGA_BLT_OPERATION;
typedef enum _EFI_USBFN_POLICY_TYPE EFI_USBFN_POLICY_TYPE;
typedef enum _EFI_USB_ENDPOINT_TYPE EFI_USB_ENDPOINT_TYPE;
typedef UINT16 EFI_USER_INFO_ATTRIBS;
typedef enum _ECC48FAD91F1C4A888756DDE1A79C566 HTTP_BODY_PARSE_EVENT;
typedef enum _959E5A507D74D459CF68331846A7E182 MEMORY_ARRAY_LOCATION;
typedef enum _A6C5B03FB9695260592BAEBD54849F66 MEMORY_PROFILE_ACTION;
typedef enum _03EC270267062BE4976661435C718E29 PROCESSOR_FAMILY_DATA;
typedef void (*REGISTER_EXIT_HANDLER)(EXIT_HANDLER Handler);
typedef enum _47A9D3AAE54C69801D08D9E30901A665 SHELL_PROMPT_RESPONSE;
typedef TPMS_SCHEME_SIGHASH TPMS_SCHEME_ECSCHNORR;
typedef UINT16 TPM_PHYSICAL_PRESENCE;
typedef UINT16 TPM_PLATFORM_SPECIFIC;
typedef UINT32 TREE_EVENT_LOG_BITMAP;
typedef UINT32 TREE_EVENT_LOG_FORMAT;
typedef enum _F9F2EE0F9800FE07839876E6A667D97B VARIABLE_STORE_STATUS;
typedef BOOL (__stdcall *WinNtTranslateMessage)(const MSG *lpMsg);
struct _EFI_ATA_STATUS_BLOCK {UINT8 Reserved1[2];UINT8 AtaStatus;UINT8 AtaError;UINT8 AtaSectorNumber;UINT8 AtaCylinderLow;UINT8 AtaCylinderHigh;UINT8 AtaDeviceHead;UINT8 AtaSectorNumberExp;UINT8 AtaCylinderLowExp;UINT8 AtaCylinderHighExp;UINT8 Reserved2;UINT8 AtaSectorCount;UINT8 AtaSectorCountExp;UINT8 Reserved3[6];};
struct _EFI_CPU_IO2_PROTOCOL {EFI_CPU_IO_PROTOCOL_ACCESS Mem;EFI_CPU_IO_PROTOCOL_ACCESS Io;};
struct _EFI_IFR_GREATER_THAN {EFI_IFR_OP_HEADER Header;};
struct _MTRR_FIXED_SETTINGS_ {UINT64 Mtrr[11];};
typedef EFI_EXP_BASE10_DATA EFI_CACHE_SPEED_DATA;
typedef UINT32 EFI_FVB_ATTRIBUTES_2;
typedef enum _87ED438755DFE5DE3396D28A31BE363E EFI_HTTP_STATUS_CODE;
typedef UINT8 EFI_KEY_TOGGLE_STATE;
typedef enum _EFI_MEMORY_ARRAY_USE EFI_MEMORY_ARRAY_USE;
typedef EFI_MISC_BIOS_VENDOR_DATA EFI_MISC_BIOS_VENDOR;
typedef enum _B9B25498C8C94C3A549F998F49553B49 EFI_MISC_SLOT_LENGTH;
typedef UINT64 EFI_PHYSICAL_ADDRESS;
typedef UINT32 EFI_STATUS_CODE_TYPE;
typedef enum _B8C0F2687F5EFFBE8F6DE2AAE5E75CAF EFI_USB_PORT_FEATURE;
typedef enum _87F218DAEA12ED758275246CB1E953F7 *PUGA_IO_REQUEST_CODE;
typedef TIS_PC_REGISTERS *TIS_PC_REGISTERS_PTR;
typedef TPM_NONCE TPM_DAA_CONTEXT_SEED;
typedef UINT32 TPM_FAMILY_OPERATION;
typedef enum _272A9DAB0DD36E1462BC3F4A77C7162B USB_TYPES_DEFINITION;
typedef BOOL (__stdcall *WinNtDispatchMessage)(const MSG *lpMsg);
typedef void (__stdcall *WinNtPostQuitMessage)(INT32 nExitCode);
struct _EFI_HII_GLYPH_BLOCK {UINT8 BlockType;};
struct _EFI_HII_IMAGE_BLOCK {UINT8 BlockType;};
struct _EFI_IFR_BITWISE_AND {EFI_IFR_OP_HEADER Header;};
struct _EFI_IFR_BITWISE_NOT {EFI_IFR_OP_HEADER Header;};
struct _EFI_IFR_CONDITIONAL {EFI_IFR_OP_HEADER Header;};
struct _EFI_IFR_GRAY_OUT_IF {EFI_IFR_OP_HEADER Header;};
struct _EFI_IFR_SHIFT_RIGHT {EFI_IFR_OP_HEADER Header;};
struct _EFI_IFR_STRING_REF2 {EFI_IFR_OP_HEADER Header;};
struct _EFI_IFR_SUPPRESS_IF {EFI_IFR_OP_HEADER Header;};
struct tdTPM_DELEGATE_LABEL {UINT8 label;};
struct tdTPM_DELEGATE_TABLE {TPM_DELEGATE_TABLE_ROW delRow[2];};
typedef void (*DEBUG_PORT_CONTINUE)(void *Context, DEBUG_PORT_HANDLE DebugPortHandle);
typedef enum _8654BE61EA48664541B7EEE332229FB3 EFI_BASE_BOARD_TYPE;
typedef EFI_EXP_BASE2_DATA EFI_CACHE_SIZE_DATA;
typedef enum _3B1F77C17EEFEE4519A5F23D3E1897CB EFI_CACHE_TYPE_DATA;
typedef enum _8EA7EC16A99B5F61C01D25AF43DE367C EFI_CPU_DESIGNATION;
typedef EFI_CPU_IO2_PROTOCOL EFI_CPU_IO_PROTOCOL;
typedef UINT8 EFI_FLASH_AREA_TYPE;
typedef UINT32 EFI_FV_WRITE_POLICY;
typedef enum _6F7D6DAB3C291CD0693B8DEA7A9F087C EFI_GCD_MEMORY_TYPE;
typedef enum _77E9CA77710731688181B38758974C4D EFI_INIT_CACHE_TYPE;
typedef EFI_MISC_OEM_STRING_DATA EFI_MISC_OEM_STRING;
typedef enum _566AA586618FD1712A6F50962DC5BF56 EFI_MISC_SLOT_USAGE;
typedef enum _EFI_SMBUS_OPERATION EFI_SMBUS_OPERATION;
typedef void (*EFI_SMM_ENTRY_POINT)(const EFI_SMM_ENTRY_CONTEXT *SmmEntryContext);
typedef enum _EFI_USBFN_PORT_TYPE EFI_USBFN_PORT_TYPE;
typedef UINT8 EFI_USER_INFO_RETRY;
typedef UINT64 EFI_VIRTUAL_ADDRESS;
typedef enum _972AE5CE84C45A26BEE2208833D9BDF7 EVENT_LOG_TYPE_DATA;
typedef EFI_HEALTH_FLAGS IA32_HANDOFF_STATUS;
typedef enum _DCCB8A9C81E6ED9386271C3B8628FCED MEMORY_CHANNEL_TYPE;
typedef enum _F6F5779059737EF3E0C88ACD0C7553D7 PROCESSOR_TYPE_DATA;
typedef EFI_SERIAL_IO_PROTOCOL SERIAL_IO_INTERFACE;
typedef UINT8 SMBIOS_TABLE_STRING;
typedef UINT8 TPM_AUTH_DATA_USAGE;
typedef UINT32 TPM_CAPABILITY_AREA;
typedef UINT32 TPM_STARTUP_EFFECTS;
typedef enum _87F218DAEA12ED758275246CB1E953F7 UGA_IO_REQUEST_CODE;
struct _EFI_IFR_BITWISE_OR {EFI_IFR_OP_HEADER Header;};
struct _EFI_IFR_DISABLE_IF {EFI_IFR_OP_HEADER Header;};
struct _EFI_IFR_LESS_EQUAL {EFI_IFR_OP_HEADER Header;};
struct _EFI_IFR_SHIFT_LEFT {EFI_IFR_OP_HEADER Header;};
struct _EFI_IFR_TO_BOOLEAN {EFI_IFR_OP_HEADER Header;};
struct _EFI_SHELL_ARG_INFO {UINT32 Attributes;};
typedef enum _4A46B2CCC7FA91131BACD63DCFC5DC96 BMC_INTERFACE_TYPE;
typedef enum _36845F6D2C36805F3BBE42F4A3C083C2 EFI_80211_BSS_TYPE;
typedef UINT32 EFI_ACPI_DATA_TYPE;
typedef enum _0D01614F9FC570E709142F7CFE9AB402 EFI_BADGING_FORMAT;
typedef enum _F363F8EF39A5456995FD21CDAA11E9BA EFI_CACHE_LOCATION;
typedef enum _E0902748D2F9FEFA2CD41E755335204E EFI_CPU_FLUSH_TYPE;
typedef UINT8 EFI_FFS_FILE_STATE;
typedef UINT32 EFI_FONT_INFO_MASK;
typedef UINT32 EFI_FVB_ATTRIBUTES;
typedef UINT32 EFI_HII_DRAW_FLAGS;
typedef UINT32 EFI_HII_FONT_STYLE;
typedef enum _22AC71E436D42DF8AFFA867BCD8ABD68 EFI_INTERFACE_TYPE;
typedef enum _0A2D597227BE843C2A1491F5548450A0 EFI_MISC_PORT_TYPE;
typedef enum _5B59BA72DD425C8A465A664D8DC4356E EFI_MISC_SLOT_TYPE;
typedef enum _3E0C53CA2548E4E99BBB5E1172354104 EFI_PEI_RESET_TYPE;
typedef EFI_SIMPLE_NETWORK_PROTOCOL EFI_SIMPLE_NETWORK;
typedef enum _B19FA2156659DE45E103EC3EC6D38E48 EFI_STOP_BITS_TYPE;
typedef CHAR16 *EFI_USER_INFO_NAME;
typedef enum _D411333A86D3311A2C9E0780F0454099 MEMORY_DEVICE_TYPE;
typedef enum _861F1046478701FE78BCD31F924D7F30 MEMORY_FORM_FACTOR;
typedef enum _2FBB9ACCEED0661A944A30659386D95B MISC_CHASSIS_STATE;
typedef UINT16 PXE_MEDIA_PROTOCOL;
typedef enum _7CA5360722F817D6C9560190E005B22C SHELL_MAPPING_TYPE;
typedef TPMS_SCHEME_SIGHASH TPMS_SCHEME_RSAPSS;
typedef TPMS_SCHEME_SIGHASH TPMS_SCHEME_RSASSA;
typedef TPM_DIGEST TPM_COMPOSITE_HASH;
typedef UINT32 TPM_DELEGATE_INDEX;
typedef enum tdTPM_KEY_FLAGS TPM_KEY_FLAGS_BITS;
typedef UINT16 TPM_MIGRATE_SCHEME;
typedef UINT32 TPM_PARAMETER_SIZE;
typedef void (__stdcall *WinNtGetSystemTime)(LPSYSTEMTIME SystemTime);
typedef BOOL (__stdcall *WinNtSetSystemTime)(const SYSTEMTIME *SystemTime);
typedef EFI_HEALTH_FLAGS X64_HANDOFF_STATUS;
struct _EFI_HII_RGB_PIXEL {UINT8 b;UINT8 g;UINT8 r;};
struct _EFI_IFR_LESS_THAN {EFI_IFR_OP_HEADER Header;};
struct _EFI_IFR_MODAL_TAG {EFI_IFR_OP_HEADER Header;};
struct _EFI_IFR_NOT_EQUAL {EFI_IFR_OP_HEADER Header;};
struct _EFI_IFR_OP_HEADER {UINT8 OpCode;unsigned __int8 Length : 7;unsigned __int8 Scope : 1;};
struct _EFI_IFR_UNDEFINED {EFI_IFR_OP_HEADER Header;};
struct s_pxe_cpb_start_30 {UINT64 Delay;UINT64 Block;UINT64 Virt2Phys;UINT64 Mem_IO;};
struct s_pxe_cpb_start_31 {UINT64 Delay;UINT64 Block;UINT64 Virt2Phys;UINT64 Mem_IO;UINT64 Map_Mem;UINT64 UnMap_Mem;UINT64 Sync_Mem;UINT64 Unique_ID;};
struct tdEFI_TCG2_VERSION {UINT8 Major;UINT8 Minor;};
struct tdTPM_FAMILY_LABEL {UINT8 label;};
struct tdTPM_FAMILY_TABLE {TPM_FAMILY_TABLE_ENTRY famTableRow[8];};
typedef void (*DEV_PATH_FUNCTION)(POOL_PRINT *Str, void *DevPath);
typedef enum _A4A7036DB846195D87A951F0573D391A EFI_ALLOCATE_TYPE;
typedef enum _FF74624F674BAA52F779FF2F319E29E6 EFI_CPU_INIT_TYPE;
typedef UINT16 EFI_FFS_FILE_TAIL;
typedef UINT64 EFI_FV_ATTRIBUTES;
typedef UINT32 EFI_HII_OUT_FLAGS;
typedef EFI_COMMON_SECTION_HEADER2 EFI_PE32_SECTION2;
typedef EFI_PXE_BASE_CODE_PROTOCOL EFI_PXE_BASE_CODE;
typedef UINT32 EFI_RESOURCE_TYPE;
typedef const CHAR16 *(*EFI_SHELL_GET_ENV)(const CHAR16 *Name);
typedef UINT16 EFI_SMBIOS_HANDLE;
typedef UINT8 EFI_SMBIOS_STRING;
typedef enum _EFI_USBFN_MESSAGE EFI_USBFN_MESSAGE;
typedef enum _EFI_USB_BUS_SPEED EFI_USB_BUS_SPEED;
typedef UINT8 EFI_USER_INFO_FAR;
typedef BOOLEAN (*IS_RESET_REQUIRED)(void);
typedef enum _342729C09715CBEB79DAEAC8717EA72C MEMORY_ERROR_TYPE;
typedef enum _C78092EB030A12406EA7F86B4504025B MISC_CHASSIS_TYPE;
typedef enum _3076FD2B4E67DDD052AFCFA3899AEAD3 PROCESSOR_UPGRADE;
typedef TPMS_SCHEME_SIGHASH TPMS_SCHEME_ECDSA;
typedef TPM_DIGEST TPM_CHOSENID_HASH;
typedef UINT32 TPM_REDIT_COMMAND;
typedef UINT32 TPM_RESOURCE_TYPE;
typedef UINT16 TPM_STRUCTURE_TAG;
typedef DWORD (__stdcall *WinNtGetLastError)();
typedef void (__stdcall *WinNtGetLocalTime)(LPSYSTEMTIME SystemTime);
typedef DWORD (__stdcall *WinNtGetTickCount)();
typedef UINT (__stdcall *WinNtSetErrorMode)(UINT Mode);
typedef BOOL (__stdcall *WinNtSetLocalTime)(const SYSTEMTIME *SystemTime);
struct _EFI_IFR_CATENATE {EFI_IFR_OP_HEADER Header;};
struct _EFI_IFR_MULTIPLY {EFI_IFR_OP_HEADER Header;};
struct _EFI_IFR_SUBTRACT {EFI_IFR_OP_HEADER Header;};
struct _EFI_IFR_TO_LOWER {EFI_IFR_OP_HEADER Header;};
struct _EFI_IFR_TO_UPPER {EFI_IFR_OP_HEADER Header;};
typedef PCD_DATABASE_INIT DXE_PCD_DATABASE;
typedef UINT16 EFI_ANIMATION_ID;
typedef DXE_SERVICES EFI_DXE_SERVICES;
typedef void (*EFI_EVENT_NOTIFY)(EFI_EVENT Event, void *Context);
typedef enum _EBDC0443FF0CC047EB38A712FE6691C7 EFI_HTTP_VERSION;
typedef enum _57CD3094B73B97C91106B7231444993C EFI_IPSEC_ACTION;
typedef EFI_LOADED_IMAGE_PROTOCOL EFI_LOADED_IMAGE;
typedef enum _C0252F537A2DA259A39A3CFCC1A6AC6F EFI_MEMORY_STATE;
typedef EFI_COMMON_SECTION_HEADER EFI_PE32_SECTION;
typedef EFI_COMMON_SECTION_HEADER2 EFI_PIC_SECTION2;
typedef EFI_COMMON_SECTION_HEADER2 EFI_RAW_SECTION2;
typedef UINT8 EFI_SECTION_TYPE;
typedef UINT8 EFI_SHA224_HASH2[28];
typedef UINT8 EFI_SHA256_HASH2[32];
typedef UINT8 EFI_SHA384_HASH2[48];
typedef UINT8 EFI_SHA512_HASH2[64];
typedef UINT16 EFI_SIO_REGISTER;
typedef enum _B274290133773A9B078A468AA22878DB EFI_SMM_IO_WIDTH;
typedef void (*EFI_TIMER_NOTIFY)(UINT64 Time);
typedef enum _70AC86557541B6B2BC11D74F619C1EF6 EFI_USB_HC_STATE;
typedef enum _D49FDA02121923C6D1D9FFE93A952E7B EFI_USB_SMI_TYPE;
typedef enum _BA7C58370D72CDECE95984E1F39AE130 MEMORY_ARRAY_USE;
typedef enum _AE099AE7FBBFCB234EAFC270A757901F MISC_SLOT_LENGTH;
typedef PCD_DATABASE_INIT PEI_PCD_DATABASE;
typedef UINT64 PHYSICAL_ADDRESS;
typedef enum _2FE559378DAF741E3B9B67C1D698C46B *PUGA_DEVICE_TYPE;
typedef CHAR16 *(*SHELLENV_CUR_DIR)(CHAR16 *DeviceName);
typedef CHAR16 *(*SHELLENV_GET_ENV)(CHAR16 *Name);
typedef CHAR16 *(*SHELLENV_GET_MAP)(CHAR16 *Name);
typedef enum _3FF0B9D748C323CDCA29D71A8E2B0C91 SHELL_PARAM_TYPE;
typedef UINT32 TCG_ALGORITHM_ID;
typedef TPMS_SCHEME_SIGHASH TPMS_SCHEME_HMAC;
typedef UINT32 TPM_ACTUAL_COUNT;
typedef UINT32 TPM_ALGORITHM_ID;
typedef INT8 TPM_CLOCK_ADJUST;
typedef UINT32 TPM_CMK_DELEGATE;
typedef UINT32 TPM_COMMAND_CODE;
typedef TPM_NONCE TPM_DAA_TPM_SEED;
typedef UINT32 TPM_FAMILY_FLAGS;
typedef UINT8 TPM_PAYLOAD_TYPE;
typedef UINT16 TPM_STARTUP_TYPE;
typedef UINT8 TPM_VERSION_BYTE;
typedef enum _C59D082E545ADE786E8A5E445C3FC2C9 VAR_CLEANUP_TYPE;
typedef void (__stdcall *WinNtExitProcess)(UINT uExitCode);
struct _EFI_IFR_TO_UINT {EFI_IFR_OP_HEADER Header;};
struct _EFI_IFR_VERSION {EFI_IFR_OP_HEADER Header;};
struct tdTPM_STRUCT_VER {UINT8 major;UINT8 minor;UINT8 revMajor;UINT8 revMinor;};
typedef enum _F5EDA5C9FC207E6679F1B8D03404B330 BASE_BOARD_TYPE;
typedef enum _5947AFAD7C0C9E675D55E92DEB489B96 CACHE_TYPE_DATA;
typedef UINT64 CONTEXT_COUNTER;
typedef EFI_DEVICE_PATH_PROTOCOL EFI_DEVICE_PATH;
typedef enum _0AACAB9A86E79AB7BCD3F235EC115E8A EFI_DHCP4_EVENT;
typedef enum _37D50771F75D5839525827F0D9CE663F EFI_DHCP4_STATE;
typedef enum _00CD51EA23DA02A6335B930C5DCB15CA EFI_DHCP6_EVENT;
typedef enum _F1E84A5C7570F7C036754172AFC627B2 EFI_DHCP6_STATE;
typedef UINT8 EFI_FV_FILETYPE;
typedef enum _180B1A9830BC5A37D13765BCC0DC0850 EFI_GCD_IO_TYPE;
typedef enum _ADF7485699AD0D5BDD257E6DF116DA5F EFI_HTTP_METHOD;
typedef enum _3E9500C5A8AA10B6E24D346688989D6A EFI_MEMORY_TYPE;
typedef enum _8DB746F07ECEA2773769AB182972EFCD EFI_PARITY_TYPE;
typedef EFI_COMMON_SECTION_HEADER EFI_PIC_SECTION;
typedef UINT16 EFI_QUESTION_ID;
typedef EFI_COMMON_SECTION_HEADER EFI_RAW_SECTION;
typedef UINT8 EFI_SHA224_HASH[28];
typedef UINT8 EFI_SHA256_HASH[32];
typedef UINT8 EFI_SHA384_HASH[48];
typedef UINT8 EFI_SHA512_HASH[64];
typedef enum _9B2305AF1DCE2ACD8C771DE695B9C6D4 EFI_SLEEP_PHASE;
typedef UINT8 EFI_SMBIOS_TYPE;
typedef enum _E4A12007A93C2C7B8F7AE732891048CC EFI_STRING_TYPE;
typedef EFI_COMMON_SECTION_HEADER2 EFI_TE_SECTION2;
typedef enum _6EA627E77A15F8AB1B742C5151465F4C EFI_TIMER_DELAY;
typedef UINT16 EFI_VARSTORE_ID;
typedef UINT32 EXCEPTION_FLAGS;
typedef enum _81C96E3F196AC83D02B4522B31857D28 IP_PREFIX_VALUE;
typedef enum _BD66A47D0D849312C5B317D991F6A54E MISC_SLOT_USAGE;
typedef TPMS_SCHEME_SIGHASH TPMS_SCHEME_SM2;
typedef TPM_DIGEST TPM_AUDITDIGEST;
typedef UINT16 TPM_ENTITY_TYPE;
typedef UINT32 TPM_KEY_CONTROL;
typedef UINT16 TPM_PROTOCOL_ID;
typedef UINT32 TPM_TRANSHANDLE;
typedef enum _2FE559378DAF741E3B9B67C1D698C46B UGA_DEVICE_TYPE;
typedef void (__stdcall *WinNtExitThread)(DWORD dwExitCode);
struct _EFI_IFR_DIVIDE {EFI_IFR_OP_HEADER Header;};
struct _EFI_IFR_LENGTH {EFI_IFR_OP_HEADER Header;};
struct _EFI_IFR_LOCKED {EFI_IFR_OP_HEADER Header;};
struct _EFI_IFR_MODULO {EFI_IFR_OP_HEADER Header;};
typedef enum _A948103DB07764A4B38F0B9182CB1A8E EFI_CPU_STATUS;
typedef UINT16 EFI_DEFAULT_ID;
typedef UINT16 EFI_FORM_LABEL;
typedef enum _24774D28386496D9DEAED9FD6A8A4775 EFI_IPSEC_MODE;
typedef LIST_ENTRY EFI_LIST_ENTRY;
typedef enum _93109A519E2DD3430446830243D47C7E EFI_LOCK_STATE;
typedef enum _D0B5F529F135535C2F72FA899444D28F EFI_RESET_TYPE;
typedef UINT8 EFI_SHA1_HASH2[20];
typedef enum _6FDDFEC3748D86DB29779B04F7A65BE5 EFI_SLEEP_TYPE;
typedef EFI_COMMON_SECTION_HEADER EFI_TE_SECTION;
typedef enum _A7472EA7F31B842BA2E956CD3315A121 MISC_PORT_TYPE;
typedef enum _F9C948DB43B11218619BC0A708779090 MISC_SLOT_TYPE;
typedef UINT32 *PUGA_DEVICE_ID;
typedef UINT8 SMART_CARD_AID[16];
typedef UINT8 SMART_CARD_CSN[16];
typedef EFI_HANDLE TIS_TPM_HANDLE;
typedef UINT32 TPM_AUTHHANDLE;
typedef UINT16 TPM_ENC_SCHEME;
typedef UINT32 TPM_KEY_HANDLE;
typedef UINT16 TPM_SIG_SCHEME;
typedef UINT32 TrEE_EVENTTYPE;
typedef UINT8 VAR_ERROR_FLAG;
struct _EFI_IFR_EQUAL {EFI_IFR_OP_HEADER Header;};
struct _EFI_IFR_FALSE {EFI_IFR_OP_HEADER Header;};
struct _EFI_IFR_MATCH {EFI_IFR_OP_HEADER Header;};
struct _EFI_IFR_TOKEN {EFI_IFR_OP_HEADER Header;};
struct _EFI_IFR_VALUE {EFI_IFR_OP_HEADER Header;};
struct _EFI_IFR_WRITE {EFI_IFR_OP_HEADER Header;};
typedef UINT8 tdTPM_AUTHDATA[20];
struct tdTPM_CMK_AUTH {TPM_DIGEST migrationAuthorityDigest;TPM_DIGEST destinationKeyDigest;TPM_DIGEST sourceKeyDigest;};
typedef enum _5ED68EDA1E10F46D2ED4711B277818C3 EFI_8259_MODE;
typedef void (*EFI_BDS_ENTRY)(EFI_BDS_ARCH_PROTOCOL *This);
typedef UINT32 EFI_BOOT_MODE;
typedef UINT16 EFI_HPC_STATE;
typedef UINT8 EFI_MD5_HASH2[16];
typedef UINT8 EFI_SHA1_HASH[20];
typedef UINT16 EFI_STRING_ID;
typedef UINT8 PARALLEL_MODE;
typedef UINT32 (*SAVE_REMINDER)(void);
typedef UINT32 TCG_EVENTTYPE;
typedef UINT64 (*TIMESTAMP_GET)(void);
typedef TPM2B_DIGEST TPM2B_OPERAND;
typedef UINT16 TPM_ECC_CURVE;
typedef UINT32 TPM_FAMILY_ID;
typedef UINT32 TPM_GENERATED;
typedef UINT32 TPM_KEY_FLAGS;
typedef UINT16 TPM_KEY_USAGE;
typedef UINT32 TrEE_PCRINDEX;
typedef UINT32 UGA_DEVICE_ID;
typedef BOOL (__stdcall *WinNtTlsAlloc)();
struct _EFI_IFR_ONES {EFI_IFR_OP_HEADER Header;};
struct _EFI_IFR_READ {EFI_IFR_OP_HEADER Header;};
struct _EFI_IFR_THIS {EFI_IFR_OP_HEADER Header;};
struct _EFI_IFR_TRUE {EFI_IFR_OP_HEADER Header;};
struct _EFI_IFR_ZERO {EFI_IFR_OP_HEADER Header;};
struct _TREE_VERSION {UINT8 Major;UINT8 Minor;};
typedef enum _A4FA044F57EB4458ADDA5A16A5D772F0 CONSOLE_TYPE;
typedef UINT16 CONTEXT_SLOT;
typedef enum _3B1FC660BA692E50D7AB89158D1C4036 EFI_8259_IRQ;
typedef UINT32 EFI_ACPI_HID;
typedef UINT32 EFI_ACPI_UID;
typedef EFI_BLOCK_IO_PROTOCOL EFI_BLOCK_IO;
typedef UINT8 EFI_EAP_TYPE;
typedef UINT16 EFI_IMAGE_ID;
typedef enum _D86D1F119D8CBFCD53A82B721F3E66FA EFI_IO_WIDTH;
typedef UINT8 EFI_MD5_HASH[16];
typedef enum _4C0A7831BEA91DA69125925BD89CF954 EFI_PCD_TYPE;
typedef enum _3FD926976ED34482219211171F38D27D SHELL_STATUS;
typedef UINT32 TABLE_OFFSET;
typedef tdTPM_AUTHDATA TPM_AUTHDATA;
typedef UINT32 TPM_COUNT_ID;
typedef UINT8 TPM_DA_STATE;
typedef UINT32 TPM_DIRINDEX;
typedef TPM_DIGEST TPM_DIRVALUE;
typedef UINT16 TPM_KEY_BITS;
typedef UINT16 TPM_KEY_SIZE;
typedef UINT32 TPM_NV_INDEX;
typedef UINT32 TPM_PCRINDEX;
typedef TPM_DIGEST TPM_PCRVALUE;
typedef UINT32 TPM_SYM_MODE;
struct _EFI_IFR_ADD {EFI_IFR_OP_HEADER Header;};
struct _EFI_IFR_AND {EFI_IFR_OP_HEADER Header;};
struct _EFI_IFR_DUP {EFI_IFR_OP_HEADER Header;};
struct _EFI_IFR_END {EFI_IFR_OP_HEADER Header;};
struct _EFI_IFR_MAP {EFI_IFR_OP_HEADER Header;};
struct _EFI_IFR_MID {EFI_IFR_OP_HEADER Header;};
struct _EFI_IFR_NOT {EFI_IFR_OP_HEADER Header;};
struct _EFI_IFR_ONE {EFI_IFR_OP_HEADER Header;};
struct tdTPM_DIGEST {UINT8 digest[20];};
typedef UINT32 BIS_CERT_ID;
typedef EFI_DISK_IO_PROTOCOL EFI_DISK_IO;
typedef UINT16 EFI_FORM_ID;
typedef UINT64 EFI_PEI_LBA;
typedef enum _C28D067834907A2D8E688B344643B30B RSA_KEY_TAG;
typedef UINT8 SERIAL_MODE;
typedef UINT32 STRING_HEAD;
typedef TPM2B_DIGEST TPM2B_NONCE;
typedef UINT16 TPM_EK_TYPE;
typedef TPM_AUTHDATA TPM_ENCAUTH;
typedef INT64 VM_REGISTER;
struct _EFI_IFR_OR {EFI_IFR_OP_HEADER Header;};
struct _LIST_ENTRY {LIST_ENTRY *ForwardLink;LIST_ENTRY *BackLink;};
struct _UGA_DEVICE {void *pvDeviceContext;void *pvSharedContext;void *pvRunTimeContext;struct _UGA_DEVICE *pParentDevice;void *pvBusIoServices;void *pvStdIoServices;UGA_DEVICE_DATA deviceData;};
struct tdTPM_NONCE {UINT8 nonce[20];};
typedef UINT16 BIS_ALG_ID;
typedef CHAR16 *EFI_STRING;
typedef UINT16 PXE_UINT16;
typedef UINT32 PXE_UINT32;
typedef UINT64 PXE_UINT64;
typedef UINT16 STRING_REF;
typedef TPM_DIGEST TCG_DIGEST;
typedef UINT16 TCP_PORTNO;
typedef TPM2B_DIGEST TPM2B_AUTH;
typedef UINT16 TPM_ALG_ID;
typedef UINT32 TPM_HANDLE;
typedef UINT32 TPM_PT_PCR;
typedef UINT32 TPM_RESULT;
typedef TPM_AUTHDATA TPM_SECRET;
typedef UINT32 UGA_STATUS;
typedef void (__stdcall *WinNtSleep)(DWORD Milliseconds);
typedef DWORD *DWORD_PTR;
typedef PVOID HINSTANCE;
typedef PXE_UINT16 PXE_IFNUM;
typedef UINT8 PXE_UINT8;
typedef UINT16 SIZE_INFO;
typedef UINT32 TCP_SEQNO;
typedef UINT8 BBS_TYPE;
typedef EFI_FILE_PROTOCOL EFI_FILE;
typedef GUID EFI_GUID;
typedef UINT32 IP4_ADDR;
typedef UINT MMRESULT;
typedef enum _A11902A7992589185540AA430CF4AFF8 PCD_TYPE;
typedef PXE_UINT8 PXE_BOOL;
typedef PXE_UINT32 PXE_IPV4;
typedef PXE_UINT32 PXE_IPV6[4];
typedef TPM_DIGEST TPM_HMAC;
typedef enum _1DC6B36EFBE479CBF3593267246738D8 EFI_KEY;
typedef UINT64 EFI_LBA;
typedef PVOID HCURSOR;
typedef PVOID HGDIOBJ;
typedef PVOID HMODULE;
typedef const TCHAR *LPCTSTR;
typedef const WCHAR *LPCWSTR;
typedef DWORD *LPDWORD;
typedef LONG LRESULT;
typedef UINT32 RELOFST;
typedef UINT32 TPM_CAP;
typedef UINT16 TPM_TAG;
typedef CHAR8 *VA_LIST;
typedef UINT16 nlink_t;
typedef PVOID HANDLE;
typedef LONG LPARAM;
typedef LONG *LPLONG;
typedef TCHAR *LPTSTR;
typedef WCHAR *LPWSTR;
typedef UINT_PTR SIZE_T;
typedef UINT8 SKU_ID;
typedef UINT32 TPM_CC;
typedef UINT16 TPM_EO;
typedef TPM_HANDLE TPM_HC;
typedef UINT8 TPM_HT;
typedef UINT32 TPM_PS;
typedef UINT32 TPM_PT;
typedef UINT32 TPM_RC;
typedef UINT32 TPM_RH;
typedef UINT8 TPM_SE;
typedef UINT16 TPM_ST;
typedef UINT16 TPM_SU;
typedef UINT WPARAM;
struct _COORD {SHORT X;SHORT Y;};
typedef UINT16 mode_t;
typedef UINT16 BSIZE;
typedef PVOID HICON;
typedef PVOID HMENU;
typedef LONG *PLONG;
typedef UINT64 UINTN;
typedef UINT32 dev_t;
typedef UINT32 gid_t;
typedef UINT32 ino_t;
typedef INT64 off_t;
typedef UINT32 uid_t;
typedef WORD ATOM;
typedef UINT8 BYTE;
typedef PVOID HWND;
typedef INT64 INTN;
typedef UINT8 *VMIP;
typedef PVOID HDC;
union _08D4D8EF781E325E516B9DF5F384A04D___4E1585B4C3042799F4326DB06A0CBA14 {EFI_TCP4_RECEIVE_DATA *RxData;EFI_TCP4_TRANSMIT_DATA *TxData;};
union _0E1C314154D40BBA527682AF090FB242___270CE8F4605A49DF14F287E637150C83 {EFI_UDP6_RECEIVE_DATA *RxData;EFI_UDP6_TRANSMIT_DATA *TxData;};
union _0F934B3B6D925568E8AB6A57CC3AA362___A92FF03DC9B9AB6EE64CCBB259EA1815 {EFI_IP6_RECEIVE_DATA *RxData;EFI_IP6_TRANSMIT_DATA *TxData;};
union _2346AEA35C9D7D084E7EF0424AFB9CF6___0095214DD0AAAA7723F453E6842617CF {EFI_MANAGED_NETWORK_RECEIVE_DATA *RxData;EFI_MANAGED_NETWORK_TRANSMIT_DATA *TxData;};
union _23958E38AF544E49B6D98E0B1C04F079___8BAB8145E7DE54837B65F56B2E38C9CF {UINT8 Byte;struct ____8BAB8145E7DE54837B65F56B2E38C9CF___BEA82FFFCF7E25A2CCFAA7CF74921A50 Bits;};
union _43A0E8C65EC56F9D699C6118165E9DE1___0116443B75BBA1B64EDB148A57294B61 {EFI_HTTP_REQUEST_DATA *Request;EFI_HTTP_RESPONSE_DATA *Response;};
union _514098925362A3D4F3AE39E7826BDCB0___BE2119392D04BC3627A77C4E2AEA201B {EFI_IP4_RECEIVE_DATA *RxData;EFI_IP4_TRANSMIT_DATA *TxData;};
union _72D94C4FF762A2E1D25032A0037FC0CD___85E04D9594D569B0B1B2009C8255CCE6 {struct ____85E04D9594D569B0B1B2009C8255CCE6___6E35CCFC02D81E31BD4C6BEDD77CB20A s;UINT32 Id;};
union _72D94C4FF762A2E1D25032A0037FC0CD___C9A4ABCA41DC78BE4A0192C5281BD368 {UINT32 OffsetToData;struct ____C9A4ABCA41DC78BE4A0192C5281BD368___B2E03ED94C06E2E681F8D03FF7FF5CB3 s;};
union _79DA16AE253D27DC3A6F31A8B9020499___0571F174878059208283A16275BC34FB {EFI_TCP6_RECEIVE_DATA *RxData;EFI_TCP6_TRANSMIT_DATA *TxData;};
struct _7C5F9768C94386CA7F4E7DC66B8830A3___6BEF19C9FA8303F6270AA3937FD58289 {UINT8 Type;CHAR8 Id[5];CHAR8 Reserved[82];};
struct _7C5F9768C94386CA7F4E7DC66B8830A3___858D6277A804C73ADA47D55724ADB58D {UINT8 Type;CHAR8 Id[5];UINT8 Version;CHAR8 SystemId[32];CHAR8 Unused[32];UINT8 EltCatalog[4];CHAR8 Unused2[13];};
struct _8B2452E5B9D1FF29DC352664F48A8AF5___1FA7CE43D64A8C4BC04A6EDD657AEB9B {EFI_DHCP6_HEADER Header;UINT8 Option[1];};
union _DF22CF9CA9B769C51E2E573A6985619A___7771E727E13B5BCC6B37DC43F23FC4AB {EFI_HTTPv4_ACCESS_POINT *IPv4Node;EFI_HTTPv6_ACCESS_POINT *IPv6Node;};
union _E4A56E909B566E944F516D2F131E248A___3665F245BC54D27AD2AF264354DA6B4B {EFI_UDP4_RECEIVE_DATA *RxData;EFI_UDP4_TRANSMIT_DATA *TxData;};
union _F82C7CF31A94CF1E43C42E26FF4F1D8A___DC0BAFAEDE9FCAFF80C457AFB6D04FDA {UINT32 reserved;UINT32 Mtu;UINT32 Pointer;struct ____DC0BAFAEDE9FCAFF80C457AFB6D04FDA___DADC775BEF5E9EA8DCFD18C68E476C3D Echo;};
union _F9D42D39DD3C8DF123E27FB71942E14A___EB8B4300FB02606D6E51BF3C2273DE54 {UINT32 Function;UINT32 Ordinal;EFI_IMAGE_IMPORT_BY_NAME *AddressOfData;};
struct s_pxe_cpb_fill_header_fragmented___B13E8BB19B25C47A4B5B59F0D316DBC1 {PXE_UINT64 FragAddr;PXE_UINT32 FragLen;PXE_UINT32 reserved;};
struct s_pxe_cpb_transmit_fragments___B13E8BB19B25C47A4B5B59F0D316DBC1 {PXE_UINT64 FragAddr;PXE_UINT32 FragLen;PXE_UINT32 reserved;};
union _EFI_IFR_QUESTION_HEADER___A8B68B5C3AAC68D222728D2BA143C346 {EFI_STRING_ID VarName;UINT16 VarOffset;};
union _EFI_IMAGE_OUTPUT___4FC8C3BF42F93F42A468A5773430D9F5 {EFI_GRAPHICS_OUTPUT_BLT_PIXEL *Bitmap;EFI_GRAPHICS_OUTPUT_PROTOCOL *Screen;};
union _EFI_IPSEC_PAD_ID___13F599595FA3B2E59D359AF10D9E980C {EFI_IP_ADDRESS_INFO IpAddress;UINT8 PeerId[128];};
union _EFI_IFR_GET___A8B68B5C3AAC68D222728D2BA143C346 {EFI_STRING_ID VarName;UINT16 VarOffset;};
union _EFI_IFR_SET___A8B68B5C3AAC68D222728D2BA143C346 {EFI_STRING_ID VarName;UINT16 VarOffset;};
typedef UINTN (*EFI_DEVICE_PATH_UTILS_GET_DEVICE_PATH_SIZE)(const EFI_DEVICE_PATH_PROTOCOL *DevicePath);
union _UDP_IO___32819A293148F95F3B4A29C7F42325D3 {EFI_UDP4_PROTOCOL *Udp4;EFI_UDP6_PROTOCOL *Udp6;};
union _UDP_IO___B47D131A600585656086C9588CC190F1 {EFI_UDP4_CONFIG_DATA Udp4;EFI_UDP6_CONFIG_DATA Udp6;};
typedef CHAR16 *(*EFI_BOOT_MANAGER_BOOT_DESCRIPTION_HANDLER)(EFI_HANDLE Handle, const CHAR16 *DefaultDescription);
struct _EFI_PCI_EXPRESS_BASE_ADDRESS_INFORMATION {UINT32 HostBridgeNumber;UINT32 RootBridgeNumber;UINT64 PciExpressBaseAddress;};
typedef EFI_DEVICE_PATH_PROTOCOL *(*EFI_SHELL_GET_DEVICE_PATH_FROM_FILE_PATH)(const CHAR16 *Path);
typedef CHAR16 *(*EFI_SHELL_GET_FILE_PATH_FROM_DEVICE_PATH)(const EFI_DEVICE_PATH_PROTOCOL *Path);
typedef EFI_DEVICE_PATH_PROTOCOL *(*EFI_DEVICE_PATH_UTILS_GET_NEXT_INSTANCE)(EFI_DEVICE_PATH_PROTOCOL **DevicePathInstance, UINTN *DevicePathInstanceSize);
typedef BOOLEAN (*EFI_DEVICE_PATH_UTILS_IS_MULTI_INSTANCE)(const EFI_DEVICE_PATH_PROTOCOL *DevicePath);
struct _EFI_EAPOL_SUPPLICANT_PAE_CONFIGURATION {UINT8 ValidFieldMask;UINTN AuthPeriod;UINTN HeldPeriod;UINTN StartPeriod;UINTN MaxStart;};
typedef UINT32 (*EFI_DRIVER_FAMILY_OVERRIDE_GET_VERSION)(EFI_DRIVER_FAMILY_OVERRIDE_PROTOCOL *This);
struct _EFI_HII_IIBT_IMAGE_24BIT_TRANS_BLOCK {EFI_HII_IMAGE_BLOCK Header;EFI_HII_IIBT_IMAGE_24BIT_BASE Bitmap;};
struct _EFI_HII_SIBT_STRING_SCSU_FONT_BLOCK {EFI_HII_STRING_BLOCK Header;UINT8 FontIdentifier;UINT8 StringText[1];};
typedef BOOLEAN (*AUTH_VAR_LIB_CHECK_REMAINING_SPACE)(UINT32 Attributes, ...);
typedef const EFI_DEVICE_PATH_PROTOCOL *(*EFI_SHELL_GET_DEVICE_PATH_FROM_MAP)(const CHAR16 *Mapping);
typedef const CHAR16 *(*EFI_SHELL_GET_MAP_FROM_DEVICE_PATH)(EFI_DEVICE_PATH_PROTOCOL **DevicePath);
struct _EFI_PEI_FIRMWARE_VOLUME_INFO2_PPI {EFI_GUID FvFormat;void *FvInfo;UINT32 FvInfoSize;EFI_GUID *ParentFvName;EFI_GUID *ParentFileName;UINT32 AuthenticationStatus;};
struct _025FB47D66D224523DBEA929EE89F4D1 {UINT8 Type;UINT8 WakeUpType;UINT8 Reserved[6];UINT64 ExternalInterruptVector;};
struct _0279D7D1FD4588B9E88F84CCCE0284C6 {CHAR16 *ControllerName;CHAR16 *ChannelName;UINT32 AdapterId;UINT32 Attributes;UINT32 IoAlign;};
struct _02DFB6BBE8A0FE409E702C0F2DE27832 {UINT16 OpCode;UINT8 Data[1];};
struct _03C169547699C2033BF44B51FAFF1E5C {UINT8 OpCode;UINT8 Length;UINT16 Flags;void *Data;};
struct _03E906D7136C60A5F52813B96CFD1F89 {UINT32 Signature;GUID MachOUuid;};
union _03F53B4ABFCF1B5C29663F845B2E3FB1 {UINT32 *ImageInfoType;EFI_DEBUG_IMAGE_INFO_NORMAL *NormalImage;};
union _03FBB74301AF73D9ED97B5AF89E37820 {EFI_GRAPHICS_OUTPUT_BLT_PIXEL Pixel;UINT32 Raw;};
struct _04145B7E34126927318BEC00867DE1C0 {UINT16 size;BYTE credential[132];};
union _04EC12C93849E862E031F174B0DFCB1E {EFI_TCP4_CONNECTION_TOKEN Tcp4Token;EFI_TCP6_CONNECTION_TOKEN Tcp6Token;};
struct _0533523530C6224D8C91920E25F98E5C {EFI_HTTP_METHOD Method;CHAR16 *Url;};
struct _05374CD723BB736B76BC23503CF5826E {UINT32 Command;UINT32 DataLength;UINT64 ReturnStatus;};
struct _0570B17222F3251C7E7975035D72282F {PROCESSOR_SIGNATURE Signature;PROCESSOR_FEATURE_FLAGS FeatureFlags;};
struct _0591ECE004F4E3FCF755AB0D385F118A {UINT16 Hint;UINT8 Name[1];};
union _064489EE9225A9F91BDA07A272CAAD06 {struct _064489EE9225A9F91BDA07A272CAAD06___E706CFC4C6B3ED37759EEF049F65CAF6 Bits;UINT32 Uint32;};
struct _06DB6DB5B5102F8E7C4034120A28470F {UINT8 Revision;UINT8 Resv1[7];UINT64 Control;UINT64 Status;UINT8 Resv2[8];UINT64 EventLogEntry[2];UINT8 Resv3[16];UINT64 DeviceTableEntry[4];UINT64 PteL6;UINT64 PteL5;UINT64 PteL4;UINT64 PteL3;UINT64 PteL2;UINT64 PteL1;};
union _06DD80FC04169EA2A724593886CB6922 {TPMT_HA digest;TPM_HANDLE handle;};
struct _07395639D7489D60157EAB4BA967E290 {EFI_MISC_BOOT_INFORMATION_STATUS_DATA_TYPE BootInformationStatus;UINT8 BootInformationData[9];};
struct _0748F0574479A694305288EDDF16D0C6 {EFI_DEVICE_PATH_PROTOCOL Header;UINT32 HID;UINT32 UID;};
struct _086532C43F52DA4742BC21A63368B6D6 {EFI_DEVICE_PATH_PROTOCOL Header;EFI_GUID FvName;};
union _08801BEA1B1EEB150B067CE39DB07F05 {EFI_SMM_CPU_STATE32 x86;EFI_SMM_CPU_STATE64 x64;};
struct _08D4D8EF781E325E516B9DF5F384A04D {EFI_TCP4_COMPLETION_TOKEN CompletionToken;union _08D4D8EF781E325E516B9DF5F384A04D___4E1585B4C3042799F4326DB06A0CBA14 Packet;};
union _090A03EDD1E347FB71B0BFE955C26CED {ACPI_SMALL_RESOURCE_HEADER *SmallHeader;ACPI_LARGE_RESOURCE_HEADER *LargeHeader;};
struct _0939F1229F8A498E026AA216C4326EE0 {UINT16 Length;CHAR16 String[1];};
struct _09F99C0FCBF42BE1DEE90FE7A2004CDB {VENDOR_DEVICE_PATH DevicePath;UINT8 LegacyDriveLetter;};
struct _0AEF62DF78B697AA9EAAF2AB6ABDA9F8 {EFI_ACPI_5_1_ERROR_BLOCK_STATUS BlockStatus;UINT32 RawDataOffset;UINT32 RawDataLength;UINT32 DataLength;UINT32 ErrorSeverity;};
union _0B73A95D4C46C39A91D502964C8E2377 {EFI_LEGACY_MP_TABLE_ENTRY_INT_FIELDS fields;UINT8 byte;};
struct _0C0BCAF52A2AB260D0BEFAF32C226C90 {UINT8 Type;UINT8 Length;UINT8 ProcessorId;UINT8 ProcessorEid;UINT32 PollingInterval;};
struct _0C7935E5C3B449DD062B7B3924850C94 {EFI_PHYSICAL_ADDRESS AcpiFacsTable;EFI_PHYSICAL_ADDRESS IdtrProfile;EFI_PHYSICAL_ADDRESS S3NvsPageTableAddress;EFI_PHYSICAL_ADDRESS BootScriptStackBase;UINT64 BootScriptStackSize;EFI_PHYSICAL_ADDRESS S3DebugBufferAddress;};
struct _0DF7F58F05BA8A47511D9D774FEBEBBB {UINT32 Characteristics;UINT32 TimeDateStamp;UINT16 MajorVersion;UINT16 MinorVersion;UINT32 Type;UINT32 SizeOfData;UINT32 RVA;UINT32 FileOffset;};
struct _0E2414798071F364F15E4A11E952DB9B {UINT8 Type;UINT8 Length;UINT8 Reserved1[2];UINT32 ProximityDomain;UINT32 X2ApicId;UINT32 Flags;UINT32 ClockDomain;UINT8 Reserved2[4];};
struct _0E283308D13FEE21B5F736A1468FA7B5 {SMBIOS_STRUCTURE Hdr;UINT8 NextScheduledPowerOnMonth;UINT8 NextScheduledPowerOnDayOfMonth;UINT8 NextScheduledPowerOnHour;UINT8 NextScheduledPowerOnMinute;UINT8 NextScheduledPowerOnSecond;};
struct _100D81B4237FAB0EBA630D1B6897A38B {SMBIOS_STRUCTURE Hdr;UINT8 StringCount;};
struct _1047125A16E8B1B7E5254F92231CBD48 {UINT16 VendorId;UINT16 DeviceId;UINT16 Command;UINT16 Status;UINT8 RevisionID;UINT8 ClassCode[3];UINT8 CacheLineSize;UINT8 LatencyTimer;UINT8 HeaderType;UINT8 BIST;};
struct _104E104B995BF192D734545FE5C51D74 {UINT8 Type;UINT8 Length;UINT8 Reserved[2];UINT32 X2ApicId;UINT32 Flags;UINT32 AcpiProcessorUid;};
struct _1088159707752B3904E9F3E2A127A315 {UINT32 VirtualAddress;UINT32 SymbolTableIndex;UINT16 Type;};
struct _10B051C0C3250DD0B8B86596FC8844A4 {EFI_ACPI_6_0_ERROR_BLOCK_STATUS BlockStatus;UINT32 RawDataOffset;UINT32 RawDataLength;UINT32 DataLength;UINT32 ErrorSeverity;};
struct _10C10574ED0AE2ED1280822FCD0AF487 {EFI_HII_PACK_HEADER Header;UINT16 NumberOfNarrowGlyphs;UINT16 NumberOfWideGlyphs;};
struct _1146BED2FF4E61E742E6E1487898EE2B {UDC_ATTRIBUTES Attributes;UINT8 DeviceNumber;UINT8 BbsTableEntryNumberForParentDevice;UINT8 BbsTableEntryNumberForBoot;UINT8 BbsTableEntryNumberForHddDiag;UINT8 BeerData[128];UINT8 ServiceAreaData[64];};
union _11CEE68E50CEECB8C366DF9DDD7306D1 {EFI_UDP4_SESSION_DATA Udp4;EFI_UDP6_SESSION_DATA Udp6;};
struct _120AC7D9FEC0F7C7446E1F6579420CD9 {UINT64 CurrentX;UINT64 CurrentY;UINT64 CurrentZ;UINT32 ActiveButtons;};
struct _1283F8C9D8D312BEBB5EF5975CA49501 {UINT32 Start;UINT32 Length;EFI_LEGACY_REGION_ATTRIBUTE Attribute;UINT32 Granularity;};
struct _12B4A611596D72B7C4F573F484E593F7 {UINT8 Type;UINT8 Length;UINT8 AcpiProcessorId;UINT8 ApicId;UINT32 Flags;};
struct _134DD5DE943212431F82B8FEEA5AC192 {UINT32 NumberOfSmmReservedRegions;EFI_SMRAM_DESCRIPTOR Descriptor[1];};
struct _137EBC2235106C5FD5B063360A864DB6 {UINT8 EntryType;UINT8 Id;CHAR8 TypeString[6];};
struct _139C1CF7A7B81607B0C74C6F8C17369D {UINT16 size;BYTE buffer[4068];};
union _13B2187B9E87DE389FB12248DFED0432 {struct _13B2187B9E87DE389FB12248DFED0432___F7ACA43080600E861C37342251ABE5FC Bits;UINT32 Uint32;};
struct _13D6FB99381342E03820A8D6A67E6627 {EFI_ATA_EXT_TRANSFER_PROTOCOL TransferProtocol;UINT32 Mode;};
struct _14DB003681FC3CDE480991316592033F {EFI_USB_SMI_TYPE Type;EFI_DEVICE_PATH_PROTOCOL *Device;};
struct _1600FD3E6C89917A4CE7336750A644B2 {UINT32 count;TPMS_TAGGED_PCR_SELECT pcrProperty[127];};
struct _160C100133D008EF49A6864DD19B1099 {UINT8 Type;UINT8 Length;UINT8 AcpiProcessorId;UINT8 LocalSapicId;UINT8 LocalSapicEid;UINT8 Reserved[3];UINT32 Flags;UINT32 ACPIProcessorUIDValue;};
struct _16674B090943CEC0E7007F9E85E554E8 {EFI_MISC_RESET_CAPABILITIES_TYPE ResetCapabilities;UINT16 ResetCount;UINT16 ResetLimit;UINT16 ResetTimerInterval;UINT16 ResetTimeout;};
struct _176AC7AE0E05CE820A1B8E2BF57AAE43 {EFI_DEVICE_PATH_PROTOCOL Header;EFI_GUID Protocol;};
struct _17943BCA47BDF74A702F60BA16B9A882 {UINT16 Type;UINT16 Length;UINT16 NVDIMMControlRegionStructureIndex;UINT16 NumberOfBlockDataWindows;UINT64 BlockDataWindowStartOffset;UINT64 SizeOfBlockDataWindow;UINT64 BlockAccessibleMemoryCapacity;UINT64 BeginningAddressOfFirstBlockInBlockAccessibleMemory;};
struct _17AEEDA15E6135533C6141EEE09D895F {EFI_BLOCK_IO_CRYPTO_IV_INPUT Header;UINT64 CryptoBlockNumber;UINT64 CryptoBlockByteSize;};
struct _185A50620A8534E41967A99303668A69 {EFI_ACPI_6_0_PMMT_COMMON_MEMORY_AGGREGATOR_DEVICE_STRUCTURE Header;UINT16 SocketIdentifier;UINT16 Reserved;};
union _189FD79781FBFBAF9A08606330F98EF8 {struct _189FD79781FBFBAF9A08606330F98EF8___720BB4348BD623025C3D08B2C13CC5E9 Bits;UINT32 Uint32;};
struct _18B3A86D0733C3A21CCF2F86BC53F436 {UINT16 Length;UINT16 GoneThrough;VARIABLE_HEADER *EndPtr;VARIABLE_HEADER *StartPtr;UINT16 Index[122];};
struct _18FF71C523EE0E659FF9048C9ADED567 {UINT32 StringIndex;UINT32 DefaultValueOffset;UINT16 GuidTableIndex;UINT16 Offset;UINT32 Attributes;UINT16 Property;UINT16 Reserved;};
struct _1945A6013D58E9BCC453AA4D31F6530C {FRAMEWORK_EFI_IFR_OP_HEADER Header;UINT16 LabelId;};
struct _194FA9FA22B5ACAE94C18533FEF75733 {UINT16 config;UINT16 reserved_1;UINT16 specific_config;UINT16 reserved_3_9[7];CHAR8 SerialNo[20];UINT16 reserved_20_22[3];CHAR8 FirmwareVer[8];CHAR8 ModelName[40];UINT16 reserved_47_48[2];UINT16 capabilities_49;UINT16 capabilities_50;UINT16 obsolete_51;UINT16 reserved_52;UINT16 field_validity;UINT16 reserved_54_61[8];UINT16 dma_dir;UINT16 multi_word_dma_mode;UINT16 advanced_pio_modes;UINT16 min_multi_word_dma_cycle_time;UINT16 rec_multi_word_dma_cycle_time;UINT16 min_pio_cycle_time_without_flow_control;UINT16 min_pio_cycle_time_with_flow_control;UINT16 reserved_69_70[2];UINT16 obsolete_71_72[2];UINT16 reserved_73_74[2];UINT16 obsolete_75;UINT16 serial_ata_capabilities;UINT16 reserved_77;UINT16 serial_ata_features_supported;UINT16 serial_ata_features_enabled;UINT16 major_version_no;UINT16 minor_version_no;UINT16 cmd_set_support_82;UINT16 cmd_set_support_83;UINT16 cmd_feature_support;UINT16 cmd_feature_enable_85;UINT16 cmd_feature_enable_86;UINT16 cmd_feature_default;UINT16 ultra_dma_select;UINT16 time_required_for_sec_erase;UINT16 time_required_for_enhanced_sec_erase;UINT16 advanced_power_management_level;UINT16 master_pwd_revison_code;UINT16 hardware_reset_result;UINT16 obsolete_94;UINT16 reserved_95_107[13];UINT16 world_wide_name[4];UINT16 reserved_for_128bit_wwn_112_115[4];UINT16 reserved_116_118[3];UINT16 command_and_feature_sets_supported;UINT16 command_and_feature_sets_supported_enabled;UINT16 reserved_121_124[4];UINT16 atapi_byte_count_0_behavior;UINT16 obsolete_126_127[2];UINT16 security_status;UINT16 reserved_129_159[31];UINT16 cfa_reserved_160_175[16];UINT16 reserved_176_221[46];UINT16 transport_major_version;UINT16 transport_minor_version;UINT16 reserved_224_254[31];UINT16 integrity_word;};
struct _19E015F78D84F7826E599D78ED7DA7D3 {TPMS_TIME_INFO time;UINT64 firmwareVersion;};
struct _1A15A92F570159E57EFF988D765B1A6C {EFI_ACPI_5_1_FPDT_PERFORMANCE_RECORD_HEADER Header;UINT64 SuspendStart;UINT64 SuspendEnd;};
struct _1B2FC3F5690A0ED9DF6CC6085418DEC4 {EFI_STATUS_CODE_DATA DataHeader;EFI_EXP_BASE10_DATA Voltage;EFI_EXP_BASE10_DATA Threshold;};
struct _1BC61AC7E1182BB70CE7EB3AE9DEEC10 {UINT8 *BlockHead;UINT8 *BlockTail;UINT8 *Head;UINT8 *Tail;UINT32 Size;};
union _1BD84297A21C9A50FCE6DE8FD55A3DE1 {struct _1BD84297A21C9A50FCE6DE8FD55A3DE1___B13D69F90F32FA0ABCE3B85F6D444DDF Bits;UINT32 Uint32;};
struct _1BEB5F5D195680F06D7E4F2EE4620516 {UINT16 size;BYTE buffer[4000];};
struct _1CD62EA41C939E1C656209CB02CED207 {EFI_ACPI_DESCRIPTION_HEADER Header;UINT32 ErrorSourceCount;};
union _1D15C627A7B6A1604BA06230A4689DD1 {EFI_TCP4_LISTEN_TOKEN Tcp4Token;EFI_TCP6_LISTEN_TOKEN Tcp6Token;};
struct _1D71F8E09FA05ED6FAA2CBB8B3F79E1E {UINT8 Type;UINT8 Length;UINT16 Handle;};
struct _1D7B25FDF36FC0DCF9D3F15198E6892D {UINT8 AddressSpaceId;UINT8 RegisterBitWidth;UINT8 RegisterBitOffset;UINT8 Reserved;UINT64 Address;};
struct _1D81A62B985707A48E0901106C1EB1C5 {FRAMEWORK_EFI_IFR_OP_HEADER Header;UINT16 Value;UINT16 Key;};
struct _1DC9A8B91EFF5C97ABBBC3E0E26E6DE5 {EFI_GUID CapsuleGuid;UINT32 HeaderSize;UINT32 Flags;UINT32 CapsuleImageSize;};
struct _1E3F2F4B7DEFDE62C88BF1438AD659A4 {PCI_EXPRESS_EXTENDED_CAPABILITIES_HEADER Header;UINT16 AriCapability;UINT16 AriControl;};
struct _1F3B348F27D4663FB5F9609464BE8B8E {EFI_ACPI_5_0_FPDT_PERFORMANCE_RECORD_HEADER Header;UINT64 SuspendStart;UINT64 SuspendEnd;};
struct _1FABF24343CB7C543563ACB5DC47D248 {UINT32 Characteristics;UINT32 TimeDateStamp;UINT32 ForwarderChain;UINT32 Name;EFI_IMAGE_THUNK_DATA *FirstThunk;};
struct _20ED846744D509B620B690D658C2AC6D {const EFI_GUID *DeviceGuid;UINT32 DeviceIndex;UINT32 HardwareRevision;UINT32 I2cBusConfiguration;UINT32 SlaveAddressCount;const UINT32 *SlaveAddressArray;};
struct _20EDE69EF9795E7F12F90E8C7CC22AF8 {EFI_IP_ADDRESS IpAddr;EFI_MAC_ADDRESS MacAddr;};
union _21300D4394F4C27F6B0FB693B1665CFE {struct _21300D4394F4C27F6B0FB693B1665CFE___3393EBBCF6DC9FFA6559E8EA3A39FD44 Bits;UINT32 Uint32;};
struct _2145929F04F6510A853C703BEA654B22 {UINT8 Pirq;UINT16 IrqMask;};
struct _21FCFD4370A77BD9A330965E1A2EF6B8 {UINT8 Type;UINT8 Length;UINT8 AcpiProcessorId;UINT16 Flags;UINT8 LocalApicLint;};
struct _22108DFF95A395D1C014946DE1B1A386 {UINT16 Address;UINT16 Length;EFI_SMM_IO_TRAP_DISPATCH_TYPE Type;};
struct _22A2111A59A4E7F8B11ABAF35EC73175 {PEI_PCD_DATABASE *PeiDb;DXE_PCD_DATABASE *DxeDb;};
struct _22C6984C10E23D4728D2DD0DE382EE68 {EFI_HII_PACKAGE_HEADER Header;UINT16 LayoutCount;};
struct _23958E38AF544E49B6D98E0B1C04F079 {union _23958E38AF544E49B6D98E0B1C04F079___8BAB8145E7DE54837B65F56B2E38C9CF Header;UINT16 Length;};
struct _242AB9A269C1F8977AAACB4B96496CF4 {CHAR8 Token[28];UINT32 Duration;};
struct _24E30838B41D77CF76B20463CBB19FAC {EFI_GUID FvName;UINT32 ExtHeaderSize;};
struct _24E988B8AC7E4F6242EAEA675339F6B0 {EFI_MTFTP4_CONFIG_DATA ConfigData;UINT8 SupportedOptionCount;UINT8 **SupportedOptoins;UINT8 UnsupportedOptionCount;UINT8 **UnsupportedOptoins;};
union _2583E43EAC8C47D8851C57B0317D7D44 {EFI_IP4_HEADER *Ip4Hdr;EFI_IP6_HEADER *Ip6Hdr;};
struct _26E91D2BB7FDA2C845F43A09E5B4079A {UINT16 Type;UINT16 Length;UINT32 Reserved_4;};
struct _278508D8F64D0B86ACC34D0269C72011 {EFI_ISA_ACPI_DEVICE_ID Device;EFI_ISA_ACPI_RESOURCE *ResourceItem;};
struct _27CFB8A34AF8CAFEC925675D8C64A4A1 {EFI_INPUT_KEY Key;EFI_KEY_STATE KeyState;};
struct _28B0E3C3F8158DEFF17B56B84F095520 {UINT16 Length;UINT8 Duid[1];};
struct _2AB31C5C84D666EC665B67DCDCB65006 {UINT16 size;BYTE attestationData[1263];};
struct _2B76BEE91D9E77941F9A934F328D179D {UINT16 Signature;UINT8 Size512;UINT8 InitEntryPoint[3];UINT8 Reserved[18];UINT16 PcirOffset;};
union _2BC16837220E81124E1F23E51D05BC4D {struct _2BC16837220E81124E1F23E51D05BC4D___E06B2E720146A9996925865D17D55FA5 Bits;UINT16 Data;};
union _2CB9EDC2CA76331E5EBDD1F9698853B1 {UINT8 Byte;struct _2CB9EDC2CA76331E5EBDD1F9698853B1___7C29BA7491EF625F4A7EF55F1EB9DA69 Bits;};
struct _2D377D1DEDF6E4D5EE5F6C0C172C418F {UINT16 size;TPMS_NV_PUBLIC nvPublic;};
struct _2D5577F8CA49EBA695396A221DE9C683 {UINT32 FwResourceCount;UINT32 FwResourceCountMax;UINT64 FwResourceVersion;};
struct _2D795785E76C024412BECB40ED2E4527 {EFI_TCP6_COMPLETION_TOKEN CompletionToken;EFI_HANDLE NewChildHandle;};
struct _2DF68590B8BC6352BB686A2EF4746F88 {EFI_ACPI_DESCRIPTION_HEADER Header;UINT32 WarningEnergyLevel;UINT32 LowEnergyLevel;UINT32 CriticalEnergyLevel;};
struct _2EA1BD641991CBA14B33DC187BAD4A98 {UINT8 Type;UINT8 Length;UINT8 AcpiProcessorUid;UINT16 Flags;UINT8 LocalApicLint;};
union _2EB10352A9B67ABEC81EADBB1E83EE89 {struct _2EB10352A9B67ABEC81EADBB1E83EE89___0ED18297D8600E57385C990E0B0A9B5B Bits;UINT32 Uint32;};
struct _2FA6CE443FF86F17328922C5A9168445 {UINT8 PPRequest;UINT8 LastPPRequest;UINT32 PPResponse;};
struct _30E86135D612FC240B4D7CCC6EC8379E {UINT8 Type;UINT8 Length;UINT8 AcpiProcessorUid;UINT8 ApicId;UINT32 Flags;};
struct _31A5E67A261669A26F08DB035F0F692E {EFI_GUID CapsuleGuid;UINT32 HeaderSize;UINT32 Flags;UINT32 CapsuleImageSize;UINT32 SequenceNumber;EFI_GUID InstanceId;UINT32 OffsetToSplitInformation;UINT32 OffsetToCapsuleBody;UINT32 OffsetToOemDefinedHeader;UINT32 OffsetToAuthorInformation;UINT32 OffsetToRevisionInformation;UINT32 OffsetToShortDescription;UINT32 OffsetToLongDescription;UINT32 OffsetToApplicableDevices;};
struct _31EAA50BFACAD085DC903568FC73FD55 {UINT32 NumberOfHiiDataTables;EFI_GUID Revision;};
struct _321181A4E50AE9E66F3D5BC83776D1DC {EFI_ACPI_ISCSI_BOOT_FIRMWARE_TABLE_STRUCTURE_HEADER Header;UINT16 Extensions;UINT16 InitiatorOffset;UINT16 NIC0Offset;UINT16 Target0Offset;UINT16 NIC1Offset;UINT16 Target1Offset;};
union _3252EF1C391473AA09CA889665471465 {EFI_ATA_IDENTIFY_DATA AtaData;EFI_ATAPI_IDENTIFY_DATA AtapiData;};
struct _3346E7C63FC5458160B58CD8CA56F035 {EFI_CAPSULE_HEADER CapsuleHeader;DISPLAY_DISPLAY_PAYLOAD ImagePayload;};
struct _3447B62854163D4AEE09FE9F61549458 {UINT32 ExTokenNumber;UINT16 TokenNumber;UINT16 ExGuidIndex;};
struct _34C4AA3B6BDC0960B7F24D4539248B78 {EFI_IP_ADDRESS LocalAddr;UINT16 LocalPort;EFI_IP_ADDRESS RemoteAddr;UINT16 RemotePort;};
struct _351D313CDE6C8F37C8F02CD3281ED67E {UINT32 ExceptionData;EFI_FX_SAVE_STATE_IA32 FxSaveState;UINT32 Dr0;UINT32 Dr1;UINT32 Dr2;UINT32 Dr3;UINT32 Dr6;UINT32 Dr7;UINT32 Cr0;UINT32 Cr1;UINT32 Cr2;UINT32 Cr3;UINT32 Cr4;UINT32 Eflags;UINT32 Ldtr;UINT32 Tr;UINT32 Gdtr[2];UINT32 Idtr[2];UINT32 Eip;UINT32 Gs;UINT32 Fs;UINT32 Es;UINT32 Ds;UINT32 Cs;UINT32 Ss;UINT32 Edi;UINT32 Esi;UINT32 Ebp;UINT32 Esp;UINT32 Ebx;UINT32 Edx;UINT32 Ecx;UINT32 Eax;};
struct _352C1AF0B77CD9BCC20C63D95A0CED3A {UINT8 Length;UINT8 DescriptorType;CHAR16 String[1];};
struct _352D1AB719DE4F69FB6A98BC0FF8FA7B {UINT32 Flags;UINT32 LengthInBytes;UINT8 *Buffer;};
struct _3586E27D6D83D790E2F9C12516575AD2 {EFI_IPv6_ADDRESS SrcIp;EFI_IPv6_ADDRESS DstIp;UINT32 Len;unsigned __int32 Reserved : 24;unsigned __int32 NextHeader : 8;};
struct _35A220C1A314F3209A3C8C2B7869DAEB {EFI_PHYSICAL_ADDRESS PageTableAddress;EFI_PHYSICAL_ADDRESS StackBaseAddress;UINT64 StackSize;};
struct _35C4D481EC05A8B672834DE7498ABDB4 {UINT32 count;TPM_ECC_CURVE eccCurves[508];};
struct _36982C089099B7BEE00BBFB921609DD9 {EFI_IPv6_ADDRESS Address;UINT8 PrefixLength;};
struct _375CE3D3190F3E9E28E34C9C760A24AD {EFI_IPv6_ADDRESS ServerIp;UINT16 ServerPort;UINT16 TryCount;UINT16 TimeoutValue;};
struct _388A0A822047BCA9116365DAF41AB443 {UINT8 DeviceLoad;UINT16 DeviceHandle;};
struct _3910C22C328550E099BEC9D2CFC7E7B1 {EFI_SHA512_HASH ToBeSignedHash;EFI_TIME TimeOfRevocation;};
struct _392019E8CCB9750AD5665539B6417DAB {UINT16 size;BYTE buffer[66];};
struct _3A5AA40A7162941AAC6EA924D537E844 {TPM_CAP capability;TPMU_CAPABILITIES data;};
struct _3ACE1CF93237BB82D17E0610DB6007EE {TPM2B_DIGEST integrityOuter;TPM2B_DIGEST integrityInner;TPMT_SENSITIVE sensitive;};
struct _3B73284331852D03FD87BEF8A696A753 {EFI_DEVICE_PATH_PROTOCOL Header;UINT8 SSId[32];};
struct _3C9F44A6BA0669D2A307E9D45A380595 {EFI_DHCP6_DUID *ClientId;EFI_DHCP6_IA *Ia;};
struct _3CC8AB98B6D3DA5B57DC01638DDC8302 {UINT32 count;TPM_CC commandCodes[254];};
struct _3E26921397DDD281DD26C02D21138292 {UINT32 VectorNumber;UINT32 Attribute;EFI_GUID Owner;};
struct _3F1E3F943197CDE1415AD067E3615C56 {EFI_IPv4_ADDRESS GatewayIp;EFI_IPv4_ADDRESS ServerIp;UINT16 ServerPort;UINT16 TryCount;UINT16 TimeoutValue;};
struct _3FB1076CB510B289CAA826CC95B0CFB8 {EFI_80211_MAC_ADDRESS BSSId;UINT8 *FTContent;UINT8 *SAEContent;UINT8 *VendorSpecificInfo;};
struct _3FB406B97DA606C7C1844B196F769E09 {EFI_COMMON_SECTION_HEADER CommonHeader;EFI_GUID SubTypeGuid;};
struct _3FDFF6A7F6BE5825D2533BE49141AF63 {EFI_SUBCLASS_TYPE1_HEADER Header;EFI_MEMORY_SUBCLASS_RECORDS Record;};
struct _400D51D6C0F8DB819BF4AC264E39B514 {EFI_DEVICE_PATH_PROTOCOL Header;UINT8 Pun;UINT8 Lun;};
struct _42C9EB6349DA318FBEC3A9F1F9657B3F {UINT16 ScanCode;CHAR16 UnicodeChar;};
struct _43257F6D79F610634E07F0F15F0F5C15 {EFI_STATUS_CODE_DATA DataHeader;UINT32 Version;};
struct _43C142D6E8CCA77AD8D3B7D743C0B321 {UINT32 Resolution;UINT32 Accuracy;BOOLEAN SetsToZero;};
struct _441FAAD38652781BCFC1CCB758BBD401 {UINT16 Type;UINT32 IaId;};
struct _447098F8F44009940152D6F24CEA4978 {UINT16 LanguageId;STRING_REF SystemLanguageString;};
struct _453C3FCC21D38DDE31861C82E646CBED {UINT8 ErrorCode;CHAR8 ErrorString[127];};
union _45BF217DBC3ED611F5A350EB16713DCF {struct _45BF217DBC3ED611F5A350EB16713DCF___699DAE59EF0C004B488477E53808748D Bits;UINT64 Uint64;};
struct _46EBA86FEFC5D2D17D3C15CDD470698D {PCI_DEVICE_INDEPENDENT_REGION Hdr;PCI_DEVICE_HEADER_TYPE_REGION Device;};
struct _48E8A6CD9A533B33AB6E769A97C9DB1F {UINT8 AL;UINT8 AH;UINT16 ReservedAX;UINT8 BL;UINT8 BH;UINT16 ReservedBX;UINT8 CL;UINT8 CH;UINT16 ReservedCX;UINT8 DL;UINT8 DH;UINT16 ReservedDX;};
struct _494914B86E6CDF22F878F39362A29687 {UINT8 sizeofSelect;BYTE pcrSelect[3];};
struct _49E34F149A955E9B3951FE9D42228DD3 {UINT32 FieldCount;EFI_KMS_DYNAMIC_FIELD Field[1];};
struct _4A8B02B1FCA615ED6943CF12A4FAF5EF {UINT32 BiosLessThan1MB;UINT32 HiPmmMemory;UINT32 HiPmmMemorySizeInBytes;UINT16 ReverseThunkCallSegment;UINT16 ReverseThunkCallOffset;UINT32 NumberE820Entries;UINT32 OsMemoryAbove1Mb;UINT32 ThunkStart;UINT32 ThunkSizeInBytes;UINT32 LowPmmMemory;UINT32 LowPmmMemorySizeInBytes;};
struct _4B92571A797B6C02A24506DEE28228C3 {EFI_DEVICE_PATH_PROTOCOL Header;UINT8 FunctionNumber;};
struct _4C0456641FFD7C7A72CAE04CFEF7744F {UINT16 OpCode;UINT8 Filename[1];};
struct _4C11609B2457407E1D40095F665BFD38 {UINT32 Len;UINT8 *Bulk;};
struct _4C703EC466B4E070CC2159059900FA01 {SMBIOS_STRUCTURE_HDR Header;UINT8 RawData[1];};
struct _4C78CB38A0F4EF5A8DE335E05719C19F {EFI_DEVICE_PATH_PROTOCOL Header;UINT32 HID;UINT32 UID;UINT32 CID;};
struct _4CB21704F68C9C7480D0E216AAA27D61 {UINT16 size;BYTE buffer[640];};
struct _4D67B151C7CB8AE8081A2C3E1AF9CD67 {INT32 RelativeMovementX;INT32 RelativeMovementY;INT32 RelativeMovementZ;BOOLEAN LeftButton;BOOLEAN RightButton;};
struct _4E4261D3A1CEC8B9AFEC8A32F19F53E2 {UINT8 Length;UINT8 DescriptorType;UINT16 BcdUSB;UINT8 DeviceClass;UINT8 DeviceSubClass;UINT8 DeviceProtocol;UINT8 MaxPacketSize0;UINT16 IdVendor;UINT16 IdProduct;UINT16 BcdDevice;UINT8 StrManufacturer;UINT8 StrProduct;UINT8 StrSerialNumber;UINT8 NumConfigurations;};
struct _4E48E652C5777B56F5C5F10151EEAB46 {EFI_ACPI_5_0_PMMT_COMMON_MEMORY_AGGREGATOR_DEVICE_STRUCTURE Header;UINT16 SocketIdentifier;UINT16 Reserved;};
struct _4EA7B9B0DA60A213D8FE837777047EEB {PCI_EXPRESS_EXTENDED_CAPABILITIES_HEADER Header;PCI_EXPRESS_EXTENDED_CAPABILITIES_RESIZABLE_BAR_ENTRY Capability[1];};
struct _4EE69E5191F738A0DEA5DAF890F47590 {EFI_USB_INTERFACE_DESCRIPTOR *InterfaceDescriptor;EFI_USB_ENDPOINT_DESCRIPTOR **EndpointDescriptorTable;};
union _4F1B8228CBDC668E7C1212969EC76646 {EFI_UDP4_TRANSMIT_DATA Udp4;EFI_UDP6_TRANSMIT_DATA Udp6;};
struct _4F6B7C61AA4B95BEE0405A61B59E28C5 {EFI_HANDLE AgentHandle;EFI_HANDLE ControllerHandle;UINT32 Attributes;UINT32 OpenCount;};
struct _4F88675427993AD5D393EBFFE084774F {EFI_DEVICE_PATH_PROTOCOL Header;UINT8 Function;UINT8 Device;};
struct _501707A4983087C56C6E8AAD624F6B61 {EFI_TCP4_COMPLETION_TOKEN CompletionToken;BOOLEAN AbortOnClose;};
struct _5097BD0A68012D8C5CBA0B8FEBE888A1 {EFI_STATUS_CODE_DATA DataHeader;EFI_HANDLE Handle;};
struct _509F65393F3993ED6E245E4858CFD455 {EFI_COMMON_SECTION_HEADER CommonHeader;CHAR16 FileNameString[1];};
union _518876D0C27A9CD079BA54115713EEC3 {struct _518876D0C27A9CD079BA54115713EEC3___E036DE9CA1016FA69C7BDC962047C4BD Bits;UINT32 Uint32;};
struct _51974BA1E88C55CCB279A8B94E84A524 {UINT64 MonotonicCount;WIN_CERTIFICATE_UEFI_GUID AuthInfo;};
struct _51F5104BF899A8D0172BF4ACA19FB23B {UINT32 NumberOfCpus;EFI_SEC_PLATFORM_INFORMATION_CPU CpuInstance[1];};
struct _527B574472DA6B2ACA7924B57D9DCFDB {UINT16 size;BYTE buffer[1024];};
struct _52FB2BE3912FD461A39F8430FF490DD0 {UINT32 Num;EFI_PLATFORM_FIRMWARE_BLOB MeasuredFvBuf[1];};
struct _536D1119592D846701A3C5125407F6D7 {UINT8 Type;UINT8 Length;UINT8 ProximityDomain7To0;UINT8 ApicId;UINT32 Flags;UINT8 LocalSapicEid;UINT8 ProximityDomain31To8[3];UINT8 Reserved[4];};
struct _5380DCA7A74E4C65ED27DC198F8C331E {UINT16 MemoryPowerStateCharacteristicsCount;UINT8 Reserved[2];};
struct _53CD7FEA8F1E7594E1164D776F18E8D1 {CHAR16 *Str;UINTN Len;UINTN Maxlen;};
struct _53F32C1F601BD496772E316EB8388A6A {UINT16 Address;UINT8 Irq;UINT8 Dma;UINT8 NumberOfFloppy;};
struct _54E38EAA5065929F8A713E64281272CF {UINT32 CheckSum;UINT32 Offset;UINT32 Length;UINT8 FileName[52];};
struct _5513A2D45E97093C82D573605C6BB62E {EFI_STATUS_CODE_DATA DataHeader;UINT16 Array;UINT16 Device;};
struct _551E4252789CB278C644F498939D1E94 {UINT8 ErrorType;UINT8 Resv1[7];UINT64 RecordId;};
union _556FD41A89D283FD449F7AA0EBA26D73 {EFI_IPSEC_AH_ALGO_INFO AhAlgoInfo;EFI_IPSEC_ESP_ALGO_INFO EspAlgoInfo;};
struct _577B04073320737B875C0A6130C3E711 {EFI_GUID Guid;UINT16 Length;};
struct _5802C28FAF8535CA2436F06F7684260A {UINT64 AbsoluteMinX;UINT64 AbsoluteMinY;UINT64 AbsoluteMinZ;UINT64 AbsoluteMaxX;UINT64 AbsoluteMaxY;UINT64 AbsoluteMaxZ;UINT32 Attributes;};
struct _590D3F6E7FD59F722C24866FA7BFCF42 {UINT16 HobType;UINT16 HobLength;UINT32 Reserved;};
struct _5976B9DA4C60B9506C4D99B8C3451025 {UINT32 Signature;UINT32 Length;UINT32 HardwareSignature;UINT32 FirmwareWakingVector;UINT32 GlobalLock;UINT32 Flags;UINT8 Reserved[40];};
struct _5A15F5E3901A967D8D1E62CCC4A0CA07 {IP6_ICMP_HEAD Head;UINT32 Fourth;};
struct _5AAD3E36DCA061F1C50A3DD63EA46040 {UINT8 Bus;UINT8 Device;EFI_LEGACY_PIRQ_ENTRY PirqEntry[4];UINT8 Slot;UINT8 Reserved;};
struct _5B0932C95ACA944EA8760E43FEB00E37 {UINT16 OpCode;UINT16 Block;UINT8 Data[1];};
struct _5BAAA07A67D6DDC6F7F53A9A19BC1C29 {UINT8 EntryType;UINT8 Length;UINT8 BusId;UINT8 AddressType;UINT64 AddressBase;UINT64 AddressLength;};
struct _5C26D95323E79CBD9FD93D646A925B65 {UINT32 Signature;UINT16 Length;UINT16 Revision;};
struct _5C27D2E807200B9E0EBA965861D1CE1E {UINT8 Version;UINT8 Checksum;UINT8 ImageType;UINT8 Reserved;UINT32 Mode;UINT32 OffsetX;UINT32 OffsetY;};
struct _5C36579178CD024FECB3401B13A4560D {EFI_SHA256_HASH ToBeSignedHash;EFI_TIME TimeOfRevocation;};
struct _5C3A2FEE2C73B66B373680AA861C7829 {EFI_STATUS_CODE_DATA DataHeader;EFI_EXP_BASE10_DATA Temperature;EFI_EXP_BASE10_DATA Threshold;};
struct _5C868509DF35970C1E194AE5854857CF {CHAR16 UnicodeWeight;UINT8 Attributes;UINT8 GlyphCol1[19];};
struct _5CAA3E790BA277642DB4F6CC5CEDE366 {EFI_PHYSICAL_ADDRESS FvBase;UINT64 FvLength;};
struct _5F6010C342AD7CC739C377FA23C7A0BA {EFI_GUID ProducerName;UINT16 Instance;UINT16 SubInstance;};
union _6215CD2E124325B080EA1FAB21DF5785 {EFI_IP4_TRANSMIT_DATA Ip4TxData;EFI_IP6_TRANSMIT_DATA Ip6TxData;};
union _628C55448F91523F11548532F2D17CC9 {EFI_UDP4_COMPLETION_TOKEN Udp4;EFI_UDP6_COMPLETION_TOKEN Udp6;};
struct _62AA9CB42F07667ACFB3846F1F95957B {UINT64 ResolutionX;UINT64 ResolutionY;UINT64 ResolutionZ;BOOLEAN LeftButton;BOOLEAN RightButton;};
struct _62EF891F2D5495DD7B2B546D99F537D1 {BOOT_PERFORMANCE_TABLE BootPerformance;S3_PERFORMANCE_TABLE S3Performance;};
struct _63FEF6CEC3D9C390621DCB6B034E41A1 {UINT16 MemoryPowerNodeCount;UINT8 Reserved[2];};
struct _646FD6B23FE47C50C54B12B8DEC47879 {EFI_ACPI_5_0_FPDT_PERFORMANCE_TABLE_HEADER Header;EFI_ACPI_5_0_FPDT_FIRMWARE_BASIC_BOOT_RECORD BasicBoot;};
struct _650E6C9062E0E6739EB2A4F1DB76B3FA {EFI_IPv6_ADDRESS Gateway;EFI_IPv6_ADDRESS Destination;UINT8 PrefixLength;};
struct _65A22FF8467BCC6B24C29F624239D326 {EFI_GUID PackageListGuid;UINT32 PackageLength;};
struct _67C66621891B7BBFC03B4CACC5B272CA {EFI_DEVICE_PATH_PROTOCOL Header;CHAR16 PathName[1];};
struct _688DA74D94025D129EA6BB30514C5238 {EFI_HII_HANDLE Handle;EFI_STRING_ID Token;};
union _6A1ABF627FBE0922AA9EF24F9E956DFA {struct _6A1ABF627FBE0922AA9EF24F9E956DFA___1842207844FF6E29A09B397245758A8F Bits;UINT32 Uint32;};
struct _6ABC0356B240012E2982987C9730FBA4 {UINT8 Revision;UINT16 Length;UINT8 NumberofGenericAddressRegisters;UINT16 NameSpaceStringLength;UINT16 NameSpaceStringOffset;UINT16 OemDataLength;UINT16 OemDataOffset;UINT16 PortType;UINT16 PortSubtype;UINT8 Reserved[2];UINT16 BaseAddressRegisterOffset;UINT16 AddressSizeOffset;};
struct _6C2A3174FED6E681FAF32885410D9EC5 {EFI_USB_DEVICE_DESCRIPTOR *DeviceDescriptor;EFI_USB_CONFIG_INFO **ConfigInfoTable;};
struct _6C3F6ACBBE9FC503ED5DDDEBD57DC2C5 {EFI_PHYSICAL_ADDRESS PhysicalStart;EFI_PHYSICAL_ADDRESS CpuStart;UINT64 PhysicalSize;UINT64 RegionState;};
struct _6C480E4EEB02FFD52B818F7178E5FDC2 {PCI_EXPRESS_EXTENDED_CAPABILITIES_HEADER Header;UINT32 ElementSelfDescription;UINT32 Reserved;UINT32 LinkEntry[1];};
struct _6C539C0FC0E7F1AB04835013C6DD4726 {EFI_DEVICE_PATH_PROTOCOL Header;UINT8 ParentPortNumber;UINT8 InterfaceNumber;};
struct _6C8E4E625E7B083555CC290EFE6396B2 {UINT8 EntryType;UINT8 Length;UINT8 BusId;EFI_LEGACY_MP_TABLE_ENTRY_EXT_BUS_HIERARCHY_BUSINFO BusInfo;UINT8 ParentBus;UINT8 Reserved1;UINT8 Reserved2;UINT8 Reserved3;};
struct _6D5E994C2EEFCF20A2CA37695FD61709 {TPM_ALG_ID alg;TPMA_ALGORITHM attributes;};
union _6D8834E078AC6CD70A1398B3A5476142 {EFI_IP4_OVERRIDE_DATA Ip4OverrideData;EFI_IP6_OVERRIDE_DATA Ip6OverrideData;};
struct _6E0D180C745C9A79C39BC1FA90A9C0D8 {UINT32 count;TPMS_ALG_PROPERTY algProperties[169];};
struct _6E616B3B14004CB8BC9634A2D1DEDED9 {UINT16 NumSmmEntries;SMM_ENTRY SmmEntry;};
struct _6EC8891D431B9FE2A3ABED3B1BBB21EC {UINTN StructVersion;UINTN StructSize;VARIABLE_ENTRY_PROPERTY *AuthVarEntry;UINTN AuthVarEntryCount;void ***AddressPointer;UINTN AddressPointerCount;};
struct _6FF651407ECBCC5ECC66469A81BF91B5 {EFI_HOB_GENERIC_HEADER Header;EFI_GUID Name;};
struct _70585C5FCCA0E6FEA5649FC6E1ECEB93 {UINT32 Count;EFI_PEI_FIRMWARE_VOLUME_INFO_MEASUREMENT_EXCLUDED_FV Fv[1];};
struct _7114304ACBCFC2CC37D3D31EDBCDC4D6 {PCI_DEVICE_INDEPENDENT_REGION Hdr;PCI_BRIDGE_CONTROL_REGISTER Bridge;};
struct _71AAE10C5D2857161D5438F66A3A4D7D {EFI_ACPI_5_0_ERROR_BLOCK_STATUS BlockStatus;UINT32 RawDataOffset;UINT32 RawDataLength;UINT32 DataLength;UINT32 ErrorSeverity;};
struct _71BA19612BD48D2A43E9A45F5AF99F83 {UINT8 Size[3];EFI_SECTION_TYPE Type;};
struct _72333E2A38D9568EE37516DC8406F6FE {UINT16 ClientIdSize;void *ClientId;UINT8 ClientNameType;UINT8 ClientNameCount;void *ClientName;};
struct _724A14905E3ED6A54D792F35D5CD3E86 {ACPI_SMALL_RESOURCE_HEADER Header;UINT8 ChannelMask;UINT8 Information;};
struct _72AAB91DE3EEFC11230A4F397747C93D {EFI_ACPI_ASF_RECORD_HEADER RecordHeader;UINT8 AssertionEventBitMask;UINT8 DeassertionEventBitMask;UINT8 NumberOfAlerts;UINT8 ArrayElementLength;};
struct _72D94C4FF762A2E1D25032A0037FC0CD {union _72D94C4FF762A2E1D25032A0037FC0CD___85E04D9594D569B0B1B2009C8255CCE6 u1;union _72D94C4FF762A2E1D25032A0037FC0CD___C9A4ABCA41DC78BE4A0192C5281BD368 u2;};
union _72DB0F79E0951D75542C31FE649E11C3 {struct _72DB0F79E0951D75542C31FE649E11C3___E701FF71F4D10987618ED6314B4FE49F Bits;UINT32 Uint32;};
union _72EFF1B7CF5BD83F0E27F61163B8B619 {struct _72EFF1B7CF5BD83F0E27F61163B8B619___77CFDA927F6639C3DE257BE4DE8CE369 Bits;UINT64 Uint64;};
struct _74097EF1038EE9B28B2F1ACB82BBA633 {UINT16 config;UINT16 cylinders;UINT16 reserved_2;UINT16 heads;UINT16 vendor_data1;UINT16 vendor_data2;UINT16 sectors_per_track;UINT16 vendor_specific_7_9[3];CHAR8 SerialNo[20];UINT16 vendor_specific_20_21[2];UINT16 ecc_bytes_available;CHAR8 FirmwareVer[8];CHAR8 ModelName[40];UINT16 multi_sector_cmd_max_sct_cnt;UINT16 reserved_48;UINT16 capabilities;UINT16 reserved_50;UINT16 pio_cycle_timing;UINT16 reserved_52;UINT16 field_validity;UINT16 current_cylinders;UINT16 current_heads;UINT16 current_sectors;UINT16 CurrentCapacityLsb;UINT16 CurrentCapacityMsb;UINT16 reserved_59;UINT16 user_addressable_sectors_lo;UINT16 user_addressable_sectors_hi;UINT16 reserved_62;UINT16 multi_word_dma_mode;UINT16 advanced_pio_modes;UINT16 min_multi_word_dma_cycle_time;UINT16 rec_multi_word_dma_cycle_time;UINT16 min_pio_cycle_time_without_flow_control;UINT16 min_pio_cycle_time_with_flow_control;UINT16 reserved_69_79[11];UINT16 major_version_no;UINT16 minor_version_no;UINT16 command_set_supported_82;UINT16 command_set_supported_83;UINT16 command_set_feature_extn;UINT16 command_set_feature_enb_85;UINT16 command_set_feature_enb_86;UINT16 command_set_feature_default;UINT16 ultra_dma_mode;UINT16 reserved_89_127[39];UINT16 security_status;UINT16 vendor_data_129_159[31];UINT16 reserved_160_255[96];};
struct _741476BE20FDCD20209AFC9F79519DCD {UINT16 e_magic;UINT16 e_cblp;UINT16 e_cp;UINT16 e_crlc;UINT16 e_cparhdr;UINT16 e_minalloc;UINT16 e_maxalloc;UINT16 e_ss;UINT16 e_sp;UINT16 e_csum;UINT16 e_ip;UINT16 e_cs;UINT16 e_lfarlc;UINT16 e_ovno;UINT16 e_res[4];UINT16 e_oemid;UINT16 e_oeminfo;UINT16 e_res2[10];UINT32 e_lfanew;};
struct _745924604C6CB7260525BFD61C2FEAC5 {UINT32 count;TPMS_PCR_SELECTION pcrSelections[5];};
struct _74A7D6CA18D3724AB6FA20232C18B6B8 {FRAMEWORK_EFI_IFR_OP_HEADER Header;UINT16 VarId;UINT16 SecondaryVarId;};
struct _756E1EF12435665E0530B1F10B1D4C35 {UINT64 ExceptionData;EFI_FX_SAVE_STATE_X64 FxSaveState;UINT64 Dr0;UINT64 Dr1;UINT64 Dr2;UINT64 Dr3;UINT64 Dr6;UINT64 Dr7;UINT64 Cr0;UINT64 Cr1;UINT64 Cr2;UINT64 Cr3;UINT64 Cr4;UINT64 Cr8;UINT64 Rflags;UINT64 Ldtr;UINT64 Tr;UINT64 Gdtr[2];UINT64 Idtr[2];UINT64 Rip;UINT64 Gs;UINT64 Fs;UINT64 Es;UINT64 Ds;UINT64 Cs;UINT64 Ss;UINT64 Rdi;UINT64 Rsi;UINT64 Rbp;UINT64 Rsp;UINT64 Rbx;UINT64 Rdx;UINT64 Rcx;UINT64 Rax;UINT64 R8;UINT64 R9;UINT64 R10;UINT64 R11;UINT64 R12;UINT64 R13;UINT64 R14;UINT64 R15;};
struct _765F2016A6B70354055390603066FC8B {TPMT_SYM_DEF_OBJECT symmetric;TPMT_ASYM_SCHEME scheme;};
struct _77EFA24C873E40E6F2166631E5BEE457 {EFI_MP_HEALTH_FLAGS Flags;UINT32 TestStatus;};
struct _78081C629DD491B0CC432155ECB1E8B1 {PCI_EXPRESS_EXTENDED_CAPABILITIES_HEADER Header;unsigned __int32 DataSelect : 8;unsigned __int32 Reserved : 24;UINT32 Data;unsigned __int32 PowerBudgetCapability : 1;unsigned __int32 Reserved2 : 7;unsigned __int32 Reserved3 : 24;};
struct _7981A5DD16C29078DF49F0E5D2B4D437 {EFI_HII_PACK_HEADER Header;EFI_HANDLE ImageHandle;EFI_HANDLE DeviceHandle;EFI_HANDLE ControllerHandle;EFI_HANDLE CallbackHandle;EFI_HANDLE COBExportHandle;};
struct _79DA16AE253D27DC3A6F31A8B9020499 {EFI_TCP6_COMPLETION_TOKEN CompletionToken;union _79DA16AE253D27DC3A6F31A8B9020499___0571F174878059208283A16275BC34FB Packet;};
struct _7A6A0F46ABA0CA06A591AFD40E69204D {UINT16 size;TPMT_SENSITIVE sensitiveArea;};
struct _7C61700BBDD1F47A3FB1C80AED773DFE {UINT32 ControlMask;UINT32 Timeout;UINT64 BaudRate;UINT32 ReceiveFifoDepth;UINT32 DataBits;UINT32 Parity;UINT32 StopBits;};
struct _7C88044CF52AEAEB05757EBE2EF713E9 {PCI_EXPRESS_EXTENDED_CAPABILITIES_HEADER Header;UINT16 MaxSnoopLatency;UINT16 MaxNoSnoopLatency;};
struct _7CD83565691D17B24BA4D69D5CC3F0C9 {UINT32 count;TPMT_HA digests[5];};
struct _7E950FB6A83D8EDBFC02012BA7FE5544 {UINT8 Length;UINT8 DescriptorType;UINT16 TotalLength;UINT8 NumInterfaces;UINT8 ConfigurationValue;UINT8 Configuration;UINT8 Attributes;UINT8 MaxPower;};
struct _7F7C65701C46F1894FCE54A71BD43572 {UINT8 signature[16];UINT32 platformClass;UINT8 specVersionMinor;UINT8 specVersionMajor;UINT8 specErrata;UINT8 uintnSize;};
struct _7FDD791C5D5C2DB8B1EB55DA299AFE45 {EFI_ACPI_DESCRIPTION_HEADER Header;UINT8 PlatformCommunicationChannelIdentifier[12];};
union _80683930D45E06D3195B4F9BDBEC48CB {struct _80683930D45E06D3195B4F9BDBEC48CB___FFB3E7B8DBDAAE83694BDE6360C01F1F Bits;UINT64 Uint64;};
struct _81A175F83A1A01B39FDFDB14C2D5623C {unsigned __int8 HeaderAllocated : 1;unsigned __int8 WritesAllocated : 1;unsigned __int8 Complete : 1;unsigned __int8 Reserved : 5;EFI_GUID CallerId;UINT64 NumberOfWrites;UINT64 PrivateDataSize;};
struct _820CFB4FB5CF3CE13AC7E48DA3FE278C {FRAMEWORK_EFI_IFR_OP_HEADER Header;STRING_REF Help;STRING_REF Text;STRING_REF TextTwo;};
struct _839C21B4E89AAEDBF06DDC3B037C157B {UINT8 Type;UINT8 Length;UINT8 AcpiProcessorId;UINT16 Flags;UINT8 LocalApicInti;};
struct _83C70947A07E9162E2D1F09982FD84F4 {UINT32 count;TPMA_CC commandAttributes[254];};
struct _842D103E02ED6155C49E1F635C1ECF50 {EFI_MEMORY_CHANNEL_TYPE MemoryChannelType;UINT8 MemoryChannelMaximumLoad;UINT8 MemoryChannelDeviceCount;};
struct _8495EDE704E4D8AE4EE20320278A9DC6 {UINT8 RequestType;UINT8 Request;UINT16 Value;UINT16 Index;UINT16 Length;};
struct _84B5F2AB7401206A91B6BE4E98B17288 {EFI_ACPI_DESCRIPTION_HEADER Header;UINT64 Reserved;};
struct _86009F4907A5EB1C61AA73D0D407BD18 {IP4_ICMP_HEAD Head;UINT16 Id;UINT16 Seq;};
struct _860A1EE2C3C116B10A53A1836B54B6D5 {EFI_SUBCLASS_TYPE1_HEADER Header;EFI_MISC_SUBCLASS_RECORDS Record;};
struct _86210BA5B88DE587CCB72507AC8E4181 {UINT16 NumberOfInstallableLanguages;EFI_MISC_LANGUAGE_FLAGS LanguageFlags;UINT16 CurrentLanguageNumber;};
struct _8628C3DD88575B338D7ABAAFA3EAD15C {SMBIOS_STRUCTURE Hdr;DEVICE_STRUCT Device[1];};
struct _864F357D2D335F20052F07A9C9C9B544 {UGA_IO_REQUEST_CODE ioRequestCode;void *pvInBuffer;UINT64 ui64InBufferSize;void *pvOutBuffer;UINT64 ui64OutBufferSize;UINT64 ui64BytesReturned;};
struct _873F0BF6A4610C6D0FECF44220B1B459 {UINT16 Year;UINT8 Month;UINT8 Day;};
union _87CB00AD9525686B000DA88190BC3C28 {EFI_SMI_OPTIONAL_FPSAVE_STATE Ia32FpSave;EFI_PMI_OPTIONAL_FLOATING_POINT_CONTEXT ItaniumFpSave;};
struct _88765E7F9D12F50D22D201E19D014097 {UINT8 Type;UINT8 Code;UINT16 Checksum;};
struct _890C66BD3414F72564A9792AD4C50634 {EFI_STATUS_CODE_DATA DataHeader;EFI_EXP_BASE10_DATA TimerLimit;};
struct _8960061FCCBB7A36C6DBDC8DDD8214CE {SMBIOS_STRUCTURE Hdr;UINT16 LowerThresholdNonCritical;UINT16 UpperThresholdNonCritical;UINT16 LowerThresholdCritical;UINT16 UpperThresholdCritical;UINT16 LowerThresholdNonRecoverable;UINT16 UpperThresholdNonRecoverable;};
struct _896216A836D57BF4B1D0B373A62CE411 {TPML_PCR_SELECTION pcrSelect;TPM2B_DIGEST pcrDigest;};
struct _8B011148F1BB53F5CDF603C2B7E621CD {EFI_DEVICE_PATH_PROTOCOL Header;UINT32 Tid;};
struct _8B2452E5B9D1FF29DC352664F48A8AF5 {UINT32 Size;UINT32 Length;struct _8B2452E5B9D1FF29DC352664F48A8AF5___1FA7CE43D64A8C4BC04A6EDD657AEB9B Dhcp6;};
struct _8B2C23BAA46EBB305E2955CD2BD57B73 {EFI_DEVICE_PATH_PROTOCOL Header;UINT32 ADR;};
struct _8B571DAB4FBCBAE69A9F2186BE96BA6F {STRING_REF GroupName;UINT16 NumberGroupItems;UINT16 GroupId;};
struct _8BBF95EF49E646019DF2D64A9CA75947 {UINTN SwSmiCpuIndex;UINT8 CommandPort;UINT8 DataPort;};
struct _8BF4A3182DE3065A22896A43EC686587 {UINT16 Type;UINT16 Length;UINT16 InterleaveStructureIndex;UINT16 Reserved_6;UINT32 NumberOfLines;UINT32 LineSize;};
struct _8CB77716A500E5DCC326D5A9DF18EDF2 {UINT32 IpCount;EFI_IPv4_ADDRESS *IpList;};
struct _8CEB6B41CF9D90E13F423B312D2B82C1 {EFI_USB_CONFIG_DESCRIPTOR *ConfigDescriptor;EFI_USB_INTERFACE_INFO **InterfaceInfoTable;};
struct _8D29C0B06F43B4BA6E2EF385F64715D0 {EFI_ACPI_DESCRIPTION_HEADER Header;UINT32 Reserved;};
struct _8D894963043A327D1CB91F38619B7FB7 {EFI_DEVICE_PATH_PROTOCOL Header;UINT16 HBAPortNumber;UINT16 PortMultiplierPortNumber;UINT16 Lun;};
struct _8E62989F1CECE56FEC4E86432FBA7D0A {UINT16 size;TPMS_CREATION_DATA creationData;};
struct _8EB9F2655091912106BD579CF94D044D {WIN_CERTIFICATE Hdr;EFI_GUID HashAlgorithm;};
struct _8F021B924EEDB0F537F7DEDF0965F2AA {UINT16 AX;UINT16 ReservedAX;UINT16 BX;UINT16 ReservedBX;UINT16 CX;UINT16 ReservedCX;UINT16 DX;UINT16 ReservedDX;UINT16 SI;UINT16 ReservedSI;UINT16 DI;UINT16 ReservedDI;EFI_FLAGS_REG Flags;UINT16 ReservedFlags;UINT16 ES;UINT16 CS;UINT16 SS;UINT16 DS;UINT16 FS;UINT16 GS;UINT16 BP;UINT16 ReservedBP;UINT16 SP;UINT16 ReservedSP;};
struct _8F03A700AE741063C4C0556C872CEB25 {EFI_DEVICE_PATH_PROTOCOL *DevicePath;UINTN ConnectType;};
struct _8FF0EFCD47E0176D7B8B9224D8C06D64 {EFI_80211_ELEMENT_HEADER Hdr;UINT8 RequestIDs[1];};
struct _9077B6028AA1E2315235F4CA294EB815 {EFI_HII_IFR_PACK *IfrData;EFI_HII_STRING_PACK *StringData;};
struct _916275EA6FA5F558428BF0B97726939A {SMBIOS_STRUCTURE Hdr;UINT8 InterfaceType;UINT8 MCHostInterfaceData[1];};
struct _9180315BD58C2D171726BCABE450AE98 {TPM_PT property;UINT32 value;};
struct _91CBCF8FA4E4D584341D4DA50085DD74 {FRAMEWORK_EFI_IFR_OP_HEADER Header;UINT16 VariableId;UINT16 Value;};
struct _920435F1B70ECB33392B90E7D3ACCFDB {EFI_DEVICE_PATH_PROTOCOL Header;UINT16 Pun;UINT16 Lun;};
struct _92276E1B8A80B5159F464799742CD4E5 {TPM_ALG_ID alg;TPMA_ALGORITHM algProperties;};
struct _922A102EF0DE789699C98A721CFF83F9 {UINT32 dwLength;UINT16 wRevision;UINT16 wCertificateType;};
struct _92E08157E319A6D0048B11B6F44E7E7D {UINT32 SizeOfEdid;UINT8 *Edid;};
struct _931F22EFAAA9C2C0CFDB892F0D824EF3 {EFI_SMBUS_DEVICE_ADDRESS SmbusDeviceAddress;EFI_SMBUS_UDID SmbusDeviceUdid;};
struct _940104136B10EB4AFE42B92558B2348F {EFI_80211_ELEMENT_HEADER Hdr;UINT8 Capabilities[1];};
struct _94619DEDC0405DB30844363ED09E4E89 {STRING_REF RemoteAccessManufacturerNameDescription;EFI_MISC_REMOTE_ACCESS_CONNECTIONS RemoteAccessConnections;};
struct _9494D6F578DF86DB7A8186CCEAB2EA6B {UINT16 size;BYTE buffer[64];};
struct _965AB3A0AE89D9B64AE14AD7380CB79D {UINTN OperationCount;EFI_I2C_OPERATION Operation[1];};
struct _977E3E064D7534F4B455022DDA6963C0 {UINT16 VendorId;UINT16 DeviceId;UINT8 ClassCode[3];UINT8 FunctionNumber;UINT8 DeviceNumber;UINT8 BusNumber;UINT8 SegmentNumber;UINT8 Reserved[5];};
struct _993FA8BA3EF73A4D826248B820311C76 {EFI_IPv6_ADDRESS SourceAddress;UINT16 SourcePort;EFI_IPv6_ADDRESS DestinationAddress;UINT16 DestinationPort;};
struct _99527345AC44A5EB483D46ECFDF59D49 {EFI_SUBCLASS_TYPE1_HEADER DataRecordHeader;EFI_CACHE_VARIABLE_RECORD VariableRecord;};
struct _999B3253F035FC888B7A087E274B5CA0 {EFI_STATUS_CODE_DATA DataHeader;EFI_PHYSICAL_ADDRESS Start;EFI_PHYSICAL_ADDRESS Length;};
struct _999FCC054EBD657D3F6DB4B2D8714F97 {EFI_DEVICE_PATH_PROTOCOL Header;EFI_GUID Guid;};
struct _99E429C93EE7454752F3C983EFB2AA50 {EFI_TCP4_COMPLETION_TOKEN CompletionToken;EFI_HANDLE NewChildHandle;};
struct _9A2784FD5678447EB3DE469C65F627C1 {EFI_DEVICE_PATH_PROTOCOL Header;UINT16 InterfaceNumber;UINT16 VendorId;UINT16 ProductId;};
union _9A8860F6C14A61B836CF024812302798 {struct _9A8860F6C14A61B836CF024812302798___7DB2686D5239E82BF5B1C028852998F9 Bits;UINT64 Uint64;};
struct _9ABBD67895AB0764D2E108D2B502E203 {MBCE_BIOS_RESERVED BiosReserved;MBCE_SYSTEM_RESERVED SystemReserved;};
struct _9B83AE6122FBE22D8F29CEDEDFBDA90F {UINT32 Length;UINT16 Type;};
struct _9CB615D0400DB1156E78CC3060463D1F {PCI_EXPRESS_EXTENDED_CAPABILITIES_HEADER Header;UINT32 AssociationBitmap;};
struct _9D264345311208DC54CDE5FE65FDDECE {UINT16 sizeOfSelect;UINT8 pcrSelect[3];};
struct _9D440D8C9FFBECCD11BB4C228E0BDB53 {EFI_DEVICE_PATH_PROTOCOL Header;BLUETOOTH_ADDRESS BD_ADDR;};
struct _9DCA6106DB52F55837B7EA8444DF1CDE {UINT8 Type;UINT8 Reserved;UINT16 RecordLength;};
struct _9EB5FD01F162F4E0C11D9C14A6D00AC6 {UINT8 Type;UINT8 Length;UINT8 IoApicId;UINT8 Reserved;UINT32 IoApicAddress;UINT32 SystemVectorBase;};
struct _9F1319B45FEBB152D8EFEBFDE8D1A138 {EFI_ACPI_DESCRIPTION_HEADER Header;UINT32 OffsetDbgDeviceInfo;UINT32 NumberDbgDeviceInfo;};
struct _9F72036F1720BD50F14A3F3D330C6F66 {EFI_GUID FwClass;UINT32 FwType;UINT32 FwVersion;UINT32 LowestSupportedFwVersion;UINT32 CapsuleFlags;UINT32 LastAttemptVersion;UINT32 LastAttemptStatus;};
struct _A0B3582B041A72DF0474C8B839A5C8C0 {EFI_GUID SignatureOwner;UINT8 SignatureData[1];};
struct _A19F19203AC5E3E31E03913FA913E042 {UINT16 size;BYTE buffer[128];};
struct _A2BB91E5C6574EE92762E6C832C7F2C8 {EFI_PHYSICAL_ADDRESS BaseAddress;UINT32 Length;};
struct _A2D971EEC14FEC66AC419AE99ED8FA36 {TPM2B_NAME objectName;TPM2B_DIGEST creationHash;};
struct _A3035F2BA8BC9144E2E3914BDC9C2690 {UINT16 Version;UINT32 GroupDataCipherSuite;};
struct _A45E222FBF0E16471D786CEC6B9CAF4A {FRAMEWORK_EFI_IFR_OP_HEADER Header;UINT8 Flags;};
struct _A548EF40F423D4D1CE1D0C83C6C6368F {EFI_PROCESSOR_MICROCODE_TYPE ProcessorMicrocodeType;UINT32 ProcessorMicrocodeRevisionNumber;};
struct _A58305CE0F1A340C2AB5BD9048187F54 {EFI_HOB_GENERIC_HEADER Header;EFI_HOB_MEMORY_ALLOCATION_HEADER AllocDescriptor;};
union _A5F962F37CF2F693830E47777CAE8939 {struct _A5F962F37CF2F693830E47777CAE8939___4FBE0E1634510674E7090E3CDB70B8AD Bits;UINT16 Uint16;};
struct _A6484E360E0D767762A149C78FD78B30 {UINT8 Type;UINT8 Length;UINT8 AcpiProcessorId;UINT8 LocalSapicId;UINT8 LocalSapicEid;UINT8 Reserved[3];UINT32 Flags;};
struct _A6F01FCCD003A3506A4BC4949BFC9341 {EFI_DEVICE_PATH_PROTOCOL Header;CHAR8 Uri[];};
struct _A710FAABCDB1AD0E788E8111A4936ED6 {UINT16 Signature;UINT8 Reserved[22];UINT16 PcirOffset;};
struct _A7296CAE8D5B4B0354655D00FDFD9750 {UINT32 Version;UINT32 Length;UINT64 MemoryProtectionAttribute;};
struct _A8501743E5A0AB903D80C6F79FFDCCCC {CHAR16 *Name;SHELL_PARAM_TYPE Type;};
struct _A85672E1F3F2CA4FD8275099D6728D85 {union _A85672E1F3F2CA4FD8275099D6728D85___C1429C3019ECE9730FDABFDC49B7E27B Type;UINT16 Linenumber;};
struct _A8B7ADFE98E1D0BE007076BB75E42139 {UINTN RRCount;DNS6_RESOURCE_RECORD *RRList;};
struct _A96752F0C1B95D0D0656C5DFCE80B4E5 {EFI_IPv6_ADDRESS StationIp;UINT16 LocalPort;EFI_IPv6_ADDRESS ServerIp;UINT16 InitialServerPort;UINT16 TryCount;UINT16 TimeoutValue;};
union _A9C6387FF17B0FE0A5B3AEC55D0E1F1C {struct _A9C6387FF17B0FE0A5B3AEC55D0E1F1C___925E33C35CCABA38B5334E9AAF082C7F Bits;UINT32 Uint32;};
struct _AAF66D85676894CAA54D36565BB4BDF7 {LIST_ENTRY Used;LIST_ENTRY Recycled;UINTN Count;};
struct _AC37B632FD87D504B62B3B503AC53191 {EFI_ACPI_ASF_RECORD_HEADER RecordHeader;UINT8 SEEPROMAddress;UINT8 NumberOfDevices;};
struct _ACBA5A58D6E9B16F6FAF41D576A29499 {UINT32 count;TPMS_TAGGED_PROPERTY tpmProperty[127];};
struct _AD263D7C0C927523A3D26C1277C0100F {UINT16 size;BYTE buffer[8];};
union _AD5D0A6DCE5F64CFAF357BB3A0648A64 {struct _AD5D0A6DCE5F64CFAF357BB3A0648A64___CCA9129B464F64851293FECA407CE2C6 Options;UINT32 PackedValue;};
struct _AE16DBD85043B20BDA4ABD45345AC744 {UINT16 size;BYTE buffer[16];};
struct _AE5CF61A8076C545D4243DC246FC5106 {TPM2B_AUTH userAuth;TPM2B_SENSITIVE_DATA data;};
struct _AF7F7AD21AC17C6E716F27057D264F4D {UINT32 Length;UINT8 *Data;};
struct _AFB7E269F91AFE13225EE3CE11711B8D {UINT8 Type;UINT8 Length;UINT8 ProximityDomain7To0;UINT8 ApicId;UINT32 Flags;UINT8 LocalSapicEid;UINT8 ProximityDomain31To8[3];UINT32 ClockDomain;};
union _B0501B9B93CFDD8D3C38257E77C447BD {EFI_IP4_RECEIVE_DATA Ip4RxData;EFI_IP6_RECEIVE_DATA Ip6RxData;};
struct _B0C064A2348ADD487CDD4CB73C6C9183 {UINT32 Characteristics;UINT32 TimeDateStamp;UINT16 MajorVersion;UINT16 MinorVersion;UINT16 NumberOfNamedEntries;UINT16 NumberOfIdEntries;};
struct _B0D8260BD3BEC2C394B206003E60A778 {UINT32 Characteristics;UINT32 TimeDateStamp;UINT16 MajorVersion;UINT16 MinorVersion;UINT32 Name;UINT32 Base;UINT32 NumberOfFunctions;UINT32 NumberOfNames;UINT32 AddressOfFunctions;UINT32 AddressOfNames;UINT32 AddressOfNameOrdinals;};
struct _B2CA72A6D81756722FBA9BD935435661 {UINT16 Type;UINT8 Length;UINT8 Revision;};
struct _B4A22B34AB1C82C9B553A8F76517C507 {UINT8 Type;UINT8 Length;UINT32 ProximityDomain;UINT32 AcpiProcessorUid;UINT32 Flags;UINT32 ClockDomain;};
union _B5A92F8B2B3252A716F3F5184DF78D07 {struct _B5A92F8B2B3252A716F3F5184DF78D07___AD7EE62ABCCCCA737ABA864527ADAD6D Bits;UINT32 Uint32;};
struct _B6C5964CB910F0099F62EF9C07DF52E6 {UINT16 size;BYTE buffer[334];};
union _B912CBA3C10871F54570C4C0430A0F81 {struct _B912CBA3C10871F54570C4C0430A0F81___928DAC4DB38E41CC18651AD3B5064070 Bits;UINT64 Uint64;};
union _B9AA1CAFBE647A1F2D3864596FED4435 {EFI_IP4_CONFIG_DATA Ip4CfgData;EFI_IP6_CONFIG_DATA Ip6CfgData;};
union _B9B6CC471BCB7F4A305FC2D80D0AA4C0 {struct _B9B6CC471BCB7F4A305FC2D80D0AA4C0___5F1D9E908CC7F0E7610C5D5BF79F764D Bits;UINT32 Uint32;};
struct _B9E29299D58E2B0821ED2412D3D885B9 {EFI_SLEEP_TYPE Type;EFI_SLEEP_PHASE Phase;};
struct _BA607B17B9A3CAECE8540684CEAA5528 {EFI_STATUS_CODE_DATA DataHeader;EFI_STATUS_CODE_DIMM_NUMBER Instance;};
struct _BA955201829052531E7B341E0F25818D {EFI_DEVICE_PATH_PROTOCOL Header;UINT16 VlanId;};
struct _BAE8F8CA1F47FBE696AE2A28E257FFD7 {CHAR8 *Language;CHAR16 *UnicodeString;};
struct _BB3921AB7F528B09C1A593D3B64EBEAD {UINT8 Type;UINT8 TRType;UINT8 TRNumber;UINT8 Reserved[5];UINT64 VirtualAddress;UINT64 EncodedPageSize;UINT64 Reserved1;};
struct _BB85BC0F248C542450F051D797F47F58 {UINT16 size;BYTE buffer[256];};
struct _BB95E9F014E1911D4E1E3EC6C5F0D1BA {PCI_EXPRESS_EXTENDED_CAPABILITIES_HEADER Header;UINT64 SerialNumber;};
struct _BC00DB91D6EAEDBED7A9E912894394C9 {UINT8 ItemType;UINT16 ItemHandle;};
struct _BC5F8D17A7EBF201257B0BCF4A84636C {UINT8 Type;UINT8 Reserved[7];UINT64 PalProcEntry;UINT64 SalProcEntry;UINT64 SalGlobalDataPointer;UINT64 Reserved2[2];};
struct _BCC89F5383D3C1B61C6BEDCD220446A1 {UINT32 ReceiveBufferSize;UINT32 SendBufferSize;UINT32 MaxSynBackLog;UINT32 ConnectionTimeout;UINT32 DataRetries;UINT32 FinTimeout;UINT32 TimeWaitTimeout;UINT32 KeepAliveProbes;UINT32 KeepAliveTime;UINT32 KeepAliveInterval;BOOLEAN EnableNagle;BOOLEAN EnableTimeStamp;BOOLEAN EnableWindowScaling;BOOLEAN EnableSelectiveAck;BOOLEAN EnablePathMtuDiscovery;};
struct _BCF08B3A538C4B594E5DE7E4F4218E52 {BBS_TYPE BbsType;UINT16 Length;UINT16 Data[1];};
struct _BD4007E3E0C6D8CDC04540D2589E7968 {UINTN NumberOfPackages;EFI_GUID *GuidId;};
union _BD5314CD2BE3AB5CE52973ACDBD99966 {EFI_TCP4_PROTOCOL *Tcp4;EFI_TCP6_PROTOCOL *Tcp6;};
struct _BF8DC3DD2E6AEC42A136CED707A9D44D {EFI_ACPI_6_0_FPDT_PERFORMANCE_RECORD_HEADER Header;UINT64 SuspendStart;UINT64 SuspendEnd;};
struct _BFE9B1A51FBE64F697572C7C8EA6814F {UINT8 AddressSpaceId;UINT8 RegisterBitWidth;UINT8 RegisterBitOffset;UINT8 AccessSize;UINT64 Address;};
struct _C0F6C2A8FBB9994984F607D899E62187 {UINT16 OpCode;UINT16 ErrorCode;UINT8 ErrorMessage[1];};
struct _C1280E12EBA0A803ED3C6694680DB66C {EFI_ACPI_DESCRIPTION_HEADER Header;UINT8 PlatformCommunicationChannelIdentifier;UINT8 Reserved[3];};
struct _C150E43396C1E9BDF4FCD2C189EFF464 {UINTN Flags;EFI_GUID *Guid;void *Ppi;};
struct _C1F1F38A18362D524DC4F9B3380D0C6C {EFI_BLOCK_IO_CRYPTO_IV_INPUT Header;UINT64 CryptoBlockByteOffset;UINT64 CryptoBlockByteSize;};
struct _C2269CB36634A20EA7C95EAE13971688 {FRAMEWORK_EFI_IFR_OP_HEADER Header;STRING_REF SubTitle;};
struct _C36B89143C1E3740A076B865570ADF20 {FRAMEWORK_EFI_IFR_OP_HEADER Header;UINT16 VarId;};
union _C3A285CD1904EDCDB417EC8F5027A1F0 {struct _C3A285CD1904EDCDB417EC8F5027A1F0___8605AB9F7C5F80EC94F069DA8FDA2EDF Bits;UINT16 Data;};
struct _C3BF1122D5C1852227E214E1CA9392B4 {EFI_FIRMWARE_VOLUME_EXT_ENTRY Hdr;EFI_GUID FormatType;};
struct _C3F4E3F01E6B33F305781F79A91109DF {UINT32 count;TPM_HANDLE handle[254];};
struct _C475A15E5D0B730907296A932E0930F5 {UINT8 PciBus;UINT8 PciDeviceFun;UINT8 PciSegment;UINT8 PciClass;UINT8 PciSubclass;UINT8 PciInterface;UINT8 PrimaryIrq;UINT8 PrimaryReserved;UINT16 PrimaryControl;UINT16 PrimaryBase;UINT16 PrimaryBusMaster;UINT8 SecondaryIrq;UINT8 SecondaryReserved;UINT16 SecondaryControl;UINT16 SecondaryBase;UINT16 SecondaryBusMaster;};
union _C54F2C9D3A2B4295AFFA7925B1211165 {EFI_IP4_PROTOCOL *Ip4;EFI_IP6_PROTOCOL *Ip6;};
struct _C5A09CAA6159B78B523702900374C16E {EFI_SUBCLASS_TYPE1_HEADER DataRecordHeader;EFI_CPU_VARIABLE_RECORD VariableRecord;};
union _C61042C4D8451B8A12F5E70DC2B6360C {EFI_80211_COUNTRY_TRIPLET_SUBBAND Subband;EFI_80211_COUNTRY_TRIPLET_OPERATE Operating;};
struct _C6EEF798281BD88F1E2006F84FDBEE1F {UINT64 time;TPMS_CLOCK_INFO clockInfo;};
struct _C7165306B581CB7DF3063D1DF3E6E08B {UINT32 IpCount;EFI_IPv6_ADDRESS *IpList;};
struct _C739D6E54704F587F137AFFE9786274F {SMBIOS_STRUCTURE Hdr;UINT8 HardwareSecuritySettings;};
struct _C759A4E0FC667B805FF83CF37E589BAD {EFI_SHA384_HASH ToBeSignedHash;EFI_TIME TimeOfRevocation;};
struct _C80725C5166B216A223488BFB7F21C47 {EFI_DEVICE_PATH_PROTOCOL Header;UINT8 InterfaceType;UINT8 BaseAddress[8];};
struct _CA1C176886C55B38914A4846A7CB47A1 {EFI_ACPI_DESCRIPTION_HEADER Header;UINT8 Reserved[8];};
struct _CA2F29191A48A2C81DD05191EEF3098B {EFI_TCP6_COMPLETION_TOKEN CompletionToken;BOOLEAN AbortOnClose;};
struct _CA86F2C8F36CBF5AF3EA74B5F7BF8954 {EFI_HANDLE InstanceHandle;EFI_IPv4_ADDRESS Ip4Address;EFI_IPv4_ADDRESS SubnetMask;};
struct _CBC0D6F508EBE68BBEF0FA61E3D4F04C {UINT16 size;BYTE secret[256];};
struct _CC1DB6E4372870F41C66C79D6A501D01 {UINT16 size;BYTE buffer[908];};
struct _CC500B7AA595BF44683AE05BCAF41C59 {UINT32 Version;UINT32 Role;CHAR16 ImplementationID[256];UINT32 SecurityFeaturesSize;};
struct _CC8D119C0B799164842502688415CA50 {EFI_ACPI_5_1_PMMT_COMMON_MEMORY_AGGREGATOR_DEVICE_STRUCTURE Header;UINT16 SocketIdentifier;UINT16 Reserved;};
struct _CE25C5C92638217AE596B7807905569F {EFI_TIME TimeStamp;WIN_CERTIFICATE_UEFI_GUID AuthInfo;};
struct _CE454202E1196C7D0F36AA94D7758685 {SMBIOS_STRUCTURE Hdr;UINT8 Reserved[6];UINT8 BootStatus;};
struct _CECC0DD8305EA4411B43DAEA5210C037 {EFI_GUID OemGuid;UINT32 HeaderSize;};
struct _CF78D6B0316D400E3D07B3957805C8F4 {EFI_MTFTP6_CONFIG_DATA ConfigData;UINT8 SupportedOptionCount;UINT8 **SupportedOptions;};
struct _D0B47FD0BF657080F777BA7FEA289080 {EFI_IMAGE_EXECUTION_ACTION Action;UINT32 InfoSize;};
struct _D0D511F2FD891F706411DB7675B0E214 {UINT32 count;TPM_ALG_ID algorithms[64];};
union _D157DDF93F430BB7D7000FD375B743F9 {IP4_HEAD *Ip4;EFI_IP6_HEADER *Ip6;};
union _D15B7837BDB1ABFF67D6BC1E404170E5 {TPMS_SCHEME_HMAC hmac;TPMS_SCHEME_XOR xor;};
struct _D1A60C85E9D9248AC771C8C968928F3A {UINT8 Type;UINT8 SubType;DEV_PATH_FUNCTION Function;};
union _D1BE984AFB0100A4AE6FF980B7D60BE7 {EFI_TCP4_CLOSE_TOKEN Tcp4Token;EFI_TCP6_CLOSE_TOKEN Tcp6Token;};
struct _D21600D66FC6D272348927E5C05F5461 {LIST_ENTRY Link;CHAR16 *CommandString;};
struct _D391E2EE96FCF916E3497CBD40656BC7 {UINT64 MaximumVariableStorageSize;UINT64 RemainingVariableStorageSize;UINT64 MaximumVariableSize;UINT32 Attributes;};
struct _D5713C0CEA0D5BBA5F89D82C305834A2 {EFI_80211_ELEMENT_HEADER Hdr;UINT8 SSId[32];};
struct _D61787A53E5B63729D68258870402E8E {EFI_DEVICE_PATH_PROTOCOL Header;EFI_GUID FvFileName;};
struct _D7773540B8449B72EBB989E963175901 {UINT8 Register;UINT8 Function;UINT8 Device;UINT8 Bus;UINT32 ExtendedRegister;};
struct _D7C9B7662B4CC4760572E38A2E597007 {EFI_80211_ELEMENT_HEADER Hdr;EFI_80211_ELEMENT_SUPP_CHANNEL_TUPLE Subband[1];};
struct _D7CA5D2C4B72158031401C170D561CD4 {EFI_STRING_ID StringId;UINT8 TimeOut;};
struct _D7D01B9099636E49AAF0C9F275D09F74 {EFI_GUID SignatureType;UINT32 SignatureListSize;UINT32 SignatureHeaderSize;UINT32 SignatureSize;};
struct _D833B7BAA6157FDBBBFE5F4D0F7754FF {UINT16 size;TPMS_SENSITIVE_CREATE sensitive;};
struct _DA5DCD78226E6528D0E59BAA48428A5B {UINTN RRCount;DNS_RESOURCE_RECORD *RRList;};
struct _DA66546684685EC3A70FA5A97845B96D {UINT8 DstMac[6];UINT8 SrcMac[6];UINT16 EtherType;};
struct _DC8F84DB3B38E5CD1639DF4C353ACC48 {EFI_ACPI_DESCRIPTION_HEADER Header;UINT64 NumberOfSystemLocalities;};
struct _DCE545FB5822D896C1B19931B58B1060 {EFI_DEVICE_PATH_PROTOCOL Header;UINT8 Lun;};
struct _DF78B669A5C1A1C1BDE3D8CC445CEA09 {UINT16 size;TPMT_PUBLIC publicArea;};
union _DF7E6158CD23297370340929CD2051C8 {EFI_UGA_PIXEL Pixel;UINT32 Raw;};
struct _E0592557DDB5F086F83BE660642DC445 {UINT32 CpuLocation;EFI_SEC_PLATFORM_INFORMATION_RECORD InfoRecord;};
union _E05C756931CF804D039B8584A5FAC0BF {struct _E05C756931CF804D039B8584A5FAC0BF___DAC29709A469181C8D406C586558B3B0 Checksum;UINT16 Checksum16;};
struct _E0FDAC4E3BDC65FDC092E8C9926C0FAA {ACPI_SMALL_RESOURCE_HEADER Header;UINT16 Mask;};
struct _E193AB1C93E05B1762D23774FC06574E {LIST_ENTRY Link;CHAR16 *CommandString;CHAR16 *Alias;};
struct _E2D91BC3D19A8D6B311477F95ECB3E4C {EFI_IPv6_ADDRESS IpAddress;UINT32 PreferredLifetime;UINT32 ValidLifetime;};
union _E3C5383F745E4FC61C1B778FD0896220 {EFI_PEI_NOTIFY_DESCRIPTOR Notify;EFI_PEI_PPI_DESCRIPTOR Ppi;};
struct _E3CE801A5C809D62DA553F3A23650BF2 {EFI_ISA_ACPI_RESOURCE_TYPE Type;UINT32 Attribute;UINT32 StartRange;UINT32 EndRange;};
struct _E45A1ABE42AD9419E77EB1A7CD09E056 {UINT16 HeaderSize;UINT16 Size;EFI_GUID Type;};
struct _E480AB27614BD4F78D3E71B99782E2F1 {EFI_DEVICE_PATH_PROTOCOL Header;UINT32 ControllerNumber;};
struct _E4C30ED7F8D2125F7573B2240B454B7A {UINT8 DeviceType;SMBIOS_TABLE_STRING DescriptionString;};
struct _E4D62868E5BD63A21B685AEFDED1DBD5 {EFI_ACPI_4_0_ERROR_BLOCK_STATUS BlockStatus;UINT32 RawDataOffset;UINT32 RawDataLength;UINT32 DataLength;UINT32 ErrorSeverity;};
struct _E59F7502520F69744C439D58C986B3F2 {UINT16 OpCode;UINT16 OpLen;UINT8 Data[1];};
struct _E5F76CF1869745FF7824621BB58928FA {UINT16 size;TPMS_ECC_POINT point;};
union _E614E9AE1745E14DE570CCD3E419327A {PCI_TYPE00 Device;PCI_TYPE01 Bridge;};
struct _E61BC969A8C3B70E128DC9F089720568 {UINT16 VlanId;UINT8 Priority;};
struct _E6239745ADE66C0A5D56B297D9B2B73C {TPM2B_DIGEST integrity;TPM2B_CONTEXT_SENSITIVE encrypted;};
struct _E645B51A58D7D93C8B1533911DFA57FB {UINT32 UpdateStatus;UINT32 TableSize;EFI_DEBUG_IMAGE_INFO *EfiDebugImageInfoTable;};
struct _E67EA35C3105155E460DE043A8665F0C {unsigned __int32 VcResourceCapability : 24;unsigned __int32 PortArbTableOffset : 8;UINT32 VcResourceControl;UINT16 Reserved1;UINT16 VcResourceStatus;};
struct _E6DFE34E6FB079ABE7101F592187F4C9 {EFI_MISC_RESET_CAPABILITIES ResetCapabilities;UINT16 ResetCount;UINT16 ResetLimit;UINT16 ResetTimerInterval;UINT16 ResetTimeout;};
union _E6FDF59E73863B00D8B0D819BC678DCF {EFI_IP4_COMPLETION_TOKEN Ip4Token;EFI_IP6_COMPLETION_TOKEN Ip6Token;};
struct _E73B619D120A16C7D7701EC11EF23752 {EFI_COMMON_SECTION_HEADER2 CommonHeader;EFI_GUID SubTypeGuid;};
struct _E77285776565631763AC36BC8608243B {UINT16 Machine;UINT16 NumberOfSections;UINT32 TimeDateStamp;UINT32 PointerToSymbolTable;UINT32 NumberOfSymbols;UINT16 SizeOfOptionalHeader;UINT16 Characteristics;};
struct _E7D10BCF161E8C7DAB62916DA1A0279A {EFI_PHYSICAL_ADDRESS TargetAddress;EFI_PHYSICAL_ADDRESS SpareAddress;UINT64 Length;};
struct _E888D1400815DBA055347ED727EA37C1 {const CHAR16 *CapturePtr;UINTN Length;};
struct _E91DA923D8834479B94963488B4EB67A {UINT16 OpCode;UINT64 Block[1];};
struct _E920D4B068B666B87BE60357AD064859 {EFI_STATUS_CODE_DATA DataHeader;EFI_STATUS_CODE_EXCEP_SYSTEM_CONTEXT Context;};
struct _EA987423373AACA749C5D6780BE186D2 {EFI_GUID Algorithm;UINT64 KeySize;UINT64 CryptoBlockSizeBitMask;};
struct _EBA360CF91A54674EFD80EDA165ECE6A {UINT16 size;BYTE buffer[32];};
struct _EC0AFB1DD84DE30CD069B98F1439B48D {EFI_FIRMWARE_VOLUME_EXT_ENTRY Hdr;UINT32 TypeMask;};
union _ECDB53E3AB324F7DEE2A08EF635387FD {TCP4_IO_CONFIG_DATA Tcp4IoConfigData;TCP6_IO_CONFIG_DATA Tcp6IoConfigData;};
struct _ECF61D23EA53CCA39F9AEDBD220B29FC {EFI_HOB_GENERIC_HEADER Header;UINT8 SizeOfMemorySpace;UINT8 SizeOfIoSpace;UINT8 Reserved[6];};
struct _EDEF2C6FBD1A6ED66EE2D29E201317E7 {UINT64 Signature;UINT32 Revision;UINT32 HeaderSize;UINT32 CRC32;UINT32 Reserved;};
struct _EE144051703A467A552517BDDECF2797 {SMRAM_PROFILE_PARAMETER_HEADER Header;UINT64 ProfileSize;};
struct _EE4C6509791AB78C96F67DF2DF3C5F68 {UINT8 DeviceId;EFI_INTER_LINK_DATA DeviceLink;UINT8 MemoryChannelDeviceLoad;};
struct _EEA73679987C372D7777CBD7A073E350 {UINT32 count;TPM2B_DIGEST digests[8];};
struct _F1954A734E86044BE7E694780B200E8B {EFI_ACPI_DESCRIPTION_HEADER Header;UINT32 LocalApicAddress;UINT32 Flags;};
struct _F1F4BD7F1C65A95880CBC42EAAC51490 {EFI_PCI_CAPABILITY_HDR Hdr;UINT8 ExpnsSlotReg;UINT8 ChassisNo;};
struct _F1FEC15FBAF78A2C2F9CCDCA8E649452 {EFI_80211_ELEMENT_HEADER Hdr;EFI_80211_ELEMENT_DATA_RSN *Data;};
struct _F24BF685FE2FFD6D8D21627AC8F7EAE4 {UINT8 Length;UINT8 DescriptorType;UINT8 EndpointAddress;UINT8 Attributes;UINT16 MaxPacketSize;UINT8 Interval;};
struct _F2D678FC8FC5654A334F5779CED9391B {UINT16 size;BYTE name[66];};
struct _F31FE6C8564149D4ADB0252B9757F923 {UINT8 PPRequest;UINT32 PPRequestParameter;UINT8 LastPPRequest;UINT32 PPResponse;};
struct _F32C4D570F0F6EDFC6DC33B4DA7D37F3 {EFI_COMMON_SECTION_HEADER2 CommonHeader;CHAR16 FileNameString[1];};
union _F33B98B34D2E7A59DA07EED7E263E778 {IP4_ADDR SubnetMask;UINT8 PrefixLength;};
struct _F4429A50E788466D7EAAF864065A7A40 {UINT64 PciOptionRomCount;EFI_PCI_OPTION_ROM_DESCRIPTOR *PciOptionRomDescriptors;};
struct _F45FF1BC91AF929EB0B363B4AC224A3E {CHAR16 UnicodeWeight;UINT8 Attributes;UINT8 GlyphCol1[19];UINT8 GlyphCol2[19];UINT8 Pad[3];};
struct _F4CAD93BDEB4EB58D10E72E92DA5C496 {UINT32 Version;UINT32 HeaderSize;UINT16 Instance;UINT16 SubInstance;UINT32 RecordType;};
union _F5238921CBF27C887BB68ABA324F3CCD {struct _F5238921CBF27C887BB68ABA324F3CCD___405FFA32E424EC0EAFFB9D1AFA2DB98D Bits;UINT64 Uint64;};
struct _F760AA4E81877DFB0F36C2C7103BECD1 {EFI_GUID HashType;UINT8 PublicKey[256];UINT8 Signature[256];};
struct _F77F8648509DA27DD31EAF764A392E95 {EFI_IPv4_ADDRESS ListenAddress;EFI_IPv4_ADDRESS SubnetMask;UINT16 ListenPort;};
struct _F7B5EF35B486C72B6C55B1D2ABBDC47D {UINT8 Type;UINT8 Length;UINT8 IoApicId;UINT8 Reserved;UINT32 IoApicAddress;UINT32 GlobalSystemInterruptBase;};
struct _F809494E5EBBD7AB39E4CBE1C36C7080 {EFI_DEVICE_PATH_PROTOCOL Header;UINT8 SlotNumber;};
struct _F8990009920594911E2816CA7540AFAC {EFI_IPv4_ADDRESS SourceAddress;UINT16 SourcePort;EFI_IPv4_ADDRESS DestinationAddress;UINT16 DestinationPort;};
struct _F98F00A2B8C491B4094190B49E4921D8 {UINT8 StructureId;UINT8 Version;UINT16 Length;UINT8 Index;UINT8 Flags;};
struct _FA14C0B71678195363B92AA831A8E66C {SMBIOS_STRUCTURE Hdr;UINT8 Type;UINT8 Interface;UINT8 NumberOfButtons;};
struct _FAAA7B02052316094C472795C6F3F283 {INT32 MaxMode;INT32 Mode;INT32 Attribute;INT32 CursorColumn;INT32 CursorRow;BOOLEAN CursorVisible;};
struct _FB4111D416CC866343ED7FCA940F38E6 {EFI_IPv6_ADDRESS LocalAddress;UINT16 LocalPort;};
struct _FB6C911BAE72887D09506B334B3D43FA {UINT8 Type;UINT8 Reserved;UINT16 Length;UINT16 Flags;UINT16 Reserved1;};
union _FCBD8BC731F2D3A4BD0C752F426A1602 {EFI_TCP4_IO_TOKEN Tcp4Token;EFI_TCP6_IO_TOKEN Tcp6Token;};
struct _FD553E7DD9C9C4B9F8A7BAA8FA772EF4 {UINT32 Reserved;UINT32 Error;UINT32 Cancel;UINT32 Start;UINT64 InterruptControl;UINT32 CommandSize;UINT64 Command;UINT32 ResponseSize;UINT64 Response;};
struct _FD5F374D24F14A6FD6462F294476DE9F {BOOLEAN Valid;UINT32 Mode;};
struct _FD74FB9E171A16024A3BCE3E9FC560FE {UINT16 PacketIndex;UINT16 RecordIndex;UINT32 MaxRecordsNumber;};
struct _FDDF0E7A0B734429633C5140DE6811E3 {UINT32 ResizableBarCapability;UINT16 ResizableBarControl;UINT16 Reserved;};
struct _FF3D91E66F819C4F98F9776968F6FD4F {UINT32 Version;UINT16 EmbeddedDriverCount;UINT16 PayloadItemCount;};
typedef BOOL (__stdcall *WinNtSetConsoleActiveScreenBuffer)(HANDLE ConsoleOutput);
struct _EFI_HII_GIBT_GLYPH_DEFAULT_BLOCK {EFI_HII_GLYPH_BLOCK Header;UINT8 BitmapData[1];};
struct _EFI_PEI_FIRMWARE_VOLUME_INFO_PPI {EFI_GUID FvFormat;void *FvInfo;UINT32 FvInfoSize;EFI_GUID *ParentFvName;EFI_GUID *ParentFileName;};
struct _EFI_HII_SIMPLE_FONT_PACKAGE_HDR {EFI_HII_PACKAGE_HEADER Header;UINT16 NumberOfNarrowGlyphs;UINT16 NumberOfWideGlyphs;};
typedef BOOLEAN (*EFI_RUNTIME_CRYPT_SHA256_UPDATE)(void *Sha256Context, const void *Data, UINTN DataLength);
typedef void (*EFI_SMM_PERIODIC_TIMER_DISPATCH)(EFI_HANDLE DispatchHandle, EFI_SMM_PERIODIC_TIMER_DISPATCH_CONTEXT *DispatchContext);
typedef void (*EFI_SMM_STANDBY_BUTTON_DISPATCH)(EFI_HANDLE DispatchHandle, EFI_SMM_STANDBY_BUTTON_DISPATCH_CONTEXT *DispatchContext);
typedef BOOL (__stdcall *WinNtGetFileInformationByHandle)(HANDLE FileHandle, BY_HANDLE_FILE_INFORMATION *FileInfo);
struct _EFI_HII_IIBT_IMAGE_24BIT_BLOCK {EFI_HII_IMAGE_BLOCK Header;EFI_HII_IIBT_IMAGE_24BIT_BASE Bitmap;};
struct _EFI_HII_SIBT_STRING_SCSU_BLOCK {EFI_HII_STRING_BLOCK Header;UINT8 StringText[1];};
struct _EFI_HII_SIBT_STRING_UCS2_BLOCK {EFI_HII_STRING_BLOCK Header;CHAR16 StringText[1];};
typedef EFI_DEVICE_PATH_PROTOCOL *(*EFI_DEVICE_PATH_FROM_TEXT_NODE)(const CHAR16 *TextDeviceNode);
typedef EFI_DEVICE_PATH_PROTOCOL *(*EFI_DEVICE_PATH_FROM_TEXT_PATH)(const CHAR16 *TextDevicePath);
typedef BOOLEAN (*EFI_RUNTIME_CRYPT_SHA256_FINAL)(void *Sha256Context, UINT8 *HashValue);
struct _EFI_HII_ANIMATION_PACKAGE_HDR {EFI_HII_PACKAGE_HEADER Header;UINT32 AnimationInfoOffset;};
struct _EFI_HII_IIBT_IMAGE_24BIT_BASE {UINT16 Width;UINT16 Height;EFI_HII_RGB_PIXEL Bitmap[1];};
struct _EFI_SMM_RESERVED_SMRAM_REGION {EFI_PHYSICAL_ADDRESS SmramReservedStart;UINT64 SmramReservedSize;};
typedef void (*EFI_SMM_POWER_BUTTON_DISPATCH)(EFI_HANDLE DispatchHandle, EFI_SMM_POWER_BUTTON_DISPATCH_CONTEXT *DispatchContext);
struct _EFI_HII_GIBT_DUPLICATE_BLOCK {EFI_HII_GLYPH_BLOCK Header;CHAR16 CharValue;};
struct _EFI_HII_IIBT_DUPLICATE_BLOCK {EFI_HII_IMAGE_BLOCK Header;EFI_IMAGE_ID ImageId;};
struct _EFI_HII_IIBT_IMAGE_1BIT_BASE {UINT16 Width;UINT16 Height;UINT8 Data[1];};
struct _EFI_HII_IIBT_IMAGE_4BIT_BASE {UINT16 Width;UINT16 Height;UINT8 Data[1];};
struct _EFI_HII_IIBT_IMAGE_8BIT_BASE {UINT16 Width;UINT16 Height;UINT8 Data[1];};
struct _EFI_HII_SIBT_DUPLICATE_BLOCK {EFI_HII_STRING_BLOCK Header;EFI_STRING_ID StringId;};
typedef void *(*EFI_PCD_PROTOCOL_GET_POINTER)(const EFI_GUID *Guid, UINTN TokenNumber);
typedef void (*EFI_UNICODE_COLLATION_STRLWR)(EFI_UNICODE_COLLATION_PROTOCOL *This, CHAR16 *Str);
typedef void (*EFI_UNICODE_COLLATION_STRUPR)(EFI_UNICODE_COLLATION_PROTOCOL *This, CHAR16 *Str);
typedef BOOL (__stdcall *WinNtFileTimeToLocalFileTime)(const FILETIME *FileTime, LPFILETIME LocalFileTime);
typedef BOOL (__stdcall *WinNtLocalFileTimeToFileTime)(const FILETIME *LocalFileTime, LPFILETIME FileTime);
struct _EFI_HII_GIBT_DEFAULTS_BLOCK {EFI_HII_GLYPH_BLOCK Header;EFI_HII_GLYPH_INFO Cell;};
struct tdEFI_HANDOFF_TABLE_POINTERS {UINTN NumberOfTables;EFI_CONFIGURATION_TABLE TableEntry[1];};
struct tdEFI_PLATFORM_FIRMWARE_BLOB {EFI_PHYSICAL_ADDRESS BlobBase;UINT64 BlobLength;};
typedef void *(*EFI_PEI_PCD_PPI_GET_POINTER)(const EFI_GUID *Guid, UINTN TokenNumber);
typedef void *(*PCD_PROTOCOL_GET_EX_POINTER)(const EFI_GUID *Guid, UINTN TokenNumber);
typedef DWORD (__stdcall *WinNtGetTimeZoneInformation)(LPTIME_ZONE_INFORMATION timeZoneInformation);
typedef DWORD (__stdcall *WinNtSetTimeZoneInformation)(LPTIME_ZONE_INFORMATION timeZoneInformation);
struct _EFI_HII_IMAGE_PALETTE_INFO {UINT16 PaletteSize;EFI_HII_RGB_PIXEL PaletteValue[1];};
typedef BOOLEAN (*PEI_LOCK_PHYSICAL_PRESENCE)(const EFI_PEI_SERVICES **PeiServices);
typedef void (*SHELLENV_ENABLE_PAGE_BREAK)(INT32 StartRow, BOOLEAN AutoWrap);
struct _EFI_HII_IMAGE_PACKAGE_HDR {EFI_HII_PACKAGE_HEADER Header;UINT32 ImageInfoOffset;UINT32 PaletteInfoOffset;};
struct _SAL_UPDATE_PAL_INFO_BLOCK {struct _SAL_UPDATE_PAL_INFO_BLOCK *Next;struct SAL_UPDATE_PAL_DATA_BLOCK *DataBlock;UINT8 StoreChecksum;UINT8 Reserved[15];};
typedef void (*EFI_PCD_PROTOCOL_CALLBACK)(EFI_GUID *Guid, UINTN CallBackToken, void *TokenData, UINTN TokenDataSize);
typedef UINTN (*EFI_PCD_PROTOCOL_GET_SIZE)(const EFI_GUID *Guid, UINTN TokenNumber);
typedef BOOL (__stdcall *WinNtFileTimeToSystemTime)(const FILETIME *FileTime, LPSYSTEMTIME SystemTime);
typedef BOOL (__stdcall *WinNtSetConsoleCursorInfo)(HANDLE ConsoleOutput, const CONSOLE_CURSOR_INFO *ConsoleCursorInfo);
struct _EFI_HII_GIBT_SKIP1_BLOCK {EFI_HII_GLYPH_BLOCK Header;UINT8 SkipCount;};
struct _EFI_HII_GIBT_SKIP2_BLOCK {EFI_HII_GLYPH_BLOCK Header;UINT16 SkipCount;};
struct _EFI_HII_GUID_PACKAGE_HDR {EFI_HII_PACKAGE_HEADER Header;EFI_GUID Guid;};
struct _EFI_HII_IIBT_SKIP1_BLOCK {EFI_HII_IMAGE_BLOCK Header;UINT8 SkipCount;};
struct _EFI_HII_IIBT_SKIP2_BLOCK {EFI_HII_IMAGE_BLOCK Header;UINT16 SkipCount;};
struct _EFI_HII_SIBT_SKIP1_BLOCK {EFI_HII_STRING_BLOCK Header;UINT8 SkipCount;};
struct _EFI_HII_SIBT_SKIP2_BLOCK {EFI_HII_STRING_BLOCK Header;UINT16 SkipCount;};
struct tdTPM_CHANGEAUTH_VALIDATE {TPM_SECRET newAuthSecret;TPM_NONCE n1;};
typedef void (*EFI_PEI_CORE_ENTRY_POINT)(const EFI_SEC_PEI_HAND_OFF *SecCoreData, const EFI_PEI_PPI_DESCRIPTOR *PpiList);
typedef void (*EFI_PEI_PCD_PPI_CALLBACK)(EFI_GUID *Guid, UINTN CallBackToken, void *TokenData, UINTN TokenDatSize);
typedef UINTN (*EFI_PEI_PCD_PPI_GET_SIZE)(const EFI_GUID *Guid, UINTN TokenNumber);
typedef BOOLEAN (*PCD_PROTOCOL_GET_BOOLEAN)(UINTN TokenNumber);
typedef UINTN (*PCD_PROTOCOL_GET_EX_SIZE)(const EFI_GUID *Guid, UINTN TokenNumber);
typedef DWORD (__stdcall *WinNtWaitForSingleObject)(HANDLE hHandle, DWORD dwMilliseconds);
struct _EFI_HII_AIBT_EXT1_BLOCK {EFI_HII_ANIMATION_BLOCK Header;UINT8 BlockType2;UINT8 Length;};
struct _EFI_HII_GIBT_EXT1_BLOCK {EFI_HII_GLYPH_BLOCK Header;UINT8 BlockType2;UINT8 Length;};
struct _EFI_HII_IIBT_EXT1_BLOCK {EFI_HII_IMAGE_BLOCK Header;UINT8 BlockType2;UINT8 Length;};
struct _EFI_HII_SIBT_EXT1_BLOCK {EFI_HII_STRING_BLOCK Header;UINT8 BlockType2;UINT8 Length;};
struct _EFI_IFR_FORM_MAP_METHOD {EFI_STRING_ID MethodTitle;EFI_GUID MethodIdentifier;};
struct _EFI_IFR_INCONSISTENT_IF {EFI_IFR_OP_HEADER Header;EFI_STRING_ID Error;};
struct _EFI_IFR_QUESTION_REF3_2 {EFI_IFR_OP_HEADER Header;EFI_STRING_ID DevicePath;};
struct _EFI_IFR_VARSTORE_DEVICE {EFI_IFR_OP_HEADER Header;EFI_STRING_ID DevicePath;};
struct _EFI_IPSEC_ESP_ALGO_INFO {UINT8 EncAlgoId;UINTN EncKeyLength;void *EncKey;UINT8 AuthAlgoId;UINTN AuthKeyLength;void *AuthKey;};
struct _EFI_IPSEC_TUNNEL_OPTION {EFI_IP_ADDRESS LocalTunnelAddress;EFI_IP_ADDRESS RemoteTunnelAddress;EFI_IPSEC_TUNNEL_DF_OPTION DF;};
struct tdTPM_DELEGATE_SENSITIVE {TPM_STRUCTURE_TAG tag;TPM_SECRET authValue;};
union u_pxe_db_get_config_info {PXE_PCI_CONFIG_INFO pci;PXE_PCC_CONFIG_INFO pcc;};
typedef EFI_FILE_INFO *(*EFI_SHELL_GET_FILE_INFO)(SHELL_FILE_HANDLE FileHandle);
struct _EFI_HII_ANIMATION_CELL {UINT16 OffsetX;UINT16 OffsetY;EFI_IMAGE_ID ImageId;UINT16 Delay;};
struct _EFI_IPSEC_AH_ALGO_INFO {UINT8 AuthAlgoId;UINTN AuthKeyLength;void *AuthKey;};
typedef void *(*PCD_PPI_GET_EX_POINTER)(const EFI_GUID *Guid, UINTN TokenNumber);
typedef DWORD (__stdcall *WinNtGetFileAttributes)(LPCWSTR FileName);
struct _EFI_IFR_QUESTION_REF1 {EFI_IFR_OP_HEADER Header;EFI_QUESTION_ID QuestionId;};
struct _EFI_IP6_OVERRIDE_DATA {UINT8 Protocol;UINT8 HopLimit;UINT32 FlowLabel;};
struct tdTPM_ASYM_CA_CONTENTS {TPM_SYMMETRIC_KEY sessionKey;TPM_DIGEST idDigest;};
struct tdTPM_TRANSPORT_LOG_IN {TPM_STRUCTURE_TAG tag;TPM_DIGEST parameters;TPM_DIGEST pubKeyHash;};
typedef void (*EFI_SMM_ICHN_DISPATCH)(EFI_HANDLE DispatchHandle, EFI_SMM_ICHN_DISPATCH_CONTEXT *DispatchContext);
typedef void (*PCD_PROTOCOL_CALLBACK)(const EFI_GUID *CallBackGuid, UINTN CallBackToken, void *TokenData, UINTN TokenDataSize);
typedef EFI_DEVICE_PATH_PROTOCOL *(*SHELLENV_NAME_TO_PATH)(CHAR16 *Path);
typedef BOOL (__stdcall *WinNtFlushFileBuffers)(HANDLE);
typedef BOOL (__stdcall *WinNtSetConsoleTitleW)(LPCTSTR ConsoleTitle);
struct _EFI_IFR_NO_SUBMIT_IF {EFI_IFR_OP_HEADER Header;EFI_STRING_ID Error;};
struct _EFI_SEC_PEI_HAND_OFF {UINT16 DataSize;void *BootFirmwareVolumeBase;UINTN BootFirmwareVolumeSize;void *TemporaryRamBase;UINTN TemporaryRamSize;void *PeiTemporaryRamBase;UINTN PeiTemporaryRamSize;void *StackBase;UINTN StackSize;};
struct tdTPM_CMK_MA_APPROVAL {TPM_STRUCTURE_TAG tag;TPM_DIGEST migrationAuthorityDigest;};
struct tdTPM_KEY_HANDLE_LIST {UINT16 loaded;TPM_KEY_HANDLE handle[1];};
struct tdTPM_PERMANENT_FLAGS {TPM_STRUCTURE_TAG tag;BOOLEAN disable;BOOLEAN ownership;BOOLEAN deactivated;BOOLEAN readPubek;BOOLEAN disableOwnerClear;BOOLEAN allowMaintenance;BOOLEAN physicalPresenceLifetimeLock;BOOLEAN physicalPresenceHWEnable;BOOLEAN physicalPresenceCMDEnable;BOOLEAN CEKPUsed;BOOLEAN TPMpost;BOOLEAN TPMpostLock;BOOLEAN FIPS;BOOLEAN operator;BOOLEAN enableRevokeEK;BOOLEAN nvLocked;BOOLEAN readSRKPub;BOOLEAN tpmEstablished;BOOLEAN maintenanceDone;BOOLEAN disableFullDALogicInfo;};
typedef const CHAR16 *(*EFI_SHELL_GET_ENV_EX)(const CHAR16 *Name, UINT32 *Attributes);
typedef void (*EFI_SMM_GPI_DISPATCH)(EFI_HANDLE DispatchHandle, EFI_SMM_GPI_DISPATCH_CONTEXT *DispatchContext);
typedef void (*EFI_SMM_USB_DISPATCH)(EFI_HANDLE DispatchHandle, EFI_SMM_USB_DISPATCH_CONTEXT *DispatchContext);
typedef BOOL (__stdcall *WinNtRemoveDirectory)(LPCWSTR PathName);
struct _EFI_EAPOL_PORT_INFO {EFI_PORT_HANDLE PortNumber;UINT8 ProtocolVersion;UINT8 PaeCapabilities;};
struct _EFI_IFR_STRING_REF1 {EFI_IFR_OP_HEADER Header;EFI_STRING_ID StringId;};
struct _EFI_IP_ADDRESS_INFO {EFI_IP_ADDRESS Address;UINT8 PrefixLength;};
struct hid_class_descriptor {UINT8 DescriptorType;UINT16 DescriptorLength;};
struct tdTPM_DA_ACTION_TYPE {TPM_STRUCTURE_TAG tag;UINT32 actions;};
struct tdTPM_PCR_ATTRIBUTES {BOOLEAN pcrReset;TPM_LOCALITY_SELECTION pcrExtendLocal;TPM_LOCALITY_SELECTION pcrResetLocal;};
struct tdTPM_TRANSPORT_AUTH {TPM_STRUCTURE_TAG tag;TPM_AUTHDATA authData;};
typedef const CHAR16 *(*EFI_SHELL_GET_ALIAS)(const CHAR16 *Alias, BOOLEAN *Volatile);
typedef void (*EFI_SMM_SW_DISPATCH)(EFI_HANDLE DispatchHandle, EFI_SMM_SW_DISPATCH_CONTEXT *DispatchContext);
typedef void (*EFI_SMM_SX_DISPATCH)(EFI_HANDLE DispatchHandle, EFI_SMM_SX_DISPATCH_CONTEXT *DispatchContext);
typedef BOOLEAN (*PCD_PPI_GET_BOOLEAN)(UINTN TokenNumber);
typedef UINTN (*PCD_PPI_GET_EX_SIZE)(const EFI_GUID *Guid, UINTN TokenNumber);
typedef HGDIOBJ (__stdcall *WinNtGetStockObject)(INT32);
typedef BOOL (__stdcall *WinNtInvalidateRect)(HWND hWnd, const RECT *lpRect, BOOL bErase);
struct _EFI_HII_GLYPH_INFO {UINT16 Width;UINT16 Height;INT16 OffsetX;INT16 OffsetY;INT16 AdvanceX;};
struct _EFI_IFR_REFRESH_ID {EFI_IFR_OP_HEADER Header;EFI_GUID RefreshEventGroupId;};
struct s_pxe_db_get_status {PXE_UINT32 RxFrameLen;PXE_UINT32 reserved;PXE_UINT64 TxBuffer[32];};
struct s_pxe_db_initialize {PXE_UINT32 MemoryUsed;PXE_UINT16 TxBufCnt;PXE_UINT16 TxBufSize;PXE_UINT16 RxBufCnt;PXE_UINT16 RxBufSize;};
struct tdTPM_CMK_SIGTICKET {TPM_STRUCTURE_TAG tag;TPM_DIGEST verKeyDigest;TPM_DIGEST signedData;};
struct tdTPM_MSA_COMPOSITE {UINT32 MSAlist;TPM_DIGEST migAuthDigest[1];};
struct tdTPM_NV_ATTRIBUTES {TPM_STRUCTURE_TAG tag;UINT32 attributes;};
struct tdTPM_PCR_SELECTION {UINT16 sizeOfSelect;UINT8 pcrSelect[1];};
struct tdTPM_STCLEAR_FLAGS {TPM_STRUCTURE_TAG tag;BOOLEAN deactivated;BOOLEAN disableForceClear;BOOLEAN physicalPresence;BOOLEAN physicalPresenceLock;BOOLEAN bGlobalLock;};
struct tdTPM_STORE_PRIVKEY {UINT32 keyLength;UINT8 *key;};
typedef void (*EBC_DEBUGGER_DEBUG)(EFI_EBC_SIMPLE_DEBUGGER_PROTOCOL *This, VM_CONTEXT *VmPtr);
typedef UINT16 (*PCD_PROTOCOL_GET16)(UINTN TokenNumber);
typedef UINT32 (*PCD_PROTOCOL_GET32)(UINTN TokenNumber);
typedef UINT64 (*PCD_PROTOCOL_GET64)(UINTN TokenNumber);
typedef EFI_SHELL_INTERFACE *(*SHELLENV_NEW_SHELL)(EFI_HANDLE ImageHandle);
typedef BOOL (__stdcall *WinNtDestroyWindow)(HWND hWnd);
typedef DWORD (__stdcall *WinNtSuspendThread)(HANDLE hThread);
typedef MMRESULT (__stdcall *WinNttimeKillEvent)(UINT uTimerID);
struct _EFI_IFR_ANIMATION {EFI_IFR_OP_HEADER Header;EFI_ANIMATION_ID Id;};
struct _EFI_IFR_TO_STRING {EFI_IFR_OP_HEADER Header;UINT8 Format;};
struct tdTPM_DAA_JOINDATA {UINT8 DAA_join_u0[128];UINT8 DAA_join_u1[138];TPM_DIGEST DAA_digest_n0;};
struct tdTPM_EK_BLOB_AUTH {TPM_STRUCTURE_TAG tag;TPM_SECRET authValue;};
struct tdTPM_STORE_PUBKEY {UINT32 keyLength;UINT8 key[1];};
typedef SAL_RETURN_REGS (*EXTENDED_SAL_PROC)(UINT64 ClassGuidLo, UINT64 ClassGuidHi, UINT64 FunctionId, UINT64 Arg2, UINT64 Arg3, UINT64 Arg4, UINT64 Arg5, UINT64 Arg6, UINT64 Arg7, UINT64 Arg8);
typedef UINT8 (*PCD_PROTOCOL_GET8)(UINTN TokenNumber);
typedef HANDLE (__stdcall *WinNtGetStdHandle)(DWORD StdHandle);
typedef DWORD (__stdcall *WinNtResumeThread)(HANDLE hThread);
typedef BOOL (__stdcall *WinNtSetEndOfFile)(HANDLE FileHandle);
typedef BOOL (__stdcall *WinNtUpdateWindow)(HWND hWnd);
struct _EFI_IFR_ACTION_1 {EFI_IFR_OP_HEADER Header;EFI_IFR_QUESTION_HEADER Question;};
struct _EFI_IFR_EQ_ID_ID {EFI_IFR_OP_HEADER Header;EFI_QUESTION_ID QuestionId1;EFI_QUESTION_ID QuestionId2;};
struct _EFI_IFR_FORM_MAP {EFI_IFR_OP_HEADER Header;EFI_FORM_ID FormId;};
struct _EFI_IFR_RULE_REF {EFI_IFR_OP_HEADER Header;UINT8 RuleId;};
struct _EFI_IFR_SECURITY {EFI_IFR_OP_HEADER Header;EFI_GUID Permissions;};
struct _EFI_IMAGE_OUTPUT {UINT16 Width;UINT16 Height;union _EFI_IMAGE_OUTPUT___4FC8C3BF42F93F42A468A5773430D9F5 Image;};
struct _EFI_IPSEC_PAD_ID {BOOLEAN PeerIdValid;union _EFI_IPSEC_PAD_ID___13F599595FA3B2E59D359AF10D9E980C Id;};
struct s_pxe_cpb_receive {PXE_UINT64 BufferAddr;PXE_UINT32 BufferLen;PXE_UINT32 reserved;};
struct tdTPM_CMK_MIGAUTH {TPM_STRUCTURE_TAG tag;TPM_DIGEST msaDigest;TPM_DIGEST pubKeyDigest;};
struct tdTPM_DELEGATIONS {TPM_STRUCTURE_TAG tag;UINT32 delegateType;UINT32 per1;UINT32 per2;};
struct tdTPM_SELECT_SIZE {UINT8 major;UINT8 minor;UINT16 reqSize;};
typedef void (*PCD_PPI_CALLBACK)(const EFI_GUID *CallBackGuid, UINTN CallBackToken, void *TokenData, UINTN TokenDataSize);
typedef BOOLEAN (*UDP_IO_TO_CANCEL)(UDP_TX_TOKEN *Token, void *Context);
typedef BOOL (__stdcall *WinNtCloseHandle)(HANDLE Object);
typedef BOOL (__stdcall *WinNtFreeLibrary)(HANDLE ModHandle);
typedef HDC (__stdcall *WinNtGetWindowDC)(HWND hWnd);
typedef BOOL (__stdcall *WinNtSetFileTime)(HANDLE FileHandle, FILETIME *CreationTime, FILETIME *LastAccessTime, FILETIME *LastWriteTime);
typedef LPVOID (__stdcall *WinNtTlsGetValue)(DWORD dwTlsIndex);
struct _EFI_IFR_REFRESH {EFI_IFR_OP_HEADER Header;UINT8 RefreshInterval;};
struct _EFI_LOAD_OPTION {UINT32 Attributes;UINT16 FilePathListLength;};
typedef void (*EFI_PEI_SET_MEM)(void *Buffer, UINTN Size, UINT8 Value);
typedef UINTN (*UNICODE_S_PRINT)(CHAR16 *StartOfBuffer, UINTN BufferSize, const CHAR16 *FormatString, ...);
typedef BOOL (__stdcall *WinNtDeleteFile)(LPCTSTR FileName);
struct _EFI_IFR_MATCH2 {EFI_IFR_OP_HEADER Header;EFI_GUID SyntaxType;};
struct _EFI_IFR_UINT16 {EFI_IFR_OP_HEADER Header;UINT16 Value;};
struct _EFI_IFR_UINT32 {EFI_IFR_OP_HEADER Header;UINT32 Value;};
struct _EFI_IFR_UINT64 {EFI_IFR_OP_HEADER Header;UINT64 Value;};
typedef BOOL (__stdcall *WinNtFindClose)(HANDLE FindFile);
struct _EFILDRHANDOFF {UINTN MemDescCount;EFI_MEMORY_DESCRIPTOR *MemDesc;void *BfvBase;UINTN BfvSize;void *DxeIplImageBase;UINTN DxeIplImageSize;void *DxeCoreImageBase;UINTN DxeCoreImageSize;void *DxeCoreEntryPoint;};
struct _EFI_IFR_IMAGE {EFI_IFR_OP_HEADER Header;EFI_IMAGE_ID Id;};
struct _EFI_IFR_UINT8 {EFI_IFR_OP_HEADER Header;UINT8 Value;};
struct _EFI_KEY_STATE {UINT32 KeyShiftState;EFI_KEY_TOGGLE_STATE KeyToggleState;};
struct tdTPM_PCR_INFO {TPM_PCR_SELECTION pcrSelection;TPM_COMPOSITE_HASH digestAtRelease;TPM_COMPOSITE_HASH digestAtCreation;};
typedef UINTN (*ASCII_S_PRINT)(CHAR8 *StartOfBuffer, UINTN BufferSize, const CHAR8 *FormatString, ...);
typedef UINT16 (*PCD_PPI_GET16)(UINTN TokenNumber);
typedef UINT32 (*PCD_PPI_GET32)(UINTN TokenNumber);
typedef UINT64 (*PCD_PPI_GET64)(UINTN TokenNumber);
typedef BOOL (__stdcall *WinNtEndPaint)(HWND hWnd, const PAINTSTRUCT *lpPaint);
typedef BOOL (__stdcall *WinNtMoveFile)(LPCTSTR ExistingFileName, LPCTSTR NewFileName);
struct _EFI_IFR_FIND {EFI_IFR_OP_HEADER Header;UINT8 Format;};
struct _EFI_IFR_GUID {EFI_IFR_OP_HEADER Header;EFI_GUID Guid;};
struct _EFI_IFR_REF5 {EFI_IFR_OP_HEADER Header;EFI_IFR_QUESTION_HEADER Question;};
struct _EFI_IFR_RULE {EFI_IFR_OP_HEADER Header;UINT8 RuleId;};
struct _EFI_IFR_SPAN {EFI_IFR_OP_HEADER Header;UINT8 Flags;};
struct s_pxe_hw_undi {PXE_UINT32 Signature;PXE_UINT8 Len;PXE_UINT8 Fudge;PXE_UINT8 Rev;PXE_UINT8 IFcnt;PXE_UINT8 MajorVer;PXE_UINT8 MinorVer;PXE_UINT8 IFcntExt;PXE_UINT8 reserved;PXE_UINT32 Implementation;};
struct tdTPM_VERSION {TPM_VERSION_BYTE major;TPM_VERSION_BYTE minor;UINT8 revMajor;UINT8 revMinor;};
union u_pxe_ip_addr {PXE_IPV6 IPv6;PXE_IPV4 IPv4;};
typedef void (*PCD_CALLBACK)(const GUID *CallBackGuid, UINTN CallBackToken, void *TokenData, UINTN TokenDataSize);
typedef UINT8 (*PCD_PPI_GET8)(UINTN TokenNumber);
typedef void __stdcall TIMECALLBACK(UINT, UINT, DWORD, DWORD, DWORD);
typedef BOOL (__stdcall *WinNtTlsFree)(DWORD dwTlsIndex);
struct tdTPM_PUBKEY {TPM_KEY_PARMS algorithmParms;TPM_STORE_PUBKEY pubKey;};
typedef void (*EFI_SET_MEM)(void *Buffer, UINTN Size, UINT8 Value);
typedef HDC (__stdcall *WinNtGetDC)(HWND hWnd);
union u_pxe_undi {PXE_HW_UNDI hw;PXE_SW_UNDI sw;};
typedef SAL_RETURN_REGS (*SAL_PROC)(UINT64 FunctionId, UINT64 Arg1, UINT64 Arg2, UINT64 Arg3, UINT64 Arg4, UINT64 Arg5, UINT64 Arg6, UINT64 Arg7);
union s_pxe_cpb_nvdata_sparse___19EFFCE7218537726B6C299C17662D42___72A164B415E82380E188643B9ADB397A {PXE_UINT8 Byte;PXE_UINT16 Word;PXE_UINT32 Dword;};
union _28DB4FBE9CCCDE1C86BBB2321A60804C___FE2B1D9AD239749A6732AE19877CEB05 {DNS_HOST_TO_ADDR_DATA *H2AData;DNS_ADDR_TO_HOST_DATA *A2HData;DNS_GENERAL_LOOKUP_DATA *GLookupData;};
struct _63B58ABB6690812C9E02ADD697E36664___5BD987BD46EA8F9F7F2F7E2A8AC77E64 {UINT8 Indicator;UINT8 PlatformId;UINT16 SectionEntries;CHAR8 Id[28];};
struct _63B58ABB6690812C9E02ADD697E36664___8939B74F56EDEA9494CD062DBB9CCA20 {UINT8 Indicator;UINT8 PlatformId;UINT16 Reserved;CHAR8 ManufacId[24];UINT16 Checksum;UINT16 Id55AA;};
struct _63B58ABB6690812C9E02ADD697E36664___C41FF125555157F7F4869E4DBCC53082 {UINT8 Indicator;unsigned __int8 MediaType : 4;unsigned __int8 Reserved1 : 4;UINT16 LoadSegment;UINT8 SystemType;UINT8 Reserved2;UINT16 SectorCount;UINT32 Lba;};
struct _7C5F9768C94386CA7F4E7DC66B8830A3___A212324E7A459AFFA4D7658AFAB6C77C {UINT8 Type;CHAR8 Id[5];UINT8 Version;UINT8 Unused;CHAR8 SystemId[32];CHAR8 VolumeId[32];UINT8 Unused2[8];UINT32 VolSpaceSize[2];};
struct _A49E72078B76F4AC4F7118FBBDCD4631___2DC13699A76F9BC933E211ED4CAFE3CC {EFI_DHCP4_HEADER Header;UINT32 Magik;UINT8 Option[1];};
union _DD90A6460ECECB32C3E9F65C84643F1C___AD59633F046663C4886B84BC360D5A3B {DNS6_HOST_TO_ADDR_DATA *H2AData;DNS6_ADDR_TO_HOST_DATA *A2HData;DNS6_GENERAL_LOOKUP_DATA *GLookupData;};
union s_pxe_pcc_config_info___2F4D249696DEF23C47AB9F3C3556EA7B {PXE_UINT8 Byte[256];PXE_UINT16 Word[128];PXE_UINT32 Dword[64];};
union s_pxe_pci_config_info___412989C10B2DD518EBDBBC089E445D5C {UINT8 Byte[256];UINT16 Word[128];UINT32 Dword[64];};
union s_pxe_db_nvdata___41B437E8E7B04A71AA3DE9FFDB4ECD25 {PXE_UINT8 Byte[512];PXE_UINT16 Word[256];PXE_UINT32 Dword[128];};
struct pxe_device___659A000D21D539E7D9FC0CA6CF59ACAE {PXE_UINT32 BusType;PXE_UINT16 Bus;PXE_UINT8 Device;PXE_UINT8 Function;};
struct _EFI_HII_IIBT_IMAGE_8BIT_PALETTE_BLOCK {EFI_HII_IMAGE_BLOCK Header;UINT8 PaletteIndex;EFI_HII_IIBT_IMAGE_8BIT_BASE Bitmap;};
struct _EFI_HII_SIBT_STRINGS_SCSU_FONT_BLOCK {EFI_HII_STRING_BLOCK Header;UINT8 FontIdentifier;UINT16 StringCount;UINT8 StringText[1];};
struct _EFI_HII_IIBT_IMAGE_1BIT_TRANS_BLOCK {EFI_HII_IMAGE_BLOCK Header;UINT8 PaletteIndex;EFI_HII_IIBT_IMAGE_1BIT_BASE Bitmap;};
struct _EFI_HII_IIBT_IMAGE_4BIT_TRANS_BLOCK {EFI_HII_IMAGE_BLOCK Header;UINT8 PaletteIndex;EFI_HII_IIBT_IMAGE_4BIT_BASE Bitmap;};
struct _EFI_HII_IIBT_IMAGE_8BIT_TRANS_BLOCK {EFI_HII_IMAGE_BLOCK Header;UINT8 PaletteIndex;EFI_HII_IIBT_IMAGE_8BIT_BASE Bitmap;};
struct _EFI_HII_SIBT_STRING_UCS2_FONT_BLOCK {EFI_HII_STRING_BLOCK Header;UINT8 FontIdentifier;CHAR16 StringText[1];};
typedef BOOLEAN (*EFI_RUNTIME_CRYPT_RSA_PKCS1_VERIFY)(void *RsaContext, const UINT8 *MessageHash, UINTN HashLength, const UINT8 *Signature, UINTN SigLength);
typedef BOOL (__stdcall *WinNtGetNumberOfConsoleInputEvents)(HANDLE ConsoleInput, LPDWORD NumberOfEvents);
struct _EFI_HII_AIBT_OVERLAY_IMAGES_BLOCK {EFI_IMAGE_ID DftImageId;UINT16 Width;UINT16 Height;UINT16 CellCount;EFI_HII_ANIMATION_CELL AnimationCell[1];};
struct _EFI_HII_GIBT_GLYPHS_DEFAULT_BLOCK {EFI_HII_GLYPH_BLOCK Header;UINT16 Count;UINT8 BitmapData[1];};
struct _005E951D494B668346BD445CA4D8E682 {EFI_ACPI_6_0_FPDT_PERFORMANCE_RECORD_HEADER Header;UINT32 Reserved;UINT64 ResetEnd;UINT64 OsLoaderLoadImageStart;UINT64 OsLoaderStartImageStart;UINT64 ExitBootServicesEntry;UINT64 ExitBootServicesExit;};
struct _02920E45F2EA2A3AFAEE9BE480D935A9 {EFI_DEVICE_PATH_PROTOCOL Header;UINT32 Reserved;UINT64 WWN;UINT64 Lun;};
struct _02E47AE4B1191769ABD100C4DCCF3B8C {ACPI_SMALL_RESOURCE_HEADER Header;UINT8 Information;UINT16 BaseAddressMin;UINT16 BaseAddressMax;UINT8 Alignment;UINT8 Length;};
struct _04F9B4AC61B2378777D341FA7F453C9C {BOOLEAN UseDefaultSetting;EFI_IPv4_ADDRESS StationIp;EFI_IPv4_ADDRESS SubnetMask;UINT16 LocalPort;EFI_IPv4_ADDRESS GatewayIp;EFI_IPv4_ADDRESS ServerIp;UINT16 InitialServerPort;UINT16 TryCount;UINT16 TimeoutValue;};
struct _05C0B7DFCC4B801203DDDF0EC0F7B25C {EFI_DEVICE_PATH_PROTOCOL Header;UINT8 SasAddress[8];UINT8 Lun[8];UINT16 DeviceTopology;UINT16 RelativeTargetPort;};
struct _0738A23427E5503DBDE5DEE56C3C70A1 {UINT32 Bar[2];UINT8 PrimaryBus;UINT8 SecondaryBus;UINT8 SubordinateBus;UINT8 SecondaryLatencyTimer;UINT8 IoBase;UINT8 IoLimit;UINT16 SecondaryStatus;UINT16 MemoryBase;UINT16 MemoryLimit;UINT16 PrefetchableMemoryBase;UINT16 PrefetchableMemoryLimit;UINT32 PrefetchableBaseUpper32;UINT32 PrefetchableLimitUpper32;UINT16 IoBaseUpper16;UINT16 IoLimitUpper16;UINT8 CapabilityPtr;UINT8 Reserved[3];UINT32 ExpansionRomBAR;UINT8 InterruptLine;UINT8 InterruptPin;UINT16 BridgeControl;};
struct _08BCC68AFD0F82A72398BBF1008F4384 {ACPI_SMALL_RESOURCE_HEADER Header;UINT16 DmaRequestLine;UINT16 DmaChannel;UINT8 DmaTransferWidth;};
struct _0916FCECC27976C81B9ECD4BAD6A16A2 {EFI_COMMON_SECTION_HEADER CommonHeader;EFI_GUID SectionDefinitionGuid;UINT16 DataOffset;UINT16 Attributes;};
union _0948BB90A898DF0B2BCF28CC42D77B5E {EFI_IPSEC_SPD_SELECTOR SpdSelector;EFI_IPSEC_SA_ID SaId;EFI_IPSEC_PAD_ID PadId;};
struct _09B7F6ABCC0579263631A2B4F04B2C9E {UINT32 Signature;UINT32 Length;UINT32 HardwareSignature;UINT32 FirmwareWakingVector;UINT32 GlobalLock;UINT32 Flags;UINT64 XFirmwareWakingVector;UINT8 Version;UINT8 Reserved0[3];UINT32 OspmFlags;UINT8 Reserved1[24];};
struct _0B50ACA466291C2012B3546AEC85F4D2 {UINT8 BootStrapCode[440];UINT8 UniqueMbrSignature[4];UINT8 Unknown[2];MBR_PARTITION_RECORD Partition[4];UINT16 Signature;};
struct _0B58B179106A72DC5971B21BA2C44F1E {UINT8 Type;UINT8 Reserved[3];UINT32 NumberOfDomains;SAL_COHERENCE_DOMAIN_INFO *DomainInformation;};
struct _0BD318F0FBBE20ABFA06468A5B13DA9A {UINT8 Desc;UINT16 Len;UINT8 ResType;UINT8 GenFlag;UINT8 SpecificFlag;UINT64 AddrSpaceGranularity;UINT64 AddrRangeMin;UINT64 AddrRangeMax;UINT64 AddrTranslationOffset;UINT64 AddrLen;};
struct _0D2B439BBCFA9107A45A2892FA968ED5 {ACPI_LARGE_RESOURCE_HEADER Header;UINT8 ResType;UINT8 GenFlag;UINT8 SpecificFlag;UINT32 AddrSpaceGranularity;UINT32 AddrRangeMin;UINT32 AddrRangeMax;UINT32 AddrTranslationOffset;UINT32 AddrLen;};
union _0E23B8B4FFDB8955E98672FF836F7A4E {CHAR8 *Ascii;CHAR16 *Unicode;EFI_STATUS_CODE_STRING_TOKEN Hii;};
struct _0EB51215E6D24F7F450276E06012FB33 {UINT32 Signature;UINT16 VendorId;UINT16 DeviceId;UINT16 DeviceListOffset;UINT16 Length;UINT8 Revision;UINT8 ClassCode[3];UINT16 ImageLength;UINT16 CodeRevision;UINT8 CodeType;UINT8 Indicator;UINT16 MaxRuntimeImageLength;UINT16 ConfigUtilityCodeHeaderOffset;UINT16 DMTFCLPEntryPointOffset;};
struct _0F200C5991ECE5F6E83129578DBE64CB {UINT16 Fcw;UINT16 Fsw;UINT16 Ftw;UINT16 Opcode;UINT32 Eip;UINT16 Cs;UINT16 Reserved1;UINT32 DataOffset;UINT16 Ds;UINT8 Reserved2[10];UINT8 St0Mm0[10];UINT8 Reserved3[6];UINT8 St1Mm1[10];UINT8 Reserved4[6];UINT8 St2Mm2[10];UINT8 Reserved5[6];UINT8 St3Mm3[10];UINT8 Reserved6[6];UINT8 St4Mm4[10];UINT8 Reserved7[6];UINT8 St5Mm5[10];UINT8 Reserved8[6];UINT8 St6Mm6[10];UINT8 Reserved9[6];UINT8 St7Mm7[10];UINT8 Reserved10[6];UINT8 Xmm0[16];UINT8 Xmm1[16];UINT8 Xmm2[16];UINT8 Xmm3[16];UINT8 Xmm4[16];UINT8 Xmm5[16];UINT8 Xmm6[16];UINT8 Xmm7[16];UINT8 Reserved11[224];};
struct _135A40A0509E9B3223D5309856D0560B {PCI_EXPRESS_EXTENDED_CAPABILITIES_HEADER Header;UINT32 LinkControl3;UINT32 LaneErrorStatus;UINT16 EqualizationControl[2];};
struct _1362BCD7E4BA59AEBA1005AB99DE937D {UINT16 Fcw;UINT16 Fsw;UINT16 Ftw;UINT16 Opcode;UINT32 Eip;UINT16 Cs;UINT16 Rsvd1;UINT32 DataOffset;UINT16 Ds;UINT8 Rsvd2[10];UINT8 St0Mm0[10];UINT8 Rsvd3[6];UINT8 St0Mm1[10];UINT8 Rsvd4[6];UINT8 St0Mm2[10];UINT8 Rsvd5[6];UINT8 St0Mm3[10];UINT8 Rsvd6[6];UINT8 St0Mm4[10];UINT8 Rsvd7[6];UINT8 St0Mm5[10];UINT8 Rsvd8[6];UINT8 St0Mm6[10];UINT8 Rsvd9[6];UINT8 St0Mm7[10];UINT8 Rsvd10[6];UINT8 Rsvd11[352];};
struct _13B6FAE3354B456DA36A9D855F5E14C8 {UINT32 CardBusSocketReg;UINT8 Cap_Ptr;UINT8 Reserved;UINT16 SecondaryStatus;UINT8 PciBusNumber;UINT8 CardBusBusNumber;UINT8 SubordinateBusNumber;UINT8 CardBusLatencyTimer;UINT32 MemoryBase0;UINT32 MemoryLimit0;UINT32 MemoryBase1;UINT32 MemoryLimit1;UINT32 IoBase0;UINT32 IoLimit0;UINT32 IoBase1;UINT32 IoLimit1;UINT8 InterruptLine;UINT8 InterruptPin;UINT16 BridgeControl;};
union _149F3B707450891669292D33A510652F {UINT32 Addr[4];EFI_IPv4_ADDRESS v4;EFI_IPv6_ADDRESS v6;};
struct _15A49F419DCE8915B951AE1411FD501B {SMBIOS_STRUCTURE Hdr;SMBIOS_TABLE_STRING ManufacturerName;UINT8 Connections;};
struct _164C5566F9B29D1B4EF89603CE89E043 {EFI_DRIVER_HANOFF_ENUM Type;EFI_DEVICE_PATH_PROTOCOL *DevicePath;void *PciRomImage;UINT64 PciRomSize;};
struct _165CEA13633C6239E6601DDEAE0E5013 {EFI_HII_PACK_HEADER Header;RELOFST LanguageNameString;RELOFST PrintableLanguageName;UINT32 NumStringPointers;UINT32 Attributes;};
struct _16D263F2539C0B1C79D62B0DEF479AC3 {UINT32 VendorSpecificId;UINT16 SubsystemDeviceId;UINT16 SubsystemVendorId;UINT16 Interface;UINT16 DeviceId;UINT16 VendorId;UINT8 VendorRevision;UINT8 DeviceCapabilities;};
struct _17BC026F246D15D039186392C4AC032A {STRING_REF ManagementDeviceComponentDescription;EFI_INTER_LINK_DATA ManagementDeviceLink;EFI_INTER_LINK_DATA ManagementDeviceComponentLink;EFI_INTER_LINK_DATA ManagementDeviceThresholdLink;UINT8 ComponentType;};
struct _189D1DC770D3AF583D5731F1D975520D {EFI_DEVICE_PATH_PROTOCOL Header;UINT16 VendorId;UINT16 ProductId;UINT8 DeviceClass;UINT8 DeviceSubClass;UINT8 DeviceProtocol;};
struct _18EA1675A7C3746C57C2E2D91374C2FB {EFI_ACPI_6_0_PMMT_COMMON_MEMORY_AGGREGATOR_DEVICE_STRUCTURE Header;UINT16 PhysicalComponentIdentifier;UINT16 Reserved;UINT32 SizeOfDimm;UINT32 SmbiosHandle;};
struct _1900D0CF38613B02DB3CF0343CF6EF59 {EFI_ACPI_DESCRIPTION_HEADER Header;UINT32 Reserved1;UINT64 Reserved2;};
struct _194EC0185A34D4795B973BC338193054 {EFI_ACPI_5_0_FPDT_PERFORMANCE_RECORD_HEADER Header;UINT32 ResumeCount;UINT64 FullResume;UINT64 AverageResume;};
struct _1B75C64F3853882ACF28C9882F2A7EE6 {UINT8 Type;UINT8 Length;UINT16 Flags;UINT32 GlobalSystemInterruptVector;};
struct _1B987404B564D530EFBB6B88FB26FA27 {UINT16 OpCode;UINT64 Block;UINT8 Data[1];};
struct _1BADC5D7EB127C90EDBAFF16C8975039 {ACPI_LARGE_RESOURCE_HEADER Header;UINT8 ResType;UINT8 GenFlag;UINT8 SpecificFlag;UINT64 AddrSpaceGranularity;UINT64 AddrRangeMin;UINT64 AddrRangeMax;UINT64 AddrTranslationOffset;UINT64 AddrLen;};
struct _1BB6702D0F95E9E88DF05157AF2B5B12 {CHAR16 *HostName;EFI_IPv4_ADDRESS *IpAddress;UINT32 Timeout;};
struct _1C16E1C08D15DE2A87D351D2ED5ECB7C {PCI_EXPRESS_EXTENDED_CAPABILITIES_HEADER Header;UINT16 AcsCapability;UINT16 AcsControl;UINT8 EgressControlVectorArray[1];};
struct _1D18BD375A46810C6FF3BC7DE3F3FFCD {EFI_STATUS_CODE_DATA DataHeader;UINT32 Bar;UINT16 DevicePathSize;UINT16 ReqResSize;UINT16 AllocResSize;};
struct _1D968FBACBA87C9F0C85783A77EF2C95 {UINT8 Type;UINT8 *Buffer;UINT16 BufferLen;EFI_IFR_TYPE_VALUE Value;};
struct _1DB444471397DD3F559BE290F14258FA {UINT16 Tag;UINT16 Type;UINT32 Length;UINT8 KeyAttributeData[1];};
struct _1F0483A856E91CBF88271525A8766DD2 {UINT32 Signature;UINT32 PhysicalAddress;UINT8 Length;UINT8 SpecRev;UINT8 Checksum;UINT8 FeatureByte1;FEATUREBYTE2_5 FeatureByte2_5;};
struct _1FD5E1697B5014547CA1AF0794430D19 {SMBIOS_STRUCTURE Hdr;UINT8 ErrorType;UINT8 ErrorGranularity;UINT8 ErrorOperation;UINT32 VendorSyndrome;UINT32 MemoryArrayErrorAddress;UINT32 DeviceErrorAddress;UINT32 ErrorResolution;};
struct _1FE9337B5A71DEC04A03C63F34E65E8A {UINT16 Type;UINT16 SourceId;UINT8 Reserved0[2];UINT32 NumberOfRecordsToPreAllocate;UINT32 MaxSectionsPerRecord;UINT32 MaxRawDataLength;};
struct _2216D4214E265766C1A0B0A7C6BAA199 {UINT8 Type;UINT8 Length;EFI_ACPI_4_0_HARDWARE_ERROR_NOTIFICATION_CONFIGURATION_WRITE_ENABLE_STRUCTURE ConfigurationWriteEnable;UINT32 PollInterval;UINT32 Vector;UINT32 SwitchToPollingThresholdValue;UINT32 SwitchToPollingThresholdWindow;UINT32 ErrorThresholdValue;UINT32 ErrorThresholdWindow;};
struct _22C9BF1ED3B52C9A62C27D46097EFE95 {EFI_UDP6_SESSION_DATA *UdpSessionData;UINT32 DataLength;UINT32 FragmentCount;EFI_UDP6_FRAGMENT_DATA FragmentTable[1];};
struct _260E0CDB7AC319793FEFB6E6E6BADEDC {UINT8 EntryLength;UINT16 ReferencedHandle;UINT8 ReferencedOffset;SMBIOS_TABLE_STRING EntryString;UINT8 Value[1];};
struct _263823646A9EDCA988CE12E2C7912492 {EFI_PHYSICAL_ADDRESS MemoryDeviceStartAddress;EFI_PHYSICAL_ADDRESS MemoryDeviceEndAddress;EFI_INTER_LINK_DATA PhysicalMemoryDeviceLink;EFI_INTER_LINK_DATA PhysicalMemoryArrayLink;UINT8 MemoryDevicePartitionRowPosition;UINT8 MemoryDeviceInterleavePosition;UINT8 MemoryDeviceInterleaveDataDepth;};
struct _2683B887276D2C99DB7E6707206C3541 {SMRAM_PROFILE_PARAMETER_HEADER Header;UINT64 ProfileSize;PHYSICAL_ADDRESS ProfileBuffer;};
struct _26E1A5A6ABD02F217B53F396064F4D8A {STRING_REF OnBoardDeviceDescription;EFI_MISC_ONBOARD_DEVICE_STATUS OnBoardDeviceStatus;EFI_DEVICE_PATH_PROTOCOL OnBoardDevicePath;};
struct _27F8FE6A6BCF7AEB14041AF9ACCB4FC7 {UINT32 EAX;UINT32 EBX;UINT32 ECX;UINT32 EDX;UINT32 ESI;UINT32 EDI;EFI_EFLAGS_REG EFlags;UINT16 ES;UINT16 CS;UINT16 SS;UINT16 DS;UINT16 FS;UINT16 GS;UINT32 EBP;UINT32 ESP;};
struct _2B2441F12FFFDAC29B95546593891D3F {EFI_ACPI_DESCRIPTION_HEADER Header;UINT32 Flags;UINT64 Reserved;};
struct _2BD7C335F0DD895A4E1D3C8C0D32D59C {EFI_COMMON_SECTION_HEADER CommonHeader;UINT16 BuildNumber;CHAR16 VersionString[1];};
struct _2BFE4317F769CC510077190B28AFB68C {BOOLEAN Push;BOOLEAN Urgent;UINT32 DataLength;UINT32 FragmentCount;EFI_TCP6_FRAGMENT_DATA FragmentTable[1];};
struct _318BB5C1C3DF58EA36C90E5CB8A1C7D8 {EFI_BOOT_KEY_DATA KeyData;UINT32 BootOptionCrc;UINT16 BootOption;};
struct _31E78C603A0975994DAAE085398C0614 {UINT16 Type;UINT16 Version;UINT16 Length;UINT16 PatrolScrubCommand;UINT64 RequestedAddressRange[2];UINT64 ActualAddressRange[2];UINT16 Flags;UINT8 RequestedSpeed;};
struct _3300059DD91743924CE884B6AAF6965C {UINT8 EntryType;UINT8 Id;UINT8 Ver;EFI_LEGACY_MP_TABLE_ENTRY_IOAPIC_FLAGS Flags;UINT32 Address;};
struct _33744E832FE3B5445A858CFCD8D3D200 {ACPI_LARGE_RESOURCE_HEADER Header;UINT8 RevisionId;UINT8 ConnectionType;UINT16 GeneralFlags;UINT16 InterruptFlags;UINT8 PinConfiguration;UINT16 OutputDriveStrength;UINT16 DebounceTimeout;UINT16 PinTableOffset;UINT8 ResourceSourceIndex;UINT16 ResourceSourceNameOffset;UINT16 VendorDataOffset;UINT16 VendorDataLength;};
struct _3434E7F1690FD369EDEA019F51C2EFC7 {UINT8 TypeOfService;UINT8 TimeToLive;EFI_TCP4_ACCESS_POINT AccessPoint;EFI_TCP4_OPTION *ControlOption;};
struct _359310853D1A7D73E5E094BBD8FC83B2 {EFI_ACPI_6_0_FPDT_PERFORMANCE_RECORD_HEADER Header;UINT32 Reserved;UINT64 S3PerformanceTablePointer;};
struct _35BD40F66A9DD04452C11345A7455F75 {EFI_ACPI_6_0_PMMT_COMMON_MEMORY_AGGREGATOR_DEVICE_STRUCTURE Header;UINT32 ReadLatency;UINT32 WriteLatency;UINT32 ReadBandwidth;UINT32 WriteBandwidth;UINT16 OptimalAccessUnit;UINT16 OptimalAccessAlignment;UINT16 Reserved;UINT16 NumberOfProximityDomains;};
struct _36291DB4675549E3BB2DB664E05FF826 {UINT64 Timeout;void *InDataBuffer;void *OutDataBuffer;void *SenseData;void *Cdb;UINT32 InTransferLength;UINT32 OutTransferLength;UINT8 CdbLength;UINT8 DataDirection;UINT8 HostAdapterStatus;UINT8 TargetStatus;UINT8 SenseDataLength;};
struct _365641D7BE1820E0053F489ED61CB991 {unsigned __int8 HeadLen : 4;unsigned __int8 Ver : 4;UINT8 Tos;UINT16 TotalLen;UINT16 Id;UINT16 Fragment;UINT8 Ttl;UINT8 Protocol;UINT16 Checksum;IP4_ADDR Src;IP4_ADDR Dst;};
struct _368C5796E3D91D2922D841C2984290BA {BOOLEAN UrgentFlag;UINT32 DataLength;UINT32 FragmentCount;EFI_TCP4_FRAGMENT_DATA FragmentTable[1];};
struct _36C6A5B1DF7611678118B938F91052AA {EFI_PCI_CAPABILITY_HDR Hdr;UINT16 MsgCtrlReg;UINT32 MsgAddrRegLsdw;UINT32 MsgAddrRegMsdw;UINT16 MsgDataReg;};
struct _36FAC1EDEAA205A7F31A86DB529B3B5A {UINT32 ReceivedQueueTimeoutValue;UINT32 TransmitQueueTimeoutValue;UINT16 ProtocolTypeFilter;BOOLEAN EnableUnicastReceive;BOOLEAN EnableMulticastReceive;BOOLEAN EnableBroadcastReceive;BOOLEAN EnablePromiscuousReceive;BOOLEAN FlushQueuesOnReset;BOOLEAN EnableReceiveTimestamps;BOOLEAN DisableBackgroundPolling;};
struct _37E9EA388AA4ABB1994F5C559292B032 {EFI_ACPI_DATA_TABLE UefiAcpiDataTable;UINT32 SwSmiNumber;UINT64 BufferPtrAddress;};
struct _383942B824C6F4B8025A7565ACA7F358 {UINT16 Fcw;UINT16 Fsw;UINT16 Ftw;UINT16 Opcode;UINT64 Rip;UINT64 DataOffset;UINT8 Reserved1[8];UINT8 St0Mm0[10];UINT8 Reserved2[6];UINT8 St1Mm1[10];UINT8 Reserved3[6];UINT8 St2Mm2[10];UINT8 Reserved4[6];UINT8 St3Mm3[10];UINT8 Reserved5[6];UINT8 St4Mm4[10];UINT8 Reserved6[6];UINT8 St5Mm5[10];UINT8 Reserved7[6];UINT8 St6Mm6[10];UINT8 Reserved8[6];UINT8 St7Mm7[10];UINT8 Reserved9[6];UINT8 Xmm0[16];UINT8 Xmm1[16];UINT8 Xmm2[16];UINT8 Xmm3[16];UINT8 Xmm4[16];UINT8 Xmm5[16];UINT8 Xmm6[16];UINT8 Xmm7[16];UINT8 Reserved11[224];};
struct _38895A73E62827E708AC1BEEDA34D9F2 {UINT64 Signature;EFI_PHYSICAL_ADDRESS EfiSystemTableBase;UINT32 Crc32;};
struct _39AC5BAB33C1EA968D16AFCF90882C1F {UINT8 Type;UINT8 Length;UINT8 IoApicId;UINT8 Reserved;UINT32 GlobalSystemInterruptBase;UINT64 IoSapicAddress;};
struct _39B5C1DD9F9D2621C8E989C433C84D5E {SAL_SEC_HEADER SectionHeader;UINT64 ValidationBits;UINT8 SmbiosEventType;UINT8 SmbiosLength;UINT8 SmbiosBcdTimeStamp[6];};
struct _3B0303FF1442A3EC45A1160316AE81ED {EFI_IPv6_ADDRESS Neighbor;EFI_MAC_ADDRESS LinkAddress;EFI_IP6_NEIGHBOR_STATE State;};
struct _3C9AB105FD28B8288E14BA99F6B77FA1 {unsigned __int8 BootBlockUpdate : 1;unsigned __int8 SpareComplete : 1;unsigned __int8 DestinationComplete : 1;unsigned __int8 Reserved : 5;EFI_LBA Lba;UINT64 Offset;UINT64 Length;INT64 RelativeOffset;};
struct _3D3EAA90EBA362C2D0ED1CB8B9602510 {EFI_ACPI_DESCRIPTION_HEADER Header;UINT32 BootErrorRegionLength;UINT64 BootErrorRegion;};
struct _3D86227C073D5D6981DC2466093EFB4F {UINT16 Type;UINT16 SourceId;UINT8 Reserved0[2];UINT8 Flags;UINT8 Enabled;UINT32 NumberOfRecordsToPreAllocate;UINT32 MaxSectionsPerRecord;UINT32 Bus;UINT16 Device;UINT16 Function;UINT16 DeviceControl;UINT8 Reserved1[2];UINT32 UncorrectableErrorMask;UINT32 UncorrectableErrorSeverity;UINT32 CorrectableErrorMask;UINT32 AdvancedErrorCapabilitiesAndControl;};
struct _3DE8A515DD1D02BD5298172417C1D801 {EFI_ACPI_5_1_FPDT_PERFORMANCE_RECORD_HEADER Header;UINT32 Reserved;UINT64 S3PerformanceTablePointer;};
struct _3E2A0AAC0C0D5604E6E5BFB35D58D3CA {UINT32 Signature;EFI_ACPI_5_1_PCCT_GENERIC_SHARED_MEMORY_REGION_COMMAND Command;EFI_ACPI_5_1_PCCT_GENERIC_SHARED_MEMORY_REGION_STATUS Status;};
struct _3E3873B2DA85758D86854F8EC24C2D5B {AUTH_NODE_HEADER Header;UINT8 RadiusIpAddr[16];UINT16 Reserved;UINT8 NasIpAddr[16];UINT16 NasSecretLength;UINT8 NasSecret[1];};
struct _3EBF2BE0AB8CBDCE959F2072C14A3CC4 {UINT8 AnchorString[4];UINT8 EntryPointStructureChecksum;UINT8 EntryPointLength;UINT8 MajorVersion;UINT8 MinorVersion;UINT16 MaxStructureSize;UINT8 EntryPointRevision;UINT8 FormattedArea[5];UINT8 IntermediateAnchorString[5];UINT8 IntermediateChecksum;UINT16 TableLength;UINT32 TableAddress;UINT16 NumberOfSmbiosStructures;UINT8 SmbiosBcdRevision;};
struct _41A2EC42EC7C63F3CC0A9F189777A6A6 {UINT32 Signature;UINT32 Length;UINT8 Revision;UINT8 Checksum;CHAR8 OemId[6];CHAR8 OemTableId[8];UINT32 OemRevision;UINT32 CreatorId;UINT32 CreatorRevision;};
struct _4335EF5DE1507A30C4F68F5E4266EBBA {UINT16 SwAddressType;UINT8 SwAddressLength;void *StationAddress;UINT32 EntryTimeOut;UINT32 RetryCount;UINT32 RetryTimeOut;};
struct _4343C1A1029A5CC2D699B5A65D1D98B0 {UINT8 AnchorString[5];UINT8 EntryPointStructureChecksum;UINT8 EntryPointLength;UINT8 MajorVersion;UINT8 MinorVersion;UINT8 DocRev;UINT8 EntryPointRevision;UINT8 Reserved;UINT32 TableMaximumSize;UINT64 TableAddress;};
struct _43A0E8C65EC56F9D699C6118165E9DE1 {union _43A0E8C65EC56F9D699C6118165E9DE1___0116443B75BBA1B64EDB148A57294B61 Data;UINTN HeaderCount;EFI_HTTP_HEADER *Headers;UINTN BodyLength;void *Body;};
struct _440914D3252E6E454F55D4FFE5D43D8B {UINT16 config;UINT16 obsolete_1;UINT16 specific_config;UINT16 obsolete_3;UINT16 retired_4_5[2];UINT16 obsolete_6;UINT16 cfa_reserved_7_8[2];UINT16 retired_9;CHAR8 SerialNo[20];UINT16 retired_20_21[2];UINT16 obsolete_22;CHAR8 FirmwareVer[8];CHAR8 ModelName[40];UINT16 multi_sector_cmd_max_sct_cnt;UINT16 trusted_computing_support;UINT16 capabilities_49;UINT16 capabilities_50;UINT16 obsolete_51_52[2];UINT16 field_validity;UINT16 obsolete_54_58[5];UINT16 multi_sector_setting;UINT16 user_addressable_sectors_lo;UINT16 user_addressable_sectors_hi;UINT16 obsolete_62;UINT16 multi_word_dma_mode;UINT16 advanced_pio_modes;UINT16 min_multi_word_dma_cycle_time;UINT16 rec_multi_word_dma_cycle_time;UINT16 min_pio_cycle_time_without_flow_control;UINT16 min_pio_cycle_time_with_flow_control;UINT16 additional_supported;UINT16 reserved_70;UINT16 reserved_71_74[4];UINT16 queue_depth;UINT16 serial_ata_capabilities;UINT16 reserved_77;UINT16 serial_ata_features_supported;UINT16 serial_ata_features_enabled;UINT16 major_version_no;UINT16 minor_version_no;UINT16 command_set_supported_82;UINT16 command_set_supported_83;UINT16 command_set_feature_extn;UINT16 command_set_feature_enb_85;UINT16 command_set_feature_enb_86;UINT16 command_set_feature_default;UINT16 ultra_dma_mode;UINT16 time_for_security_erase_unit;UINT16 time_for_enhanced_security_erase_unit;UINT16 advanced_power_management_level;UINT16 master_password_identifier;UINT16 hardware_configuration_test_result;UINT16 obsolete_94;UINT16 stream_minimum_request_size;UINT16 streaming_transfer_time_for_dma;UINT16 streaming_access_latency_for_dma_and_pio;UINT16 streaming_performance_granularity[2];UINT16 maximum_lba_for_48bit_addressing[4];UINT16 streaming_transfer_time_for_pio;UINT16 max_no_of_512byte_blocks_per_data_set_cmd;UINT16 phy_logic_sector_support;UINT16 interseek_delay_for_iso7779;UINT16 world_wide_name[4];UINT16 reserved_for_128bit_wwn_112_115[4];UINT16 reserved_for_technical_report;UINT16 logic_sector_size_lo;UINT16 logic_sector_size_hi;UINT16 features_and_command_sets_supported_ext;UINT16 features_and_command_sets_enabled_ext;UINT16 reserved_121_126[6];UINT16 obsolete_127;UINT16 security_status;UINT16 vendor_specific_129_159[31];UINT16 cfa_power_mode;UINT16 reserved_for_compactflash_161_167[7];UINT16 device_nominal_form_factor;UINT16 is_data_set_cmd_supported;CHAR8 additional_product_identifier[8];UINT16 reserved_174_175[2];CHAR8 media_serial_number[60];UINT16 sct_command_transport;UINT16 reserved_207_208[2];UINT16 alignment_logic_in_phy_blocks;UINT16 write_read_verify_sector_count_mode3[2];UINT16 verify_sector_count_mode2[2];UINT16 nv_cache_capabilities;UINT16 nv_cache_size_in_logical_block_lsw;UINT16 nv_cache_size_in_logical_block_msw;UINT16 nominal_media_rotation_rate;UINT16 reserved_218;UINT16 nv_cache_options;UINT16 write_read_verify_mode;UINT16 reserved_221;UINT16 transport_major_revision_number;UINT16 transport_minor_revision_number;UINT16 reserved_224_229[6];UINT64 extended_no_of_addressable_sectors;UINT16 min_number_per_download_microcode_mode3;UINT16 max_number_per_download_microcode_mode3;UINT16 reserved_236_254[19];UINT16 integrity_word;};
struct _44CD0FFB1E5A9FF01876F1F6AAADC243 {UINT32 MediaId;BOOLEAN RemovableMedia;BOOLEAN MediaPresent;BOOLEAN LogicalPartition;BOOLEAN ReadOnly;BOOLEAN WriteCaching;UINT32 BlockSize;UINT32 IoAlign;EFI_LBA LastBlock;EFI_LBA LowestAlignedLba;UINT32 LogicalBlocksPerPhysicalBlock;UINT32 OptimalTransferLengthGranularity;};
struct _45E74D44F4DD61EBC22288307E34230E {EFI_HANDLE InstanceHandle;EFI_IPv6_ADDRESS LocalAddress;UINT16 LocalPort;EFI_IPv6_ADDRESS RemoteAddress;UINT16 RemotePort;};
struct _45F2A5B0079B86285D2438A26C66E8CF {SMM_ATTRIBUTES SmmAttributes;SMM_FUNCTION SmmFunction;UINT8 SmmPort;UINT8 SmmData;};
struct _475F28E1336F170E4F5CA435530F1271 {FRAMEWORK_EFI_IFR_OP_HEADER Header;UINT16 QuestionId;UINT8 StorageWidth;};
struct _491D735FCC2C7A181F51DF61FB6548E9 {UINT8 Access;UINT8 Reserved1[7];UINT32 IntEnable;UINT8 IntVector;UINT8 Reserved2[3];UINT32 IntSts;UINT32 IntfCapability;UINT8 Status;UINT16 BurstCount;UINT8 Reserved3[9];UINT32 DataFifo;UINT8 Reserved4[3800];UINT16 Vid;UINT16 Did;UINT8 Rid;UINT8 TcgDefined[123];UINT32 LegacyAddress1;UINT32 LegacyAddress1Ex;UINT32 LegacyAddress2;UINT32 LegacyAddress2Ex;UINT8 VendorDefined[112];};
struct _4C175177D1E5403EA4DC6D4A491E917E {PCI_EXPRESS_EXTENDED_CAPABILITIES_HEADER Header;UINT32 UncorrectableErrorStatus;UINT32 UncorrectableErrorMask;UINT32 UncorrectableErrorSeverity;UINT32 CorrectableErrorStatus;UINT32 CorrectableErrorMask;UINT32 AdvancedErrorCapabilitiesAndControl;UINT32 HeaderLog;UINT32 RootErrorCommand;UINT32 RootErrorStatus;UINT16 ErrorSourceIdentification;UINT16 CorrectableErrorSourceIdentification;UINT32 TlpPrefixLog[4];};
struct _4D7D100F6A45674E78C5FF6AF9A9AD7E {EFI_IP_ADDRESS MCastIp;EFI_PXE_BASE_CODE_UDP_PORT CPort;EFI_PXE_BASE_CODE_UDP_PORT SPort;UINT16 ListenTimeout;UINT16 TransmitTimeout;};
struct _4E2DDC218E68011859DBCA0F5D8383DB {UINT64 BaseAddress;UINT64 Length;UINT64 Type;UINT32 Msr;BOOLEAN Valid;BOOLEAN Used;};
struct _4E39C5AFB1C491ADEFB864B6659C7AD8 {UINT16 StationPort;EFI_IPv6_ADDRESS RemoteIp;UINT16 RemotePort;BOOLEAN ActiveFlag;};
struct _4ED57D1C5AE8E587D3EBCE3C708596AE {UINT32 Signature;EFI_ACPI_6_0_PCCT_GENERIC_SHARED_MEMORY_REGION_COMMAND Command;EFI_ACPI_6_0_PCCT_GENERIC_SHARED_MEMORY_REGION_STATUS Status;};
struct _4F3DD3A2627D1E5DA0774D7D31FB1A93 {EFI_HII_FONT_STYLE FontStyle;UINT16 FontSize;CHAR16 FontName[1];};
struct _4F3EC2B7A3FD85CF7F6D885D65735F61 {EFI_DEVICE_PATH_PROTOCOL Header;UINT32 Reserved;UINT8 WWN[8];UINT8 Lun[8];};
struct _4F648B37B9CF8BEF66D581BE4A3A925C {UINT16 Type;UINT16 Length;EFI_ACPI_6_0_NFIT_DEVICE_HANDLE NFITDeviceHandle;UINT16 MemoryDevicePhysicalID;UINT16 MemoryDeviceRegionID;UINT16 SPARangeStructureIndex;UINT16 NVDIMMControlRegionStructureIndex;UINT64 MemoryDeviceRegionSize;UINT64 RegionOffset;UINT64 MemoryDevicePhysicalAddressRegionBase;UINT16 InterleaveStructureIndex;UINT16 InterleaveWays;UINT16 MemoryDeviceStateFlags;UINT16 Reserved_46;};
struct _5083B1E6931E23D334D7384A88431181 {UINT16 VendorId;UINT16 DeviceId;UINT8 ClassCode[3];UINT8 Function;UINT8 Device;UINT16 Segment;UINT8 PrimaryOrDeviceBus;UINT8 SecondaryBus;EFI_GENERIC_ERROR_PCI_SLOT Slot;UINT8 Resv1;};
struct _50CF1F9E30717E5C85FBDDBBD8C480D0 {UINT32 Signature;UINT32 Length;UINT8 Revision;UINT8 Checksum;UINT8 OemId[6];UINT64 OemTableId;UINT32 OemRevision;UINT32 CreatorId;UINT32 CreatorRevision;};
struct _50F07B9AD62C1A018ACBE2DA8329192F {UINT8 Type;UINT8 Length;EFI_ACPI_5_0_HARDWARE_ERROR_NOTIFICATION_CONFIGURATION_WRITE_ENABLE_STRUCTURE ConfigurationWriteEnable;UINT32 PollInterval;UINT32 Vector;UINT32 SwitchToPollingThresholdValue;UINT32 SwitchToPollingThresholdWindow;UINT32 ErrorThresholdValue;UINT32 ErrorThresholdWindow;};
struct _51AB63096E2BC5AD4B69E97888F3EB23 {EFI_ACPI_5_0_FPDT_PERFORMANCE_RECORD_HEADER Header;UINT32 Reserved;UINT64 BootPerformanceTablePointer;};
struct _526690B6FDCBF90BFE8DDB73F83CC4AF {unsigned __int8 HeaderLength : 4;unsigned __int8 Version : 4;UINT8 TypeOfService;UINT16 TotalLength;UINT16 Identification;UINT16 Fragmentation;UINT8 TimeToLive;UINT8 Protocol;UINT16 Checksum;EFI_IPv4_ADDRESS SourceAddress;EFI_IPv4_ADDRESS DestinationAddress;};
struct _53CB4488480B2DF2E7B5895ADE90E2E8 {UINT32 Signature;UINT16 Command;UINT16 Status;UINT16 Version;UINT8 RASCapabilities[16];UINT8 SetRASCapabilities[16];UINT16 NumberOfRASFParameterBlocks;UINT32 SetRASCapabilitiesStatus;};
struct _579EB430BA9997F315857B805E1254B9 {UINT32 Length;UINT16 Type;UINT8 Data[1];};
struct _5830DA795DA5196AC98747FD5A091A12 {EFI_GUID *Guid;CHAR16 *Name;VAR_CHECK_VARIABLE_PROPERTY VariableProperty;};
struct _5837AA804C503539073946008DD14B2D {EFI_DEVICE_PATH_PROTOCOL Header;UINT32 MemoryType;EFI_PHYSICAL_ADDRESS StartingAddress;EFI_PHYSICAL_ADDRESS EndingAddress;};
struct _58DEF8EBF86D691F280CB3F90366B052 {UINT16 Revision;UINT16 Property;UINT32 Attributes;UINTN MinSize;UINTN MaxSize;};
struct _590B895AD0ADCCF75391FBD007A99A56 {EFI_ACPI_DESCRIPTION_HEADER Header;UINT32 OffsetProxDomInfo;UINT32 MaximumNumberOfProximityDomains;UINT32 MaximumNumberOfClockDomains;UINT64 MaximumPhysicalAddress;};
union _591BF0AC490AC5BA075A2021D8EADA1D {TPM2B_DIGEST keyedHash;TPM2B_DIGEST sym;TPM2B_PUBLIC_KEY_RSA rsa;TPMS_ECC_POINT ecc;};
struct _59470752940C6AB5192F9229B028D61E {UINT64 Signature;UINT8 Checksum;UINT8 OemId[6];UINT8 Revision;UINT32 RsdtAddress;UINT32 Length;UINT64 XsdtAddress;UINT8 ExtendedChecksum;UINT8 Reserved[3];};
struct _59867F420E95459E463A21D495341429 {EFI_HII_PACK_HEADER Header;FRAMEWORK_EFI_KEY_DESCRIPTOR *Descriptor;UINT8 DescriptorCount;};
struct _59ADDAEBB3E2632D725ED32CC902CEFD {UINT16 Signature;UINT16 InitializationSize;UINT32 EfiSignature;UINT16 EfiSubsystem;UINT16 EfiMachineType;UINT16 CompressionType;UINT8 Reserved[8];UINT16 EfiImageHeaderOffset;UINT16 PcirOffset;};
struct _59D4D00EB1396467F8D73DECDB6BC523 {TPM12_PCR_SELECTION pcrSelection;TPM_LOCALITY_SELECTION localityAtRelease;TPM_COMPOSITE_HASH digestAtRelease;};
struct _5A83377D323A27282E50E2B8AEC0090F {EFI_ACPI_ASF_RECORD_HEADER RecordHeader;UINT8 RemoteControlCapabilities[7];UINT8 RMCPCompletionCode;UINT32 RMCPIANA;UINT8 RMCPSpecialCommand;UINT8 RMCPSpecialCommandParameter[2];UINT8 RMCPBootOptions[2];UINT8 RMCPOEMParameters[2];};
struct _5AAA93F231C491218A0C27E0B83FD4E4 {EFI_STATUS_CODE_DATA DataHeader;EFI_STRING_TYPE StringType;EFI_STATUS_CODE_STRING String;};
struct _5B6C241DC92A55924D50051A82B97D9B {EFI_IPv4_ADDRESS SourceAddress;EFI_IPv4_ADDRESS GatewayAddress;UINT8 Protocol;UINT8 TypeOfService;UINT8 TimeToLive;BOOLEAN DoNotFragment;};
struct _5C131779BD47E2449F5F80108D76F38A {ACPI_LARGE_RESOURCE_HEADER Header;UINT8 InterruptVectorFlags;UINT8 InterruptTableLength;UINT32 InterruptNumber[1];};
struct _5CA98191CD661E462E70D7300551E151 {EFI_STATUS_CODE_TYPE CodeType;EFI_STATUS_CODE_VALUE Value;UINT32 Instance;};
struct _5DECBD7F3322FDC6BFF233D91FC4F66F {UINT64 Signature;EFI_PHYSICAL_ADDRESS SmmS3ResumeEntryPoint;EFI_PHYSICAL_ADDRESS SmmS3StackBase;UINT64 SmmS3StackSize;UINT64 SmmS3Cr0;UINT64 SmmS3Cr3;UINT64 SmmS3Cr4;UINT16 ReturnCs;EFI_PHYSICAL_ADDRESS ReturnEntryPoint;EFI_PHYSICAL_ADDRESS ReturnContext1;EFI_PHYSICAL_ADDRESS ReturnContext2;EFI_PHYSICAL_ADDRESS ReturnStackPointer;EFI_PHYSICAL_ADDRESS Smst;};
struct _5E0CFDD1D00C5657448370B9A8E9AF5F {SMBIOS_STRUCTURE Hdr;UINT8 ChannelType;UINT8 MaximumChannelLoad;UINT8 MemoryDeviceCount;MEMORY_DEVICE MemoryDevice[1];};
union _5E960B9F3D9B088E94FA007CE47725D3 {IA32_HANDOFF_STATUS IA32HealthFlags;X64_HANDOFF_STATUS x64HealthFlags;ITANIUM_HANDOFF_STATUS ItaniumHealthFlags;};
struct _5F39539F893D2EC61BF82E07B9E9DB3E {EFI_PCD_TYPE PcdType;UINTN PcdSize;CHAR8 *PcdName;};
struct _61309906903FE258EDF769C872829316 {BOOLEAN UseDefaultAddress;EFI_IPv4_ADDRESS LocalAddress;EFI_IPv4_ADDRESS LocalSubnet;UINT16 LocalPort;};
struct _63629BEE2701D5CF34B4C61A8CD3565F {BOOLEAN Push;BOOLEAN Urgent;UINT32 DataLength;UINT32 FragmentCount;EFI_TCP4_FRAGMENT_DATA FragmentTable[1];};
struct _63667749E20A876508B27B2A5D375BCD {UINT16 PnPInstallationCheckSegment;UINT16 PnPInstallationCheckOffset;UINT16 OpromSegment;UINT8 PciBus;UINT8 PciDeviceFunction;UINT8 NumberBbsEntries;UINT32 BbsTablePointer;UINT16 RuntimeSegment;};
struct _64398F8E3B32B4E9081A1C1E13696179 {UINT64 Signature;UINT8 Checksum;UINT8 OemId[6];UINT8 Reserved;UINT32 RsdtAddress;};
struct _67D201678CA148593DFBD7BB01D7707B {UINT8 Filters;UINT8 IpCnt;UINT16 reserved;EFI_IP_ADDRESS IpList[8];};
struct _695D41B0F86F5191001309D72DE985C5 {UINT32 Bar[6];UINT32 CISPtr;UINT16 SubsystemVendorID;UINT16 SubsystemID;UINT32 ExpansionRomBar;UINT8 CapabilityPtr;UINT8 Reserved1[3];UINT32 Reserved2;UINT8 InterruptLine;UINT8 InterruptPin;UINT8 MinGnt;UINT8 MaxLat;};
struct _6A67D9631EF9DAF31FBD55DA2AAAE815 {EFI_DEVICE_PATH_PROTOCOL Header;UINT16 NetworkProtocol;UINT16 LoginOption;UINT64 Lun;UINT16 TargetPortalGroupTag;};
struct _6AC903B1141559794FAA802AD579D498 {IP4_ADDR SrcIp;IP4_ADDR DstIp;UINT8 Reserved;UINT8 Protocol;UINT16 Len;};
struct _6C51A1AFDAA722EB159EBDA3477DC656 {BOOLEAN APState;BOOLEAN S3BootPath;EFI_PHYSICAL_ADDRESS WakeUpBuffer;EFI_PHYSICAL_ADDRESS GdtrProfile;EFI_PHYSICAL_ADDRESS IdtrProfile;EFI_PHYSICAL_ADDRESS CpuPrivateData;EFI_PHYSICAL_ADDRESS StackAddress;EFI_PHYSICAL_ADDRESS MicrocodePointerBuffer;EFI_PHYSICAL_ADDRESS SmramBase;EFI_PHYSICAL_ADDRESS SmmStartImageBase;UINT32 SmmStartImageSize;UINT32 NumberOfCpus;};
struct _6D318E6AA4852B0962173AD5AA763EF8 {EFI_DEVICE_PATH_PROTOCOL Header;UINT32 Reserved;UINT64 StartingOffset;UINT64 EndingOffset;};
struct _6EDB0D36DDAE8585C434A9339DCE2693 {EFI_80211_ELEMENT_HEADER Hdr;UINT8 Type;UINT32 Value;};
struct _6FCBEE6BA0754DD9E119508C869DC7B5 {UINT64 Address;UINT8 Size[3];UINT8 Reserved;UINT16 Revision;unsigned __int8 Type : 7;unsigned __int8 CheckSumValid : 1;UINT8 CheckSum;};
struct _7145FBB7A43E7472B182C998751EA91D {UINT64 Length;EFI_PHYSICAL_ADDRESS Data;UINT32 Signature;UINT32 CheckSum;};
struct _7151074C1D109E45CFC1C49E3920E4B6 {EFI_ATA_MODE PioMode;EFI_ATA_MODE SingleWordDmaMode;EFI_ATA_MODE MultiWordDmaMode;EFI_ATA_MODE UdmaMode;UINT32 ExtModeCount;EFI_ATA_EXTENDED_MODE ExtMode[1];};
struct _7157B18ECB20BAA8C6281A4B15C38093 {FRAMEWORK_EFI_IFR_OP_HEADER Header;STRING_REF Popup;UINT8 Flags;};
struct _7248D28E3A09D7194E8E1E343F40CFA2 {EFI_SMBIOS_TYPE Type;UINT8 Length;EFI_SMBIOS_HANDLE Handle;};
struct _738653807061B51D77FDC06F17B658B3 {UINT16 Address;UINT8 Irq;UINT8 Dma;PARALLEL_MODE Mode;};
struct _74C31F1E030E91C27322B71EA2AC69F0 {EFI_HANDLE InstanceHandle;EFI_IPv6_ADDRESS Ip6Address;UINT8 PrefixLength;};
struct _7536A37FDFCE53E1F2D7EFC84DEFD63B {UINT8 Type;UINT8 Length;EFI_ACPI_5_1_HARDWARE_ERROR_NOTIFICATION_CONFIGURATION_WRITE_ENABLE_STRUCTURE ConfigurationWriteEnable;UINT32 PollInterval;UINT32 Vector;UINT32 SwitchToPollingThresholdValue;UINT32 SwitchToPollingThresholdWindow;UINT32 ErrorThresholdValue;UINT32 ErrorThresholdWindow;};
struct _76104CBD369A22C2B848C68D15D2575F {EFI_ACPI_5_1_PMMT_COMMON_MEMORY_AGGREGATOR_DEVICE_STRUCTURE Header;UINT32 ReadLatency;UINT32 WriteLatency;UINT32 ReadBandwidth;UINT32 WriteBandwidth;UINT16 OptimalAccessUnit;UINT16 OptimalAccessAlignment;UINT16 Reserved;UINT16 NumberOfProximityDomains;};
struct _7787E194DB4EB2169214B7A11A441492 {UINT32 Signature;UINT16 Command;UINT16 Status;UINT32 MemoryPowerCommandRegister;UINT32 MemoryPowerStatusRegister;UINT32 PowerStateId;UINT32 MemoryPowerNodeId;UINT64 MemoryEnergyConsumed;UINT64 ExpectedAveragePowerComsuned;};
struct _7A0A3F0C2529F585ED2AB4428A32AE8F {TPM2B_NONCE nonce;TPMA_SESSION sessionAttributes;TPM2B_AUTH hmac;};
struct _7A14E74943437026682A920021B1FFBF {EFI_ACPI_DESCRIPTION_HEADER Header;UINT32 Flags;UINT64 AddressOfControlArea;UINT32 StartMethod;};
struct _7AB8CB7DC0ED871DDC3C55225C07E5EF {PCI_EXPRESS_EXTENDED_CAPABILITIES_HEADER Header;UINT16 VendorId;UINT16 DeviceId;UINT32 RcrbCapabilities;UINT32 RcrbControl;UINT32 Reserved;};
struct _7C171058388E98B16B2B538A7192DA38 {BIS_CERT_ID CertificateID;BIS_ALG_ID AlgorithmID;UINT16 KeyLength;};
union _7C5F9768C94386CA7F4E7DC66B8830A3 {struct _7C5F9768C94386CA7F4E7DC66B8830A3___6BEF19C9FA8303F6270AA3937FD58289 Unknown;struct _7C5F9768C94386CA7F4E7DC66B8830A3___858D6277A804C73ADA47D55724ADB58D BootRecordVolume;struct _7C5F9768C94386CA7F4E7DC66B8830A3___A212324E7A459AFFA4D7658AFAB6C77C PrimaryVolume;};
struct _7DFC8B8B0FE10570798370628F555DB9 {EFI_80211_ELEMENT_HEADER Hdr;UINT8 Indicator;EFI_80211_SUBELEMENT_INFO SubElement[1];};
struct _7E26CD9489C37A85D50C2973C4AF7AA0 {UINT64 BootToOs;UINT64 S3Resume;UINT32 S3EntryNum;PERF_DATA S3Entry[50];UINT64 CpuFreq;UINT64 BDSRaw;UINT32 Count;UINT32 Signiture;};
union _7F4437EF562FB8792EA1EF6FAF7BDB19 {EFI_IMAGE_NT_HEADERS32 Pe32;EFI_IMAGE_NT_HEADERS64 Pe32Plus;EFI_TE_IMAGE_HEADER Te;};
struct _7F4B5A81DC436F502D2522D97E5F727B {EFI_PHYSICAL_ADDRESS MemoryArrayStartAddress;EFI_PHYSICAL_ADDRESS MemoryArrayEndAddress;EFI_INTER_LINK_DATA PhysicalMemoryArrayLink;UINT16 MemoryArrayPartitionWidth;};
struct _7FA50AC9C83D084CE98388548A2ED316 {EFI_ACPI_DESCRIPTION_HEADER Header;UINT32 SerializationHeaderSize;UINT8 Reserved0[4];UINT32 InstructionEntryCount;};
struct _7FE8B5378CAF7ED49428EF8778472563 {UINT64 Index;EFI_GUID KeyOwnerGuid;EFI_BLOCK_IO_CRYPTO_CAPABILITY Capability;};
struct _7FF7C66C78997CB6C15C8F2705CC3546 {EFI_ACPI_5_1_FPDT_PERFORMANCE_RECORD_HEADER Header;UINT32 Reserved;UINT64 BootPerformanceTablePointer;};
struct _8177E03AC5A73E42434DF8F008FC2948 {SMBIOS_STRUCTURE Hdr;SMBIOS_TABLE_STRING InternalReferenceDesignator;UINT8 InternalConnectorType;SMBIOS_TABLE_STRING ExternalReferenceDesignator;UINT8 ExternalConnectorType;UINT8 PortType;};
struct _826166A315AD7F815B158091A827ADAE {UINT64 ValidFieldBits;UINT8 MinStateInfo[1024];UINT64 Br[8];UINT64 Cr[128];UINT64 Ar[128];UINT64 Rr[8];FR_STRUCT Fr[128];};
struct _827345E55565D3656FE7DD67F24B8842 {EFI_COMMON_SECTION_HEADER2 CommonHeader;EFI_GUID SectionDefinitionGuid;UINT16 DataOffset;UINT16 Attributes;};
struct _834F8DE3572A099FC7548A55D9A11840 {AUTH_NODE_HEADER Header;UINT16 Reserved;UINT16 UserSecretLength;UINT8 UserSecret[1];};
struct _83E13903BC0990E40237D8C301812CEA {BOOLEAN UrgentFlag;UINT32 DataLength;UINT32 FragmentCount;EFI_TCP6_FRAGMENT_DATA FragmentTable[1];};
struct _840E6DA18418FAD7CDD9CE2BF69BF57E {UINT8 Size[3];EFI_SECTION_TYPE Type;UINT32 ExtendedSize;};
struct _84188816839037F3F7A96E0E08AFF831 {TPM_ST tag;UINT32 paramSize;TPM_RC responseCode;};
struct _86BAB91CCA35EC0D8E0AB900ABD9D931 {UINT64 Timeout;void *DataBuffer;void *SenseData;void *Cdb;UINT32 TransferLength;UINT8 CdbLength;UINT8 DataDirection;UINT8 HostAdapterStatus;UINT8 TargetStatus;UINT8 SenseDataLength;};
struct _87288635DCB7885A0BDA590380E7B1CF {EFI_DEVICE_PATH_PROTOCOL Header;UINT16 DeviceType;UINT16 StatusFlag;CHAR8 String[1];};
struct _88383D1B2353D16D8AD8DB65A55C67C1 {EFI_ACPI_DESCRIPTION_HEADER Header;UINT64 PhysicalAddress;UINT32 GlobalFlags;UINT32 SecurePL1TimerGSIV;UINT32 SecurePL1TimerFlags;UINT32 NonSecurePL1TimerGSIV;UINT32 NonSecurePL1TimerFlags;UINT32 VirtualTimerGSIV;UINT32 VirtualTimerFlags;UINT32 NonSecurePL2TimerGSIV;UINT32 NonSecurePL2TimerFlags;};
struct _88437CFCFBFFE8519053CC29314A2CD7 {UINT64 Size;UINT64 FileSize;UINT64 PhysicalSize;EFI_TIME CreateTime;EFI_TIME LastAccessTime;EFI_TIME ModificationTime;UINT64 Attribute;CHAR16 FileName[1];};
struct _8875193D75601F2B2877FF9DC61D8E4A {FRAMEWORK_EFI_IFR_OP_HEADER Header;UINT16 QuestionId1;UINT8 Width;UINT16 QuestionId2;};
struct _8914740DFE30B2C928B20CD9BE464DE1 {EFI_SMM_LOCK_BOX_PARAMETER_HEADER Header;GUID Guid;UINT64 Attributes;};
struct _893FD9E11FDAA36A72D09F0CDAFC97BF {ACPI_LARGE_RESOURCE_HEADER Header;UINT8 Information;UINT32 BaseAddress;UINT32 Length;};
struct _8A024DF29D7C5529279C14F7A1792CA3 {UINT8 SerializationAction;UINT8 Instruction;UINT8 Flags;UINT8 Reserved0;EFI_ACPI_5_0_GENERIC_ADDRESS_STRUCTURE RegisterRegion;UINT64 Value;UINT64 Mask;};
struct _8A4657480833B86B53740A22F93D4BF3 {IP4_ICMP_HEAD Head;UINT32 Fourth;IP4_HEAD IpHead;};
struct _8BC8464797BD15B7DE56566C9A312D61 {UINT64 Index;EFI_GUID KeyOwnerGuid;EFI_BLOCK_IO_CRYPTO_CAPABILITY Capability;void *CryptoKey;};
struct _8CAD4F05D53D91E8093599D1B9B6A169 {EFI_PEI_BLOCK_DEVICE_TYPE DeviceType;BOOLEAN MediaPresent;UINTN LastBlock;UINTN BlockSize;};
struct _8CE9375D58616016D44E5899D27941F3 {ACPI_LARGE_RESOURCE_HEADER Header;UINT8 RevisionId;UINT8 ResourceSourceIndex;UINT8 SerialBusType;UINT8 GeneralFlags;UINT16 TypeSpecificFlags;UINT8 TypeSpecificRevisionId;UINT16 TypeDataLength;};
struct _8CED74C4085337C4E09351F5BE6FFCA9 {EFI_KEY Key;CHAR16 Unicode;CHAR16 ShiftedUnicode;CHAR16 AltGrUnicode;CHAR16 ShiftedAltGrUnicode;UINT16 Modifier;};
struct _8D2D182B2E295BABE24FB2BA4BA29C86 {UINT8 Type;UINT8 Length;UINT8 Bus;UINT8 Source;UINT32 GlobalSystemInterruptVector;UINT16 Flags;};
struct _8D3AED6F7FADE18A8F2D2D3C45490101 {FRAMEWORK_EFI_IFR_OP_HEADER Header;UINT16 FormId;STRING_REF FormTitle;};
struct _8E3345843C6C9EDEF8627A5D00099992 {EFI_GUID HeaderGuid;UINTN MessageLength;UINT8 Data[1];};
struct _8E919DA99B3FB9F4215C4BC26D9F0D0A {EFI_COMMON_SECTION_HEADER2 CommonHeader;UINT16 BuildNumber;CHAR16 VersionString[1];};
struct _8F68734F21FB1945F73C1D59FD3D19D0 {SMBIOS_STRUCTURE Hdr;SMBIOS_TABLE_STRING GroupName;GROUP_STRUCT Group[1];};
struct _8F93C5322470EB6F754EAE8CC4D8F714 {PCI_EXPRESS_EXTENDED_CAPABILITIES_HEADER Header;UINT32 RootComplexLinkCapabilities;UINT16 RootComplexLinkControl;UINT16 RootComplexLinkStatus;};
struct _907F290682665AED197BFE9630E90F3F {MEMORY_PROFILE_COMMON_HEADER Header;UINT32 MemoryRangeCount;UINT8 Reserved[4];};
struct _9142EB612F944EEF87D279755728C416 {EFI_ACPI_5_0_PMMT_COMMON_MEMORY_AGGREGATOR_DEVICE_STRUCTURE Header;UINT32 ReadLatency;UINT32 WriteLatency;UINT32 ReadBandwidth;UINT32 WriteBandwidth;UINT16 OptimalAccessUnit;UINT16 OptimalAccessAlignment;UINT16 Reserved;UINT16 NumberOfProximityDomains;};
struct _91F5FFCE0B426C2E77FE39E145C7F383 {UINT32 Signature;UINT32 Length;UINT8 Revision;UINT8 Checksum;UINT8 OemId[6];UINT64 OemTableId;UINT8 Reserved[24];};
struct _9219D3771845598B204C1F6E8A544818 {EFI_GUID *Guid;CHAR16 *Name;UINTN VariableSize;};
struct _94DE4B27E8685D7ACA16B7FA23BEF94E {IP6_ICMP_HEAD Head;UINT32 Fourth;EFI_IP6_HEADER IpHead;};
struct _9550CB126FCD617E5CD0AFA0E08ED7ED {TPM_ST tag;UINT32 paramSize;TPM_CC commandCode;};
struct _959F1E59735416E17B958F606B1E2001 {EFI_PHYSICAL_ADDRESS Handle;CHAR8 Token[32];CHAR8 Module[32];UINT64 StartTimeStamp;UINT64 EndTimeStamp;};
struct _964E5440A68626C4C3BC0AD13C0551E5 {EFI_IPv4_ADDRESS StationAddress;EFI_IPv4_ADDRESS SubnetMask;UINT32 RouteTableSize;EFI_IP4_ROUTE_TABLE *RouteTable;};
struct _9683D8C9CB1BB85CD0C70DD9F13640E2 {UINT64 ProcessorId;UINT32 StatusFlag;EFI_CPU_PHYSICAL_LOCATION Location;};
struct _9686D76608413ABCA37282C699CE8DBC {ACPI_LARGE_RESOURCE_HEADER Header;UINT8 AddressSpaceId;UINT8 RegisterBitWidth;UINT8 RegisterBitOffset;UINT8 AddressSize;UINT64 RegisterAddress;};
struct _96B74196A6CF81066884602FD3D9FD5D {UINT32 Signature;EFI_ACPI_5_0_PCCT_GENERIC_SHARED_MEMORY_REGION_COMMAND Command;EFI_ACPI_5_0_PCCT_GENERIC_SHARED_MEMORY_REGION_STATUS Status;};
struct _98570B18D60E0ACA380EBFC1C1524AB5 {EFI_ACPI_ISCSI_BOOT_FIRMWARE_TABLE_STRUCTURE_HEADER Header;EFI_IPv6_ADDRESS ISnsServer;EFI_IPv6_ADDRESS SlpServer;EFI_IPv6_ADDRESS PrimaryRadiusServer;EFI_IPv6_ADDRESS SecondaryRadiusServer;UINT16 IScsiNameLength;UINT16 IScsiNameOffset;};
struct _98FAB1ED5506717A9B4B3C99FE346AF3 {UINT8 Reserved1[248];UINT32 SMBASE;UINT32 SMMRevId;UINT16 IORestart;UINT16 AutoHALTRestart;UINT8 Reserved2[164];UINT32 ES;UINT32 CS;UINT32 SS;UINT32 DS;UINT32 FS;UINT32 GS;UINT32 LDTBase;UINT32 TR;UINT32 DR7;UINT32 DR6;UINT32 EAX;UINT32 ECX;UINT32 EDX;UINT32 EBX;UINT32 ESP;UINT32 EBP;UINT32 ESI;UINT32 EDI;UINT32 EIP;UINT32 EFLAGS;UINT32 CR3;UINT32 CR0;};
struct _99D936DB04230E832F57F71DE50411A4 {SMBIOS_STRUCTURE Hdr;SMBIOS_TABLE_STRING Description;UINT16 ManagementDeviceHandle;UINT16 ComponentHandle;UINT16 ThresholdHandle;};
struct _9D2F8CC554E3EC31D960F62B32A3EA13 {UINT8 BankNumber;UINT8 ClearStatusOnInitialization;UINT8 StatusDataFormat;UINT8 Reserved0;UINT32 ControlRegisterMsrAddress;UINT64 ControlInitData;UINT32 StatusRegisterMsrAddress;UINT32 AddressRegisterMsrAddress;UINT32 MiscRegisterMsrAddress;};
struct _9DCD9FEA850A958FB40634F72A38AE69 {UINT16 Version;UINT8 PayloadIndex;UINT8 UpdateImageIndex;EFI_GUID UpdateImageTypeId;};
struct _9FCD4338C182721C015DEEC85408F3D5 {FRAMEWORK_EFI_IFR_OP_HEADER Header;EFI_GUID Guid;UINT16 VarId;UINT16 Size;};
struct _A09F1F233FE9E41493184B3B1BB66A1D {UINT8 GTFrameNumber;UINT8 Reserved[3];UINT64 CntBaseX;UINT64 CntEL0BaseX;UINT32 GTxPhysicalTimerGSIV;UINT32 GTxPhysicalTimerFlags;UINT32 GTxVirtualTimerGSIV;UINT32 GTxVirtualTimerFlags;UINT32 GTxCommonFlags;};
struct _A1E4BC69A3E624510D80DD9D7A45DD6C {UINT8 SectionType[16];UINT32 ErrorSeverity;UINT16 Revision;UINT8 ValidationBits;UINT8 Flags;UINT32 ErrorDataLength;UINT8 FruId[16];UINT8 FruText[20];};
struct _A31DBB9C9150EEB5B259A9BB3CE94F14 {EFI_DEVICE_PATH_PROTOCOL Header;UINT32 NamespaceId;UINT64 NamespaceUuid;};
struct _A4293C7BE0E6B327D04BD7AF0FAC81EB {EFI_HANDLE DriverHandle;UINT32 ServiceCount;EFI_UDP4_SERVICE_POINT Services[1];};
struct _A4F1DEA9353CD0940D14AA2D91979FF5 {EFI_COMMON_SECTION_HEADER2 CommonHeader;UINT32 UncompressedLength;UINT8 CompressionType;};
struct _A5AD036611CA966910B0041741535C40 {EFI_HANDLE DriverHandle;UINT32 ServiceCount;EFI_TCP4_SERVICE_POINT Services[1];};
struct _A60290E23BD6DC3E24E5B4BC10DBFE53 {EFI_STATUS_CODE_DATA DataHeader;UINT32 Level;EFI_INIT_CACHE_TYPE Type;};
struct _A623DC40DB5F984C95B90C5AE5F35B22 {UINT8 Type;UINT8 Length;UINT16 Flags;UINT8 InterruptType;UINT8 ProcessorId;UINT8 ProcessorEid;UINT8 IoSapicVector;UINT32 GlobalSystemInterrupt;UINT32 PlatformInterruptSourceFlags;UINT8 CpeiProcessorOverride;UINT8 Reserved[31];};
struct _A67111EB637F4E9F7923F72D72853C3F {UINT32 Signature;UINT32 Length;UINT32 HardwareSignature;UINT32 FirmwareWakingVector;UINT32 GlobalLock;UINT32 Flags;UINT64 XFirmwareWakingVector;UINT8 Version;UINT8 Reserved[31];};
struct _A7AA59FC18C624779D556E8F6729DDF8 {SMBIOS_STRUCTURE Hdr;UINT8 InterfaceType;UINT8 IPMISpecificationRevision;UINT8 I2CSlaveAddress;UINT8 NVStorageDeviceAddress;UINT64 BaseAddress;UINT8 BaseAddressModifier_InterruptInfo;UINT8 InterruptNumber;};
struct _A885BDC5C02641C8B49B78EA5206778A {EFI_80211_MAC_ADDRESS BSSId;EFI_80211_REASON_CODE ReasonCode;UINT8 *VendorSpecificInfo;};
struct _A8E47D60411A404345D4BF258A4FC575 {UGA_DEVICE_TYPE deviceType;UGA_DEVICE_ID deviceId;UINT32 ui32DeviceContextSize;UINT32 ui32SharedContextSize;};
struct _A8E5B033BD80DF5482A26EDD8868544F {EFI_DEVICE_PATH_PROTOCOL Header;UINT32 Reserved;UINT64 Guid;};
struct _A948394FC790D9048ECA290EEF4598AA {CHAR8 *QName;UINT16 QType;UINT16 QClass;UINT32 TTL;UINT16 DataLength;CHAR8 *RData;};
struct _A9B4302653E267E10A0BD8C91527623C {EFI_PCI_CAPABILITY_HDR Hdr;UINT16 AddrReg;UINT32 DataReg;};
struct _AA032A76E921DB3BA10EE007C0115DA6 {EFI_DEVICE_PATH_PROTOCOL Header;UINT8 PrimarySecondary;UINT8 SlaveMaster;UINT16 Lun;};
struct _AA033DF403890F6F054777DF6427E4D7 {UINT16 Type;UINT16 SourceId;UINT8 Reserved0[2];UINT8 Flags;UINT8 Enabled;UINT32 NumberOfRecordsToPreAllocate;UINT32 MaxSectionsPerRecord;UINT32 Bus;UINT16 Device;UINT16 Function;UINT16 DeviceControl;UINT8 Reserved1[2];UINT32 UncorrectableErrorMask;UINT32 UncorrectableErrorSeverity;UINT32 CorrectableErrorMask;UINT32 AdvancedErrorCapabilitiesAndControl;UINT32 SecondaryUncorrectableErrorMask;UINT32 SecondaryUncorrectableErrorSeverity;UINT32 SecondaryAdvancedErrorCapabilitiesAndControl;};
struct _ABB549047AEF255E4EB3A3AB7A9865AE {UINT8 SerializationAction;UINT8 Instruction;UINT8 Flags;UINT8 Reserved0;EFI_ACPI_6_0_GENERIC_ADDRESS_STRUCTURE RegisterRegion;UINT64 Value;UINT64 Mask;};
struct _ABBF97989A82DC63A0EC55D7A043633E {UINT8 InjectionAction;UINT8 Instruction;UINT8 Flags;UINT8 Reserved0;EFI_ACPI_6_0_GENERIC_ADDRESS_STRUCTURE RegisterRegion;UINT64 Value;UINT64 Mask;};
struct _AC77001C1B4AAC61DF206C481C514A37 {UINT8 Revision;UINT8 Length;UINT32 ProximityDomainRangeLow;UINT32 ProximityDomainRangeHigh;UINT32 MaximumProcessorCapacity;UINT64 MaximumMemoryCapacity;};
struct _AD803FA55331A63ADB10040985F0C48E {BLUETOOTH_ADDRESS BDAddr;UINT8 RemoteDeviceState;BLUETOOTH_CLASS_OF_DEVICE ClassOfDevice;UINT8 RemoteDeviceName[248];};
struct _AD84373D94DE7196970428998609059F {PCI_EXPRESS_EXTENDED_CAPABILITIES_HEADER Header;UINT32 VendorSpecificHeader;UINT8 VendorSpecific[1];};
struct _ADF16AF6473725D355590D9E655FC48B {BOOLEAN Supported;UINT64 KeyCount;UINT64 CapabilityCount;EFI_BLOCK_IO_CRYPTO_CAPABILITY Capabilities[1];};
struct _AEADBAF441CF0D0024C5B0F34DD7F02A {CHAR16 *HostName;EFI_IPv6_ADDRESS *IpAddress;UINT32 Timeout;};
struct _AF461F30A45AE1004748489948099869 {EFI_KEY Key;CHAR16 Unicode;CHAR16 ShiftedUnicode;CHAR16 AltGrUnicode;CHAR16 ShiftedAltGrUnicode;UINT16 Modifier;UINT16 AffectedAttribute;};
struct _B0CFE40299B2241B6D88CD103817DCF3 {CHAR8 CharB;CHAR8 CharM;UINT32 Size;UINT16 Reserved[2];UINT32 ImageOffset;UINT32 HeaderSize;UINT32 PixelWidth;UINT32 PixelHeight;UINT16 Planes;UINT16 BitPerPixel;UINT32 CompressionType;UINT32 ImageSize;UINT32 XPixelsPerMeter;UINT32 YPixelsPerMeter;UINT32 NumberOfColors;UINT32 ImportantColors;};
struct _B24108C6A84211A3601D6A74CFBF8141 {UINT8 InjectionAction;UINT8 Instruction;UINT8 Flags;UINT8 Reserved0;EFI_ACPI_4_0_GENERIC_ADDRESS_STRUCTURE RegisterRegion;UINT64 Value;UINT64 Mask;};
struct _B2DB38E900464E398875D12AA0CD3AA7 {UINT8 EntryType;UINT8 IntType;EFI_LEGACY_MP_TABLE_ENTRY_INT_FLAGS Flags;UINT8 SourceBusId;EFI_LEGACY_MP_TABLE_ENTRY_INT_SOURCE_BUS_IRQ SourceBusIrq;UINT8 DestApicId;UINT8 DestApicIntIn;};
struct _B2DD6A68E2116D4FCB85B340C66E6590 {EFI_HANDLE DriverHandle;UINT32 AddressCount;EFI_IP4_ADDRESS_PAIR AddressPairs[1];};
struct _B3D9824BB10454FC3FBA64ED1BFA8007 {EFI_HANDLE DriverHandle;UINT32 AddressCount;EFI_IP6_ADDRESS_PAIR AddressPairs[1];};
struct _B4376B173897DA777F735A92BA61857C {UINT16 Address;UINT8 Irq;SERIAL_MODE Mode;};
struct _B444406F386FA06D5BC4117DCE5A236C {PCD_TYPE PcdType;UINTN PcdSize;CHAR8 *PcdName;};
struct _B4D92CBE906B07A06AB1E03FDEFFC807 {EFI_HII_HANDLE HiiHandle;EFI_STRING_ID StringId;UINT64 MessageCode;};
struct _B54899351EF7B33BF0507C4E1D20B79A {UINT32 Signature;INTN RefCnt;LIST_ENTRY List;LIST_ENTRY BufList;UINT32 BufSize;UINT32 BufNum;};
struct _B6385E411CABF2821B8809810A7CF62E {UINT8 WatchdogAction;UINT8 InstructionFlags;UINT8 Reserved_2[2];EFI_ACPI_2_0_GENERIC_ADDRESS_STRUCTURE RegisterRegion;UINT32 Value;UINT32 Mask;};
struct _B7CA63F9D14E9570B450255414BA6B32 {UINT8 BootpOpcode;UINT8 BootpHwType;UINT8 BootpHwAddrLen;UINT8 BootpGateHops;UINT32 BootpIdent;UINT16 BootpSeconds;UINT16 BootpFlags;UINT8 BootpCiAddr[4];UINT8 BootpYiAddr[4];UINT8 BootpSiAddr[4];UINT8 BootpGiAddr[4];UINT8 BootpHwAddr[16];UINT8 BootpSrvName[64];UINT8 BootpBootFile[128];UINT32 DhcpMagik;UINT8 DhcpOptions[56];};
struct _B8B5216EB06283ECCD87175FCD3EA70E {EFI_ACPI_DESCRIPTION_HEADER Header;UINT8 InterfaceType;UINT8 Reserved_37[3];EFI_ACPI_2_0_GENERIC_ADDRESS_STRUCTURE BaseAddress;};
struct _B99BE8752E42F1AB2FB6C58C636F30A3 {UINT32 Signature;UINT16 VendorId;UINT16 DeviceId;UINT16 Reserved0;UINT16 Length;UINT8 Revision;UINT8 ClassCode[3];UINT16 ImageLength;UINT16 CodeRevision;UINT8 CodeType;UINT8 Indicator;UINT16 Reserved1;};
struct _B99C53A4D4A2A502622712AA2B3B6D57 {UINT8 Version;UINT8 Revision;UINT8 OemId[6];UINT64 Capability;UINT64 CapabilityEx;UINT32 GlobalCommand;UINT32 GlobalStatus;UINT32 FaultStatus;UINT8 Resv1[12];UINT64 FaultRecord[2];UINT64 RootEntry[2];UINT64 ContextEntry[2];UINT64 PteL6;UINT64 PteL5;UINT64 PteL4;UINT64 PteL3;UINT64 PteL2;UINT64 PteL1;};
struct _B9A05D228ED5F3E0C318560008618C09 {EFI_GUID Guid;UINTN NameSize;CHAR16 Name[1];};
struct _B9B39F0946474F121EFE4E9034FAEC4E {UINT32 Version;UINT32 HorizontalResolution;UINT32 VerticalResolution;EFI_GRAPHICS_PIXEL_FORMAT PixelFormat;EFI_PIXEL_BITMASK PixelInformation;UINT32 PixelsPerScanLine;};
union _BAA371FD3705A9DA82A7651CF9EF53DA {struct _BAA371FD3705A9DA82A7651CF9EF53DA___83ADE8757A716942AB3BE3531FD405EA Bits;struct _BAA371FD3705A9DA82A7651CF9EF53DA___78056429B4AE981D96BF2EB5C0ABFB5E Uint32;UINT64 Uint64;};
struct _BB611BE52EA9E4C4110772F4A6986FCD {MEMORY_PROFILE_COMMON_HEADER Header;PHYSICAL_ADDRESS Address;UINT64 Size;};
struct _BBBB50E44A18E3C79D4B1DB57A2E78B3 {UINT32 ImageInfoType;EFI_LOADED_IMAGE_PROTOCOL *LoadedImageProtocolInstance;EFI_HANDLE ImageHandle;};
struct _BC9E4A077A44AF5B16CC063CFB5FA173 {EFI_COMMON_SECTION_HEADER CommonHeader;UINT32 UncompressedLength;UINT8 CompressionType;};
struct _BCEF2CFCF5849594C8FD4F40A8A09957 {PCI_EXPRESS_EXTENDED_CAPABILITIES_HEADER Header;UINT32 TphRequesterCapability;UINT32 TphRequesterControl;UINT16 TphStTable[1];};
struct _BCF35254980F95645BBCDA24CCB5EBF1 {UINT32 Signature;UINT8 MinorVersion;UINT8 MajorVersion;UINT16 TableSize;UINT8 Bus;UINT8 DevFun;UINT16 PciOnlyIrq;UINT16 CompatibleVid;UINT16 CompatibleDid;UINT32 Miniport;UINT8 Reserved[11];UINT8 Checksum;};
struct _C05C8DE8AEFB7F68AD5837568088F595 {UINT32 Signature;UINT32 Length;UINT16 SalRevision;UINT16 EntryCount;UINT8 CheckSum;UINT8 Reserved[7];UINT16 SalAVersion;UINT16 SalBVersion;UINT8 OemId[32];UINT8 ProductId[32];UINT8 Reserved2[8];};
struct _C083007631904680C751AB34F721C511 {UINT8 Type;UINT8 Length;UINT16 Reserved;UINT64 LocalApicAddress;};
struct _C0F99B3464FBF331C20993652C5E0642 {UINT8 EntryType;UINT8 Length;UINT8 BusId;EFI_LEGACY_MP_TABLE_ENTRY_EXT_COMPAT_BUS_ADDR_SPACE_MODIFIER_ADDR_MODE AddrMode;UINT32 PredefinedRangeList;};
struct _C2BC6D47259ACF8922A166D07A7BE9F4 {UINT32 Signature;EFI_IMAGE_FILE_HEADER FileHeader;EFI_IMAGE_OPTIONAL_HEADER32 OptionalHeader;};
struct _C44C7EFB4C71D381E9E93111208A44F9 {UINT16 LogAreaLength;UINT16 LogHeaderStartOffset;UINT16 LogDataStartOffset;UINT8 AccessMethod;UINT8 LogStatus;UINT32 LogChangeToken;UINT32 AccessMethodAddress;UINT8 LogHeaderFormat;UINT8 NumberOfSupportedLogType;UINT8 LengthOfLogDescriptor;};
struct _C4BD71933A12FF525F3A9EBDE61ED7E3 {EFI_80211_ELEMENT_HEADER Hdr;UINT8 CountryStr[3];EFI_80211_COUNTRY_TRIPLET CountryTriplet[1];};
struct _C5A49CCB2EE5B7D1464BF1603863C578 {EFI_HOB_GUID_TYPE Hob;UINTN MemDescCount;EFI_MEMORY_DESCRIPTOR *MemDesc;};
union _C5B37D2DFCDA6A31CFFEA8F4CFB27712 {EFI_DWORD_REGS E;EFI_WORD_REGS X;EFI_BYTE_REGS H;};
union _C63C456AEB98DBBC9D03E784D6D27374 {EFI_IFR_DATA_ARRAY DataArray;EFI_IFR_PACKET DataPacket;CHAR16 String[1];};
struct _C88F66CADC6F0969135DB7C539E8CD7B {EFI_ACPI_5_0_FPDT_PERFORMANCE_RECORD_HEADER Header;UINT32 Reserved;UINT64 S3PerformanceTablePointer;};
struct _C8DF119FFDD9AC5D77D8855D13C96652 {EFI_HANDLE InstanceHandle;EFI_IPv4_ADDRESS LocalAddress;UINT16 LocalPort;EFI_IPv4_ADDRESS RemoteAddress;UINT16 RemotePort;};
struct _C954A39FF73D802B29EE10901F3191E1 {EFI_ACPI_DESCRIPTION_HEADER Header;EFI_ACPI_5_0_FPDT_BOOT_PERFORMANCE_TABLE_POINTER_RECORD BootPointerRecord;EFI_ACPI_5_0_FPDT_S3_PERFORMANCE_TABLE_POINTER_RECORD S3PointerRecord;};
struct _C961DF17BCDD7C75BBAFA7D181268110 {NVME_CDW0 Cdw0;UINT8 Flags;UINT32 Nsid;UINT32 Cdw2;UINT32 Cdw3;UINT32 Cdw10;UINT32 Cdw11;UINT32 Cdw12;UINT32 Cdw13;UINT32 Cdw14;UINT32 Cdw15;};
struct _C987BED3533B3E01282CF0F1300D858A {EFI_STATUS_CODE_DATA DataHeader;UINT32 Instance;UINT16 Attributes;};
struct _C9D7FBD78CC531CDC95C9CF226690922 {UINT32 Signature;UINT8 TableChecksum;UINT8 TableLength;UINT8 EfiMajorRevision;UINT8 EfiMinorRevision;UINT8 TableMajorRevision;UINT8 TableMinorRevision;UINT16 Reserved;UINT16 Compatibility16CallSegment;UINT16 Compatibility16CallOffset;UINT16 PnPInstallationCheckSegment;UINT16 PnPInstallationCheckOffset;UINT32 EfiSystemTable;UINT32 OemIdStringPointer;UINT32 AcpiRsdPtrPointer;UINT16 OemRevision;UINT32 E820Pointer;UINT32 E820Length;UINT32 IrqRoutingTablePointer;UINT32 IrqRoutingTableLength;UINT32 MpTablePtr;UINT32 MpTableLength;UINT16 OemIntSegment;UINT16 OemIntOffset;UINT16 Oem32Segment;UINT16 Oem32Offset;UINT16 Oem16Segment;UINT16 Oem16Offset;UINT16 TpmSegment;UINT16 TpmOffset;UINT32 IbvPointer;UINT32 PciExpressBase;UINT8 LastPciBus;UINT32 UmaAddress;UINT32 UmaSize;UINT32 HiPermanentMemoryAddress;UINT32 HiPermanentMemorySize;};
struct _CB6F3F53448E87500AF2774A69CAF28A {UINT64 auditCounter;TPM_ALG_ID digestAlg;TPM2B_DIGEST auditDigest;TPM2B_DIGEST commandDigest;};
struct _CC17200E7FA6B5970040AF8EFBA15C4D {FRAMEWORK_EFI_IFR_OP_HEADER Header;UINT16 QuestionId;UINT8 Width;UINT16 ListLength;UINT16 ValueList[1];};
struct _CC48895B9E412E3BD6DC9377041F614A {UINT8 Type;UINT8 Length;UINT16 Flags;UINT32 AcpiProcessorUid;UINT8 LocalX2ApicLint;UINT8 Reserved[3];};
struct _CD8F6CF4509A37A7E9122CFAC2543CAF {STRING_REF SystemManufacturer;STRING_REF SystemProductName;STRING_REF SystemVersion;STRING_REF SystemSerialNumber;EFI_GUID SystemUuid;EFI_MISC_SYSTEM_WAKEUP_TYPE SystemWakeupType;STRING_REF SystemSKUNumber;STRING_REF SystemFamily;};
struct _CE46CBD44DD39AC2FD774C51A5054E4F {EFI_GUID SubClass;EFI_INTER_LINK_DATA GroupLink;UINT16 GroupId;UINT16 GroupElementId;};
struct _CE5D7A9E94A502CBDA115DEF631DE7BF {BOOLEAN UseDefaultAddress;EFI_IPv4_ADDRESS StationAddress;EFI_IPv4_ADDRESS SubnetMask;UINT16 StationPort;EFI_IPv4_ADDRESS RemoteAddress;UINT16 RemotePort;BOOLEAN ActiveFlag;};
struct _CE9D7FFF634FC72D1136E469E23E246C {FRAMEWORK_EFI_IFR_OP_HEADER Header;UINT16 QuestionId;UINT8 Width;UINT16 Value;};
struct _D08E99FDC9D7E2D3B365AB8D6B46B0F2 {EFI_PHYSICAL_ADDRESS FrameBufferBase;UINT32 FrameBufferSize;EFI_GRAPHICS_OUTPUT_MODE_INFORMATION GraphicsMode;};
struct _D0E75F616C01BBA72CD826DD2FCB9CC0 {UINT32 CapabilityHeader;UINT32 Capability;UINT16 Control;UINT16 Status;UINT16 InitialVFs;UINT16 TotalVFs;UINT16 NumVFs;UINT8 FunctionDependencyLink;UINT8 Reserved0;UINT16 FirstVFOffset;UINT16 VFStride;UINT16 Reserved1;UINT16 VFDeviceID;UINT32 SupportedPageSize;UINT32 SystemPageSize;UINT32 VFBar[6];UINT32 VFMigrationStateArrayOffset;};
struct _D251BF46B90C7763ECD8E24C06B39705 {ACPI_SMALL_RESOURCE_HEADER Header;UINT16 Mask;UINT8 Information;};
struct _D2CC7C8315B809F58AD6BC37C9EE51AE {UINT32 Size;TrEE_EVENT_HEADER Header;UINT8 Event[1];};
struct _D3315E2C7A20487BEB8B4CF639C73067 {EFI_STATUS_CODE_DATA DataHeader;UINT32 Cause;BOOLEAN SoftwareDisabled;};
struct _D356719F7093E106E03D0DCF65678C87 {EFI_DEVICE_PATH_PROTOCOL Header;UINT32 BootEntry;UINT64 PartitionStart;UINT64 PartitionSize;};
struct _D35B8C76829129D06BAD5DF5B0CB65D4 {ACPI_LARGE_RESOURCE_HEADER Header;UINT8 ResType;UINT8 GenFlag;UINT8 SpecificFlag;UINT16 AddrSpaceGranularity;UINT16 AddrRangeMin;UINT16 AddrRangeMax;UINT16 AddrTranslationOffset;UINT16 AddrLen;};
struct _D4EF77D3274B9CC082E64AAE399E0343 {EFI_ACPI_6_0_FPDT_PERFORMANCE_RECORD_HEADER Header;UINT32 ResumeCount;UINT64 FullResume;UINT64 AverageResume;};
struct _D61DABEC9648C46BCF8FC65397E9722D {UINT8 TrafficClass;UINT8 HopLimit;EFI_TCP6_ACCESS_POINT AccessPoint;EFI_TCP6_OPTION *ControlOption;};
struct _D6C63370732CF4C1BCACECCD380804C5 {UINT8 Type;UINT8 Length;UINT16 Flags;UINT32 GlobalSystemInterrupt;};
struct _D6E0E84002FDFC4F36E9C535A677D09E {SMBIOS_STRUCTURE Hdr;UINT8 Capabilities;UINT16 ResetCount;UINT16 ResetLimit;UINT16 TimerInterval;UINT16 Timeout;};
struct _D79973267288089C8EF15F59898B9BA8 {UINT16 Type;UINT16 SourceId;UINT8 Reserved0[2];UINT8 Flags;UINT8 Enabled;UINT32 NumberOfRecordsToPreAllocate;UINT32 MaxSectionsPerRecord;UINT32 Bus;UINT16 Device;UINT16 Function;UINT16 DeviceControl;UINT8 Reserved1[2];UINT32 UncorrectableErrorMask;UINT32 UncorrectableErrorSeverity;UINT32 CorrectableErrorMask;UINT32 AdvancedErrorCapabilitiesAndControl;UINT32 RootErrorCommand;};
struct _D7F6A39548B67F180281A7589F829443 {UINT8 Type;UINT8 Length;UINT16 Flags;UINT8 InterruptType;UINT8 ProcessorId;UINT8 ProcessorEid;UINT8 IoSapicVector;UINT32 GlobalSystemInterrupt;UINT32 Reserved;};
struct _D818E4CF6A7E7483023E703B7033DCBC {UINT16 RequesterId;UINT16 SegmentNumber;UINT8 FaultReason;UINT8 AccessType;UINT8 AddressType;UINT8 ArchType;UINT64 DeviceAddr;UINT8 Resv1[16];};
struct _D92E6C205FE94452D965C4230D5A1407 {EFI_ACPI_5_1_FPDT_PERFORMANCE_RECORD_HEADER Header;UINT32 Reserved;UINT64 ResetEnd;UINT64 OsLoaderLoadImageStart;UINT64 OsLoaderStartImageStart;UINT64 ExitBootServicesEntry;UINT64 ExitBootServicesExit;};
struct _D98D81D62ACCC166E3819C5D20DA52C2 {PCI_EXPRESS_EXTENDED_CAPABILITIES_HEADER Header;unsigned __int32 ExtendedVcCount : 3;unsigned __int32 PortVcCapability1 : 29;unsigned __int32 PortVcCapability2 : 24;unsigned __int32 VcArbTableOffset : 8;UINT16 PortVcControl;UINT16 PortVcStatus;PCI_EXPRESS_EXTENDED_CAPABILITIES_VIRTUAL_CHANNEL_VC Capability[1];};
struct _D9CC29CB88675D0B37E1F2188EA14C14 {EFI_PCI_CAPABILITY_HDR Hdr;UINT16 SecStatusReg;UINT32 StatusReg;UINT32 SplitTransCtrlRegUp;UINT32 SplitTransCtrlRegDn;};
struct _D9D8E9C80B3C6500CC9032FB44853F01 {TPM2B_NAME indexName;UINT16 offset;TPM2B_MAX_NV_BUFFER nvContents;};
struct _DA749B500BCF1C6398D8F890AD4BF94D {UINT16 VendorId;UINT16 DeviceId;UINT8 ClassCode[3];UINT8 Function;UINT8 Device;UINT8 Bus;UINT8 Segment;UINT8 Resv1;UINT32 Resv2;};
struct _DA8FE81CC0E3FB877E9CE295A06E6DDA {EFI_ACPI_DESCRIPTION_HEADER Header;UINT32 InjectionHeaderSize;UINT8 InjectionFlags;UINT8 Reserved0[3];UINT32 InjectionEntryCount;};
struct _DAA575A1E4F540C43793111540E3F2D7 {UINT8 Type;UINT8 Length;UINT8 Bus;UINT8 Source;UINT32 GlobalSystemInterrupt;UINT16 Flags;};
struct _DBEDC8589888FE8499F8C5868B0E6C09 {EFI_IPv6_ADDRESS Address;BOOLEAN IsAnycast;UINT8 PrefixLength;};
struct _DC322FA52FD58BCFA0B901F9F5F40D25 {EFI_ACPI_6_0_FPDT_PERFORMANCE_RECORD_HEADER Header;UINT32 Reserved;UINT64 BootPerformanceTablePointer;};
struct _DC393B8A1F9BDFDC51A68E37CB4B266D {EFI_DEVICE_PATH_PROTOCOL Header;EFI_GUID Guid;UINT32 FlowControlMap;};
struct _DDE64AD3B32E108F904CF3E61827FD1C {EFI_ACPI_5_0_FPDT_PERFORMANCE_TABLE_HEADER Header;EFI_ACPI_5_0_FPDT_S3_RESUME_RECORD S3Resume;EFI_ACPI_5_0_FPDT_S3_SUSPEND_RECORD S3Suspend;};
struct _DE33D1AEE49A1BD9DBDBFDB8B88E9FBC {EFI_DEVICE_PATH_PROTOCOL Header;EFI_MAC_ADDRESS MacAddress;UINT8 IfType;};
struct _E04B20A261BEECF1FC2270F0EF743622 {UINT8 SerializationAction;UINT8 Instruction;UINT8 Flags;UINT8 Reserved0;EFI_ACPI_5_1_GENERIC_ADDRESS_STRUCTURE RegisterRegion;UINT64 Value;UINT64 Mask;};
struct _E09C81AEFAC122BE2C0CE1E40D178C5D {EFI_ACPI_5_0_PMMT_COMMON_MEMORY_AGGREGATOR_DEVICE_STRUCTURE Header;UINT16 PhysicalComponentIdentifier;UINT16 Reserved;UINT32 SizeOfDimm;UINT32 SmbiosHandle;};
struct _E0F17FEBD492ABA4C86EE5B23BE3E309 {ACPI_SMALL_RESOURCE_HEADER Header;UINT16 BaseAddress;UINT8 Length;};
struct _E2888E2D965943BE9C31F424F730E153 {EFI_ACPI_5_1_PMMT_COMMON_MEMORY_AGGREGATOR_DEVICE_STRUCTURE Header;UINT16 PhysicalComponentIdentifier;UINT16 Reserved;UINT32 SizeOfDimm;UINT32 SmbiosHandle;};
struct _E2BDE2F6A658BD89D9688CEBEA05AB2E {EFI_DEVICE_PATH_PROTOCOL Header;EFI_GUID Guid;UINT8 VendorDefinedData[1];};
struct _E33269EACD825C55A32489FC20436724 {WIN_CERTIFICATE Hdr;EFI_GUID CertType;UINT8 CertData[1];};
struct _E415E2751C8815A251B5F32BC2F44190 {UINT8 SerializationAction;UINT8 Instruction;UINT8 Flags;UINT8 Reserved0;EFI_ACPI_4_0_GENERIC_ADDRESS_STRUCTURE RegisterRegion;UINT64 Value;UINT64 Mask;};
struct _E421FC21101E3C5915AE01ACA2277D29 {EFI_STATUS_CODE_DATA DataHeader;EFI_HANDLE ControllerHandle;EFI_HANDLE DriverBindingHandle;UINT16 DevicePathSize;};
struct _E4CAA01CB4FC3A32463493A4CB58CD8D {UINT8 Type;UINT8 Length;EFI_ACPI_6_0_HARDWARE_ERROR_NOTIFICATION_CONFIGURATION_WRITE_ENABLE_STRUCTURE ConfigurationWriteEnable;UINT32 PollInterval;UINT32 Vector;UINT32 SwitchToPollingThresholdValue;UINT32 SwitchToPollingThresholdWindow;UINT32 ErrorThresholdValue;UINT32 ErrorThresholdWindow;};
struct _E605436B6D69FC7AD8B1625024596CB4 {SMBIOS_STRUCTURE Hdr;UINT8 InstallableLanguages;UINT8 Flags;UINT8 Reserved[15];SMBIOS_TABLE_STRING CurrentLanguages;};
struct _E722216BAEE331D2535B9C8695D513A3 {EFI_PCI_CAPABILITY_HDR Hdr;UINT16 MsgCtrlReg;UINT32 MsgAddrReg;UINT16 MsgDataReg;};
struct _E75F0BE944C0FCB6E99CFED0DE3DC542 {EFI_IPv6_ADDRESS StationAddress;UINT16 StationPort;EFI_IPv6_ADDRESS RemoteAddress;UINT16 RemotePort;BOOLEAN ActiveFlag;};
struct _E8DF9B3292661BC507CCAEA539B3F92E {EFI_ACPI_ASF_RECORD_HEADER RecordHeader;UINT8 NumberOfControls;UINT8 ArrayElementLength;UINT16 RctlReserved;};
struct _E9EB00794BBE78384F3D16290A439BFD {EFI_PCI_CAPABILITY_HDR Hdr;UINT16 PMC;UINT16 PMCSR;UINT8 BridgeExtention;UINT8 Data;};
struct _E9F0887906CDF4F6D31FFD53A6DF9F6A {UINT8 Type;UINT8 Length;UINT16 Flags;UINT8 InterruptType;UINT8 ProcessorId;UINT8 ProcessorEid;UINT8 IoSapicVector;UINT32 GlobalSystemInterrupt;UINT32 PlatformInterruptSourceFlags;};
struct _E9F6C04F95593CCF2492DE00493F0DD8 {EFI_IPv4_ADDRESS LocalIp;EFI_IPv4_ADDRESS SubnetMask;EFI_IPv4_ADDRESS Gateway;UINT16 StationPort;EFI_IPv4_ADDRESS RemoteIp;UINT16 RemotePort;BOOLEAN ActiveFlag;};
struct _EA78F3BF8BD8468A78FEAD14EA377F96 {UINT32 Data1;UINT16 Data2;UINT16 Data3;UINT8 Data4[8];};
struct _EB8F46A830D9D94D2766D4C9A4BA60BD {UINT8 InjectionAction;UINT8 Instruction;UINT8 Flags;UINT8 Reserved0;EFI_ACPI_5_0_GENERIC_ADDRESS_STRUCTURE RegisterRegion;UINT64 Value;UINT64 Mask;};
struct _EBD444B5CC02E90760E7B081CCD0D95B {UINT8 InjectionAction;UINT8 Instruction;UINT8 Flags;UINT8 Reserved0;EFI_ACPI_5_1_GENERIC_ADDRESS_STRUCTURE RegisterRegion;UINT64 Value;UINT64 Mask;};
union _EC9053F147967E22E2590C1E50F04F29 {UINT8 Raw[1472];EFI_PXE_BASE_CODE_DHCPV4_PACKET Dhcpv4;EFI_PXE_BASE_CODE_DHCPV6_PACKET Dhcpv6;};
struct _EF2B645B56217D3DE53DDEA82D5E74E0 {UINT16 Type;UINT16 Length;EFI_ACPI_6_0_NFIT_DEVICE_HANDLE NFITDeviceHandle;UINT16 NumberOfFlushHintAddresses;UINT8 Reserved_10[6];};
struct _EF5AE40B59BDB6BB69A24E12D6228D0E {UINT32 Signature;EFI_IMAGE_FILE_HEADER FileHeader;EFI_IMAGE_OPTIONAL_HEADER64 OptionalHeader;};
struct _F005CA091951A17647839EB20452A1E0 {EFI_PCI_CAPABILITY_HDR Hdr;UINT8 Rev;UINT8 Reserved;UINT32 Status;UINT32 Command;};
struct _F13DFB1F2908D67B00108220A6F85C86 {SAL_SEC_HEADER SectionHeader;UINT64 ValidationBits;UINT64 PlatformErrorStatus;UINT64 PlatformRequestorId;UINT64 PlatformResponderId;UINT64 PlatformTargetId;UINT64 PlatformBusSpecificData;UINT8 OemComponentId[16];};
struct _F13EC32AD861012C67EEDC777C641229 {UINT8 Reserved[512];UINT8 Reserved1[248];UINT32 SMBASE;UINT32 SMMRevId;UINT16 IORestart;UINT16 AutoHALTRestart;UINT32 IEDBASE;UINT8 Reserved2[152];UINT32 IOMemAddr;UINT32 IOMisc;UINT32 _ES;UINT32 _CS;UINT32 _SS;UINT32 _DS;UINT32 _FS;UINT32 _GS;UINT32 _LDTBase;UINT32 _TR;UINT32 _DR7;UINT32 _DR6;UINT32 _EAX;UINT32 _ECX;UINT32 _EDX;UINT32 _EBX;UINT32 _ESP;UINT32 _EBP;UINT32 _ESI;UINT32 _EDI;UINT32 _EIP;UINT32 _EFLAGS;UINT32 _CR3;UINT32 _CR0;};
struct _F14A0CFB34098AE87DDB3C99DBB83B9A {ACPI_LARGE_RESOURCE_HEADER Header;UINT8 ResType;UINT8 GenFlag;UINT8 SpecificFlag;UINT8 RevisionId;UINT8 Reserved;UINT64 AddrSpaceGranularity;UINT64 AddrRangeMin;UINT64 AddrRangeMax;UINT64 AddrTranslationOffset;UINT64 AddrLen;UINT64 TypeSpecificAttribute;};
struct _F19B1F4A90E646AB36AC0230C8E90425 {MEMORY_PROFILE_COMMON_HEADER Header;UINT64 CurrentTotalUsage;UINT64 PeakTotalUsage;UINT64 CurrentTotalUsageByType[17];UINT64 PeakTotalUsageByType[17];UINT64 TotalImageSize;UINT32 ImageCount;UINT32 SequenceCount;};
struct _F1E81DAA883C62B36E0F4AB83D157A1B {ACPI_LARGE_RESOURCE_HEADER Header;UINT8 Information;UINT32 BaseAddressMin;UINT32 BaseAddressMax;UINT32 Alignment;UINT32 Length;};
struct _F21C1A88A2EE64F577E38E0B85C93835 {EFI_ACPI_5_0_FPDT_PERFORMANCE_RECORD_HEADER Header;UINT32 Reserved;UINT64 ResetEnd;UINT64 OsLoaderLoadImageStart;UINT64 OsLoaderStartImageStart;UINT64 ExitBootServicesEntry;UINT64 ExitBootServicesExit;};
struct _F2E155DB6D099B6798F04C649E8B92A6 {FRAMEWORK_EFI_HII_HANDLE HiiHandle;EFI_GUID PackageGuid;UINT32 DataTableSize;UINT32 IfrDataOffset;UINT32 StringDataOffset;UINT32 VariableDataOffset;UINT32 DevicePathOffset;UINT32 NumberOfVariableData;UINT32 NumberOfLanguages;};
struct _F3F4EB21D4CD1644BEF61DF9960042A1 {SMBIOS_STRUCTURE Hdr;UINT8 NumberOfAdditionalInformationEntries;ADDITIONAL_INFORMATION_ENTRY AdditionalInfoEntries[1];};
struct _F4169FCFB32B1326C8F7F00940954AC9 {EFI_ACPI_DESCRIPTION_HEADER Header;GUID Identifier;UINT16 DataOffset;};
struct _F49DA75B990C47B377CE7AAC7E705BA7 {EFI_ACPI_5_1_FPDT_PERFORMANCE_RECORD_HEADER Header;UINT32 ResumeCount;UINT64 FullResume;UINT64 AverageResume;};
struct _F76F58FED370FE550FAE95E2DB6495AB {EFI_FVB_ATTRIBUTES_2 FvAttributes;EFI_GUID FvFormat;EFI_GUID FvName;void *FvStart;UINT64 FvSize;};
struct _F82C7CF31A94CF1E43C42E26FF4F1D8A {UINT8 Type;UINT8 Code;UINT16 Checksum;union _F82C7CF31A94CF1E43C42E26FF4F1D8A___DC0BAFAEDE9FCAFF80C457AFB6D04FDA u;UINT8 Data[494];};
struct _F94E551C4E7F83190A6F3C3BA73B9B85 {EFI_ACPI_DESCRIPTION_HEADER Header;UINT64 CntControlBasePhysicalAddress;UINT32 Reserved;UINT32 SecurePL1TimerGSIV;UINT32 SecurePL1TimerFlags;UINT32 NonSecurePL1TimerGSIV;UINT32 NonSecurePL1TimerFlags;UINT32 VirtualTimerGSIV;UINT32 VirtualTimerFlags;UINT32 NonSecurePL2TimerGSIV;UINT32 NonSecurePL2TimerFlags;UINT64 CntReadBasePhysicalAddress;UINT32 PlatformTimerCount;UINT32 PlatformTimerOffset;};
struct _F98E9868A1D3EA615C1B6BAEA6621ABA {EFI_PCI_CAPABILITY_HDR Hdr;UINT16 CommandReg;UINT32 StatusReg;};
struct _F99B70E853BBE276945C20D75C9C4AB5 {EFI_STATUS_CODE_DATA DataHeader;UINT32 LineNumber;UINT32 FileNameSize;EFI_STATUS_CODE_STRING_DATA *FileName;};
struct _FA0FCFC5E91DF9D5D00202CEA491E9F3 {EFI_STATUS_CODE_DATA DataHeader;EFI_HANDLE DeviceHandle;EFI_PHYSICAL_ADDRESS RomImageBase;};
struct _FA6AAB53270C8CFB12CB95253772A103 {EFI_HANDLE DriverHandle;UINT32 ServiceCount;EFI_TCP6_SERVICE_POINT Services[1];};
struct _FCAC3FF5AC09C652C812670302663021 {ACPI_LARGE_RESOURCE_HEADER Header;UINT8 Information;UINT16 BaseAddressMin;UINT16 BaseAddressMax;UINT16 Alignment;UINT16 Length;};
struct _FCAE42F8DAF516AC5995CDFD0E938215 {EFI_HANDLE DriverHandle;UINT32 ServiceCount;EFI_UDP6_SERVICE_POINT Services[1];};
struct _FCD72BE2F93774EAA3A635EBA87ACC1D {PCI_EXPRESS_EXTENDED_CAPABILITIES_HEADER Header;UINT16 MultiCastCapability;UINT16 MulticastControl;UINT64 McBaseAddress;UINT64 McReceiveAddress;UINT64 McBlockAll;UINT64 McBlockUntranslated;UINT64 McOverlayBar;};
struct _FE140301C84DDB7768C685C5F48B19EB {EFI_PHYSICAL_ADDRESS Handle;CHAR8 Token[8];CHAR8 Module[8];UINT64 StartTimeStamp;UINT64 EndTimeStamp;};
struct _FEC1B3E7B4BD6F8FB5125B8FDA09F2D0 {TPM_PT tag;UINT8 sizeofSelect;BYTE pcrSelect[3];};
struct _FF6A55059D2F8FBB228E6A52654D0074 {EFI_HOB_GENERIC_HEADER Header;EFI_PHYSICAL_ADDRESS BaseAddress;UINT64 Length;};
typedef EFI_DEVICE_PATH_PROTOCOL *(*EFI_DEVICE_PATH_UTILS_CREATE_NODE)(UINT8 NodeType, UINT8 NodeSubType, UINT16 NodeLength);
typedef BOOLEAN (*EFI_UNICODE_COLLATION_METAIMATCH)(EFI_UNICODE_COLLATION_PROTOCOL *This, CHAR16 *String, CHAR16 *Pattern);
struct _EFI_HII_AIBT_RESTORE_SCRN_BLOCK {EFI_IMAGE_ID DftImageId;UINT16 Width;UINT16 Height;UINT16 CellCount;EFI_HII_ANIMATION_CELL AnimationCell[1];};
struct _EFI_HII_SIBT_STRINGS_SCSU_BLOCK {EFI_HII_STRING_BLOCK Header;UINT16 StringCount;UINT8 StringText[1];};
struct _EFI_HII_SIBT_STRINGS_UCS2_BLOCK {EFI_HII_STRING_BLOCK Header;UINT16 StringCount;CHAR16 StringText[1];};
struct _TCG_EFI_BOOT_SERVICE_CAPABILITY {UINT8 Size;TCG_VERSION StructureVersion;TCG_VERSION ProtocolSpecVersion;UINT8 HashAlgorithmBitmap;BOOLEAN TPMPresentFlag;BOOLEAN TPMDeactivatedFlag;};
typedef BOOL (__stdcall *WinNtSetConsoleScreenBufferSize)(HANDLE ConsoleOutput, COORD Size);
typedef void (*EFI_PEI_CPU_IO_PPI_MEM_WRITE64)(const EFI_PEI_SERVICES **PeiServices, const EFI_PEI_CPU_IO_PPI *This, UINT64 Address, UINT64 Data);
typedef INTN (*EFI_UNICODE_COLLATION_STRICOLL)(EFI_UNICODE_COLLATION_PROTOCOL *This, CHAR16 *Str1, CHAR16 *Str2);
typedef SAL_RETURN_REGS (*SAL_INTERNAL_EXTENDED_SAL_PROC)(UINT64 FunctionId, UINT64 Arg2, UINT64 Arg3, UINT64 Arg4, UINT64 Arg5, UINT64 Arg6, UINT64 Arg7, UINT64 Arg8, BOOLEAN VirtualMode, void *ModuleGlobal);
typedef HANDLE (__stdcall *WinNtCreateConsoleScreenBuffer)(DWORD DesiredAccess, DWORD ShareMode, const SECURITY_ATTRIBUTES *SecurityAttributes, DWORD Flags, LPVOID ScreenBufferData);
typedef BOOL (__stdcall *WinNtScrollConsoleScreenBuffer)(HANDLE ConsoleOutput, const SMALL_RECT *ScrollRectangle, const SMALL_RECT *ClipRectangle, COORD DestinationOrigin, const CHAR_INFO *Fill);
struct _EFI_HII_IIBT_IMAGE_1BIT_BLOCK {EFI_HII_IMAGE_BLOCK Header;UINT8 PaletteIndex;EFI_HII_IIBT_IMAGE_1BIT_BASE Bitmap;};
struct _EFI_HII_IIBT_IMAGE_4BIT_BLOCK {EFI_HII_IMAGE_BLOCK Header;UINT8 PaletteIndex;EFI_HII_IIBT_IMAGE_4BIT_BASE Bitmap;};
struct _EFI_SHELL_PARAMETERS_PROTOCOL {CHAR16 **Argv;UINTN Argc;SHELL_FILE_HANDLE StdIn;SHELL_FILE_HANDLE StdOut;SHELL_FILE_HANDLE StdErr;};
typedef void (*EFI_PEI_CPU_IO_PPI_IO_WRITE64)(const EFI_PEI_SERVICES **PeiServices, const EFI_PEI_CPU_IO_PPI *This, UINT64 Address, UINT64 Data);
typedef UINT64 (*EFI_PEI_CPU_IO_PPI_MEM_READ64)(const EFI_PEI_SERVICES **PeiServices, const EFI_PEI_CPU_IO_PPI *This, UINT64 Address);
typedef BOOL (__stdcall *WinNtSetConsoleCursorPosition)(HANDLE ConsoleInput, COORD CursorPosition);
typedef UINTN (*ASCII_S_PRINT_UNICODE_FORMAT)(CHAR8 *StartOfBuffer, UINTN BufferSize, const CHAR16 *FormatString, ...);
typedef CHAR16 *(*EFI_DEVICE_PATH_TO_TEXT_NODE)(const EFI_DEVICE_PATH_PROTOCOL *DeviceNode, BOOLEAN DisplayOnly, BOOLEAN AllowShortcuts);
typedef CHAR16 *(*EFI_DEVICE_PATH_TO_TEXT_PATH)(const EFI_DEVICE_PATH_PROTOCOL *DevicePath, BOOLEAN DisplayOnly, BOOLEAN AllowShortcuts);
typedef BOOLEAN (*EFI_PCD_PROTOCOL_GET_BOOLEAN)(const EFI_GUID *Guid, UINTN TokenNumber);
typedef UINT64 (*EFI_PEI_CPU_IO_PPI_IO_READ64)(const EFI_PEI_SERVICES **PeiServices, const EFI_PEI_CPU_IO_PPI *This, UINT64 Address);
typedef void (*SHELLENV_CLOSE_CONSOLE_PROXY)(EFI_HANDLE ConInHandle, EFI_SIMPLE_TEXT_INPUT_PROTOCOL **ConIn, EFI_HANDLE ConOutHandle, EFI_SIMPLE_TEXT_OUTPUT_PROTOCOL **ConOut);
typedef UINTN (*UNICODE_S_PRINT_ASCII_FORMAT)(CHAR16 *StartOfBuffer, UINTN BufferSize, const CHAR8 *FormatString, ...);
struct _EFI_IFR_VARSTORE_NAME_VALUE {EFI_IFR_OP_HEADER Header;EFI_VARSTORE_ID VarStoreId;EFI_GUID Guid;};
struct s_pxe_cpb_transmit_fragments {PXE_UINT32 FrameLen;PXE_UINT16 MediaheaderLen;PXE_UINT16 FragCnt;struct s_pxe_cpb_transmit_fragments___B13E8BB19B25C47A4B5B59F0D316DBC1 FragDesc[16];};
typedef BOOLEAN (*EFI_PEI_PCD_PPI_GET_BOOLEAN)(const EFI_GUID *Guid, UINTN TokenNumber);
typedef BOOLEAN (*PCD_PROTOCOL_GET_EX_BOOLEAN)(const EFI_GUID *Guid, UINTN TokenNumber);
typedef DWORD (__stdcall *WinNtGetEnvironmentVariable)(LPCTSTR Name, LPTSTR Buffer, DWORD Size);
union _EFI_USBFN_MESSAGE_PAYLOAD {EFI_USB_DEVICE_REQUEST udr;EFI_USBFN_TRANSFER_RESULT utr;EFI_USB_BUS_SPEED ubs;};
struct _PARALLEL_CONN_DEVICE_PATH {ACPI_HID_DEVICE_PATH PciRootBridgeDevicePath;PCI_DEVICE_PATH LpcBridgeDevicePath;ACPI_HID_DEVICE_PATH LpcBusDevicePath;EFI_DEVICE_PATH_PROTOCOL EndDevicePath;};
typedef BOOL (__stdcall *WinNtGetConsoleCursorInfo)(HANDLE ConsoleOutput, PCONSOLE_CURSOR_INFO ConsoleCursorInfo);
struct _EFI_HII_GIBT_GLYPH_BLOCK {EFI_HII_GLYPH_BLOCK Header;EFI_HII_GLYPH_INFO Cell;UINT8 BitmapData[1];};
struct _EFI_PEI_LOADED_IMAGE_PPI {EFI_PHYSICAL_ADDRESS ImageAddress;UINT64 ImageSize;EFI_PEI_FILE_HANDLE FileHandle;};
typedef UGA_STATUS (*PUGA_FW_SERVICE_DISPATCH)(PUGA_DEVICE pDevice, PUGA_IO_REQUEST pIoRequest);
struct _EFI_HII_AIBT_EXT2_BLOCK {EFI_HII_ANIMATION_BLOCK Header;UINT8 BlockType2;UINT16 Length;};
struct _EFI_HII_AIBT_EXT4_BLOCK {EFI_HII_ANIMATION_BLOCK Header;UINT8 BlockType2;UINT32 Length;};
struct _EFI_HII_GIBT_EXT2_BLOCK {EFI_HII_GLYPH_BLOCK Header;UINT8 BlockType2;UINT16 Length;};
struct _EFI_HII_GIBT_EXT4_BLOCK {EFI_HII_GLYPH_BLOCK Header;UINT8 BlockType2;UINT32 Length;};
struct _EFI_HII_IIBT_EXT2_BLOCK {EFI_HII_IMAGE_BLOCK Header;UINT8 BlockType2;UINT16 Length;};
struct _EFI_HII_IIBT_EXT4_BLOCK {EFI_HII_IMAGE_BLOCK Header;UINT8 BlockType2;UINT32 Length;};
struct _EFI_HII_IIBT_JPEG_BLOCK {EFI_HII_IMAGE_BLOCK Header;UINT32 Size;UINT8 Data[1];};
struct _EFI_HII_SIBT_EXT2_BLOCK {EFI_HII_STRING_BLOCK Header;UINT8 BlockType2;UINT16 Length;};
struct _EFI_HII_SIBT_EXT4_BLOCK {EFI_HII_STRING_BLOCK Header;UINT8 BlockType2;UINT32 Length;};
struct _EFI_IFR_QUESTION_REF3_3 {EFI_IFR_OP_HEADER Header;EFI_STRING_ID DevicePath;EFI_GUID Guid;};
struct _EFI_RUNTIME_IMAGE_ENTRY {void *ImageBase;UINT64 ImageSize;void *RelocationData;EFI_HANDLE Handle;EFI_LIST_ENTRY Link;};
struct _FLOOPY_CONN_DEVICE_PATH {ACPI_HID_DEVICE_PATH PciRootBridgeDevicePath;PCI_DEVICE_PATH LpcBridgeDevicePath;ACPI_HID_DEVICE_PATH LpcBusDevicePath;EFI_DEVICE_PATH_PROTOCOL EndDevicePath;};
struct _SERIAL_CONN_DEVICE_PATH {ACPI_HID_DEVICE_PATH PciRootBridgeDevicePath;PCI_DEVICE_PATH LpcBridgeDevicePath;ACPI_HID_DEVICE_PATH LpcBusDevicePath;EFI_DEVICE_PATH_PROTOCOL EndDevicePath;};
struct tdTPM_DELEGATE_TABLE_ROW {TPM_STRUCTURE_TAG tag;TPM_DELEGATE_PUBLIC pub;TPM_SECRET authValue;};
struct tdTPM_SYM_CA_ATTESTATION {UINT32 credSize;TPM_KEY_PARMS algorithm;UINT8 *credential;};
typedef UINT16 (*EFI_PCD_PROTOCOL_GET_16)(const EFI_GUID *Guid, UINTN TokenNumber);
typedef UINT32 (*EFI_PCD_PROTOCOL_GET_32)(const EFI_GUID *Guid, UINTN TokenNumber);
typedef UINT64 (*EFI_PCD_PROTOCOL_GET_64)(const EFI_GUID *Guid, UINTN TokenNumber);
typedef UINTN (*UNICODE_VALUE_TO_STRING)(CHAR16 *Buffer, UINTN Flags, INT64 Value, UINTN Width);
typedef BOOL (__stdcall *WinNtEscapeCommFunction)(HANDLE FileHandle, DWORD Func);
typedef BOOL (__stdcall *WinNtGetCommModemStatus)(HANDLE FileHandle, LPDWORD ModemStat);
typedef BOOL (__stdcall *WinNtGetDiskFreeSpaceEx)(LPCTSTR DirectoryName, PULARGE_INTEGER FreeBytesAvailable, PULARGE_INTEGER TotalNumberOfBytes, PULARGE_INTEGER TotoalNumberOfFreeBytes);
struct _EFI_IFR_EQ_ID_VAL_LIST {EFI_IFR_OP_HEADER Header;EFI_QUESTION_ID QuestionId;UINT16 ListLength;UINT16 ValueList[1];};
struct _EFI_IPSEC_SPD_SELECTOR {UINT32 LocalAddressCount;EFI_IP_ADDRESS_INFO *LocalAddress;UINT32 RemoteAddressCount;EFI_IP_ADDRESS_INFO *RemoteAddress;UINT16 NextLayerProtocol;UINT16 LocalPort;UINT16 LocalPortRange;UINT16 RemotePort;UINT16 RemotePortRange;};
typedef UINT8 (*EFI_PCD_PROTOCOL_GET_8)(const EFI_GUID *Guid, UINTN TokenNumber);
typedef UINT16 (*EFI_PEI_PCD_PPI_GET_16)(const EFI_GUID *Guid, UINTN TokenNumber);
typedef UINT32 (*EFI_PEI_PCD_PPI_GET_32)(const EFI_GUID *Guid, UINTN TokenNumber);
typedef UINT64 (*EFI_PEI_PCD_PPI_GET_64)(const EFI_GUID *Guid, UINTN TokenNumber);
typedef BOOLEAN (*PCD_PPI_GET_EX_BOOLEAN)(const EFI_GUID *Guid, UINTN TokenNumber);
typedef UINT16 (*PCD_PROTOCOL_GET_EX_16)(const EFI_GUID *Guid, UINTN TokenNumber);
typedef UINT32 (*PCD_PROTOCOL_GET_EX_32)(const EFI_GUID *Guid, UINTN TokenNumber);
typedef UINT64 (*PCD_PROTOCOL_GET_EX_64)(const EFI_GUID *Guid, UINTN TokenNumber);
typedef BOOL (__stdcall *WinNtSetFileAttributes)(LPCWSTR FileName, DWORD FileAttributes);
typedef BOOL (__stdcall *WinNtSetThreadPriority)(HANDLE hThread, INTN nPriority);
struct _EFI_FONT_DISPLAY_INFO {EFI_GRAPHICS_OUTPUT_BLT_PIXEL ForegroundColor;EFI_GRAPHICS_OUTPUT_BLT_PIXEL BackgroundColor;EFI_FONT_INFO_MASK FontInfoMask;EFI_FONT_INFO FontInfo;};
struct s_pxe_db_get_init_info {PXE_UINT32 MemoryRequired;PXE_UINT32 FrameDataLen;PXE_UINT32 LinkSpeeds[4];PXE_UINT32 NvCount;PXE_UINT16 NvWidth;PXE_UINT16 MediaHeaderLen;PXE_UINT16 HWaddrLen;PXE_UINT16 MCastFilterCnt;PXE_UINT16 TxBufCnt;PXE_UINT16 TxBufSize;PXE_UINT16 RxBufCnt;PXE_UINT16 RxBufSize;PXE_UINT8 IFtype;PXE_UINT8 SupportedDuplexModes;PXE_UINT8 SupportedLoopBackModes;};
struct tdEFI_IMAGE_LOAD_EVENT {EFI_PHYSICAL_ADDRESS ImageLocationInMemory;UINTN ImageLengthInMemory;UINTN ImageLinkTimeAddress;UINTN LengthOfDevicePath;EFI_DEVICE_PATH_PROTOCOL DevicePath[1];};
struct tdTPM_MIGRATIONKEYAUTH {TPM_PUBKEY migrationKey;TPM_MIGRATE_SCHEME migrationScheme;TPM_DIGEST digest;};
typedef UINTN (*ASCII_VALUE_TO_STRING)(CHAR8 *Buffer, UINTN Flags, INT64 Value, UINTN Width);
typedef UINT8 (*EFI_PEI_PCD_PPI_GET_8)(const EFI_GUID *Guid, UINTN TokenNumber);
typedef UINT8 (*PCD_PROTOCOL_GET_EX_8)(const EFI_GUID *Guid, UINTN TokenNumber);
typedef CHAR16 *(*SHELL_COMMAND_GETHELP)(EFI_SHELL_DYNAMIC_COMMAND_PROTOCOL *This, const CHAR8 *Language);
typedef BOOL (__stdcall *WinNtAdjustWindowRect)(LPRECT lpRect, DWORD dwStyle, BOOL bMenu);
typedef BOOL (__stdcall *WinNtGetDiskFreeSpace)(LPCTSTR RootPathName, LPDWORD SectorsPerCluster, LPDWORD BytesPerSector, LPDWORD NumberOfFreeClusters, LPDWORD TotalNumberOfClusters);
typedef BOOL (__stdcall *WinNtSetPriorityClass)(HANDLE Process, DWORD PriorityClass);
struct _EFI_IFR_DEFAULTSTORE {EFI_IFR_OP_HEADER Header;EFI_STRING_ID DefaultName;UINT16 DefaultId;};
struct _EFI_IFR_ORDERED_LIST {EFI_IFR_OP_HEADER Header;EFI_IFR_QUESTION_HEADER Question;UINT8 MaxContainers;UINT8 Flags;};
struct _EFI_IFR_RESET_BUTTON {EFI_IFR_OP_HEADER Header;EFI_IFR_STATEMENT_HEADER Statement;EFI_DEFAULT_ID DefaultId;};
struct _PS2_CONN_DEVICE_PATH {ACPI_HID_DEVICE_PATH PciRootBridgeDevicePath;PCI_DEVICE_PATH LpcBridgeDevicePath;ACPI_HID_DEVICE_PATH LpcBusDevicePath;EFI_DEVICE_PATH_PROTOCOL EndDevicePath;};
struct _RMC_CONN_DEVICE_PATH {ACPI_HID_DEVICE_PATH PciRootBridgeDevicePath;PCI_DEVICE_PATH PciBridgeDevicePath;PCI_DEVICE_PATH PciBusDevicePath;EFI_DEVICE_PATH_PROTOCOL EndDevicePath;};
struct _USB_PORT_DEVICE_PATH {ACPI_HID_DEVICE_PATH PciRootBridgeDevicePath;PCI_DEVICE_PATH PciBusDevicePath;EFI_DEVICE_PATH_PROTOCOL EndDevicePath;};
struct tdTPM_RQU_COMMAND_HDR {TPM_STRUCTURE_TAG tag;UINT32 paramSize;TPM_COMMAND_CODE ordinal;};
struct tdTPM_RSP_COMMAND_HDR {TPM_STRUCTURE_TAG tag;UINT32 paramSize;TPM_RESULT returnCode;};
union u_pxe_cpb_nvdata_bulk {PXE_UINT8 Byte[512];PXE_UINT16 Word[256];PXE_UINT32 Dword[128];};
typedef BOOL (__stdcall *WinNtCreateDirectory)(LPCWSTR PathName, LPSECURITY_ATTRIBUTES SecurityAttributes);
typedef LPVOID (__stdcall *WinNtMapViewOfFileEx)(HANDLE FileHandle, DWORD DesiredAccess, DWORD FileOffsetHigh, DWORD FileOffsetLow, DWORD NumberOfBytesToMap, LPVOID BaseAddress);
typedef BOOL (__stdcall *WinNtSetCommTimeouts)(HANDLE FileHandle, LPCOMMTIMEOUTS CommTimeouts);
typedef BOOL (__stdcall *WinNtTerminateThread)(HANDLE hThread, DWORD dwExitCode);
typedef BOOL (__stdcall *WinNtUnregisterClass)(LPCTSTR lpClassName, HINSTANCE hInstance);
struct tdTPM_AUDIT_EVENT_IN {TPM_STRUCTURE_TAG tag;TPM_DIGEST inputParms;TPM_COUNTER_VALUE auditCount;};
struct tdTPM_PCR_INFO_SHORT {TPM_PCR_SELECTION pcrSelection;TPM_LOCALITY_SELECTION localityAtRelease;TPM_COMPOSITE_HASH digestAtRelease;};
typedef FARPROC (__stdcall *WinNtGetProcAddress)(HMODULE Module, LPCSTR ProcName);
struct _EFI_IFR_WARNING_IF {EFI_IFR_OP_HEADER Header;EFI_STRING_ID Warning;UINT8 TimeOut;};
struct _GB_NIC_DEVICE_PATH {ACPI_HID_DEVICE_PATH PciRootBridgeDevicePath;PCI_DEVICE_PATH PciBridgeDevicePath;PCI_DEVICE_PATH PciXBridgeDevicePath;PCI_DEVICE_PATH PciXBusDevicePath;EFI_DEVICE_PATH_PROTOCOL EndDevicePath;};
struct tdTPM_COUNTER_VALUE {TPM_STRUCTURE_TAG tag;UINT8 label[4];TPM_ACTUAL_COUNT counter;};
struct tdTPM_DAA_SENSITIVE {TPM_STRUCTURE_TAG tag;UINT32 internalSize;UINT8 *internalData;};
struct tdTPM_PCR_COMPOSITE {TPM_PCR_SELECTION select;UINT32 valueSize;TPM_PCRVALUE pcrValue[1];};
typedef HANDLE (__stdcall *WinNtFindFirstFile)(LPCTSTR FileName, LPWIN32_FIND_DATA FindFileData);
typedef BOOL (__stdcall *WinNtGetClientRect)(HWND hWnd, LPRECT lpRect);
typedef BOOL (__stdcall *WinNtGetWindowRect)(HWND, LPRECT);
struct _EFI_IFR_DEFAULT_2 {EFI_IFR_OP_HEADER Header;UINT16 DefaultId;UINT8 Type;};
struct _EFI_IFR_EQ_ID_VAL {EFI_IFR_OP_HEADER Header;EFI_QUESTION_ID QuestionId;UINT16 Value;};
struct s_pxe_cpb_transmit {PXE_UINT64 FrameAddr;PXE_UINT32 DataLen;PXE_UINT16 MediaheaderLen;PXE_UINT16 reserved;};
struct tdTPM_IDENTITY_REQ {UINT32 asymSize;UINT32 symSize;TPM_KEY_PARMS asymAlgorithm;TPM_KEY_PARMS symAlgorithm;UINT8 *asymBlob;UINT8 *symBlob;};
typedef UINT16 (*PCD_PPI_GET_EX_16)(const EFI_GUID *Guid, UINTN TokenNumber);
typedef UINT32 (*PCD_PPI_GET_EX_32)(const EFI_GUID *Guid, UINTN TokenNumber);
typedef UINT64 (*PCD_PPI_GET_EX_64)(const EFI_GUID *Guid, UINTN TokenNumber);
typedef void (*SHELLENV_ADD_PROT)(EFI_GUID *Protocol, SHELLENV_DUMP_PROTOCOL_INFO DumpToken, SHELLENV_DUMP_PROTOCOL_INFO DumpInfo, CHAR16 *IdString);
typedef CHAR16 *(*SHELLENV_GET_PROT)(EFI_GUID *Protocol, BOOLEAN GenId);
typedef SHELL_STATUS (*SHELL_RUN_COMMAND)(EFI_HANDLE ImageHandle, EFI_SYSTEM_TABLE *SystemTable);
typedef BOOL (__stdcall *WinNtFindNextFile)(HANDLE FindFile, LPWIN32_FIND_DATA FindFileData);
typedef BOOL (__stdcall *WinNtGetCommState)(HANDLE FileHandle, LPDCB DCB);
typedef BOOL (__stdcall *WinNtSetCommState)(HANDLE FileHandle, LPDCB DCB);
struct _EFI_IFR_CHECKBOX {EFI_IFR_OP_HEADER Header;EFI_IFR_QUESTION_HEADER Question;UINT8 Flags;};
struct _EFI_IFR_PASSWORD {EFI_IFR_OP_HEADER Header;EFI_IFR_QUESTION_HEADER Question;UINT16 MinSize;UINT16 MaxSize;};
struct _EFI_IFR_SUBTITLE {EFI_IFR_OP_HEADER Header;EFI_IFR_STATEMENT_HEADER Statement;UINT8 Flags;};
struct _RIDE_DEVICE_PATH {ACPI_HID_DEVICE_PATH PciRootBridgeDevicePath;PCI_DEVICE_PATH PciBridgeDevicePath;PCI_DEVICE_PATH PciBusDevicePath;EFI_DEVICE_PATH_PROTOCOL EndDevicePath;};
struct tdTPM_STANY_FLAGS {TPM_STRUCTURE_TAG tag;BOOLEAN postInitialise;TPM_MODIFIER_INDICATOR localityModifier;BOOLEAN transportExclusive;BOOLEAN TOSPresent;};
struct tdTPM_STORED_DATA {TPM_STRUCT_VER ver;UINT32 sealInfoSize;UINT8 *sealInfo;UINT32 encDataSize;UINT8 *encData;};
typedef UINT8 (*PCD_PPI_GET_EX_8)(const EFI_GUID *Guid, UINTN TokenNumber);
typedef BOOL (__stdcall *WinNtTlsSetValue)(DWORD dwTlsIndex, LPVOID lpTlsValue);
struct _EFI_IMAGE_INPUT {UINT32 Flags;UINT16 Width;UINT16 Height;EFI_GRAPHICS_OUTPUT_BLT_PIXEL *Bitmap;};
struct _EFI_IPSEC_SA_ID {UINT32 Spi;EFI_IPSEC_PROTOCOL_TYPE Proto;EFI_IP_ADDRESS DestAddress;};
struct _IDE_DEVICE_PATH {ACPI_HID_DEVICE_PATH PciRootBridgeDevicePath;PCI_DEVICE_PATH PciBusDevicePath;EFI_DEVICE_PATH_PROTOCOL EndDevicePath;};
struct tdEFI_TCG2_EVENT {UINT32 Size;EFI_TCG2_EVENT_HEADER Header;UINT8 Event[1];};
struct tdTPM_BOUND_DATA {TPM_STRUCT_VER ver;TPM_PAYLOAD_TYPE payload;UINT8 payloadData[1];};
struct tdTPM_DAA_ISSUER {TPM_STRUCTURE_TAG tag;TPM_DIGEST DAA_digest_R0;TPM_DIGEST DAA_digest_R1;TPM_DIGEST DAA_digest_S0;TPM_DIGEST DAA_digest_S1;TPM_DIGEST DAA_digest_n;TPM_DIGEST DAA_digest_gamma;UINT8 DAA_generic_q[26];};
struct undiconfig_table {UINT32 NumberOfInterfaces;UINT32 reserved;UNDI_CONFIG_TABLE *nextlink;struct undiconfig_table___E4D37D6E09D6D39D1DAF0D3F49E6ABB4 NII_entry[1];};
typedef HDC (__stdcall *WinNtBeginPaint)(HWND hWnd, LPPAINTSTRUCT lpPaint);
typedef HCURSOR (__stdcall *WinNtLoadCursor)(HINSTANCE hInstance, LPCTSTR lpCursorName);
typedef BOOL (__stdcall *WinNtMoveWindow)(HWND, INT32, INT32, INT32, INT32, BOOL);
typedef BOOL (__stdcall *WinNtShowWindow)(HWND hWnd, INT32 nCmdShow);
struct _EFI_IFR_ACTION {EFI_IFR_OP_HEADER Header;EFI_IFR_QUESTION_HEADER Question;EFI_STRING_ID QuestionConfig;};
struct _EFI_IFR_STRING {EFI_IFR_OP_HEADER Header;EFI_IFR_QUESTION_HEADER Question;UINT8 MinSize;UINT8 MaxSize;UINT8 Flags;};
struct _EFI_IP6_HEADER {unsigned __int8 TrafficClassH : 4;unsigned __int8 Version : 4;unsigned __int8 FlowLabelH : 4;unsigned __int8 TrafficClassL : 4;UINT16 FlowLabelL;UINT16 PayloadLength;UINT8 NextHeader;UINT8 HopLimit;EFI_IPv6_ADDRESS SourceAddress;EFI_IPv6_ADDRESS DestinationAddress;};
struct _MTRR_SETTINGS_ {MTRR_FIXED_SETTINGS Fixed;MTRR_VARIABLE_SETTINGS Variables;UINT64 MtrrDefType;};
typedef BOOL (__stdcall *WinNtPurgeComm)(HANDLE FileHandle, DWORD Flags);
typedef INT32 (__stdcall *WinNtReleaseDC)(HWND hWnd, HDC hDC);
struct hid_descriptor {UINT8 Length;UINT8 DescriptorType;UINT16 BcdHID;UINT8 CountryCode;UINT8 NumDescriptors;EFI_USB_HID_CLASS_DESCRIPTOR HidClassDesc[1];};
struct tdEFI_GPT_DATA {EFI_PARTITION_TABLE_HEADER EfiPartitionHeader;UINTN NumberOfPartitions;EFI_PARTITION_ENTRY Partitions[1];};
typedef HICON (__stdcall *WinNtLoadIcon)(HINSTANCE hInstance, LPCTSTR lpIconName);
struct _EFI_IFR_DATE {EFI_IFR_OP_HEADER Header;EFI_IFR_QUESTION_HEADER Question;UINT8 Flags;};
struct _EFI_IFR_FORM {EFI_IFR_OP_HEADER Header;UINT16 FormId;EFI_STRING_ID FormTitle;};
struct _EFI_IFR_TEXT {EFI_IFR_OP_HEADER Header;EFI_IFR_STATEMENT_HEADER Statement;EFI_STRING_ID TextTwo;};
struct _EFI_IFR_TIME {EFI_IFR_OP_HEADER Header;EFI_IFR_QUESTION_HEADER Question;UINT8 Flags;};
struct _EFI_SIO_INFO {EFI_ACPI_HID Hid;EFI_ACPI_UID Uid;UINT8 Ldn;};
struct s_pxe_sw_undi {PXE_UINT32 Signature;PXE_UINT8 Len;PXE_UINT8 Fudge;PXE_UINT8 Rev;PXE_UINT8 IFcnt;PXE_UINT8 MajorVer;PXE_UINT8 MinorVer;PXE_UINT8 IFcntExt;PXE_UINT8 reserved1;PXE_UINT32 Implementation;PXE_UINT64 EntryPoint;PXE_UINT8 reserved2[3];PXE_UINT8 BusCnt;PXE_UINT32 BusType[1];};
struct tdTPM_DAA_TPM {TPM_STRUCTURE_TAG tag;TPM_DIGEST DAA_digestIssuer;TPM_DIGEST DAA_digest_v0;TPM_DIGEST DAA_digest_v1;TPM_DIGEST DAA_rekey;UINT32 DAA_count;};
struct _EFI_IFR_REF {EFI_IFR_OP_HEADER Header;EFI_IFR_QUESTION_HEADER Question;EFI_FORM_ID FormId;};
struct dirent {UINT32 d_fileno;UINT16 d_reclen;UINT8 d_type;UINT8 d_namlen;char d_name[256];};
struct _EFI_HII_SIBT_STRINGS_UCS2_FONT_BLOCK {EFI_HII_STRING_BLOCK Header;UINT8 FontIdentifier;UINT16 StringCount;CHAR16 StringText[1];};
struct _01201FCFD96DE29838922AB74111EF6C {UINT32 Signature;INTN RefCnt;NET_VECTOR_EXT_FREE Free;void *Arg;UINT32 Flag;UINT32 Len;UINT32 BlockNum;NET_BLOCK Block[1];};
struct _02E9892AD1173F57B0D9DCAEE7462CAD {EFI_HOB_GENERIC_HEADER Header;UINT32 Version;EFI_BOOT_MODE BootMode;EFI_PHYSICAL_ADDRESS EfiMemoryTop;EFI_PHYSICAL_ADDRESS EfiMemoryBottom;EFI_PHYSICAL_ADDRESS EfiFreeMemoryTop;EFI_PHYSICAL_ADDRESS EfiFreeMemoryBottom;EFI_PHYSICAL_ADDRESS EfiEndOfHobList;};
struct _037A7121310F6FC2A5E2428EF944B3F1 {EFI_ACPI_DESCRIPTION_HEADER Header;UINT32 FirmwareCtrl;UINT32 Dsdt;UINT8 IntModel;UINT8 Reserved1;UINT16 SciInt;UINT32 SmiCmd;UINT8 AcpiEnable;UINT8 AcpiDisable;UINT8 S4BiosReq;UINT8 Reserved2;UINT32 Pm1aEvtBlk;UINT32 Pm1bEvtBlk;UINT32 Pm1aCntBlk;UINT32 Pm1bCntBlk;UINT32 Pm2CntBlk;UINT32 PmTmrBlk;UINT32 Gpe0Blk;UINT32 Gpe1Blk;UINT8 Pm1EvtLen;UINT8 Pm1CntLen;UINT8 Pm2CntLen;UINT8 PmTmLen;UINT8 Gpe0BlkLen;UINT8 Gpe1BlkLen;UINT8 Gpe1Base;UINT8 Reserved3;UINT16 PLvl2Lat;UINT16 PLvl3Lat;UINT16 FlushSize;UINT16 FlushStride;UINT8 DutyOffset;UINT8 DutyWidth;UINT8 DayAlrm;UINT8 MonAlrm;UINT8 Century;UINT8 Reserved4;UINT8 Reserved5;UINT8 Reserved6;UINT32 Flags;};
struct _03D7420C3CE737299CCE486081392B67 {EFI_80211_MAC_ADDRESS BSSId;EFI_80211_AUTHENTICATION_TYPE AuthType;UINT32 FailureTimeout;UINT8 *FTContent;UINT8 *SAEContent;UINT8 *VendorSpecificInfo;};
struct _045E63C52D363788AB61174A38E56D57 {ACPI_LARGE_RESOURCE_HEADER Header;UINT8 RevisionId;UINT8 ResourceSourceIndex;UINT8 SerialBusType;UINT8 GeneralFlags;UINT16 TypeSpecificFlags;UINT8 TypeSpecificRevisionId;UINT16 TypeDataLength;UINT32 ConnectionSpeed;UINT16 SlaveAddress;};
struct _053218E54E0AD47DEB9BF7DE578D522B {UINT8 Name[8];union _053218E54E0AD47DEB9BF7DE578D522B___C7D0B743AB952EFC2A7AFEAC431E367D Misc;UINT32 VirtualAddress;UINT32 SizeOfRawData;UINT32 PointerToRawData;UINT32 PointerToRelocations;UINT32 PointerToLinenumbers;UINT16 NumberOfRelocations;UINT16 NumberOfLinenumbers;UINT32 Characteristics;};
struct _08785EA3AB2704170B8742C9F1FAEEE4 {UINT8 Type;UINT8 Length;UINT32 ProximityDomain;UINT16 Reserved1;UINT32 AddressBaseLow;UINT32 AddressBaseHigh;UINT32 LengthLow;UINT32 LengthHigh;UINT32 Reserved2;UINT32 Flags;UINT64 Reserved3;};
struct _08FDCA320F8CA4513298F7B531DB8F28 {MEMORY_PROFILE_COMMON_HEADER Header;UINT64 TotalFreeMemoryPages;UINT32 FreeMemoryEntryCount;UINT8 Reserved[4];};
struct _0BC60492AFAA0F9B3A141CC70E8062D2 {EFI_ACPI_DESCRIPTION_HEADER Header;UINT32 WatchdogHeaderLength;UINT16 PCISegment;UINT8 PCIBusNumber;UINT8 PCIDeviceNumber;UINT8 PCIFunctionNumber;UINT8 Reserved_45[3];UINT32 TimerPeriod;UINT32 MaxCount;UINT32 MinCount;UINT8 WatchdogFlags;UINT8 Reserved_61[3];UINT32 NumberWatchdogInstructionEntries;};
struct _0F26ACC6D4E0B18480126DF434086C83 {STRING_REF PortInternalConnectorDesignator;STRING_REF PortExternalConnectorDesignator;EFI_MISC_PORT_CONNECTOR_TYPE PortInternalConnectorType;EFI_MISC_PORT_CONNECTOR_TYPE PortExternalConnectorType;EFI_MISC_PORT_TYPE PortType;EFI_MISC_PORT_DEVICE_PATH PortPath;};
struct _1035A196500098FC0D27A8D2AAA76E56 {FRAMEWORK_EFI_IFR_OP_HEADER Header;STRING_REF Help;STRING_REF Text;STRING_REF TextTwo;UINT8 Flags;UINT16 Key;};
struct _1535F7B86AE88BCB9B997AA9482B66E8 {UINT8 DefaultProtocol;BOOLEAN AcceptAnyProtocol;BOOLEAN AcceptIcmpErrors;BOOLEAN AcceptPromiscuous;EFI_IPv6_ADDRESS DestinationAddress;EFI_IPv6_ADDRESS StationAddress;UINT8 TrafficClass;UINT8 HopLimit;UINT32 FlowLabel;UINT32 ReceiveTimeout;UINT32 TransmitTimeout;};
struct _15A30082C4C5935685683A1E67F4A9B5 {EFI_ACPI_DESCRIPTION_HEADER Header;EFI_ACPI_5_0_GENERIC_ADDRESS_STRUCTURE EcControl;EFI_ACPI_5_0_GENERIC_ADDRESS_STRUCTURE EcData;UINT32 Uid;UINT8 GpeBit;};
struct _182665C6086B79FDC64227DFF8CA49B3 {EFI_DEVICE_PATH_PROTOCOL Header;UINT32 Reserved;UINT64 BaudRate;UINT8 DataBits;UINT8 Parity;UINT8 StopBits;};
struct _19C5FC9A51293924C18E2EBFCCA05580 {EFI_PHYSICAL_ADDRESS BaseAddress;UINT64 Length;EFI_GCD_IO_TYPE GcdIoType;EFI_HANDLE ImageHandle;EFI_HANDLE DeviceHandle;};
struct _1B856EE7FF1B29CEB3E0F03133DD380C {EFI_80211_MAC_ADDRESS BSSId;EFI_80211_BSS_TYPE BSSType;UINT8 ConCapInfo;UINT8 ConCountryStr[2];UINT8 OperatingClass;UINT8 Channel;UINT8 Interval;EFI_80211_MULTIPLE_BSSID *MultipleBSSID;UINT8 RCPIMeasurement;UINT8 RSNIMeasurement;};
union _1B9299E1982A04DFFD37BAFD7CCC9536 {EFI_IMAGE_NT_HEADERS32 *Pe32;EFI_IMAGE_NT_HEADERS64 *Pe32Plus;EFI_TE_IMAGE_HEADER *Te;EFI_IMAGE_OPTIONAL_HEADER_UNION *Union;};
struct _1D0A4F22DA7C3812E451925235ECCAB6 {FORM_DISPLAY_ENGINE_STATEMENT *SelectedStatement;EFI_HII_VALUE InputValue;UINT32 Action;UINT16 DefaultId;};
struct _1D55C2E207DB73926762219F2515EF1B {UINT16 Type;UINT16 Length;UINT16 NVDIMMControlRegionStructureIndex;UINT16 VendorID;UINT16 DeviceID;UINT16 RevisionID;UINT16 SubsystemVendorID;UINT16 SubsystemDeviceID;UINT16 SubsystemRevisionID;UINT8 Reserved_18[6];UINT32 SerialNumber;UINT16 RegionFormatInterfaceCode;UINT16 NumberOfBlockControlWindows;UINT64 SizeOfBlockControlWindow;UINT64 CommandRegisterOffsetInBlockControlWindow;UINT64 SizeOfCommandRegisterInBlockControlWindows;UINT64 StatusRegisterOffsetInBlockControlWindow;UINT64 SizeOfStatusRegisterInBlockControlWindows;UINT16 NVDIMMControlRegionFlag;UINT8 Reserved_74[6];};
struct _1F215FA5274C3CF725ACFAF5802558B4 {FRAMEWORK_EFI_IFR_OP_HEADER Header;UINT16 QuestionId;UINT8 Width;STRING_REF Prompt;STRING_REF Help;UINT8 Flags;UINT16 Key;UINT16 Minimum;UINT16 Maximum;UINT16 Step;UINT16 Default;};
struct _203545BB35CF1DA97401FB9442416DCA {FRAMEWORK_EFI_IFR_OP_HEADER Header;STRING_REF Title;UINT16 LineNumber;UINT8 Alignment;};
struct _24F38648B15D20A4EE161EA411756A18 {UINT8 Type;UINT16 Length;UINT8 Reserved;UINT64 CntCtlBase;UINT32 GTBlockTimerCount;UINT32 GTBlockTimerOffset;};
union _253E16287E1610AF0271BFD5397148D6 {TPMS_SCHEME_MGF1 mgf1;TPMS_SCHEME_KDF1_SP800_56a kdf1_SP800_56a;TPMS_SCHEME_KDF2 kdf2;TPMS_SCHEME_KDF1_SP800_108 kdf1_sp800_108;};
struct _2703643F819FDE7BAF49055ABA177DC3 {EFI_GUID PartitionTypeGUID;EFI_GUID UniquePartitionGUID;EFI_LBA StartingLBA;EFI_LBA EndingLBA;UINT64 Attributes;CHAR16 PartitionName[36];};
struct _2B9C51E1EB0CFEA1A335CC815BBD80CF {UINT16 MajorVersion;UINT16 MinorVersion;UINT32 AcpiTable;UINT32 SmbiosTable;UINT32 SmbiosTableLength;DEVICE_PRODUCER_DATA_HEADER SioData;UINT16 DevicePathType;UINT16 PciIrqMask;UINT32 NumberE820Entries;HDD_INFO HddInfo[8];UINT32 NumberBbsEntries;UINT32 BbsTable;UINT32 SmmTable;UINT32 OsMemoryAbove1Mb;UINT32 UnconventionalDeviceTable;};
struct _2CF69155883F5671704386E2323B7577 {EFI_SMM_LOCK_BOX_PARAMETER_HEADER Header;GUID Guid;PHYSICAL_ADDRESS Buffer;UINT64 Length;};
struct _2E729EBBBD6B2823C28E1754E584A42B {UINT16 PowerUnitGroup;STRING_REF PowerSupplyLocation;STRING_REF PowerSupplyDeviceName;STRING_REF PowerSupplyManufacturer;STRING_REF PowerSupplySerialNumber;STRING_REF PowerSupplyAssetTagNumber;STRING_REF PowerSupplyModelPartNumber;STRING_REF PowerSupplyRevisionLevel;UINT16 PowerSupplyMaxPowerCapacity;EFI_MISC_POWER_SUPPLY_CHARACTERISTICS PowerSupplyCharacteristics;EFI_INTER_LINK_DATA PowerSupplyInputVoltageProbeLink;EFI_INTER_LINK_DATA PowerSupplyCoolingDeviceLink;EFI_INTER_LINK_DATA PowerSupplyInputCurrentProbeLink;};
struct _30B15F6B38BE5B2538EAD5D8A09FC965 {UINT16 Magic;UINT8 MajorLinkerVersion;UINT8 MinorLinkerVersion;UINT32 SizeOfCode;UINT32 SizeOfInitializedData;UINT32 SizeOfUninitializedData;UINT32 AddressOfEntryPoint;UINT32 BaseOfCode;UINT32 BaseOfData;UINT32 ImageBase;UINT32 SectionAlignment;UINT32 FileAlignment;UINT16 MajorOperatingSystemVersion;UINT16 MinorOperatingSystemVersion;UINT16 MajorImageVersion;UINT16 MinorImageVersion;UINT16 MajorSubsystemVersion;UINT16 MinorSubsystemVersion;UINT32 Win32VersionValue;UINT32 SizeOfImage;UINT32 SizeOfHeaders;UINT32 CheckSum;UINT16 Subsystem;UINT16 DllCharacteristics;UINT32 SizeOfStackReserve;UINT32 SizeOfStackCommit;UINT32 SizeOfHeapReserve;UINT32 SizeOfHeapCommit;UINT32 LoaderFlags;UINT32 NumberOfRvaAndSizes;EFI_IMAGE_DATA_DIRECTORY DataDirectory[16];};
union _31E9CB5CFBDE614C3E2B0999B633A6B4 {struct _31E9CB5CFBDE614C3E2B0999B633A6B4___2ABA17BD0BBC6518571AFE7296D4D674 u8;struct _31E9CB5CFBDE614C3E2B0999B633A6B4___412D3563C96312F953403FD110B45676 u16;struct _31E9CB5CFBDE614C3E2B0999B633A6B4___2BAFA71B4E3F86C6DE401586015B2E35 u32;struct _31E9CB5CFBDE614C3E2B0999B633A6B4___E4442E5F6EC1640A130B3E3B0DF32964 u64;};
struct _362EBAB6221B1063033D82FEB6541041 {UINT8 Type;UINT16 Length;UINT8 Reserved;UINT64 RefreshFramePhysicalAddress;UINT64 WatchdogControlFramePhysicalAddress;UINT32 WatchdogTimerGSIV;UINT32 WatchdogTimerFlags;};
struct _37A7EE8BF5E08FF8A71FA9F64F2825BD {EFI_GUID FileName;EFI_FV_FILETYPE FileType;EFI_FV_FILE_ATTRIBUTES FileAttributes;void *Buffer;UINT32 BufferSize;};
struct _3B3A9EA8DC22C7FF9667FA082E39E518 {EFI_PROCESSOR_SIGNATURE Signature;EFI_PROCESSOR_MISC_INFO MiscInfo;UINT32 Reserved;EFI_PROCESSOR_FEATURE_FLAGS FeatureFlags;};
struct _3D9A5D6754DE0A7B6A4B12381B3A155D {UINT16 Type;UINT16 SourceId;UINT8 Reserved0[2];UINT8 Flags;UINT8 Enabled;UINT32 NumberOfRecordsToPreAllocate;UINT32 MaxSectionsPerRecord;UINT64 GlobalCapabilityInitData;UINT64 GlobalControlInitData;UINT8 NumberOfHardwareBanks;UINT8 Reserved1[7];};
struct _3DD135A1846455AB3F98A7B3772E5511 {UINT8 Type;UINT8 Length;UINT16 Reserved;UINT32 GicItsId;UINT64 PhysicalBaseAddress;UINT32 Reserved2;};
struct _3F83D4E5184A3D19CA486B3904BC7628 {EFI_ACPI_DESCRIPTION_HEADER Header;EFI_ACPI_4_0_GENERIC_ADDRESS_STRUCTURE EcControl;EFI_ACPI_4_0_GENERIC_ADDRESS_STRUCTURE EcData;UINT32 Uid;UINT8 GpeBit;};
struct _3FF780582ABAFC11917E478BB2F072BE {EFI_DEVICE_PATH_PROTOCOL Header;EFI_IPv4_ADDRESS LocalIpAddress;EFI_IPv4_ADDRESS RemoteIpAddress;UINT16 LocalPort;UINT16 RemotePort;UINT16 Protocol;BOOLEAN StaticIpAddress;EFI_IPv4_ADDRESS GatewayIpAddress;EFI_IPv4_ADDRESS SubnetMask;};
struct _40EF81669717755AD7902BA019E550D1 {EFI_GUID Signature;UINT32 Size;UINT8 Format;UINT8 State;UINT16 Reserved;UINT32 Reserved1;};
struct _49B141972C267017F3D798ECA1B5380C {UINT32 Size;BOOLEAN DenyFlag;BOOLEAN StaticFlag;UINT16 HwAddressType;UINT16 SwAddressType;UINT8 HwAddressLength;UINT8 SwAddressLength;};
struct _4BDFC0F942E2A6A794676F82FB611E2A {EFI_IPv4_ADDRESS DestinationAddress;EFI_IP4_OVERRIDE_DATA *OverrideData;UINT32 OptionsLength;void *OptionsBuffer;UINT32 TotalDataLength;UINT32 FragmentCount;EFI_IP4_FRAGMENT_DATA FragmentTable[1];};
struct _4CA45CAB643221FAE06100C5E3A3059C {EFI_DEVICE_PATH_PROTOCOL Header;EFI_IPv6_ADDRESS LocalIpAddress;EFI_IPv6_ADDRESS RemoteIpAddress;UINT16 LocalPort;UINT16 RemotePort;UINT16 Protocol;UINT8 IpAddressOrigin;UINT8 PrefixLength;EFI_IPv6_ADDRESS GatewayIpAddress;};
struct _4E025DD4DB71D5A13ED2A71214047A54 {EFI_ACPI_DESCRIPTION_HEADER Header;EFI_ACPI_6_0_GENERIC_ADDRESS_STRUCTURE EcControl;EFI_ACPI_6_0_GENERIC_ADDRESS_STRUCTURE EcData;UINT32 Uid;UINT8 GpeBit;};
struct _4ECC48ED7FCAB3168E2382E1C8F9C460 {EFI_GUID *NameGuid;EFI_FV_FILETYPE Type;EFI_FV_FILE_ATTRIBUTES FileAttributes;void *Buffer;UINT32 BufferSize;};
struct _4EE54C0624E0B4590878B2914F6EE3CA {BOOLEAN UseMCast;BOOLEAN UseBCast;BOOLEAN UseUCast;BOOLEAN MustUseList;EFI_IP_ADDRESS ServerMCastIp;UINT16 IpCnt;EFI_PXE_BASE_CODE_SRVLIST SrvList[1];};
struct _516E2F5A0BAE859DB879D0F9110BE2A0 {UINT32 State;UINT32 HwAddressSize;UINT32 MediaHeaderSize;UINT32 MaxPacketSize;UINT32 NvRamSize;UINT32 NvRamAccessSize;UINT32 ReceiveFilterMask;UINT32 ReceiveFilterSetting;UINT32 MaxMCastFilterCount;UINT32 MCastFilterCount;EFI_MAC_ADDRESS MCastFilter[16];EFI_MAC_ADDRESS CurrentAddress;EFI_MAC_ADDRESS BroadcastAddress;EFI_MAC_ADDRESS PermanentAddress;UINT8 IfType;BOOLEAN MacAddressChangeable;BOOLEAN MultipleTxSupported;BOOLEAN MediaPresentSupported;BOOLEAN MediaPresent;};
struct _5424A58FA96B23E7182292F8A0BD1671 {EFI_DEVICE_PATH_PROTOCOL Header;UINT32 StartingAddr[2];UINT32 EndingAddr[2];EFI_GUID TypeGuid;UINT16 Instance;};
struct _54E2E9668D0928029EA47A066A67062C {STRING_REF TemperatureProbeDescription;EFI_MISC_TEMPERATURE_PROBE_LOCATION TemperatureProbeLocation;UINT16 TemperatureProbeMaximumValue;UINT16 TemperatureProbeMinimumValue;UINT16 TemperatureProbeResolution;UINT16 TemperatureProbeTolerance;UINT16 TemperatureProbeAccuracy;UINT16 TemperatureProbeNominalValue;UINT16 MDLowerNoncriticalThreshold;UINT16 MDUpperNoncriticalThreshold;UINT16 MDLowerCriticalThreshold;UINT16 MDUpperCriticalThreshold;UINT16 MDLowerNonrecoverableThreshold;UINT16 MDUpperNonrecoverableThreshold;UINT32 TemperatureProbeOemDefined;};
struct _554224674F69B86A1891A44045034893 {FRAMEWORK_EFI_IFR_OP_HEADER Header;UINT16 QuestionId;UINT8 Width;STRING_REF Prompt;STRING_REF Help;UINT8 Flags;UINT16 Key;};
struct _58E38925772C2C7EB1864943310FA6BE {EFI_ACPI_DESCRIPTION_HEADER Header;EFI_ACPI_5_1_GENERIC_ADDRESS_STRUCTURE EcControl;EFI_ACPI_5_1_GENERIC_ADDRESS_STRUCTURE EcData;UINT32 Uid;UINT8 GpeBit;};
struct _5A798AB4BEBA23E489D8B44C4CE7F7C3 {EFI_SMM_LOCK_BOX_PARAMETER_HEADER Header;GUID Guid;UINT64 Offset;PHYSICAL_ADDRESS Buffer;UINT64 Length;};
struct _5FD6B05A44F9F152F9203B46F0C8FFE2 {UINT64 ValidFields;UINT8 Type;UINT8 Isa;UINT8 ErrorType;UINT8 Operation;UINT8 Flags;UINT8 Level;UINT16 Resv1;UINT64 VersionInfo;CHAR8 BrandString[128];UINT64 ApicId;UINT64 TargetAddr;UINT64 RequestorId;UINT64 ResponderId;UINT64 InstructionIP;};
union _63B58ABB6690812C9E02ADD697E36664 {struct _63B58ABB6690812C9E02ADD697E36664___52BDCD81E958047DDA7B3FF817AAA801 Unknown;struct _63B58ABB6690812C9E02ADD697E36664___8939B74F56EDEA9494CD062DBB9CCA20 Catalog;struct _63B58ABB6690812C9E02ADD697E36664___C41FF125555157F7F4869E4DBCC53082 Boot;struct _63B58ABB6690812C9E02ADD697E36664___5BD987BD46EA8F9F7F2F7E2A8AC77E64 Section;};
struct _65518DFEFF5E6C13CD4EAB1ACAB106B7 {EFI_GUID Guid;UINTN NameSize;VAR_CHECK_VARIABLE_PROPERTY VariableProperty;CHAR16 Name[1];};
struct _6733347D6230688C87E04513380F5605 {SMBIOS_STRUCTURE Hdr;UINT8 ErrorType;UINT8 ErrorGranularity;UINT8 ErrorOperation;UINT32 VendorSyndrome;UINT64 MemoryArrayErrorAddress;UINT64 DeviceErrorAddress;UINT32 ErrorResolution;};
struct _6822A72659FF56C780C6DE690DFFE7AC {EFI_FLASH_AREA_ATTRIBUTES Attributes;UINT32 Reserved;EFI_PHYSICAL_ADDRESS Base;EFI_PHYSICAL_ADDRESS Length;EFI_GUID FileSystem;};
struct _6CB2ACB2315B579EF1B18B5CA914D940 {FRAMEWORK_EFI_IFR_OP_HEADER Header;UINT16 QuestionId;UINT8 Width;STRING_REF Prompt;STRING_REF Help;UINT8 Flags;UINT16 Key;UINT8 MinSize;UINT8 MaxSize;};
struct _6D267FD34DD458FE2DF51F71D0F42787 {UINT16 Type;BOOLEAN AcceptAnyResponse;UINT8 Reserved;EFI_IP_ADDRESS IpAddr;};
struct _6E47BA13085294F0F049FAD266BFBF7F {FRAMEWORK_EFI_IFR_OP_HEADER Header;STRING_REF Option;UINT16 Value;UINT8 Flags;UINT16 Key;};
struct _6EA9FE09A44DFE194DF3774A8F9AD63B {EFI_BOOT_KEY_DATA KeyData;UINT32 BootOptionCrc;UINT16 BootOption;EFI_INPUT_KEY Keys[3];UINT16 OptionNumber;};
struct _700F669AAAA0065862E665F7FCF885B4 {EFI_GUID FileName;EFI_FV_FILETYPE FileType;EFI_FV_FILE_ATTRIBUTES FileAttributes;void *Buffer;UINT32 BufferSize;UINT32 AuthenticationStatus;};
struct _70706EA1264F219639EC61C3D0C0081D {UINT8 Type;UINT8 Length;UINT16 Reserved;UINT64 DiscoveryRangeBaseAddress;UINT32 DiscoveryRangeLength;};
struct _742CA4F85EA73A5D1442F11069F65D35 {UINT16 Type;UINT16 SourceId;UINT8 Reserved0[2];UINT8 Flags;UINT8 Enabled;UINT32 NumberOfRecordsToPreAllocate;UINT32 MaxSectionsPerRecord;EFI_ACPI_5_1_HARDWARE_ERROR_NOTIFICATION_STRUCTURE NotificationStructure;UINT8 NumberOfHardwareBanks;UINT8 Reserved1[3];};
struct _74FDC183890CD175403FB492894CE117 {EFI_HII_PACK_HEADER Header;EFI_GUID VariableGuid;UINT32 VariableNameLength;UINT16 VariableId;};
struct _75D146EAF28C090BF60BE4D627294663 {SMBIOS_STRUCTURE Hdr;SMBIOS_TABLE_STRING Manufacturer;UINT8 Type;SMBIOS_TABLE_STRING Version;SMBIOS_TABLE_STRING SerialNumber;SMBIOS_TABLE_STRING AssetTag;UINT8 BootupState;UINT8 PowerSupplyState;UINT8 ThermalState;UINT8 SecurityStatus;UINT8 OemDefined[4];UINT8 Height;UINT8 NumberofPowerCords;UINT8 ContainedElementCount;UINT8 ContainedElementRecordLength;CONTAINED_ELEMENT ContainedElements[1];};
struct _777F619D22A3BF928C82DF3A2DCC877F {UINT8 Type;UINT8 Length;UINT16 Reserved;UINT32 CPUInterfaceNumber;UINT32 AcpiProcessorUid;UINT32 Flags;UINT32 ParkingProtocolVersion;UINT32 PerformanceInterruptGsiv;UINT64 ParkedAddress;UINT64 PhysicalBaseAddress;UINT64 GICV;UINT64 GICH;UINT32 VGICMaintenanceInterrupt;UINT64 GICRBaseAddress;UINT64 MPIDR;};
struct _77D474CBEB68459D85E3C2A830C2EF21 {UINT8 InterfaceType;BOOLEAN RemovableMedia;BOOLEAN MediaPresent;BOOLEAN ReadOnly;UINT32 BlockSize;EFI_PEI_LBA LastBlock;};
struct _78A47FEDE07E4D9711F995C0E2C7B125 {TCP_PORTNO SrcPort;TCP_PORTNO DstPort;TCP_SEQNO Seq;TCP_SEQNO Ack;unsigned __int8 Res : 4;unsigned __int8 HeadLen : 4;UINT8 Flag;UINT16 Wnd;UINT16 Checksum;UINT16 Urg;};
struct _790F6AB6F76BDC72ACD18E4FB677C494 {EFI_ACPI_ISCSI_BOOT_FIRMWARE_TABLE_STRUCTURE_HEADER Header;EFI_IPv6_ADDRESS Ip;UINT16 Port;UINT8 BootLun[8];UINT8 CHAPType;UINT8 NicIndex;UINT16 IScsiNameLength;UINT16 IScsiNameOffset;UINT16 CHAPNameLength;UINT16 CHAPNameOffset;UINT16 CHAPSecretLength;UINT16 CHAPSecretOffset;UINT16 ReverseCHAPNameLength;UINT16 ReverseCHAPNameOffset;UINT16 ReverseCHAPSecretLength;UINT16 ReverseCHAPSecretOffset;};
struct _795FB50BB00C5222A29D9E9AD36BECE3 {EFI_MAC_ADDRESS *DestinationAddress;EFI_MAC_ADDRESS *SourceAddress;UINT16 ProtocolType;UINT32 DataLength;UINT16 HeaderLength;UINT16 FragmentCount;EFI_MANAGED_NETWORK_FRAGMENT_DATA FragmentTable[1];};
struct _7DFCE0E55CE3252F1E6260C8AF00805B {EFI_UDP4_SESSION_DATA *UdpSessionData;EFI_IPv4_ADDRESS *GatewayAddress;UINT32 DataLength;UINT32 FragmentCount;EFI_UDP4_FRAGMENT_DATA FragmentTable[1];};
struct _80338AD8F766A4EEAEEC8B04EC6116B9 {UINT8 Type;UINT8 Length;UINT16 Reserved1;UINT32 GicId;UINT64 PhysicalBaseAddress;UINT32 SystemVectorBase;UINT32 Reserved2;};
struct _824A427F62CDDF782776BE13CF66F19F {ACPI_LARGE_RESOURCE_HEADER Header;UINT8 RevisionId;UINT8 ResourceSourceIndex;UINT8 SerialBusType;UINT8 GeneralFlags;UINT16 TypeSpecificFlags;UINT8 TypeSpecificRevisionId;UINT16 TypeDataLength;UINT32 DefaultBaudRate;UINT16 RxFIFO;UINT16 TxFIFO;UINT8 Parity;UINT8 SerialLinesEnabled;};
struct _8598BB303B5E5EB887BC4D9B4A9FE52F {FRAMEWORK_EFI_IFR_OP_HEADER Header;UINT16 QuestionId;UINT8 MaxEntries;STRING_REF Prompt;STRING_REF Help;};
struct _87471D6BC66CEF79FF28070FD078E8D1 {UINT16 BootPriority;UINT32 Bus;UINT32 Device;UINT32 Function;UINT8 Class;UINT8 SubClass;UINT16 MfgStringOffset;UINT16 MfgStringSegment;UINT16 DeviceType;BBS_STATUS_FLAGS StatusFlags;UINT16 BootHandlerOffset;UINT16 BootHandlerSegment;UINT16 DescStringOffset;UINT16 DescStringSegment;UINT32 InitPerReserved;UINT32 AdditionalIrq13Handler;UINT32 AdditionalIrq18Handler;UINT32 AdditionalIrq19Handler;UINT32 AdditionalIrq40Handler;UINT8 AssignedDriveNumber;UINT32 AdditionalIrq41Handler;UINT32 AdditionalIrq46Handler;UINT32 IBV1;UINT32 IBV2;};
struct _878CDC393A4F90F5F70FBF4F5DCDCF2F {UINT32 Type;EFI_PHYSICAL_ADDRESS PhysicalStart;EFI_VIRTUAL_ADDRESS VirtualStart;UINT64 NumberOfPages;UINT64 Attribute;};
struct _899560C02B287A1E3D364B639677B50C {EFI_HOB_GENERIC_HEADER Header;EFI_PHYSICAL_ADDRESS BaseAddress;UINT64 Length;EFI_GUID FvName;EFI_GUID FileName;};
struct _8AD0E7071038BAD52AD18FAF10519DBA {STRING_REF ManagementDeviceDescription;EFI_MISC_MANAGEMENT_DEVICE_TYPE ManagementDeviceType;UINTN ManagementDeviceAddress;EFI_MISC_MANAGEMENT_DEVICE_ADDRESS_TYPE ManagementDeviceAddressType;};
struct _8DE628CD5A324805CF3F9A9655379560 {SAL_SEC_HEADER SectionHeader;UINT64 ValidationBits;UINT64 MemErrorStatus;UINT64 MemPhysicalAddress;UINT64 MemPhysicalAddressMask;UINT16 MemNode;UINT16 MemCard;UINT16 MemModule;UINT16 MemBank;UINT16 MemDevice;UINT16 MemRow;UINT16 MemColumn;UINT16 MemBitPosition;UINT64 ModRequestorId;UINT64 ModResponderId;UINT64 ModTargetId;UINT64 BusSpecificData;UINT8 MemPlatformOemId[16];};
struct _8E9001CF27BB191F78BEDCE566CDA729 {UINTN NumOfBSSDesp;EFI_80211_BSS_DESCRIPTION **BSSDespSet;UINTN NumofBSSDespFromPilot;EFI_80211_BSS_DESP_PILOT **BSSDespFromPilotSet;UINT8 *VendorSpecificInfo;};
struct _8F55FBCDD7A045BFCDA7030ED4A53CB1 {ACPI_LARGE_RESOURCE_HEADER Header;UINT8 RevisionId;UINT8 ResourceSourceIndex;UINT8 SerialBusType;UINT8 GeneralFlags;UINT16 TypeSpecificFlags;UINT8 TypeSpecificRevisionId;UINT16 TypeDataLength;UINT32 ConnectionSpeed;UINT8 DataBitLength;UINT8 Phase;UINT8 Polarity;UINT16 DeviceSelection;};
struct _8F7F9033E7ABB231AFA2156F5FF3D34E {EFI_TABLE_HEADER Header;EFI_LBA MyLBA;EFI_LBA AlternateLBA;EFI_LBA FirstUsableLBA;EFI_LBA LastUsableLBA;EFI_GUID DiskGUID;EFI_LBA PartitionEntryLBA;UINT32 NumberOfPartitionEntries;UINT32 SizeOfPartitionEntry;UINT32 PartitionEntryArrayCRC32;};
struct _9029BC86F03C3FCA17B56D2EF3BF232B {GUID Guid;UINT16 Revision;UINT8 ErrorRecoveryInfo;UINT8 Reserved;UINT32 SectionLength;};
struct _934C7E7549B79FCA437F36F4A12AB250 {UINT16 Year;UINT8 Month;UINT8 Day;UINT8 Hour;UINT8 Minute;UINT8 Second;UINT8 Pad1;UINT32 Nanosecond;INT16 TimeZone;UINT8 Daylight;UINT8 Pad2;};
struct _958A0E0CAD30DEEE399D82016069823E {SMBIOS_STRUCTURE Hdr;SMBIOS_TABLE_STRING ReferenceDesignation;UINT8 DeviceType;UINT8 DeviceTypeInstance;UINT16 SegmentGroupNum;UINT8 BusNum;UINT8 DevFuncNum;};
struct _95B4CA56C5C145CB00FB885BF35F80FD {UINT64 BaseAddress;UINT16 PciSegmentGroupNumber;UINT8 StartBusNumber;UINT8 EndBusNumber;UINT32 Reserved;};
struct _98213CF2F2F826EC74DB187C09265FC4 {UINT32 Size;UINT32 MmddyyyyDate;UINT16 Version;UINT8 Type;UINT8 Reserved[5];UINT64 FwVendorId;UINT8 Reserved2[40];};
struct _983CF00DED1A1F66A55427EBF6F89EA9 {EFI_ACPI_DESCRIPTION_HEADER Header;EFI_ACPI_2_0_GENERIC_ADDRESS_STRUCTURE ControlRegisterAddress;EFI_ACPI_2_0_GENERIC_ADDRESS_STRUCTURE CountRegisterAddress;UINT16 PCIDeviceID;UINT16 PCIVendorID;UINT8 PCIBusNumber;UINT8 PCIDeviceNumber;UINT8 PCIFunctionNumber;UINT8 PCISegment;UINT16 MaxCount;UINT8 Units;};
struct _99C4E7CD866E4E0AE2D4B042B167394D {EFI_DEVICE_PATH_PROTOCOL Header;UINT32 PartitionNumber;UINT64 PartitionStart;UINT64 PartitionSize;UINT8 Signature[16];UINT8 MBRType;UINT8 SignatureType;};
struct _9AD37D8F57FDE2A5D58FC9F1F13727F7 {FRAMEWORK_EFI_IFR_OP_HEADER Header;UINT16 QuestionId;UINT8 Width;STRING_REF Prompt;STRING_REF Help;UINT8 Flags;UINT16 Key;UINT8 MinSize;UINT8 MaxSize;UINT16 Encoding;};
struct _9FFCB390DD14B79945F07A2EB576185F {EFI_GUID Guid;UINTN DataSize;UINTN NameSize;UINT32 Attributes;CHAR16 Name[1];};
struct _A1E1C92957F807A48DE24E826B76A9ED {UINT8 DefaultProtocol;BOOLEAN AcceptAnyProtocol;BOOLEAN AcceptIcmpErrors;BOOLEAN AcceptBroadcast;BOOLEAN AcceptPromiscuous;BOOLEAN UseDefaultAddress;EFI_IPv4_ADDRESS StationAddress;EFI_IPv4_ADDRESS SubnetMask;UINT8 TypeOfService;UINT8 TimeToLive;BOOLEAN DoNotFragment;BOOLEAN RawData;UINT32 ReceiveTimeout;UINT32 TransmitTimeout;};
struct _A2AB49BDD0DE746123D0ABAA6B350AEC {STRING_REF VoltageProbeDescription;EFI_MISC_VOLTAGE_PROBE_LOCATION VoltageProbeLocation;EFI_EXP_BASE10_DATA VoltageProbeMaximumValue;EFI_EXP_BASE10_DATA VoltageProbeMinimumValue;EFI_EXP_BASE10_DATA VoltageProbeResolution;EFI_EXP_BASE10_DATA VoltageProbeTolerance;EFI_EXP_BASE10_DATA VoltageProbeAccuracy;EFI_EXP_BASE10_DATA VoltageProbeNominalValue;EFI_EXP_BASE10_DATA MDLowerNoncriticalThreshold;EFI_EXP_BASE10_DATA MDUpperNoncriticalThreshold;EFI_EXP_BASE10_DATA MDLowerCriticalThreshold;EFI_EXP_BASE10_DATA MDUpperCriticalThreshold;EFI_EXP_BASE10_DATA MDLowerNonrecoverableThreshold;EFI_EXP_BASE10_DATA MDUpperNonrecoverableThreshold;UINT32 VoltageProbeOemDefined;};
struct _A4466E56061ADCBDAD4B2A6DC7E81187 {EFI_GUID Credential;UINT8 InfoType;UINT8 Reserved1;EFI_USER_INFO_ATTRIBS InfoAttribs;UINT32 InfoSize;};
struct _A5E5576596E44BD7CBE1A739E94D438C {UINT32 Signature;UINT16 BaseTableLength;UINT8 SpecRev;UINT8 Checksum;CHAR8 OemId[8];CHAR8 OemProductId[12];UINT32 OemTablePointer;UINT16 OemTableSize;UINT16 EntryCount;UINT32 LocalApicAddress;UINT16 ExtendedTableLength;UINT8 ExtendedChecksum;UINT8 Reserved;};
struct _A72BB6278B4C5CF5A5BC1A44ECC3AB06 {EFI_GUID Signature;UINT32 Crc;unsigned __int8 WorkingBlockValid : 1;unsigned __int8 WorkingBlockInvalid : 1;unsigned __int8 Reserved : 6;UINT8 Reserved3[3];UINT64 WriteQueueSize;};
union _A7D7BDD8B24B112D605A993696560BF6 {UINT8 *Raw;PCI_EXPANSION_ROM_HEADER *Generic;EFI_PCI_EXPANSION_ROM_HEADER *Efi;EFI_LEGACY_EXPANSION_ROM_HEADER *PcAt;};
struct _A896CE4093F8563720BCDB52D91EB8C7 {SMRAM_PROFILE_PARAMETER_HEADER Header;EFI_GUID FileName;PHYSICAL_ADDRESS ImageBuffer;UINT64 NumberOfPage;};
struct _A9D282369A009673BDA2F899DC1C2C4E {UINT8 Type;UINT8 Length;UINT16 Reserved;UINT32 GicId;UINT32 AcpiProcessorUid;UINT32 Flags;UINT32 ParkingProtocolVersion;UINT32 PerformanceInterruptGsiv;UINT64 ParkedAddress;UINT64 PhysicalBaseAddress;};
struct _AC684B819368CF3987AE9ACE81BE85AE {UINT16 Status;UINT32 Bus;UINT32 Device;UINT32 Function;UINT16 CommandBaseAddress;UINT16 ControlBaseAddress;UINT16 BusMasterAddress;UINT8 HddIrq;ATAPI_IDENTIFY IdentifyDrive[2];};
struct _AE107CD7E394AE46569DF4011EE0BB43 {EFI_PHYSICAL_ADDRESS AcpiReservedMemoryBase;UINT32 AcpiReservedMemorySize;EFI_PHYSICAL_ADDRESS S3ReservedLowMemoryBase;EFI_PHYSICAL_ADDRESS AcpiBootScriptTable;EFI_PHYSICAL_ADDRESS RuntimeScriptTableBase;EFI_PHYSICAL_ADDRESS AcpiFacsTable;UINT64 SystemMemoryLength;ACPI_CPU_DATA_COMPATIBILITY AcpiCpuData;EFI_PHYSICAL_ADDRESS VideoOpromAddress;UINT32 VideoOpromSize;EFI_PHYSICAL_ADDRESS S3DebugBufferAddress;EFI_PHYSICAL_ADDRESS S3ResumeNvsEntryPoint;};
struct _AF9B744F20F52A03121B27A55076CEAE {UINT16 Type;UINT16 SourceId;UINT8 Reserved0[2];UINT8 Flags;UINT8 Enabled;UINT32 NumberOfRecordsToPreAllocate;UINT32 MaxSectionsPerRecord;EFI_ACPI_5_0_HARDWARE_ERROR_NOTIFICATION_STRUCTURE NotificationStructure;UINT8 NumberOfHardwareBanks;UINT8 Reserved1[3];};
struct _AFCB5824F954295B40CD424AF2C819AE {EFI_MISC_POINTING_DEVICE_TYPE PointingDeviceType;EFI_MISC_POINTING_DEVICE_INTERFACE PointingDeviceInterface;UINT16 NumberPointingDeviceButtons;EFI_DEVICE_PATH_PROTOCOL PointingDevicePath;};
struct _B0583D655AE852CB61423C290C3414FF {EFI_PHYSICAL_ADDRESS Handle;CHAR8 Token[32];CHAR8 Module[32];UINT64 StartTimeStamp;UINT64 EndTimeStamp;UINT32 Identifier;};
struct _B0972028F0A856D07070CC35DD2393D1 {EFI_ACPI_DESCRIPTION_HEADER Header;EFI_ACPI_3_0_GENERIC_ADDRESS_STRUCTURE EcControl;EFI_ACPI_3_0_GENERIC_ADDRESS_STRUCTURE EcData;UINT32 Uid;UINT8 GpeBit;};
struct _B21E8E356780C04C244AAF731E4D8DB8 {UINT8 BootPhase;UINT8 FWStatus;UINT16 Reserved1;UINT32 Reserved2;UINT16 ProcId;UINT16 Reserved3;UINT8 IdMask;UINT8 EidMask;UINT16 Reserved4;UINT64 PalCallAddress;UINT64 PalSpecialAddress;UINT64 SelfTestStatus;UINT64 SelfTestControl;UINT64 MemoryBufferRequired;};
struct _B33C3DDC8B87C2920AB40FB5B503E693 {UINT8 Reserved1[464];UINT32 GdtBaseHiDword;UINT32 LdtBaseHiDword;UINT32 IdtBaseHiDword;UINT8 Reserved2[12];UINT64 IO_EIP;UINT8 Reserved3[80];UINT32 _CR4;UINT8 Reserved4[72];UINT32 GdtBaseLoDword;UINT32 GdtLimit;UINT32 IdtBaseLoDword;UINT32 IdtLimit;UINT32 LdtBaseLoDword;UINT32 LdtLimit;UINT32 LdtInfo;UINT8 Reserved5[80];UINT32 SMBASE;UINT32 SMMRevId;UINT16 AutoHALTRestart;UINT16 IORestart;UINT32 IEDBASE;UINT8 Reserved6[20];UINT64 _R15;UINT64 _R14;UINT64 _R13;UINT64 _R12;UINT64 _R11;UINT64 _R10;UINT64 _R9;UINT64 _R8;UINT64 _RAX;UINT64 _RCX;UINT64 _RDX;UINT64 _RBX;UINT64 _RSP;UINT64 _RBP;UINT64 _RSI;UINT64 _RDI;UINT64 IOMemAddr;UINT32 IOMisc;UINT32 _ES;UINT32 _CS;UINT32 _SS;UINT32 _DS;UINT32 _FS;UINT32 _GS;UINT32 _LDTR;UINT32 _TR;UINT64 _DR7;UINT64 _DR6;UINT64 _RIP;UINT64 IA32_EFER;UINT64 _RFLAGS;UINT64 _CR3;UINT64 _CR0;};
struct _B40D81E03147033EE600A6FD268CB8A4 {FRAMEWORK_EFI_IFR_OP_HEADER Header;UINT16 QuestionId;UINT8 Width;STRING_REF Prompt;STRING_REF Help;};
struct _B44D925D15888068842F296C53A42C40 {EFI_DNS4_CONFIG_DATA DnsConfigData;UINT32 DnsServerCount;EFI_IPv4_ADDRESS *DnsServerList;UINT32 DnsCacheCount;EFI_DNS4_CACHE_ENTRY *DnsCacheList;};
struct _B46353AB51234BADCBFF12757BFEF0BC {EFI_ACPI_ASF_RECORD_HEADER RecordHeader;UINT8 MinWatchDogResetValue;UINT8 MinPollingInterval;UINT16 SystemID;UINT32 IANAManufactureID;UINT8 FeatureFlags;UINT8 Reserved[3];};
struct _B657CEE4355D321E905412328E8C698B {UINT32 HeaderSize;UINT16 HeaderVersion;TrEE_PCRINDEX PCRIndex;TrEE_EVENTTYPE EventType;};
struct _B6E8A195D1FC203A37BEF79338AA742F {UINT8 Flag;UINT8 Reserved;UINT16 MemoryPowerNodeId;UINT32 Length;UINT64 AddressBase;UINT64 AddressLength;UINT32 NumberOfPowerStates;UINT32 NumberOfPhysicalComponents;};
struct _B70FF1D241F46C1C68C0F8CFBF7BB160 {EFI_PHYSICAL_ADDRESS BaseAddress;UINT64 Length;UINT64 Capabilities;UINT64 Attributes;EFI_GCD_MEMORY_TYPE GcdMemoryType;EFI_HANDLE ImageHandle;EFI_HANDLE DeviceHandle;};
struct _BBF69680C1C705FB23F2ADAFF8BAC69F {EFI_DEVICE_PATH_PROTOCOL Header;UINT16 NetworkProtocol;UINT16 LoginOption;UINT64 Lun;UINT16 TargetPortalGroupTag;CHAR16 TargetName[1];};
struct _BF5CE2558FAD5ED8EE129BA840FFD778 {CHAR8 *CLPCommand;UINT32 CLPCommandLength;CHAR8 *CLPReturnString;UINT32 CLPReturnStringLength;UINT8 CLPCmdStatus;UINT8 CLPErrorValue;UINT16 CLPMsgCode;};
struct _C1695DCB02FB6E6E8897AB8527534281 {UINT64 ValidFields;EFI_GENERIC_ERROR_STATUS ErrorStatus;UINT64 PhysicalAddress;UINT64 PhysicalAddressMask;UINT16 Node;UINT16 Card;UINT16 ModuleRank;UINT16 Bank;UINT16 Device;UINT16 Row;UINT16 Column;UINT16 BitPosition;UINT64 RequestorId;UINT64 ResponderId;UINT64 TargetId;UINT8 ErrorType;UINT8 Extended;UINT16 RankNum;UINT16 CardHandle;UINT16 ModuleHandle;};
struct _C2875BFC7D9051F8512739CD328EC859 {UINT16 Type;UINT16 Length;UINT16 SPARangeStructureIndex;UINT16 Flags;UINT32 Reserved_8;UINT32 ProximityDomain;GUID AddressRangeTypeGUID;UINT64 SystemPhysicalAddressRangeBase;UINT64 SystemPhysicalAddressRangeLength;UINT64 AddressRangeMemoryMappingAttribute;};
struct _C4E2D3995F2015C0403D416DB89CE2DB {UINT8 *Username;UINT8 *Password;BOOLEAN Active;BOOLEAN UseDefaultSetting;EFI_IPv4_ADDRESS StationIp;EFI_IPv4_ADDRESS SubnetMask;EFI_IPv4_ADDRESS GatewayIp;EFI_IPv4_ADDRESS ServerIp;UINT16 ServerPort;UINT16 AltDataPort;UINT8 RepType;UINT8 FileStruct;UINT8 TransMode;};
struct _C501FDF64678E92E96708EC263D49D51 {FRAMEWORK_EFI_IFR_OP_HEADER Header;UINT16 FormId;STRING_REF Prompt;STRING_REF Help;UINT8 Flags;UINT16 Key;};
struct _C5F57BC2B0B6EE2B75FB780914E5D879 {UINT64 Size;BOOLEAN ReadOnly;UINT64 VolumeSize;UINT64 FreeSpace;UINT32 BlockSize;CHAR16 VolumeLabel[1];};
struct _C7F73EA95F7ADD2BBA9A69C0FBAA1909 {UINT8 PowerStateStructureID;UINT8 Flag;UINT16 Reserved;UINT32 AveragePowerConsumedInMPS0;UINT32 RelativePowerSavingToMPS0;UINT64 ExitLatencyToMPS0;};
struct _C81ED73FE92C3217EDCB98B3168FF929 {UINT8 Type;UINT8 Length;UINT16 Reserved1;UINT32 GicMsiFrameId;UINT64 PhysicalBaseAddress;UINT32 Flags;UINT16 SPICount;UINT16 SPIBase;};
struct _C8576DEBE332FFA7BF2CD60B1B989A91 {UINT16 LayoutLength;EFI_GUID Guid;UINT32 LayoutDescriptorStringOffset;UINT8 DescriptorCount;};
struct _CC8A8E7BC00E3AE52B3C896EC08E5AF9 {EFI_DNS6_CONFIG_DATA DnsConfigData;UINT32 DnsServerCount;EFI_IPv6_ADDRESS *DnsServerList;UINT32 DnsCacheCount;EFI_DNS6_CACHE_ENTRY *DnsCacheList;};
struct _CE905B68C1019FD575F1F529BC2B6AE0 {EFI_GUID VariableName;UINT64 UnicodeNameLength;UINT64 VariableDataLength;CHAR16 UnicodeName[1];INT8 VariableData[1];};
struct _CE9A3204B8C1C2509BA36FC45EB55845 {LIST_ENTRY Link;UINTN Line;CHAR16 *Cl;void *Data;BOOLEAN Reset;};
struct _CF7E90392CCD02B3DAE0DDD621D3ED79 {EFI_MEMORY_ERROR_TYPE MemoryErrorType;EFI_MEMORY_ERROR_GRANULARITY_TYPE MemoryErrorGranularity;EFI_MEMORY_ERROR_OPERATION_TYPE MemoryErrorOperation;UINT32 VendorSyndrome;UINT32 MemoryArrayErrorAddress;UINT32 DeviceErrorAddress;UINT32 DeviceErrorResolution;};
struct _D2E56FB53E9B18B8508926D2DFAC18C1 {LIST_ENTRY Link;EFI_DEVICE_PATH_PROTOCOL *DevicePath;CHAR16 *MapName;CHAR16 *CurrentDirectoryPath;UINT64 Flags;};
struct _D7001D855D9D35654C2AB824290A5586 {SMBIOS_STRUCTURE Hdr;SMBIOS_TABLE_STRING Description;UINT8 Type;UINT32 Address;UINT8 AddressType;};
struct _DE018B6527D8BAD456AC6761EF46A801 {UINT16 Type;UINT16 SourceId;UINT8 Reserved0[2];UINT8 Flags;UINT8 Enabled;UINT32 NumberOfRecordsToPreAllocate;UINT32 MaxSectionsPerRecord;EFI_ACPI_4_0_HARDWARE_ERROR_NOTIFICATION_STRUCTURE NotificationStructure;UINT8 NumberOfHardwareBanks;UINT8 Reserved1[3];};
struct _DED7ACBE1609AE7F7A12B82E8489D170 {SMBIOS_STRUCTURE Hdr;SMBIOS_TABLE_STRING Manufacturer;SMBIOS_TABLE_STRING ProductName;SMBIOS_TABLE_STRING Version;SMBIOS_TABLE_STRING SerialNumber;GUID Uuid;UINT8 WakeUpType;SMBIOS_TABLE_STRING SKUNumber;SMBIOS_TABLE_STRING Family;};
struct _DF22CF9CA9B769C51E2E573A6985619A {EFI_HTTP_VERSION HttpVersion;UINT32 TimeOutMillisec;BOOLEAN LocalAddressIsIPv6;union _DF22CF9CA9B769C51E2E573A6985619A___7771E727E13B5BCC6B37DC43F23FC4AB AccessPoint;};
struct _DFF60F2A0689B8A7B841535D9A1F0D00 {CHAR16 *ScriptName;CHAR16 **Argv;UINTN Argc;LIST_ENTRY CommandList;SCRIPT_COMMAND_LIST *CurrentCommand;LIST_ENTRY SubstList;};
struct _E05289635D9C996E877C3A24F3F900FE {EFI_ACPI_ISCSI_BOOT_FIRMWARE_TABLE_STRUCTURE_HEADER Header;EFI_IPv6_ADDRESS Ip;UINT8 SubnetMaskPrefixLength;UINT8 Origin;EFI_IPv6_ADDRESS Gateway;EFI_IPv6_ADDRESS PrimaryDns;EFI_IPv6_ADDRESS SecondaryDns;EFI_IPv6_ADDRESS DhcpServer;UINT16 VLanTag;UINT8 Mac[6];UINT16 PciLocation;UINT16 HostNameLength;UINT16 HostNameOffset;};
struct _E14DA716ADFBC12D364879F193E40921 {UINT32 MaxMode;UINT32 Mode;EFI_GRAPHICS_OUTPUT_MODE_INFORMATION *Info;UINTN SizeOfInfo;EFI_PHYSICAL_ADDRESS FrameBufferBase;UINTN FrameBufferSize;};
struct _E17FC06B3BE19206A8C8D0705BCA713B {EFI_WIN_NT_THUNK_PROTOCOL *WinNtThunk;EFI_GUID *TypeGuid;CHAR16 *EnvString;UINT16 InstanceNumber;};
struct _E3B7EAE0BB3E863E9704D88F999B9602 {EFI_QUESTION_ID QuestionId;EFI_FORM_ID FormId;EFI_GUID FormSetGuid;EFI_STRING_ID DevicePath;};
struct _E6669E07CF547D28E0A0359868269049 {STRING_REF ElectricalCurrentProbeDescription;EFI_MISC_ELECTRICAL_CURRENT_PROBE_LOCATION ElectricalCurrentProbeLocation;EFI_EXP_BASE10_DATA ElectricalCurrentProbeMaximumValue;EFI_EXP_BASE10_DATA ElectricalCurrentProbeMinimumValue;EFI_EXP_BASE10_DATA ElectricalCurrentProbeResolution;EFI_EXP_BASE10_DATA ElectricalCurrentProbeTolerance;EFI_EXP_BASE10_DATA ElectricalCurrentProbeAccuracy;EFI_EXP_BASE10_DATA ElectricalCurrentProbeNominalValue;EFI_EXP_BASE10_DATA MDLowerNoncriticalThreshold;EFI_EXP_BASE10_DATA MDUpperNoncriticalThreshold;EFI_EXP_BASE10_DATA MDLowerCriticalThreshold;EFI_EXP_BASE10_DATA MDUpperCriticalThreshold;EFI_EXP_BASE10_DATA MDLowerNonrecoverableThreshold;EFI_EXP_BASE10_DATA MDUpperNonrecoverableThreshold;UINT32 ElectricalCurrentProbeOemDefined;};
struct _E6D9C75EAA7ECFE9B401F684341C2AB2 {UINT16 Type;UINT16 SourceId;UINT8 Reserved0[2];UINT8 Flags;UINT8 Enabled;UINT32 NumberOfRecordsToPreAllocate;UINT32 MaxSectionsPerRecord;EFI_ACPI_6_0_HARDWARE_ERROR_NOTIFICATION_STRUCTURE NotificationStructure;UINT8 NumberOfHardwareBanks;UINT8 Reserved1[3];};
struct _E7009CB53EBEE73475B5E9D4AD6BE638 {UINT64 ValidFields;EFI_GENERIC_ERROR_STATUS ErrorStatus;UINT16 Type;UINT16 BusId;UINT32 Resv2;UINT64 BusAddress;UINT64 BusData;UINT64 BusCommand;UINT64 RequestorId;UINT64 ResponderId;UINT64 TargetId;};
struct _EA43600E1B5795B3F7B5B85AE593E7D1 {EFI_ACPI_DESCRIPTION_HEADER Header;EFI_ACPI_2_0_GENERIC_ADDRESS_STRUCTURE EcControl;EFI_ACPI_2_0_GENERIC_ADDRESS_STRUCTURE EcData;UINT32 Uid;UINT8 GpeBit;};
struct _EBA4FB6A469BBC38A010BC96DB327D60 {UINT16 StartId;UINT8 State;UINT8 Reserved;UINT32 Attributes;UINT32 NameSize;UINT32 DataSize;EFI_GUID VendorGuid;};
struct _F4152F3B05D30B6B9D819410712408A1 {PCI_EXPRESS_EXTENDED_CAPABILITIES_HEADER Header;UINT32 DpaCapability;UINT32 DpaLatencyIndicator;UINT16 DpaStatus;UINT16 DpaControl;UINT8 DpaPowerAllocationArray[1];};
struct _F7360F28947B935D45CA2C0CBC7637BA {UINT32 Version;EFI_GUID UpdateImageTypeId;UINT8 UpdateImageIndex;UINT8 reserved_bytes[3];UINT32 UpdateImageSize;UINT32 UpdateVendorCodeSize;UINT64 UpdateHardwareInstance;};
struct _F898EFB37CD01D9C44137AF8CC6CA606 {UINT8 Type;UINT8 Length;UINT16 Reserved;UINT32 CPUInterfaceNumber;UINT32 AcpiProcessorUid;UINT32 Flags;UINT32 ParkingProtocolVersion;UINT32 PerformanceInterruptGsiv;UINT64 ParkedAddress;UINT64 PhysicalBaseAddress;UINT64 GICV;UINT64 GICH;UINT32 VGICMaintenanceInterrupt;UINT64 GICRBaseAddress;UINT64 MPIDR;UINT8 ProcessorPowerEfficiencyClass;UINT8 Reserved2[3];};
struct _F9B7C3048F22FF3511E113F096D2E9D5 {EFI_DEVICE_PATH_PROTOCOL Header;UINT32 ResourceFlags;UINT8 PortGid[16];UINT64 ServiceId;UINT64 TargetPortId;UINT64 DeviceId;};
struct _FB5A10229933A8A55CD34CE9FAB61744 {EFI_MISC_ELEMENT_TYPE ChassisElementType;EFI_INTER_LINK_DATA ChassisElementStructure;EFI_BASE_BOARD_TYPE ChassisBaseBoard;UINT32 ChassisElementMinimum;UINT32 ChassisElementMaximum;};
struct _FC50B914782F3531749125FC4B4CF216 {EFI_HOB_GENERIC_HEADER Header;EFI_HOB_MEMORY_ALLOCATION_HEADER MemoryAllocationHeader;EFI_GUID ModuleName;EFI_PHYSICAL_ADDRESS EntryPoint;};
struct _EFI_HII_AIBT_CLEAR_IMAGES_BLOCK {EFI_IMAGE_ID DftImageId;UINT16 Width;UINT16 Height;UINT16 CellCount;EFI_HII_RGB_PIXEL BackgndColor;EFI_HII_ANIMATION_CELL AnimationCell[1];};
typedef void (*EFI_PEI_CPU_IO_PPI_MEM_WRITE16)(const EFI_PEI_SERVICES **PeiServices, const EFI_PEI_CPU_IO_PPI *This, UINT64 Address, UINT16 Data);
typedef void (*EFI_PEI_CPU_IO_PPI_MEM_WRITE32)(const EFI_PEI_SERVICES **PeiServices, const EFI_PEI_CPU_IO_PPI *This, UINT64 Address, UINT32 Data);
typedef void (*EFI_UNICODE_COLLATION_FATTOSTR)(EFI_UNICODE_COLLATION_PROTOCOL *This, UINTN FatSize, CHAR8 *Fat, CHAR16 *String);
typedef void (*EFI_PEI_CPU_IO_PPI_IO_WRITE16)(const EFI_PEI_SERVICES **PeiServices, const EFI_PEI_CPU_IO_PPI *This, UINT64 Address, UINT16 Data);
typedef void (*EFI_PEI_CPU_IO_PPI_IO_WRITE32)(const EFI_PEI_SERVICES **PeiServices, const EFI_PEI_CPU_IO_PPI *This, UINT64 Address, UINT32 Data);
typedef UINT16 (*EFI_PEI_CPU_IO_PPI_MEM_READ16)(const EFI_PEI_SERVICES **PeiServices, const EFI_PEI_CPU_IO_PPI *This, UINT64 Address);
typedef UINT32 (*EFI_PEI_CPU_IO_PPI_MEM_READ32)(const EFI_PEI_SERVICES **PeiServices, const EFI_PEI_CPU_IO_PPI *This, UINT64 Address);
typedef void (*EFI_PEI_CPU_IO_PPI_MEM_WRITE8)(const EFI_PEI_SERVICES **PeiServices, const EFI_PEI_CPU_IO_PPI *This, UINT64 Address, UINT8 Data);
typedef BOOLEAN (*EFI_RUNTIME_CRYPT_RSA_SET_KEY)(void *RsaContext, RSA_KEY_TAG KeyTag, const UINT8 *BigNumber, UINTN BnLength);
typedef UINT16 (*EFI_PEI_CPU_IO_PPI_IO_READ16)(const EFI_PEI_SERVICES **PeiServices, const EFI_PEI_CPU_IO_PPI *This, UINT64 Address);
typedef UINT32 (*EFI_PEI_CPU_IO_PPI_IO_READ32)(const EFI_PEI_SERVICES **PeiServices, const EFI_PEI_CPU_IO_PPI *This, UINT64 Address);
typedef void (*EFI_PEI_CPU_IO_PPI_IO_WRITE8)(const EFI_PEI_SERVICES **PeiServices, const EFI_PEI_CPU_IO_PPI *This, UINT64 Address, UINT8 Data);
typedef UINT8 (*EFI_PEI_CPU_IO_PPI_MEM_READ8)(const EFI_PEI_SERVICES **PeiServices, const EFI_PEI_CPU_IO_PPI *This, UINT64 Address);
typedef UINT8 (*EFI_PEI_CPU_IO_PPI_IO_READ8)(const EFI_PEI_SERVICES **PeiServices, const EFI_PEI_CPU_IO_PPI *This, UINT64 Address);
struct _EFI_SMM_SAVE_STATE_IO_INFO {UINT64 IoData;UINT16 IoPort;EFI_SMM_SAVE_STATE_IO_WIDTH IoWidth;EFI_SMM_SAVE_STATE_IO_TYPE IoType;};
struct _EFI_HII_GIBT_GLYPHS_BLOCK {EFI_HII_GLYPH_BLOCK Header;EFI_HII_GLYPH_INFO Cell;UINT16 Count;UINT8 BitmapData[1];};
struct _EFI_TCG_CLIENT_ACPI_TABLE {EFI_ACPI_DESCRIPTION_HEADER Header;UINT16 PlatformClass;UINT32 Laml;UINT64 Lasa;};
struct _EFI_USBFN_TRANSFER_RESULT {UINTN BytesTransferred;EFI_USBFN_TRANSFER_STATUS TransferStatus;UINT8 EndpointIndex;EFI_USBFN_ENDPOINT_DIRECTION Direction;void *Buffer;};
typedef BOOL (__stdcall *WinNtWriteConsoleOutput)(HANDLE ConsoleOutput, const CHAR_INFO *Buffer, COORD BufferSize, COORD BufferCoord, PSMALL_RECT WriteRegion);
struct tdTPM_CONTEXT_SENSITIVE {TPM_STRUCTURE_TAG tag;TPM_NONCE contextNonce;UINT32 internalSize;UINT8 *internalData;};
struct tdTPM_IDENTITY_CONTENTS {TPM_STRUCT_VER ver;UINT32 ordinal;TPM_CHOSENID_HASH labelPrivCADigest;TPM_PUBKEY identityPubKey;};
struct tdTPM_TRANSPORT_LOG_OUT {TPM_STRUCTURE_TAG tag;TPM_CURRENT_TICKS currentTicks;TPM_DIGEST parameters;TPM_MODIFIER_INDICATOR locality;};
typedef UINT32 (*GET_IDE_REGS_BASE_ADDR)(EFI_PEI_SERVICES **PeiServices, PEI_ATA_CONTROLLER_PPI *This, IDE_REGS_BASE_ADDR *IdeRegsBaseAddr);
typedef HANDLE (__stdcall *WinNtCreateFileMapping)(HANDLE FileHandle, LPSECURITY_ATTRIBUTES Attributes, DWORD Protect, DWORD MaximumSizeHigh, DWORD MaximumSizeLow, LPCTSTR Name);
typedef INT32 (__stdcall *WinNtSetDIBitsToDevice)(HDC, INT32, INT32, DWORD, DWORD, INT32, INT32, UINT, UINT, const void *, const BITMAPINFO *, UINT);
typedef BOOL (__stdcall *WinNtWriteConsoleInput)(HANDLE ConsoleInput, const INPUT_RECORD *Buffer, DWORD Legnth, LPDWORD NumberOfEventsWritten);
struct _EFI_IFR_GUID_SUBCLASS {EFI_IFR_OP_HEADER Header;EFI_GUID Guid;UINT8 ExtendOpCode;UINT16 SubClass;};
struct _EFI_IFR_ONE_OF_OPTION {EFI_IFR_OP_HEADER Header;EFI_STRING_ID Option;UINT8 Flags;UINT8 Type;EFI_IFR_TYPE_VALUE Value;};
struct tdTPM_CAP_VERSION_INFO {TPM_STRUCTURE_TAG tag;TPM_VERSION version;UINT16 specLevel;UINT8 errataRev;UINT8 tpmVendorID[4];UINT16 vendorSpecificSize;UINT8 *vendorSpecific;};
struct tdTPM_EK_BLOB_ACTIVATE {TPM_STRUCTURE_TAG tag;TPM_SYMMETRIC_KEY sessionKey;TPM_DIGEST idDigest;TPM_PCR_INFO_SHORT pcrInfo;};
struct tdTPM_TRANSPORT_PUBLIC {TPM_STRUCTURE_TAG tag;TPM_TRANSPORT_ATTRIBUTES transAttributes;TPM_ALGORITHM_ID algId;TPM_ENC_SCHEME encScheme;};
typedef BOOLEAN (*EFI_LEGACY_BIOS_INT86)(EFI_LEGACY_BIOS_PROTOCOL *This, UINT8 BiosInt, EFI_IA32_REGISTER_SET *Regs);
typedef BOOL (__stdcall *WinNtReleaseSemaphore)(HANDLE hSemaphore, LONG lReleaseCount, LPLONG lpPreviousCount);
typedef BOOL (__stdcall *WinNtSetViewportOrgEx)(HDC, INT32, INT32, LPPOINT);
struct _EFI_ACPI_DESCRIPTION {EFI_ACPI_3_0_GENERIC_ADDRESS_STRUCTURE PM_TMR_BLK;UINT8 PM_TMR_LEN;UINT8 TMR_VAL_EXT;UINT8 DAY_ALRM;UINT8 MON_ALRM;UINT8 CENTURY;EFI_ACPI_3_0_GENERIC_ADDRESS_STRUCTURE RESET_REG;UINT8 RESET_VALUE;EFI_ACPI_3_0_GENERIC_ADDRESS_STRUCTURE PM1a_EVT_BLK;EFI_ACPI_3_0_GENERIC_ADDRESS_STRUCTURE PM1b_EVT_BLK;EFI_ACPI_3_0_GENERIC_ADDRESS_STRUCTURE PM1a_CNT_BLK;EFI_ACPI_3_0_GENERIC_ADDRESS_STRUCTURE PM1b_CNT_BLK;EFI_ACPI_3_0_GENERIC_ADDRESS_STRUCTURE PM2_CNT_BLK;UINT8 PM1_EVT_LEN;UINT8 PM1_CNT_LEN;UINT8 PM2_CNT_LEN;UINT8 SLP_TYPa;UINT8 SLP_TYPb;UINT8 SLP1_TYPa;UINT8 SLP1_TYPb;UINT8 SLP2_TYPa;UINT8 SLP2_TYPb;UINT8 SLP3_TYPa;UINT8 SLP3_TYPb;UINT8 SLP4_TYPa;UINT8 SLP4_TYPb;EFI_ACPI_3_0_GENERIC_ADDRESS_STRUCTURE GPE0_BLK;EFI_ACPI_3_0_GENERIC_ADDRESS_STRUCTURE GPE1_BLK;UINT8 GPE0_BLK_LEN;UINT8 GPE1_BLK_LEN;UINT8 GPE1_BASE;UINT16 IAPC_BOOT_ARCH;UINT32 Flags;};
struct _EFI_IFR_GUID_TIMEOUT {EFI_IFR_OP_HEADER Header;EFI_GUID Guid;UINT8 ExtendOpCode;UINT16 TimeOut;};
struct _EFI_NET_SESSION_DATA {EFI_IP_ADDRESS Source;EFI_IP_ADDRESS Dest;IP_IO_IP_HEADER IpHdr;UINT32 IpHdrLen;UINT8 IpVersion;};
struct s_pxe_pcc_config_info {PXE_UINT32 BusType;PXE_UINT16 Bus;PXE_UINT8 Device;PXE_UINT8 Function;union s_pxe_pcc_config_info___2F4D249696DEF23C47AB9F3C3556EA7B Config;};
struct s_pxe_pci_config_info {UINT32 BusType;UINT16 Bus;UINT8 Device;UINT8 Function;union s_pxe_pci_config_info___412989C10B2DD518EBDBBC089E445D5C Config;};
typedef HANDLE (__stdcall *WinNtCreateSemaphore)(LPSECURITY_ATTRIBUTES lpSemaphoreAttributes, LONG lInitialCount, LONG lMaximumCount, LPCWSTR lpName);
struct s_pxe_cpb_initialize {PXE_UINT64 MemoryAddr;PXE_UINT32 MemoryLength;PXE_UINT32 LinkSpeed;PXE_UINT16 TxBufCnt;PXE_UINT16 TxBufSize;PXE_UINT16 RxBufCnt;PXE_UINT16 RxBufSize;PXE_UINT8 DuplexMode;PXE_UINT8 LoopBackMode;};
struct tdTPM_IDENTITY_PROOF {TPM_STRUCT_VER ver;UINT32 labelSize;UINT32 identityBindingSize;UINT32 endorsementSize;UINT32 platformSize;UINT32 conformanceSize;TPM_PUBKEY identityKey;UINT8 *labelArea;UINT8 *identityBinding;UINT8 *endorsementCredential;UINT8 *platformCredential;UINT8 *conformanceCredential;};
typedef BOOL (__stdcall *WinNtClearCommError)(HANDLE FileHandle, LPDWORD Errors, LPCOMSTAT Stat);
typedef DWORD (__stdcall *WinNtSetFilePointer)(HANDLE FileHandle, LONG DistanceToMove, PLONG DistanceToHoveHigh, DWORD MoveMethod);
typedef BOOL (__stdcall *WinNtSetWindowOrgEx)(HDC, INT32, INT32, LPPOINT);
struct _EFI_IFR_GUID_CLASS {EFI_IFR_OP_HEADER Header;EFI_GUID Guid;UINT8 ExtendOpCode;UINT16 Class;};
struct _EFI_IFR_GUID_LABEL {EFI_IFR_OP_HEADER Header;EFI_GUID Guid;UINT8 ExtendOpCode;UINT16 Number;};
struct _EFI_IPSEC_PAD_DATA {EFI_IPSEC_AUTH_PROTOCOL_TYPE AuthProtocol;EFI_IPSEC_AUTH_METHOD AuthMethod;BOOLEAN IkeIdFlag;UINTN AuthDataSize;void *AuthData;UINTN RevocationDataSize;void *RevocationData;};
struct tdEFI_VARIABLE_DATA {EFI_GUID VariableName;UINTN UnicodeNameLength;UINTN VariableDataLength;CHAR16 UnicodeName[1];INT8 VariableData[1];};
struct tdTPM_CURRENT_TICKS {TPM_STRUCTURE_TAG tag;UINT64 currentTicks;UINT16 tickRate;TPM_NONCE tickNonce;};
struct tdTPM_PCR_INFO_LONG {TPM_STRUCTURE_TAG tag;TPM_LOCALITY_SELECTION localityAtCreation;TPM_LOCALITY_SELECTION localityAtRelease;TPM_PCR_SELECTION creationPCRSelection;TPM_PCR_SELECTION releasePCRSelection;TPM_COMPOSITE_HASH digestAtCreation;TPM_COMPOSITE_HASH digestAtRelease;};
struct tdTPM_STORED_DATA12 {TPM_STRUCTURE_TAG tag;TPM_ENTITY_TYPE et;UINT32 sealInfoSize;UINT8 *sealInfo;UINT32 encDataSize;UINT8 *encData;};
struct tdTPM_STORE_ASYMKEY {TPM_PAYLOAD_TYPE payload;TPM_SECRET usageAuth;TPM_SECRET migrationAuth;TPM_DIGEST pubDataDigest;TPM_STORE_PRIVKEY privKey;};
struct tdTPM_SYMMETRIC_KEY {TPM_ALGORITHM_ID algId;TPM_ENC_SCHEME encScheme;UINT16 dataSize;UINT8 *data;};
typedef HMODULE (__stdcall *WinNtLoadLibraryEx)(LPCTSTR LibFileName, HANDLE FileHandle, DWORD Flags);
typedef UINT32 (*EBC_DEBUGGER_DASM)(EFI_EBC_SIMPLE_DEBUGGER_PROTOCOL *This, VM_CONTEXT *VmPtr, UINT16 *DasmString, UINT32 DasmStringSize);
struct _EFI_IFR_FORM_SET {EFI_IFR_OP_HEADER Header;EFI_GUID Guid;EFI_STRING_ID FormSetTitle;EFI_STRING_ID Help;UINT8 Flags;};
struct tdTPM_DAA_CONTEXT {TPM_STRUCTURE_TAG tag;TPM_DIGEST DAA_digestContext;TPM_DIGEST DAA_digest;TPM_DAA_CONTEXT_SEED DAA_contextSeed;UINT8 DAA_scratch[256];UINT8 DAA_stage;};
struct tdTPM_QUOTE_INFO2 {TPM_STRUCTURE_TAG tag;UINT8 fixed[4];TPM_NONCE externalData;TPM_PCR_INFO_SHORT infoShort;};
struct _EFI_IFR_DEFAULT {EFI_IFR_OP_HEADER Header;UINT16 DefaultId;UINT8 Type;EFI_IFR_TYPE_VALUE Value;};
struct _EFI_IFR_NUMERIC {EFI_IFR_OP_HEADER Header;EFI_IFR_QUESTION_HEADER Question;UINT8 Flags;MINMAXSTEP_DATA data;};
struct _EFI_TAPE_HEADER {UINT64 Signature;UINT32 Revision;UINT32 BootDescSize;UINT32 BootDescCRC;EFI_GUID TapeGUID;EFI_GUID TapeType;EFI_GUID TapeUnique;UINT32 BLLocation;UINT32 BLBlocksize;UINT32 BLFilesize;CHAR8 OSVersion[40];CHAR8 AppVersion[40];CHAR8 CreationDate[10];CHAR8 CreationTime[10];CHAR8 SystemName[256];CHAR8 TapeTitle[120];CHAR8 pad[468];};
struct tdTPM_QUOTE_INFO {TPM_STRUCT_VER version;UINT8 fixed[4];TPM_COMPOSITE_HASH digestValue;TPM_NONCE externalData;};
typedef HANDLE (__stdcall *WinNtCreateFile)(LPCWSTR FileName, DWORD DesiredAccess, DWORD SharedMode, LPSECURITY_ATTRIBUTES SecurityAttributes, DWORD CreationDisposition, DWORD FlagsAndAttributes, HANDLE TemplateFile);
typedef BOOL (__stdcall *WinNtGetMessage)(LPMSG lpMsg, HWND hWnd, UINT wMsgFilterMin, UINT wMsgFilterMax);
struct _EFI_IFR_ONE_OF {EFI_IFR_OP_HEADER Header;EFI_IFR_QUESTION_HEADER Question;UINT8 Flags;MINMAXSTEP_DATA data;};
struct tdTPM_SIGN_INFO {TPM_STRUCTURE_TAG tag;UINT8 fixed[4];TPM_NONCE replay;UINT32 dataLen;UINT8 *data;};
typedef LPVOID (__stdcall *WinNtHeapAlloc)(HANDLE hHeap, DWORD dwFlags, SIZE_T dwBytes);
typedef BOOL (__stdcall *WinNtHeapFree)(HANDLE hHeap, DWORD dwFlags, LPVOID lpMem);
struct _EFI_IFR_REF2 {EFI_IFR_OP_HEADER Header;EFI_IFR_QUESTION_HEADER Question;EFI_FORM_ID FormId;EFI_QUESTION_ID QuestionId;};
struct tdTPM_EK_BLOB {TPM_STRUCTURE_TAG tag;TPM_EK_TYPE ekType;UINT32 blobSize;UINT8 *blob;};
struct _EFI_IFR_GET {EFI_IFR_OP_HEADER Header;EFI_VARSTORE_ID VarStoreId;union _EFI_IFR_GET___A8B68B5C3AAC68D222728D2BA143C346 VarStoreInfo;UINT8 VarStoreType;};
struct _EFI_IFR_SET {EFI_IFR_OP_HEADER Header;EFI_VARSTORE_ID VarStoreId;union _EFI_IFR_SET___A8B68B5C3AAC68D222728D2BA143C346 VarStoreInfo;UINT8 VarStoreType;};
typedef BOOL (__stdcall *WinNtBitBlt)(HDC, INT32, INT32, INT32, INT32, HDC, INT32, INT32, DWORD);
struct _051ACF97DA2B9D5148EDE2E40852C3BC {EFI_TIME Timestamp;EFI_EVENT RecycleEvent;UINT32 PacketLength;UINT32 HeaderLength;UINT32 AddressLength;UINT32 DataLength;BOOLEAN BroadcastFlag;BOOLEAN MulticastFlag;BOOLEAN PromiscuousFlag;UINT16 ProtocolType;void *DestinationAddress;void *SourceAddress;void *MediaHeader;void *PacketData;};
struct _05768ECA08FD0615ADAEFAF110DCA85D {UINT32 ProcessorNumber;UINT16 StartBusNumber;UINT16 EndBusNumber;EFI_MEMORY_REGION_TYPE MemoryRegionType;EFI_EXP_BASE2_DATA MemorySize;EFI_PHYSICAL_ADDRESS MemoryStartAddress;};
struct _0687BFFC755475C647C041DCC8866A0C {UINT64 ValidFields;UINT32 PortType;UINT32 Version;UINT32 CommandStatus;UINT32 Resv2;EFI_GENERIC_ERROR_PCIE_DEV_BRIDGE_ID DevBridge;UINT64 SerialNo;UINT32 BridgeControlStatus;EFI_PCIE_ERROR_DATA_CAPABILITY Capability;EFI_PCIE_ERROR_DATA_AER AerInfo;};
struct _079CCC9A8ED9998C019F85FD77F39906 {UINT64 CommandTimeout;void *TransferBuffer;UINT32 TransferLength;void *MetadataBuffer;UINT32 MetadataLength;UINT8 QueueType;EFI_NVM_EXPRESS_COMMAND *NvmeCmd;EFI_NVM_EXPRESS_COMPLETION *NvmeCompletion;};
struct _0BC8E39BB53636F12495B948C7ADEFF7 {SAL_SEC_HEADER SectionHeader;UINT64 ValidationBits;UINT16 SelRecordId;UINT8 SelRecordType;UINT32 TimeStamp;UINT16 GeneratorId;UINT8 EvmRevision;UINT8 SensorType;UINT8 SensorNum;UINT8 EventDirType;UINT8 Data1;UINT8 Data2;UINT8 Data3;};
struct _0E74BDB6838C2A67195E44263ED31BF0 {UINT32 SectionOffset;UINT32 SectionLength;UINT16 Revision;UINT8 SecValidMask;UINT8 Resv1;UINT32 SectionFlags;EFI_GUID SectionType;EFI_GUID FruId;UINT32 Severity;CHAR8 FruString[20];};
struct _147023CBBDBEDFDDB4978B461569FA75 {SMBIOS_STRUCTURE Hdr;SMBIOS_TABLE_STRING Vendor;SMBIOS_TABLE_STRING BiosVersion;UINT16 BiosSegment;SMBIOS_TABLE_STRING BiosReleaseDate;UINT8 BiosSize;MISC_BIOS_CHARACTERISTICS BiosCharacteristics;UINT8 BIOSCharacteristicsExtensionBytes[2];UINT8 SystemBiosMajorRelease;UINT8 SystemBiosMinorRelease;UINT8 EmbeddedControllerFirmwareMajorRelease;UINT8 EmbeddedControllerFirmwareMinorRelease;};
struct _1643288C018D61D457BCDB1FB4A997E8 {UINT16 Version;UINT16 HeaderSize;UINT32 RecordSize;EFI_GUID DataRecordGuid;EFI_GUID ProducerName;UINT64 DataRecordClass;EFI_TIME LogTime;UINT64 LogMonotonicCount;};
struct _185CE2990D69589CB51D6DD32266168D {EFI_MEMORY_ERROR_TYPE MemoryErrorType;EFI_MEMORY_ERROR_GRANULARITY_TYPE MemoryErrorGranularity;EFI_MEMORY_ERROR_OPERATION_TYPE MemoryErrorOperation;UINT32 VendorSyndrome;UINT64 MemoryArrayErrorAddress;UINT64 DeviceErrorAddress;UINT32 DeviceErrorResolution;};
struct _1C77B76F7209E6FA2397C6D5BFA84409 {SMBIOS_STRUCTURE Hdr;UINT32 StartingAddress;UINT32 EndingAddress;UINT16 MemoryDeviceHandle;UINT16 MemoryArrayMappedAddressHandle;UINT8 PartitionRowPosition;UINT8 InterleavePosition;UINT8 InterleavedDataDepth;UINT64 ExtendedStartingAddress;UINT64 ExtendedEndingAddress;};
union _216B2186A7BA92D3D6EC7F4F72322E99 {TPMS_KEYEDHASH_PARMS keyedHashDetail;TPMT_SYM_DEF_OBJECT symDetail;TPMS_RSA_PARMS rsaDetail;TPMS_ECC_PARMS eccDetail;TPMS_ASYM_PARMS asymDetail;};
struct _21B1BD905B1B82A96F595CACADB4BBCF {UINT16 Type;UINT16 SourceId;UINT16 RelatedSourceId;UINT8 Flags;UINT8 Enabled;UINT32 NumberOfRecordsToPreAllocate;UINT32 MaxSectionsPerRecord;UINT32 MaxRawDataLength;EFI_ACPI_4_0_GENERIC_ADDRESS_STRUCTURE ErrorStatusAddress;EFI_ACPI_4_0_HARDWARE_ERROR_NOTIFICATION_STRUCTURE NotificationStructure;UINT32 ErrorStatusBlockLength;};
struct _2A798984CCC859E01B38F7089B098E60 {EFI_MISC_COOLING_DEVICE_TYPE CoolingDeviceType;EFI_INTER_LINK_DATA CoolingDeviceTemperatureLink;UINT8 CoolingDeviceUnitGroup;UINT16 CoolingDeviceNominalSpeed;UINT32 CoolingDeviceOemDefined;};
struct _31AB4F14E1C573210755755B47923018 {SMBIOS_STRUCTURE Hdr;SMBIOS_TABLE_STRING Description;MISC_ELECTRICAL_CURRENT_PROBE_LOCATION LocationAndStatus;UINT16 MaximumValue;UINT16 MinimumValue;UINT16 Resolution;UINT16 Tolerance;UINT16 Accuracy;UINT32 OEMDefined;UINT16 NominalValue;};
struct _33FA6F11E355B0D724BCA1AF27F0CC54 {SAL_SEC_HEADER SectionHeader;UINT64 ValidationBits;UINT64 PciComponentErrorStatus;PCI_COMP_INFO PciComponentInfo;UINT32 PciComponentMemNum;UINT32 PciComponentIoNum;UINT8 PciBusOemId[16];};
struct _3A4EAC9E0776CF63D70ADBE2813E4E41 {EFI_DRIVER_HEALTH_PROTOCOL *DriverHealth;EFI_HANDLE DriverHealthHandle;EFI_HANDLE ControllerHandle;EFI_HANDLE ChildHandle;EFI_DRIVER_HEALTH_HII_MESSAGE *MessageList;EFI_HII_HANDLE HiiHandle;EFI_DRIVER_HEALTH_STATUS HealthStatus;};
union _3B35CDC5D61CFFE1B0CA5FCE3EBF2BD3 {TPMS_SIGNATURE_RSASSA rsassa;TPMS_SIGNATURE_RSAPSS rsapss;TPMS_SIGNATURE_ECDSA ecdsa;TPMS_SIGNATURE_ECDSA sm2;TPMS_SIGNATURE_ECDSA ecdaa;TPMS_SIGNATURE_ECDSA ecschnorr;TPMT_HA hmac;TPMS_SCHEME_SIGHASH any;};
struct _3DEF65287BC28B387D1B9E1FF8067D1D {UINT16 Signature;UINT16 Machine;UINT8 NumberOfSections;UINT8 Subsystem;UINT16 StrippedSize;UINT32 AddressOfEntryPoint;UINT32 BaseOfCode;UINT64 ImageBase;EFI_IMAGE_DATA_DIRECTORY DataDirectory[2];};
struct _401C12086CCA49F0E88941330385927B {SMBIOS_STRUCTURE Hdr;SMBIOS_TABLE_STRING Description;MISC_TEMPERATURE_PROBE_LOCATION LocationAndStatus;UINT16 MaximumValue;UINT16 MinimumValue;UINT16 Resolution;UINT16 Tolerance;UINT16 Accuracy;UINT32 OEMDefined;UINT16 NominalValue;};
struct _40F9D4927893F5B451F6FFDFBAC62182 {EFI_MEMORY_ARRAY_LOCATION MemoryArrayLocation;EFI_MEMORY_ARRAY_USE MemoryArrayUse;EFI_MEMORY_ERROR_CORRECTION MemoryErrorCorrection;EFI_EXP_BASE2_DATA MaximumMemoryCapacity;UINT16 NumberMemoryDevices;};
struct _4386EE58264757D1F2365CEF729FF06D {SMBIOS_STRUCTURE Hdr;UINT8 PowerUnitGroup;SMBIOS_TABLE_STRING Location;SMBIOS_TABLE_STRING DeviceName;SMBIOS_TABLE_STRING Manufacturer;SMBIOS_TABLE_STRING SerialNumber;SMBIOS_TABLE_STRING AssetTagNumber;SMBIOS_TABLE_STRING ModelPartNumber;SMBIOS_TABLE_STRING RevisionLevel;UINT16 MaxPowerCapacity;SYS_POWER_SUPPLY_CHARACTERISTICS PowerSupplyCharacteristics;UINT16 InputVoltageProbeHandle;UINT16 CoolingDeviceHandle;UINT16 InputCurrentProbeHandle;};
struct _46BB9A8260616A26F7ABA63259AF690A {EFI_ACPI_DESCRIPTION_HEADER Header;UINT32 EventTimerBlockId;EFI_ACPI_2_0_GENERIC_ADDRESS_STRUCTURE BaseAddressLower32Bit;UINT8 HpetNumber;UINT16 MainCounterMinimumClockTickInPeriodicMode;UINT8 PageProtectionAndOemAttribute;};
union _487F154BFD23F1C76883464380C0CFF3 {TPM2B_PRIVATE_KEY_RSA rsa;TPM2B_ECC_PARAMETER ecc;TPM2B_SENSITIVE_DATA bits;TPM2B_SYM_KEY sym;TPM2B_PRIVATE_VENDOR_SPECIFIC any;};
struct _515CEDC9B43131FD8B481EBCCB022659 {UINT8 OpCode;UINT8 HwType;UINT8 HwAddrLen;UINT8 Hops;UINT32 Xid;UINT16 Seconds;UINT16 Reserved;EFI_IPv4_ADDRESS ClientAddr;EFI_IPv4_ADDRESS YourAddr;EFI_IPv4_ADDRESS ServerAddr;EFI_IPv4_ADDRESS GatewayAddr;UINT8 ClientHwAddr[16];CHAR8 ServerName[64];CHAR8 BootFileName[128];};
struct _57F875E4AC150613E0C95D78A2DED5CD {UINT8 Type;UINT8 Length;UINT8 Reserved[6];UINT64 BaseAddress;UINT64 AddressLength;EFI_ACPI_5_0_GENERIC_ADDRESS_STRUCTURE DoorbellRegister;UINT64 DoorbellPreserve;UINT64 DoorbellWrite;UINT32 NominalLatency;UINT32 MaximumPeriodicAccessRate;UINT16 MinimumRequestTurnaroundTime;};
struct _61ABA295D204D35FC0507E348C046E1C {EFI_STATUS_CODE_DATA DataHeader;EFI_MEMORY_ERROR_GRANULARITY Granularity;EFI_MEMORY_ERROR_OPERATION Operation;UINTN Syndrome;EFI_PHYSICAL_ADDRESS Address;UINTN Resolution;};
union _6ABB2352D76941AE307F390D04ED2706 {EFI_SYSTEM_CONTEXT_EBC SystemContextEbc;EFI_SYSTEM_CONTEXT_IA32 SystemContextIa32;EFI_SYSTEM_CONTEXT_IPF SystemContextIpf;EFI_SYSTEM_CONTEXT_X64 SystemContextX64;EFI_SYSTEM_CONTEXT_ARM SystemContextArm;};
struct _6F10AFB06B176DC7E412F6E2BE16C09C {EFI_ACPI_DESCRIPTION_HEADER Header;UINT16 Version;UINT8 Status;UINT8 ImageType;UINT64 ImageAddress;UINT32 ImageOffsetX;UINT32 ImageOffsetY;};
struct _6F94CA10078635A6F69CDB6765474AFB {SMBIOS_STRUCTURE Hdr;UINT16 LogAreaLength;UINT16 LogHeaderStartOffset;UINT16 LogDataStartOffset;UINT8 AccessMethod;UINT8 LogStatus;UINT32 LogChangeToken;UINT32 AccessMethodAddress;UINT8 LogHeaderFormat;UINT8 NumberOfSupportedLogTypeDescriptors;UINT8 LengthOfLogTypeDescriptor;EVENT_LOG_TYPE EventLogTypeDescriptors[1];};
struct _70130FD93B81EEC2C8493C4688E5C28A {SMBIOS_STRUCTURE Hdr;SMBIOS_TABLE_STRING Description;MISC_VOLTAGE_PROBE_LOCATION LocationAndStatus;UINT16 MaximumValue;UINT16 MinimumValue;UINT16 Resolution;UINT16 Tolerance;UINT16 Accuracy;UINT32 OEMDefined;UINT16 NominalValue;};
struct _71C666ECBA611A0D1E094AEB91B43A93 {UINT32 Version;BLUETOOTH_ADDRESS BD_ADDR;UINT8 PageScanRepetitionMode;BLUETOOTH_CLASS_OF_DEVICE ClassOfDevice;UINT16 ClockOffset;UINT8 RSSI;UINT8 ExtendedInquiryResponse[240];};
struct _758791F50DE192112E59CD06B1C0A25A {SMBIOS_STRUCTURE Hdr;UINT8 Checksum;UINT8 Reserved1;UINT16 Reserved2;UINT32 BisEntry16;UINT32 BisEntry32;UINT64 Reserved3;UINT32 Reserved4;};
struct _7676233044F4F64A1DC4AC7E4996AEE6 {SMBIOS_STRUCTURE Hdr;SMBIOS_TABLE_STRING Manufacturer;SMBIOS_TABLE_STRING ProductName;SMBIOS_TABLE_STRING Version;SMBIOS_TABLE_STRING SerialNumber;SMBIOS_TABLE_STRING AssetTag;BASE_BOARD_FEATURE_FLAGS FeatureFlag;SMBIOS_TABLE_STRING LocationInChassis;UINT16 ChassisHandle;UINT8 BoardType;UINT8 NumberOfContainedObjectHandles;UINT16 ContainedObjectHandles[1];};
struct _798FF404241DBA6102FC87294FCDE779 {EFI_DEVICE_PATH_PROTOCOL Header;EFI_GUID Guid;UINT32 Reserved;UINT64 SasAddress;UINT64 Lun;UINT16 DeviceTopology;UINT16 RelativeTargetPort;};
struct _7C39655131502DCAEDDA105E88BDBF6D {SMBIOS_STRUCTURE Hdr;SMBIOS_TABLE_STRING Location;SMBIOS_TABLE_STRING Manufacturer;SMBIOS_TABLE_STRING ManufactureDate;SMBIOS_TABLE_STRING SerialNumber;SMBIOS_TABLE_STRING DeviceName;UINT8 DeviceChemistry;UINT16 DeviceCapacity;UINT16 DesignVoltage;SMBIOS_TABLE_STRING SBDSVersionNumber;UINT8 MaximumErrorInBatteryData;UINT16 SBDSSerialNumber;UINT16 SBDSManufactureDate;SMBIOS_TABLE_STRING SBDSDeviceChemistry;UINT8 DesignCapacityMultiplier;UINT32 OEMSpecific;};
struct _81E70B6E9500B43B545FBC302A22FD1F {BOOLEAN AcceptBroadcast;BOOLEAN AcceptPromiscuous;BOOLEAN AcceptAnyPort;BOOLEAN AllowDuplicatePort;UINT8 TypeOfService;UINT8 TimeToLive;BOOLEAN DoNotFragment;UINT32 ReceiveTimeout;UINT32 TransmitTimeout;BOOLEAN UseDefaultAddress;EFI_IPv4_ADDRESS StationAddress;EFI_IPv4_ADDRESS SubnetMask;UINT16 StationPort;EFI_IPv4_ADDRESS RemoteAddress;UINT16 RemotePort;};
struct _844F3F65E7253621E8FFDF0B27EA43FD {EFI_TIME TimeStamp;EFI_EVENT RecycleSignal;EFI_UDP6_SESSION_DATA UdpSession;UINT32 DataLength;UINT32 FragmentCount;EFI_UDP6_FRAGMENT_DATA FragmentTable[1];};
struct _871539A1159CE24A389CEFB2F5F99856 {BOOLEAN FormSetUpdate;EFI_PHYSICAL_ADDRESS FormCallbackHandle;BOOLEAN FormUpdate;UINT16 FormValue;STRING_REF FormTitle;UINT16 DataCount;UINT8 *Data;};
struct _8773C7B7E197EAF8615A1D8A34F133BB {SMBIOS_STRUCTURE Hdr;UINT32 StartingAddress;UINT32 EndingAddress;UINT16 MemoryArrayHandle;UINT8 PartitionWidth;UINT64 ExtendedStartingAddress;UINT64 ExtendedEndingAddress;};
struct _8CCFC712507343159710C2C6E9B9EE3D {SMBIOS_STRUCTURE Hdr;UINT8 Location;UINT8 Use;UINT8 MemoryErrorCorrection;UINT32 MaximumCapacity;UINT16 MemoryErrorInformationHandle;UINT16 NumberOfMemoryDevices;UINT64 ExtendedMaximumCapacity;};
struct _913A1C96CB07C43F8E37E2701424C7B4 {FRAMEWORK_EFI_IFR_OP_HEADER Header;EFI_GUID Guid;STRING_REF FormSetTitle;STRING_REF Help;EFI_PHYSICAL_ADDRESS CallbackHandle;UINT16 Class;UINT16 SubClass;UINT16 NvDataSize;};
struct _91FCA2D6F8E6352AA88065349604AF74 {EFI_TIME TimeStamp;EFI_EVENT RecycleSignal;UINT32 HeaderLength;EFI_IP4_HEADER *Header;UINT32 OptionsLength;void *Options;UINT32 DataLength;UINT32 FragmentCount;EFI_IP4_FRAGMENT_DATA FragmentTable[1];};
struct _948329AD6C2C9F7B84E43B2DD569E8E1 {STRING_REF BaseBoardManufacturer;STRING_REF BaseBoardProductName;STRING_REF BaseBoardVersion;STRING_REF BaseBoardSerialNumber;STRING_REF BaseBoardAssetTag;STRING_REF BaseBoardChassisLocation;EFI_BASE_BOARD_FEATURE_FLAGS BaseBoardFeatureFlags;EFI_BASE_BOARD_TYPE BaseBoardType;EFI_INTER_LINK_DATA BaseBoardChassisLink;UINT32 BaseBoardNumberLinks;EFI_INTER_LINK_DATA LinkN;};
struct _98A6DDA279CF30F97FDAD1377CAD4229 {EFI_MISC_IPMI_INTERFACE_TYPE IpmiInterfaceType;EFI_MISC_IPMI_SPECIFICATION_REVISION IpmiSpecificationRevision;UINT16 IpmiI2CSlaveAddress;UINT16 IpmiNvDeviceAddress;UINT64 IpmiBaseAddress;EFI_DEVICE_PATH_PROTOCOL IpmiDevicePath;};
struct _98C3CBED3B5D4E48EA53A4DD166EFC60 {UINT8 Type;UINT8 Length;UINT8 Reserved[6];UINT64 BaseAddress;UINT64 AddressLength;EFI_ACPI_5_1_GENERIC_ADDRESS_STRUCTURE DoorbellRegister;UINT64 DoorbellPreserve;UINT64 DoorbellWrite;UINT32 NominalLatency;UINT32 MaximumPeriodicAccessRate;UINT16 MinimumRequestTurnaroundTime;};
struct _A5357F3918FAAF90A6D6A34513CB52A2 {SMBIOS_STRUCTURE Hdr;SMBIOS_TABLE_STRING SocketDesignation;UINT16 CacheConfiguration;UINT16 MaximumCacheSize;UINT16 InstalledSize;CACHE_SRAM_TYPE_DATA SupportedSRAMType;CACHE_SRAM_TYPE_DATA CurrentSRAMType;UINT8 CacheSpeed;UINT8 ErrorCorrectionType;UINT8 SystemCacheType;UINT8 Associativity;};
struct _A58D879E96FE4F843307298668B1FFEA {EFI_GUID Name;EFI_PHYSICAL_ADDRESS MemoryBaseAddress;UINT64 MemoryLength;EFI_MEMORY_TYPE MemoryType;UINT8 Reserved[4];};
struct _A71D4C743651D25933CAA165006EBDF6 {SMBIOS_STRUCTURE Hdr;SMBIOS_TABLE_STRING SocketDesignation;UINT8 BankConnections;UINT8 CurrentSpeed;MEMORY_CURRENT_TYPE CurrentMemoryType;MEMORY_INSTALLED_ENABLED_SIZE InstalledSize;MEMORY_INSTALLED_ENABLED_SIZE EnabledSize;UINT8 ErrorStatus;};
struct _AD9BA3FED9A528D455365381D739EDE0 {EFI_ACPI_DESCRIPTION_HEADER Header;UINT8 InterfaceType;UINT8 Reserved1[3];EFI_ACPI_2_0_GENERIC_ADDRESS_STRUCTURE BaseAddress;UINT8 InterruptType;UINT8 Irq;UINT32 GlobalSystemInterrupt;UINT8 BaudRate;UINT8 Parity;UINT8 StopBits;UINT8 FlowControl;UINT8 TerminalType;UINT8 Language;UINT16 PciDeviceId;UINT16 PciVendorId;UINT8 PciBusNumber;UINT8 PciDeviceNumber;UINT8 PciFunctionNumber;UINT32 PciFlags;UINT8 PciSegment;UINT32 Reserved2;};
struct _AF812B06E0C82E08BA2D86348360F935 {SAL_SEC_HEADER SectionHeader;UINT64 ValidationBits;UINT64 ProcErrorMap;UINT64 ProcStateParameter;UINT64 ProcCrLid;MOD_ERROR_INFO CacheError[15];MOD_ERROR_INFO TlbError[15];MOD_ERROR_INFO BusError[15];MOD_ERROR_INFO RegFileCheck[15];MOD_ERROR_INFO MsCheck[15];CPUID_INFO CpuInfo;PSI_STATIC_STRUCT PsiValidData;};
struct _B3B07BAE448478B4BDB40B2A865BEC3B {DEVICE_PRODUCER_SERIAL Serial[4];DEVICE_PRODUCER_PARALLEL Parallel[3];DEVICE_PRODUCER_FLOPPY Floppy;UINT8 MousePresent;LEGACY_DEVICE_FLAGS Flags;};
struct _B4E06BD78C8094DDC134BE6ECCF8BEF2 {UINTN Signature;LIST_ENTRY Link;EFI_IFR_ONE_OF_OPTION *OptionOpCode;EFI_IMAGE_ID ImageId;EFI_ANIMATION_ID AnimationId;};
struct _B608AC9E11096DC366B16D397EBE2881 {UINT16 Type;UINT16 SourceId;UINT16 RelatedSourceId;UINT8 Flags;UINT8 Enabled;UINT32 NumberOfRecordsToPreAllocate;UINT32 MaxSectionsPerRecord;UINT32 MaxRawDataLength;EFI_ACPI_5_0_GENERIC_ADDRESS_STRUCTURE ErrorStatusAddress;EFI_ACPI_5_0_HARDWARE_ERROR_NOTIFICATION_STRUCTURE NotificationStructure;UINT32 ErrorStatusBlockLength;};
struct _B986BC8AB1E2DF0C026584965AA8D100 {EFI_DHCP6_IA_DESCRIPTOR Descriptor;EFI_DHCP6_STATE State;EFI_DHCP6_PACKET *ReplyPacket;UINT32 IaAddressCount;EFI_DHCP6_IA_ADDRESS IaAddress[1];};
struct _BAD451990F09F0D15F9CCC07E2537258 {EFI_PHYSICAL_ADDRESS RomAddress;EFI_MEMORY_TYPE MemoryType;UINT32 RomLength;UINT32 Seg;UINT8 Bus;UINT8 Dev;UINT8 Func;BOOLEAN ExecutedLegacyBiosImage;BOOLEAN DontLoadEfiRom;};
struct _BDF2CE874A5E7CDD7705734530715A1D {BOOLEAN AcceptPromiscuous;BOOLEAN AcceptAnyPort;BOOLEAN AllowDuplicatePort;UINT8 TrafficClass;UINT8 HopLimit;UINT32 ReceiveTimeout;UINT32 TransmitTimeout;EFI_IPv6_ADDRESS StationAddress;UINT16 StationPort;EFI_IPv6_ADDRESS RemoteAddress;UINT16 RemotePort;};
struct _BF8F6C836D1B9317716A9CAD4CBBC55F {UINT8 EntryType;UINT8 Id;UINT8 Ver;EFI_LEGACY_MP_TABLE_ENTRY_PROCESSOR_FLAGS Flags;EFI_LEGACY_MP_TABLE_ENTRY_PROCESSOR_SIGNATURE Signature;EFI_LEGACY_MP_TABLE_ENTRY_PROCESSOR_FEATURES Features;UINT32 Reserved1;UINT32 Reserved2;};
struct _CD2E670E749FEDABC03ED9056E0335BF {EFI_80211_MAC_ADDRESS BSSId;UINT16 CapabilityInfo;UINT16 AssociationID;UINT8 RCPIValue;UINT8 RSNIValue;EFI_80211_ELEMENT_EXT_CAP *ExtCapElement;EFI_80211_ELEMENT_TIMEOUT_VAL TimeoutInterval;UINT8 *VendorSpecificInfo;};
struct _CE2359FB6E2262580F7E492B83DE161B {SMBIOS_STRUCTURE Hdr;UINT8 ErrDetectMethod;MEMORY_ERROR_CORRECT_CAPABILITY ErrCorrectCapability;UINT8 SupportInterleave;UINT8 CurrentInterleave;UINT8 MaxMemoryModuleSize;MEMORY_SPEED_TYPE SupportSpeed;UINT16 SupportMemoryType;UINT8 MemoryModuleVoltage;UINT8 AssociatedMemorySlotNum;UINT16 MemoryModuleConfigHandles[1];};
struct _D77C3BF4AD6459820D87B06F53653A24 {TPM_ECC_CURVE curveID;UINT16 keySize;TPMT_KDF_SCHEME kdf;TPMT_ECC_SCHEME sign;TPM2B_ECC_PARAMETER p;TPM2B_ECC_PARAMETER a;TPM2B_ECC_PARAMETER b;TPM2B_ECC_PARAMETER gX;TPM2B_ECC_PARAMETER gY;TPM2B_ECC_PARAMETER n;TPM2B_ECC_PARAMETER h;};
struct _DAC536EC9D6B1C58C0ACAFFEF6C4B5B5 {BOOLEAN EnableDnsCache;UINT8 Protocol;EFI_IPv6_ADDRESS StationIp;UINT16 LocalPort;UINT32 DnsServerCount;EFI_IPv6_ADDRESS *DnsServerList;UINT32 RetryCount;UINT32 RetryInterval;};
struct _DAD7E7F52A2984BA612E4D34EBCEB273 {UINT16 Type;UINT16 SourceId;UINT16 RelatedSourceId;UINT8 Flags;UINT8 Enabled;UINT32 NumberOfRecordsToPreAllocate;UINT32 MaxSectionsPerRecord;UINT32 MaxRawDataLength;EFI_ACPI_6_0_GENERIC_ADDRESS_STRUCTURE ErrorStatusAddress;EFI_ACPI_6_0_HARDWARE_ERROR_NOTIFICATION_STRUCTURE NotificationStructure;UINT32 ErrorStatusBlockLength;};
struct _DBAF76826536C93922C3AE0341876B96 {UINT16 Magic;UINT8 MajorLinkerVersion;UINT8 MinorLinkerVersion;UINT32 SizeOfCode;UINT32 SizeOfInitializedData;UINT32 SizeOfUninitializedData;UINT32 AddressOfEntryPoint;UINT32 BaseOfCode;UINT64 ImageBase;UINT32 SectionAlignment;UINT32 FileAlignment;UINT16 MajorOperatingSystemVersion;UINT16 MinorOperatingSystemVersion;UINT16 MajorImageVersion;UINT16 MinorImageVersion;UINT16 MajorSubsystemVersion;UINT16 MinorSubsystemVersion;UINT32 Win32VersionValue;UINT32 SizeOfImage;UINT32 SizeOfHeaders;UINT32 CheckSum;UINT16 Subsystem;UINT16 DllCharacteristics;UINT64 SizeOfStackReserve;UINT64 SizeOfStackCommit;UINT64 SizeOfHeapReserve;UINT64 SizeOfHeapCommit;UINT32 LoaderFlags;UINT32 NumberOfRvaAndSizes;EFI_IMAGE_DATA_DIRECTORY DataDirectory[16];};
struct _DDCCF9FCA16B0D7C5357409FD647F73F {UINT8 Type;UINT8 Length;UINT8 Reserved[6];UINT64 BaseAddress;UINT64 AddressLength;EFI_ACPI_6_0_GENERIC_ADDRESS_STRUCTURE DoorbellRegister;UINT64 DoorbellPreserve;UINT64 DoorbellWrite;UINT32 NominalLatency;UINT32 MaximumPeriodicAccessRate;UINT16 MinimumRequestTurnaroundTime;};
struct _E88A504DB990B2650A1E6222F0724E77 {EFI_STATUS_CODE_TYPE CodeType;EFI_STATUS_CODE_VALUE Value;UINT32 Instance;EFI_GUID CallerId;EFI_STATUS_CODE_DATA Data;};
struct _E8952E6FFF688DDCC1604E7EA2BEEE62 {UINT16 Type;UINT16 SourceId;UINT16 RelatedSourceId;UINT8 Flags;UINT8 Enabled;UINT32 NumberOfRecordsToPreAllocate;UINT32 MaxSectionsPerRecord;UINT32 MaxRawDataLength;EFI_ACPI_5_1_GENERIC_ADDRESS_STRUCTURE ErrorStatusAddress;EFI_ACPI_5_1_HARDWARE_ERROR_NOTIFICATION_STRUCTURE NotificationStructure;UINT32 ErrorStatusBlockLength;};
struct _EE1E755472070719C001852BDBB40567 {EFI_TIME TimeStamp;EFI_EVENT RecycleSignal;EFI_UDP4_SESSION_DATA UdpSession;UINT32 DataLength;UINT32 FragmentCount;EFI_UDP4_FRAGMENT_DATA FragmentTable[1];};
struct _FC1570775E7D1D4DC0C9D75FBE11BCB6 {UINT64 RecordId;UINT16 Revision;UINT8 ErrorSeverity;UINT8 ValidationBits;UINT32 RecordLength;SAL_TIME_STAMP TimeStamp;UINT8 OemPlatformId[16];};
struct _FC542E6EFF6DCA60B8117825EDB2E023 {UINT64 ValidFields;EFI_GENERIC_ERROR_STATUS ErrorStatus;UINT64 PhysicalAddress;UINT64 PhysicalAddressMask;UINT16 Node;UINT16 Card;UINT16 Module;UINT16 Bank;UINT32 Device;UINT32 Row;UINT32 Column;UINT32 Rank;UINT32 BitPosition;UINT8 ChipId;UINT8 MemErrorType;UINT8 Status;UINT8 Reserved;UINT64 RequestorId;UINT64 ResponderId;UINT64 TargetId;UINT32 CardHandle;UINT32 ModuleHandle;};
typedef BOOLEAN (*EFI_UNICODE_COLLATION_STRTOFAT)(EFI_UNICODE_COLLATION_PROTOCOL *This, CHAR16 *String, UINTN FatSize, CHAR8 *Fat);
struct _EFI_HII_STRING_PACKAGE_HDR {EFI_HII_PACKAGE_HEADER Header;UINT32 HdrSize;UINT32 StringInfoOffset;CHAR16 LanguageWindow[16];EFI_STRING_ID LanguageName;CHAR8 Language[1];};
struct _EFI_RUNTIME_ARCH_PROTOCOL {EFI_LIST_ENTRY ImageHead;EFI_LIST_ENTRY EventHead;UINTN MemoryDescriptorSize;UINT32 MemoryDesciptorVersion;UINTN MemoryMapSize;EFI_MEMORY_DESCRIPTOR *MemoryMapPhysical;EFI_MEMORY_DESCRIPTOR *MemoryMapVirtual;BOOLEAN VirtualMode;BOOLEAN AtRuntime;};
typedef BOOLEAN (*EFI_LEGACY_BIOS_FARCALL86)(EFI_LEGACY_BIOS_PROTOCOL *This, UINT16 Segment, UINT16 Offset, EFI_IA32_REGISTER_SET *Regs, void *Stack, UINTN StackSize);
struct _EFI_HII_FONT_PACKAGE_HDR {EFI_HII_PACKAGE_HEADER Header;UINT32 HdrSize;UINT32 GlyphBlockOffset;EFI_HII_GLYPH_INFO Cell;EFI_HII_FONT_STYLE FontStyle;CHAR16 FontFamily[1];};
struct tdTPM_DELEGATE_OWNER_BLOB {TPM_STRUCTURE_TAG tag;TPM_DELEGATE_PUBLIC pub;TPM_DIGEST integrityDigest;UINT32 additionalSize;UINT8 *additionalArea;UINT32 sensitiveSize;UINT8 *sensitiveArea;};
struct _EFI_HII_SIBT_FONT_BLOCK {EFI_HII_SIBT_EXT2_BLOCK Header;UINT8 FontId;UINT16 FontSize;EFI_HII_FONT_STYLE FontStyle;CHAR16 FontName[1];};
struct _EFI_IFR_QUESTION_HEADER {EFI_IFR_STATEMENT_HEADER Header;EFI_QUESTION_ID QuestionId;EFI_VARSTORE_ID VarStoreId;union _EFI_IFR_QUESTION_HEADER___A8B68B5C3AAC68D222728D2BA143C346 VarStoreInfo;UINT8 Flags;};
struct tdTPM_FAMILY_TABLE_ENTRY {TPM_STRUCTURE_TAG tag;TPM_FAMILY_LABEL label;TPM_FAMILY_ID familyID;TPM_FAMILY_VERIFICATION verificationCount;TPM_FAMILY_FLAGS flags;};
struct _EFI_IFR_GUID_VAREQNAME {EFI_IFR_OP_HEADER Header;EFI_GUID Guid;UINT8 ExtendOpCode;EFI_QUESTION_ID QuestionId;UINT16 NameId;};
struct tdTPM_DELEGATE_KEY_BLOB {TPM_STRUCTURE_TAG tag;TPM_DELEGATE_PUBLIC pub;TPM_DIGEST integrityDigest;TPM_DIGEST pubKeyDigest;UINT32 additionalSize;UINT8 *additionalArea;UINT32 sensitiveSize;UINT8 *sensitiveArea;};
struct _EFI_IP6_TRANSMIT_DATA {EFI_IPv6_ADDRESS DestinationAddress;EFI_IP6_OVERRIDE_DATA *OverrideData;UINT32 ExtHdrsLength;void *ExtHdrs;UINT8 NextHeader;UINT32 DataLength;UINT32 FragmentCount;EFI_IP6_FRAGMENT_DATA FragmentTable[1];};
typedef SHELL_STATUS (*SHELL_COMMAND_HANDLER)(EFI_SHELL_DYNAMIC_COMMAND_PROTOCOL *This, EFI_SYSTEM_TABLE *SystemTable, EFI_SHELL_PARAMETERS_PROTOCOL *ShellParameters, EFI_SHELL_PROTOCOL *Shell);
typedef BOOL (__stdcall *WinNtPeekConsoleInput)(HANDLE ConsoleInput, PINPUT_RECORD Buffer, DWORD Length, LPDWORD NumberOfEventsRead);
typedef BOOL (__stdcall *WinNtReadConsoleInput)(HANDLE ConsoleInput, PINPUT_RECORD Buffer, DWORD Length, LPDWORD NumberOfEventsRead);
struct _EFI_IP6_RECEIVE_DATA {EFI_TIME TimeStamp;EFI_EVENT RecycleSignal;UINT32 HeaderLength;EFI_IP6_HEADER *Header;UINT32 DataLength;UINT32 FragmentCount;EFI_IP6_FRAGMENT_DATA FragmentTable[1];};
struct tdTPM_AUDIT_EVENT_OUT {TPM_STRUCTURE_TAG tag;TPM_COMMAND_CODE ordinal;TPM_DIGEST outputParms;TPM_COUNTER_VALUE auditCount;TPM_RESULT returnCode;};
struct tdTPM_DA_INFO_LIMITED {TPM_STRUCTURE_TAG tag;TPM_DA_STATE state;TPM_DA_ACTION_TYPE actionAtThreshold;UINT32 vendorDataSize;UINT8 *vendorData;};
struct tdTPM_MIGRATE_ASYMKEY {TPM_PAYLOAD_TYPE payload;TPM_SECRET usageAuth;TPM_DIGEST pubDataDigest;UINT32 partPrivKeyLen;UINT8 *partPrivKey;};
struct _EFI_IFR_GUID_BANNER {EFI_IFR_OP_HEADER Header;EFI_GUID Guid;UINT8 ExtendOpCode;EFI_STRING_ID Title;UINT16 LineNumber;UINT8 Alignment;};
struct _VARIABLE_INFO_ENTRY {VARIABLE_INFO_ENTRY *Next;EFI_GUID VendorGuid;CHAR16 *Name;UINT32 Attributes;UINT32 ReadCount;UINT32 WriteCount;UINT32 DeleteCount;UINT32 CacheCount;BOOLEAN Volatile;};
typedef LRESULT (__stdcall *WinNtDefWindowProc)(HWND hWnd, UINT Msg, WPARAM wParam, LPARAM lParam);
typedef UINT32 (*VALIDATE_QUESTION)(FORM_DISPLAY_ENGINE_FORM *Form, FORM_DISPLAY_ENGINE_STATEMENT *Statement, EFI_HII_VALUE *Value, STATEMENT_ERROR_INFO *ErrorInfo);
struct _EFI_IFR_VARSTORE {EFI_IFR_OP_HEADER Header;EFI_GUID Guid;EFI_VARSTORE_ID VarStoreId;UINT16 Size;UINT8 Name[1];};
struct _IP_IO_SEND_ENTRY {LIST_ENTRY Entry;IP_IO *IpIo;void *Context;void *NotifyData;IP_IO_IP_PROTOCOL Ip;NET_BUF *Pkt;IP_IO_IP_COMPLETION_TOKEN SndToken;};
typedef BOOL (__stdcall *WinNtSendMessage)(HWND hWnd, UINT Msg, WPARAM wParam, LPARAM lParam);
struct tdTPM_KEY_PARMS {TPM_ALGORITHM_ID algorithmID;TPM_ENC_SCHEME encScheme;TPM_SIG_SCHEME sigScheme;UINT32 parmSize;UINT8 *parms;};
struct tdTPM_DAA_BLOB {TPM_STRUCTURE_TAG tag;TPM_RESOURCE_TYPE resourceType;UINT8 label[16];TPM_DIGEST blobIntegrity;UINT32 additionalSize;UINT8 *additionalData;UINT32 sensitiveSize;UINT8 *sensitiveData;};
struct _EFI_IFR_REF3 {EFI_IFR_OP_HEADER Header;EFI_IFR_QUESTION_HEADER Question;EFI_FORM_ID FormId;EFI_QUESTION_ID QuestionId;EFI_GUID FormSetId;};
struct _EFI_NETWORK_INTERFACE_IDENTIFIER_PROTOCOL {UINT64 Revision;UINT64 Id;UINT64 ImageAddr;UINT32 ImageSize;CHAR8 StringId[4];UINT8 Type;UINT8 MajorVer;UINT8 MinorVer;BOOLEAN Ipv6Supported;UINT16 IfNum;};
struct _00A5C51788377BE5F8CEE496673821D9 {EFI_HOB_GENERIC_HEADER Header;EFI_GUID Owner;EFI_RESOURCE_TYPE ResourceType;EFI_RESOURCE_ATTRIBUTE_TYPE ResourceAttribute;EFI_PHYSICAL_ADDRESS PhysicalStart;UINT64 ResourceLength;};
struct _05D489AAC0F9BB1887D00026D4310FE7 {UINTN Signature;LIST_ENTRY Link;EFI_DEVICE_PATH_PROTOCOL *DevicePath;CHAR16 *OptionName;UINTN OptionNumber;UINT16 BootCurrent;UINT32 Attribute;CHAR16 *Description;void *LoadOptions;UINT32 LoadOptionsSize;CHAR16 *StatusString;};
struct _12B1457D9A7446589049CD55635FF437 {STRING_REF ChassisManufacturer;STRING_REF ChassisVersion;STRING_REF ChassisSerialNumber;STRING_REF ChassisAssetTag;EFI_MISC_CHASSIS_STATUS ChassisType;EFI_MISC_CHASSIS_STATE ChassisBootupState;EFI_MISC_CHASSIS_STATE ChassisPowerSupplyState;EFI_MISC_CHASSIS_STATE ChassisThermalState;EFI_MISC_CHASSIS_SECURITY_STATE ChassisSecurityState;UINT32 ChassisOemDefined;UINT32 ChassisHeight;UINT32 ChassisNumberPowerCords;UINT32 ChassisElementCount;UINT32 ChassisElementRecordLength;EFI_MISC_ELEMENTS ChassisElements;};
struct _1BE59F2B056A6ABF2DDA9D926A1AE05C {SAL_SEC_HEADER SectionHeader;UINT64 ValidationBits;UINT64 PciBusErrorStatus;UINT16 PciBusErrorType;PCI_BUS_ID PciBusId;UINT32 Reserved;UINT64 PciBusAddress;UINT64 PciBusData;UINT64 PciBusCommand;UINT64 PciBusRequestorId;UINT64 PciBusResponderId;UINT64 PciBusTargetId;UINT8 PciBusOemId[16];};
struct _1E0D073C36FF4EEB406B745BB1E29357 {CHAR16 *VariableName;EFI_GUID *VendorGuid;UINT32 Attributes;UINTN DataSize;void *Data;UINT32 PubKeyIndex;UINT64 MonotonicCount;EFI_TIME *TimeStamp;};
struct _238E6635CBCE7D06BD71AA7F0FB8394A {UINT16 StartId;UINT8 State;UINT8 Reserved;UINT32 Attributes;UINT64 MonotonicCount;EFI_TIME TimeStamp;UINT32 PubKeyIndex;UINT32 NameSize;UINT32 DataSize;EFI_GUID VendorGuid;};
struct _23F89506555E7CF5AAADC8587C0EADC7 {SMBIOS_STRUCTURE Hdr;SMBIOS_TABLE_STRING Socket;UINT8 ProcessorType;UINT8 ProcessorFamily;SMBIOS_TABLE_STRING ProcessorManufacture;PROCESSOR_ID_DATA ProcessorId;SMBIOS_TABLE_STRING ProcessorVersion;PROCESSOR_VOLTAGE Voltage;UINT16 ExternalClock;UINT16 MaxSpeed;UINT16 CurrentSpeed;UINT8 Status;UINT8 ProcessorUpgrade;UINT16 L1CacheHandle;UINT16 L2CacheHandle;UINT16 L3CacheHandle;SMBIOS_TABLE_STRING SerialNumber;SMBIOS_TABLE_STRING AssetTag;SMBIOS_TABLE_STRING PartNumber;UINT8 CoreCount;UINT8 EnabledCoreCount;UINT8 ThreadCount;UINT16 ProcessorCharacteristics;UINT16 ProcessorFamily2;UINT16 CoreCount2;UINT16 EnabledCoreCount2;UINT16 ThreadCount2;};
struct _30FFE48E89C138C7B76B568840ACED38 {EFI_DHCP4_STATE State;EFI_DHCP4_CONFIG_DATA ConfigData;EFI_IPv4_ADDRESS ClientAddress;EFI_MAC_ADDRESS ClientMacAddress;EFI_IPv4_ADDRESS ServerAddress;EFI_IPv4_ADDRESS RouterAddress;EFI_IPv4_ADDRESS SubnetMask;UINT32 LeaseTime;EFI_DHCP4_PACKET *ReplyPacket;};
union _3280120D17039F0C35393F7BCB14168E {EFI_MD5_HASH2 Md5Hash;EFI_SHA1_HASH2 Sha1Hash;EFI_SHA224_HASH2 Sha224Hash;EFI_SHA256_HASH2 Sha256Hash;EFI_SHA384_HASH2 Sha384Hash;EFI_SHA512_HASH2 Sha512Hash;};
struct _34EFBF63E04388C9C3FB9247D26E3A60 {EFI_ACPI_DESCRIPTION_HEADER Header;UINT32 FirmwareCtrl;UINT32 Dsdt;UINT8 Reserved0;UINT8 PreferredPmProfile;UINT16 SciInt;UINT32 SmiCmd;UINT8 AcpiEnable;UINT8 AcpiDisable;UINT8 S4BiosReq;UINT8 PstateCnt;UINT32 Pm1aEvtBlk;UINT32 Pm1bEvtBlk;UINT32 Pm1aCntBlk;UINT32 Pm1bCntBlk;UINT32 Pm2CntBlk;UINT32 PmTmrBlk;UINT32 Gpe0Blk;UINT32 Gpe1Blk;UINT8 Pm1EvtLen;UINT8 Pm1CntLen;UINT8 Pm2CntLen;UINT8 PmTmrLen;UINT8 Gpe0BlkLen;UINT8 Gpe1BlkLen;UINT8 Gpe1Base;UINT8 CstCnt;UINT16 PLvl2Lat;UINT16 PLvl3Lat;UINT16 FlushSize;UINT16 FlushStride;UINT8 DutyOffset;UINT8 DutyWidth;UINT8 DayAlrm;UINT8 MonAlrm;UINT8 Century;UINT16 IaPcBootArch;UINT8 Reserved1;UINT32 Flags;EFI_ACPI_4_0_GENERIC_ADDRESS_STRUCTURE ResetReg;UINT8 ResetValue;UINT8 Reserved2[3];UINT64 XFirmwareCtrl;UINT64 XDsdt;EFI_ACPI_4_0_GENERIC_ADDRESS_STRUCTURE XPm1aEvtBlk;EFI_ACPI_4_0_GENERIC_ADDRESS_STRUCTURE XPm1bEvtBlk;EFI_ACPI_4_0_GENERIC_ADDRESS_STRUCTURE XPm1aCntBlk;EFI_ACPI_4_0_GENERIC_ADDRESS_STRUCTURE XPm1bCntBlk;EFI_ACPI_4_0_GENERIC_ADDRESS_STRUCTURE XPm2CntBlk;EFI_ACPI_4_0_GENERIC_ADDRESS_STRUCTURE XPmTmrBlk;EFI_ACPI_4_0_GENERIC_ADDRESS_STRUCTURE XGpe0Blk;EFI_ACPI_4_0_GENERIC_ADDRESS_STRUCTURE XGpe1Blk;};
struct _39182558A763EA8FE473141BC9A77E7C {EFI_ACPI_DESCRIPTION_HEADER Header;UINT32 FirmwareCtrl;UINT32 Dsdt;UINT8 Reserved0;UINT8 PreferredPmProfile;UINT16 SciInt;UINT32 SmiCmd;UINT8 AcpiEnable;UINT8 AcpiDisable;UINT8 S4BiosReq;UINT8 PstateCnt;UINT32 Pm1aEvtBlk;UINT32 Pm1bEvtBlk;UINT32 Pm1aCntBlk;UINT32 Pm1bCntBlk;UINT32 Pm2CntBlk;UINT32 PmTmrBlk;UINT32 Gpe0Blk;UINT32 Gpe1Blk;UINT8 Pm1EvtLen;UINT8 Pm1CntLen;UINT8 Pm2CntLen;UINT8 PmTmrLen;UINT8 Gpe0BlkLen;UINT8 Gpe1BlkLen;UINT8 Gpe1Base;UINT8 CstCnt;UINT16 PLvl2Lat;UINT16 PLvl3Lat;UINT16 FlushSize;UINT16 FlushStride;UINT8 DutyOffset;UINT8 DutyWidth;UINT8 DayAlrm;UINT8 MonAlrm;UINT8 Century;UINT16 IaPcBootArch;UINT8 Reserved1;UINT32 Flags;EFI_ACPI_5_0_GENERIC_ADDRESS_STRUCTURE ResetReg;UINT8 ResetValue;UINT8 Reserved2[3];UINT64 XFirmwareCtrl;UINT64 XDsdt;EFI_ACPI_5_0_GENERIC_ADDRESS_STRUCTURE XPm1aEvtBlk;EFI_ACPI_5_0_GENERIC_ADDRESS_STRUCTURE XPm1bEvtBlk;EFI_ACPI_5_0_GENERIC_ADDRESS_STRUCTURE XPm1aCntBlk;EFI_ACPI_5_0_GENERIC_ADDRESS_STRUCTURE XPm1bCntBlk;EFI_ACPI_5_0_GENERIC_ADDRESS_STRUCTURE XPm2CntBlk;EFI_ACPI_5_0_GENERIC_ADDRESS_STRUCTURE XPmTmrBlk;EFI_ACPI_5_0_GENERIC_ADDRESS_STRUCTURE XGpe0Blk;EFI_ACPI_5_0_GENERIC_ADDRESS_STRUCTURE XGpe1Blk;EFI_ACPI_5_0_GENERIC_ADDRESS_STRUCTURE SleepControlReg;EFI_ACPI_5_0_GENERIC_ADDRESS_STRUCTURE SleepStatusReg;};
struct _53473F06F9F395079C926B7BB88DD702 {GUID Signature;UINT32 BuildVersion;UINT32 Length;UINT32 UninitDataBaseSize;TABLE_OFFSET LocalTokenNumberTableOffset;TABLE_OFFSET ExMapTableOffset;TABLE_OFFSET GuidTableOffset;TABLE_OFFSET StringTableOffset;TABLE_OFFSET SizeTableOffset;TABLE_OFFSET SkuIdTableOffset;TABLE_OFFSET PcdNameTableOffset;UINT16 LocalTokenCount;UINT16 ExTokenCount;UINT16 GuidTableCount;SKU_ID SystemSkuId;UINT8 Pad;};
struct _54FA71207D19CC6B45BACD432CC2787F {UINT8 ImageIndex;EFI_GUID ImageTypeId;UINT64 ImageId;CHAR16 *ImageIdName;UINT32 Version;CHAR16 *VersionName;UINTN Size;UINT64 AttributesSupported;UINT64 AttributesSetting;UINT64 Compatibilities;UINT32 LowestSupportedImageVersion;UINT32 LastAttemptVersion;UINT32 LastAttemptStatus;UINT64 HardwareInstance;};
struct _5A93820126A648CA4B4D7CC159E8A880 {UINTN Signature;LIST_ENTRY Link;EFI_INPUT_KEY *KeyData;UINT32 Action;UINT16 DefaultId;EFI_STRING HelpString;};
struct _675AC941CA254EBE58EC6BA08A3A4D71 {EFI_ACPI_DESCRIPTION_HEADER Header;UINT32 FirmwareCtrl;UINT32 Dsdt;UINT8 Reserved0;UINT8 PreferredPmProfile;UINT16 SciInt;UINT32 SmiCmd;UINT8 AcpiEnable;UINT8 AcpiDisable;UINT8 S4BiosReq;UINT8 PstateCnt;UINT32 Pm1aEvtBlk;UINT32 Pm1bEvtBlk;UINT32 Pm1aCntBlk;UINT32 Pm1bCntBlk;UINT32 Pm2CntBlk;UINT32 PmTmrBlk;UINT32 Gpe0Blk;UINT32 Gpe1Blk;UINT8 Pm1EvtLen;UINT8 Pm1CntLen;UINT8 Pm2CntLen;UINT8 PmTmrLen;UINT8 Gpe0BlkLen;UINT8 Gpe1BlkLen;UINT8 Gpe1Base;UINT8 CstCnt;UINT16 PLvl2Lat;UINT16 PLvl3Lat;UINT16 FlushSize;UINT16 FlushStride;UINT8 DutyOffset;UINT8 DutyWidth;UINT8 DayAlrm;UINT8 MonAlrm;UINT8 Century;UINT16 IaPcBootArch;UINT8 Reserved1;UINT32 Flags;EFI_ACPI_3_0_GENERIC_ADDRESS_STRUCTURE ResetReg;UINT8 ResetValue;UINT8 Reserved2[3];UINT64 XFirmwareCtrl;UINT64 XDsdt;EFI_ACPI_3_0_GENERIC_ADDRESS_STRUCTURE XPm1aEvtBlk;EFI_ACPI_3_0_GENERIC_ADDRESS_STRUCTURE XPm1bEvtBlk;EFI_ACPI_3_0_GENERIC_ADDRESS_STRUCTURE XPm1aCntBlk;EFI_ACPI_3_0_GENERIC_ADDRESS_STRUCTURE XPm1bCntBlk;EFI_ACPI_3_0_GENERIC_ADDRESS_STRUCTURE XPm2CntBlk;EFI_ACPI_3_0_GENERIC_ADDRESS_STRUCTURE XPmTmrBlk;EFI_ACPI_3_0_GENERIC_ADDRESS_STRUCTURE XGpe0Blk;EFI_ACPI_3_0_GENERIC_ADDRESS_STRUCTURE XGpe1Blk;};
union _6D90CA3A7F9BFC9264A02136A8ABC8EE {EFI_MD5_HASH *Md5Hash;EFI_SHA1_HASH *Sha1Hash;EFI_SHA224_HASH *Sha224Hash;EFI_SHA256_HASH *Sha256Hash;EFI_SHA384_HASH *Sha384Hash;EFI_SHA512_HASH *Sha512Hash;};
struct _6DA5D0F7C89C92C964BFDFB0D4D09CEB {STRING_REF Location;STRING_REF Manufacturer;STRING_REF ManufactureDate;STRING_REF SerialNumber;STRING_REF DeviceName;EFI_MISC_PORTABLE_BATTERY_DEVICE_CHEMISTRY DeviceChemistry;UINT16 DesignCapacity;UINT16 DesignVoltage;STRING_REF SBDSVersionNumber;UINT8 MaximumError;UINT16 SBDSSerialNumber;UINT16 SBDSManufactureDate;STRING_REF SBDSDeviceChemistry;UINT8 DesignCapacityMultiplier;UINT32 OEMSpecific;UINT8 BatteryNumber;BOOLEAN Valid;};
struct _6DE7B3917082FC90BAD75410366F4F48 {EFI_ACPI_DESCRIPTION_HEADER Header;UINT32 FirmwareCtrl;UINT32 Dsdt;UINT8 Reserved0;UINT8 PreferredPmProfile;UINT16 SciInt;UINT32 SmiCmd;UINT8 AcpiEnable;UINT8 AcpiDisable;UINT8 S4BiosReq;UINT8 PstateCnt;UINT32 Pm1aEvtBlk;UINT32 Pm1bEvtBlk;UINT32 Pm1aCntBlk;UINT32 Pm1bCntBlk;UINT32 Pm2CntBlk;UINT32 PmTmrBlk;UINT32 Gpe0Blk;UINT32 Gpe1Blk;UINT8 Pm1EvtLen;UINT8 Pm1CntLen;UINT8 Pm2CntLen;UINT8 PmTmrLen;UINT8 Gpe0BlkLen;UINT8 Gpe1BlkLen;UINT8 Gpe1Base;UINT8 CstCnt;UINT16 PLvl2Lat;UINT16 PLvl3Lat;UINT16 FlushSize;UINT16 FlushStride;UINT8 DutyOffset;UINT8 DutyWidth;UINT8 DayAlrm;UINT8 MonAlrm;UINT8 Century;UINT16 IaPcBootArch;UINT8 Reserved1;UINT32 Flags;EFI_ACPI_2_0_GENERIC_ADDRESS_STRUCTURE ResetReg;UINT8 ResetValue;UINT8 Reserved2[3];UINT64 XFirmwareCtrl;UINT64 XDsdt;EFI_ACPI_2_0_GENERIC_ADDRESS_STRUCTURE XPm1aEvtBlk;EFI_ACPI_2_0_GENERIC_ADDRESS_STRUCTURE XPm1bEvtBlk;EFI_ACPI_2_0_GENERIC_ADDRESS_STRUCTURE XPm1aCntBlk;EFI_ACPI_2_0_GENERIC_ADDRESS_STRUCTURE XPm1bCntBlk;EFI_ACPI_2_0_GENERIC_ADDRESS_STRUCTURE XPm2CntBlk;EFI_ACPI_2_0_GENERIC_ADDRESS_STRUCTURE XPmTmrBlk;EFI_ACPI_2_0_GENERIC_ADDRESS_STRUCTURE XGpe0Blk;EFI_ACPI_2_0_GENERIC_ADDRESS_STRUCTURE XGpe1Blk;};
union _7B8A6F160A252FAE1A70EEA141D54239 {EFI_SYSTEM_CONTEXT_EBC *SystemContextEbc;EFI_SYSTEM_CONTEXT_IA32 *SystemContextIa32;EFI_SYSTEM_CONTEXT_X64 *SystemContextX64;EFI_SYSTEM_CONTEXT_IPF *SystemContextIpf;EFI_SYSTEM_CONTEXT_ARM *SystemContextArm;EFI_SYSTEM_CONTEXT_AARCH64 *SystemContextAArch64;};
struct _7CFE5BD1D71ADD32B795663C2C70F2A7 {UINT32 ApicID;BOOLEAN Enabled;EFI_CPU_DESIGNATION Designation;EFI_MP_HEALTH Health;UINTN PackageNumber;UINTN NumberOfCores;UINTN NumberOfThreads;UINT64 ProcessorPALCompatibilityFlags;UINT64 ProcessorTestMask;};
struct _7D7D58AB9DC53DEC8CA17F3BD9B3A652 {UINT8 Reserved[3];EFI_FLASH_AREA_TYPE AreaType;EFI_GUID AreaTypeGuid;UINT32 NumberOfEntries;EFI_FLASH_SUBAREA_ENTRY Entries[1];UINT32 VolumeId;CHAR16 FilePath[258];UINT32 ActuralSize;UINT32 Offset;};
struct _8754740161C8FE72AF0FA8DD9A08DEA8 {CHAR16 Name[32];UINT8 IfType;UINT32 HwAddressSize;EFI_MAC_ADDRESS HwAddress;EFI_IPv4_ADDRESS StationAddress;EFI_IPv4_ADDRESS SubnetMask;UINT32 RouteTableSize;EFI_IP4_ROUTE_TABLE *RouteTable;};
struct _93AFBAB3DF2401AC2D1BF9FF936BC51A {BOOLEAN IsStarted;UINT32 MaxPacketSize;EFI_IP4_CONFIG_DATA ConfigData;BOOLEAN IsConfigured;UINT32 GroupCount;EFI_IPv4_ADDRESS *GroupTable;UINT32 RouteCount;EFI_IP4_ROUTE_TABLE *RouteTable;UINT32 IcmpTypeCount;EFI_IP4_ICMP_TYPE *IcmpTypeList;};
struct _990147E37745A780E6F9BC0FFF0E7591 {SMBIOS_STRUCTURE Hdr;UINT16 MemoryArrayHandle;UINT16 MemoryErrorInformationHandle;UINT16 TotalWidth;UINT16 DataWidth;UINT16 Size;UINT8 FormFactor;UINT8 DeviceSet;SMBIOS_TABLE_STRING DeviceLocator;SMBIOS_TABLE_STRING BankLocator;UINT8 MemoryType;MEMORY_DEVICE_TYPE_DETAIL TypeDetail;UINT16 Speed;SMBIOS_TABLE_STRING Manufacturer;SMBIOS_TABLE_STRING SerialNumber;SMBIOS_TABLE_STRING AssetTag;SMBIOS_TABLE_STRING PartNumber;UINT8 Attributes;UINT32 ExtendedSize;UINT16 ConfiguredMemoryClockSpeed;UINT16 MinimumVoltage;UINT16 MaximumVoltage;UINT16 ConfiguredVoltage;};
struct _9D1FBE9AA270F62D1110F10C83E964EB {SMBIOS_STRUCTURE Hdr;SMBIOS_TABLE_STRING SlotDesignation;UINT8 SlotType;UINT8 SlotDataBusWidth;UINT8 CurrentUsage;UINT8 SlotLength;UINT16 SlotID;MISC_SLOT_CHARACTERISTICS1 SlotCharacteristics1;MISC_SLOT_CHARACTERISTICS2 SlotCharacteristics2;UINT16 SegmentGroupNum;UINT8 BusNum;UINT8 DevFuncNum;};
struct _9FBD256D3DD09739BCE6303D18E9A305 {EFI_GUID Name;EFI_FFS_INTEGRITY_CHECK IntegrityCheck;EFI_FV_FILETYPE Type;EFI_FFS_FILE_ATTRIBUTES Attributes;UINT8 Size[3];EFI_FFS_FILE_STATE State;};
struct _A116D5E3F3B0927191F67B52BC870E59 {EFI_ACPI_DESCRIPTION_HEADER Header;UINT32 FirmwareCtrl;UINT32 Dsdt;UINT8 Reserved0;UINT8 PreferredPmProfile;UINT16 SciInt;UINT32 SmiCmd;UINT8 AcpiEnable;UINT8 AcpiDisable;UINT8 S4BiosReq;UINT8 PstateCnt;UINT32 Pm1aEvtBlk;UINT32 Pm1bEvtBlk;UINT32 Pm1aCntBlk;UINT32 Pm1bCntBlk;UINT32 Pm2CntBlk;UINT32 PmTmrBlk;UINT32 Gpe0Blk;UINT32 Gpe1Blk;UINT8 Pm1EvtLen;UINT8 Pm1CntLen;UINT8 Pm2CntLen;UINT8 PmTmrLen;UINT8 Gpe0BlkLen;UINT8 Gpe1BlkLen;UINT8 Gpe1Base;UINT8 CstCnt;UINT16 PLvl2Lat;UINT16 PLvl3Lat;UINT16 FlushSize;UINT16 FlushStride;UINT8 DutyOffset;UINT8 DutyWidth;UINT8 DayAlrm;UINT8 MonAlrm;UINT8 Century;UINT16 IaPcBootArch;UINT8 Reserved1;UINT32 Flags;EFI_ACPI_6_0_GENERIC_ADDRESS_STRUCTURE ResetReg;UINT8 ResetValue;UINT16 ArmBootArch;UINT8 MinorVersion;UINT64 XFirmwareCtrl;UINT64 XDsdt;EFI_ACPI_6_0_GENERIC_ADDRESS_STRUCTURE XPm1aEvtBlk;EFI_ACPI_6_0_GENERIC_ADDRESS_STRUCTURE XPm1bEvtBlk;EFI_ACPI_6_0_GENERIC_ADDRESS_STRUCTURE XPm1aCntBlk;EFI_ACPI_6_0_GENERIC_ADDRESS_STRUCTURE XPm1bCntBlk;EFI_ACPI_6_0_GENERIC_ADDRESS_STRUCTURE XPm2CntBlk;EFI_ACPI_6_0_GENERIC_ADDRESS_STRUCTURE XPmTmrBlk;EFI_ACPI_6_0_GENERIC_ADDRESS_STRUCTURE XGpe0Blk;EFI_ACPI_6_0_GENERIC_ADDRESS_STRUCTURE XGpe1Blk;EFI_ACPI_6_0_GENERIC_ADDRESS_STRUCTURE SleepControlReg;EFI_ACPI_6_0_GENERIC_ADDRESS_STRUCTURE SleepStatusReg;UINT64 HypervisorVendorIdentity;};
struct _ABF336183A0B84D1C88AD8EB6D66085E {CHAR16 Name[32];UINT8 IfType;UINT32 HwAddressSize;EFI_MAC_ADDRESS HwAddress;UINT32 AddressInfoCount;EFI_IP6_ADDRESS_INFO *AddressInfo;UINT32 RouteCount;EFI_IP6_ROUTE_TABLE *RouteTable;};
struct _B7581651F071A82BA983F24B2EDABE69 {TPML_PCR_SELECTION pcrSelect;TPM2B_DIGEST pcrDigest;TPMA_LOCALITY locality;TPM_ALG_ID parentNameAlg;TPM2B_NAME parentName;TPM2B_NAME parentQualifiedName;TPM2B_DATA outsideInfo;};
struct _BD293684573ABF5801F8B327D47CE441 {UINT32 SignatureStart;UINT16 Revision;UINT32 SignatureEnd;UINT16 SectionCount;UINT32 ErrorSeverity;UINT32 ValidationBits;UINT32 RecordLength;EFI_ERROR_TIME_STAMP TimeStamp;EFI_GUID PlatformID;EFI_GUID PartitionID;EFI_GUID CreatorID;EFI_GUID NotificationType;UINT64 RecordID;UINT32 Flags;UINT64 PersistenceInfo;UINT8 Resv1[12];};
struct _BED2D6D995ED6B10B59E498D605752D1 {EFI_ACPI_DESCRIPTION_HEADER Header;UINT32 FirmwareCtrl;UINT32 Dsdt;UINT8 Reserved0;UINT8 PreferredPmProfile;UINT16 SciInt;UINT32 SmiCmd;UINT8 AcpiEnable;UINT8 AcpiDisable;UINT8 S4BiosReq;UINT8 PstateCnt;UINT32 Pm1aEvtBlk;UINT32 Pm1bEvtBlk;UINT32 Pm1aCntBlk;UINT32 Pm1bCntBlk;UINT32 Pm2CntBlk;UINT32 PmTmrBlk;UINT32 Gpe0Blk;UINT32 Gpe1Blk;UINT8 Pm1EvtLen;UINT8 Pm1CntLen;UINT8 Pm2CntLen;UINT8 PmTmrLen;UINT8 Gpe0BlkLen;UINT8 Gpe1BlkLen;UINT8 Gpe1Base;UINT8 CstCnt;UINT16 PLvl2Lat;UINT16 PLvl3Lat;UINT16 FlushSize;UINT16 FlushStride;UINT8 DutyOffset;UINT8 DutyWidth;UINT8 DayAlrm;UINT8 MonAlrm;UINT8 Century;UINT16 IaPcBootArch;UINT8 Reserved1;UINT32 Flags;EFI_ACPI_5_1_GENERIC_ADDRESS_STRUCTURE ResetReg;UINT8 ResetValue;UINT16 ArmBootArch;UINT8 MinorVersion;UINT64 XFirmwareCtrl;UINT64 XDsdt;EFI_ACPI_5_1_GENERIC_ADDRESS_STRUCTURE XPm1aEvtBlk;EFI_ACPI_5_1_GENERIC_ADDRESS_STRUCTURE XPm1bEvtBlk;EFI_ACPI_5_1_GENERIC_ADDRESS_STRUCTURE XPm1aCntBlk;EFI_ACPI_5_1_GENERIC_ADDRESS_STRUCTURE XPm1bCntBlk;EFI_ACPI_5_1_GENERIC_ADDRESS_STRUCTURE XPm2CntBlk;EFI_ACPI_5_1_GENERIC_ADDRESS_STRUCTURE XPmTmrBlk;EFI_ACPI_5_1_GENERIC_ADDRESS_STRUCTURE XGpe0Blk;EFI_ACPI_5_1_GENERIC_ADDRESS_STRUCTURE XGpe1Blk;EFI_ACPI_5_1_GENERIC_ADDRESS_STRUCTURE SleepControlReg;EFI_ACPI_5_1_GENERIC_ADDRESS_STRUCTURE SleepStatusReg;};
struct _D0088FB1FCC4339BF6C5684351F5FC66 {TPM_STRUCTURE_TAG tag;TPM_NV_INDEX nvIndex;TPM12_PCR_INFO_SHORT pcrInfoRead;TPM12_PCR_INFO_SHORT pcrInfoWrite;TPM_NV_ATTRIBUTES permission;BOOLEAN bReadSTClear;BOOLEAN bWriteSTClear;BOOLEAN bWriteDefine;UINT32 dataSize;};
struct _DF4487F9FF56DB1070FB86D3C5DEA292 {UINTN Signature;LIST_ENTRY Link;EFI_GUID ProtocolId;CHAR16 *IdString;SHELLENV_DUMP_PROTOCOL_INFO DumpToken;SHELLENV_DUMP_PROTOCOL_INFO DumpInfo;UINTN NoHandles;EFI_HANDLE *Handles;};
struct _E819EBFFCEF5CE9403902F0EE2EF469E {EFI_ATA_STATUS_BLOCK *Asb;EFI_ATA_COMMAND_BLOCK *Acb;UINT64 Timeout;void *InDataBuffer;void *OutDataBuffer;UINT32 InTransferLength;UINT32 OutTransferLength;EFI_ATA_PASS_THRU_CMD_PROTOCOL Protocol;EFI_ATA_PASS_THRU_LENGTH Length;};
struct _ED33D109A02D5772A279DF2D26963171 {SMBIOS_STRUCTURE Hdr;UINT16 TemperatureProbeHandle;MISC_COOLING_DEVICE_TYPE DeviceTypeAndStatus;UINT8 CoolingUnitGroup;UINT32 OEMDefined;UINT16 NominalSpeed;SMBIOS_TABLE_STRING Description;};
struct _EF21D80790C417A35FBBE5271FDCA000 {UINTN DnsServerListCount;EFI_IPv4_ADDRESS *DnsServerList;BOOLEAN UseDefaultSetting;BOOLEAN EnableDnsCache;UINT8 Protocol;EFI_IPv4_ADDRESS StationIp;EFI_IPv4_ADDRESS SubnetMask;UINT16 LocalPort;UINT32 RetryCount;UINT32 RetryInterval;};
struct _F6C017084C31B64B3252FA677EBE0C8C {UINTN Signature;LIST_ENTRY Link;EFI_HII_HANDLE HiiHandle;EFI_GUID FormSetGuid;EFI_FORM_ID FormId;EFI_QUESTION_ID QuestionId;};
struct _F76494BC3AA7438238B279B0883A6598 {STRING_REF BiosVendor;STRING_REF BiosVersion;STRING_REF BiosReleaseDate;EFI_PHYSICAL_ADDRESS BiosStartingAddress;EFI_EXP_BASE2_DATA BiosPhysicalDeviceSize;EFI_MISC_BIOS_CHARACTERISTICS BiosCharacteristics1;EFI_MISC_BIOS_CHARACTERISTICS_EXTENSION BiosCharacteristics2;UINT8 BiosMajorRelease;UINT8 BiosMinorRelease;UINT8 BiosEmbeddedFirmwareMajorRelease;UINT8 BiosEmbeddedFirmwareMinorRelease;};
typedef BOOL (__stdcall *WinNtFillConsoleOutputAttribute)(HANDLE ConsoleOutput, WORD Attribute, DWORD Length, COORD WriteCoord, LPDWORD NumberOfAttrsWritten);
typedef BOOL (__stdcall *WinNtFillConsoleOutputCharacter)(HANDLE ConsoleOutput, TCHAR Character, DWORD Length, COORD WriteCoord, LPDWORD NumberOfCharsWritten);
struct _TREE_BOOT_SERVICE_CAPABILITY {UINT8 Size;TREE_VERSION StructureVersion;TREE_VERSION ProtocolVersion;UINT32 HashAlgorithmBitmap;TREE_EVENT_LOG_BITMAP SupportedEventLogs;BOOLEAN TrEEPresentFlag;UINT16 MaxCommandSize;UINT16 MaxResponseSize;UINT32 ManufacturerID;};
struct _EFI_TCG_SERVER_ACPI_TABLE {EFI_ACPI_DESCRIPTION_HEADER Header;UINT16 PlatformClass;UINT16 Reserved0;UINT64 Laml;UINT64 Lasa;UINT16 SpecRev;UINT8 DeviceFlags;UINT8 InterruptFlags;UINT8 Gpe;UINT8 Reserved1[3];UINT32 GlobalSysInt;EFI_ACPI_3_0_GENERIC_ADDRESS_STRUCTURE BaseAddress;UINT32 Reserved2;EFI_ACPI_3_0_GENERIC_ADDRESS_STRUCTURE ConfigAddress;UINT8 PciSegNum;UINT8 PciBusNum;UINT8 PciDevNum;UINT8 PciFuncNum;};
struct _EFI_IPSEC_PROCESS_POLICY {BOOLEAN ExtSeqNum;BOOLEAN SeqOverflow;BOOLEAN FragCheck;EFI_IPSEC_SA_LIFETIME SaLifetime;EFI_IPSEC_MODE Mode;EFI_IPSEC_TUNNEL_OPTION *TunnelOption;EFI_IPSEC_PROTOCOL_TYPE Proto;UINT8 AuthAlgoId;UINT8 EncAlgoId;};
struct tdTPM_TRANSPORT_INTERNAL {TPM_STRUCTURE_TAG tag;TPM_AUTHDATA authData;TPM_TRANSPORT_PUBLIC transPublic;TPM_TRANSHANDLE transHandle;TPM_NONCE transNonceEven;TPM_DIGEST transDigest;};
struct _EFI_IFR_GUID_OPTIONKEY {EFI_IFR_OP_HEADER Header;EFI_GUID Guid;UINT8 ExtendOpCode;EFI_QUESTION_ID QuestionId;EFI_IFR_TYPE_VALUE OptionValue;UINT16 KeyValue;};
struct _EFI_IFR_VARSTORE_EFI {EFI_IFR_OP_HEADER Header;EFI_VARSTORE_ID VarStoreId;EFI_GUID Guid;UINT32 Attributes;UINT16 Size;UINT8 Name[1];};
struct tdTPM_DELEGATE_PUBLIC {TPM_STRUCTURE_TAG tag;TPM_DELEGATE_LABEL label;TPM_PCR_INFO_SHORT pcrInfo;TPM_DELEGATIONS permissions;TPM_FAMILY_ID familyID;TPM_FAMILY_VERIFICATION verificationCount;};
typedef BOOL (__stdcall *WinNtDeviceIoControl)(HANDLE DeviceHandle, DWORD IoControlCode, LPVOID InBuffer, DWORD InBufferSize, LPVOID OutBuffer, DWORD OutBufferSize, LPDWORD BytesReturned, LPOVERLAPPED Overlapped);
struct tdTPM_NV_DATA_PUBLIC {TPM_STRUCTURE_TAG tag;TPM_NV_INDEX nvIndex;TPM_PCR_INFO_SHORT pcrInfoRead;TPM_PCR_INFO_SHORT pcrInfoWrite;TPM_NV_ATTRIBUTES permission;BOOLEAN bReadSTClear;BOOLEAN bWriteSTClear;BOOLEAN bWriteDefine;UINT32 dataSize;};
struct tdTPM_CONTEXT_BLOB {TPM_STRUCTURE_TAG tag;TPM_RESOURCE_TYPE resourceType;TPM_HANDLE handle;UINT8 label[16];UINT32 contextCount;TPM_DIGEST integrityDigest;UINT32 additionalSize;UINT8 *additionalData;UINT32 sensitiveSize;UINT8 *sensitiveData;};
struct tdTPM_STCLEAR_DATA {TPM_STRUCTURE_TAG tag;TPM_NONCE contextNonceKey;TPM_COUNT_ID countID;UINT32 ownerReference;BOOLEAN disableResetLock;TPM_PCRVALUE PCR[16];UINT32 deferredPhysicalPresence;};
typedef HANDLE (__stdcall *WinNtCreateThread)(LPSECURITY_ATTRIBUTES lpThreadAttributes, DWORD dwStackSize, LPTHREAD_START_ROUTINE lpStartAddress, LPVOID lpParameter, DWORD dwCreationFlags, LPDWORD lpThreadId);
struct tdTPM_SEALED_DATA {TPM_PAYLOAD_TYPE payload;TPM_SECRET authData;TPM_NONCE tpmProof;TPM_DIGEST storedDigest;UINT32 dataSize;UINT8 *data;};
typedef EFI_PXE_BASE_CODE_CALLBACK_STATUS (*EFI_PXE_CALLBACK)(EFI_PXE_BASE_CODE_CALLBACK_PROTOCOL *This, EFI_PXE_BASE_CODE_FUNCTION Function, BOOLEAN Received, UINT32 PacketLen, EFI_PXE_BASE_CODE_PACKET *Packet);
typedef BOOL (__stdcall *WinNtWriteFile)(HANDLE FileHandle, LPCVOID Buffer, DWORD NumberOfBytesToWrite, LPDWORD NumberOfBytesWritten, LPOVERLAPPED Overlapped);
typedef BOOL (__stdcall *WinNtReadFile)(HANDLE FileHandle, LPVOID Buffer, DWORD NumberOfBytesToRead, LPDWORD NumberOfBytesRead, LPOVERLAPPED Overlapped);
struct _EFI_IFR_REF4 {EFI_IFR_OP_HEADER Header;EFI_IFR_QUESTION_HEADER Question;EFI_FORM_ID FormId;EFI_QUESTION_ID QuestionId;EFI_GUID FormSetId;EFI_STRING_ID DevicePath;};
struct tdTPM_DA_INFO {TPM_STRUCTURE_TAG tag;TPM_DA_STATE state;UINT16 currentCount;UINT16 thresholdCount;TPM_DA_ACTION_TYPE actionAtThreshold;UINT32 actionDependValue;UINT32 vendorDataSize;UINT8 *vendorData;};
struct tdEFI_TCG2_BOOT_SERVICE_CAPABILITY {UINT8 Size;EFI_TCG2_VERSION StructureVersion;EFI_TCG2_VERSION ProtocolVersion;EFI_TCG2_EVENT_ALGORITHM_BITMAP HashAlgorithmBitmap;EFI_TCG2_EVENT_LOG_BITMAP SupportedEventLogs;BOOLEAN TPMPresentFlag;UINT16 MaxCommandSize;UINT16 MaxResponseSize;UINT32 ManufacturerID;UINT32 NumberOfPCRBanks;EFI_TCG2_EVENT_ALGORITHM_BITMAP ActivePcrBanks;};
struct _27AE6DAC312C1772F7F4AB500994EB63 {EFI_GUID Name;EFI_FFS_INTEGRITY_CHECK IntegrityCheck;EFI_FV_FILETYPE Type;EFI_FFS_FILE_ATTRIBUTES Attributes;UINT8 Size[3];EFI_FFS_FILE_STATE State;UINT64 ExtendedSize;};
union _2A0E6EB8B456FC25AA1F0F925DEB4107 {UINT16 Data16[6];ATAPI_TEST_UNIT_READY_CMD TestUnitReady;ATAPI_READ10_CMD Read10;ATAPI_REQUEST_SENSE_CMD RequestSence;ATAPI_INQUIRY_CMD Inquiry;ATAPI_MODE_SENSE_CMD ModeSense;ATAPI_READ_FORMAT_CAP_CMD ReadFormatCapacity;};
struct _2DF7380EAF36015AF84A472A3B0FBE42 {EFI_HANDLE ImageHandle;EFI_LOADED_IMAGE_PROTOCOL *Info;CHAR16 **Argv;UINTN Argc;CHAR16 **RedirArgv;UINTN RedirArgc;EFI_FILE_PROTOCOL *StdIn;EFI_FILE_PROTOCOL *StdOut;EFI_FILE_PROTOCOL *StdErr;EFI_SHELL_ARG_INFO *ArgInfo;BOOLEAN EchoOn;};
struct _3AE7F9F006A8FACAD1D4B79518828FB5 {EFI_80211_MAC_ADDRESS BSSId;UINT16 CapabilityInfo;UINT32 FailureTimeout;UINT32 ListenInterval;EFI_80211_ELEMENT_SUPP_CHANNEL *Channels;EFI_80211_ELEMENT_RSN RSN;EFI_80211_ELEMENT_EXT_CAP *ExtCapElement;UINT8 *VendorSpecificInfo;};
union _6BC81C86F5ED2B6C7BBC43FC80963407 {TPMS_SCHEME_RSASSA rsassa;TPMS_SCHEME_RSAPSS rsapss;TPMS_SCHEME_ECDSA ecdsa;TPMS_SCHEME_ECDAA ecdaa;TPMS_SCHEME_ECSCHNORR ecSchnorr;TPMS_SCHEME_HMAC hmac;TPMS_SCHEME_SIGHASH any;};
struct _76721202F8FDDAD709DCCB139B848641 {MEMORY_PROFILE_COMMON_HEADER Header;PHYSICAL_ADDRESS CallerAddress;UINT32 SequenceId;UINT8 Reserved[4];MEMORY_PROFILE_ACTION Action;EFI_MEMORY_TYPE MemoryType;PHYSICAL_ADDRESS Buffer;UINT64 Size;};
union _9A02540346A735F815445FCE0D2E77D0 {TPMS_CERTIFY_INFO certify;TPMS_CREATION_INFO creation;TPMS_QUOTE_INFO quote;TPMS_COMMAND_AUDIT_INFO commandAudit;TPMS_SESSION_AUDIT_INFO sessionAudit;TPMS_TIME_ATTEST_INFO time;TPMS_NV_CERTIFY_INFO nv;};
struct _A25CEFB61EBCE556C47BA014D59BA377 {UINTN Signature;LIST_ENTRY Link;EFI_QUESTION_ID QuestionId;EFI_FORM_ID FormId;EFI_GUID FormSetGuid;EFI_HII_HANDLE HiiHandle;UINT32 Attribute;};
union _A41B3C68B782CC6B04DA902C88EF54D2 {TPMS_SCHEME_RSASSA rsassa;TPMS_SCHEME_RSAPSS rsapss;TPMS_SCHEME_OAEP oaep;TPMS_SCHEME_ECDSA ecdsa;TPMS_SCHEME_ECDAA ecdaa;TPMS_SCHEME_ECSCHNORR ecSchnorr;TPMS_SCHEME_SIGHASH anySig;};
struct _F2A23F357CAE2D69B270DE52322297E3 {UINT8 ZeroVector[16];EFI_GUID FileSystemGuid;UINT64 FvLength;UINT32 Signature;EFI_FVB_ATTRIBUTES_2 Attributes;UINT16 HeaderLength;UINT16 Checksum;UINT16 ExtHeaderOffset;UINT8 Reserved[1];UINT8 Revision;EFI_FV_BLOCK_MAP_ENTRY BlockMap[1];};
struct _EFI_UNICODE_COLLATION_PROTOCOL {EFI_UNICODE_COLLATION_STRICOLL StriColl;EFI_UNICODE_COLLATION_METAIMATCH MetaiMatch;EFI_UNICODE_COLLATION_STRLWR StrLwr;EFI_UNICODE_COLLATION_STRUPR StrUpr;EFI_UNICODE_COLLATION_FATTOSTR FatToStr;EFI_UNICODE_COLLATION_STRTOFAT StrToFat;CHAR8 *SupportedLanguages;};
typedef HWND (__stdcall *WinNtCreateWindowEx)(DWORD dwExStyle, LPCTSTR lpClassName, LPCTSTR lpWindowName, DWORD dwStyle, INT32 x, INT32 y, INT32 nWidth, INT32 nHeight, HWND hWndParent, HMENU hMenu, HINSTANCE hInstance, LPVOID *lpParam);
struct _EFI_IPSEC_SPD_DATA {UINT8 Name[128];UINT32 PackageFlag;EFI_IPSEC_TRAFFIC_DIR TrafficDirection;EFI_IPSEC_ACTION Action;EFI_IPSEC_PROCESS_POLICY *ProcessingPolicy;UINTN SaIdCount;EFI_IPSEC_SA_ID SaId[1];};
union _123E07857B1D3AADB4E61F24EB33B88D {TPML_ALG_PROPERTY algorithms;TPML_HANDLE handles;TPML_CCA command;TPML_CC ppCommands;TPML_CC auditCommands;TPML_PCR_SELECTION assignedPCR;TPML_TAGGED_TPM_PROPERTY tpmProperties;TPML_TAGGED_PCR_PROPERTY pcrProperties;TPML_ECC_CURVE eccCurves;};
union _128168933DC57D6D560051B3DFD63BA3 {UINT16 OpCode;EFI_MTFTP4_REQ_HEADER Rrq;EFI_MTFTP4_REQ_HEADER Wrq;EFI_MTFTP4_OACK_HEADER Oack;EFI_MTFTP4_DATA_HEADER Data;EFI_MTFTP4_ACK_HEADER Ack;EFI_MTFTP4_DATA8_HEADER Data8;EFI_MTFTP4_ACK8_HEADER Ack8;EFI_MTFTP4_ERROR_HEADER Error;};
struct _16E76D9A60CF6DD7C7D18F88A3A8FBFA {MEMORY_PROFILE_COMMON_HEADER Header;EFI_GUID FileName;PHYSICAL_ADDRESS ImageBase;UINT64 ImageSize;PHYSICAL_ADDRESS EntryPoint;UINT16 ImageSubsystem;EFI_FV_FILETYPE FileType;UINT8 Reserved[1];UINT32 AllocRecordCount;UINT64 CurrentUsage;UINT64 PeakUsage;UINT64 CurrentUsageByType[17];UINT64 PeakUsageByType[17];};
struct _38CE00742C32576C28D159A4B8278F80 {EFI_DEVICE_PATH_UTILS_GET_DEVICE_PATH_SIZE GetDevicePathSize;EFI_DEVICE_PATH_UTILS_DUP_DEVICE_PATH DuplicateDevicePath;EFI_DEVICE_PATH_UTILS_APPEND_PATH AppendDevicePath;EFI_DEVICE_PATH_UTILS_APPEND_NODE AppendDeviceNode;EFI_DEVICE_PATH_UTILS_APPEND_INSTANCE AppendDevicePathInstance;EFI_DEVICE_PATH_UTILS_GET_NEXT_INSTANCE GetNextDevicePathInstance;EFI_DEVICE_PATH_UTILS_IS_MULTI_INSTANCE IsDevicePathMultiInstance;EFI_DEVICE_PATH_UTILS_CREATE_NODE CreateDeviceNode;};
struct _7013F136B8763F60FE72FA74A020DEAE {VM_REGISTER Gpr[8];UINT64 Flags;VMIP Ip;UINTN LastException;EXCEPTION_FLAGS ExceptionFlags;UINT32 StopFlags;UINT32 CompilerVersion;UINTN HighStackBottom;UINTN LowStackTop;UINT64 StackRetAddr;UINTN *StackMagicPtr;EFI_HANDLE ImageHandle;EFI_SYSTEM_TABLE *SystemTable;UINTN LastAddrConverted;UINTN LastAddrConvertedValue;void *FramePtr;void *EntryPoint;UINTN ImageBase;void *StackPool;void *StackTop;};
struct _A8C829FBA1D0FC1A299CE48B21970582 {EFI_MEMORY_ERROR_DETECT_METHOD_TYPE ErrorDetectingMethod;EFI_MEMORY_ERROR_CORRECT_CAPABILITY ErrorCorrectingCapability;EFI_MEMORY_SUPPORT_INTERLEAVE_TYPE MemorySupportedInterleave;EFI_MEMORY_SUPPORT_INTERLEAVE_TYPE MemoryCurrentInterleave;UINT8 MaxMemoryModuleSize;EFI_MEMORY_SPEED_TYPE MemorySpeedType;EFI_MEMORY_SUPPORTED_TYPE MemorySupportedType;EFI_MEMORY_MODULE_VOLTAGE_TYPE MemoryModuleVoltage;UINT8 NumberofMemorySlot;EFI_MEMORY_ERROR_CORRECT_CAPABILITY EnabledCorrectingCapability;EFI_INTER_LINK_DATA MemoryModuleConfig[1];};
struct _AAADB9BA31A8B1F7AE5F32D582AF809F {STRING_REF SlotDesignation;EFI_MISC_SLOT_TYPE SlotType;EFI_MISC_SLOT_DATA_BUS_WIDTH SlotDataBusWidth;EFI_MISC_SLOT_USAGE SlotUsage;EFI_MISC_SLOT_LENGTH SlotLength;UINT16 SlotId;EFI_MISC_SLOT_CHARACTERISTICS SlotCharacteristics;EFI_DEVICE_PATH_PROTOCOL SlotDevicePath;};
struct _AC109833D694E6F23A8B22EE40DF486D {EFI_80211_BSS_TYPE BSSType;EFI_80211_MAC_ADDRESS BSSId;UINT8 SSIdLen;UINT8 *SSId;BOOLEAN PassiveMode;UINT32 ProbeDelay;UINT32 *ChannelList;UINT32 MinChannelTime;UINT32 MaxChannelTime;EFI_80211_ELEMENT_REQ *RequestInformation;EFI_80211_ELEMENT_SSID *SSIDList;EFI_80211_ACC_NET_TYPE AccessNetworkType;UINT8 *VendorSpecificInfo;};
struct _B60217F40C2AC1A978E0A5285A5747F3 {EFI_MEMORY_ERROR_DETECT_METHOD_TYPE ErrorDetectingMethod;EFI_MEMORY_ERROR_CORRECT_CAPABILITY ErrorCorrectingCapability;EFI_MEMORY_SUPPORT_INTERLEAVE_TYPE MemorySupportedInterleave;EFI_MEMORY_SUPPORT_INTERLEAVE_TYPE MemoryCurrentInterleave;UINT8 MaxMemoryModuleSize;EFI_MEMORY_SPEED_TYPE MemorySpeedType;EFI_MEMORY_SUPPORTED_TYPE MemorySupportedType;EFI_MEMORY_MODULE_VOLTAGE_TYPE MemoryModuleVoltage;UINT8 NumberofMemorySlot;EFI_MEMORY_ERROR_CORRECT_CAPABILITY EnabledCorrectingCapability;UINT16 *MemoryModuleConfigHandles;};
struct _C41080AFCE16CDA5A4F1A1DBB87DA081 {UINT8 TcpVersion;EFI_HANDLE Image;EFI_HANDLE Controller;EFI_HANDLE Handle;TCP_IO_PROTOCOL Tcp;TCP_IO_PROTOCOL NewTcp;TCP_IO_CONNECTION_TOKEN ConnToken;TCP_IO_IO_TOKEN TxToken;TCP_IO_IO_TOKEN RxToken;TCP_IO_CLOSE_TOKEN CloseToken;TCP_IO_LISTEN_TOKEN ListenToken;BOOLEAN IsConnDone;BOOLEAN IsTxDone;BOOLEAN IsRxDone;BOOLEAN IsCloseDone;BOOLEAN IsListenDone;};
union _CFED43B28AC7585DEFF643418DE0D8FB {UINT16 OpCode;EFI_MTFTP6_REQ_HEADER Rrq;EFI_MTFTP6_REQ_HEADER Wrq;EFI_MTFTP6_OACK_HEADER Oack;EFI_MTFTP6_DATA_HEADER Data;EFI_MTFTP6_ACK_HEADER Ack;EFI_MTFTP6_DATA8_HEADER Data8;EFI_MTFTP6_ACK8_HEADER Ack8;EFI_MTFTP6_ERROR_HEADER Error;};
struct _EE2480321051546AA699FCC4B16FD164 {EFI_80211_MAC_ADDRESS BSSId;UINT8 *SSId;UINT8 SSIdLen;EFI_80211_BSS_TYPE BSSType;UINT16 BeaconPeriod;UINT64 Timestamp;UINT16 CapabilityInfo;UINT8 *BSSBasicRateSet;UINT8 *OperationalRateSet;EFI_80211_ELEMENT_COUNTRY *Country;EFI_80211_ELEMENT_RSN RSN;UINT8 RSSI;UINT8 RCPIMeasurement;UINT8 RSNIMeasurement;UINT8 *RequestedElements;UINT8 *BSSMembershipSelectorSet;EFI_80211_ELEMENT_EXT_CAP *ExtCapElement;};
struct _FDD4725E56523ABD335FF2140BAFF3CA {BOOLEAN IsStarted;UINT32 MaxPacketSize;EFI_IP6_CONFIG_DATA ConfigData;BOOLEAN IsConfigured;UINT32 AddressCount;EFI_IP6_ADDRESS_INFO *AddressList;UINT32 GroupCount;EFI_IPv6_ADDRESS *GroupTable;UINT32 RouteCount;EFI_IP6_ROUTE_TABLE *RouteTable;UINT32 NeighborCount;EFI_IP6_NEIGHBOR_CACHE *NeighborCache;UINT32 PrefixCount;EFI_IP6_ADDRESS_INFO *PrefixTable;UINT32 IcmpTypeCount;EFI_IP6_ICMP_TYPE *IcmpTypeList;};
struct _EFI_IPSEC_SA_DATA {EFI_IPSEC_MODE Mode;UINT64 SNCount;UINT8 AntiReplayWindows;EFI_IPSEC_ALGO_INFO AlgoInfo;EFI_IPSEC_SA_LIFETIME SaLifetime;UINT32 PathMTU;EFI_IPSEC_SPD_SELECTOR *SpdSelector;BOOLEAN ManualSet;};
struct _IP_IO_IP_INFO {EFI_IP_ADDRESS Addr;IP_IO_IP_MASK PreMask;LIST_ENTRY Entry;EFI_HANDLE ChildHandle;IP_IO_IP_PROTOCOL Ip;IP_IO_IP_COMPLETION_TOKEN DummyRcvToken;INTN RefCnt;UINT8 IpVersion;};
struct tdTPM_KEY {TPM_STRUCT_VER ver;TPM_KEY_USAGE keyUsage;TPM_KEY_FLAGS keyFlags;TPM_AUTH_DATA_USAGE authDataUsage;TPM_KEY_PARMS algorithmParms;UINT32 PCRInfoSize;UINT8 *PCRInfo;TPM_STORE_PUBKEY pubKey;UINT32 encDataSize;UINT8 *encData;};
union _41EAB8B81A3EA20191426CA85126EC84 {SAL_RECORD_HEADER *RecordHeader;SAL_PROCESSOR_ERROR_RECORD *SalProcessorRecord;SAL_PCI_BUS_ERROR_RECORD *SalPciBusRecord;SAL_PCI_COMPONENT_ERROR_RECORD *SalPciComponentRecord;SAL_SEL_DEVICE_ERROR_RECORD *ImpiRecord;SAL_SMBIOS_DEVICE_ERROR_RECORD *SmbiosRecord;SAL_PLATFORM_SPECIFIC_ERROR_RECORD *PlatformRecord;SAL_MEMORY_ERROR_RECORD *MemoryRecord;UINT8 *Raw;};
union _4EA06DB75466BFF2377E9F8190FC5FC8 {UINT8 u8;UINT16 u16;UINT32 u32;UINT64 u64;BOOLEAN b;EFI_HII_TIME time;EFI_HII_DATE date;EFI_STRING_ID string;EFI_HII_REF ref;};
struct _EA7F40BFB8C559DD1B04E9AC3E704430 {UINT32 Signature;INTN RefCnt;LIST_ENTRY List;NET_IP_HEAD Ip;TCP_HEAD *Tcp;EFI_UDP_HEADER *Udp;UINT8 ProtoData[64];NET_VECTOR *Vector;UINT32 BlockOpNum;UINT32 TotalSize;NET_BLOCK_OP BlockOp[1];};
union _EFI_MISC_PORT_DEVICE_PATH {USB_PORT_DEVICE_PATH UsbDevicePath;IDE_DEVICE_PATH IdeDevicePath;RMC_CONN_DEVICE_PATH RmcConnDevicePath;RIDE_DEVICE_PATH RideDevicePath;GB_NIC_DEVICE_PATH GbNicDevicePath;PS2_CONN_DEVICE_PATH Ps2ConnDevicePath;SERIAL_CONN_DEVICE_PATH SerialConnDevicePath;PARALLEL_CONN_DEVICE_PATH ParallelConnDevicePath;FLOOPY_CONN_DEVICE_PATH FloppyConnDevicePath;};
struct _EFI_IPSEC_SA_DATA2 {EFI_IPSEC_MODE Mode;UINT64 SNCount;UINT8 AntiReplayWindows;EFI_IPSEC_ALGO_INFO AlgoInfo;EFI_IPSEC_SA_LIFETIME SaLifetime;UINT32 PathMTU;EFI_IPSEC_SPD_SELECTOR *SpdSelector;BOOLEAN ManualSet;EFI_IP_ADDRESS TunnelSourceAddress;EFI_IP_ADDRESS TunnelDestinationAddress;};
struct tdTPM_KEY12 {TPM_STRUCTURE_TAG tag;UINT16 fill;TPM_KEY_USAGE keyUsage;TPM_KEY_FLAGS keyFlags;TPM_AUTH_DATA_USAGE authDataUsage;TPM_KEY_PARMS algorithmParms;UINT32 PCRInfoSize;UINT8 *PCRInfo;TPM_STORE_PUBKEY pubKey;UINT32 encDataSize;UINT8 *encData;};
struct _UDP_IO {UINT32 Signature;LIST_ENTRY Link;INTN RefCnt;UINT8 UdpVersion;EFI_HANDLE Controller;EFI_HANDLE Image;EFI_HANDLE UdpHandle;EFI_SIMPLE_NETWORK_MODE SnpMode;LIST_ENTRY SentDatagram;UDP_RX_TOKEN *RecvRequest;union _UDP_IO___32819A293148F95F3B4A29C7F42325D3 Protocol;union _UDP_IO___B47D131A600585656086C9588CC190F1 Config;};
struct _3B5F65496624BA01FACEE483228DAA16 {STRING_REF MemoryDeviceLocator;STRING_REF MemoryBankLocator;STRING_REF MemoryManufacturer;STRING_REF MemorySerialNumber;STRING_REF MemoryAssetTag;STRING_REF MemoryPartNumber;EFI_INTER_LINK_DATA MemoryArrayLink;EFI_INTER_LINK_DATA MemorySubArrayLink;UINT16 MemoryTotalWidth;UINT16 MemoryDataWidth;EFI_EXP_BASE2_DATA MemoryDeviceSize;EFI_MEMORY_FORM_FACTOR MemoryFormFactor;UINT8 MemoryDeviceSet;EFI_MEMORY_ARRAY_TYPE MemoryType;EFI_MEMORY_TYPE_DETAIL MemoryTypeDetail;EFI_EXP_BASE10_DATA MemorySpeed;EFI_MEMORY_STATE MemoryState;};
struct _9EA7D7CA7C4015174F893B7D167DF337 {EFI_TABLE_HEADER Hdr;CHAR16 *FirmwareVendor;UINT32 FirmwareRevision;EFI_HANDLE ConsoleInHandle;EFI_SIMPLE_TEXT_INPUT_PROTOCOL *ConIn;EFI_HANDLE ConsoleOutHandle;EFI_SIMPLE_TEXT_OUTPUT_PROTOCOL *ConOut;EFI_HANDLE StandardErrorHandle;EFI_SIMPLE_TEXT_OUTPUT_PROTOCOL *StdErr;EFI_RUNTIME_SERVICES *RuntimeServices;EFI_BOOT_SERVICES *BootServices;UINTN NumberOfTableEntries;EFI_CONFIGURATION_TABLE *ConfigurationTable;};
struct _DE10C1C470E2CD0C71AFA76792F18187 {BOOLEAN Started;BOOLEAN Ipv6Available;BOOLEAN Ipv6Supported;BOOLEAN UsingIpv6;BOOLEAN BisSupported;BOOLEAN BisDetected;BOOLEAN AutoArp;BOOLEAN SendGUID;BOOLEAN DhcpDiscoverValid;BOOLEAN DhcpAckReceived;BOOLEAN ProxyOfferReceived;BOOLEAN PxeDiscoverValid;BOOLEAN PxeReplyReceived;BOOLEAN PxeBisReplyReceived;BOOLEAN IcmpErrorReceived;BOOLEAN TftpErrorReceived;BOOLEAN MakeCallbacks;UINT8 TTL;UINT8 ToS;EFI_IP_ADDRESS StationIp;EFI_IP_ADDRESS SubnetMask;EFI_PXE_BASE_CODE_PACKET DhcpDiscover;EFI_PXE_BASE_CODE_PACKET DhcpAck;EFI_PXE_BASE_CODE_PACKET ProxyOffer;EFI_PXE_BASE_CODE_PACKET PxeDiscover;EFI_PXE_BASE_CODE_PACKET PxeReply;EFI_PXE_BASE_CODE_PACKET PxeBisReply;EFI_PXE_BASE_CODE_IP_FILTER IpFilter;UINT32 ArpCacheEntries;EFI_PXE_BASE_CODE_ARP_ENTRY ArpCache[8];UINT32 RouteTableEntries;EFI_PXE_BASE_CODE_ROUTE_ENTRY RouteTable[8];EFI_PXE_BASE_CODE_ICMP_ERROR IcmpError;EFI_PXE_BASE_CODE_TFTP_ERROR TftpError;};
union _EFI_MEMORY_SUBCLASS_RECORDS {EFI_MEMORY_SIZE_DATA SizeData;EFI_MEMORY_ARRAY_LOCATION_DATA ArrayLocationData;EFI_MEMORY_ARRAY_LINK_DATA ArrayLink;EFI_MEMORY_ARRAY_START_ADDRESS_DATA ArrayStartAddress;EFI_MEMORY_DEVICE_START_ADDRESS_DATA DeviceStartAddress;EFI_MEMORY_CHANNEL_TYPE_DATA ChannelTypeData;EFI_MEMORY_CHANNEL_DEVICE_DATA ChannelDeviceData;EFI_MEMORY_CONTROLLER_INFORMATION MemoryControllerInfo;EFI_MEMORY_32BIT_ERROR_INFORMATION Memory32bitErrorInfo;EFI_MEMORY_64BIT_ERROR_INFORMATION Memory64bitErrorInfo;};
struct tdTPM_CERTIFY_INFO {TPM_STRUCT_VER version;TPM_KEY_USAGE keyUsage;TPM_KEY_FLAGS keyFlags;TPM_AUTH_DATA_USAGE authDataUsage;TPM_KEY_PARMS algorithmParms;TPM_DIGEST pubkeyDigest;TPM_NONCE data;BOOLEAN parentPCRStatus;UINT32 PCRInfoSize;UINT8 *PCRInfo;};
struct tdTPM_CERTIFY_INFO2 {TPM_STRUCTURE_TAG tag;UINT8 fill;TPM_PAYLOAD_TYPE payloadType;TPM_KEY_USAGE keyUsage;TPM_KEY_FLAGS keyFlags;TPM_AUTH_DATA_USAGE authDataUsage;TPM_KEY_PARMS algorithmParms;TPM_DIGEST pubkeyDigest;TPM_NONCE data;BOOLEAN parentPCRStatus;UINT32 PCRInfoSize;UINT8 *PCRInfo;UINT32 migrationAuthoritySize;UINT8 *migrationAuthority;};
struct stat {dev_t st_dev;ino_t st_ino;mode_t st_mode;nlink_t st_nlink;uid_t st_uid;gid_t st_gid;dev_t st_rdev;time_t st_atime;int st_atimensec;time_t st_mtime;int st_mtimensec;time_t st_ctime;int st_ctimensec;off_t st_size;INT64 st_blocks;UINT32 st_blksize;UINT32 st_flags;UINT32 st_gen;INT32 st_lspare;INT64 st_qspare[2];};
union _3A77E8071C6D2AEAA192B14C13365630 {EFI_HOB_GENERIC_HEADER *Header;EFI_HOB_HANDOFF_INFO_TABLE *HandoffInformationTable;EFI_HOB_MEMORY_ALLOCATION *MemoryAllocation;EFI_HOB_MEMORY_ALLOCATION_BSP_STORE *MemoryAllocationBspStore;EFI_HOB_MEMORY_ALLOCATION_STACK *MemoryAllocationStack;EFI_HOB_MEMORY_ALLOCATION_MODULE *MemoryAllocationModule;EFI_HOB_RESOURCE_DESCRIPTOR *ResourceDescriptor;EFI_HOB_GUID_TYPE *Guid;EFI_HOB_FIRMWARE_VOLUME *FirmwareVolume;EFI_HOB_FIRMWARE_VOLUME2 *FirmwareVolume2;EFI_HOB_CPU *Cpu;EFI_HOB_MEMORY_POOL *Pool;EFI_HOB_UEFI_CAPSULE *Capsule;UINT8 *Raw;};
struct _FORM_DISPLAY_ENGINE_FORM {UINTN Signature;UINTN Version;LIST_ENTRY StatementListHead;LIST_ENTRY StatementListOSF;EFI_SCREEN_DESCRIPTOR *ScreenDimensions;EFI_GUID FormSetGuid;EFI_HII_HANDLE HiiHandle;UINT16 FormId;EFI_STRING_ID FormTitle;UINT32 Attribute;BOOLEAN SettingChangedFlag;FORM_DISPLAY_ENGINE_STATEMENT *HighLightedStatement;EFI_EVENT FormRefreshEvent;LIST_ENTRY HotKeyListHead;EFI_IMAGE_ID ImageId;EFI_ANIMATION_ID AnimationId;UINT32 BrowserStatus;EFI_STRING ErrorString;};
struct _EFI_PEI_CPU_IO_PPI {EFI_PEI_CPU_IO_PPI_ACCESS Mem;EFI_PEI_CPU_IO_PPI_ACCESS Io;EFI_PEI_CPU_IO_PPI_IO_READ8 IoRead8;EFI_PEI_CPU_IO_PPI_IO_READ16 IoRead16;EFI_PEI_CPU_IO_PPI_IO_READ32 IoRead32;EFI_PEI_CPU_IO_PPI_IO_READ64 IoRead64;EFI_PEI_CPU_IO_PPI_IO_WRITE8 IoWrite8;EFI_PEI_CPU_IO_PPI_IO_WRITE16 IoWrite16;EFI_PEI_CPU_IO_PPI_IO_WRITE32 IoWrite32;EFI_PEI_CPU_IO_PPI_IO_WRITE64 IoWrite64;EFI_PEI_CPU_IO_PPI_MEM_READ8 MemRead8;EFI_PEI_CPU_IO_PPI_MEM_READ16 MemRead16;EFI_PEI_CPU_IO_PPI_MEM_READ32 MemRead32;EFI_PEI_CPU_IO_PPI_MEM_READ64 MemRead64;EFI_PEI_CPU_IO_PPI_MEM_WRITE8 MemWrite8;EFI_PEI_CPU_IO_PPI_MEM_WRITE16 MemWrite16;EFI_PEI_CPU_IO_PPI_MEM_WRITE32 MemWrite32;EFI_PEI_CPU_IO_PPI_MEM_WRITE64 MemWrite64;};
union _3A40998E3347D0278E93D08606878B06 {EFI_MISC_LAST_PCI_BUS_DATA LastPciBus;EFI_MISC_BIOS_VENDOR_DATA MiscBiosVendor;EFI_MISC_SYSTEM_MANUFACTURER_DATA MiscSystemManufacturer;EFI_MISC_BASE_BOARD_MANUFACTURER_DATA MiscBaseBoardManufacturer;EFI_MISC_CHASSIS_MANUFACTURER_DATA MiscChassisManufacturer;EFI_MISC_PORT_INTERNAL_CONNECTOR_DESIGNATOR_DATA MiscPortInternalConnectorDesignator;EFI_MISC_SYSTEM_SLOT_DESIGNATION_DATA MiscSystemSlotDesignation;EFI_MISC_ONBOARD_DEVICE_DATA MiscOnboardDevice;EFI_MISC_OEM_STRING_DATA MiscOemString;EFI_MISC_SYSTEM_OPTION_STRING_DATA MiscOptionString;EFI_MISC_NUMBER_OF_INSTALLABLE_LANGUAGES_DATA NumberOfInstallableLanguages;EFI_MISC_SYSTEM_LANGUAGE_STRING_DATA MiscSystemLanguageString;EFI_MISC_SYSTEM_EVENT_LOG_DATA MiscSystemEventLog;EFI_MISC_GROUP_NAME_DATA MiscGroupNameData;EFI_MISC_GROUP_ITEM_SET_DATA MiscGroupItemSetData;EFI_MISC_POINTING_DEVICE_TYPE_DATA MiscPointingDeviceTypeData;EFI_MISC_RESET_CAPABILITIES_DATA MiscResetCapablilitiesData;EFI_MISC_HARDWARE_SECURITY_SETTINGS_DATA MiscHardwareSecuritySettingsData;EFI_MISC_SCHEDULED_POWER_ON_MONTH_DATA MiscScheduledPowerOnMonthData;EFI_MISC_VOLTAGE_PROBE_DESCRIPTION_DATA MiscVoltagePorbeDescriptionData;EFI_MISC_COOLING_DEVICE_TEMP_LINK_DATA MiscCoolingDeviceTempLinkData;EFI_MISC_TEMPERATURE_PROBE_DESCRIPTION_DATA MiscTemperatureProbeDescriptionData;EFI_MISC_ELECTRICAL_CURRENT_PROBE_DESCRIPTION_DATA MiscElectricalCurrentProbeDescriptionData;EFI_MISC_REMOTE_ACCESS_MANUFACTURER_DESCRIPTION_DATA MiscRemoteAccessManufacturerDescriptionData;EFI_MISC_BIS_ENTRY_POINT_DATA MiscBisEntryPoint;EFI_MISC_BOOT_INFORMATION_STATUS_DATA MiscBootInformationStatus;EFI_MISC_MANAGEMENT_DEVICE_DESCRIPTION_DATA MiscMangementDeviceDescriptionData;EFI_MISC_MANAGEMENT_DEVICE_COMPONENT_DESCRIPTION_DATA MiscmangementDeviceComponentDescriptionData;EFI_MISC_IPMI_INTERFACE_TYPE_DATA MiscIpmiInterfaceTypeData;EFI_MISC_SYSTEM_POWER_SUPPLY_DATA MiscPowerSupplyInfo;EFI_MISC_SMBIOS_STRUCT_ENCAPSULATION_DATA MiscSmbiosStructEncapsulation;EFI_MISC_MANAGEMENT_DEVICE_THRESHOLD MiscManagementDeviceThreshold;};
union _34000335362FFFA4AA2EC6446A30E5B3 {EFI_DEVICE_PATH_PROTOCOL DevPath;PCI_DEVICE_PATH Pci;PCCARD_DEVICE_PATH PcCard;MEMMAP_DEVICE_PATH MemMap;VENDOR_DEVICE_PATH Vendor;CONTROLLER_DEVICE_PATH Controller;BMC_DEVICE_PATH Bmc;ACPI_HID_DEVICE_PATH Acpi;ACPI_EXTENDED_HID_DEVICE_PATH ExtendedAcpi;ACPI_ADR_DEVICE_PATH AcpiAdr;ATAPI_DEVICE_PATH Atapi;SCSI_DEVICE_PATH Scsi;ISCSI_DEVICE_PATH Iscsi;FIBRECHANNEL_DEVICE_PATH FibreChannel;FIBRECHANNELEX_DEVICE_PATH FibreChannelEx;F1394_DEVICE_PATH F1394;USB_DEVICE_PATH Usb;SATA_DEVICE_PATH Sata;USB_CLASS_DEVICE_PATH UsbClass;USB_WWID_DEVICE_PATH UsbWwid;DEVICE_LOGICAL_UNIT_DEVICE_PATH LogicUnit;I2O_DEVICE_PATH I2O;MAC_ADDR_DEVICE_PATH MacAddr;IPv4_DEVICE_PATH Ipv4;IPv6_DEVICE_PATH Ipv6;VLAN_DEVICE_PATH Vlan;INFINIBAND_DEVICE_PATH InfiniBand;UART_DEVICE_PATH Uart;UART_FLOW_CONTROL_DEVICE_PATH UartFlowControl;SAS_DEVICE_PATH Sas;SASEX_DEVICE_PATH SasEx;NVME_NAMESPACE_DEVICE_PATH NvmeNamespace;URI_DEVICE_PATH Uri;BLUETOOTH_DEVICE_PATH Bluetooth;WIFI_DEVICE_PATH WiFi;UFS_DEVICE_PATH Ufs;SD_DEVICE_PATH Sd;HARDDRIVE_DEVICE_PATH HardDrive;CDROM_DEVICE_PATH CD;FILEPATH_DEVICE_PATH FilePath;MEDIA_PROTOCOL_DEVICE_PATH MediaProtocol;MEDIA_FW_VOL_DEVICE_PATH FirmwareVolume;MEDIA_FW_VOL_FILEPATH_DEVICE_PATH FirmwareFile;MEDIA_RELATIVE_OFFSET_RANGE_DEVICE_PATH Offset;MEDIA_RAM_DISK_DEVICE_PATH RamDisk;BBS_BBS_DEVICE_PATH Bbs;};
union _2EFADF1D0568BC49D90C26C7EF2D672C {EFI_DEVICE_PATH_PROTOCOL *DevPath;PCI_DEVICE_PATH *Pci;PCCARD_DEVICE_PATH *PcCard;MEMMAP_DEVICE_PATH *MemMap;VENDOR_DEVICE_PATH *Vendor;CONTROLLER_DEVICE_PATH *Controller;BMC_DEVICE_PATH *Bmc;ACPI_HID_DEVICE_PATH *Acpi;ACPI_EXTENDED_HID_DEVICE_PATH *ExtendedAcpi;ACPI_ADR_DEVICE_PATH *AcpiAdr;ATAPI_DEVICE_PATH *Atapi;SCSI_DEVICE_PATH *Scsi;ISCSI_DEVICE_PATH *Iscsi;FIBRECHANNEL_DEVICE_PATH *FibreChannel;FIBRECHANNELEX_DEVICE_PATH *FibreChannelEx;F1394_DEVICE_PATH *F1394;USB_DEVICE_PATH *Usb;SATA_DEVICE_PATH *Sata;USB_CLASS_DEVICE_PATH *UsbClass;USB_WWID_DEVICE_PATH *UsbWwid;DEVICE_LOGICAL_UNIT_DEVICE_PATH *LogicUnit;I2O_DEVICE_PATH *I2O;MAC_ADDR_DEVICE_PATH *MacAddr;IPv4_DEVICE_PATH *Ipv4;IPv6_DEVICE_PATH *Ipv6;VLAN_DEVICE_PATH *Vlan;INFINIBAND_DEVICE_PATH *InfiniBand;UART_DEVICE_PATH *Uart;UART_FLOW_CONTROL_DEVICE_PATH *UartFlowControl;SAS_DEVICE_PATH *Sas;SASEX_DEVICE_PATH *SasEx;NVME_NAMESPACE_DEVICE_PATH *NvmeNamespace;URI_DEVICE_PATH *Uri;BLUETOOTH_DEVICE_PATH *Bluetooth;WIFI_DEVICE_PATH *WiFi;UFS_DEVICE_PATH *Ufs;SD_DEVICE_PATH *Sd;HARDDRIVE_DEVICE_PATH *HardDrive;CDROM_DEVICE_PATH *CD;FILEPATH_DEVICE_PATH *FilePath;MEDIA_PROTOCOL_DEVICE_PATH *MediaProtocol;MEDIA_FW_VOL_DEVICE_PATH *FirmwareVolume;MEDIA_FW_VOL_FILEPATH_DEVICE_PATH *FirmwareFile;MEDIA_RELATIVE_OFFSET_RANGE_DEVICE_PATH *Offset;MEDIA_RAM_DISK_DEVICE_PATH *RamDisk;BBS_BBS_DEVICE_PATH *Bbs;UINT8 *Raw;};
union _974BBB0BD35579C3BF5608C837A10F5D {SMBIOS_STRUCTURE *Hdr;SMBIOS_TABLE_TYPE0 *Type0;SMBIOS_TABLE_TYPE1 *Type1;SMBIOS_TABLE_TYPE2 *Type2;SMBIOS_TABLE_TYPE3 *Type3;SMBIOS_TABLE_TYPE4 *Type4;SMBIOS_TABLE_TYPE5 *Type5;SMBIOS_TABLE_TYPE6 *Type6;SMBIOS_TABLE_TYPE7 *Type7;SMBIOS_TABLE_TYPE8 *Type8;SMBIOS_TABLE_TYPE9 *Type9;SMBIOS_TABLE_TYPE10 *Type10;SMBIOS_TABLE_TYPE11 *Type11;SMBIOS_TABLE_TYPE12 *Type12;SMBIOS_TABLE_TYPE13 *Type13;SMBIOS_TABLE_TYPE14 *Type14;SMBIOS_TABLE_TYPE15 *Type15;SMBIOS_TABLE_TYPE16 *Type16;SMBIOS_TABLE_TYPE17 *Type17;SMBIOS_TABLE_TYPE18 *Type18;SMBIOS_TABLE_TYPE19 *Type19;SMBIOS_TABLE_TYPE20 *Type20;SMBIOS_TABLE_TYPE21 *Type21;SMBIOS_TABLE_TYPE22 *Type22;SMBIOS_TABLE_TYPE23 *Type23;SMBIOS_TABLE_TYPE24 *Type24;SMBIOS_TABLE_TYPE25 *Type25;SMBIOS_TABLE_TYPE26 *Type26;SMBIOS_TABLE_TYPE27 *Type27;SMBIOS_TABLE_TYPE28 *Type28;SMBIOS_TABLE_TYPE29 *Type29;SMBIOS_TABLE_TYPE30 *Type30;SMBIOS_TABLE_TYPE31 *Type31;SMBIOS_TABLE_TYPE32 *Type32;SMBIOS_TABLE_TYPE33 *Type33;SMBIOS_TABLE_TYPE34 *Type34;SMBIOS_TABLE_TYPE35 *Type35;SMBIOS_TABLE_TYPE36 *Type36;SMBIOS_TABLE_TYPE37 *Type37;SMBIOS_TABLE_TYPE38 *Type38;SMBIOS_TABLE_TYPE39 *Type39;SMBIOS_TABLE_TYPE40 *Type40;SMBIOS_TABLE_TYPE41 *Type41;SMBIOS_TABLE_TYPE42 *Type42;SMBIOS_TABLE_TYPE126 *Type126;SMBIOS_TABLE_TYPE127 *Type127;UINT8 *Raw;};
union _9A6797B410FBAAB39378A4754EB07363___BF9A1EFF9702CB017FE778751D5F44DE {EFI_PHYSICAL_ADDRESS DataBlock;EFI_PHYSICAL_ADDRESS ContinuationPointer;};
typedef UINTN (*EFI_RUNTIME_CRYPT_SHA256_GET_CONTEXT_SIZE)(void);
typedef EFI_PHYSICAL_ADDRESS EFI_PROCESSOR_APIC_BASE_ADDRESS_DATA;
struct _EFI_DRIVER_FAMILY_OVERRIDE_PROTOCOL {EFI_DRIVER_FAMILY_OVERRIDE_GET_VERSION GetVersion;};
struct _EFI_EAPOL_SUPPLICANT_PAE_STATISTICS {UINTN EapolFramesReceived;UINTN EapolFramesTransmitted;UINTN EapolStartFramesTransmitted;UINTN EapolLogoffFramesTransmitted;UINTN EapRespIdFramesTransmitted;UINTN EapResponseFramesTransmitted;UINTN EapReqIdFramesReceived;UINTN EapRequestFramesReceived;UINTN InvalidEapolFramesReceived;UINTN EapLengthErrorFramesReceived;UINTN LastEapolFrameVersion;UINTN LastEapolFrameSource;};
struct _05F1ED27DA776E2B6446677EC05B8681 {EFI_GUID FileNamesWithinVolume[1];};
struct _108169C987AD0AF6BA52F11EF45C1E8B {STRING_REF OemStringRef[1];};
struct _2B2FEE3F747F440F55DADE83B12DEC68 {UINTN VariablePayloadSize;};
struct _3279FC6A2B21CF07B01F7BD969D520A1 {EFI_STANDBY_BUTTON_PHASE Phase;};
struct _327CD12F9A59FE7154FCFAC0499BBF72 {EFI_PHYSICAL_ADDRESS BootScriptExecutorEntrypoint;};
struct _35B0ADA86CE6120227D7E440D5ABC3F5 {UINTN GpiNum;};
struct _3FA4F00C7E109B048DA6C248989D7AA5 {EFI_SMM_ICHN_SMI_TYPE Type;};
struct _4687A7E7563B5861448BB181C4793520 {EFI_GUID VendorGuid;void *VendorTable;};
union _5223D6A81E6A8532B448C4108E502994 {BYTE ecc[68];BYTE rsa[256];BYTE symmetric[66];BYTE keyedHash[66];};
struct _895648FC99DB533772AF5ED59663C429 {STRING_REF SystemOptionStringRef[1];};
struct _8C94DE8BD49887808F21B5CF1A10A039 {UINTN LeftColumn;UINTN RightColumn;UINTN TopRow;UINTN BottomRow;};
struct _8DC7B7F78C0EB41AADB7ECA240B8C31E {EFI_HTTP_STATUS_CODE StatusCode;};
struct _8FEC1352FA33E828B4E24B646964B517 {EFI_PHYSICAL_ADDRESS DxeCodeTopAddress;EFI_PHYSICAL_ADDRESS SmramBase;};
struct _94D4D7D366E3D27BE40EBD96B678093B {EFI_PHYSICAL_ADDRESS BisEntryPoint;};
struct _96D5CB982C46497217C2745BD21B8DBF {UINTN HeapMigrateOffset;UINTN StackMigrateOffset;};
struct _9B338B1ECA777DDCC35A46B3A383BA71 {UINTN NumberOfImages;};
struct _A0E022DF5FC884803C4BC1475C6D0840 {EFI_POWER_BUTTON_PHASE Phase;};
union _F16F3B0C6B17F21C6855DE9E95AA430E {BYTE sha1[20];BYTE sha256[32];BYTE sm3_256[32];BYTE sha384[48];BYTE sha512[64];};
struct _F6693EB537F6ADE7F029FFA1E9336F4B {UINTN SwSmiInputValue;};
struct _F98C2FDF6B0288DB9DB7F711D38FAF1D {EFI_PHYSICAL_ADDRESS BootPerformanceTablePointer;EFI_PHYSICAL_ADDRESS S3PerformanceTablePointer;};
struct _F9D42D39DD3C8DF123E27FB71942E14A {union _F9D42D39DD3C8DF123E27FB71942E14A___EB8B4300FB02606D6E51BF3C2273DE54 u1;};
typedef UINTN (*EFI_GET_PCD_INFO_PROTOCOL_GET_SKU)(void);
typedef UINTN EFI_PROCESSOR_PACKAGE_NUMBER_DATA;
typedef EFI_GUID EFI_USER_INFO_CREDENTIAL_PROVIDER;
typedef STRING_REF EFI_PROCESSOR_SERIAL_NUMBER_DATA;
typedef EFI_PCI_EXECUTION_PHASE EFI_PCI_CHIPSET_EXECUTION_PHASE;
typedef STRING_REF EFI_PROCESSOR_MANUFACTURER_DATA;
typedef INTN (*ORDERED_COLLECTION_USER_COMPARE)(const void *UserStruct1, const void *UserStruct2);
struct _PEI_LOCK_PHYSICAL_PRESENCE_PPI {PEI_LOCK_PHYSICAL_PRESENCE LockPhysicalPresence;};
typedef STRING_REF EFI_PROCESSOR_PART_NUMBER_DATA;
typedef STRING_REF EFI_PROCESSOR_SOCKET_NAME_DATA;
typedef INTN (*ORDERED_COLLECTION_KEY_COMPARE)(const void *StandaloneKey, const void *UserStruct);
typedef EFI_GUID EFI_USER_INFO_CREDENTIAL_TYPE;
typedef UINTN (*GET_PCD_INFO_PROTOCOL_GET_SKU)(void);
struct _EFI_HII_AIBT_DUPLICATE_BLOCK {EFI_ANIMATION_ID AnimationId;};
typedef UINTN (*EFI_GET_PCD_INFO_PPI_GET_SKU)(void);
typedef UINTN EFI_HII_DATABASE_NOTIFY_TYPE;
typedef STRING_REF EFI_PROCESSOR_ASSET_TAG_DATA;
typedef UINTN EFI_BROWSER_ACTION_REQUEST;
typedef STRING_REF EFI_PROCESSOR_VERSION_DATA;
typedef TPM_ALG_ID TPMI_ALG_KEYEDHASH_SCHEME;
struct _EFI_IFR_STATEMENT_HEADER {EFI_STRING_ID Prompt;EFI_STRING_ID Help;};
typedef void (*EFI_PCD_PROTOCOL_SET_SKU)(UINTN SkuId);
typedef UINTN EFI_SMBUS_DEVICE_COMMAND;
typedef UINTN (*GET_PCD_INFO_PPI_GET_SKU)(void);
typedef void *(*PCD_PROTOCOL_GET_POINTER)(UINTN TokenNumber);
typedef HWND (__stdcall *WinNtGetForegroundWindow)();
typedef void (*EFI_PEI_PCD_PPI_SET_SKU)(UINTN SkuId);
typedef UINTN (*RESET_HANDLE_ENUMERATOR)(UINTN EnumIndex);
typedef TPM_HANDLE TPMI_RH_HIERARCHY_AUTH;
typedef HANDLE (__stdcall *WinNtGetCurrentProcess)();
struct _EFI_BDS_ARCH_PROTOCOL {EFI_BDS_ENTRY Entry;};
typedef STRING_REF EFI_CACHE_SOCKET_DATA;
typedef EFI_GUID EFI_REGEX_SYNTAX_TYPE;
typedef UINTN (*PCD_PROTOCOL_GET_SIZE)(UINTN TokenNumber);
typedef TPM_ALG_ID TPMI_ECC_KEY_EXCHANGE;
typedef HANDLE (__stdcall *WinNtGetCurrentThread)();
typedef HWND (__stdcall *WinNtGetDesktopWindow)();
typedef void (*PCD_PROTOCOL_SET_SKU)(UINTN SkuId);
typedef TPM_ALG_ID TPMI_ALG_ASYM_SCHEME;
typedef TPM_ALG_ID TPMI_ALG_RSA_DECRYPT;
typedef TPM_HANDLE TPMI_SH_AUTH_SESSION;
typedef ATOM (__stdcall *WinNtRegisterClassEx)(const WNDCLASSEX *);
typedef UINTN (*CONFIRM_DATA_CHANGE)(void);
typedef void *(*PCD_PPI_GET_POINTER)(UINTN TokenNumber);
typedef TPM_ALG_ID TPMI_ALG_ECC_SCHEME;
typedef TPM_ALG_ID TPMI_ALG_RSA_SCHEME;
typedef TPM_ALG_ID TPMI_ALG_SIG_SCHEME;
typedef TPM_ALG_ID TPMI_ALG_SYM_OBJECT;
typedef TPM_HANDLE TPMI_RH_ENDORSEMENT;
typedef TPM_ST TPMI_ST_COMMAND_TAG;
typedef HANDLE (__stdcall *WinNtGetProcessHeap)();
struct s_pxe_db_statistics {PXE_UINT64 Supported;PXE_UINT64 Data[64];};
typedef UINTN EFI_BROWSER_ACTION;
typedef INTN EFI_EXCEPTION_TYPE;
typedef EFI_GUID EFI_USER_INFO_GUID;
typedef TPM_HANDLE TPMI_DH_PERSISTENT;
typedef EFI_GUID EFI_RNG_ALGORITHM;
typedef TPM_KEY_BITS TPMI_AES_KEY_BITS;
typedef TPM_ALG_ID TPMI_ALG_SYM_MODE;
typedef TPM_HANDLE TPMI_RH_HIERARCHY;
typedef TPM_HANDLE TPMI_RH_PROVISION;
typedef TPM_KEY_BITS TPMI_RSA_KEY_BITS;
typedef TPM_KEY_BITS TPMI_SM4_KEY_BITS;
struct _EFI_HII_ROW_INFO {UINTN StartIndex;UINTN EndIndex;UINTN LineHeight;UINTN LineWidth;UINTN BaselineOffset;};
typedef void (*EFI_PEI_COPY_MEM)(void *Destination, void *Source, UINTN Length);
typedef UINTN (*PCD_PPI_GET_SIZE)(UINTN TokenNumber);
typedef TPM_HANDLE TPMI_RH_NV_INDEX;
typedef TPM_HANDLE TPMI_RH_PLATFORM;
typedef void (*PCD_PPI_SET_SKU)(UINTN SkuId);
typedef TPM_ALG_ID TPMI_ALG_PUBLIC;
typedef TPM_HANDLE TPMI_DH_CONTEXT;
typedef TPM_HANDLE TPMI_RH_LOCKOUT;
typedef TPM_HANDLE TPMI_RH_NV_AUTH;
struct s_pxe_db_nvdata {union s_pxe_db_nvdata___41B437E8E7B04A71AA3DE9FFDB4ECD25 Data;};
typedef INTN EFI_SAL_STATUS;
typedef UINTN EFI_SMM_PERIOD;
typedef TIMECALLBACK *LPTIMECALLBACK;
typedef PXE_UINT8 PXE_FRAME_TYPE;
typedef TPM_HANDLE TPMI_DH_ENTITY;
typedef TPM_HANDLE TPMI_DH_OBJECT;
typedef TPM_ECC_CURVE TPMI_ECC_CURVE;
typedef TPM_HANDLE TPMI_SH_POLICY;
typedef TPM_ST TPMI_ST_ATTEST;
typedef PXE_UINT16 PXE_STATFLAGS;
typedef UINTN RETURN_STATUS;
typedef TPM_ALG_ID TPMI_ALG_ASYM;
typedef TPM_ALG_ID TPMI_ALG_HASH;
typedef TPM_HANDLE TPMI_RH_CLEAR;
typedef TPM_HANDLE TPMI_RH_OWNER;
typedef void (*EFI_COPY_MEM)(void *Destination, void *Source, UINTN Length);
typedef PXE_UINT8 PXE_MAC_ADDR[32];
typedef PXE_UINT16 PXE_STATCODE;
typedef INTN (*SORT_COMPARE)(const void *Buffer1, const void *Buffer2);
typedef TPM_PCRINDEX TCG_PCRINDEX;
typedef TPM_ALG_ID TPMI_ALG_KDF;
typedef TPM_ALG_ID TPMI_ALG_SYM;
typedef TPM_HANDLE TPMI_SH_HMAC;
typedef UINTN HASH_HANDLE;
typedef PXE_UINT16 PXE_CONTROL;
typedef PXE_UINT16 PXE_OPFLAGS;
typedef TPM_HANDLE TPMI_DH_PCR;
typedef BYTE TPMI_YES_NO;
typedef RETURN_STATUS EFI_STATUS;
typedef PXE_UINT8 PXE_IFTYPE;
typedef PXE_UINT16 PXE_OPCODE;
union pxe_device {struct pxe_device___659A000D21D539E7D9FC0CA6CF59ACAE PCI;struct pxe_device___659A000D21D539E7D9FC0CA6CF59ACAE PCC;};
typedef UINTN *BASE_LIST;
typedef UINTN PXE_UINTN;
typedef UINTN SPIN_LOCK;
typedef HANDLE *LPHANDLE;
typedef UINTN EFI_TPL;
typedef UINTN (*GET_NUM)(void);
typedef INTN ssize_t;
typedef UINTN size_t;
struct s_pxe_cpb_nvdata_sparse___19EFFCE7218537726B6C299C17662D42 {PXE_UINT32 Addr;union s_pxe_cpb_nvdata_sparse___19EFFCE7218537726B6C299C17662D42___72A164B415E82380E188643B9ADB397A Data;};
typedef EFI_STATUS (*EFI_FIRMWARE_MANAGEMENT_UPDATE_IMAGE_PROGRESS)(UINTN Completion);
typedef EFI_STATUS (*EFI_PCI_ROOT_BRIDGE_IO_PROTOCOL_CONFIGURATION)(EFI_PCI_ROOT_BRIDGE_IO_PROTOCOL *This, void **Resources);
typedef EFI_STATUS (*EFI_UNINSTALL_MULTIPLE_PROTOCOL_INTERFACES)(EFI_HANDLE Handle, ...);
typedef EFI_STATUS (*EFI_BLUETOOTH_IO_CHANNEL_SERVICE_CALLBACK)(void *Data, UINTN DataLength, void *Context);
typedef EFI_STATUS (*EFI_INSTALL_MULTIPLE_PROTOCOL_INTERFACES)(EFI_HANDLE *Handle, ...);
typedef EFI_STATUS (*EFI_LEGACY_BIOS_SHADOW_ALL_LEGACY_OPROMS)(EFI_LEGACY_BIOS_PROTOCOL *This);
typedef EFI_STATUS (*EFI_PCD_PROTOCOL_GET_NEXT_TOKEN_SPACE)(const EFI_GUID **Guid);
typedef EFI_STATUS (*EFI_PCI_ROOT_BRIDGE_IO_PROTOCOL_FLUSH)(EFI_PCI_ROOT_BRIDGE_IO_PROTOCOL *This);
typedef EFI_STATUS (*EFI_PCI_ROOT_BRIDGE_IO_PROTOCOL_UNMAP)(EFI_PCI_ROOT_BRIDGE_IO_PROTOCOL *This, void *Mapping);
typedef EFI_STATUS (*EFI_PEI_S3_RESUME_PPI_RESTORE_CONFIG2)(EFI_PEI_S3_RESUME2_PPI *This);
typedef RETURN_STATUS (*EXTRACT_GUIDED_SECTION_DECODE_HANDLER)(const void *InputSection, void **OutputBuffer, void *ScratchBuffer, UINT32 *AuthenticationStatus);
typedef EFI_STATUS (*EFI_BLUETOOTH_HC_ASYNC_FUNC_CALLBACK)(void *Data, UINTN DataLength, void *Context);
typedef EFI_STATUS (*EFI_EXT_SCSI_PASS_THRU_RESET_CHANNEL)(EFI_EXT_SCSI_PASS_THRU_PROTOCOL *This);
typedef EFI_STATUS (*EFI_PEI_CAPSULE_CHECK_CAPSULE_UPDATE)(EFI_PEI_SERVICES **PeiServices);
typedef EFI_STATUS (*EFI_PEI_PCD_PPI_GET_NEXT_TOKEN_SPACE)(const EFI_GUID **Guid);
struct _EFI_PXE_BASE_CODE_CALLBACK_PROTOCOL {UINT64 Revision;EFI_PXE_CALLBACK Callback;};
struct _158E4544DB3B6B6B9F4E93768A523E23 {TPMI_ALG_HASH hash;TPM2B_PUBLIC_KEY_RSA sig;};
struct _26A9FD80ACBBCC67D0EAB69F6998B5AD {EFI_EVENT Event;EFI_STATUS Status;};
struct _2A3F985ABF5054CEFB126C29095BA930 {TPMI_ALG_RSA_DECRYPT scheme;TPMU_ASYM_SCHEME details;};
struct _3F7F60ADCAB3A6A65D69A9D7B989FE49 {TPMI_ALG_HASH hash;TPM2B_ECC_PARAMETER signatureR;TPM2B_ECC_PARAMETER signatureS;};
struct _4D869B13F060BA3FEE65879E2810998E {EFI_EVENT Event;EFI_STATUS TransactionStatus;};
struct _694BC7D489E8313C6AB000BBDE0E3678 {UINTN Function;EFI_STATUS ReturnStatus;UINTN BootRecordSize;void *BootRecordData;};
struct _6AC2D4DF0EFCB3F6004902CC322AC1F6 {TPMI_ALG_SIG_SCHEME sigAlg;TPMU_SIGNATURE signature;};
struct _7654F8B5F1CA2FA52493765D27CB3B7A {TPMI_ALG_HASH hashAlg;TPMU_HA digest;};
struct _774345F8850CD97B16B7F38A57137C1D {TPMI_ALG_RSA_SCHEME scheme;TPMU_ASYM_SCHEME details;};
struct _92268411103B3D7D351D0E9627E9807B {TPMI_ALG_ECC_SCHEME scheme;TPMU_SIG_SCHEME details;};
struct _976A27DAFF15E5ADEA0945F986C3C134 {EFI_SAL_STATUS Status;UINTN r9;UINTN r10;UINTN r11;};
struct _9A6797B410FBAAB39378A4754EB07363 {UINT64 Length;union _9A6797B410FBAAB39378A4754EB07363___BF9A1EFF9702CB017FE778751D5F44DE Union;};
struct _9AF33723D657A68520ACCAD5AD6DB40F {EFI_DEVICE_PATH_TO_TEXT_NODE ConvertDeviceNodeToText;EFI_DEVICE_PATH_TO_TEXT_PATH ConvertDevicePathToText;};
struct _A0CE1414CFE73DDB6A5A45B584E5B563 {TPMI_ALG_SIG_SCHEME scheme;TPMU_SIG_SCHEME details;};
struct _A49E72078B76F4AC4F7118FBBDCD4631 {UINT32 Size;UINT32 Length;struct _A49E72078B76F4AC4F7118FBBDCD4631___2DC13699A76F9BC933E211ED4CAFE3CC Dhcp4;};
struct _AA8B70F900FF5238C230F4A4228535F6 {TPMI_ALG_ASYM_SCHEME scheme;TPMU_ASYM_SCHEME details;};
struct _B68A72A39E6B29140139916F2ADA8BCC {TPMI_ALG_KDF scheme;TPMU_KDF_SCHEME details;};
struct _B74C479D5DEF0F6452AE9C98BC440EA7 {TPMI_ALG_KEYEDHASH_SCHEME scheme;TPMU_SCHEME_KEYEDHASH details;};
struct _C3113ED673D5FF4B72ABA90C2A8D9E13 {EFI_TPL Tpl;EFI_TPL OwnerTpl;EFI_LOCK_STATE Lock;};
struct _C4829FAE93F04C7651DD8881D17ADFEB {TPMI_YES_NO exclusiveSession;TPM2B_DIGEST sessionDigest;};
struct _D37DC79DDC42880AEACC6D620E19C86A {TPMI_ALG_HASH hashAlg;TPMI_ALG_KDF kdf;};
struct _E01EF2602DEBD78E635316685D577E29 {TPMI_ALG_HASH hashAlg;UINT16 count;};
struct _F6B0F99A09D21248DEB1B450B841ED43 {EFI_DEVICE_PATH_FROM_TEXT_NODE ConvertTextToDeviceNode;EFI_DEVICE_PATH_FROM_TEXT_PATH ConvertTextToDevicePath;};
struct _FAD9E14BAE1BD4EEF8AB3A8C7429C8D0 {TPMI_ALG_PUBLIC type;TPMU_PUBLIC_PARMS parameters;};
typedef EFI_STATUS (*EFI_LEGACY_BIOS_PLATFORM_SMM_INIT)(EFI_LEGACY_BIOS_PLATFORM_PROTOCOL *This, void *EfiToLegacy16BootTable);
typedef EFI_STATUS (*EFI_SCSI_IO_PROTOCOL_RESET_DEVICE)(EFI_SCSI_IO_PROTOCOL *This);
typedef EFI_STATUS (*EFI_SHELL_REMOVE_DUP_IN_FILE_LIST)(EFI_SHELL_FILE_INFO **FileList);
typedef EFI_STATUS (*EFI_TIMER_GENERATE_SOFT_INTERRUPT)(EFI_TIMER_ARCH_PROTOCOL *This);
typedef EFI_STATUS (*EFI_USBFN_IO_FREE_TRANSFER_BUFFER)(EFI_USBFN_IO_PROTOCOL *This, void *Buffer);
typedef EFI_STATUS (*EFI_SCSI_PASS_THRU_RESET_CHANNEL)(EFI_SCSI_PASS_THRU_PROTOCOL *This);
typedef EFI_STATUS (*PCD_PROTOCOL_GET_NEXT_TOKENSPACE)(const EFI_GUID **Guid);
typedef EFI_STATUS (*AUTH_VAR_LIB_GET_SCRATCH_BUFFER)(UINTN *ScratchBufferSize, void **ScratchBuffer);
typedef EFI_STATUS (*EFI_DRIVER_HEALTH_REPAIR_NOTIFY)(UINTN Value, UINTN Limit);
typedef EFI_STATUS (*EFI_INSTALL_CONFIGURATION_TABLE)(EFI_GUID *Guid, void *Table);
typedef EFI_STATUS (*EFI_UNREGISTER_KEYSTROKE_NOTIFY)(EFI_SIMPLE_TEXT_INPUT_EX_PROTOCOL *This, void *NotificationHandle);
typedef EFI_STATUS (*EFI_FAULT_TOLERANT_WRITE_ABORT)(EFI_FAULT_TOLERANT_WRITE_PROTOCOL *This);
typedef EFI_STATUS (*EFI_SCSI_IO_PROTOCOL_RESET_BUS)(EFI_SCSI_IO_PROTOCOL *This);
typedef EFI_STATUS (*FRAMEWORK_EFI_FVB_ERASE_BLOCKS)(FRAMEWORK_EFI_FIRMWARE_VOLUME_BLOCK_PROTOCOL *This, ...);
typedef EFI_STATUS (*NET_DESTROY_LINK_LIST_CALLBACK)(LIST_ENTRY *Entry, void *Context);
typedef EFI_STATUS (*EFI_I2C_MASTER_PROTOCOL_RESET)(const EFI_I2C_MASTER_PROTOCOL *This);
typedef EFI_STATUS (*EFI_SHELL_DELETE_FILE_BY_NAME)(const CHAR16 *FileName);
typedef EFI_STATUS (*EFI_USBFN_IO_START_CONTROLLER)(EFI_USBFN_IO_PROTOCOL *This);
typedef EFI_STATUS (*AUTH_VAR_LIB_UPDATE_VARIABLE)(AUTH_VARIABLE_INFO *AuthVariableInfo);
typedef EFI_STATUS (*EFI_GET_NEXT_HIGH_MONO_COUNT)(UINT32 *HighCount);
typedef EFI_STATUS (*EFI_GET_NEXT_MONOTONIC_COUNT)(UINT64 *Count);
typedef EFI_STATUS (*EFI_PEI_I2C_MASTER_PPI_RESET)(const EFI_PEI_I2C_MASTER_PPI *This);
typedef EFI_STATUS (*EFI_SMM_INTERRUPT_UNREGISTER)(EFI_HANDLE DispatchHandle);
typedef EFI_STATUS (*EFI_USBFN_IO_STOP_CONTROLLER)(EFI_USBFN_IO_PROTOCOL *This);
typedef EFI_STATUS (*EFI_ISA_ACPI_INTERFACE_INIT)(EFI_ISA_ACPI_PROTOCOL *This);
typedef EFI_STATUS (*EFI_PEI_REGISTER_FOR_SHADOW)(EFI_PEI_FILE_HANDLE FileHandle);
typedef EFI_STATUS (*EFI_SIMPLE_NETWORK_SHUTDOWN)(EFI_SIMPLE_NETWORK_PROTOCOL *This);
typedef EFI_STATUS (*PCD_PPI_GET_NEXT_TOKENSPACE)(const EFI_GUID **Guid);
typedef EFI_STATUS (*EFI_KMS_GET_SERVICE_STATUS)(EFI_KMS_PROTOCOL *This);
typedef EFI_STATUS (*EFI_BLUETOOTH_CONFIG_INIT)(EFI_BLUETOOTH_CONFIG_PROTOCOL *This);
typedef EFI_STATUS (*EFI_CPU_DISABLE_INTERRUPT)(EFI_CPU_ARCH_PROTOCOL *This);
typedef void (*EFI_CPU_INTERRUPT_HANDLER)(const EFI_EXCEPTION_TYPE InterruptType, const EFI_SYSTEM_CONTEXT SystemContext);
typedef EFI_STATUS (*EFI_DISCONNECT_CONTROLLER)(EFI_HANDLE ControllerHandle, EFI_HANDLE DriverImageHandle, EFI_HANDLE ChildHandle);
typedef EFI_STATUS (*EFI_ISA_IO_PROTOCOL_FLUSH)(EFI_ISA_IO_PROTOCOL *This);
typedef EFI_STATUS (*EFI_ISA_IO_PROTOCOL_UNMAP)(EFI_ISA_IO_PROTOCOL *This, void *Mapping);
typedef EFI_STATUS (*EFI_PCI_IO_PROTOCOL_FLUSH)(EFI_PCI_IO_PROTOCOL *This);
typedef EFI_STATUS (*EFI_PCI_IO_PROTOCOL_UNMAP)(EFI_PCI_IO_PROTOCOL *This, void *Mapping);
typedef EFI_STATUS (*EFI_PEI_GRAPHICS_GET_MODE)(EFI_GRAPHICS_OUTPUT_PROTOCOL_MODE *Mode);
typedef EFI_STATUS (*EFI_CPU_ENABLE_INTERRUPT)(EFI_CPU_ARCH_PROTOCOL *This);
typedef EFI_STATUS (*EFI_CREDENTIAL2_DESELECT)(const EFI_USER_CREDENTIAL2_PROTOCOL *This);
typedef EFI_STATUS (*EFI_MANAGED_NETWORK_POLL)(EFI_MANAGED_NETWORK_PROTOCOL *This);
typedef EFI_STATUS (*EFI_MEMORY_TEST_FINISHED)(EFI_GENERIC_MEMORY_TEST_PROTOCOL *This);
typedef EFI_STATUS (*EFI_SHELL_FREE_FILE_LIST)(EFI_SHELL_FILE_INFO **FileList);
typedef EFI_STATUS (*EFI_SIMPLE_NETWORK_START)(EFI_SIMPLE_NETWORK_PROTOCOL *This);
typedef EFI_STATUS (*PCD_PROTOCOL_SET_POINTER)(UINTN TokenNumber, UINTN *SizeOfBuffer, void *Buffer);
typedef RETURN_STATUS (*PE_COFF_LOADER_READ_FILE)(void *FileHandle, UINTN FileOffset, UINTN *ReadSize, void *Buffer);
typedef EFI_STATUS (*TIMESTAMP_GET_PROPERTIES)(EFI_TIMESTAMP_PROPERTIES *Properties);
typedef EFI_STATUS (*EFI_CREDENTIAL_DESELECT)(const EFI_USER_CREDENTIAL_PROTOCOL *This);
typedef EFI_STATUS (*EFI_EAP_INITIALIZE_PORT)(EFI_EAP_MANAGEMENT_PROTOCOL *This);
typedef EFI_STATUS (*EFI_KEY_NOTIFY_FUNCTION)(EFI_KEY_DATA *KeyData);
typedef EFI_STATUS (*EFI_SHELL_GET_HELP_TEXT)(const CHAR16 *Command, const CHAR16 *Sections, CHAR16 **HelpText);
typedef EFI_STATUS (*EFI_SIMPLE_NETWORK_STOP)(EFI_SIMPLE_NETWORK_PROTOCOL *This);
typedef EFI_STATUS (*EFI_SIO_CONTROL_DISABLE)(const EFI_SIO_CONTROL_PROTOCOL *This);
typedef EFI_STATUS (*SHELLENV_FREE_FILE_LIST)(LIST_ENTRY *ListHead);
struct _EFI_TIMESTAMP_PROTOCOL {TIMESTAMP_GET GetTimestamp;TIMESTAMP_GET_PROPERTIES GetProperties;};
typedef void (*EFI_EXCEPTION_CALLBACK)(EFI_EXCEPTION_TYPE ExceptionType, EFI_SYSTEM_CONTEXT SystemContext);
typedef EFI_STATUS (*EFI_PXE_BASE_CODE_STOP)(EFI_PXE_BASE_CODE_PROTOCOL *This);
typedef EFI_STATUS (*EFI_SIO_CONTROL_ENABLE)(const EFI_SIO_CONTROL_PROTOCOL *This);
typedef EFI_STATUS (*SHELLCMD_GET_LINE_HELP)(CHAR16 **Str);
typedef EFI_STATUS (*EFI_PS2_INIT_HARDWARE)(EFI_HANDLE Handle);
typedef EFI_STATUS (*EFI_SHELL_DELETE_FILE)(SHELL_FILE_HANDLE FileHandle);
typedef EFI_STATUS (*EFI_SHELL_SET_CUR_DIR)(const CHAR16 *FileSystem, const CHAR16 *Dir);
typedef EFI_STATUS (*EFI_TEXT_CLEAR_SCREEN)(EFI_SIMPLE_TEXT_OUTPUT_PROTOCOL *This);
typedef EFI_STATUS (*EFI_USB_IO_PORT_RESET)(EFI_USB_IO_PROTOCOL *This);
typedef EFI_STATUS (*SHELLENV_DEL_DUP_FILE)(LIST_ENTRY *ListHead);
typedef EFI_STATUS (*UNREGISTER_ESRT_ENTRY)(EFI_GUID *FwClass);
typedef EFI_STATUS (*EFI_DPC_DISPATCH_DPC)(EFI_DPC_PROTOCOL *This);
typedef EFI_STATUS (*EFI_FVB_ERASE_BLOCKS)(const EFI_FIRMWARE_VOLUME_BLOCK2_PROTOCOL *This, ...);
typedef EFI_STATUS (*EFI_PEI_GET_HOB_LIST)(const EFI_PEI_SERVICES **PeiServices, void **HobList);
typedef EFI_STATUS (*EFI_PEI_RESET_SYSTEM)(const EFI_PEI_SERVICES **PeiServices);
typedef EFI_STATUS (*EFI_SHELL_CLOSE_FILE)(SHELL_FILE_HANDLE FileHandle);
typedef EFI_STATUS (*EFI_SHELL_FLUSH_FILE)(SHELL_FILE_HANDLE FileHandle);
typedef EFI_STATUS (*EFI_CONVERT_POINTER)(UINTN DebugDisposition, void **Address);
typedef EFI_STATUS (*EFI_DEBUGPORT_RESET)(EFI_DEBUGPORT_PROTOCOL *This);
typedef EFI_STATUS (*EFI_EAP_USER_LOGOFF)(EFI_EAP_MANAGEMENT_PROTOCOL *This);
typedef EFI_STATUS (*EFI_IP4_CONFIG_STOP)(EFI_IP4_CONFIG_PROTOCOL *This);
typedef EFI_STATUS (*EFI_LOCATE_PROTOCOL)(EFI_GUID *Protocol, void *Registration, void **Interface);
typedef EFI_STATUS (*EFI_SAL_PMI_HANDLER)(void *ModuleGlobal, UINT64 CpuIndex, UINT64 PmiVector);
typedef EFI_STATUS (*PCD_PPI_SET_POINTER)(UINTN TokenNumber, UINTN *SizeOfValue, void *Buffer);
typedef EFI_STATUS (*REGISTER_ESRT_ENTRY)(EFI_SYSTEM_RESOURCE_ENTRY *Entry);
typedef EFI_STATUS (*EDKII_UFS_HC_FLUSH)(EDKII_UFS_HOST_CONTROLLER_PROTOCOL *This);
typedef EFI_STATUS (*EDKII_UFS_HC_UNMAP)(EDKII_UFS_HOST_CONTROLLER_PROTOCOL *This, void *Mapping);
typedef EFI_STATUS (*EFI_ACPI_FIND_PATH)(EFI_ACPI_HANDLE HandleIn, void *AcpiPath, EFI_ACPI_HANDLE *HandleOut);
typedef EFI_STATUS (*EFI_ACPI_GET_CHILD)(EFI_ACPI_HANDLE ParentHandle, EFI_ACPI_HANDLE *Handle);
typedef EFI_STATUS (*EFI_DEBUGPORT_POLL)(EFI_DEBUGPORT_PROTOCOL *This);
typedef EFI_STATUS (*EFI_DISK_CANCEL_EX)(EFI_DISK_IO2_PROTOCOL *This);
typedef EFI_STATUS (*EFI_EAP_USER_LOGON)(EFI_EAP_MANAGEMENT_PROTOCOL *This);
typedef EFI_STATUS (*NEXT_PROTOCOL_INFO)(PROTOCOL_INFO **ProtocolInfo);
typedef EFI_STATUS (*SKIP_PROTOCOL_INFO)(UINTN SkipNum);
typedef EFI_STATUS (*BASEM_MEMORY_TEST)(EXTENDMEM_COVERAGE_LEVEL Level);
typedef EFI_STATUS (*EFI_DHCP4_RELEASE)(EFI_DHCP4_PROTOCOL *This);
typedef EFI_STATUS (*EFI_SMM_FREE_POOL)(EFI_SMM_BASE_PROTOCOL *This, void *Buffer);
typedef EFI_STATUS (*UPDATE_ESRT_ENTRY)(EFI_SYSTEM_RESOURCE_ENTRY *Entry);
typedef EFI_STATUS (*EFI_ACPI_S3_SAVE)(EFI_ACPI_S3_SAVE_PROTOCOL *This, void *LegacyMemoryAddress);
typedef EFI_STATUS (*EFI_BIS_SHUTDOWN)(BIS_APPLICATION_HANDLE AppHandle);
typedef EFI_STATUS (*EFI_IMAGE_UNLOAD)(EFI_HANDLE ImageHandle);
typedef EFI_STATUS (*EFI_SERIAL_RESET)(EFI_SERIAL_IO_PROTOCOL *This);
typedef EFI_STATUS (*EFI_SIGNAL_EVENT)(EFI_EVENT Event);
typedef EFI_STATUS (*PROCESS_CAPSULES)(EFI_BOOT_MODE BootMode);
typedef EFI_STATUS (*EFI_BLOCK_FLUSH)(EFI_BLOCK_IO_PROTOCOL *This);
typedef EFI_STATUS (*EFI_CHECK_EVENT)(EFI_EVENT Event);
typedef EFI_STATUS (*EFI_CLOSE_EVENT)(EFI_EVENT Event);
typedef EFI_STATUS (*EFI_DHCP6_START)(EFI_DHCP6_PROTOCOL *This);
typedef EFI_STATUS (*EFI_FILE_DELETE)(EFI_FILE_PROTOCOL *This);
typedef EFI_STATUS (*EFI_MTFTP4_POLL)(EFI_MTFTP4_PROTOCOL *This);
typedef EFI_STATUS (*EFI_MTFTP6_POLL)(EFI_MTFTP6_PROTOCOL *This);
typedef EFI_STATUS (*EFI_TAPE_REWIND)(EFI_TAPE_IO_PROTOCOL *This);
typedef void (*PKT_SENT_NOTIFY)(EFI_STATUS Status, void *Context, IP_IO_IP_PROTOCOL Sender, void *NotifyData);
typedef EFI_STATUS (*EFI_ACPI_CLOSE)(EFI_ACPI_HANDLE Handle);
typedef EFI_STATUS (*EFI_DHCP4_STOP)(EFI_DHCP4_PROTOCOL *This);
typedef EFI_STATUS (*EFI_DHCP6_STOP)(EFI_DHCP6_PROTOCOL *This);
typedef EFI_STATUS (*EFI_FILE_CLOSE)(EFI_FILE_PROTOCOL *This);
typedef EFI_STATUS (*EFI_FILE_FLUSH)(EFI_FILE_PROTOCOL *This);
typedef EFI_STATUS (*EFI_SMM_CLOSE2)(EFI_SMM_ACCESS2_PROTOCOL *This);
typedef EFI_STATUS (*GET_SHELL_MODE)(CHAR16 **Mode);
typedef EFI_STATUS (*EFI_ACPI_OPEN)(void *Buffer, EFI_ACPI_HANDLE *Handle);
typedef EFI_STATUS (*EFI_ARP_FLUSH)(EFI_ARP_PROTOCOL *This);
typedef EFI_STATUS (*EFI_DNS4_POLL)(EFI_DNS4_PROTOCOL *This);
typedef EFI_STATUS (*EFI_DNS6_POLL)(EFI_DNS6_PROTOCOL *This);
typedef EFI_STATUS (*EFI_FTP4_POLL)(EFI_FTP4_PROTOCOL *This);
typedef EFI_STATUS (*EFI_HTTP_POLL)(EFI_HTTP_PROTOCOL *This);
typedef EFI_STATUS (*EFI_SMM_LOCK2)(EFI_SMM_ACCESS2_PROTOCOL *This);
typedef EFI_STATUS (*EFI_SMM_OPEN2)(EFI_SMM_ACCESS2_PROTOCOL *This);
typedef EFI_STATUS (*EFI_TCP4_POLL)(EFI_TCP4_PROTOCOL *This);
typedef EFI_STATUS (*EFI_TCP6_POLL)(EFI_TCP6_PROTOCOL *This);
typedef EFI_STATUS (*EFI_UDP4_POLL)(EFI_UDP4_PROTOCOL *This);
typedef EFI_STATUS (*EFI_UDP6_POLL)(EFI_UDP6_PROTOCOL *This);
typedef EFI_STATUS (*UDP_IO_CONFIG)(UDP_IO *UdpIo, void *Context);
typedef EFI_STATUS (*EFI_IO_FLUSH)(EFI_DEVICE_IO_PROTOCOL *This);
typedef EFI_STATUS (*EFI_IO_UNMAP)(EFI_DEVICE_IO_PROTOCOL *This, void *Mapping);
typedef EFI_STATUS (*EFI_IP4_POLL)(EFI_IP4_PROTOCOL *This);
typedef EFI_STATUS (*EFI_IP6_POLL)(EFI_IP6_PROTOCOL *This);
typedef EFI_STATUS (*EFI_SET_TIME)(EFI_TIME *Time);
typedef EFI_STATUS (*NEXT_HANDLE)(EFI_HANDLE **Handle);
typedef EFI_STATUS (*SKIP_HANDLE)(UINTN SkipNum);
typedef EFI_STATUS (*EFI_STALL)(UINTN Microseconds);
typedef EFI_STATUS (*HASH_INIT)(HASH_HANDLE *HashHandle);
typedef EFI_STATUS (*SET_SCOPE)(BROWSER_SETTING_SCOPE Scope);
typedef EFI_STATUS (*EFI_PCI_HOST_BRIDGE_RESOURCE_ALLOCATION_PROTOCOL_GET_PROPOSED_RESOURCES)(EFI_PCI_HOST_BRIDGE_RESOURCE_ALLOCATION_PROTOCOL *This, EFI_HANDLE RootBridgeHandle, void **Configuration);
typedef EFI_STATUS (*EFI_PCI_HOST_BRIDGE_RESOURCE_ALLOCATION_PROTOCOL_START_BUS_ENUMERATION)(EFI_PCI_HOST_BRIDGE_RESOURCE_ALLOCATION_PROTOCOL *This, EFI_HANDLE RootBridgeHandle, void **Configuration);
typedef EFI_STATUS (*EFI_PCI_HOST_BRIDGE_RESOURCE_ALLOCATION_PROTOCOL_GET_NEXT_ROOT_BRIDGE)(EFI_PCI_HOST_BRIDGE_RESOURCE_ALLOCATION_PROTOCOL *This, EFI_HANDLE *RootBridgeHandle);
typedef EFI_STATUS (*EFI_PCI_HOST_BRIDGE_RESOURCE_ALLOCATION_PROTOCOL_SUBMIT_RESOURCES)(EFI_PCI_HOST_BRIDGE_RESOURCE_ALLOCATION_PROTOCOL *This, EFI_HANDLE RootBridgeHandle, void *Configuration);
typedef EFI_STATUS (*EFI_PCI_HOST_BRIDGE_RESOURCE_ALLOCATION_PROTOCOL_SET_BUS_NUMBERS)(EFI_PCI_HOST_BRIDGE_RESOURCE_ALLOCATION_PROTOCOL *This, EFI_HANDLE RootBridgeHandle, void *Configuration);
typedef EFI_STATUS (*EFI_PCI_HOST_BRIDGE_RESOURCE_ALLOCATION_PROTOCOL_NOTIFY_PHASE)(EFI_PCI_HOST_BRIDGE_RESOURCE_ALLOCATION_PROTOCOL *This, EFI_PCI_HOST_BRIDGE_RESOURCE_ALLOCATION_PHASE Phase);
typedef EFI_STATUS (*EFI_BIS_GET_BOOT_OBJECT_AUTHORIZATION_UPDATE_TOKEN)(BIS_APPLICATION_HANDLE AppHandle, EFI_BIS_DATA **UpdateToken);
typedef EFI_STATUS (*EFI_BIS_GET_BOOT_OBJECT_AUTHORIZATION_CERTIFICATE)(BIS_APPLICATION_HANDLE AppHandle, EFI_BIS_DATA **Certificate);
typedef EFI_STATUS (*EFI_INCOMPATIBLE_PCI_DEVICE_SUPPORT_CHECK_DEVICE)(EFI_INCOMPATIBLE_PCI_DEVICE_SUPPORT_PROTOCOL *This, UINTN VendorId, UINTN DeviceId, UINTN RevisionId, UINTN SubsystemVendorId, UINTN SubsystemDeviceId, void **Configuration);
typedef EFI_STATUS (*EFI_BIS_GET_BOOT_OBJECT_AUTHORIZATION_CHECKFLAG)(BIS_APPLICATION_HANDLE AppHandle, BOOLEAN *CheckIsRequired);
typedef EFI_STATUS (*EFI_PCI_ROOT_BRIDGE_IO_PROTOCOL_GET_ATTRIBUTES)(EFI_PCI_ROOT_BRIDGE_IO_PROTOCOL *This, UINT64 *Supports, UINT64 *Attributes);
typedef EFI_STATUS (*EFI_PCI_ROOT_BRIDGE_IO_PROTOCOL_SET_ATTRIBUTES)(EFI_PCI_ROOT_BRIDGE_IO_PROTOCOL *This, UINT64 Attributes, UINT64 *ResourceBase, UINT64 *ResourceLength);
typedef EFI_STATUS (*EFI_BOOT_MANAGER_POLICY_CONNECT_DEVICE_CLASS)(EFI_BOOT_MANAGER_POLICY_PROTOCOL *This, EFI_GUID *Class);
typedef EFI_STATUS (*EFI_I2C_ENUMERATE_PROTOCOL_GET_BUS_FREQUENCY)(const EFI_I2C_ENUMERATE_PROTOCOL *This, UINTN I2cBusConfiguration, UINTN *BusClockHertz);
typedef EFI_STATUS (*EFI_NVM_EXPRESS_PASS_THRU_GET_NEXT_NAMESPACE)(EFI_NVM_EXPRESS_PASS_THRU_PROTOCOL *This, UINT32 *NamespaceId);
typedef EFI_STATUS (*EFI_BLUETOOTH_CONFIG_SCAN_CALLBACK_FUNCTION)(EFI_BLUETOOTH_CONFIG_PROTOCOL *This, void *Context, EFI_BLUETOOTH_SCAN_CALLBACK_INFORMATION *CallbackInfo);
typedef EFI_STATUS (*EFI_BUS_SPECIFIC_DRIVER_OVERRIDE_GET_DRIVER)(EFI_BUS_SPECIFIC_DRIVER_OVERRIDE_PROTOCOL *This, EFI_HANDLE *DriverImageHandle);
typedef EFI_STATUS (*EFI_FAULT_TOLERANT_WRITE_GET_MAX_BLOCK_SIZE)(EFI_FAULT_TOLERANT_WRITE_PROTOCOL *This, UINTN *BlockSize);
typedef EFI_STATUS (*EFI_PCI_ROOT_BRIDGE_IO_PROTOCOL_FREE_BUFFER)(EFI_PCI_ROOT_BRIDGE_IO_PROTOCOL *This, UINTN Pages, void *HostAddress);
typedef EFI_STATUS (*EFI_SIMPLE_FILE_SYSTEM_PROTOCOL_OPEN_VOLUME)(EFI_SIMPLE_FILE_SYSTEM_PROTOCOL *This, EFI_FILE_PROTOCOL **Root);
typedef EFI_STATUS (*EFI_TCG2_GET_RESULT_OF_SET_ACTIVE_PCR_BANKS)(EFI_TCG2_PROTOCOL *This, UINT32 *OperationPresent, UINT32 *Response);
typedef EFI_STATUS (*EFI_USB_HC_PROTOCOL_GET_ROOTHUB_PORT_NUMBER)(EFI_USB_HC_PROTOCOL *This, UINT8 *PortNumber);
typedef EFI_STATUS (*EFI_LEGACY_BIOS_PLATFORM_GET_ROUTING_TABLE)(EFI_LEGACY_BIOS_PLATFORM_PROTOCOL *This, void **RoutingTable, UINTN *RoutingTableEntries, void **LocalPirqTable, UINTN *PirqTableSize, void **LocalIrqPriorityTable, UINTN *IrqPriorityTableEntries);
typedef EFI_STATUS (*EFI_LEGACY_BIOS_UPDATE_KEYBOARD_LED_STATUS)(EFI_LEGACY_BIOS_PROTOCOL *This, UINT8 Leds);
typedef EFI_STATUS (*EFI_WIRELESS_MAC_CONNECTION_DEAUTHENTICATE)(EFI_WIRELESS_MAC_CONNECTION_PROTOCOL *This, EFI_80211_DEAUTHENTICATE_DATA_TOKEN *Data);
typedef EFI_STATUS (*EFI_EAP_SET_DESIRED_AUTHENTICATION_METHOD)(EFI_EAP_PROTOCOL *This, UINT8 EapAuthType);
typedef EFI_STATUS (*EFI_I2C_MASTER_PROTOCOL_SET_BUS_FREQUENCY)(const EFI_I2C_MASTER_PROTOCOL *This, UINTN *BusClockHertz);
typedef EFI_STATUS (*EFI_BIS_UPDATE_BOOT_OBJECT_AUTHORIZATION)(BIS_APPLICATION_HANDLE AppHandle, EFI_BIS_DATA *RequestCredential, EFI_BIS_DATA **NewUpdateToken);
typedef EFI_STATUS (*EFI_MP_SERVICES_GET_NUMBER_OF_PROCESSORS)(EFI_MP_SERVICES_PROTOCOL *This, UINTN *NumberOfProcessors, UINTN *NumberOfEnabledProcessors);
typedef EFI_STATUS (*EFI_PEI_I2C_MASTER_PPI_SET_BUS_FREQUENCY)(EFI_PEI_I2C_MASTER_PPI *This, UINTN *BusClockHertz);
typedef EFI_STATUS (*EFI_WIRELESS_MAC_CONNECTION_AUTHENTICATE)(EFI_WIRELESS_MAC_CONNECTION_PROTOCOL *This, EFI_80211_AUTHENTICATE_DATA_TOKEN *Data);
typedef EFI_STATUS (*EFI_WIRELESS_MAC_CONNECTION_DISASSOCIATE)(EFI_WIRELESS_MAC_CONNECTION_PROTOCOL *This, EFI_80211_DISASSOCIATE_DATA_TOKEN *Data);
typedef EFI_STATUS (*EFI_DRIVER_CONFIGURATION2_OPTIONS_VALID)(EFI_DRIVER_CONFIGURATION2_PROTOCOL *This, EFI_HANDLE ControllerHandle, EFI_HANDLE ChildHandle);
typedef EFI_STATUS (*EFI_PLATFORM_DRIVER_OVERRIDE_GET_DRIVER)(EFI_PLATFORM_DRIVER_OVERRIDE_PROTOCOL *This, EFI_HANDLE ControllerHandle, EFI_HANDLE *DriverImageHandle);
typedef EFI_STATUS (*EFI_USBFN_IO_CONFIGURE_ENABLE_ENDPOINTS)(EFI_USBFN_IO_PROTOCOL *This, EFI_USB_DEVICE_INFO *DeviceInfo);
typedef RETURN_STATUS (*EXTRACT_GUIDED_SECTION_GET_INFO_HANDLER)(const void *InputSection, UINT32 *OutputBufferSize, UINT32 *ScratchBufferSize, UINT16 *SectionAttribute);
typedef EFI_STATUS (*EFI_DRIVER_CONFIGURATION_OPTIONS_VALID)(EFI_DRIVER_CONFIGURATION_PROTOCOL *This, EFI_HANDLE ControllerHandle, EFI_HANDLE ChildHandle);
typedef EFI_STATUS (*EFI_EXT_SCSI_PASS_THRU_GET_NEXT_TARGET)(EFI_EXT_SCSI_PASS_THRU_PROTOCOL *This, UINT8 **Target);
typedef EFI_STATUS (*FRAMEWORK_EFI_FVB_GET_PHYSICAL_ADDRESS)(FRAMEWORK_EFI_FIRMWARE_VOLUME_BLOCK_PROTOCOL *This, EFI_PHYSICAL_ADDRESS *Address);
typedef EFI_STATUS (*EFI_DATA_HUB_UNREGISTER_FILTER_DRIVER)(EFI_DATA_HUB_PROTOCOL *This, EFI_EVENT FilterEvent);
typedef EFI_STATUS (*EFI_GRAPHICS_OUTPUT_PROTOCOL_SET_MODE)(EFI_GRAPHICS_OUTPUT_PROTOCOL *This, UINT32 ModeNumber);
typedef EFI_STATUS (*EFI_LEGACY_INTERRUPT_GET_NUMBER_PIRQS)(EFI_LEGACY_INTERRUPT_PROTOCOL *This, UINT8 *NumberPirqs);
typedef EFI_STATUS (*EFI_USBFN_IO_ALLOCATE_TRANSFER_BUFFER)(EFI_USBFN_IO_PROTOCOL *This, UINTN Size, void **Buffer);
typedef EFI_STATUS (*EFI_USBFN_IO_GET_VENDOR_ID_PRODUCT_ID)(EFI_USBFN_IO_PROTOCOL *This, UINT16 *Vid, UINT16 *Pid);
typedef EFI_STATUS (*EFI_WIRELESS_MAC_CONNECTION_ASSOCIATE)(EFI_WIRELESS_MAC_CONNECTION_PROTOCOL *This, EFI_80211_ASSOCIATE_DATA_TOKEN *Data);
typedef EFI_STATUS (*EFI_AUTHENTICATION_INFO_PROTOCOL_GET)(EFI_AUTHENTICATION_INFO_PROTOCOL *This, EFI_HANDLE ControllerHandle, void **Buffer);
typedef EFI_STATUS (*EFI_AUTHENTICATION_INFO_PROTOCOL_SET)(EFI_AUTHENTICATION_INFO_PROTOCOL *This, EFI_HANDLE ControllerHandle, void *Buffer);
typedef EFI_STATUS (*EFI_BLOCK_IO_CRYPTO_GET_CAPABILITIES)(EFI_BLOCK_IO_CRYPTO_PROTOCOL *This, EFI_BLOCK_IO_CRYPTO_CAPABILITIES *Capabilities);
typedef EFI_STATUS (*EFI_BLUETOOTH_IO_ASYNC_FUNC_CALLBACK)(UINT16 ChannelID, void *Data, UINTN DataLength, void *Context);
typedef EFI_STATUS (*EFI_EAP_SET_SUPPLICANT_CONFIGURATION)(EFI_EAP_MANAGEMENT_PROTOCOL *This, EFI_EAPOL_SUPPLICANT_PAE_CONFIGURATION *Configuration);
typedef EFI_STATUS (*EFI_I2C_ENUMERATE_PROTOCOL_ENUMERATE)(const EFI_I2C_ENUMERATE_PROTOCOL *This, const EFI_I2C_DEVICE **Device);
typedef EFI_STATUS (*EFI_PCI_PLATFORM_GET_PLATFORM_POLICY)(const EFI_PCI_PLATFORM_PROTOCOL *This, EFI_PCI_PLATFORM_POLICY *PciPolicy);
typedef EFI_STATUS (*EFI_SCSI_IO_PROTOCOL_GET_DEVICE_TYPE)(EFI_SCSI_IO_PROTOCOL *This, UINT8 *DeviceType);
typedef EFI_STATUS (*EFI_SMM_IO_TRAP_DISPATCH2_UNREGISTER)(const EFI_SMM_IO_TRAP_DISPATCH2_PROTOCOL *This, EFI_HANDLE DispatchHandle);
typedef EFI_STATUS (*EFI_ACPI_TABLE_UNINSTALL_ACPI_TABLE)(EFI_ACPI_TABLE_PROTOCOL *This, UINTN TableKey);
typedef EFI_STATUS (*EFI_MP_SERVICES_GET_GENERAL_MP_INFO)(FRAMEWORK_EFI_MP_SERVICES_PROTOCOL *This, UINTN *NumberOfCPUs, UINTN *MaximumNumberOfCPUs, UINTN *NumberOfEnabledCPUs, UINTN *RendezvousIntNumber, UINTN *RendezvousProcLength);
typedef EFI_STATUS (*EFI_USB2_HC_PROTOCOL_GET_CAPABILITY)(EFI_USB2_HC_PROTOCOL *This, UINT8 *MaxSpeed, UINT8 *PortNumber, UINT8 *Is64BitCapable);
typedef EFI_STATUS (*EFI_USB_IO_GET_INTERFACE_DESCRIPTOR)(EFI_USB_IO_PROTOCOL *This, EFI_USB_INTERFACE_DESCRIPTOR *InterfaceDescriptor);
typedef EFI_STATUS (*EFI_WATCHDOG_TIMER_GET_TIMER_PERIOD)(EFI_WATCHDOG_TIMER_ARCH_PROTOCOL *This, UINT64 *TimerPeriod);
typedef EFI_STATUS (*EFI_WATCHDOG_TIMER_REGISTER_HANDLER)(EFI_WATCHDOG_TIMER_ARCH_PROTOCOL *This, EFI_WATCHDOG_TIMER_NOTIFY NotifyFunction);
typedef EFI_STATUS (*EFI_WATCHDOG_TIMER_SET_TIMER_PERIOD)(EFI_WATCHDOG_TIMER_ARCH_PROTOCOL *This, UINT64 TimerPeriod);
struct _EFI_SHELL_DYNAMIC_COMMAND_PROTOCOL {const CHAR16 *CommandName;SHELL_COMMAND_HANDLER Handler;SHELL_COMMAND_GETHELP GetHelp;};
typedef EFI_STATUS (*EFI_BLUETOOTH_IO_L2CAP_RAW_RECEIVE)(EFI_BLUETOOTH_IO_PROTOCOL *This, UINTN *BufferSize, void *Buffer, UINTN Timeout);
typedef EFI_STATUS (*EFI_HII_DATABASE_UNREGISTER_NOTIFY)(const EFI_HII_DATABASE_PROTOCOL *This, EFI_HANDLE NotificationHandle);
typedef EFI_STATUS (*EFI_LEGACY_BIOS_COPY_LEGACY_REGION)(EFI_LEGACY_BIOS_PROTOCOL *This, UINTN LegacyMemorySize, void *LegacyMemoryAddress, void *LegacyMemorySourceAddress);
typedef EFI_STATUS (*EFI_SMM_PERIODIC_TIMER_UNREGISTER2)(const EFI_SMM_PERIODIC_TIMER_DISPATCH2_PROTOCOL *This, EFI_HANDLE DispatchHandle);
typedef EFI_STATUS (*EFI_SMM_STANDBY_BUTTON_UNREGISTER2)(const EFI_SMM_STANDBY_BUTTON_DISPATCH2_PROTOCOL *This, EFI_HANDLE DispatchHandle);
typedef EFI_STATUS (*SHELLENV_FILE_META_ARG_NO_WILDCARD)(CHAR16 *Arg, LIST_ENTRY *ListHead);
struct _0B1486E1B93958FC8F6A72435EE19098 {TPMI_ALG_SYM_OBJECT algorithm;TPMU_SYM_KEY_BITS keyBits;TPMU_SYM_MODE mode;};
struct _0BE4EA6FDFC9F098B57474A52E44A82D {UINT64 clock;UINT32 resetCount;UINT32 restartCount;TPMI_YES_NO safe;};
struct _0E1C314154D40BBA527682AF090FB242 {EFI_EVENT Event;EFI_STATUS Status;union _0E1C314154D40BBA527682AF090FB242___270CE8F4605A49DF14F287E637150C83 Packet;};
struct _0F934B3B6D925568E8AB6A57CC3AA362 {EFI_EVENT Event;EFI_STATUS Status;union _0F934B3B6D925568E8AB6A57CC3AA362___A92FF03DC9B9AB6EE64CCBB259EA1815 Packet;};
struct _2346AEA35C9D7D084E7EF0424AFB9CF6 {EFI_EVENT Event;EFI_STATUS Status;union _2346AEA35C9D7D084E7EF0424AFB9CF6___0095214DD0AAAA7723F453E6842617CF Packet;};
struct _27D99BE9B367911B3417445DC5CDA8F6 {UINTN Function;EFI_STATUS ReturnStatus;UINTN NumberOfEntries;UINTN LogEntryKey;GAUGE_DATA_ENTRY *GaugeData;};
struct _349131A490B3DCC13E0B058762E5091B {EFI_EVENT Event;EFI_STATUS Status;EFI_HTTP_MESSAGE *Message;};
struct _474560A1B1DCBD1C24AD6598535B5A26 {TPM_ST tag;TPMI_RH_HIERARCHY hierarchy;TPM2B_DIGEST digest;};
struct _514098925362A3D4F3AE39E7826BDCB0 {EFI_EVENT Event;EFI_STATUS Status;union _514098925362A3D4F3AE39E7826BDCB0___BE2119392D04BC3627A77C4E2AEA201B Packet;};
struct _822983CC18095F9E06EDF22D77B7CE2F {UINTN Function;EFI_STATUS ReturnStatus;UINTN NumberOfEntries;UINTN LogEntryKey;GAUGE_DATA_ENTRY_EX *GaugeDataEx;};
struct _BB2A9CEFE9788E770B3AB0AB3F9F5135 {EFI_EVENT Event;EFI_STATUS Status;UINTN BufferSize;void *Buffer;};
struct _D085A2A143CA9E1887FBDD304318E8FF {EFI_EVENT Event;EFI_STATUS Status;EFI_80211_DEAUTHENTICATE_DATA *Data;};
struct _D12245CE441E111193CC72D90D0AB154 {TPMI_ALG_HASH hash;UINT8 sizeofSelect;BYTE pcrSelect[3];};
struct _D67234C38A4A90EBB848D36B211176AF {UINTN Function;EFI_STATUS ReturnStatus;UINT8 Data[1];};
struct _DD3B57431EA49AA8EC86666E212D3A9A {UINT8 KeyIdentifierSize;void *KeyIdentifier;EFI_GUID KeyFormat;void *KeyValue;EFI_STATUS KeyStatus;};
struct _E448784388D86CF0E27BA2E20A1CB194 {UINT8 KeyAttributeIdentifierType;UINT8 KeyAttributeIdentifierCount;void *KeyAttributeIdentifier;UINT16 KeyAttributeInstance;UINT16 KeyAttributeType;UINT16 KeyAttributeValueSize;void *KeyAttributeValue;EFI_STATUS KeyAttributeStatus;};
struct _E4A56E909B566E944F516D2F131E248A {EFI_EVENT Event;EFI_STATUS Status;union _E4A56E909B566E944F516D2F131E248A___3665F245BC54D27AD2AF264354DA6B4B Packet;};
struct _F54A966A3AD46C3DA1EAD3D96FA6D167 {TPMI_ALG_SYM algorithm;TPMU_SYM_KEY_BITS keyBits;TPMU_SYM_MODE mode;};
typedef EFI_STATUS (*EFI_ACPI_TABLE_INSTALL_ACPI_TABLE)(EFI_ACPI_TABLE_PROTOCOL *This, void *AcpiTableBuffer, UINTN AcpiTableBufferSize, UINTN *TableKey);
typedef EFI_STATUS (*EFI_ATA_PASS_THRU_GET_NEXT_DEVICE)(EFI_ATA_PASS_THRU_PROTOCOL *This, UINT16 Port, UINT16 *PortMultiplierPort);
typedef EFI_STATUS (*EFI_BLUETOOTH_HC_RECEIVE_ACL_DATA)(EFI_BLUETOOTH_HC_PROTOCOL *This, UINTN *BufferSize, void *Buffer, UINTN Timeout);
typedef EFI_STATUS (*EFI_BLUETOOTH_HC_RECEIVE_SCO_DATA)(EFI_BLUETOOTH_HC_PROTOCOL *This, UINTN *BufferSize, void *Buffer, UINTN Timeout);
typedef EFI_STATUS (*EFI_BLUETOOTH_IO_L2CAP_DISCONNECT)(EFI_BLUETOOTH_IO_PROTOCOL *This, EFI_HANDLE Handle);
typedef EFI_STATUS (*EFI_EAP_GET_SUPPLICANT_STATISTICS)(EFI_EAP_MANAGEMENT_PROTOCOL *This, EFI_EAPOL_SUPPLICANT_PAE_STATISTICS *Statistics);
typedef EFI_STATUS (*EFI_LEGACY_BIOS_GET_LEGACY_REGION)(EFI_LEGACY_BIOS_PROTOCOL *This, UINTN LegacyMemorySize, UINTN Region, UINTN Alignment, void **LegacyMemoryAddress);
typedef EFI_STATUS (*EFI_LEGACY_INTERRUPT_GET_LOCATION)(EFI_LEGACY_INTERRUPT_PROTOCOL *This, UINT8 *Bus, UINT8 *Device, UINT8 *Function);
typedef EFI_STATUS (*EFI_SERVICE_BINDING_DESTROY_CHILD)(EFI_SERVICE_BINDING_PROTOCOL *This, EFI_HANDLE ChildHandle);
typedef EFI_STATUS (*EFI_SET_MEMORY_SPACE_CAPABILITIES)(EFI_PHYSICAL_ADDRESS BaseAddress, UINT64 Length, UINT64 Capabilities);
typedef EFI_STATUS (*EFI_SMM_PERIODIC_TIMER_UNREGISTER)(EFI_SMM_PERIODIC_TIMER_DISPATCH_PROTOCOL *This, EFI_HANDLE DispatchHandle);
typedef EFI_STATUS (*EFI_SMM_STANDBY_BUTTON_UNREGISTER)(EFI_SMM_STANDBY_BUTTON_DISPATCH_PROTOCOL *This, EFI_HANDLE DispatchHandle);
typedef EFI_STATUS (*EFI_UGA_IO_PROTOCOL_DELETE_DEVICE)(EFI_UGA_IO_PROTOCOL *This, UGA_DEVICE *Device);
typedef EFI_STATUS (*EFI_USBFN_IO_GET_MAXTRANSFER_SIZE)(EFI_USBFN_IO_PROTOCOL *This, UINTN *MaxTransferSize);
typedef EFI_STATUS (*EFI_USB_IO_GET_SUPPORTED_LANGUAGE)(EFI_USB_IO_PROTOCOL *This, UINT16 **LangIDTable, UINT16 *TableSize);
struct _EFI_WATCHDOG_TIMER_ARCH_PROTOCOL {EFI_WATCHDOG_TIMER_REGISTER_HANDLER RegisterHandler;EFI_WATCHDOG_TIMER_SET_TIMER_PERIOD SetTimerPeriod;EFI_WATCHDOG_TIMER_GET_TIMER_PERIOD GetTimerPeriod;};
typedef EFI_STATUS (*EFI_BLUETOOTH_IO_GET_DEVICE_INFO)(EFI_BLUETOOTH_IO_PROTOCOL *This, UINTN *DeviceInfoSize, void **DeviceInfo);
typedef EFI_STATUS (*EFI_EAP_SET_SYSTEM_CONFIGURATION)(EFI_EAP_MANAGEMENT_PROTOCOL *This, BOOLEAN SystemAuthControl);
typedef EFI_STATUS (*EFI_FAULT_TOLERANT_WRITE_RESTART)(EFI_FAULT_TOLERANT_WRITE_PROTOCOL *This, EFI_HANDLE FvbHandle);
typedef EFI_STATUS (*EFI_LEGACY_8259_END_OF_INTERRUPT)(EFI_LEGACY_8259_PROTOCOL *This, EFI_8259_IRQ Irq);
typedef EFI_STATUS (*EFI_PCI_IO_PROTOCOL_GET_LOCATION)(EFI_PCI_IO_PROTOCOL *This, UINTN *SegmentNumber, UINTN *BusNumber, UINTN *DeviceNumber, UINTN *FunctionNumber);
typedef EFI_STATUS (*EFI_PXE_BASE_CODE_SET_STATION_IP)(EFI_PXE_BASE_CODE_PROTOCOL *This, EFI_IP_ADDRESS *NewStationIp, EFI_IP_ADDRESS *NewSubnetMask);
typedef EFI_STATUS (*EFI_REINSTALL_PROTOCOL_INTERFACE)(EFI_HANDLE Handle, EFI_GUID *Protocol, void *OldInterface, void *NewInterface);
typedef EFI_STATUS (*EFI_SERVICE_BINDING_CREATE_CHILD)(EFI_SERVICE_BINDING_PROTOCOL *This, EFI_HANDLE *ChildHandle);
typedef EFI_STATUS (*EFI_SMART_CARD_READER_DISCONNECT)(EFI_SMART_CARD_READER_PROTOCOL *This, UINT32 CardAction);
typedef EFI_STATUS (*EFI_SMM_PERIODIC_TIMER_INTERVAL2)(const EFI_SMM_PERIODIC_TIMER_DISPATCH2_PROTOCOL *This, UINT64 **SmiTickInterval);
typedef EFI_STATUS (*EFI_SMM_POWER_BUTTON_UNREGISTER2)(const EFI_SMM_POWER_BUTTON_DISPATCH2_PROTOCOL *This, EFI_HANDLE DispatchHandle);
typedef EFI_STATUS (*EFI_UNINSTALL_PROTOCOL_INTERFACE)(EFI_HANDLE Handle, EFI_GUID *Protocol, void *Interface);
typedef EFI_STATUS (*EFI_USB_IO_GET_CONFIG_DESCRIPTOR)(EFI_USB_IO_PROTOCOL *This, EFI_USB_CONFIG_DESCRIPTOR *ConfigurationDescriptor);
typedef EFI_STATUS (*EFI_USB_IO_GET_DEVICE_DESCRIPTOR)(EFI_USB_IO_PROTOCOL *This, EFI_USB_DEVICE_DESCRIPTOR *DeviceDescriptor);
typedef EFI_STATUS (*EFI_WIRELESS_MAC_CONNECTION_SCAN)(EFI_WIRELESS_MAC_CONNECTION_PROTOCOL *This, EFI_80211_SCAN_DATA_TOKEN *Data);
typedef EFI_STATUS (*FRAMEWORK_EFI_FVB_GET_ATTRIBUTES)(FRAMEWORK_EFI_FIRMWARE_VOLUME_BLOCK_PROTOCOL *This, EFI_FVB_ATTRIBUTES *Attributes);
typedef EFI_STATUS (*FRAMEWORK_EFI_FVB_SET_ATTRIBUTES)(FRAMEWORK_EFI_FIRMWARE_VOLUME_BLOCK_PROTOCOL *This, EFI_FVB_ATTRIBUTES *Attributes);
typedef EFI_STATUS (*FRAMEWORK_EFI_MP_SERVICES_WHOAMI)(FRAMEWORK_EFI_MP_SERVICES_PROTOCOL *This, UINTN *ProcessorNumber);
typedef EFI_STATUS (*EFI_ACPI_GET_LEGACY_MEMORY_SIZE)(EFI_ACPI_S3_SAVE_PROTOCOL *This, UINTN *Size);
typedef EFI_STATUS (*EFI_ASYNC_USB_TRANSFER_CALLBACK)(void *Data, UINTN DataLength, void *Context, UINT32 Status);
typedef EFI_STATUS (*EFI_ATA_PASS_THRU_GET_NEXT_PORT)(EFI_ATA_PASS_THRU_PROTOCOL *This, UINT16 *Port);
typedef EFI_STATUS (*EFI_BLUETOOTH_IO_L2CAP_RAW_SEND)(EFI_BLUETOOTH_IO_PROTOCOL *This, UINTN *BufferSize, void *Buffer, UINTN Timeout);
typedef EFI_STATUS (*EFI_GET_MAXIMUM_PROCESSOR_INDEX)(EFI_DEBUG_SUPPORT_PROTOCOL *This, UINTN *MaxProcessorIndex);
typedef EFI_STATUS (*EFI_GET_MEMORY_SPACE_DESCRIPTOR)(EFI_PHYSICAL_ADDRESS BaseAddress, EFI_GCD_MEMORY_SPACE_DESCRIPTOR *Descriptor);
typedef EFI_STATUS (*EFI_ISA_IO_PROTOCOL_FREE_BUFFER)(EFI_ISA_IO_PROTOCOL *This, UINTN Pages, void *HostAddress);
typedef EFI_STATUS (*EFI_LEGACY_8259_SET_VECTOR_BASE)(EFI_LEGACY_8259_PROTOCOL *This, UINT8 MasterBase, UINT8 SlaveBase);
typedef EFI_STATUS (*EFI_LEGACY_INTERRUPT_WRITE_PIRQ)(EFI_LEGACY_INTERRUPT_PROTOCOL *This, UINT8 PirqNumber, UINT8 PirqData);
typedef EFI_STATUS (*EFI_PCD_PROTOCOL_GET_NEXT_TOKEN)(const EFI_GUID *Guid, UINTN *TokenNumber);
typedef EFI_STATUS (*EFI_PCI_IO_PROTOCOL_FREE_BUFFER)(EFI_PCI_IO_PROTOCOL *This, UINTN Pages, void *HostAddress);
typedef EFI_STATUS (*EFI_PXE_BASE_CODE_SET_IP_FILTER)(EFI_PXE_BASE_CODE_PROTOCOL *This, EFI_PXE_BASE_CODE_IP_FILTER *NewFilter);
typedef EFI_STATUS (*EFI_SET_MEMORY_SPACE_ATTRIBUTES)(EFI_PHYSICAL_ADDRESS BaseAddress, UINT64 Length, UINT64 Attributes);
typedef EFI_STATUS (*EFI_SMM_PERIODIC_TIMER_INTERVAL)(EFI_SMM_PERIODIC_TIMER_DISPATCH_PROTOCOL *This, UINT64 **SmiTickInterval);
typedef EFI_STATUS (*EFI_SMM_POWER_BUTTON_UNREGISTER)(EFI_SMM_POWER_BUTTON_DISPATCH_PROTOCOL *This, EFI_HANDLE DispatchHandle);
typedef EFI_STATUS (*FRAMEWORK_EFI_FV_GET_ATTRIBUTES)(EFI_FIRMWARE_VOLUME_PROTOCOL *This, FRAMEWORK_EFI_FV_ATTRIBUTES *Attributes);
typedef EFI_STATUS (*FRAMEWORK_EFI_FV_SET_ATTRIBUTES)(EFI_FIRMWARE_VOLUME_PROTOCOL *This, FRAMEWORK_EFI_FV_ATTRIBUTES *Attributes);
typedef EFI_STATUS (*EFI_ABSOLUTE_POINTER_GET_STATE)(EFI_ABSOLUTE_POINTER_PROTOCOL *This, EFI_ABSOLUTE_POINTER_STATE *State);
typedef EFI_STATUS (*EFI_ATA_PASS_THRU_RESET_DEVICE)(EFI_ATA_PASS_THRU_PROTOCOL *This, UINT16 Port, UINT16 PortMultiplierPort);
typedef EFI_STATUS (*EFI_BLUETOOTH_HC_RECEIVE_EVENT)(EFI_BLUETOOTH_HC_PROTOCOL *This, UINTN *BufferSize, void *Buffer, UINTN Timeout);
typedef EFI_STATUS (*EFI_BLUETOOTH_HC_SEND_ACL_DATA)(EFI_BLUETOOTH_HC_PROTOCOL *This, UINTN *BufferSize, void *Buffer, UINTN Timeout);
typedef EFI_STATUS (*EFI_BLUETOOTH_HC_SEND_SCO_DATA)(EFI_BLUETOOTH_HC_PROTOCOL *This, UINTN *BufferSize, void *Buffer, UINTN Timeout);
typedef EFI_STATUS (*EFI_LEGACY_INTERRUPT_READ_PIRQ)(EFI_LEGACY_INTERRUPT_PROTOCOL *This, UINT8 PirqNumber, UINT8 *PirqData);
typedef EFI_STATUS (*EFI_PEI_PCD_PPI_GET_NEXT_TOKEN)(const EFI_GUID *Guid, UINTN *TokenNumber);
typedef EFI_STATUS (*EFI_SMART_CARD_EDGE_DISCONNECT)(EFI_SMART_CARD_EDGE_PROTOCOL *This, EFI_HANDLE SCardHandle);
typedef EFI_STATUS (*EFI_UGA_DRAW_PROTOCOL_GET_MODE)(EFI_UGA_DRAW_PROTOCOL *This, UINT32 *HorizontalResolution, UINT32 *VerticalResolution, UINT32 *ColorDepth, UINT32 *RefreshRate);
typedef EFI_STATUS (*EFI_UGA_DRAW_PROTOCOL_SET_MODE)(EFI_UGA_DRAW_PROTOCOL *This, UINT32 HorizontalResolution, UINT32 VerticalResolution, UINT32 ColorDepth, UINT32 RefreshRate);
typedef EFI_STATUS (*EFI_USB2_HC_PROTOCOL_GET_STATE)(EFI_USB2_HC_PROTOCOL *This, EFI_USB_HC_STATE *State);
typedef EFI_STATUS (*EFI_USB2_HC_PROTOCOL_SET_STATE)(EFI_USB2_HC_PROTOCOL *This, EFI_USB_HC_STATE State);
typedef EFI_STATUS (*GET_PCD_INFO_PROTOCOL_GET_INFO)(UINTN TokenNumber, EFI_PCD_INFO *PcdInfo);
typedef EFI_STATUS (*EDKII_MEMORY_PROFILE_GET_DATA)(EDKII_MEMORY_PROFILE_PROTOCOL *This, UINT64 *ProfileSize, void *ProfileBuffer);
typedef EFI_STATUS (*EFI_BLUETOOTH_HC_SEND_COMMAND)(EFI_BLUETOOTH_HC_PROTOCOL *This, UINTN *BufferSize, void *Buffer, UINTN Timeout);
typedef EFI_STATUS (*EFI_BLUETOOTH_IO_GET_SDP_INFO)(EFI_BLUETOOTH_IO_PROTOCOL *This, UINTN *SdpInfoSize, void **SdpInfo);
typedef EFI_STATUS (*EFI_CREDENTIAL2_GET_NEXT_INFO)(const EFI_USER_CREDENTIAL2_PROTOCOL *This, EFI_USER_INFO_HANDLE *UserInfo);
typedef EFI_STATUS (*EFI_HII_ACCESS_EXTRACT_CONFIG)(const EFI_HII_CONFIG_ACCESS_PROTOCOL *This, const EFI_STRING Request, EFI_STRING *Progress, EFI_STRING *Results);
typedef EFI_STATUS (*EFI_ISA_ACPI_DEVICE_ENUMERATE)(EFI_ISA_ACPI_PROTOCOL *This, EFI_ISA_ACPI_DEVICE_ID **Device);
typedef EFI_STATUS (*EFI_MANAGED_NETWORK_CONFIGURE)(EFI_MANAGED_NETWORK_PROTOCOL *This, EFI_MANAGED_NETWORK_CONFIG_DATA *MnpConfigData);
typedef EFI_STATUS (*EFI_PEI_LOAD_RECOVERY_CAPSULE)(EFI_PEI_SERVICES **PeiServices, EFI_PEI_RECOVERY_MODULE_PPI *This);
typedef EFI_STATUS (*EFI_SHELL_OPEN_ROOT_BY_HANDLE)(EFI_HANDLE DeviceHandle, SHELL_FILE_HANDLE *FileHandle);
typedef EFI_STATUS (*EFI_SIMPLE_NETWORK_GET_STATUS)(EFI_SIMPLE_NETWORK_PROTOCOL *This, UINT32 *InterruptStatus, void **TxBuf);
typedef EFI_STATUS (*EFI_SIMPLE_NETWORK_INITIALIZE)(EFI_SIMPLE_NETWORK_PROTOCOL *This, UINTN ExtraRxBufferSize, UINTN ExtraTxBufferSize);
typedef EFI_STATUS (*EFI_SMART_CARD_READER_CONNECT)(EFI_SMART_CARD_READER_PROTOCOL *This, UINT32 AccessMode, UINT32 CardAction, UINT32 PreferredProtocols, UINT32 *ActiveProtocol);
typedef EFI_STATUS (*EFI_TCG2_GET_ACTIVE_PCR_BANKS)(EFI_TCG2_PROTOCOL *This, UINT32 *ActivePcrBanks);
typedef EFI_STATUS (*EFI_TCG2_SET_ACTIVE_PCR_BANKS)(EFI_TCG2_PROTOCOL *This, UINT32 ActivePcrBanks);
typedef EFI_STATUS (*EFI_USB_HC_PROTOCOL_GET_STATE)(EFI_USB_HC_PROTOCOL *This, EFI_USB_HC_STATE *State);
typedef EFI_STATUS (*EFI_USB_HC_PROTOCOL_SET_STATE)(EFI_USB_HC_PROTOCOL *This, EFI_USB_HC_STATE State);
typedef EFI_STATUS (*EFI_ATA_PASS_THRU_RESET_PORT)(EFI_ATA_PASS_THRU_PROTOCOL *This, UINT16 Port);
typedef EFI_STATUS (*EFI_BLUETOOTH_CONFIG_CONNECT)(EFI_BLUETOOTH_CONFIG_PROTOCOL *This, BLUETOOTH_ADDRESS *BD_ADDR);
typedef EFI_STATUS (*EFI_CREDENTIAL_GET_NEXT_INFO)(const EFI_USER_CREDENTIAL_PROTOCOL *This, EFI_USER_INFO_HANDLE *UserInfo);
typedef EFI_STATUS (*EFI_FVB_GET_PHYSICAL_ADDRESS)(const EFI_FIRMWARE_VOLUME_BLOCK2_PROTOCOL *This, EFI_PHYSICAL_ADDRESS *Address);
typedef EFI_STATUS (*EFI_GET_SWAP_LOCK_CAPABILITY)(EFI_SWAP_ADDRESS_RANGE_PROTOCOL *This, EFI_SWAP_LOCK_CAPABILITY *LockCapability);
typedef EFI_STATUS (*EFI_HII_DATABASE_REMOVE_PACK)(const EFI_HII_DATABASE_PROTOCOL *This, EFI_HII_HANDLE Handle);
typedef EFI_STATUS (*EFI_ISCSI_INITIATOR_NAME_GET)(EFI_ISCSI_INITIATOR_NAME_PROTOCOL *This, UINTN *BufferSize, void *Buffer);
typedef EFI_STATUS (*EFI_ISCSI_INITIATOR_NAME_SET)(EFI_ISCSI_INITIATOR_NAME_PROTOCOL *This, UINTN *BufferSize, void *Buffer);
typedef EFI_STATUS (*EFI_LEGACY_REGION2_BOOT_LOCK)(EFI_LEGACY_REGION2_PROTOCOL *This, UINT32 Start, UINT32 Length, UINT32 *Granularity);
typedef EFI_STATUS (*EFI_MANAGED_NETWORK_TRANSMIT)(EFI_MANAGED_NETWORK_PROTOCOL *This, EFI_MANAGED_NETWORK_COMPLETION_TOKEN *Token);
typedef EFI_STATUS (*EFI_PCD_PROTOCOL_SET_POINTER)(const EFI_GUID *Guid, UINTN TokenNumber, UINTN *SizeOfValue, void *Buffer);
typedef EFI_STATUS (*EFI_PEI_CAPSULE_CREATE_STATE)(EFI_PEI_SERVICES **PeiServices, void *CapsuleBase, UINTN CapsuleSize);
typedef EFI_STATUS (*EFI_REGISTER_PROTOCOL_NOTIFY)(EFI_GUID *Protocol, EFI_EVENT Event, void **Registration);
typedef EFI_STATUS (*EFI_SHELL_GET_GUID_FROM_NAME)(const CHAR16 *GuidName, EFI_GUID *Guid);
typedef EFI_STATUS (*EFI_SHELL_REGISTER_GUID_NAME)(const EFI_GUID *Guid, const CHAR16 *GuidName);
typedef EFI_STATUS (*EFI_SIMPLE_POINTER_GET_STATE)(EFI_SIMPLE_POINTER_PROTOCOL *This, EFI_SIMPLE_POINTER_STATE *State);
typedef EFI_STATUS (*EFI_SMM_CALLBACK_ENTRY_POINT)(EFI_HANDLE SmmImageHandle, void *CommunicationBuffer, UINTN *SourceSize);
typedef EFI_STATUS (*EFI_SMM_HANDLER_ENTRY_POINT2)(EFI_HANDLE DispatchHandle, const void *Context, void *CommBuffer, UINTN *CommBufferSize);
typedef EFI_STATUS (*EFI_TEXT_SET_CURSOR_POSITION)(EFI_SIMPLE_TEXT_OUTPUT_PROTOCOL *This, UINTN Column, UINTN Row);
typedef EFI_STATUS (*EFI_CPU_GET_INTERRUPT_STATE)(EFI_CPU_ARCH_PROTOCOL *This, BOOLEAN *State);
typedef EFI_STATUS (*EFI_GET_IO_SPACE_DESCRIPTOR)(EFI_PHYSICAL_ADDRESS BaseAddress, EFI_GCD_IO_SPACE_DESCRIPTOR *Descriptor);
typedef EFI_STATUS (*EFI_HII_ACCESS_ROUTE_CONFIG)(const EFI_HII_CONFIG_ACCESS_PROTOCOL *This, const EFI_STRING Configuration, EFI_STRING *Progress);
typedef EFI_STATUS (*EFI_HII_SET_KEYBOARD_LAYOUT)(const EFI_HII_DATABASE_PROTOCOL *This, const EFI_GUID *KeyGuid);
typedef EFI_STATUS (*EFI_LEGACY_8259_DISABLE_IRQ)(EFI_LEGACY_8259_PROTOCOL *This, EFI_8259_IRQ Irq);
typedef EFI_STATUS (*EFI_LEGACY_REGION_BOOT_LOCK)(EFI_LEGACY_REGION_PROTOCOL *This, UINT32 Start, UINT32 Length, UINT32 *Granularity);
typedef EFI_STATUS (*EFI_MANAGED_NETWORK_RECEIVE)(EFI_MANAGED_NETWORK_PROTOCOL *This, EFI_MANAGED_NETWORK_COMPLETION_TOKEN *Token);
typedef EFI_STATUS (*EFI_METRONOME_WAIT_FOR_TICK)(EFI_METRONOME_ARCH_PROTOCOL *This, UINT32 TickNumber);
typedef EFI_STATUS (*EFI_MTFTP4_TIMEOUT_CALLBACK)(EFI_MTFTP4_PROTOCOL *This, EFI_MTFTP4_TOKEN *Token);
typedef EFI_STATUS (*EFI_MTFTP6_TIMEOUT_CALLBACK)(EFI_MTFTP6_PROTOCOL *This, EFI_MTFTP6_TOKEN *Token);
typedef EFI_STATUS (*EFI_PEIM_NOTIFY_ENTRY_POINT)(EFI_PEI_SERVICES **PeiServices, EFI_PEI_NOTIFY_DESCRIPTOR *NotifyDescriptor, void *Ppi);
typedef EFI_STATUS (*EFI_PEI_FFS_GET_VOLUME_INFO)(EFI_PEI_FV_HANDLE VolumeHandle, EFI_FV_INFO *VolumeInfo);
typedef EFI_STATUS (*EFI_PEI_PCD_PPI_SET_POINTER)(const EFI_GUID *Guid, UINTN TokenNumber, UINTN *SizeOfValue, void *Buffer);
typedef EFI_STATUS (*EFI_PROCESS_FIRMWARE_VOLUME)(const void *FirmwareVolumeHeader, UINTN Size, EFI_HANDLE *FirmwareVolumeHandle);
typedef EFI_STATUS (*EFI_SERIAL_GET_CONTROL_BITS)(EFI_SERIAL_IO_PROTOCOL *This, UINT32 *Control);
typedef EFI_STATUS (*EFI_SERIAL_SET_CONTROL_BITS)(EFI_SERIAL_IO_PROTOCOL *This, UINT32 Control);
typedef EFI_STATUS (*EFI_SHELL_FIND_FILES_IN_DIR)(SHELL_FILE_HANDLE FileDirHandle, EFI_SHELL_FILE_INFO **FileList);
typedef EFI_STATUS (*EFI_SHELL_GET_FILE_POSITION)(SHELL_FILE_HANDLE FileHandle, UINT64 *Position);
typedef EFI_STATUS (*EFI_SHELL_SET_FILE_POSITION)(SHELL_FILE_HANDLE FileHandle, UINT64 Position);
typedef EFI_STATUS (*EFI_SMM_HANDLER_ENTRY_POINT)(EFI_HANDLE SmmImageHandle, void *CommunicationBuffer, UINTN *SourceSize);
typedef EFI_STATUS (*PCD_PROTOCOL_GET_NEXT_TOKEN)(const EFI_GUID *Guid, UINTN *TokenNumber);
typedef EFI_STATUS (*PCD_PROTOCOL_SET_EX_POINTER)(const EFI_GUID *Guid, UINTN TokenNumber, UINTN *SizeOfBuffer, void *Buffer);
typedef EFI_STATUS (*SHELLENV_GET_FS_DEVICE_PATH)(CHAR16 *Name, EFI_DEVICE_PATH_PROTOCOL **DevPath);
typedef EFI_STATUS (*EFI_ABSOLUTE_POINTER_RESET)(EFI_ABSOLUTE_POINTER_PROTOCOL *This, BOOLEAN ExtendedVerification);
typedef EFI_STATUS (*EFI_BIS_GET_SIGNATURE_INFO)(BIS_APPLICATION_HANDLE AppHandle, EFI_BIS_DATA **SignatureInfo);
typedef EFI_STATUS (*EFI_DHCP4_TRANSMIT_RECEIVE)(EFI_DHCP4_PROTOCOL *This, EFI_DHCP4_TRANSMIT_RECEIVE_TOKEN *Token);
typedef EFI_STATUS (*EFI_MANAGED_NETWORK_CANCEL)(EFI_MANAGED_NETWORK_PROTOCOL *This, EFI_MANAGED_NETWORK_COMPLETION_TOKEN *Token);
typedef EFI_STATUS (*EFI_PEI_FFS_GET_FILE_INFO2)(EFI_PEI_FILE_HANDLE FileHandle, EFI_FV_FILE_INFO2 *FileInfo);
typedef EFI_STATUS (*EFI_SIO_POSSIBLE_RESOURCES)(const EFI_SIO_PROTOCOL *This, ACPI_RESOURCE_HEADER_PTR *ResourceCollection);
typedef EFI_STATUS (*EFI_SMM_GET_SMST_LOCATION2)(const EFI_SMM_BASE2_PROTOCOL *This, EFI_SMM_SYSTEM_TABLE2 **Smst);
typedef EFI_STATUS (*EFI_SMM_REGISTER_SMM_ENTRY)(const EFI_SMM_CONFIGURATION_PROTOCOL *This, EFI_SMM_ENTRY_POINT SmmEntryPoint);
typedef EFI_STATUS (*EFI_SMM_UNREGISTER_HANDLER)(EFI_SMM_BASE_PROTOCOL *This, EFI_HANDLE ImageHandle);
typedef EFI_STATUS (*EFI_TIMER_GET_TIMER_PERIOD)(EFI_TIMER_ARCH_PROTOCOL *This, UINT64 *TimerPeriod);
typedef EFI_STATUS (*EFI_TIMER_REGISTER_HANDLER)(EFI_TIMER_ARCH_PROTOCOL *This, EFI_TIMER_NOTIFY NotifyFunction);
typedef EFI_STATUS (*EFI_TIMER_SET_TIMER_PERIOD)(EFI_TIMER_ARCH_PROTOCOL *This, UINT64 TimerPeriod);
typedef EFI_STATUS (*EFI_USB2_HC_PROTOCOL_RESET)(EFI_USB2_HC_PROTOCOL *This, UINT16 Attributes);
typedef EFI_STATUS (*EFI_VGA_MINI_PORT_SET_MODE)(EFI_VGA_MINI_PORT_PROTOCOL *This, UINTN ModeNumber);
struct _EFI_PEI_NOTIFY_DESCRIPTOR {UINTN Flags;EFI_GUID *Guid;EFI_PEIM_NOTIFY_ENTRY_POINT Notify;};
typedef EFI_STATUS (*EDKII_UFS_HC_GET_MMIO_BAR)(EDKII_UFS_HOST_CONTROLLER_PROTOCOL *This, UINTN *MmioBar);
typedef EFI_STATUS (*EFI_BLOCK_IO_CRYPTO_FLUSH)(EFI_BLOCK_IO_CRYPTO_PROTOCOL *This, EFI_BLOCK_IO_CRYPTO_TOKEN *Token);
typedef EFI_STATUS (*EFI_BLOCK_IO_CRYPTO_RESET)(EFI_BLOCK_IO_CRYPTO_PROTOCOL *This, BOOLEAN ExtendedVerification);
typedef EFI_STATUS (*EFI_DECOMPRESS_DECOMPRESS)(EFI_DECOMPRESS_PROTOCOL *This, void *Source, UINT32 SourceSize, void *Destination, UINT32 DestinationSize, void *Scratch, UINT32 ScratchSize);
typedef EFI_STATUS (*EFI_LEGACY_REGION2_UNLOCK)(EFI_LEGACY_REGION2_PROTOCOL *This, UINT32 Start, UINT32 Length, UINT32 *Granularity);
typedef EFI_STATUS (*EFI_MTFTP4_READ_DIRECTORY)(EFI_MTFTP4_PROTOCOL *This, EFI_MTFTP4_TOKEN *Token);
typedef EFI_STATUS (*EFI_MTFTP6_READ_DIRECTORY)(EFI_MTFTP6_PROTOCOL *This, EFI_MTFTP6_TOKEN *Token);
typedef EFI_STATUS (*EFI_PEI_FFS_GET_FILE_INFO)(EFI_PEI_FILE_HANDLE FileHandle, EFI_FV_FILE_INFO *FileInfo);
typedef EFI_STATUS (*EFI_SMBUS_NOTIFY_FUNCTION)(EFI_SMBUS_DEVICE_ADDRESS SlaveAddress, UINTN Data);
typedef EFI_STATUS (*EFI_SMMCORE_ALLOCATE_POOL)(EFI_MEMORY_TYPE PoolType, UINTN Size, void **Buffer);
typedef EFI_STATUS (*EFI_SMM_GET_REGISTER_INFO)(EFI_SMM_CONTROL_PROTOCOL *This, EFI_SMM_CONTROL_REGISTER *SmiRegister);
typedef EFI_STATUS (*EFI_SMM_GET_SMST_LOCATION)(EFI_SMM_BASE_PROTOCOL *This, EFI_SMM_SYSTEM_TABLE **Smst);
typedef EFI_STATUS (*EFI_USB_HC_PROTOCOL_RESET)(EFI_USB_HC_PROTOCOL *This, UINT16 Attributes);
typedef EFI_STATUS (*EFI_USER_PROFILE_GET_NEXT)(const EFI_USER_MANAGER_PROTOCOL *This, EFI_USER_PROFILE_HANDLE *User);
typedef EFI_STATUS (*EFI_USER_PROFILE_IDENTIFY)(const EFI_USER_MANAGER_PROTOCOL *This, EFI_USER_PROFILE_HANDLE *User);
typedef EFI_STATUS (*GET_PCD_INFO_PPI_GET_INFO)(UINTN TokenNumber, EFI_PCD_INFO *PcdInfo);
typedef EFI_STATUS (*SHELLENV_INTERNAL_COMMAND)(EFI_HANDLE ImageHandle, EFI_SYSTEM_TABLE *SystemTable);
struct _EFI_SIO_CONTROL_PROTOCOL {UINT32 Version;EFI_SIO_CONTROL_ENABLE EnableDevice;EFI_SIO_CONTROL_DISABLE DisableDevice;};
typedef EFI_STATUS (*EDKII_UFS_HC_FREE_BUFFER)(EDKII_UFS_HOST_CONTROLLER_PROTOCOL *This, UINTN Pages, void *HostAddress);
typedef EFI_STATUS (*EFI_CLOSE_SECTION_STREAM)(EFI_SECTION_EXTRACTION_PROTOCOL *This, UINTN SectionStreamHandle);
typedef EFI_STATUS (*EFI_GET_MEMORY_SPACE_MAP)(UINTN *NumberOfDescriptors, EFI_GCD_MEMORY_SPACE_DESCRIPTOR **MemorySpaceMap);
typedef EFI_STATUS (*EFI_GET_RTC_POWER_STATUS)(EFI_SWAP_ADDRESS_RANGE_PROTOCOL *This, BOOLEAN *RtcPowerFailed);
typedef EFI_STATUS (*EFI_ISA_ACPI_INIT_DEVICE)(EFI_ISA_ACPI_PROTOCOL *This, EFI_ISA_ACPI_DEVICE_ID *Device);
typedef EFI_STATUS (*EFI_LEGACY_8259_GET_MASK)(EFI_LEGACY_8259_PROTOCOL *This, UINT16 *LegacyMask, UINT16 *LegacyEdgeLevel, UINT16 *ProtectedMask, UINT16 *ProtectedEdgeLevel);
typedef EFI_STATUS (*EFI_LEGACY_8259_SET_MASK)(EFI_LEGACY_8259_PROTOCOL *This, UINT16 *LegacyMask, UINT16 *LegacyEdgeLevel, UINT16 *ProtectedMask, UINT16 *ProtectedEdgeLevel);
typedef EFI_STATUS (*EFI_LEGACY_REGION_UNLOCK)(EFI_LEGACY_REGION_PROTOCOL *This, UINT32 Start, UINT32 Length, UINT32 *Granularity);
typedef EFI_STATUS (*EFI_MP_SERVICES_SEND_IPI)(FRAMEWORK_EFI_MP_SERVICES_PROTOCOL *This, UINTN ProcessorNumber, UINTN VectorNumber, UINTN DeliveryMode);
typedef EFI_STATUS (*EFI_MTFTP4_GET_MODE_DATA)(EFI_MTFTP4_PROTOCOL *This, EFI_MTFTP4_MODE_DATA *ModeData);
typedef EFI_STATUS (*EFI_MTFTP6_GET_MODE_DATA)(EFI_MTFTP6_PROTOCOL *This, EFI_MTFTP6_MODE_DATA *ModeData);
typedef EFI_STATUS (*EFI_PEI_CAPSULE_COALESCE)(EFI_PEI_SERVICES **PeiServices, void **MemoryBase, UINTN *MemSize);
typedef EFI_STATUS (*EFI_SIMPLE_NETWORK_RESET)(EFI_SIMPLE_NETWORK_PROTOCOL *This, BOOLEAN ExtendedVerification);
typedef EFI_STATUS (*EFI_SIMPLE_POINTER_RESET)(EFI_SIMPLE_POINTER_PROTOCOL *This, BOOLEAN ExtendedVerification);
typedef EFI_STATUS (*EFI_SMM_INTERRUPT_MANAGE)(const EFI_GUID *HandlerType, const void *Context, void *CommBuffer, UINTN *CommBufferSize);
typedef EFI_STATUS (*EFI_USBFN_IO_DETECT_PORT)(EFI_USBFN_IO_PROTOCOL *This, EFI_USBFN_PORT_TYPE *PortType);
typedef EFI_STATUS (*EFI_USER_PROFILE_CURRENT)(const EFI_USER_MANAGER_PROTOCOL *This, EFI_USER_PROFILE_HANDLE *CurrentUser);
typedef EFI_STATUS (*PCD_PROTOCOL_SET_BOOLEAN)(UINTN TokenNumber, BOOLEAN Value);
typedef EFI_STATUS (*PERFORMANCE_GET_GAUGE_EX)(UINTN LogEntryKey, GAUGE_DATA_ENTRY_EX **GaugeDataEntryEx);
typedef EFI_STATUS (*EFI_ACPI_PUBLISH_TABLES)(EFI_ACPI_SUPPORT_PROTOCOL *This, EFI_ACPI_TABLE_VERSION Version);
typedef EFI_STATUS (*EFI_CREDENTIAL2_DEFAULT)(const EFI_USER_CREDENTIAL2_PROTOCOL *This, EFI_CREDENTIAL_LOGON_FLAGS *AutoLogon);
typedef EFI_STATUS (*EFI_DECOMPRESS_GET_INFO)(EFI_DECOMPRESS_PROTOCOL *This, void *Source, UINT32 SourceSize, UINT32 *DestinationSize, UINT32 *ScratchSize);
typedef EFI_STATUS (*EFI_DHCP4_GET_MODE_DATA)(EFI_DHCP4_PROTOCOL *This, EFI_DHCP4_MODE_DATA *Dhcp4ModeData);
typedef EFI_STATUS (*EFI_DHCP6_INFO_CALLBACK)(EFI_DHCP6_PROTOCOL *This, void *Context, EFI_DHCP6_PACKET *Packet);
typedef EFI_STATUS (*EFI_DISK_INFO_WHICH_IDE)(EFI_DISK_INFO_PROTOCOL *This, UINT32 *IdeChannel, UINT32 *IdeDevice);
typedef EFI_STATUS (*EFI_FTP4_READ_DIRECTORY)(EFI_FTP4_PROTOCOL *This, EFI_FTP4_COMMAND_TOKEN *Token);
typedef EFI_STATUS (*EFI_LEGACY_REGION2_LOCK)(EFI_LEGACY_REGION2_PROTOCOL *This, UINT32 Start, UINT32 Length, UINT32 *Granularity);
typedef EFI_STATUS (*EFI_OPEN_SECTION_STREAM)(EFI_SECTION_EXTRACTION_PROTOCOL *This, UINTN SectionStreamLength, void *SectionStream, UINTN *SectionStreamHandle);
typedef EFI_STATUS (*EFI_PEI_ISA_HC_CLOSE_IO)(const EFI_ISA_HC_PPI *This, UINT64 IoApertureHandle);
typedef EFI_STATUS (*EFI_PEI_SMM_COMMUNICATE)(const EFI_PEI_SMM_COMMUNICATION_PPI *This, void *CommBuffer, UINTN *CommSize);
typedef EFI_STATUS (*EFI_PXE_BASE_CODE_START)(EFI_PXE_BASE_CODE_PROTOCOL *This, BOOLEAN UseIpv6);
typedef EFI_STATUS (*EFI_QUERY_VARIABLE_INFO)(UINT32 Attributes, UINT64 *MaximumVariableStorageSize, UINT64 *RemainingVariableStorageSize, UINT64 *MaximumVariableSize);
typedef EFI_STATUS (*EFI_REMOVE_MEMORY_SPACE)(EFI_PHYSICAL_ADDRESS BaseAddress, UINT64 Length);
typedef EFI_STATUS (*EFI_S3_SAVE_STATE_WRITE)(const EFI_S3_SAVE_STATE_PROTOCOL *This, UINT16 OpCode, ...);
typedef EFI_STATUS (*EFI_SHELL_GET_FILE_SIZE)(SHELL_FILE_HANDLE FileHandle, UINT64 *Size);
typedef EFI_STATUS (*EFI_SHELL_GET_GUID_NAME)(const EFI_GUID *Guid, const CHAR16 **GuidName);
typedef EFI_STATUS (*EFI_SHELL_SET_FILE_INFO)(SHELL_FILE_HANDLE FileHandle, const EFI_FILE_INFO *FileInfo);
typedef EFI_STATUS (*EFI_SMM_GPI_UNREGISTER2)(const EFI_SMM_GPI_DISPATCH2_PROTOCOL *This, EFI_HANDLE DispatchHandle);
typedef EFI_STATUS (*EFI_SMM_ICHN_UNREGISTER)(EFI_SMM_ICHN_DISPATCH_PROTOCOL *This, EFI_HANDLE DispatchHandle);
typedef EFI_STATUS (*EFI_SMM_STARTUP_THIS_AP)(EFI_AP_PROCEDURE Procedure, UINTN CpuNumber, void *ProcArguments);
typedef EFI_STATUS (*EFI_SMM_USB_UNREGISTER2)(const EFI_SMM_USB_DISPATCH2_PROTOCOL *This, EFI_HANDLE DispatchHandle);
typedef EFI_STATUS (*EFI_TCG2_GET_CAPABILITY)(EFI_TCG2_PROTOCOL *This, EFI_TCG2_BOOT_SERVICE_CAPABILITY *ProtocolCapability);
typedef EFI_STATUS (*EFI_TREE_GET_CAPABILITY)(EFI_TREE_PROTOCOL *This, TREE_BOOT_SERVICE_CAPABILITY *ProtocolCapability);
typedef EFI_STATUS (*EFI_USER_PROFILE_CREATE)(const EFI_USER_MANAGER_PROTOCOL *This, EFI_USER_PROFILE_HANDLE *User);
typedef EFI_STATUS (*EFI_USER_PROFILE_DELETE)(const EFI_USER_MANAGER_PROTOCOL *This, EFI_USER_PROFILE_HANDLE User);
typedef EFI_STATUS (*EFI_USER_PROFILE_NOTIFY)(const EFI_USER_MANAGER_PROTOCOL *This, EFI_HANDLE Changed);
typedef EFI_STATUS (*PERFORMANCE_START_GAUGE)(const void *Handle, const CHAR8 *Token, const CHAR8 *Module, UINT64 TimeStamp);
typedef EFI_STATUS (*EFI_CREDENTIAL2_DELETE)(const EFI_USER_CREDENTIAL2_PROTOCOL *This, EFI_USER_PROFILE_HANDLE User);
typedef EFI_STATUS (*EFI_CREDENTIAL2_ENROLL)(const EFI_USER_CREDENTIAL2_PROTOCOL *This, EFI_USER_PROFILE_HANDLE User);
typedef EFI_STATUS (*EFI_CREDENTIAL2_SELECT)(const EFI_USER_CREDENTIAL2_PROTOCOL *This, EFI_CREDENTIAL_LOGON_FLAGS *AutoLogon);
typedef EFI_STATUS (*EFI_CREDENTIAL_DEFAULT)(const EFI_USER_CREDENTIAL_PROTOCOL *This, EFI_CREDENTIAL_LOGON_FLAGS *AutoLogon);
typedef EFI_STATUS (*EFI_DHCP6_RENEW_REBIND)(EFI_DHCP6_PROTOCOL *This, BOOLEAN RebindRequest);
typedef EFI_STATUS (*EFI_DISK_INFO_IDENTIFY)(EFI_DISK_INFO_PROTOCOL *This, void *IdentifyData, UINT32 *IdentifyDataSize);
typedef EFI_STATUS (*EFI_DNS4_GET_MODE_DATA)(EFI_DNS4_PROTOCOL *This, EFI_DNS4_MODE_DATA *DnsModeData);
typedef EFI_STATUS (*EFI_DNS6_GET_MODE_DATA)(EFI_DNS6_PROTOCOL *This, EFI_DNS6_MODE_DATA *DnsModeData);
typedef EFI_STATUS (*EFI_EXIT_BOOT_SERVICES)(EFI_HANDLE ImageHandle, UINTN MapKey);
typedef EFI_STATUS (*EFI_FTP4_DATA_CALLBACK)(EFI_FTP4_PROTOCOL *This, EFI_FTP4_COMMAND_TOKEN *Token);
typedef EFI_STATUS (*EFI_FTP4_GET_MODE_DATA)(EFI_FTP4_PROTOCOL *This, EFI_FTP4_CONFIG_DATA *ModeData);
typedef EFI_STATUS (*EFI_FVB_GET_ATTRIBUTES)(const EFI_FIRMWARE_VOLUME_BLOCK2_PROTOCOL *This, EFI_FVB_ATTRIBUTES_2 *Attributes);
typedef EFI_STATUS (*EFI_FVB_SET_ATTRIBUTES)(const EFI_FIRMWARE_VOLUME_BLOCK2_PROTOCOL *This, EFI_FVB_ATTRIBUTES_2 *Attributes);
typedef EFI_STATUS (*EFI_HII_EXTRACT_CONFIG)(const EFI_HII_CONFIG_ROUTING_PROTOCOL *This, const EFI_STRING Request, EFI_STRING *Progress, EFI_STRING *Results);
typedef EFI_STATUS (*EFI_HTTP_GET_MODE_DATA)(EFI_HTTP_PROTOCOL *This, EFI_HTTP_CONFIG_DATA *HttpConfigData);
typedef EFI_STATUS (*EFI_LEGACY_REGION_LOCK)(EFI_LEGACY_REGION_PROTOCOL *This, UINT32 Start, UINT32 Length, UINT32 *Granularity);
typedef EFI_STATUS (*EFI_MP_SERVICES_WHOAMI)(EFI_MP_SERVICES_PROTOCOL *This, UINTN *ProcessorNumber);
typedef EFI_STATUS (*EFI_PXE_BASE_CODE_DHCP)(EFI_PXE_BASE_CODE_PROTOCOL *This, BOOLEAN SortOffers);
typedef EFI_STATUS (*EFI_SMMCORE_FREE_PAGES)(EFI_PHYSICAL_ADDRESS Memory, UINTN NumberOfPages);
typedef EFI_STATUS (*EFI_SMM_GPI_UNREGISTER)(EFI_SMM_GPI_DISPATCH_PROTOCOL *This, EFI_HANDLE DispatchHandle);
typedef EFI_STATUS (*EFI_SMM_SW_UNREGISTER2)(const EFI_SMM_SW_DISPATCH2_PROTOCOL *This, EFI_HANDLE DispatchHandle);
typedef EFI_STATUS (*EFI_SMM_SX_UNREGISTER2)(const EFI_SMM_SX_DISPATCH2_PROTOCOL *This, EFI_HANDLE DispatchHandle);
typedef EFI_STATUS (*EFI_SMM_USB_UNREGISTER)(EFI_SMM_USB_DISPATCH_PROTOCOL *This, EFI_HANDLE DispatchHandle);
typedef EFI_STATUS (*EFI_TEXT_ENABLE_CURSOR)(EFI_SIMPLE_TEXT_OUTPUT_PROTOCOL *This, BOOLEAN Visible);
typedef EFI_STATUS (*EFI_TEXT_SET_ATTRIBUTE)(EFI_SIMPLE_TEXT_OUTPUT_PROTOCOL *This, UINTN Attribute);
typedef EFI_STATUS (*EFI_VLAN_CONFIG_REMOVE)(EFI_VLAN_CONFIG_PROTOCOL *This, UINT16 VlanId);
typedef EFI_STATUS (*PCD_PPI_GET_NEXT_TOKEN)(const EFI_GUID *Guid, UINTN *TokenNumber);
typedef EFI_STATUS (*PCD_PPI_SET_EX_POINTER)(const EFI_GUID *Guid, UINTN TokenNumber, UINTN *SizeOfValue, void *Buffer);
typedef EFI_STATUS (*SHELLENV_FILE_META_ARG)(CHAR16 *Arg, LIST_ENTRY *ListHead);
typedef EFI_STATUS (*EFI_BOOT_SCRIPT_WRITE)(EFI_BOOT_SCRIPT_SAVE_PROTOCOL *This, UINT16 TableName, UINT16 OpCode, ...);
typedef EFI_STATUS (*EFI_CREDENTIAL_ENROLL)(const EFI_USER_CREDENTIAL_PROTOCOL *This, EFI_USER_PROFILE_HANDLE User);
typedef EFI_STATUS (*EFI_CREDENTIAL_SELECT)(const EFI_USER_CREDENTIAL_PROTOCOL *This, EFI_CREDENTIAL_LOGON_FLAGS *AutoLogon);
typedef EFI_STATUS (*EFI_DISK_INFO_INQUIRY)(EFI_DISK_INFO_PROTOCOL *This, void *InquiryData, UINT32 *InquiryDataSize);
typedef EFI_STATUS (*EFI_FILE_GET_POSITION)(EFI_FILE_PROTOCOL *This, UINT64 *Position);
typedef EFI_STATUS (*EFI_FILE_SET_POSITION)(EFI_FILE_PROTOCOL *This, UINT64 Position);
typedef EFI_STATUS (*EFI_FREE_MEMORY_SPACE)(EFI_PHYSICAL_ADDRESS BaseAddress, UINT64 Length);
typedef EFI_STATUS (*EFI_FV_GET_ATTRIBUTES)(const EFI_FIRMWARE_VOLUME2_PROTOCOL *This, EFI_FV_ATTRIBUTES *FvAttributes);
typedef EFI_STATUS (*EFI_FV_SET_ATTRIBUTES)(const EFI_FIRMWARE_VOLUME2_PROTOCOL *This, EFI_FV_ATTRIBUTES *FvAttributes);
typedef EFI_STATUS (*EFI_HII_EXPORT_CONFIG)(const EFI_HII_CONFIG_ROUTING_PROTOCOL *This, EFI_STRING *Results);
typedef EFI_STATUS (*EFI_HII_RESET_STRINGS)(EFI_HII_PROTOCOL *This, FRAMEWORK_EFI_HII_HANDLE Handle);
typedef EFI_STATUS (*EFI_IMAGE_ENTRY_POINT)(EFI_HANDLE ImageHandle, EFI_SYSTEM_TABLE *SystemTable);
typedef EFI_STATUS (*EFI_INPUT_READ_KEY_EX)(EFI_SIMPLE_TEXT_INPUT_EX_PROTOCOL *This, EFI_KEY_DATA *KeyData);
typedef EFI_STATUS (*EFI_MTFTP4_WRITE_FILE)(EFI_MTFTP4_PROTOCOL *This, EFI_MTFTP4_TOKEN *Token);
typedef EFI_STATUS (*EFI_MTFTP6_WRITE_FILE)(EFI_MTFTP6_PROTOCOL *This, EFI_MTFTP6_TOKEN *Token);
typedef EFI_STATUS (*EFI_PEIM_ENTRY_POINT2)(EFI_PEI_FILE_HANDLE FileHandle, const EFI_PEI_SERVICES **PeiServices);
typedef EFI_STATUS (*EFI_PEI_ALLOCATE_POOL)(const EFI_PEI_SERVICES **PeiServices, UINTN Size, void **Buffer);
typedef EFI_STATUS (*EFI_PEI_GET_BOOT_MODE)(const EFI_PEI_SERVICES **PeiServices, EFI_BOOT_MODE *BootMode);
typedef EFI_STATUS (*EFI_PEI_REINSTALL_PPI)(const EFI_PEI_SERVICES **PeiServices, const EFI_PEI_PPI_DESCRIPTOR *OldPpi, const EFI_PEI_PPI_DESCRIPTOR *NewPpi);
typedef void (*EFI_PEI_RESET2_SYSTEM)(EFI_RESET_TYPE ResetType, EFI_STATUS ResetStatus, UINTN DataSize, void *ResetData);
typedef EFI_STATUS (*EFI_PEI_SET_BOOT_MODE)(const EFI_PEI_SERVICES **PeiServices, EFI_BOOT_MODE BootMode);
typedef EFI_STATUS (*EFI_REST_SEND_RECEIVE)(EFI_REST_PROTOCOL *This, EFI_HTTP_MESSAGE *RequestMessage, EFI_HTTP_MESSAGE *ResponseMessage);
typedef EFI_STATUS (*EFI_SIO_GET_RESOURCES)(const EFI_SIO_PROTOCOL *This, ACPI_RESOURCE_HEADER_PTR *ResourceList);
typedef EFI_STATUS (*EFI_SIO_SET_RESOURCES)(const EFI_SIO_PROTOCOL *This, ACPI_RESOURCE_HEADER_PTR ResourceList);
typedef EFI_STATUS (*EFI_SMM_SW_UNREGISTER)(EFI_SMM_SW_DISPATCH_PROTOCOL *This, EFI_HANDLE DispatchHandle);
typedef EFI_STATUS (*EFI_SMM_SX_UNREGISTER)(EFI_SMM_SX_DISPATCH_PROTOCOL *This, EFI_HANDLE DispatchHandle);
typedef EFI_STATUS (*PERFORMANCE_END_GAUGE)(const void *Handle, const CHAR8 *Token, const CHAR8 *Module, UINT64 TimeStamp);
typedef EFI_STATUS (*PERFORMANCE_GET_GAUGE)(UINTN LogEntryKey, GAUGE_DATA_ENTRY **GaugeDataEntry);
struct _PERFORMANCE_PROTOCOL {PERFORMANCE_START_GAUGE StartGauge;PERFORMANCE_END_GAUGE EndGauge;PERFORMANCE_GET_GAUGE GetGauge;};
typedef EFI_STATUS (*EFI_EBC_CREATE_THUNK)(EFI_EBC_PROTOCOL *This, EFI_HANDLE ImageHandle, void *EbcEntryPoint, void **Thunk);
typedef EFI_STATUS (*EFI_EBC_UNLOAD_IMAGE)(EFI_EBC_PROTOCOL *This, EFI_HANDLE ImageHandle);
typedef EFI_STATUS (*EFI_GET_IO_SPACE_MAP)(UINTN *NumberOfDescriptors, EFI_GCD_IO_SPACE_DESCRIPTOR **IoSpaceMap);
typedef EFI_STATUS (*EFI_HASH2_HASH_FINAL)(const EFI_HASH2_PROTOCOL *This, EFI_HASH2_OUTPUT *Hash);
typedef EFI_STATUS (*EFI_HII_ROUTE_CONFIG)(const EFI_HII_CONFIG_ROUTING_PROTOCOL *This, const EFI_STRING Configuration, EFI_STRING *Progress);
typedef EFI_STATUS (*EFI_IP4_CONFIG_START)(EFI_IP4_CONFIG_PROTOCOL *This, EFI_EVENT DoneEvent, EFI_EVENT ReconfigEvent);
typedef EFI_STATUS (*EFI_MTFTP4_CONFIGURE)(EFI_MTFTP4_PROTOCOL *This, EFI_MTFTP4_CONFIG_DATA *MtftpConfigData);
typedef EFI_STATUS (*EFI_MTFTP4_READ_FILE)(EFI_MTFTP4_PROTOCOL *This, EFI_MTFTP4_TOKEN *Token);
typedef EFI_STATUS (*EFI_MTFTP6_CONFIGURE)(EFI_MTFTP6_PROTOCOL *This, EFI_MTFTP6_CONFIG_DATA *MtftpConfigData);
typedef EFI_STATUS (*EFI_MTFTP6_READ_FILE)(EFI_MTFTP6_PROTOCOL *This, EFI_MTFTP6_TOKEN *Token);
typedef EFI_STATUS (*EFI_PEIM_ENTRY_POINT)(EFI_FFS_FILE_HEADER *FfsHeader, EFI_PEI_SERVICES **PeiServices);
typedef EFI_STATUS (*EFI_SHELL_FIND_FILES)(const CHAR16 *FilePattern, EFI_SHELL_FILE_INFO **FileList);
typedef EFI_STATUS (*EFI_SHELL_WRITE_FILE)(SHELL_FILE_HANDLE FileHandle, UINTN *BufferSize, void *Buffer);
typedef EFI_STATUS (*EFI_SMM_COMMUNICATE2)(const EFI_SMM_COMMUNICATION_PROTOCOL *This, void *CommBuffer, UINTN *CommSize);
typedef EFI_STATUS (*EFI_TEXT_TEST_STRING)(EFI_SIMPLE_TEXT_OUTPUT_PROTOCOL *This, CHAR16 *String);
struct _EFI_PEI_CAPSULE_PPI {EFI_PEI_CAPSULE_COALESCE Coalesce;EFI_PEI_CAPSULE_CHECK_CAPSULE_UPDATE CheckCapsuleUpdate;EFI_PEI_CAPSULE_CREATE_STATE CreateState;};
typedef EFI_STATUS (*EFI_ACPI_SET_OPTION)(EFI_ACPI_HANDLE Handle, UINTN Index, const void *Data, UINTN DataSize);
typedef EFI_STATUS (*EFI_CALCULATE_CRC32)(void *Data, UINTN DataSize, UINT32 *Crc32);
typedef EFI_STATUS (*EFI_DHCP4_CONFIGURE)(EFI_DHCP4_PROTOCOL *This, EFI_DHCP4_CONFIG_DATA *Dhcp4CfgData);
typedef EFI_STATUS (*EFI_DHCP6_CONFIGURE)(EFI_DHCP6_PROTOCOL *This, EFI_DHCP6_CONFIG_DATA *Dhcp6CfgData);
typedef EFI_STATUS (*EFI_EBC_GET_VERSION)(EFI_EBC_PROTOCOL *This, UINT64 *Version);
typedef EFI_STATUS (*EFI_FTP4_WRITE_FILE)(EFI_FTP4_PROTOCOL *This, EFI_FTP4_COMMAND_TOKEN *Token);
typedef EFI_STATUS (*EFI_GET_WAKEUP_TIME)(BOOLEAN *Enabled, BOOLEAN *Pending, EFI_TIME *Time);
typedef EFI_STATUS (*EFI_HANDLE_PROTOCOL)(EFI_HANDLE Handle, EFI_GUID *Protocol, void **Interface);
typedef EFI_STATUS (*EFI_HASH2_HASH_INIT)(const EFI_HASH2_PROTOCOL *This, const EFI_GUID *HashAlgorithm);
typedef EFI_STATUS (*EFI_HII_REMOVE_PACK)(EFI_HII_PROTOCOL *This, FRAMEWORK_EFI_HII_HANDLE Handle);
typedef EFI_STATUS (*EFI_ISA_HC_CLOSE_IO)(const EFI_ISA_HC_PROTOCOL *This, UINT64 IoApertureHandle);
typedef EFI_STATUS (*EFI_PEI_INSTALL_PPI)(const EFI_PEI_SERVICES **PeiServices, const EFI_PEI_PPI_DESCRIPTOR *PpiList);
typedef EFI_STATUS (*EFI_REMOVE_IO_SPACE)(EFI_PHYSICAL_ADDRESS BaseAddress, UINT64 Length);
typedef EFI_STATUS (*EFI_SET_WAKEUP_TIME)(BOOLEAN Enable, EFI_TIME *Time);
typedef EFI_STATUS (*EFI_SHELL_OPEN_ROOT)(EFI_DEVICE_PATH_PROTOCOL *DevicePath, SHELL_FILE_HANDLE *FileHandle);
typedef EFI_STATUS (*EFI_SHELL_READ_FILE)(SHELL_FILE_HANDLE FileHandle, UINTN *ReadSize, void *Buffer);
typedef EFI_STATUS (*EFI_SHELL_SET_ALIAS)(const CHAR16 *Command, const CHAR16 *Alias, BOOLEAN Replace, BOOLEAN Volatile);
typedef EFI_STATUS (*EFI_SMM_DEACTIVATE2)(const EFI_SMM_CONTROL2_PROTOCOL *This, BOOLEAN Periodic);
typedef EFI_STATUS (*EFI_SMM_INSIDE_OUT2)(const EFI_SMM_BASE2_PROTOCOL *This, BOOLEAN *InSmram);
typedef EFI_STATUS (*EFI_TEXT_QUERY_MODE)(EFI_SIMPLE_TEXT_OUTPUT_PROTOCOL *This, UINTN ModeNumber, UINTN *Columns, UINTN *Rows);
typedef EFI_STATUS (*PCD_PPI_SET_BOOLEAN)(UINTN TokenNumber, BOOLEAN Value);
typedef EFI_STATUS (*TPM2_SUBMIT_COMMAND)(UINT32 InputParameterBlockSize, UINT8 *InputParameterBlock, UINT32 *OutputParameterBlockSize, UINT8 *OutputParameterBlock);
typedef EFI_STATUS (*EFI_BLOCK_FLUSH_EX)(EFI_BLOCK_IO2_PROTOCOL *This, EFI_BLOCK_IO2_TOKEN *Token);
typedef EFI_STATUS (*EFI_BLOCK_RESET_EX)(EFI_BLOCK_IO2_PROTOCOL *This, BOOLEAN ExtendedVerification);
typedef EFI_STATUS (*EFI_CLOSE_PROTOCOL)(EFI_HANDLE Handle, EFI_GUID *Protocol, EFI_HANDLE AgentHandle, EFI_HANDLE ControllerHandle);
typedef EFI_STATUS (*EFI_DNS4_CONFIGURE)(EFI_DNS4_PROTOCOL *This, EFI_DNS4_CONFIG_DATA *DnsConfigData);
typedef EFI_STATUS (*EFI_DNS6_CONFIGURE)(EFI_DNS6_PROTOCOL *This, EFI_DNS6_CONFIG_DATA *DnsConfigData);
typedef EFI_STATUS (*EFI_FTP4_CONFIGURE)(EFI_FTP4_PROTOCOL *This, EFI_FTP4_CONFIG_DATA *FtpConfigData);
typedef EFI_STATUS (*EFI_FTP4_READ_FILE)(EFI_FTP4_PROTOCOL *This, EFI_FTP4_COMMAND_TOKEN *Token);
typedef EFI_STATUS (*EFI_GET_DEBUG_MASK)(EFI_DEBUG_MASK_PROTOCOL *This, UINTN *CurrentDebugMask);
typedef EFI_STATUS (*EFI_GET_SWAP_STATE)(EFI_SWAP_ADDRESS_RANGE_PROTOCOL *This, BOOLEAN *SwapState);
typedef EFI_STATUS (*EFI_HTTP_CONFIGURE)(EFI_HTTP_PROTOCOL *This, EFI_HTTP_CONFIG_DATA *HttpConfigData);
typedef EFI_STATUS (*EFI_INPUT_READ_KEY)(EFI_SIMPLE_TEXT_INPUT_PROTOCOL *This, EFI_INPUT_KEY *Key);
typedef EFI_STATUS (*EFI_INPUT_RESET_EX)(EFI_SIMPLE_TEXT_INPUT_EX_PROTOCOL *This, BOOLEAN ExtendedVerification);
typedef EFI_STATUS (*EFI_PEI_CREATE_HOB)(const EFI_PEI_SERVICES **PeiServices, UINT16 Type, UINT16 Length, void **Hob);
typedef EFI_STATUS (*EFI_PEI_NOTIFY_PPI)(const EFI_PEI_SERVICES **PeiServices, const EFI_PEI_NOTIFY_DESCRIPTOR *NotifyList);
typedef EFI_STATUS (*EFI_SET_DEBUG_MASK)(EFI_DEBUG_MASK_PROTOCOL *This, UINTN NewDebugMask);
typedef EFI_STATUS (*EFI_SET_SWAP_STATE)(EFI_SWAP_ADDRESS_RANGE_PROTOCOL *This, BOOLEAN NewSwapState);
typedef EFI_STATUS (*EFI_SMM_DEACTIVATE)(EFI_SMM_CONTROL_PROTOCOL *This, BOOLEAN Periodic);
typedef EFI_STATUS (*EFI_SMM_INSIDE_OUT)(EFI_SMM_BASE_PROTOCOL *This, BOOLEAN *InSmm);
typedef EFI_STATUS (*EFI_TCP4_CONFIGURE)(EFI_TCP4_PROTOCOL *This, EFI_TCP4_CONFIG_DATA *TcpConfigData);
typedef EFI_STATUS (*EFI_TCP6_CONFIGURE)(EFI_TCP6_PROTOCOL *This, EFI_TCP6_CONFIG_DATA *Tcp6ConfigData);
typedef EFI_STATUS (*EFI_UDP4_CONFIGURE)(EFI_UDP4_PROTOCOL *This, EFI_UDP4_CONFIG_DATA *UdpConfigData);
typedef EFI_STATUS (*EFI_UDP6_CONFIGURE)(EFI_UDP6_PROTOCOL *This, EFI_UDP6_CONFIG_DATA *UdpConfigData);
typedef EFI_STATUS (*EFI_WAIT_FOR_EVENT)(UINTN NumberOfEvents, EFI_EVENT *Event, UINTN *Index);
typedef EFI_STATUS (*PCD_PROTOCOL_SET16)(UINTN TokenNumber, UINT16 Value);
typedef EFI_STATUS (*PCD_PROTOCOL_SET32)(UINTN TokenNumber, UINT32 Value);
typedef EFI_STATUS (*PCD_PROTOCOL_SET64)(UINTN TokenNumber, UINT64 Value);
typedef EFI_STATUS (*PEI_USB_PORT_RESET)(EFI_PEI_SERVICES **PeiServices, PEI_USB_IO_PPI *This);
typedef EFI_STATUS (*EFI_ACPI_OPEN_SDT)(UINTN TableKey, EFI_ACPI_HANDLE *Handle);
typedef EFI_STATUS (*EFI_ALLOCATE_POOL)(EFI_MEMORY_TYPE PoolType, UINTN Size, void **Buffer);
typedef EFI_STATUS (*EFI_ARP_CONFIGURE)(EFI_ARP_PROTOCOL *This, EFI_ARP_CONFIG_DATA *ConfigData);
typedef EFI_STATUS (*EFI_DISK_FLUSH_EX)(EFI_DISK_IO2_PROTOCOL *This, EFI_DISK_IO2_TOKEN *Token);
typedef EFI_STATUS (*EFI_FILE_FLUSH_EX)(EFI_FILE_PROTOCOL *This, EFI_FILE_IO_TOKEN *Token);
typedef EFI_STATUS (*EFI_FILE_WRITE_EX)(EFI_FILE_PROTOCOL *This, EFI_FILE_IO_TOKEN *Token);
typedef EFI_STATUS (*EFI_FREE_IO_SPACE)(EFI_PHYSICAL_ADDRESS BaseAddress, UINT64 Length);
typedef EFI_STATUS (*EFI_HTTP_RESPONSE)(EFI_HTTP_PROTOCOL *This, EFI_HTTP_TOKEN *Token);
typedef EFI_STATUS (*EFI_IP4_CONFIGURE)(EFI_IP4_PROTOCOL *This, EFI_IP4_CONFIG_DATA *IpConfigData);
typedef EFI_STATUS (*EFI_IP6_CONFIGURE)(EFI_IP6_PROTOCOL *This, EFI_IP6_CONFIG_DATA *Ip6ConfigData);
typedef EFI_STATUS (*EFI_REST_GET_TIME)(EFI_REST_PROTOCOL *This, EFI_TIME *Time);
typedef EFI_STATUS (*EFI_SHELL_EXECUTE)(EFI_HANDLE *ParentImageHandle, CHAR16 *CommandLine, CHAR16 **Environment, EFI_STATUS *StatusCode);
typedef EFI_STATUS (*EFI_SHELL_SET_ENV)(const CHAR16 *Name, const CHAR16 *Value, BOOLEAN Volatile);
typedef EFI_STATUS (*EFI_SHELL_SET_MAP)(const EFI_DEVICE_PATH_PROTOCOL *DevicePath, const CHAR16 *Mapping);
typedef EFI_STATUS (*EFI_SMBIOS_REMOVE)(const EFI_SMBIOS_PROTOCOL *This, EFI_SMBIOS_HANDLE SmbiosHandle);
typedef EFI_STATUS (*EFI_SMM_NOTIFY_FN)(const EFI_GUID *Protocol, void *Interface, EFI_HANDLE Handle);
typedef EFI_STATUS (*EFI_TCP4_TRANSMIT)(EFI_TCP4_PROTOCOL *This, EFI_TCP4_IO_TOKEN *Token);
typedef EFI_STATUS (*EFI_TCP6_TRANSMIT)(EFI_TCP6_PROTOCOL *This, EFI_TCP6_IO_TOKEN *Token);
typedef EFI_STATUS (*EFI_TEXT_SET_MODE)(EFI_SIMPLE_TEXT_OUTPUT_PROTOCOL *This, UINTN ModeNumber);
typedef EFI_STATUS (*EFI_UDP4_TRANSMIT)(EFI_UDP4_PROTOCOL *This, EFI_UDP4_COMPLETION_TOKEN *Token);
typedef EFI_STATUS (*EFI_UDP6_TRANSMIT)(EFI_UDP6_PROTOCOL *This, EFI_UDP6_COMPLETION_TOKEN *Token);
typedef EFI_STATUS (*PCD_PROTOCOL_SET8)(UINTN TokenNumber, UINT8 Value);
typedef EFI_STATUS (*EBC_ICACHE_FLUSH)(EFI_PHYSICAL_ADDRESS Start, UINT64 Length);
typedef EFI_STATUS (*EFI_FILE_READ_EX)(EFI_FILE_PROTOCOL *This, EFI_FILE_IO_TOKEN *Token);
typedef EFI_STATUS (*EFI_FTP4_CONNECT)(EFI_FTP4_PROTOCOL *This, EFI_FTP4_CONNECTION_TOKEN *Token);
typedef EFI_STATUS (*EFI_HTTP_REQUEST)(EFI_HTTP_PROTOCOL *This, EFI_HTTP_TOKEN *Token);
typedef EFI_STATUS (*EFI_IP4_TRANSMIT)(EFI_IP4_PROTOCOL *This, EFI_IP4_COMPLETION_TOKEN *Token);
typedef EFI_STATUS (*EFI_IP6_TRANSMIT)(EFI_IP6_PROTOCOL *This, EFI_IP6_COMPLETION_TOKEN *Token);
typedef void (*EFI_RESET_SYSTEM)(EFI_RESET_TYPE ResetType, EFI_STATUS ResetStatus, UINTN DataSize, void *ResetData);
typedef EFI_STATUS (*EFI_SERIAL_WRITE)(EFI_SERIAL_IO_PROTOCOL *This, UINTN *BufferSize, void *Buffer);
typedef EFI_STATUS (*EFI_TAPE_WRITEFM)(EFI_TAPE_IO_PROTOCOL *This, UINTN Count);
typedef EFI_STATUS (*EFI_TCP4_CONNECT)(EFI_TCP4_PROTOCOL *This, EFI_TCP4_CONNECTION_TOKEN *ConnectionToken);
typedef EFI_STATUS (*EFI_TCP4_RECEIVE)(EFI_TCP4_PROTOCOL *This, EFI_TCP4_IO_TOKEN *Token);
typedef EFI_STATUS (*EFI_TCP6_CONNECT)(EFI_TCP6_PROTOCOL *This, EFI_TCP6_CONNECTION_TOKEN *ConnectionToken);
typedef EFI_STATUS (*EFI_TCP6_RECEIVE)(EFI_TCP6_PROTOCOL *This, EFI_TCP6_IO_TOKEN *Token);
typedef EFI_STATUS (*EFI_UDP4_RECEIVE)(EFI_UDP4_PROTOCOL *This, EFI_UDP4_COMPLETION_TOKEN *Token);
typedef EFI_STATUS (*EFI_UDP6_RECEIVE)(EFI_UDP6_PROTOCOL *This, EFI_UDP6_COMPLETION_TOKEN *Token);
typedef EFI_STATUS (*NET_MAP_CALLBACK)(NET_MAP *Map, NET_MAP_ITEM *Item, void *Arg);
typedef EFI_STATUS (*NT_PEI_LOAD_FILE)(void *Pe32Data, EFI_PHYSICAL_ADDRESS *ImageAddress, UINT64 *ImageSize, EFI_PHYSICAL_ADDRESS *EntryPoint);
typedef UINTN (*UNICODE_BS_PRINT)(CHAR16 *StartOfBuffer, UINTN BufferSize, const CHAR16 *FormatString, BASE_LIST Marker);
typedef EFI_STATUS (*EFI_ARP_REQUEST)(EFI_ARP_PROTOCOL *This, void *TargetSwAddress, EFI_EVENT ResolvedEvent, void *TargetHwAddress);
typedef EFI_STATUS (*EFI_BLOCK_RESET)(EFI_BLOCK_IO_PROTOCOL *This, BOOLEAN ExtendedVerification);
typedef EFI_STATUS (*EFI_DHCP4_START)(EFI_DHCP4_PROTOCOL *This, EFI_EVENT CompletionEvent);
typedef EFI_STATUS (*EFI_DNS4_CANCEL)(EFI_DNS4_PROTOCOL *This, EFI_DNS4_COMPLETION_TOKEN *Token);
typedef EFI_STATUS (*EFI_DNS6_CANCEL)(EFI_DNS6_PROTOCOL *This, EFI_DNS6_COMPLETION_TOKEN *Token);
typedef EFI_STATUS (*EFI_HTTP_CANCEL)(EFI_HTTP_PROTOCOL *This, EFI_HTTP_TOKEN *Token);
typedef EFI_STATUS (*EFI_INPUT_RESET)(EFI_SIMPLE_TEXT_INPUT_PROTOCOL *This, BOOLEAN ExtendedVerification);
typedef EFI_STATUS (*EFI_IP4_RECEIVE)(EFI_IP4_PROTOCOL *This, EFI_IP4_COMPLETION_TOKEN *Token);
typedef EFI_STATUS (*EFI_IP6_RECEIVE)(EFI_IP6_PROTOCOL *This, EFI_IP6_COMPLETION_TOKEN *Token);
typedef EFI_STATUS (*EFI_SERIAL_READ)(EFI_SERIAL_IO_PROTOCOL *This, UINTN *BufferSize, void *Buffer);
typedef EFI_STATUS (*EFI_TCP4_ACCEPT)(EFI_TCP4_PROTOCOL *This, EFI_TCP4_LISTEN_TOKEN *ListenToken);
typedef EFI_STATUS (*EFI_TCP4_CANCEL)(EFI_TCP4_PROTOCOL *This, EFI_TCP4_COMPLETION_TOKEN *Token);
typedef EFI_STATUS (*EFI_TCP6_ACCEPT)(EFI_TCP6_PROTOCOL *This, EFI_TCP6_LISTEN_TOKEN *ListenToken);
typedef EFI_STATUS (*EFI_TCP6_CANCEL)(EFI_TCP6_PROTOCOL *This, EFI_TCP6_COMPLETION_TOKEN *Token);
typedef EFI_STATUS (*EFI_TEXT_STRING)(EFI_SIMPLE_TEXT_OUTPUT_PROTOCOL *This, CHAR16 *String);
typedef EFI_STATUS (*EFI_UDP4_CANCEL)(EFI_UDP4_PROTOCOL *This, EFI_UDP4_COMPLETION_TOKEN *Token);
typedef EFI_STATUS (*EFI_UDP6_CANCEL)(EFI_UDP6_PROTOCOL *This, EFI_UDP6_COMPLETION_TOKEN *Token);
typedef void (*UDP_IO_CALLBACK)(NET_BUF *Packet, UDP_END_POINT *EndPoint, EFI_STATUS IoStatus, void *Context);
typedef EFI_STATUS (*UNLOAD_PE_IMAGE)(EFI_PE32_IMAGE_PROTOCOL *This, EFI_HANDLE ImageHandle);
typedef UINTN (*ASCII_BS_PRINT)(CHAR8 *StartOfBuffer, UINTN BufferSize, const CHAR8 *FormatString, BASE_LIST Marker);
typedef EFI_STATUS (*EFI_ARP_CANCEL)(EFI_ARP_PROTOCOL *This, void *TargetSwAddress, EFI_EVENT ResolvedEvent);
typedef EFI_STATUS (*EFI_ARP_DELETE)(EFI_ARP_PROTOCOL *This, BOOLEAN BySwAddress, void *AddressBuffer);
typedef EFI_STATUS (*EFI_FILE_WRITE)(EFI_FILE_PROTOCOL *This, UINTN *BufferSize, void *Buffer);
typedef EFI_STATUS (*EFI_FREE_PAGES)(EFI_PHYSICAL_ADDRESS Memory, UINTN Pages);
typedef EFI_STATUS (*EFI_FTP4_CLOSE)(EFI_FTP4_PROTOCOL *This, EFI_FTP4_CONNECTION_TOKEN *Token);
typedef EFI_STATUS (*EFI_IP4_CANCEL)(EFI_IP4_PROTOCOL *This, EFI_IP4_COMPLETION_TOKEN *Token);
typedef EFI_STATUS (*EFI_IP6_CANCEL)(EFI_IP6_PROTOCOL *This, EFI_IP6_COMPLETION_TOKEN *Token);
typedef EFI_STATUS (*EFI_TAPE_RESET)(EFI_TAPE_IO_PROTOCOL *This, BOOLEAN ExtendedVerification);
typedef EFI_STATUS (*EFI_TAPE_WRITE)(EFI_TAPE_IO_PROTOCOL *This, UINTN *BufferSize, void *Buffer);
typedef EFI_STATUS (*EFI_TCP4_CLOSE)(EFI_TCP4_PROTOCOL *This, EFI_TCP4_CLOSE_TOKEN *CloseToken);
typedef EFI_STATUS (*EFI_TCP6_CLOSE)(EFI_TCP6_PROTOCOL *This, EFI_TCP6_CLOSE_TOKEN *CloseToken);
typedef EFI_STATUS (*EFI_TEXT_RESET)(EFI_SIMPLE_TEXT_OUTPUT_PROTOCOL *This, BOOLEAN ExtendedVerification);
typedef EFI_STATUS (*EXECUTE_ACTION)(UINT32 Action, UINT16 DefaultId);
typedef EFI_STATUS (*GET_ESRT_ENTRY)(EFI_GUID *FwClass, EFI_SYSTEM_RESOURCE_ENTRY *Entry);
typedef EFI_STATUS (*EFI_FILE_READ)(EFI_FILE_PROTOCOL *This, UINTN *BufferSize, void *Buffer);
typedef EFI_STATUS (*EFI_SET_STATE)(EFI_SIMPLE_TEXT_INPUT_EX_PROTOCOL *This, EFI_KEY_TOGGLE_STATE *KeyToggleState);
typedef EFI_STATUS (*EFI_SMM_CLOSE)(EFI_SMM_ACCESS_PROTOCOL *This, UINTN DescriptorIndex);
typedef EFI_STATUS (*EFI_TAPE_READ)(EFI_TAPE_IO_PROTOCOL *This, UINTN *BufferSize, void *Buffer);
typedef EFI_STATUS (*PCD_PPI_SET16)(UINTN TokenNumber, UINT16 Value);
typedef EFI_STATUS (*PCD_PPI_SET32)(UINTN TokenNumber, UINT32 Value);
typedef EFI_STATUS (*PCD_PPI_SET64)(UINTN TokenNumber, UINT64 Value);
typedef EFI_STATUS (*EFI_BIS_FREE)(BIS_APPLICATION_HANDLE AppHandle, EFI_BIS_DATA *ToFree);
typedef EFI_STATUS (*EFI_CPU_INIT)(EFI_CPU_ARCH_PROTOCOL *This, EFI_CPU_INIT_TYPE InitType);
typedef EFI_STATUS (*EFI_GET_TIME)(EFI_TIME *Time, EFI_TIME_CAPABILITIES *Capabilities);
typedef EFI_STATUS (*EFI_SCHEDULE)(EFI_HANDLE FirmwareVolumeHandle, const EFI_GUID *FileName);
typedef EFI_STATUS (*EFI_SMM_LOCK)(EFI_SMM_ACCESS_PROTOCOL *This, UINTN DescriptorIndex);
typedef EFI_STATUS (*EFI_SMM_OPEN)(EFI_SMM_ACCESS_PROTOCOL *This, UINTN DescriptorIndex);
typedef EFI_STATUS (*FORM_DISPLAY)(FORM_DISPLAY_ENGINE_FORM *FormData, USER_INPUT *UserInputData);
typedef EFI_STATUS (*PCD_PPI_SET8)(UINTN TokenNumber, UINT8 Value);
typedef EFI_STATUS (*HASH_UPDATE)(HASH_HANDLE HashHandle, void *DataToHash, UINTN DataToHashLen);
typedef EFI_STATUS (*HASH_FINAL)(HASH_HANDLE HashHandle, TPML_DIGEST_VALUES *DigestList);
typedef EFI_STATUS (*EFI_TRUST)(EFI_HANDLE FirmwareVolumeHandle, const EFI_GUID *FileName);
typedef EFI_STATUS (*EFI_I2C_BUS_CONFIGURATION_MANAGEMENT_PROTOCOL_ENABLE_I2C_BUS_CONFIGURATION)(const EFI_I2C_BUS_CONFIGURATION_MANAGEMENT_PROTOCOL *This, UINTN I2cBusConfiguration, EFI_EVENT Event, EFI_STATUS *I2cStatus);
typedef EFI_STATUS (*EFI_PCI_HOST_BRIDGE_RESOURCE_ALLOCATION_PROTOCOL_GET_ATTRIBUTES)(EFI_PCI_HOST_BRIDGE_RESOURCE_ALLOCATION_PROTOCOL *This, EFI_HANDLE RootBridgeHandle, UINT64 *Attributes);
typedef EFI_STATUS (*EFI_BLUETOOTH_CONFIG_REGISTER_GET_LINK_KEY_CALLBACK_FUNCTION)(EFI_BLUETOOTH_CONFIG_PROTOCOL *This, void *Context, BLUETOOTH_ADDRESS *BDAddr,UINT8  *    LinkKey);
typedef EFI_STATUS (*EFI_BLUETOOTH_CONFIG_REGISTER_SET_LINK_KEY_CALLBACK_FUNCTION)(EFI_BLUETOOTH_CONFIG_PROTOCOL *This, void *Context, BLUETOOTH_ADDRESS *BDAddr,UINT8  *    LinkKey);
typedef EFI_STATUS (*EFI_BLUETOOTH_CONFIG_REGISTER_PIN_CALLBACK_FUNCTION)(EFI_BLUETOOTH_CONFIG_PROTOCOL *This, void *Context, EFI_BLUETOOTH_PIN_CALLBACK_TYPE CallbackType, void *InputBuffer, UINTN InputBufferSize, void **OutputBuffer, UINTN *OutputBufferSize);
typedef EFI_STATUS (*PEI_USB2_HOST_CONTROLLER_GET_ROOTHUB_PORT_NUMBER)(EFI_PEI_SERVICES **PeiServices, PEI_USB2_HOST_CONTROLLER_PPI *This, UINT8 *PortNumber);
typedef EFI_STATUS (*EFI_USB2_HC_PROTOCOL_CLEAR_ROOTHUB_PORT_FEATURE)(EFI_USB2_HC_PROTOCOL *This, UINT8 PortNumber, EFI_USB_PORT_FEATURE PortFeature);
typedef EFI_STATUS (*PEI_USB_HOST_CONTROLLER_GET_ROOTHUB_PORT_NUMBER)(EFI_PEI_SERVICES **PeiServices, PEI_USB_HOST_CONTROLLER_PPI *This, UINT8 *PortNumber);
typedef EFI_STATUS (*EFI_USB_HC_PROTOCOL_CLEAR_ROOTHUB_PORT_FEATURE)(EFI_USB_HC_PROTOCOL *This, UINT8 PortNumber, EFI_USB_PORT_FEATURE PortFeature);
typedef EFI_STATUS (*EFI_USB2_HC_PROTOCOL_SET_ROOTHUB_PORT_FEATURE)(EFI_USB2_HC_PROTOCOL *This, UINT8 PortNumber, EFI_USB_PORT_FEATURE PortFeature);
typedef EFI_STATUS (*EDKII_VARIABLE_LOCK_PROTOCOL_REQUEST_TO_LOCK)(const EDKII_VARIABLE_LOCK_PROTOCOL *This, CHAR16 *VariableName, EFI_GUID *VendorGuid);
typedef EFI_STATUS (*EFI_PEI_MP_SERVICES_GET_NUMBER_OF_PROCESSORS)(const EFI_PEI_SERVICES **PeiServices, EFI_PEI_MP_SERVICES_PPI *This, UINTN *NumberOfProcessors, UINTN *NumberOfEnabledProcessors);
typedef EFI_STATUS (*EFI_PLATFORM_DRIVER_OVERRIDE_GET_DRIVER_PATH)(EFI_PLATFORM_DRIVER_OVERRIDE_PROTOCOL *This, EFI_HANDLE ControllerHandle, EFI_DEVICE_PATH_PROTOCOL **DriverImagePath);
typedef EFI_STATUS (*EFI_USB2_HC_PROTOCOL_GET_ROOTHUB_PORT_STATUS)(EFI_USB2_HC_PROTOCOL *This, UINT8 PortNumber, EFI_USB_PORT_STATUS *PortStatus);
typedef EFI_STATUS (*EFI_USB_HC_PROTOCOL_SET_ROOTHUB_PORT_FEATURE)(EFI_USB_HC_PROTOCOL *This, UINT8 PortNumber, EFI_USB_PORT_FEATURE PortFeature);
typedef EFI_STATUS (*EFI_BOOT_MANAGER_POLICY_CONNECT_DEVICE_PATH)(EFI_BOOT_MANAGER_POLICY_PROTOCOL *This, EFI_DEVICE_PATH *DevicePath, BOOLEAN Recursive);
typedef EFI_STATUS (*EFI_NVM_EXPRESS_PASS_THRU_BUILD_DEVICE_PATH)(EFI_NVM_EXPRESS_PASS_THRU_PROTOCOL *This, UINT32 NamespaceId, EFI_DEVICE_PATH_PROTOCOL **DevicePath);
typedef EFI_STATUS (*EFI_PCI_ROOT_BRIDGE_IO_PROTOCOL_POLL_IO_MEM)(EFI_PCI_ROOT_BRIDGE_IO_PROTOCOL *This, EFI_PCI_ROOT_BRIDGE_IO_PROTOCOL_WIDTH Width, UINT64 Address, UINT64 Mask, UINT64 Value, UINT64 Delay, UINT64 *Result);
typedef EFI_STATUS (*EFI_USB_HC_PROTOCOL_GET_ROOTHUB_PORT_STATUS)(EFI_USB_HC_PROTOCOL *This, UINT8 PortNumber, EFI_USB_PORT_STATUS *PortStatus);
typedef EFI_STATUS (*EFI_EXT_SCSI_PASS_THRU_GET_NEXT_TARGET_LUN)(EFI_EXT_SCSI_PASS_THRU_PROTOCOL *This, UINT8 **Target, UINT64 *Lun);
typedef EFI_STATUS (*EFI_FIRMWARE_MANAGEMENT_PROTOCOL_GET_IMAGE)(EFI_FIRMWARE_MANAGEMENT_PROTOCOL *This, UINT8 ImageIndex, void *Image, UINTN *ImageSize);
typedef EFI_STATUS (*EFI_LEGACY_BIOS_BOOT_UNCONVENTIONAL_DEVICE)(EFI_LEGACY_BIOS_PROTOCOL *This, UDC_ATTRIBUTES Attributes, UINTN BbsEntry, void *BeerData, void *ServiceAreaData);
typedef EFI_STATUS (*EFI_PEI_DEVICE_GET_NUMBER_RECOVERY_CAPSULE)(EFI_PEI_SERVICES **PeiServices, EFI_PEI_DEVICE_RECOVERY_MODULE_PPI *This, UINTN *NumberRecoveryCapsules);
typedef EFI_STATUS (*EFI_PLATFORM_DRIVER_OVERRIDE_DRIVER_LOADED)(EFI_PLATFORM_DRIVER_OVERRIDE_PROTOCOL *This, EFI_HANDLE ControllerHandle, EFI_DEVICE_PATH_PROTOCOL *DriverImagePath, EFI_HANDLE DriverImageHandle);
typedef EFI_STATUS (*SECURITY_FILE_AUTHENTICATION_STATE_HANDLER)(UINT32 AuthenticationStatus, const EFI_DEVICE_PATH_PROTOCOL *File, void *FileBuffer, UINTN FileSize);
typedef EFI_STATUS (*EFI_LEGACY_BIOS_PLATFORM_PREPARE_TO_BOOT)(EFI_LEGACY_BIOS_PLATFORM_PROTOCOL *This, BBS_BBS_DEVICE_PATH *BbsDevicePath, void *BbsTable, UINT32 LoadOptionsSize, void *LoadOptions, void *EfiToLegacy16BootTable);
typedef EFI_STATUS (*EFI_SCSI_IO_PROTOCOL_GET_DEVICE_LOCATION)(EFI_SCSI_IO_PROTOCOL *This, UINT8 **Target, UINT64 *Lun);
typedef EFI_STATUS (*EFI_EXT_SCSI_PASS_THRU_RESET_TARGET_LUN)(EFI_EXT_SCSI_PASS_THRU_PROTOCOL *This, UINT8 *Target, UINT64 Lun);
typedef EFI_STATUS (*EFI_LEGACY_BIOS_PLATFORM_TRANSLATE_PIRQ)(EFI_LEGACY_BIOS_PLATFORM_PROTOCOL *This, UINTN PciBus, UINTN PciDevice, UINTN PciFunction, UINT8 *Pirq, UINT8 *PciIrq);
typedef EFI_STATUS (*EFI_NVM_EXPRESS_PASS_THRU_GET_NAMESPACE)(EFI_NVM_EXPRESS_PASS_THRU_PROTOCOL *This, EFI_DEVICE_PATH_PROTOCOL *DevicePath, UINT32 *NamespaceId);
typedef EFI_STATUS (*EFI_PCI_IO_PROTOCOL_GET_BAR_ATTRIBUTES)(EFI_PCI_IO_PROTOCOL *This, UINT8 BarIndex, UINT64 *Supports, void **Resources);
typedef EFI_STATUS (*EFI_PCI_IO_PROTOCOL_SET_BAR_ATTRIBUTES)(EFI_PCI_IO_PROTOCOL *This, UINT64 Attributes, UINT8 BarIndex, UINT64 *Offset, UINT64 *Length);
typedef EFI_STATUS (*EFI_SCSI_IO_PROTOCOL_EXEC_SCSI_COMMAND)(EFI_SCSI_IO_PROTOCOL *This, EFI_SCSI_IO_SCSI_REQUEST_PACKET *Packet, EFI_EVENT Event);
typedef EFI_STATUS (*EFI_SECURITY_FILE_AUTHENTICATION_STATE)(const EFI_SECURITY_ARCH_PROTOCOL *This, UINT32 AuthenticationStatus, const EFI_DEVICE_PATH_PROTOCOL *File);
typedef EFI_STATUS (*EDKII_VAR_CHECK_VARIABLE_PROPERTY_GET)(CHAR16 *Name, EFI_GUID *Guid, VAR_CHECK_VARIABLE_PROPERTY *VariableProperty);
typedef EFI_STATUS (*EDKII_VAR_CHECK_VARIABLE_PROPERTY_SET)(CHAR16 *Name, EFI_GUID *Guid, VAR_CHECK_VARIABLE_PROPERTY *VariableProperty);
typedef EFI_STATUS (*EFI_BIS_VERIFY_OBJECT_WITH_CREDENTIAL)(BIS_APPLICATION_HANDLE AppHandle, EFI_BIS_DATA *Credentials, EFI_BIS_DATA *DataObject, EFI_BIS_DATA *SectionName, EFI_BIS_DATA *AuthorityCertificate, BOOLEAN *IsVerified);
typedef EFI_STATUS (*EFI_MP_SERVICES_GET_PROCESSOR_CONTEXT)(FRAMEWORK_EFI_MP_SERVICES_PROTOCOL *This, UINTN ProcessorNumber, UINTN *BufferLength, EFI_MP_PROC_CONTEXT *ProcessorContextBuffer);
typedef EFI_STATUS (*EFI_SMART_CARD_EDGE_GET_PIN_REMAINING)(EFI_SMART_CARD_EDGE_PROTOCOL *This, EFI_HANDLE SCardHandle, UINT32 *RemainingAttempts);
typedef EFI_STATUS (*FRAMEWORK_EFI_HII_GET_KEYBOARD_LAYOUT)(EFI_HII_PROTOCOL *This, UINT16 *DescriptorCount, FRAMEWORK_EFI_KEY_DESCRIPTOR *Descriptor);
typedef EFI_STATUS (*EFI_ADAPTER_INFO_GET_SUPPORTED_TYPES)(EFI_ADAPTER_INFORMATION_PROTOCOL *This, EFI_GUID **InfoTypesBuffer, UINTN *InfoTypesBufferCount);
typedef EFI_STATUS (*EFI_BLUETOOTH_IO_L2CAP_ASYNC_RECEIVE)(EFI_BLUETOOTH_IO_PROTOCOL *This, EFI_HANDLE Handle, EFI_BLUETOOTH_IO_CHANNEL_SERVICE_CALLBACK Callback, void *Context);
typedef EFI_STATUS (*EFI_PEI_DEVICE_LOAD_RECOVERY_CAPSULE)(EFI_PEI_SERVICES **PeiServices, EFI_PEI_DEVICE_RECOVERY_MODULE_PPI *This, UINTN CapsuleInstance, void *Buffer);
typedef EFI_STATUS (*EFI_PEI_I2C_MASTER_PPI_START_REQUEST)(const EFI_PEI_I2C_MASTER_PPI *This, UINTN SlaveAddress, EFI_I2C_REQUEST_PACKET *RequestPacket);
typedef EFI_STATUS (*EFI_SMM_INSTALL_CONFIGURATION_TABLE2)(const EFI_SMM_SYSTEM_TABLE2 *SystemTable, const EFI_GUID *Guid, void *Table, UINTN TableSize);
typedef EFI_STATUS (*FRAMEWORK_EFI_MP_SERVICES_SWITCH_BSP)(FRAMEWORK_EFI_MP_SERVICES_PROTOCOL *This, UINTN ProcessorNumber, BOOLEAN EnableOldBSP);
typedef EFI_STATUS (*EFI_ATA_PASS_THRU_BUILD_DEVICE_PATH)(EFI_ATA_PASS_THRU_PROTOCOL *This, UINT16 Port, UINT16 PortMultiplierPort, EFI_DEVICE_PATH_PROTOCOL **DevicePath);
typedef EFI_STATUS (*EFI_COMPONENT_NAME2_GET_DRIVER_NAME)(EFI_COMPONENT_NAME2_PROTOCOL *This, CHAR8 *Language, CHAR16 **DriverName);
typedef EFI_STATUS (*EFI_CONFIG_KEYWORD_HANDLER_GET_DATA)(EFI_CONFIG_KEYWORD_HANDLER_PROTOCOL *This, const EFI_STRING NameSpaceId, const EFI_STRING KeywordString, EFI_STRING *Progress, UINT32 *ProgressErr, EFI_STRING *Results);
typedef EFI_STATUS (*EFI_CONFIG_KEYWORD_HANDLER_SET_DATA)(EFI_CONFIG_KEYWORD_HANDLER_PROTOCOL *This, const EFI_STRING KeywordString, EFI_STRING *Progress, UINT32 *ProgressErr);
typedef EFI_STATUS (*EFI_IDE_CONTROLLER_GET_CHANNEL_INFO)(EFI_IDE_CONTROLLER_INIT_PROTOCOL *This, UINT8 Channel, BOOLEAN *Enabled, UINT8 *MaxDevices);
typedef EFI_STATUS (*EFI_LEGACY_BIOS_PREPARE_TO_BOOT_EFI)(EFI_LEGACY_BIOS_PROTOCOL *This, UINT16 *BbsCount, BBS_TABLE **BbsTable);
typedef EFI_STATUS (*EFI_SMM_INSTALL_CONFIGURATION_TABLE)(EFI_SMM_SYSTEM_TABLE *SystemTable, EFI_GUID *Guid, void *Table, UINTN TableSize);
typedef EFI_STATUS (*EXTENDED_SAL_REGISTER_INTERNAL_PROC)(EXTENDED_SAL_BOOT_SERVICE_PROTOCOL *This, UINT64 ClassGuidLo, UINT64 ClassGuidHi, UINT64 FunctionId, SAL_INTERNAL_EXTENDED_SAL_PROC InternalSalProc, void *PhysicalModuleGlobal);
typedef EFI_STATUS (*EFI_COMPONENT_NAME_GET_DRIVER_NAME)(EFI_COMPONENT_NAME_PROTOCOL *This, CHAR8 *Language, CHAR16 **DriverName);
typedef EFI_STATUS (*EFI_CPU_REGISTER_INTERRUPT_HANDLER)(EFI_CPU_ARCH_PROTOCOL *This, EFI_EXCEPTION_TYPE InterruptType, EFI_CPU_INTERRUPT_HANDLER InterruptHandler);
typedef EFI_STATUS (*EFI_GET_PCD_INFO_PROTOCOL_GET_INFO)(const EFI_GUID *Guid, UINTN TokenNumber, EFI_PCD_INFO *PcdInfo);
typedef EFI_STATUS (*EFI_IDE_CONTROLLER_DISQUALIFY_MODE)(EFI_IDE_CONTROLLER_INIT_PROTOCOL *This, UINT8 Channel, UINT8 Device, EFI_ATA_COLLECTIVE_MODE *BadModes);
typedef EFI_STATUS (*EFI_IPSEC_CONFIG_UNREGISTER_NOTIFY)(EFI_IPSEC_CONFIG_PROTOCOL *This, EFI_IPSEC_CONFIG_DATA_TYPE DataType, EFI_EVENT Event);
typedef EFI_STATUS (*EFI_LEGACY_8259_GET_INTERRUPT_LINE)(EFI_LEGACY_8259_PROTOCOL *This, EFI_HANDLE PciHandle, UINT8 *Vector);
typedef EFI_STATUS (*EFI_MP_SERVICES_GET_PROCESSOR_INFO)(EFI_MP_SERVICES_PROTOCOL *This, UINTN ProcessorNumber, EFI_PROCESSOR_INFORMATION *ProcessorInfoBuffer);
typedef EFI_STATUS (*EFI_SCSI_PASS_THRU_GET_NEXT_DEVICE)(EFI_SCSI_PASS_THRU_PROTOCOL *This, UINT32 *Target, UINT64 *Lun);
typedef EFI_STATUS (*EFI_SIMPLE_NETWORK_STATION_ADDRESS)(EFI_SIMPLE_NETWORK_PROTOCOL *This, BOOLEAN Reset, EFI_MAC_ADDRESS *New);
typedef EFI_STATUS (*EFI_USB_IO_GET_ENDPOINT_DESCRIPTOR)(EFI_USB_IO_PROTOCOL *This, UINT8 EndpointIndex, EFI_USB_ENDPOINT_DESCRIPTOR *EndpointDescriptor);
union _05333A0F315413F4B234A464077EED47 {TPMI_AES_KEY_BITS aes;TPMI_SM4_KEY_BITS SM4;TPM_KEY_BITS sym;TPMI_ALG_HASH xor;};
struct _07D3EF598D540C16FB35D413F0F252D7 {UINT32 Signature;UDP_IO *UdpIo;UDP_IO_CALLBACK CallBack;void *Context;UINT32 HeadLen;UDP_COMPLETION_TOKEN Token;};
struct _14D190ACC072CEBB80B7F04EB11E8F66 {UINT32 HeaderSize;UINT16 HeaderVersion;TCG_PCRINDEX PCRIndex;TCG_EVENTTYPE EventType;};
struct _28DB4FBE9CCCDE1C86BBB2321A60804C {EFI_EVENT Event;EFI_STATUS Status;UINT32 RetryCount;UINT32 RetryInterval;union _28DB4FBE9CCCDE1C86BBB2321A60804C___FE2B1D9AD239749A6732AE19877CEB05 RspData;};
struct _7EBE2FFF53B6C02FD1AF6B36F0E879E8 {EFI_GUID HashGuid;HASH_INIT HashInit;HASH_UPDATE HashUpdate;HASH_FINAL HashFinal;};
struct _98F790DC9A2E78F45D47D308C3681F20 {EFI_EVENT Event;EFI_STATUS Status;EFI_80211_DISASSOCIATE_DATA *Data;EFI_80211_DISASSOCIATE_RESULT_CODE ResultCode;};
struct _9BCCD84CA09B0CF28A9A013C7961FBBF {TPMT_SYM_DEF_OBJECT symmetric;TPMT_ECC_SCHEME scheme;TPMI_ECC_CURVE curveID;TPMT_KDF_SCHEME kdf;};
struct _B16410B4740FE552E7D8295EBD0641AB {EFI_GUID Guid;UINTN NameSize;UINTN DataSize;EFI_STATUS SetStatus;UINT32 Attributes;};
struct _C291D47FF867C3AD0DFE4561679F9FBD {UINT32 VariableTotalSize;UINT32 Reserved;EFI_GUID CapsuleGuid;EFI_TIME CapsuleProcessed;EFI_STATUS CapsuleStatus;};
struct _D32BBD84251B2A6AAF1C75D15D0C504A {TPMI_ALG_PUBLIC sensitiveType;TPM2B_AUTH authValue;TPM2B_DIGEST seedValue;TPMU_SENSITIVE_COMPOSITE sensitive;};
struct _DB1EAEA7716C1AF942FAFA5B5893C7DC {TPMT_SYM_DEF_OBJECT symmetric;TPMT_RSA_SCHEME scheme;TPMI_RSA_KEY_BITS keyBits;UINT32 exponent;};
struct _DD90A6460ECECB32C3E9F65C84643F1C {EFI_EVENT Event;EFI_STATUS Status;UINT32 RetryCount;UINT32 RetryInterval;union _DD90A6460ECECB32C3E9F65C84643F1C___AD59633F046663C4886B84BC360D5A3B RspData;};
struct _E3E4B7A8D56AE54705F23ABC4231B6F7 {UINT64 sequence;TPMI_DH_CONTEXT savedHandle;TPMI_RH_HIERARCHY hierarchy;TPM2B_CONTEXT_DATA contextBlob;};
struct _FF5829BC88506E44C19973610DF8FFB1 {TPMI_SH_AUTH_SESSION sessionHandle;TPM2B_NONCE nonce;TPMA_SESSION sessionAttributes;TPM2B_AUTH hmac;};
typedef EFI_STATUS (*EFI_FAULT_TOLERANT_WRITE_ALLOCATE)(EFI_FAULT_TOLERANT_WRITE_PROTOCOL *This, EFI_GUID *CallerId, UINTN PrivateDataSize, UINTN NumberOfWrites);
typedef EFI_STATUS (*EFI_IDE_CONTROLLER_CALCULATE_MODE)(EFI_IDE_CONTROLLER_INIT_PROTOCOL *This, UINT8 Channel, UINT8 Device, EFI_ATA_COLLECTIVE_MODE **SupportedModes);
typedef EFI_STATUS (*EFI_IP4_CONFIG2_UNREGISTER_NOTIFY)(EFI_IP4_CONFIG2_PROTOCOL *This, EFI_IP4_CONFIG2_DATA_TYPE DataType, EFI_EVENT Event);
typedef EFI_STATUS (*EFI_MANAGED_NETWORK_GET_MODE_DATA)(EFI_MANAGED_NETWORK_PROTOCOL *This, EFI_MANAGED_NETWORK_CONFIG_DATA *MnpConfigData, EFI_SIMPLE_NETWORK_MODE *SnpModeData);
typedef EFI_STATUS (*EFI_PEI_GET_NUMBER_BLOCK_DEVICES2)(EFI_PEI_SERVICES **PeiServices, EFI_PEI_RECOVERY_BLOCK_IO2_PPI *This, UINTN *NumberBlockDevices);
typedef EFI_STATUS (*EFI_SMBUS_HC_PROTOCOL_GET_ARP_MAP)(const EFI_SMBUS_HC_PROTOCOL *This, UINTN *Length, EFI_SMBUS_DEVICE_MAP **SmbusDeviceMap);
typedef EFI_STATUS (*EFI_UGA_IO_PROTOCOL_CREATE_DEVICE)(EFI_UGA_IO_PROTOCOL *This, UGA_DEVICE *ParentDevice, UGA_DEVICE_DATA *DeviceData, void *RunTimeContext, UGA_DEVICE **Device);
typedef EFI_STATUS (*GET_PCD_INFO_PROTOCOL_GET_INFO_EX)(const EFI_GUID *Guid, UINTN TokenNumber, EFI_PCD_INFO *PcdInfo);
typedef EFI_STATUS (*EFI_EAP_GET_SYSTEM_CONFIGURATION)(EFI_EAP_MANAGEMENT_PROTOCOL *This, BOOLEAN *SystemAuthControl, EFI_EAPOL_PORT_INFO *PortInfo);
typedef EFI_STATUS (*EFI_HII_DATABASE_GET_PACK_HANDLE)(const EFI_HII_DATABASE_PROTOCOL *This, EFI_HII_HANDLE PackageListHandle, EFI_HANDLE *DriverHandle);
typedef EFI_STATUS (*EFI_INVALIDATE_INSTRUCTION_CACHE)(EFI_DEBUG_SUPPORT_PROTOCOL *This, UINTN ProcessorIndex, void *Start, UINT64 Length);
typedef EFI_STATUS (*EFI_IP6_CONFIG_UNREGISTER_NOTIFY)(EFI_IP6_CONFIG_PROTOCOL *This, EFI_IP6_CONFIG_DATA_TYPE DataType, EFI_EVENT Event);
typedef EFI_STATUS (*EFI_IPSEC_CONFIG_REGISTER_NOTIFY)(EFI_IPSEC_CONFIG_PROTOCOL *This, EFI_IPSEC_CONFIG_DATA_TYPE DataType, EFI_EVENT Event);
typedef EFI_STATUS (*EFI_MEMORY_TEST_COMPATIBLE_RANGE)(EFI_GENERIC_MEMORY_TEST_PROTOCOL *This, EFI_PHYSICAL_ADDRESS StartAddress, UINT64 Length);
typedef EFI_STATUS (*EFI_PCD_PROTOCOL_CALLBACK_ON_SET)(const EFI_GUID *Guid, UINTN CallBackToken, EFI_PCD_PROTOCOL_CALLBACK CallBackFunction);
typedef EFI_STATUS (*EFI_PCD_PROTOCOL_CANCEL_CALLBACK)(const EFI_GUID *Guid, UINTN CallBackToken, EFI_PCD_PROTOCOL_CALLBACK CallBackFunction);
typedef EFI_STATUS (*EFI_PEI_GET_NUMBER_BLOCK_DEVICES)(EFI_PEI_SERVICES **PeiServices, EFI_PEI_RECOVERY_BLOCK_IO_PPI *This, UINTN *NumberBlockDevices);
typedef EFI_STATUS (*EFI_PXE_BASE_CODE_SET_PARAMETERS)(EFI_PXE_BASE_CODE_PROTOCOL *This, BOOLEAN *NewAutoArp, BOOLEAN *NewSendGUID, UINT8 *NewTTL, UINT8 *NewToS, BOOLEAN *NewMakeCallback);
typedef EFI_STATUS (*FRAMEWORK_EFI_FVB_GET_BLOCK_SIZE)(FRAMEWORK_EFI_FIRMWARE_VOLUME_BLOCK_PROTOCOL *This, EFI_LBA Lba, UINTN *BlockSize, UINTN *NumberOfBlocks);
typedef EFI_STATUS (*PEI_USB_GET_INTERFACE_DESCRIPTOR)(EFI_PEI_SERVICES **PeiServices, PEI_USB_IO_PPI *This, EFI_USB_INTERFACE_DESCRIPTOR **InterfaceDescriptor);
typedef EFI_STATUS (*AUTH_VAR_LIB_FIND_NEXT_VARIABLE)(CHAR16 *VariableName, EFI_GUID *VendorGuid, AUTH_VARIABLE_INFO *AuthVariableInfo);
typedef EFI_STATUS (*EFI_BLUETOOTH_CONFIG_DISCONNECT)(EFI_BLUETOOTH_CONFIG_PROTOCOL *This, BLUETOOTH_ADDRESS *BD_ADDR, UINT8 Reason);
typedef EFI_STATUS (*EFI_IDE_CONTROLLER_NOTIFY_PHASE)(EFI_IDE_CONTROLLER_INIT_PROTOCOL *This, EFI_IDE_CONTROLLER_ENUM_PHASE Phase, UINT8 Channel);
typedef EFI_STATUS (*EFI_IP4_CONFIG2_REGISTER_NOTIFY)(EFI_IP4_CONFIG2_PROTOCOL *This, EFI_IP4_CONFIG2_DATA_TYPE DataType, EFI_EVENT Event);
typedef EFI_STATUS (*EFI_PEI_PCD_PPI_CALLBACK_ON_SET)(const EFI_GUID *Guid, UINTN CallBackToken, EFI_PEI_PCD_PPI_CALLBACK CallBackFunction);
typedef EFI_STATUS (*EFI_PEI_PCD_PPI_CANCEL_CALLBACK)(const EFI_GUID *Guid, UINTN CallBackToken, EFI_PEI_PCD_PPI_CALLBACK CallBackFunction);
typedef EFI_STATUS (*EFI_REGULAR_EXPRESSION_GET_INFO)(EFI_REGULAR_EXPRESSION_PROTOCOL *This, UINTN *RegExSyntaxTypeListSize, EFI_REGEX_SYNTAX_TYPE *RegExSyntaxTypeList);
typedef EFI_STATUS (*EFI_SCSI_PASS_THRU_RESET_TARGET)(EFI_SCSI_PASS_THRU_PROTOCOL *This, UINT32 Target, UINT64 Lun);
typedef EFI_STATUS (*EFI_BLUETOOTH_IO_L2CAP_RECEIVE)(EFI_BLUETOOTH_IO_PROTOCOL *This, EFI_HANDLE Handle, UINTN *BufferSize, void **Buffer, UINTN Timeout);
typedef EFI_STATUS (*EFI_IDE_CONTROLLER_SUBMIT_DATA)(EFI_IDE_CONTROLLER_INIT_PROTOCOL *This, UINT8 Channel, UINT8 Device, EFI_IDENTIFY_DATA *IdentifyData);
typedef EFI_STATUS (*EFI_INSTALL_PROTOCOL_INTERFACE)(EFI_HANDLE *Handle, EFI_GUID *Protocol, EFI_INTERFACE_TYPE InterfaceType, void *Interface);
typedef EFI_STATUS (*EFI_IP6_CONFIG_REGISTER_NOTIFY)(EFI_IP6_CONFIG_PROTOCOL *This, EFI_IP6_CONFIG_DATA_TYPE DataType, EFI_EVENT Event);
typedef EFI_STATUS (*EFI_PCI_IO_PROTOCOL_ATTRIBUTES)(EFI_PCI_IO_PROTOCOL *This, EFI_PCI_IO_PROTOCOL_ATTRIBUTE_OPERATION Operation, UINT64 Attributes, UINT64 *Result);
typedef EFI_STATUS (*EFI_PEI_EXTRACT_GUIDED_SECTION)(const EFI_PEI_GUIDED_SECTION_EXTRACTION_PPI *This, const void *InputSection, void **OutputBuffer, UINTN *OutputSize, UINT32 *AuthenticationStatus);
typedef EFI_STATUS (*EFI_PEI_FFS_FIND_SECTION_DATA2)(const EFI_PEI_SERVICES **PeiServices, EFI_SECTION_TYPE SectionType, EFI_PEI_FILE_HANDLE FileHandle, void **SectionData);
typedef EFI_STATUS (*EFI_PEI_SMBUS2_PPI_GET_ARP_MAP)(const EFI_PEI_SMBUS2_PPI *This, UINTN *Length, EFI_SMBUS_DEVICE_MAP **SmbusDeviceMap);
typedef EFI_STATUS (*EFI_PEI_SMBUS_NOTIFY2_FUNCTION)(const EFI_PEI_SMBUS2_PPI *SmbusPpi, EFI_SMBUS_DEVICE_ADDRESS SlaveAddress, UINTN Data);
typedef EFI_STATUS (*EFI_REGISTER_PERIODIC_CALLBACK)(EFI_DEBUG_SUPPORT_PROTOCOL *This, UINTN ProcessorIndex, EFI_PERIODIC_CALLBACK PeriodicCallback);
typedef EFI_STATUS (*EFI_SMART_CARD_READER_TRANSMIT)(EFI_SMART_CARD_READER_PROTOCOL *This, UINT8 *CAPDU, UINTN CAPDULength, UINT8 *RAPDU, UINTN *RAPDULength);
typedef EFI_STATUS (*EFI_USER_PROFILE_GET_NEXT_INFO)(const EFI_USER_MANAGER_PROTOCOL *This, EFI_USER_PROFILE_HANDLE User, EFI_USER_INFO_HANDLE *UserInfo);
struct _EFI_ABSOLUTE_POINTER_PROTOCOL {EFI_ABSOLUTE_POINTER_RESET Reset;EFI_ABSOLUTE_POINTER_GET_STATE GetState;EFI_EVENT WaitForInput;EFI_ABSOLUTE_POINTER_MODE *Mode;};
struct _EFI_LEGACY_INTERRUPT_PROTOCOL {EFI_LEGACY_INTERRUPT_GET_NUMBER_PIRQS GetNumberPirqs;EFI_LEGACY_INTERRUPT_GET_LOCATION GetLocation;EFI_LEGACY_INTERRUPT_READ_PIRQ ReadPirq;EFI_LEGACY_INTERRUPT_WRITE_PIRQ WritePirq;};
typedef UINTN (*ASCII_BS_PRINT_UNICODE_FORMAT)(CHAR8 *StartOfBuffer, UINTN BufferSize, const CHAR16 *FormatString, BASE_LIST Marker);
typedef EFI_STATUS (*EBC_DEBUGGER_SIGNAL_EXCEPTION)(EFI_EBC_SIMPLE_DEBUGGER_PROTOCOL *This, VM_CONTEXT *VmPtr, EFI_EXCEPTION_TYPE ExceptionType);
typedef EFI_STATUS (*EFI_BLUETOOTH_CONFIG_GET_DATA)(EFI_BLUETOOTH_CONFIG_PROTOCOL *This, EFI_BLUETOOTH_CONFIG_DATA_TYPE DataType, UINTN *DataSize, void *Data);
typedef EFI_STATUS (*EFI_BLUETOOTH_CONFIG_SET_DATA)(EFI_BLUETOOTH_CONFIG_PROTOCOL *This, EFI_BLUETOOTH_CONFIG_DATA_TYPE DataType, UINTN DataSize, void *Data);
typedef EFI_STATUS (*EFI_CPU_SET_MEMORY_ATTRIBUTES)(EFI_CPU_ARCH_PROTOCOL *This, EFI_PHYSICAL_ADDRESS BaseAddress, UINT64 Length, UINT64 Attributes);
typedef EFI_STATUS (*EFI_EAP_BUILD_RESPONSE_PACKET)(EFI_PORT_HANDLE PortNumber, UINT8 *RequestBuffer, UINTN RequestSize, UINT8 *Buffer, UINTN *BufferSize);
typedef EFI_STATUS (*EFI_EAP_GET_SUPPLICANT_STATUS)(EFI_EAP_MANAGEMENT_PROTOCOL *This, EFI_EAPOL_SUPPLICANT_PAE_STATE *CurrentState, EFI_EAPOL_SUPPLICANT_PAE_CONFIGURATION *Configuration);
typedef EFI_STATUS (*EFI_GET_PCD_INFO_PPI_GET_INFO)(const EFI_GUID *Guid, UINTN TokenNumber, EFI_PCD_INFO *PcdInfo);
typedef EFI_STATUS (*EFI_HII_FIND_KEYBOARD_LAYOUTS)(const EFI_HII_DATABASE_PROTOCOL *This, UINT16 *KeyGuidBufferLength, EFI_GUID *KeyGuidBuffer);
typedef EFI_STATUS (*EFI_IDE_CONTROLLER_SET_TIMING)(EFI_IDE_CONTROLLER_INIT_PROTOCOL *This, UINT8 Channel, UINT8 Device, EFI_ATA_COLLECTIVE_MODE *Modes);
typedef EFI_STATUS (*EFI_ISA_ACPI_GET_CUR_RESOURCE)(EFI_ISA_ACPI_PROTOCOL *This, EFI_ISA_ACPI_DEVICE_ID *Device, EFI_ISA_ACPI_RESOURCE_LIST **ResourceList);
typedef EFI_STATUS (*EFI_ISA_ACPI_GET_POS_RESOURCE)(EFI_ISA_ACPI_PROTOCOL *This, EFI_ISA_ACPI_DEVICE_ID *Device, EFI_ISA_ACPI_RESOURCE_LIST **ResourceList);
typedef EFI_STATUS (*EFI_ISA_ACPI_SET_DEVICE_POWER)(EFI_ISA_ACPI_PROTOCOL *This, EFI_ISA_ACPI_DEVICE_ID *Device, BOOLEAN OnOff);
typedef EFI_STATUS (*EFI_PEI_DECOMPRESS_DECOMPRESS)(const EFI_PEI_DECOMPRESS_PPI *This, const EFI_COMPRESSION_SECTION *InputSection, void **OutputBuffer, UINTN *OutputSize);
typedef EFI_STATUS (*EFI_PEI_FFS_FIND_NEXT_VOLUME2)(const EFI_PEI_SERVICES **PeiServices, UINTN Instance, EFI_PEI_FV_HANDLE *VolumeHandle);
typedef EFI_STATUS (*EFI_PEI_FFS_FIND_SECTION_DATA)(FRAMEWORK_EFI_PEI_SERVICES **PeiServices, EFI_SECTION_TYPE SectionType, EFI_FFS_FILE_HEADER *FfsFileHeader, void **SectionData);
typedef EFI_STATUS (*EFI_PXE_BASE_CODE_SET_PACKETS)(EFI_PXE_BASE_CODE_PROTOCOL *This, BOOLEAN *NewDhcpDiscoverValid, BOOLEAN *NewDhcpAckReceived, BOOLEAN *NewProxyOfferReceived, BOOLEAN *NewPxeDiscoverValid, BOOLEAN *NewPxeReplyReceived, BOOLEAN *NewPxeBisReplyReceived, EFI_PXE_BASE_CODE_PACKET *NewDhcpDiscover, EFI_PXE_BASE_CODE_PACKET *NewDhcpAck, EFI_PXE_BASE_CODE_PACKET *NewProxyOffer, EFI_PXE_BASE_CODE_PACKET *NewPxeDiscover, EFI_PXE_BASE_CODE_PACKET *NewPxeReply, EFI_PXE_BASE_CODE_PACKET *NewPxeBisReply);
typedef EFI_STATUS (*EFI_REGISTER_KEYSTROKE_NOTIFY)(EFI_SIMPLE_TEXT_INPUT_EX_PROTOCOL *This, EFI_KEY_DATA *KeyData, EFI_KEY_NOTIFY_FUNCTION KeyNotificationFunction, void **NotifyHandle);
typedef EFI_STATUS (*EFI_SEC_PLATFORM_INFORMATION2)(const EFI_PEI_SERVICES **PeiServices, UINT64 *StructureSize, EFI_SEC_PLATFORM_INFORMATION_RECORD2 *PlatformInformationRecord2);
typedef UINTN (*UNICODE_BS_PRINT_ASCII_FORMAT)(CHAR16 *StartOfBuffer, UINTN BufferSize, const CHAR8 *FormatString, BASE_LIST Marker);
typedef EFI_STATUS (*EFI_ATA_PASS_THRU_GET_DEVICE)(EFI_ATA_PASS_THRU_PROTOCOL *This, EFI_DEVICE_PATH_PROTOCOL *DevicePath, UINT16 *Port, UINT16 *PortMultiplierPort);
typedef EFI_STATUS (*EFI_DRIVER_BINDING_SUPPORTED)(EFI_DRIVER_BINDING_PROTOCOL *This, EFI_HANDLE ControllerHandle, EFI_DEVICE_PATH_PROTOCOL *RemainingDevicePath);
typedef EFI_STATUS (*EFI_HII_DATABASE_UPDATE_PACK)(const EFI_HII_DATABASE_PROTOCOL *This, EFI_HII_HANDLE Handle, const EFI_HII_PACKAGE_LIST_HEADER *PackageList);
typedef EFI_STATUS (*EFI_PCD_PROTOCOL_SET_BOOLEAN)(const EFI_GUID *Guid, UINTN TokenNumber, BOOLEAN Value);
typedef EFI_STATUS (*EFI_PCI_PLATFORM_GET_PCI_ROM)(const EFI_PCI_PLATFORM_PROTOCOL *This, EFI_HANDLE PciHandle, void **RomImage, UINTN *RomSize);
typedef EFI_STATUS (*EFI_PEI_FFS_FIND_NEXT_VOLUME)(FRAMEWORK_EFI_PEI_SERVICES **PeiServices, UINTN Instance, EFI_FIRMWARE_VOLUME_HEADER **FwVolHeader);
typedef EFI_STATUS (*EFI_SAL_REGISTER_PMI_HANDLER)(EFI_SAL_MCA_INIT_PMI_PROTOCOL *This, EFI_SAL_PMI_HANDLER PmiHandler, void *ModuleGlobal, BOOLEAN MakeFirst, BOOLEAN MakeLast);
typedef EFI_STATUS (*EFI_SEC_PLATFORM_INFORMATION)(const EFI_PEI_SERVICES **PeiServices, UINT64 *StructureSize, EFI_SEC_PLATFORM_INFORMATION_RECORD *PlatformInformationRecord);
typedef EFI_STATUS (*EFI_USBFN_IO_GET_DEVICE_INFO)(EFI_USBFN_IO_PROTOCOL *This, EFI_USBFN_DEVICE_INFO_ID Id, UINTN *BufferSize, void *Buffer);
typedef EFI_STATUS (*EFI_USER_PROFILE_DELETE_INFO)(const EFI_USER_MANAGER_PROTOCOL *This, EFI_USER_PROFILE_HANDLE User, EFI_USER_INFO_HANDLE UserInfo);
typedef EFI_STATUS (*GET_PCD_INFO_PPI_GET_INFO_EX)(const EFI_GUID *Guid, UINTN TokenNumber, EFI_PCD_INFO *PcdInfo);
typedef EFI_STATUS (*PCD_PROTOCOL_CANCEL_CALLBACK)(const EFI_GUID *Guid, UINTN TokenNumber, PCD_PROTOCOL_CALLBACK CallBackFunction);
struct _EFI_SIMPLE_POINTER_PROTOCOL {EFI_SIMPLE_POINTER_RESET Reset;EFI_SIMPLE_POINTER_GET_STATE GetState;EFI_EVENT WaitForInput;EFI_SIMPLE_POINTER_MODE *Mode;};
typedef EFI_STATUS (*EFI_BLUETOOTH_IO_L2CAP_SEND)(EFI_BLUETOOTH_IO_PROTOCOL *This, EFI_HANDLE Handle, UINTN *BufferSize, void *Buffer, UINTN Timeout);
typedef EFI_STATUS (*EFI_BOOT_SCRIPT_CLOSE_TABLE)(EFI_BOOT_SCRIPT_SAVE_PROTOCOL *This, UINT16 TableName, EFI_PHYSICAL_ADDRESS *Address);
typedef EFI_STATUS (*EFI_PEI_PCD_PPI_SET_BOOLEAN)(const EFI_GUID *Guid, UINTN TokenNumber, BOOLEAN Value);
typedef EFI_STATUS (*EFI_SET_VIRTUAL_ADDRESS_MAP)(UINTN MemoryMapSize, UINTN DescriptorSize, UINT32 DescriptorVersion, EFI_MEMORY_DESCRIPTOR *VirtualMap);
typedef EFI_STATUS (*EFI_SHELL_OPEN_FILE_BY_NAME)(const CHAR16 *FileName, SHELL_FILE_HANDLE *FileHandle, UINT64 OpenMode);
typedef EFI_STATUS (*EFI_SMART_CARD_EDGE_CONNECT)(EFI_SMART_CARD_EDGE_PROTOCOL *This, EFI_HANDLE *SCardHandle, UINT8 *ScardCsn, UINT8 *ScardAid);
typedef EFI_STATUS (*EFI_SMART_CARD_EDGE_GET_CSN)(EFI_SMART_CARD_EDGE_PROTOCOL *This, EFI_HANDLE SCardHandle,UINT8  *    Csn);
typedef EFI_STATUS (*EFI_TCG_PASS_THROUGH_TO_TPM)(EFI_TCG_PROTOCOL *This, UINT32 TpmInputParameterBlockSize, UINT8 *TpmInputParameterBlock, UINT32 TpmOutputParameterBlockSize, UINT8 *TpmOutputParameterBlock);
typedef EFI_STATUS (*EFI_USBFN_IO_ABORT_TRANSFER)(EFI_USBFN_IO_PROTOCOL *This, UINT8 EndpointIndex, EFI_USBFN_ENDPOINT_DIRECTION Direction);
typedef EFI_STATUS (*PCD_PROTOCOL_CALLBACK_ONSET)(const EFI_GUID *Guid, UINTN TokenNumber, PCD_PROTOCOL_CALLBACK CallBackFunction);
typedef EFI_STATUS (*PCD_PROTOCOL_SET_EX_BOOLEAN)(const EFI_GUID *Guid, UINTN TokenNumber, BOOLEAN Value);
typedef EFI_STATUS (*AUTH_VAR_LIB_FIND_VARIABLE)(CHAR16 *VariableName, EFI_GUID *VendorGuid, AUTH_VARIABLE_INFO *AuthVariableInfo);
typedef EFI_STATUS (*EFI_BIS_VERIFY_BOOT_OBJECT)(BIS_APPLICATION_HANDLE AppHandle, EFI_BIS_DATA *Credentials, EFI_BIS_DATA *DataObject, BOOLEAN *IsVerified);
typedef EFI_STATUS (*EFI_EXTRACT_GUIDED_SECTION)(const EFI_GUIDED_SECTION_EXTRACTION_PROTOCOL *This, const void *InputSection, void **OutputBuffer, UINTN *OutputSize, UINT32 *AuthenticationStatus);
typedef EFI_STATUS (*EFI_GET_NEXT_VARIABLE_NAME)(UINTN *VariableNameSize, CHAR16 *VariableName, EFI_GUID *VendorGuid);
typedef EFI_STATUS (*EFI_ISA_ACPI_ENABLE_DEVICE)(EFI_ISA_ACPI_PROTOCOL *This, EFI_ISA_ACPI_DEVICE_ID *Device, BOOLEAN Enable);
typedef EFI_STATUS (*EFI_LEGACY_8259_ENABLE_IRQ)(EFI_LEGACY_8259_PROTOCOL *This, EFI_8259_IRQ Irq, BOOLEAN LevelTriggered);
typedef EFI_STATUS (*EFI_LEGACY_8259_GET_VECTOR)(EFI_LEGACY_8259_PROTOCOL *This, EFI_8259_IRQ Irq, UINT8 *Vector);
typedef EFI_STATUS (*EFI_LEGACY_REGION_GET_INFO)(EFI_LEGACY_REGION2_PROTOCOL *This, UINT32 *DescriptorCount, EFI_LEGACY_REGION_DESCRIPTOR **Descriptor);
typedef EFI_STATUS (*EFI_MANAGED_NETWORK_GROUPS)(EFI_MANAGED_NETWORK_PROTOCOL *This, BOOLEAN JoinFlag, EFI_MAC_ADDRESS *MacAddress);
typedef EFI_STATUS (*EFI_MP_SERVICES_SWITCH_BSP)(EFI_MP_SERVICES_PROTOCOL *This, UINTN ProcessorNumber, BOOLEAN EnableOldBSP);
typedef EFI_STATUS (*EFI_PEI_INSTALL_PEI_MEMORY)(const EFI_PEI_SERVICES **PeiServices, EFI_PHYSICAL_ADDRESS MemoryBegin, UINT64 MemoryLength);
typedef EFI_STATUS (*EFI_PEI_MP_SERVICES_WHOAMI)(const EFI_PEI_SERVICES **PeiServices, EFI_PEI_MP_SERVICES_PPI *This, UINTN *ProcessorNumber);
typedef EFI_STATUS (*EFI_PKCS7_VERIFY_SIGNATURE)(EFI_PKCS7_VERIFY_PROTOCOL *This, void *Signature, UINTN SignatureSize, void *InHash, UINTN InHashSize, EFI_SIGNATURE_LIST **AllowedDb, EFI_SIGNATURE_LIST **RevokedDb, EFI_SIGNATURE_LIST **TimeStampDb);
typedef EFI_STATUS (*EFI_SMM_INTERRUPT_REGISTER)(EFI_SMM_HANDLER_ENTRY_POINT2 Handler, const EFI_GUID *HandlerType, EFI_HANDLE *DispatchHandle);
typedef EFI_STATUS (*EXTENDED_SAL_ADD_SST_ENTRY)(EXTENDED_SAL_BOOT_SERVICE_PROTOCOL *This, UINT8 *TableEntry, UINTN EntrySize);
typedef EFI_STATUS (*PERFORMANCE_START_GAUGE_EX)(const void *Handle, const CHAR8 *Token, const CHAR8 *Module, UINT64 TimeStamp, UINT32 Identifier);
typedef EFI_STATUS (*EFI_ADAPTER_INFO_GET_INFO)(EFI_ADAPTER_INFORMATION_PROTOCOL *This, EFI_GUID *InformationType, void **InformationBlock, UINTN *InformationBlockSize);
typedef EFI_STATUS (*EFI_ADAPTER_INFO_SET_INFO)(EFI_ADAPTER_INFORMATION_PROTOCOL *This, EFI_GUID *InformationType, void *InformationBlock, UINTN InformationBlockSize);
typedef EFI_STATUS (*EFI_DNS4_UPDATE_DNS_CACHE)(EFI_DNS4_PROTOCOL *This, BOOLEAN DeleteFlag, BOOLEAN Override, EFI_DNS4_CACHE_ENTRY DnsCacheEntry);
typedef EFI_STATUS (*EFI_DNS6_UPDATE_DNS_CACHE)(EFI_DNS6_PROTOCOL *This, BOOLEAN DeleteFlag, BOOLEAN Override, EFI_DNS6_CACHE_ENTRY DnsCacheEntry);
typedef EFI_STATUS (*EFI_HII_GET_PRI_LANGUAGES)(EFI_HII_PROTOCOL *This, FRAMEWORK_EFI_HII_HANDLE Handle, EFI_STRING *LanguageString);
typedef EFI_STATUS (*EFI_IPSEC_CONFIG_SET_DATA)(EFI_IPSEC_CONFIG_PROTOCOL *This, EFI_IPSEC_CONFIG_DATA_TYPE DataType, EFI_IPSEC_CONFIG_SELECTOR *Selector, void *Data, EFI_IPSEC_CONFIG_SELECTOR *InsertBefore);
typedef EFI_STATUS (*EFI_ISA_ACPI_SET_RESOURCE)(EFI_ISA_ACPI_PROTOCOL *This, EFI_ISA_ACPI_DEVICE_ID *Device, EFI_ISA_ACPI_RESOURCE_LIST *ResourceList);
typedef EFI_STATUS (*EFI_LEGACY_BIOS_CHECK_ROM)(EFI_LEGACY_BIOS_PROTOCOL *This, EFI_HANDLE PciHandle, void **RomImage, UINTN *RomSize, UINTN *Flags);
typedef EFI_STATUS (*EFI_LEGACY_REGION2_DECODE)(EFI_LEGACY_REGION2_PROTOCOL *This, UINT32 Start, UINT32 Length, UINT32 *Granularity, BOOLEAN *On);
typedef EFI_STATUS (*EFI_PEI_FV_GET_FILE_INFO2)(const EFI_PEI_FIRMWARE_VOLUME_PPI *This, EFI_PEI_FILE_HANDLE FileHandle, EFI_FV_FILE_INFO2 *FileInfo);
typedef EFI_STATUS (*EFI_S3_SAVE_STATE_COMPARE)(const EFI_S3_SAVE_STATE_PROTOCOL *This, EFI_S3_BOOT_SCRIPT_POSITION Position1, EFI_S3_BOOT_SCRIPT_POSITION Position2, UINTN *RelativePosition);
typedef EFI_STATUS (*EFI_SIMPLE_NETWORK_NVDATA)(EFI_SIMPLE_NETWORK_PROTOCOL *This, BOOLEAN ReadWrite, UINTN Offset, UINTN BufferSize, void *Buffer);
typedef EFI_STATUS (*EXTENDED_SAL_ADD_SST_INFO)(EXTENDED_SAL_BOOT_SERVICE_PROTOCOL *This, UINT16 SalAVersion, UINT16 SalBVersion, CHAR8 *OemId, CHAR8 *ProductId);
typedef EFI_STATUS (*HTTP_BODY_PARSER_CALLBACK)(HTTP_BODY_PARSE_EVENT EventType, CHAR8 *Data, UINTN Length, void *Context);
typedef EFI_STATUS (*EFI_ACPI_GET_ACPI_TABLE2)(UINTN Index, EFI_ACPI_SDT_HEADER **Table, EFI_ACPI_TABLE_VERSION *Version, UINTN *TableKey);
typedef EFI_STATUS (*EFI_ACPI_NOTIFICATION_FN)(EFI_ACPI_SDT_HEADER *Table, EFI_ACPI_TABLE_VERSION Version, UINTN TableKey);
typedef EFI_STATUS (*EFI_DISK_INFO_SENSE_DATA)(EFI_DISK_INFO_PROTOCOL *This, void *SenseData, UINT32 *SenseDataSize, UINT8 *SenseDataNumber);
typedef EFI_STATUS (*EFI_DNS4_HOST_NAME_TO_IP)(EFI_DNS4_PROTOCOL *This, CHAR16 *HostName, EFI_DNS4_COMPLETION_TOKEN *Token);
typedef EFI_STATUS (*EFI_DNS4_IP_TO_HOST_NAME)(EFI_DNS4_PROTOCOL *This, EFI_IPv4_ADDRESS IpAddress, EFI_DNS4_COMPLETION_TOKEN *Token);
typedef EFI_STATUS (*EFI_DNS6_HOST_NAME_TO_IP)(EFI_DNS6_PROTOCOL *This, CHAR16 *HostName, EFI_DNS6_COMPLETION_TOKEN *Token);
typedef EFI_STATUS (*EFI_DNS6_IP_TO_HOST_NAME)(EFI_DNS6_PROTOCOL *This, EFI_IPv6_ADDRESS IpAddress, EFI_DNS6_COMPLETION_TOKEN *Token);
typedef EFI_STATUS (*EFI_DRIVER_BINDING_START)(EFI_DRIVER_BINDING_PROTOCOL *This, EFI_HANDLE ControllerHandle, EFI_DEVICE_PATH_PROTOCOL *RemainingDevicePath);
typedef EFI_STATUS (*EFI_DRIVER_HEALTH_REPAIR)(EFI_DRIVER_HEALTH_PROTOCOL *This, EFI_HANDLE ControllerHandle, EFI_HANDLE ChildHandle, EFI_DRIVER_HEALTH_REPAIR_NOTIFY RepairNotify);
typedef EFI_STATUS (*EFI_IP4_CONFIG2_GET_DATA)(EFI_IP4_CONFIG2_PROTOCOL *This, EFI_IP4_CONFIG2_DATA_TYPE DataType, UINTN *DataSize, void *Data);
typedef EFI_STATUS (*EFI_IP4_CONFIG2_SET_DATA)(EFI_IP4_CONFIG2_PROTOCOL *This, EFI_IP4_CONFIG2_DATA_TYPE DataType, UINTN DataSize, void *Data);
typedef EFI_STATUS (*EFI_LEGACY_8259_SET_MODE)(EFI_LEGACY_8259_PROTOCOL *This, EFI_8259_MODE Mode, UINT16 *Mask, UINT16 *EdgeLevel);
typedef EFI_STATUS (*EFI_LEGACY_REGION_DECODE)(EFI_LEGACY_REGION_PROTOCOL *This, UINT32 Start, UINT32 Length, BOOLEAN *On);
typedef EFI_STATUS (*EFI_MTFTP4_PACKET_NEEDED)(EFI_MTFTP4_PROTOCOL *This, EFI_MTFTP4_TOKEN *Token, UINT16 *Length, void **Buffer);
typedef EFI_STATUS (*EFI_MTFTP6_PACKET_NEEDED)(EFI_MTFTP6_PROTOCOL *This, EFI_MTFTP6_TOKEN *Token, UINT16 *Length, void **Buffer);
typedef EFI_STATUS (*EFI_PEI_FFS_FIND_BY_NAME)(const EFI_GUID *FileName, EFI_PEI_FV_HANDLE VolumeHandle, EFI_PEI_FILE_HANDLE *FileHandle);
typedef EFI_STATUS (*EFI_PEI_FV_GET_FILE_INFO)(const EFI_PEI_FIRMWARE_VOLUME_PPI *This, EFI_PEI_FILE_HANDLE FileHandle, EFI_FV_FILE_INFO *FileInfo);
typedef EFI_STATUS (*EFI_PROTOCOLS_PER_HANDLE)(EFI_HANDLE Handle, EFI_GUID ***ProtocolBuffer, UINTN *ProtocolBufferCount);
typedef EFI_STATUS (*EFI_SHELL_OPEN_FILE_LIST)(CHAR16 *Path, UINT64 OpenMode, EFI_SHELL_FILE_INFO **FileList);
typedef EFI_STATUS (*EFI_SMM_WRITE_SAVE_STATE)(const EFI_SMM_CPU_PROTOCOL *This, UINTN Width, EFI_SMM_SAVE_STATE_REGISTER Register, UINTN CpuIndex, const void *Buffer);
typedef EFI_STATUS (*PERFORMANCE_END_GAUGE_EX)(const void *Handle, const CHAR8 *Token, const CHAR8 *Module, UINT64 TimeStamp, UINT32 Identifier);
struct _EFI_TIMER_ARCH_PROTOCOL {EFI_TIMER_REGISTER_HANDLER RegisterHandler;EFI_TIMER_SET_TIMER_PERIOD SetTimerPeriod;EFI_TIMER_GET_TIMER_PERIOD GetTimerPeriod;EFI_TIMER_GENERATE_SOFT_INTERRUPT GenerateSoftInterrupt;};
typedef EFI_STATUS (*EFI_CPU_GET_TIMER_VALUE)(EFI_CPU_ARCH_PROTOCOL *This, UINT32 TimerIndex, UINT64 *TimerValue, UINT64 *TimerPeriod);
typedef EFI_STATUS (*EFI_DHCP6_GET_MODE_DATA)(EFI_DHCP6_PROTOCOL *This, EFI_DHCP6_MODE_DATA *Dhcp6ModeData, EFI_DHCP6_CONFIG_DATA *Dhcp6ConfigData);
typedef EFI_STATUS (*EFI_DRIVER_BINDING_STOP)(EFI_DRIVER_BINDING_PROTOCOL *This, EFI_HANDLE ControllerHandle, UINTN NumberOfChildren, EFI_HANDLE *ChildHandleBuffer);
typedef EFI_STATUS (*EFI_HASH2_GET_HASH_SIZE)(const EFI_HASH2_PROTOCOL *This, const EFI_GUID *HashAlgorithm, UINTN *HashSize);
typedef EFI_STATUS (*EFI_IP4_CONFIG_GET_DATA)(EFI_IP4_CONFIG_PROTOCOL *This, UINTN *IpConfigDataSize, EFI_IP4_IPCONFIG_DATA *IpConfigData);
typedef EFI_STATUS (*EFI_IP6_CONFIG_GET_DATA)(EFI_IP6_CONFIG_PROTOCOL *This, EFI_IP6_CONFIG_DATA_TYPE DataType, UINTN *DataSize, void *Data);
typedef EFI_STATUS (*EFI_IP6_CONFIG_SET_DATA)(EFI_IP6_CONFIG_PROTOCOL *This, EFI_IP6_CONFIG_DATA_TYPE DataType, UINTN DataSize, void *Data);
typedef EFI_STATUS (*EFI_KMS_REGISTER_CLIENT)(EFI_KMS_PROTOCOL *This, EFI_KMS_CLIENT_INFO *Client, UINTN *ClientDataSize, void **ClientData);
typedef EFI_STATUS (*EFI_PCD_PROTOCOL_SET_16)(const EFI_GUID *Guid, UINTN TokenNumber, UINT16 Value);
typedef EFI_STATUS (*EFI_PCD_PROTOCOL_SET_32)(const EFI_GUID *Guid, UINTN TokenNumber, UINT32 Value);
typedef EFI_STATUS (*EFI_PCD_PROTOCOL_SET_64)(const EFI_GUID *Guid, UINTN TokenNumber, UINT64 Value);
typedef EFI_STATUS (*EFI_PEI_FV_FIND_SECTION)(const EFI_PEI_FIRMWARE_VOLUME_PPI *This, EFI_SECTION_TYPE SearchType, EFI_PEI_FILE_HANDLE FileHandle, void **SectionData);
typedef EFI_STATUS (*EFI_PERFORM_MEMORY_TEST)(EFI_GENERIC_MEMORY_TEST_PROTOCOL *This, UINT64 *TestedMemorySize, UINT64 *TotalMemorySize, BOOLEAN *ErrorOut, BOOLEAN IfTestAbort);
typedef EFI_STATUS (*EFI_PKCS7_VERIFY_BUFFER)(EFI_PKCS7_VERIFY_PROTOCOL *This, void *SignedData, UINTN SignedDataSize, void *InData, UINTN InDataSize, EFI_SIGNATURE_LIST **AllowedDb, EFI_SIGNATURE_LIST **RevokedDb, EFI_SIGNATURE_LIST **TimeStampDb, void *Content, UINTN *ContentSize);
typedef EFI_STATUS (*EFI_SIO_REGISTER_ACCESS)(const EFI_SIO_PROTOCOL *This, BOOLEAN Write, BOOLEAN ExitCfgMode, UINT8 Register, UINT8 *Value);
typedef EFI_STATUS (*EFI_SMM_READ_SAVE_STATE)(const EFI_SMM_CPU_PROTOCOL *This, UINTN Width, EFI_SMM_SAVE_STATE_REGISTER Register, UINTN CpuIndex, void *Buffer);
typedef EFI_STATUS (*EFI_TCG2_SUBMIT_COMMAND)(EFI_TCG2_PROTOCOL *This, UINT32 InputParameterBlockSize, UINT8 *InputParameterBlock, UINT32 OutputParameterBlockSize, UINT8 *OutputParameterBlock);
typedef EFI_STATUS (*EFI_TREE_SUBMIT_COMMAND)(EFI_TREE_PROTOCOL *This, UINT32 InputParameterBlockSize, UINT8 *InputParameterBlock, UINT32 OutputParameterBlockSize, UINT8 *OutputParameterBlock);
typedef EFI_STATUS (*PCD_PPI_CANCEL_CALLBACK)(const EFI_GUID *Guid, UINTN TokenNumber, PCD_PPI_CALLBACK CallBackFunction);
typedef EFI_STATUS (*TEMPORARY_RAM_MIGRATION)(const EFI_PEI_SERVICES **PeiServices, EFI_PHYSICAL_ADDRESS TemporaryMemoryBase, EFI_PHYSICAL_ADDRESS PermanentMemoryBase, UINTN CopySize);
typedef EFI_STATUS (*EBC_DEBUGGER_CONFIGURE)(EFI_EBC_SIMPLE_DEBUGGER_PROTOCOL *This, UINT32 ConfigId, UINTN ConfigValue);
typedef EFI_STATUS (*EFI_CONNECT_CONTROLLER)(EFI_HANDLE ControllerHandle, EFI_HANDLE *DriverImageHandle, EFI_DEVICE_PATH_PROTOCOL *RemainingDevicePath, BOOLEAN Recursive);
typedef EFI_STATUS (*EFI_DHCP4_RENEW_REBIND)(EFI_DHCP4_PROTOCOL *This, BOOLEAN RebindRequest, EFI_EVENT CompletionEvent);
typedef EFI_STATUS (*EFI_FVB_GET_BLOCK_SIZE)(const EFI_FIRMWARE_VOLUME_BLOCK2_PROTOCOL *This, EFI_LBA Lba, UINTN *BlockSize, UINTN *NumberOfBlocks);
typedef EFI_STATUS (*EFI_GET_RANGE_LOCATION)(EFI_SWAP_ADDRESS_RANGE_PROTOCOL *This, EFI_PHYSICAL_ADDRESS *BootBlockBase, UINTN *BootBlockSize, EFI_PHYSICAL_ADDRESS *BackupBlockBase, UINTN *BackupBlockSize);
typedef EFI_STATUS (*EFI_HASH_GET_HASH_SIZE)(const EFI_HASH_PROTOCOL *This, const EFI_GUID *HashAlgorithm, UINTN *HashSize);
typedef EFI_STATUS (*EFI_LOCATE_DEVICE_PATH)(EFI_GUID *Protocol, EFI_DEVICE_PATH_PROTOCOL **DevicePath, EFI_HANDLE *Device);
typedef EFI_STATUS (*EFI_PCD_PROTOCOL_SET_8)(const EFI_GUID *Guid, UINTN TokenNumber, UINT8 Value);
typedef EFI_STATUS (*EFI_PEI_ISA_HC_OPEN_IO)(const EFI_ISA_HC_PPI *This, UINT16 IoAddress, UINT16 IoLength, UINT64 *IoApertureHandle);
typedef EFI_STATUS (*EFI_PEI_PCD_PPI_SET_16)(const EFI_GUID *Guid, UINTN TokenNumber, UINT16 Value);
typedef EFI_STATUS (*EFI_PEI_PCD_PPI_SET_32)(const EFI_GUID *Guid, UINTN TokenNumber, UINT32 Value);
typedef EFI_STATUS (*EFI_PEI_PCD_PPI_SET_64)(const EFI_GUID *Guid, UINTN TokenNumber, UINT64 Value);
typedef EFI_STATUS (*EFI_SET_WATCHDOG_TIMER)(UINTN Timeout, UINT64 WatchdogCode, UINTN DataSize, CHAR16 *WatchdogData);
typedef EFI_STATUS (*PCD_PPI_CALLBACK_ONSET)(const EFI_GUID *Guid, UINTN TokenNumber, PCD_PPI_CALLBACK CallBackFunction);
typedef EFI_STATUS (*PCD_PPI_SET_EX_BOOLEAN)(const EFI_GUID *Guid, UINTN TokenNumber, BOOLEAN Value);
typedef EFI_STATUS (*PCD_PROTOCOL_SET_EX_16)(const EFI_GUID *Guid, UINTN TokenNumber, UINT16 Value);
typedef EFI_STATUS (*PCD_PROTOCOL_SET_EX_32)(const EFI_GUID *Guid, UINTN TokenNumber, UINT32 Value);
typedef EFI_STATUS (*PCD_PROTOCOL_SET_EX_64)(const EFI_GUID *Guid, UINTN TokenNumber, UINT64 Value);
typedef EFI_STATUS (*EFI_CREDENTIAL2_TITLE)(const EFI_USER_CREDENTIAL2_PROTOCOL *This, EFI_HII_HANDLE *Hii, EFI_STRING_ID *String);
typedef EFI_STATUS (*EFI_GET_ROOT_HPC_LIST)(EFI_PCI_HOT_PLUG_INIT_PROTOCOL *This, UINTN *HpcCount, EFI_HPC_LOCATION **HpcList);
typedef EFI_STATUS (*EFI_HASH2_HASH_UPDATE)(const EFI_HASH2_PROTOCOL *This, const UINT8 *Message, UINTN MessageSize);
typedef EFI_STATUS (*EFI_PEI_FV_PROCESS_FV)(const EFI_PEI_FIRMWARE_VOLUME_PPI *This, void *Buffer, UINTN BufferSize, EFI_PEI_FV_HANDLE *FvHandle);
typedef EFI_STATUS (*EFI_PEI_PCD_PPI_SET_8)(const EFI_GUID *Guid, UINTN TokenNumber, UINT8 Value);
typedef EFI_STATUS (*EFI_PXE_BASE_CODE_ARP)(EFI_PXE_BASE_CODE_PROTOCOL *This, EFI_IP_ADDRESS *IpAddr, EFI_MAC_ADDRESS *MacAddr);
typedef EFI_STATUS (*EFI_SHELL_CREATE_FILE)(const CHAR16 *FileName, UINT64 FileAttribs, SHELL_FILE_HANDLE *FileHandle);
typedef EFI_STATUS (*EFI_SMM_ALLOCATE_POOL)(EFI_SMM_BASE_PROTOCOL *This, EFI_MEMORY_TYPE PoolType, UINTN Size, void **Buffer);
typedef EFI_STATUS (*EFI_SMM_CAPABILITIES2)(const EFI_SMM_ACCESS2_PROTOCOL *This, UINTN *SmramMapSize, EFI_SMRAM_DESCRIPTOR *SmramMap);
typedef EFI_STATUS (*PCD_PROTOCOL_SET_EX_8)(const EFI_GUID *Guid, UINTN TokenNumber, UINT8 Value);
struct s_pxe_cpb_fill_header {PXE_MAC_ADDR SrcAddr;PXE_MAC_ADDR DestAddr;PXE_UINT64 MediaHeader;PXE_UINT32 PacketLen;PXE_UINT16 Protocol;PXE_UINT16 MediaHeaderLen;};
typedef EFI_STATUS (*EFI_ADD_MEMORY_SPACE)(EFI_GCD_MEMORY_TYPE GcdMemoryType, EFI_PHYSICAL_ADDRESS BaseAddress, UINT64 Length, UINT64 Capabilities);
typedef EFI_STATUS (*EFI_CREDENTIAL2_USER)(const EFI_USER_CREDENTIAL2_PROTOCOL *This, EFI_USER_PROFILE_HANDLE User, EFI_USER_INFO_IDENTIFIER *Identifier);
typedef EFI_STATUS (*EFI_CREDENTIAL_TITLE)(const EFI_USER_CREDENTIAL_PROTOCOL *This, EFI_HII_HANDLE *Hii, EFI_STRING_ID *String);
typedef EFI_STATUS (*EFI_HII_FIND_HANDLES)(EFI_HII_PROTOCOL *This, UINT16 *HandleBufferLength, FRAMEWORK_EFI_HII_HANDLE *Handle);
typedef EFI_STATUS (*EFI_LEGACY_BIOS_BOOT)(EFI_LEGACY_BIOS_PROTOCOL *This, BBS_BBS_DEVICE_PATH *BootOption, UINT32 LoadOptionsSize, void *LoadOptions);
typedef EFI_STATUS (*EFI_MEMORY_TEST_INIT)(EFI_GENERIC_MEMORY_TEST_PROTOCOL *This, EXTENDMEM_COVERAGE_LEVEL Level, BOOLEAN *RequireSoftECCInit);
typedef EFI_STATUS (*EFI_SMM_CAPABILITIES)(EFI_SMM_ACCESS_PROTOCOL *This, UINTN *SmramMapSize, EFI_SMRAM_DESCRIPTOR *SmramMap);
typedef EFI_STATUS (*EFI_VLAN_CONFIG_FIND)(EFI_VLAN_CONFIG_PROTOCOL *This, UINT16 *VlanId, UINT16 *NumberOfVlan, EFI_VLAN_FIND_DATA **Entries);
typedef EFI_STATUS (*SHELLENV_GET_FS_NAME)(EFI_DEVICE_PATH_PROTOCOL *DevPath, BOOLEAN ConsistMapping, CHAR16 **Name);
typedef BOOL (__stdcall *WinNtDuplicateHandle)(HANDLE hSourceProcessHandle, HANDLE hSourceHandle, HANDLE hTargetProcessHandle, LPHANDLE lpTargetHandle, DWORD dwDesiredAccess, BOOL bInheritHandle, DWORD dwOptions);
typedef EFI_STATUS (*EBC_VM_TEST_EXECUTE)(EFI_EBC_VM_TEST_PROTOCOL *This, VM_CONTEXT *VmPtr, UINTN *InstructionCount);
typedef EFI_STATUS (*EFI_ACPI_GET_OPTION)(EFI_ACPI_HANDLE Handle, UINTN Index, EFI_ACPI_DATA_TYPE *DataType, const void **Data, UINTN *DataSize);
typedef EFI_STATUS (*EFI_CREDENTIAL_USER)(const EFI_USER_CREDENTIAL_PROTOCOL *This, EFI_USER_PROFILE_HANDLE User, EFI_USER_INFO_IDENTIFIER *Identifier);
typedef EFI_STATUS (*EFI_DEBUGPORT_WRITE)(EFI_DEBUGPORT_PROTOCOL *This, UINT32 Timeout, UINTN *BufferSize, void *Buffer);
typedef EFI_STATUS (*EFI_HII_TEST_STRING)(EFI_HII_PROTOCOL *This, CHAR16 *StringToTest, UINT32 *FirstMissing, UINT32 *GlyphBufferSize);
typedef EFI_STATUS (*EFI_PCI_DEVICE_PATH)(EFI_DEVICE_IO_PROTOCOL *This, UINT64 PciAddress, EFI_DEVICE_PATH_PROTOCOL **PciDevicePath);
typedef EFI_STATUS (*EFI_PEI_FV_GET_INFO)(const EFI_PEI_FIRMWARE_VOLUME_PPI *This, EFI_PEI_FV_HANDLE FvHandle, EFI_FV_INFO *VolumeInfo);
typedef EFI_STATUS (*EFI_SMM_COMMUNICATE)(EFI_SMM_BASE_PROTOCOL *This, EFI_HANDLE ImageHandle, void *CommunicationBuffer, UINTN *SourceSize);
typedef EFI_STATUS (*EFI_VLAN_CONFIG_SET)(EFI_VLAN_CONFIG_PROTOCOL *This, UINT16 VlanId, UINT8 Priority);
typedef EFI_STATUS (*GET_SEC_PERFORMANCE)(const EFI_PEI_SERVICES **PeiServices, PEI_SEC_PERFORMANCE_PPI *This, FIRMWARE_SEC_PERFORMANCE *Performance);
struct tdTCG_PCR_EVENT_HDR {TCG_PCRINDEX PCRIndex;TCG_EVENTTYPE EventType;TCG_DIGEST Digest;UINT32 EventSize;};
typedef EFI_STATUS (*EFI_DEBUGPORT_READ)(EFI_DEBUGPORT_PROTOCOL *This, UINT32 Timeout, UINTN *BufferSize, void *Buffer);
typedef EFI_STATUS (*EFI_GET_MEMORY_MAP)(UINTN *MemoryMapSize, EFI_MEMORY_DESCRIPTOR *MemoryMap, UINTN *MapKey, UINTN *DescriptorSize, UINT32 *DescriptorVersion);
typedef EFI_STATUS (*EFI_IO_FREE_BUFFER)(EFI_DEVICE_IO_PROTOCOL *This, UINTN Pages, EFI_PHYSICAL_ADDRESS HostAddress);
typedef EFI_STATUS (*EFI_ISA_HC_OPEN_IO)(const EFI_ISA_HC_PROTOCOL *This, UINT16 IoAddress, UINT16 IoLength, UINT64 *IoApertureHandle);
typedef EFI_STATUS (*EFI_UPDATE_CAPSULE)(EFI_CAPSULE_HEADER **CapsuleHeaderArray, UINTN CapsuleCount, EFI_PHYSICAL_ADDRESS ScatterGatherList);
typedef EFI_STATUS (*NT_FWH_INFORMATION)(UINTN Index, EFI_PHYSICAL_ADDRESS *FdBase, UINT64 *FdSize);
typedef EFI_STATUS (*PEI_SMM_DEACTIVATE)(EFI_PEI_SERVICES **PeiServices, PEI_SMM_CONTROL_PPI *This, BOOLEAN Periodic);
typedef EFI_STATUS (*EFI_DHCP6_DECLINE)(EFI_DHCP6_PROTOCOL *This, UINT32 AddressCount, EFI_IPv6_ADDRESS *Addresses);
typedef EFI_STATUS (*EFI_DHCP6_RELEASE)(EFI_DHCP6_PROTOCOL *This, UINT32 AddressCount, EFI_IPv6_ADDRESS *Addresses);
typedef EFI_STATUS (*EFI_DPC_QUEUE_DPC)(EFI_DPC_PROTOCOL *This, EFI_TPL DpcTpl, EFI_DPC_PROCEDURE DpcProcedure, void *DpcContext);
typedef EFI_STATUS (*EFI_DXE_IPL_ENTRY)(const EFI_DXE_IPL_PPI *This, EFI_PEI_SERVICES **PeiServices, EFI_PEI_HOB_POINTERS HobList);
typedef EFI_STATUS (*EFI_FILE_GET_INFO)(EFI_FILE_PROTOCOL *This, EFI_GUID *InformationType, UINTN *BufferSize, void *Buffer);
typedef EFI_STATUS (*EFI_FILE_SET_INFO)(EFI_FILE_PROTOCOL *This, EFI_GUID *InformationType, UINTN BufferSize, void *Buffer);
typedef EFI_STATUS (*EFI_OPEN_PROTOCOL)(EFI_HANDLE Handle, EFI_GUID *Protocol, void **Interface, EFI_HANDLE AgentHandle, EFI_HANDLE ControllerHandle, UINT32 Attributes);
typedef EFI_STATUS (*EFI_SET_BOOT_LOGO)(EFI_BOOT_LOGO_PROTOCOL *This, EFI_GRAPHICS_OUTPUT_BLT_PIXEL *BltBuffer, UINTN DestinationX, UINTN DestinationY, UINTN Width, UINTN Height);
typedef EFI_STATUS (*EFI_SET_SWAP_LOCK)(EFI_SWAP_ADDRESS_RANGE_PROTOCOL *This, EFI_SWAP_LOCK_CAPABILITY LockCapability, BOOLEAN NewLockState);
typedef EFI_STATUS (*EFI_TCG_LOG_EVENT)(EFI_TCG_PROTOCOL *This, TCG_PCR_EVENT *TCGLogData, UINT32 *EventNumber, UINT32 Flags);
typedef EFI_STATUS (*PCD_PPI_SET_EX_16)(const EFI_GUID *Guid, UINTN TokenNumber, UINT16 Value);
typedef EFI_STATUS (*PCD_PPI_SET_EX_32)(const EFI_GUID *Guid, UINTN TokenNumber, UINT32 Value);
typedef EFI_STATUS (*PCD_PPI_SET_EX_64)(const EFI_GUID *Guid, UINTN TokenNumber, UINT64 Value);
typedef MMRESULT (__stdcall *WinNttimeSetEvent)(UINT uDelay, UINT uResolution, LPTIMECALLBACK lpTimeProc, DWORD_PTR dwUser, UINT fuEvent);
typedef EFI_STATUS (*EFI_ADD_IO_SPACE)(EFI_GCD_IO_TYPE GcdIoType, EFI_PHYSICAL_ADDRESS BaseAddress, UINT64 Length);
typedef EFI_STATUS (*EFI_HII_NEW_PACK)(EFI_HII_PROTOCOL *This, EFI_HII_PACKAGES *Packages, FRAMEWORK_EFI_HII_HANDLE *Handle);
typedef EFI_STATUS (*EFI_RNG_GET_INFO)(EFI_RNG_PROTOCOL *This, UINTN *RNGAlgorithmListSize, EFI_RNG_ALGORITHM *RNGAlgorithmList);
typedef EFI_STATUS (*PCD_PPI_SET_EX_8)(const EFI_GUID *Guid, UINTN TokenNumber, UINT8 Value);
typedef EFI_STATUS (*SHELLENV_ADD_CMD)(SHELLENV_INTERNAL_COMMAND Handler, CHAR16 *Cmd, SHELLCMD_GET_LINE_HELP GetLineHelp);
typedef EFI_STATUS (*SHELLENV_EXECUTE)(EFI_HANDLE *ParentImageHandle, CHAR16 *CommandLine, BOOLEAN DebugOutput);
typedef EFI_STATUS (*EFI_EAP_GET_KEY)(EFI_EAP_MANAGEMENT2_PROTOCOL *This, UINT8 *Msk, UINTN *MskSize, UINT8 *Emsk, UINT8 *EmskSize);
typedef EFI_STATUS (*EFI_FV_GET_INFO)(const EFI_FIRMWARE_VOLUME2_PROTOCOL *This, const EFI_GUID *InformationType, UINTN *BufferSize, void *Buffer);
typedef EFI_STATUS (*EFI_FV_SET_INFO)(const EFI_FIRMWARE_VOLUME2_PROTOCOL *This, const EFI_GUID *InformationType, UINTN BufferSize, const void *Buffer);
typedef EFI_STATUS (*EFI_IMAGE_START)(EFI_HANDLE ImageHandle, UINTN *ExitDataSize, CHAR16 **ExitData);
typedef EFI_STATUS (*EFI_TCP4_ROUTES)(EFI_TCP4_PROTOCOL *This, BOOLEAN DeleteRoute, EFI_IPv4_ADDRESS *SubnetAddress, EFI_IPv4_ADDRESS *SubnetMask, EFI_IPv4_ADDRESS *GatewayAddress);
typedef EFI_STATUS (*EFI_UDP4_GROUPS)(EFI_UDP4_PROTOCOL *This, BOOLEAN JoinFlag, EFI_IPv4_ADDRESS *MulticastAddress);
typedef EFI_STATUS (*EFI_UDP4_ROUTES)(EFI_UDP4_PROTOCOL *This, BOOLEAN DeleteRoute, EFI_IPv4_ADDRESS *SubnetAddress, EFI_IPv4_ADDRESS *SubnetMask, EFI_IPv4_ADDRESS *GatewayAddress);
typedef EFI_STATUS (*EFI_UDP6_GROUPS)(EFI_UDP6_PROTOCOL *This, BOOLEAN JoinFlag, EFI_IPv6_ADDRESS *MulticastAddress);
typedef EFI_STATUS (*PEI_NT_AUTOSCAN)(UINTN Index, EFI_PHYSICAL_ADDRESS *MemoryBase, UINT64 *MemorySize);
typedef void (*PKT_RCVD_NOTIFY)(EFI_STATUS Status, UINT8 IcmpErr, EFI_NET_SESSION_DATA *NetSession, NET_BUF *Pkt, void *Context);
typedef EFI_STATUS (*EFI_HII_EXPORT)(EFI_HII_PROTOCOL *This, FRAMEWORK_EFI_HII_HANDLE Handle, UINTN *BufferSize, void *Buffer);
typedef EFI_STATUS (*EFI_IP4_GROUPS)(EFI_IP4_PROTOCOL *This, BOOLEAN JoinFlag, EFI_IPv4_ADDRESS *GroupAddress);
typedef EFI_STATUS (*EFI_IP4_ROUTES)(EFI_IP4_PROTOCOL *This, BOOLEAN DeleteRoute, EFI_IPv4_ADDRESS *SubnetAddress, EFI_IPv4_ADDRESS *SubnetMask, EFI_IPv4_ADDRESS *GatewayAddress);
typedef EFI_STATUS (*EFI_IP6_GROUPS)(EFI_IP6_PROTOCOL *This, BOOLEAN JoinFlag, EFI_IPv6_ADDRESS *GroupAddress);
typedef EFI_STATUS (*EFI_SIO_MODIFY)(const EFI_SIO_PROTOCOL *This, const EFI_SIO_REGISTER_MODIFY *Command, UINTN NumberOfCommands);
typedef EFI_STATUS (*EFI_TAPE_SPACE)(EFI_TAPE_IO_PROTOCOL *This, INTN Direction, UINTN Type);
typedef EFI_STATUS (*PASSWORD_CHECK)(FORM_DISPLAY_ENGINE_FORM *Form, FORM_DISPLAY_ENGINE_STATEMENT *Statement, EFI_STRING PasswordString);
typedef EFI_STATUS (*PEI_ENABLE_ATA)(EFI_PEI_SERVICES **PeiServices, PEI_ATA_CONTROLLER_PPI *This, UINT8 ChannelMask);
typedef EFI_STATUS (*EFI_FILE_OPEN)(EFI_FILE_PROTOCOL *This, EFI_FILE_PROTOCOL **NewHandle, CHAR16 *FileName, UINT64 OpenMode, UINT64 Attributes);
typedef EFI_STATUS (*EFI_PEI_STALL)(const EFI_PEI_SERVICES **PeiServices, const EFI_PEI_STALL_PPI *This, UINTN Microseconds);
typedef EFI_STATUS (*EFI_SET_TIMER)(EFI_EVENT Event, EFI_TIMER_DELAY Type, UINT64 TriggerTime);
typedef EFI_STATUS (*PEI_SMM_CLOSE)(EFI_PEI_SERVICES **PeiServices, PEI_SMM_ACCESS_PPI *This, UINTN DescriptorIndex);
typedef EFI_STATUS (*PEI_SMM_LOCK)(EFI_PEI_SERVICES **PeiServices, PEI_SMM_ACCESS_PPI *This, UINTN DescriptorIndex);
typedef EFI_STATUS (*PEI_SMM_OPEN)(EFI_PEI_SERVICES **PeiServices, PEI_SMM_ACCESS_PPI *This, UINTN DescriptorIndex);
typedef INT32 (*WinNtSprintf)(LPWSTR Buffer, size_t Count, LPCWSTR String, ...);
typedef EFI_STATUS (*EFI_ARP_ADD)(EFI_ARP_PROTOCOL *This, BOOLEAN DenyFlag, void *TargetSwAddress, void *TargetHwAddress, UINT32 TimeoutValue, BOOLEAN Overwrite);
typedef EFI_STATUS (*EFI_EXIT)(EFI_HANDLE ImageHandle, EFI_STATUS ExitStatus, UINTN ExitDataSize, CHAR16 *ExitData);
typedef EFI_STATUS (*EFI_PCI_HOST_BRIDGE_RESOURCE_ALLOCATION_PROTOCOL_PREPROCESS_CONTROLLER)(EFI_PCI_HOST_BRIDGE_RESOURCE_ALLOCATION_PROTOCOL *This, EFI_HANDLE RootBridgeHandle, EFI_PCI_ROOT_BRIDGE_IO_PROTOCOL_PCI_ADDRESS PciAddress, EFI_PCI_CONTROLLER_RESOURCE_ALLOCATION_PHASE Phase);
typedef EFI_STATUS (*EFI_BLUETOOTH_CONFIG_REGISTER_CONNECT_COMPLETE_CALLBACK_FUNCTION)(EFI_BLUETOOTH_CONFIG_PROTOCOL *This, void *Context, EFI_BLUETOOTH_CONNECT_COMPLETE_CALLBACK_TYPE CallbackType, BLUETOOTH_ADDRESS *BDAddr, void *InputBuffer, UINTN InputBufferSize);
typedef EFI_STATUS (*PEI_USB2_HOST_CONTROLLER_CLEAR_ROOTHUB_PORT_FEATURE)(EFI_PEI_SERVICES **PeiServices, PEI_USB2_HOST_CONTROLLER_PPI *This, UINT8 PortNumber, EFI_USB_PORT_FEATURE PortFeature);
typedef EFI_STATUS (*PEI_USB_HOST_CONTROLLER_CLEAR_ROOTHUB_PORT_FEATURE)(EFI_PEI_SERVICES **PeiServices, PEI_USB_HOST_CONTROLLER_PPI *This, UINT8 PortNumber, EFI_USB_PORT_FEATURE PortFeature);
typedef EFI_STATUS (*EFI_FIRMWARE_MANAGEMENT_PROTOCOL_GET_PACKAGE_INFO)(EFI_FIRMWARE_MANAGEMENT_PROTOCOL *This, UINT32 *PackageVersion, CHAR16 **PackageVersionName, UINT32 *PackageVersionNameMaxLen, UINT64 *AttributesSupported, UINT64 *AttributesSetting);
typedef EFI_STATUS (*EFI_FIRMWARE_MANAGEMENT_PROTOCOL_SET_PACKAGE_INFO)(EFI_FIRMWARE_MANAGEMENT_PROTOCOL *This, const void *Image, UINTN ImageSize, const void *VendorCode, UINT32 PackageVersion, const CHAR16 *PackageVersionName);
typedef EFI_STATUS (*PEI_USB2_HOST_CONTROLLER_SET_ROOTHUB_PORT_FEATURE)(EFI_PEI_SERVICES **PeiServices, PEI_USB2_HOST_CONTROLLER_PPI *This, UINT8 PortNumber, EFI_USB_PORT_FEATURE PortFeature);
typedef EFI_STATUS (*PEI_USB2_HOST_CONTROLLER_GET_ROOTHUB_PORT_STATUS)(EFI_PEI_SERVICES **PeiServices, PEI_USB2_HOST_CONTROLLER_PPI *This, UINT8 PortNumber, EFI_USB_PORT_STATUS *PortStatus);
typedef EFI_STATUS (*PEI_USB_HOST_CONTROLLER_SET_ROOTHUB_PORT_FEATURE)(EFI_PEI_SERVICES **PeiServices, PEI_USB_HOST_CONTROLLER_PPI *This, UINT8 PortNumber, EFI_USB_PORT_FEATURE PortFeature);
typedef EFI_STATUS (*PEI_USB_HOST_CONTROLLER_GET_ROOTHUB_PORT_STATUS)(EFI_PEI_SERVICES **PeiServices, PEI_USB_HOST_CONTROLLER_PPI *This, UINT8 PortNumber, EFI_USB_PORT_STATUS *PortStatus);
typedef EFI_STATUS (*EFI_USB_HC_PROTOCOL_ASYNC_ISOCHRONOUS_TRANSFER)(EFI_USB_HC_PROTOCOL *This, UINT8 DeviceAddress, UINT8 EndPointAddress, UINT8 MaximumPacketLength, void *Data, UINTN DataLength, EFI_ASYNC_USB_TRANSFER_CALLBACK IsochronousCallBack, void *Context);
typedef EFI_STATUS (*EFI_FIRMWARE_MANAGEMENT_PROTOCOL_CHECK_IMAGE)(EFI_FIRMWARE_MANAGEMENT_PROTOCOL *This, UINT8 ImageIndex, const void *Image, UINTN ImageSize, UINT32 *ImageUpdatable);
typedef EFI_STATUS (*EFI_LEGACY_BIOS_PLATFORM_GET_PLATFORM_INFO)(EFI_LEGACY_BIOS_PLATFORM_PROTOCOL *This, EFI_GET_PLATFORM_INFO_MODE Mode, void **Table, UINTN *TableSize, UINTN *Location, UINTN *Alignment, UINT16 LegacySegment, UINT16 LegacyOffset);
typedef EFI_STATUS (*EFI_PLATFORM_TO_DRIVER_CONFIGURATION_QUERY)(const EFI_PLATFORM_TO_DRIVER_CONFIGURATION_PROTOCOL *This, const EFI_HANDLE ControllerHandle, const EFI_HANDLE ChildHandle, const UINTN *Instance, EFI_GUID **ParameterTypeGuid, void **ParameterBlock, UINTN *ParameterBlockSize);
typedef EFI_STATUS (*FRAMEWORK_EFI_MP_SERVICES_ENABLEDISABLEAP)(FRAMEWORK_EFI_MP_SERVICES_PROTOCOL *This, UINTN ProcessorNumber, BOOLEAN NewAPState, EFI_MP_HEALTH *HealthState);
typedef EFI_STATUS (*FRAMEWORK_EFI_MP_SERVICES_STARTUP_THIS_AP)(FRAMEWORK_EFI_MP_SERVICES_PROTOCOL *This, FRAMEWORK_EFI_AP_PROCEDURE Procedure, UINTN ProcessorNumber, EFI_EVENT WaitEvent, UINTN TimeoutInMicroSecs, void *ProcArguments);
typedef EFI_STATUS (*EFI_BLUETOOTH_IO_L2CAP_RAW_ASYNC_RECEIVE)(EFI_BLUETOOTH_IO_PROTOCOL *This, BOOLEAN IsNewTransfer, UINTN PollingInterval, UINTN DataLength, EFI_BLUETOOTH_IO_ASYNC_FUNC_CALLBACK Callback, void *Context);
typedef EFI_STATUS (*EFI_DRIVER_CONFIGURATION2_FORCE_DEFAULTS)(EFI_DRIVER_CONFIGURATION2_PROTOCOL *This, EFI_HANDLE ControllerHandle, EFI_HANDLE ChildHandle, UINT32 DefaultType, EFI_DRIVER_CONFIGURATION_ACTION_REQUIRED *ActionRequired);
typedef EFI_STATUS (*EFI_EXT_SCSI_PASS_THRU_BUILD_DEVICE_PATH)(EFI_EXT_SCSI_PASS_THRU_PROTOCOL *This, UINT8 *Target, UINT64 Lun, EFI_DEVICE_PATH_PROTOCOL **DevicePath);
typedef EFI_STATUS (*EFI_PCI_ROOT_BRIDGE_IO_PROTOCOL_COPY_MEM)(EFI_PCI_ROOT_BRIDGE_IO_PROTOCOL *This, EFI_PCI_ROOT_BRIDGE_IO_PROTOCOL_WIDTH Width, UINT64 DestAddress, UINT64 SrcAddress, UINTN Count);
typedef EFI_STATUS (*EFI_PEI_DEVICE_GET_RECOVERY_CAPSULE_INFO)(EFI_PEI_SERVICES **PeiServices, EFI_PEI_DEVICE_RECOVERY_MODULE_PPI *This, UINTN CapsuleInstance, UINTN *Size, EFI_GUID *CapsuleType);
typedef EFI_STATUS (*EFI_USBFN_IO_GET_ENDPOINT_MAXPACKET_SIZE)(EFI_USBFN_IO_PROTOCOL *This, EFI_USB_ENDPOINT_TYPE EndpointType, EFI_USB_BUS_SPEED BusSpeed, UINT16 *MaxPacketSize);
typedef EFI_STATUS (*EFI_USB_HC_PROTOCOL_ISOCHRONOUS_TRANSFER)(EFI_USB_HC_PROTOCOL *This, UINT8 DeviceAddress, UINT8 EndPointAddress, UINT8 MaximumPacketLength, void *Data, UINTN DataLength, UINT32 *TransferResult);
typedef EFI_STATUS (*EFI_BLUETOOTH_HC_ASYNC_RECEIVE_ACL_DATA)(EFI_BLUETOOTH_HC_PROTOCOL *This, BOOLEAN IsNewTransfer, UINTN PollingInterval, UINTN DataLength, EFI_BLUETOOTH_HC_ASYNC_FUNC_CALLBACK Callback, void *Context);
typedef EFI_STATUS (*EFI_BLUETOOTH_HC_ASYNC_RECEIVE_SCO_DATA)(EFI_BLUETOOTH_HC_PROTOCOL *This, BOOLEAN IsNewTransfer, UINTN PollingInterval, UINTN DataLength, EFI_BLUETOOTH_HC_ASYNC_FUNC_CALLBACK Callback, void *Context);
typedef EFI_STATUS (*EFI_BLUETOOTH_IO_L2CAP_REGISTER_SERVICE)(EFI_BLUETOOTH_IO_PROTOCOL *This, EFI_HANDLE *Handle, UINT16 Psm, UINT16 Mtu, EFI_BLUETOOTH_IO_CHANNEL_SERVICE_CALLBACK Callback, void *Context);
typedef EFI_STATUS (*EFI_COMPONENT_NAME2_GET_CONTROLLER_NAME)(EFI_COMPONENT_NAME2_PROTOCOL *This, EFI_HANDLE ControllerHandle, EFI_HANDLE ChildHandle, CHAR8 *Language, CHAR16 **ControllerName);
typedef EFI_STATUS (*EFI_DRIVER_CONFIGURATION_FORCE_DEFAULTS)(EFI_DRIVER_CONFIGURATION_PROTOCOL *This, EFI_HANDLE ControllerHandle, EFI_HANDLE ChildHandle, UINT32 DefaultType, EFI_DRIVER_CONFIGURATION_ACTION_REQUIRED *ActionRequired);
typedef EFI_STATUS (*EFI_GRAPHICS_OUTPUT_PROTOCOL_QUERY_MODE)(EFI_GRAPHICS_OUTPUT_PROTOCOL *This, UINT32 ModeNumber, UINTN *SizeOfInfo, EFI_GRAPHICS_OUTPUT_MODE_INFORMATION **Info);
typedef EFI_STATUS (*EFI_COMPONENT_NAME_GET_CONTROLLER_NAME)(EFI_COMPONENT_NAME_PROTOCOL *This, EFI_HANDLE ControllerHandle, EFI_HANDLE ChildHandle, CHAR8 *Language, CHAR16 **ControllerName);
typedef EFI_STATUS (*EFI_PCI_ROOT_BRIDGE_IO_PROTOCOL_IO_MEM)(EFI_PCI_ROOT_BRIDGE_IO_PROTOCOL *This, EFI_PCI_ROOT_BRIDGE_IO_PROTOCOL_WIDTH Width, UINT64 Address, UINTN Count, void *Buffer);
typedef EFI_STATUS (*EFI_PEI_MP_SERVICES_GET_PROCESSOR_INFO)(const EFI_PEI_SERVICES **PeiServices, EFI_PEI_MP_SERVICES_PPI *This, UINTN ProcessorNumber, EFI_PROCESSOR_INFORMATION *ProcessorInfoBuffer);
typedef EFI_STATUS (*EFI_SMART_CARD_EDGE_BUILD_DH_AGREEMENT)(EFI_SMART_CARD_EDGE_PROTOCOL *This, EFI_HANDLE SCardHandle, UINTN KeyId, UINT8 *dataQx, UINT8 *dataQy, UINT8 *DHAgreement);
typedef EFI_STATUS (*EDKII_MEMORY_PROFILE_UNREGISTER_IMAGE)(EDKII_MEMORY_PROFILE_PROTOCOL *This, EFI_DEVICE_PATH_PROTOCOL *FilePath, PHYSICAL_ADDRESS ImageBase, UINT64 ImageSize);
typedef EFI_STATUS (*EFI_BLOCK_IO_CRYPTO_GET_CONFIGURATION)(EFI_BLOCK_IO_CRYPTO_PROTOCOL *This, UINT64 StartIndex, UINT64 ConfigurationCount, EFI_GUID *KeyOwnerGuid, EFI_BLOCK_IO_CRYPTO_RESPONSE_CONFIGURATION_ENTRY *ConfigurationTable);
typedef EFI_STATUS (*EFI_BLOCK_IO_CRYPTO_SET_CONFIGURATION)(EFI_BLOCK_IO_CRYPTO_PROTOCOL *This, UINT64 ConfigurationCount, EFI_BLOCK_IO_CRYPTO_CONFIGURATION_TABLE_ENTRY *ConfigurationTable, EFI_BLOCK_IO_CRYPTO_RESPONSE_CONFIGURATION_ENTRY *ResultingTable);
typedef EFI_STATUS (*EFI_DRIVER_CONFIGURATION2_SET_OPTIONS)(EFI_DRIVER_CONFIGURATION2_PROTOCOL *This, EFI_HANDLE ControllerHandle, EFI_HANDLE ChildHandle, CHAR8 *Language, EFI_DRIVER_CONFIGURATION_ACTION_REQUIRED *ActionRequired);
typedef EFI_STATUS (*EFI_EXT_SCSI_PASS_THRU_GET_TARGET_LUN)(EFI_EXT_SCSI_PASS_THRU_PROTOCOL *This, EFI_DEVICE_PATH_PROTOCOL *DevicePath, UINT8 **Target, UINT64 *Lun);
typedef EFI_STATUS (*EFI_I2C_MASTER_PROTOCOL_START_REQUEST)(const EFI_I2C_MASTER_PROTOCOL *This, UINTN SlaveAddress, EFI_I2C_REQUEST_PACKET *RequestPacket, EFI_EVENT Event, EFI_STATUS *I2cStatus);
typedef EFI_STATUS (*EFI_PEI_GET_DEVICE_MEDIA_INFORMATION2)(EFI_PEI_SERVICES **PeiServices, EFI_PEI_RECOVERY_BLOCK_IO2_PPI *This, UINTN DeviceIndex, EFI_PEI_BLOCK_IO2_MEDIA *MediaInfo);
typedef EFI_STATUS (*EFI_USBFN_IO_GET_ENDPOINT_STALL_STATE)(EFI_USBFN_IO_PROTOCOL *This, UINT8 EndpointIndex, EFI_USBFN_ENDPOINT_DIRECTION Direction, BOOLEAN *State);
typedef EFI_STATUS (*EFI_USBFN_IO_SET_ENDPOINT_STALL_STATE)(EFI_USBFN_IO_PROTOCOL *This, UINT8 EndpointIndex, EFI_USBFN_ENDPOINT_DIRECTION Direction, BOOLEAN *State);
typedef EFI_STATUS (*EFI_USB_IO_ASYNC_ISOCHRONOUS_TRANSFER)(EFI_USB_IO_PROTOCOL *This, UINT8 DeviceEndpoint, void *Data, UINTN DataLength, EFI_ASYNC_USB_TRANSFER_CALLBACK IsochronousCallBack, void *Context);
typedef EFI_STATUS (*SECURITY2_FILE_AUTHENTICATION_HANDLER)(UINT32 AuthenticationStatus, const EFI_DEVICE_PATH_PROTOCOL *File, void *FileBuffer, UINTN FileSize, BOOLEAN BootPolicy);
struct _EFI_WIRELESS_MAC_CONNECTION_PROTOCOL {EFI_WIRELESS_MAC_CONNECTION_SCAN Scan;EFI_WIRELESS_MAC_CONNECTION_ASSOCIATE Associate;EFI_WIRELESS_MAC_CONNECTION_DISASSOCIATE Disassociate;EFI_WIRELESS_MAC_CONNECTION_AUTHENTICATE Authenticate;EFI_WIRELESS_MAC_CONNECTION_DEAUTHENTICATE Deauthenticate;};
typedef EFI_STATUS (*EFI_BLUETOOTH_CONFIG_GET_REMOTE_DATA)(EFI_BLUETOOTH_CONFIG_PROTOCOL *This, EFI_BLUETOOTH_CONFIG_DATA_TYPE DataType, BLUETOOTH_ADDRESS BDAddr, UINTN *DataSize, void *Data);
typedef EFI_STATUS (*EFI_BLUETOOTH_HC_ASYNC_RECEIVE_EVENT)(EFI_BLUETOOTH_HC_PROTOCOL *This, BOOLEAN IsNewTransfer, UINTN PollingInterval, UINTN DataLength, EFI_BLUETOOTH_HC_ASYNC_FUNC_CALLBACK Callback, void *Context);
typedef EFI_STATUS (*EFI_DRIVER_CONFIGURATION_SET_OPTIONS)(EFI_DRIVER_CONFIGURATION_PROTOCOL *This, EFI_HANDLE ControllerHandle, EFI_HANDLE ChildHandle, CHAR8 *Language, EFI_DRIVER_CONFIGURATION_ACTION_REQUIRED *ActionRequired);
typedef EFI_STATUS (*EFI_PEI_GET_DEVICE_MEDIA_INFORMATION)(EFI_PEI_SERVICES **PeiServices, EFI_PEI_RECOVERY_BLOCK_IO_PPI *This, UINTN DeviceIndex, EFI_PEI_BLOCK_IO_MEDIA *MediaInfo);
typedef EFI_STATUS (*EFI_SCSI_PASS_THRU_BUILD_DEVICE_PATH)(EFI_SCSI_PASS_THRU_PROTOCOL *This, UINT32 Target, UINT64 Lun, EFI_DEVICE_PATH_PROTOCOL **DevicePath);
typedef EFI_STATUS (*EFI_I2C_HOST_PROTOCOL_QUEUE_REQUEST)(const EFI_I2C_HOST_PROTOCOL *This, UINTN I2cBusConfiguration, UINTN SlaveAddress, EFI_EVENT Event, EFI_I2C_REQUEST_PACKET *RequestPacket, EFI_STATUS *I2cStatus);
typedef EFI_STATUS (*EFI_MANAGED_NETWORK_MCAST_IP_TO_MAC)(EFI_MANAGED_NETWORK_PROTOCOL *This, BOOLEAN Ipv6Flag, EFI_IP_ADDRESS *IpAddress, EFI_MAC_ADDRESS *MacAddress);
typedef EFI_STATUS (*EFI_PCI_ROOT_BRIDGE_IO_PROTOCOL_MAP)(EFI_PCI_ROOT_BRIDGE_IO_PROTOCOL *This, EFI_PCI_ROOT_BRIDGE_IO_PROTOCOL_OPERATION Operation, void *HostAddress, UINTN *NumberOfBytes, EFI_PHYSICAL_ADDRESS *DeviceAddress, void **Mapping);
typedef EFI_STATUS (*EFI_PEI_MP_SERVICES_STARTUP_THIS_AP)(const EFI_PEI_SERVICES **PeiServices, EFI_PEI_MP_SERVICES_PPI *This, EFI_AP_PROCEDURE Procedure, UINTN ProcessorNumber, UINTN TimeoutInMicroseconds, void *ProcedureArgument);
typedef EFI_STATUS (*EFI_SMART_CARD_EDGE_GET_READER_NAME)(EFI_SMART_CARD_EDGE_PROTOCOL *This, EFI_HANDLE SCardHandle, UINTN *ReaderNameLength, CHAR16 *ReaderName);
typedef EFI_STATUS (*EFI_IPSEC_CONFIG_GET_NEXT_SELECTOR)(EFI_IPSEC_CONFIG_PROTOCOL *This, EFI_IPSEC_CONFIG_DATA_TYPE DataType, UINTN *SelectorSize, EFI_IPSEC_CONFIG_SELECTOR *Selector);
typedef EFI_STATUS (*EFI_NVM_EXPRESS_PASS_THRU_PASSTHRU)(EFI_NVM_EXPRESS_PASS_THRU_PROTOCOL *This, UINT32 NamespaceId, EFI_NVM_EXPRESS_PASS_THRU_COMMAND_PACKET *Packet, EFI_EVENT Event);
typedef EFI_STATUS (*EFI_SIMPLE_NETWORK_MCAST_IP_TO_MAC)(EFI_SIMPLE_NETWORK_PROTOCOL *This, BOOLEAN IPv6, EFI_IP_ADDRESS *IP, EFI_MAC_ADDRESS *MAC);
typedef EFI_STATUS (*EFI_SMART_CARD_EDGE_GET_CREDENTIAL)(EFI_SMART_CARD_EDGE_PROTOCOL *This, EFI_HANDLE SCardHandle, UINTN *CredentialSize, UINT8 *CredentialList);
typedef EFI_STATUS (*EFI_SMM_IO_TRAP_DISPATCH2_REGISTER)(const EFI_SMM_IO_TRAP_DISPATCH2_PROTOCOL *This, EFI_SMM_HANDLER_ENTRY_POINT2 DispatchFunction, EFI_SMM_IO_TRAP_REGISTER_CONTEXT *RegisterContext, EFI_HANDLE *DispatchHandle);
typedef EFI_STATUS (*EFI_USB_IO_SYNC_INTERRUPT_TRANSFER)(EFI_USB_IO_PROTOCOL *This, UINT8 DeviceEndpoint, void *Data, UINTN *DataLength, UINTN Timeout, UINT32 *Status);
struct _0A64B2C198268F8E9BBD337C23AB2846 {INIT_PROTOCOL_INFO_ENUMERATOR Init;NEXT_PROTOCOL_INFO Next;SKIP_PROTOCOL_INFO Skip;RESET_PROTOCOL_INFO_ENUMERATOR Reset;CLOSE_PROTOCOL_INFO_ENUMERATOR Close;};
struct _245EABCE14800BB4F506C211CCF9ADFB {EFI_EVENT Event;EFI_STATUS Status;EFI_80211_ASSOCIATE_DATA *Data;EFI_80211_ASSOCIATE_RESULT_CODE ResultCode;EFI_80211_ASSOCIATE_RESULT *Result;};
struct _66E8D7E36AC65E05F7A2229148E617E4 {LIST_ENTRY Link;EFI_STATUS Status;const CHAR16 *FullName;const CHAR16 *FileName;SHELL_FILE_HANDLE Handle;EFI_FILE_INFO *Info;};
struct _846F00D9E97F385097775185843E5372 {TPMI_RH_NV_INDEX nvIndex;TPMI_ALG_HASH nameAlg;TPMA_NV attributes;TPM2B_DIGEST authPolicy;UINT16 dataSize;};
struct _91BCB217EE4E0D315146F9D97B70E581 {EFI_EVENT Event;EFI_STATUS Status;EFI_80211_AUTHENTICATE_DATA *Data;EFI_80211_AUTHENTICATE_RESULT_CODE ResultCode;EFI_80211_AUTHENTICATE_RESULT *Result;};
struct _C6783E812A4944B8FFD5EE85DA7123F5 {EFI_EVENT Event;EFI_STATUS Status;EFI_80211_SCAN_DATA *Data;EFI_80211_SCAN_RESULT_CODE ResultCode;EFI_80211_SCAN_RESULT *Result;};
typedef EFI_STATUS (*EFI_I2C_IO_PROTOCOL_QUEUE_REQUEST)(const EFI_I2C_IO_PROTOCOL *This, UINTN SlaveAddressIndex, EFI_EVENT Event, EFI_I2C_REQUEST_PACKET *RequestPacket, EFI_STATUS *I2cStatus);
typedef EFI_STATUS (*EFI_SCSI_PASS_THRU_GET_TARGET_LUN)(EFI_SCSI_PASS_THRU_PROTOCOL *This, EFI_DEVICE_PATH_PROTOCOL *DevicePath, UINT32 *Target, UINT64 *Lun);
typedef EFI_STATUS (*EFI_SECURITY2_FILE_AUTHENTICATION)(const EFI_SECURITY2_ARCH_PROTOCOL *This, const EFI_DEVICE_PATH_PROTOCOL *DevicePath, void *FileBuffer, UINTN FileSize, BOOLEAN BootPolicy);
typedef EFI_STATUS (*EFI_USB_HC_PROTOCOL_BULK_TRANSFER)(EFI_USB_HC_PROTOCOL *This, UINT8 DeviceAddress, UINT8 EndPointAddress, UINT8 MaximumPacketLength, void *Data, UINTN *DataLength, UINT8 *DataToggle, UINTN TimeOut, UINT32 *TransferResult);
typedef EFI_STATUS (*EFI_GRAPHICS_OUTPUT_PROTOCOL_BLT)(EFI_GRAPHICS_OUTPUT_PROTOCOL *This, EFI_GRAPHICS_OUTPUT_BLT_PIXEL *BltBuffer, EFI_GRAPHICS_OUTPUT_BLT_OPERATION BltOperation, UINTN SourceX, UINTN SourceY, UINTN DestinationX, UINTN DestinationY, UINTN Width, UINTN Height, UINTN Delta);
typedef EFI_STATUS (*EFI_SMART_CARD_READER_GET_ATTRIB)(EFI_SMART_CARD_READER_PROTOCOL *This, UINT32 Attrib, UINT8 *OutBuffer, UINTN *OutBufferLength);
typedef EFI_STATUS (*EFI_SMBUS_HC_PROTOCOL_ARP_DEVICE)(const EFI_SMBUS_HC_PROTOCOL *This, BOOLEAN ArpAll, EFI_SMBUS_UDID *SmbusUdid, EFI_SMBUS_DEVICE_ADDRESS *SlaveAddress);
typedef EFI_STATUS (*EFI_SMM_PERIODIC_TIMER_REGISTER2)(const EFI_SMM_PERIODIC_TIMER_DISPATCH2_PROTOCOL *This, EFI_SMM_HANDLER_ENTRY_POINT2 DispatchFunction, const EFI_SMM_PERIODIC_TIMER_REGISTER_CONTEXT *RegisterContext, EFI_HANDLE *DispatchHandle);
typedef EFI_STATUS (*EFI_SMM_STANDBY_BUTTON_REGISTER2)(const EFI_SMM_STANDBY_BUTTON_DISPATCH2_PROTOCOL *This, EFI_SMM_HANDLER_ENTRY_POINT2 DispatchFunction, EFI_SMM_STANDBY_BUTTON_REGISTER_CONTEXT *RegisterContext, EFI_HANDLE *DispatchHandle);
typedef EFI_STATUS (*EFI_USB_IO_GET_STRING_DESCRIPTOR)(EFI_USB_IO_PROTOCOL *This, UINT16 LangID, UINT8 StringID, CHAR16 **String);
struct s_pxe_cpb_fill_header_fragmented {PXE_MAC_ADDR SrcAddr;PXE_MAC_ADDR DestAddr;PXE_UINT32 PacketLen;PXE_MEDIA_PROTOCOL Protocol;PXE_UINT16 MediaHeaderLen;PXE_UINT16 FragCnt;PXE_UINT16 reserved;struct s_pxe_cpb_fill_header_fragmented___B13E8BB19B25C47A4B5B59F0D316DBC1 FragDesc[16];};
typedef EFI_STATUS (*EFI_MP_SERVICES_ENABLEDISABLEAP)(EFI_MP_SERVICES_PROTOCOL *This, UINTN ProcessorNumber, BOOLEAN EnableAP, UINT32 *HealthFlag);
typedef EFI_STATUS (*EFI_PCI_IO_PROTOCOL_POLL_IO_MEM)(EFI_PCI_IO_PROTOCOL *This, EFI_PCI_IO_PROTOCOL_WIDTH Width, UINT8 BarIndex, UINT64 Offset, UINT64 Mask, UINT64 Value, UINT64 Delay, UINT64 *Result);
typedef EFI_STATUS (*EFI_PEI_GET_NEXT_VARIABLE_NAME2)(const EFI_PEI_READ_ONLY_VARIABLE2_PPI *This, UINTN *VariableNameSize, CHAR16 *VariableName, EFI_GUID *VariableGuid);
typedef EFI_STATUS (*EFI_REGISTER_EXCEPTION_CALLBACK)(EFI_DEBUG_SUPPORT_PROTOCOL *This, UINTN ProcessorIndex, EFI_EXCEPTION_CALLBACK ExceptionCallback, EFI_EXCEPTION_TYPE ExceptionType);
typedef EFI_STATUS (*EFI_SMM_PERIODIC_TIMER_REGISTER)(EFI_SMM_PERIODIC_TIMER_DISPATCH_PROTOCOL *This, EFI_SMM_PERIODIC_TIMER_DISPATCH DispatchFunction, EFI_SMM_PERIODIC_TIMER_DISPATCH_CONTEXT *DispatchContext, EFI_HANDLE *DispatchHandle);
typedef EFI_STATUS (*EFI_SMM_STANDBY_BUTTON_REGISTER)(EFI_SMM_STANDBY_BUTTON_DISPATCH_PROTOCOL *This, EFI_SMM_STANDBY_BUTTON_DISPATCH DispatchFunction, EFI_SMM_STANDBY_BUTTON_DISPATCH_CONTEXT *DispatchContext, EFI_HANDLE *DispatchHandle);
typedef EFI_STATUS (*EFI_USB_IO_ISOCHRONOUS_TRANSFER)(EFI_USB_IO_PROTOCOL *This, UINT8 DeviceEndpoint, void *Data, UINTN DataLength, UINT32 *Status);
typedef EFI_STATUS (*PEI_USB_GET_ENDPOINT_DESCRIPTOR)(EFI_PEI_SERVICES **PeiServices, PEI_USB_IO_PPI *This, UINT8 EndpointIndex, EFI_USB_ENDPOINT_DESCRIPTOR **EndpointDescriptor);
typedef EFI_STATUS (*EFI_BLUETOOTH_IO_L2CAP_CONNECT)(EFI_BLUETOOTH_IO_PROTOCOL *This, EFI_HANDLE *Handle, UINT16 Psm, UINT16 Mtu, EFI_BLUETOOTH_IO_CHANNEL_SERVICE_CALLBACK Callback, void *Context);
typedef EFI_STATUS (*EFI_EAP_CONFIGURATION_GET_DATA)(EFI_EAP_CONFIGURATION_PROTOCOL *This, EFI_EAP_TYPE EapType, EFI_EAP_CONFIG_DATA_TYPE DataType, void *Data, UINTN *DataSize);
typedef EFI_STATUS (*EFI_EAP_CONFIGURATION_SET_DATA)(EFI_EAP_CONFIGURATION_PROTOCOL *This, EFI_EAP_TYPE EapType, EFI_EAP_CONFIG_DATA_TYPE DataType, void *Data, UINTN DataSize);
typedef EFI_STATUS (*EFI_FAULT_TOLERANT_WRITE_WRITE)(EFI_FAULT_TOLERANT_WRITE_PROTOCOL *This, EFI_LBA Lba, UINTN Offset, UINTN Length, void *PrivateData, EFI_HANDLE FvbHandle, void *Buffer);
typedef EFI_STATUS (*EFI_PEI_GET_NEXT_VARIABLE_NAME)(EFI_PEI_SERVICES **PeiServices, UINTN *VariableNameSize, CHAR16 *VariableName, EFI_GUID *VendorGuid);
typedef EFI_STATUS (*EFI_PEI_MP_SERVICES_SWITCH_BSP)(const EFI_PEI_SERVICES **PeiServices, EFI_PEI_MP_SERVICES_PPI *This, UINTN ProcessorNumber, BOOLEAN EnableOldBSP);
typedef EFI_STATUS (*EFI_QUERY_CAPSULE_CAPABILITIES)(EFI_CAPSULE_HEADER **CapsuleHeaderArray, UINTN CapsuleCount, UINT64 *MaximumCapsuleSize, EFI_RESET_TYPE *ResetType);
typedef EFI_STATUS (*EFI_SMM_POWER_BUTTON_REGISTER2)(const EFI_SMM_POWER_BUTTON_DISPATCH2_PROTOCOL *This, EFI_SMM_HANDLER_ENTRY_POINT2 DispatchFunction, EFI_SMM_POWER_BUTTON_REGISTER_CONTEXT *RegisterContext, EFI_HANDLE *DispatchHandle);
typedef EFI_STATUS (*EFI_TCG2_HASH_LOG_EXTEND_EVENT)(EFI_TCG2_PROTOCOL *This, UINT64 Flags, EFI_PHYSICAL_ADDRESS DataToHash, UINT64 DataToHashLen, EFI_TCG2_EVENT *EfiTcgEvent);
typedef EFI_STATUS (*EFI_TREE_HASH_LOG_EXTEND_EVENT)(EFI_TREE_PROTOCOL *This, UINT64 Flags, EFI_PHYSICAL_ADDRESS DataToHash, UINT64 DataToHashLen, TrEE_EVENT *Event);
typedef EFI_STATUS (*EFI_HII_DATABASE_EXPORT_PACKS)(const EFI_HII_DATABASE_PROTOCOL *This, EFI_HII_HANDLE Handle, UINTN *BufferSize, EFI_HII_PACKAGE_LIST_HEADER *Buffer);
typedef EFI_STATUS (*EFI_OPEN_PROTOCOL_INFORMATION)(EFI_HANDLE Handle, EFI_GUID *Protocol, EFI_OPEN_PROTOCOL_INFORMATION_ENTRY **EntryBuffer, UINTN *EntryCount);
typedef EFI_STATUS (*EFI_PCI_PLATFORM_PHASE_NOTIFY)(EFI_PCI_PLATFORM_PROTOCOL *This, EFI_HANDLE HostBridge, EFI_PCI_HOST_BRIDGE_RESOURCE_ALLOCATION_PHASE Phase, EFI_PCI_EXECUTION_PHASE ExecPhase);
typedef EFI_STATUS (*EFI_PEI_SMBUS2_PPI_ARP_DEVICE)(const EFI_PEI_SMBUS2_PPI *This, BOOLEAN ArpAll, EFI_SMBUS_UDID *SmbusUdid, EFI_SMBUS_DEVICE_ADDRESS *SlaveAddress);
typedef EFI_STATUS (*EFI_PEI_SMBUS_NOTIFY_FUNCTION)(EFI_PEI_SERVICES **PeiServices, EFI_PEI_SMBUS_PPI *SmbusPpi, EFI_SMBUS_DEVICE_ADDRESS SlaveAddress, UINTN Data);
typedef EFI_STATUS (*EFI_PEI_SMBUS_PPI_GET_ARP_MAP)(EFI_PEI_SERVICES **PeiServices, EFI_PEI_SMBUS_PPI *This, UINTN *Length, EFI_SMBUS_DEVICE_MAP **SmbusDeviceMap);
typedef EFI_STATUS (*EFI_SIMPLE_NETWORK_STATISTICS)(EFI_SIMPLE_NETWORK_PROTOCOL *This, BOOLEAN Reset, UINTN *StatisticsSize, EFI_NETWORK_STATISTICS *StatisticsTable);
typedef EFI_STATUS (*EFI_SMART_CARD_READER_CONTROL)(EFI_SMART_CARD_READER_PROTOCOL *This, UINT32 ControlCode, UINT8 *InBuffer, UINTN InBufferLength, UINT8 *OutBuffer, UINTN *OutBufferLength);
typedef EFI_STATUS (*EFI_SMM_POWER_BUTTON_REGISTER)(EFI_SMM_POWER_BUTTON_DISPATCH_PROTOCOL *This, EFI_SMM_POWER_BUTTON_DISPATCH DispatchFunction, EFI_SMM_POWER_BUTTON_DISPATCH_CONTEXT *DispatchContext, EFI_HANDLE *DispatchHandle);
typedef EFI_STATUS (*EDKII_UFS_HC_MMIO_READ_WRITE)(EDKII_UFS_HOST_CONTROLLER_PROTOCOL *This, EDKII_UFS_HOST_CONTROLLER_PROTOCOL_WIDTH Width, UINT64 Offset, UINTN Count, void *Buffer);
typedef EFI_STATUS (*EFI_DATA_HUB_GET_NEXT_RECORD)(EFI_DATA_HUB_PROTOCOL *This, UINT64 *MonotonicCount, EFI_EVENT *FilterDriver, EFI_DATA_RECORD_HEADER **Record);
typedef EFI_STATUS (*EFI_ISA_IO_PROTOCOL_COPY_MEM)(EFI_ISA_IO_PROTOCOL *This, EFI_ISA_IO_PROTOCOL_WIDTH Width, UINT32 DestOffset, UINT32 SrcOffset, UINTN Count);
typedef EFI_STATUS (*EFI_LEGACY_BIOS_GET_BBS_INFO)(EFI_LEGACY_BIOS_PROTOCOL *This, UINT16 *HddCount, HDD_INFO **HddInfo, UINT16 *BbsCount, BBS_TABLE **BbsTable);
typedef EFI_STATUS (*EFI_SMART_CARD_EDGE_GET_DATA)(EFI_SMART_CARD_EDGE_PROTOCOL *This, EFI_HANDLE SCardHandle, EFI_GUID *DataId, UINTN *DataSize, void *Data);
typedef EFI_STATUS (*EFI_SMBUS_HC_PROTOCOL_NOTIFY)(const EFI_SMBUS_HC_PROTOCOL *This, EFI_SMBUS_DEVICE_ADDRESS SlaveAddress, UINTN Data, EFI_SMBUS_NOTIFY_FUNCTION NotifyFunction);
typedef EFI_STATUS (*FRAMEWORK_EFI_HII_NEW_STRING)(EFI_HII_PROTOCOL *This, CHAR16 *Language, FRAMEWORK_EFI_HII_HANDLE Handle, STRING_REF *Reference, CHAR16 *NewString);
struct _EFI_DRIVER_BINDING_PROTOCOL {EFI_DRIVER_BINDING_SUPPORTED Supported;EFI_DRIVER_BINDING_START Start;EFI_DRIVER_BINDING_STOP Stop;UINT32 Version;EFI_HANDLE ImageHandle;EFI_HANDLE DriverBindingHandle;};
struct _EFI_LEGACY_REGION2_PROTOCOL {EFI_LEGACY_REGION2_DECODE Decode;EFI_LEGACY_REGION2_LOCK Lock;EFI_LEGACY_REGION2_BOOT_LOCK BootLock;EFI_LEGACY_REGION2_UNLOCK UnLock;EFI_LEGACY_REGION_GET_INFO GetInfo;};
typedef EFI_STATUS (*EFI_HII_GET_KEYBOARD_LAYOUT)(const EFI_HII_DATABASE_PROTOCOL *This, const EFI_GUID *KeyGuid, UINT16 *KeyboardLayoutLength, EFI_HII_KEYBOARD_LAYOUT *KeyboardLayout);
typedef EFI_STATUS (*EFI_PEI_BOOT_SCRIPT_EXECUTE)(EFI_PEI_SERVICES **PeiServices, EFI_PEI_BOOT_SCRIPT_EXECUTER_PPI *This, EFI_PHYSICAL_ADDRESS Address, EFI_GUID *FvFile);
typedef EFI_STATUS (*EFI_PEI_FFS_FIND_NEXT_FILE2)(const EFI_PEI_SERVICES **PeiServices, EFI_FV_FILETYPE SearchType, const EFI_PEI_FV_HANDLE FvHandle, EFI_PEI_FILE_HANDLE *FileHandle);
typedef EFI_STATUS (*EFI_PEI_SIO_REGISTER_MODIFY)(EFI_PEI_SERVICES **PeiServices, const EFI_SIO_PPI *This, const EFI_SIO_REGISTER_MODIFY *Command, UINTN NumberOfCommands);
typedef EFI_STATUS (*EFI_SIMPLE_NETWORK_TRANSMIT)(EFI_SIMPLE_NETWORK_PROTOCOL *This, UINTN HeaderSize, UINTN BufferSize, void *Buffer, EFI_MAC_ADDRESS *SrcAddr, EFI_MAC_ADDRESS *DestAddr, UINT16 *Protocol);
typedef EFI_STATUS (*FRAMEWORK_EFI_FV_WRITE_FILE)(EFI_FIRMWARE_VOLUME_PROTOCOL *This, UINT32 NumberOfFiles, FRAMEWORK_EFI_FV_WRITE_POLICY WritePolicy, FRAMEWORK_EFI_FV_WRITE_FILE_DATA *FileData);
struct _EFI_DEBUG_SUPPORT_PROTOCOL {EFI_INSTRUCTION_SET_ARCHITECTURE Isa;EFI_GET_MAXIMUM_PROCESSOR_INDEX GetMaximumProcessorIndex;EFI_REGISTER_PERIODIC_CALLBACK RegisterPeriodicCallback;EFI_REGISTER_EXCEPTION_CALLBACK RegisterExceptionCallback;EFI_INVALIDATE_INSTRUCTION_CACHE InvalidateInstructionCache;};
typedef EFI_STATUS (*EFI_ATA_PASS_THRU_PASSTHRU)(EFI_ATA_PASS_THRU_PROTOCOL *This, UINT16 Port, UINT16 PortMultiplierPort, EFI_ATA_PASS_THRU_COMMAND_PACKET *Packet, EFI_EVENT Event);
typedef EFI_STATUS (*EFI_CPU_IO_PROTOCOL_IO_MEM)(EFI_CPU_IO2_PROTOCOL *This, EFI_CPU_IO_PROTOCOL_WIDTH Width, UINT64 Address, UINTN Count, void *Buffer);
typedef EFI_STATUS (*EFI_ISA_IO_PROTOCOL_IO_MEM)(EFI_ISA_IO_PROTOCOL *This, EFI_ISA_IO_PROTOCOL_WIDTH Width, UINT32 Offset, UINTN Count, void *Buffer);
typedef EFI_STATUS (*EFI_PCI_IO_PROTOCOL_CONFIG)(EFI_PCI_IO_PROTOCOL *This, EFI_PCI_IO_PROTOCOL_WIDTH Width, UINT32 Offset, UINTN Count, void *Buffer);
typedef EFI_STATUS (*EFI_PEI_FFS_FIND_NEXT_FILE)(FRAMEWORK_EFI_PEI_SERVICES **PeiServices, EFI_FV_FILETYPE SearchType, EFI_FIRMWARE_VOLUME_HEADER *FwVolHeader, EFI_FFS_FILE_HEADER **FileHeader);
typedef EFI_STATUS (*EFI_PXE_BASE_CODE_DISCOVER)(EFI_PXE_BASE_CODE_PROTOCOL *This, UINT16 Type, UINT16 *Layer, BOOLEAN UseBis, EFI_PXE_BASE_CODE_DISCOVER_INFO *Info);
typedef EFI_STATUS (*EFI_SIMPLE_NETWORK_RECEIVE)(EFI_SIMPLE_NETWORK_PROTOCOL *This, UINTN *HeaderSize, UINTN *BufferSize, void *Buffer, EFI_MAC_ADDRESS *SrcAddr, EFI_MAC_ADDRESS *DestAddr, UINT16 *Protocol);
typedef EFI_STATUS (*EFI_SMMCORE_ALLOCATE_PAGES)(EFI_ALLOCATE_TYPE Type, EFI_MEMORY_TYPE MemoryType, UINTN NumberOfPages, EFI_PHYSICAL_ADDRESS *Memory);
typedef EFI_STATUS (*EFI_BLUETOOTH_CONFIG_SCAN)(EFI_BLUETOOTH_CONFIG_PROTOCOL *This, BOOLEAN ReScan, UINT8 ScanType, EFI_BLUETOOTH_CONFIG_SCAN_CALLBACK_FUNCTION Callback, void *Context);
typedef EFI_STATUS (*EFI_HII_DATABASE_NEW_PACK)(const EFI_HII_DATABASE_PROTOCOL *This, const EFI_HII_PACKAGE_LIST_HEADER *PackageList, EFI_HANDLE DriverHandle, EFI_HII_HANDLE *Handle);
typedef EFI_STATUS (*EFI_HII_GET_2ND_LANGUAGES)(const EFI_HII_STRING_PROTOCOL *This, EFI_HII_HANDLE PackageList, const CHAR8 *PrimaryLanguage, CHAR8 *SecondaryLanguages, UINTN *SecondaryLanguagesSize);
typedef EFI_STATUS (*EFI_HII_GET_DEFAULT_IMAGE)(EFI_HII_PROTOCOL *This, FRAMEWORK_EFI_HII_HANDLE Handle, UINTN DefaultMask, EFI_HII_VARIABLE_PACK_LIST **VariablePackList);
typedef EFI_STATUS (*EFI_HII_GET_SEC_LANGUAGES)(EFI_HII_PROTOCOL *This, FRAMEWORK_EFI_HII_HANDLE Handle, CHAR16 *PrimaryLanguage, EFI_STRING *LanguageString);
typedef EFI_STATUS (*EFI_IPSEC_CONFIG_GET_DATA)(EFI_IPSEC_CONFIG_PROTOCOL *This, EFI_IPSEC_CONFIG_DATA_TYPE DataType, EFI_IPSEC_CONFIG_SELECTOR *Selector, UINTN *DataSize, void *Data);
typedef EFI_STATUS (*EFI_PEI_FV_FIND_FILE_NAME)(const EFI_PEI_FIRMWARE_VOLUME_PPI *This, const EFI_GUID *FileName, EFI_PEI_FV_HANDLE *FvHandle, EFI_PEI_FILE_HANDLE *FileHandle);
typedef EFI_STATUS (*EFI_PEI_FV_FIND_FILE_TYPE)(const EFI_PEI_FIRMWARE_VOLUME_PPI *This, EFI_FV_FILETYPE SearchType, EFI_PEI_FV_HANDLE FvHandle, EFI_PEI_FILE_HANDLE *FileHandle);
typedef EFI_STATUS (*EFI_PEI_SMBUS2_PPI_NOTIFY)(const EFI_PEI_SMBUS2_PPI *This, EFI_SMBUS_DEVICE_ADDRESS SlaveAddress, UINTN Data, EFI_PEI_SMBUS_NOTIFY2_FUNCTION NotifyFunction);
typedef EFI_STATUS (*EFI_SHELL_GET_DEVICE_NAME)(EFI_HANDLE DeviceHandle, EFI_SHELL_DEVICE_NAME_FLAGS Flags, CHAR8 *Language, CHAR16 **BestDeviceName);
typedef EFI_STATUS (*EFI_UGA_DRAW_PROTOCOL_BLT)(EFI_UGA_DRAW_PROTOCOL *This, EFI_UGA_PIXEL *BltBuffer, EFI_UGA_BLT_OPERATION BltOperation, UINTN SourceX, UINTN SourceY, UINTN DestinationX, UINTN DestinationY, UINTN Width, UINTN Height, UINTN Delta);
typedef EFI_STATUS (*EFI_USBFN_IO_EVENTHANDLER)(EFI_USBFN_IO_PROTOCOL *This, EFI_USBFN_MESSAGE *Message, UINTN *PayloadSize, EFI_USBFN_MESSAGE_PAYLOAD *Payload);
struct _EFI_SMM_ACCESS2_PROTOCOL {EFI_SMM_OPEN2 Open;EFI_SMM_CLOSE2 Close;EFI_SMM_LOCK2 Lock;EFI_SMM_CAPABILITIES2 GetCapabilities;BOOLEAN LockState;BOOLEAN OpenState;};
typedef EFI_STATUS (*EFI_CPU_FLUSH_DATA_CACHE)(EFI_CPU_ARCH_PROTOCOL *This, EFI_PHYSICAL_ADDRESS Start, UINT64 Length, EFI_CPU_FLUSH_TYPE FlushType);
typedef EFI_STATUS (*EFI_CREDENTIAL2_GET_INFO)(const EFI_USER_CREDENTIAL2_PROTOCOL *This, EFI_USER_INFO_HANDLE UserInfo, EFI_USER_INFO *Info, UINTN *InfoSize);
typedef EFI_STATUS (*EFI_LOCATE_HANDLE_BUFFER)(EFI_LOCATE_SEARCH_TYPE SearchType, EFI_GUID *Protocol, void *SearchKey, UINTN *NoHandles, EFI_HANDLE **Buffer);
typedef EFI_STATUS (*EFI_MTFTP4_PARSE_OPTIONS)(EFI_MTFTP4_PROTOCOL *This, UINT32 PacketLen, EFI_MTFTP4_PACKET *Packet, UINT32 *OptionCount, EFI_MTFTP4_OPTION **OptionList);
typedef EFI_STATUS (*EFI_MTFTP6_PARSE_OPTIONS)(EFI_MTFTP6_PROTOCOL *This, UINT32 PacketLen, EFI_MTFTP6_PACKET *Packet, UINT32 *OptionCount, EFI_MTFTP6_OPTION **OptionList);
typedef EFI_STATUS (*EFI_S3_SAVE_STATE_INSERT)(const EFI_S3_SAVE_STATE_PROTOCOL *This, BOOLEAN BeforeOrAfter, EFI_S3_BOOT_SCRIPT_POSITION *Position, UINT16 OpCode, ...);
typedef EFI_STATUS (*EFI_SMBIOS_UPDATE_STRING)(const EFI_SMBIOS_PROTOCOL *This, EFI_SMBIOS_HANDLE *SmbiosHandle, UINTN *StringNumber, CHAR8 *String);
typedef EFI_STATUS (*EFI_SMM_CALLBACK_SERVICE)(EFI_SMM_BASE_PROTOCOL *This, EFI_HANDLE SmmImageHandle, EFI_SMM_CALLBACK_ENTRY_POINT CallbackAddress, BOOLEAN MakeLast, BOOLEAN FloatingPointSave);
typedef EFI_STATUS (*EFI_USB_IO_BULK_TRANSFER)(EFI_USB_IO_PROTOCOL *This, UINT8 DeviceEndpoint, void *Data, UINTN *DataLength, UINTN Timeout, UINT32 *Status);
struct _EFI_RUNTIME_EVENT_ENTRY {UINT32 Type;EFI_TPL NotifyTpl;EFI_EVENT_NOTIFY NotifyFunction;void *NotifyContext;EFI_EVENT *Event;EFI_LIST_ENTRY Link;};
struct _EFI_SMM_ACCESS_PROTOCOL {EFI_SMM_OPEN Open;EFI_SMM_CLOSE Close;EFI_SMM_LOCK Lock;EFI_SMM_CAPABILITIES GetCapabilities;BOOLEAN LockState;BOOLEAN OpenState;};
typedef EFI_STATUS (*EFI_ACPI_GET_ACPI_TABLE)(EFI_ACPI_SUPPORT_PROTOCOL *This, INTN Index, void **Table, EFI_ACPI_TABLE_VERSION *Version, UINTN *Handle);
typedef EFI_STATUS (*EFI_ACPI_SET_ACPI_TABLE)(EFI_ACPI_SUPPORT_PROTOCOL *This, void *Table, BOOLEAN Checksum, EFI_ACPI_TABLE_VERSION Version, UINTN *Handle);
typedef EFI_STATUS (*EFI_CREDENTIAL_GET_INFO)(const EFI_USER_CREDENTIAL_PROTOCOL *This, EFI_USER_INFO_HANDLE UserInfo, EFI_USER_INFO *Info, UINTN *InfoSize);
typedef EFI_STATUS (*EFI_DEFERRED_IMAGE_INFO)(EFI_DEFERRED_IMAGE_LOAD_PROTOCOL *This, UINTN ImageIndex, EFI_DEVICE_PATH_PROTOCOL **ImageDevicePath, void **Image, UINTN *ImageSize, BOOLEAN *BootOption);
typedef EFI_STATUS (*EFI_DNS4_GENERAL_LOOKUP)(EFI_DNS4_PROTOCOL *This, CHAR8 *QName, UINT16 QType, UINT16 QClass, EFI_DNS4_COMPLETION_TOKEN *Token);
typedef EFI_STATUS (*EFI_DNS6_GENERAL_LOOKUP)(EFI_DNS6_PROTOCOL *This, CHAR8 *QName, UINT16 QType, UINT16 QClass, EFI_DNS6_COMPLETION_TOKEN *Token);
typedef EFI_STATUS (*EFI_HII_BLOCK_TO_CONFIG)(const EFI_HII_CONFIG_ROUTING_PROTOCOL *This, const EFI_STRING ConfigRequest, const UINT8 *Block, const UINTN BlockSize, EFI_STRING *Config, EFI_STRING *Progress);
typedef EFI_STATUS (*EFI_HII_CONFIG_TO_BLOCK)(const EFI_HII_CONFIG_ROUTING_PROTOCOL *This, const EFI_STRING ConfigResp, UINT8 *Block, UINTN *BlockSize, EFI_STRING *Progress);
typedef EFI_STATUS (*EFI_MTFTP4_CHECK_PACKET)(EFI_MTFTP4_PROTOCOL *This, EFI_MTFTP4_TOKEN *Token, UINT16 PacketLen, EFI_MTFTP4_PACKET *Paket);
typedef EFI_STATUS (*EFI_MTFTP6_CHECK_PACKET)(EFI_MTFTP6_PROTOCOL *This, EFI_MTFTP6_TOKEN *Token, UINT16 PacketLen, EFI_MTFTP6_PACKET *Packet);
typedef EFI_STATUS (*EFI_PCI_IO_PROTOCOL_MAP)(EFI_PCI_IO_PROTOCOL *This, EFI_PCI_IO_PROTOCOL_OPERATION Operation, void *HostAddress, UINTN *NumberOfBytes, EFI_PHYSICAL_ADDRESS *DeviceAddress, void **Mapping);
typedef EFI_STATUS (*EFI_PEI_PCI_CFG2_PPI_IO)(const EFI_PEI_SERVICES **PeiServices, const EFI_PEI_PCI_CFG2_PPI *This, EFI_PEI_PCI_CFG_PPI_WIDTH Width, UINT64 Address, void *Buffer);
typedef EFI_STATUS (*EFI_PEI_PCI_CFG2_PPI_RW)(const EFI_PEI_SERVICES **PeiServices, const EFI_PEI_PCI_CFG2_PPI *This, EFI_PEI_PCI_CFG_PPI_WIDTH Width, UINT64 Address, void *SetBits, void *ClearBits);
typedef EFI_STATUS (*EFI_S3_SAVE_STATE_LABEL)(const EFI_S3_SAVE_STATE_PROTOCOL *This, BOOLEAN BeforeOrAfter, BOOLEAN CreateIfNotFound, EFI_S3_BOOT_SCRIPT_POSITION *Position, const CHAR8 *Label);
typedef EFI_STATUS (*FRAMEWORK_EFI_FVB_WRITE)(FRAMEWORK_EFI_FIRMWARE_VOLUME_BLOCK_PROTOCOL *This, EFI_LBA Lba, UINTN Offset, UINTN *NumBytes, UINT8 *Buffer);
struct _EFI_DISK_INFO_PROTOCOL {EFI_GUID Interface;EFI_DISK_INFO_INQUIRY Inquiry;EFI_DISK_INFO_IDENTIFY Identify;EFI_DISK_INFO_SENSE_DATA SenseData;EFI_DISK_INFO_WHICH_IDE WhichIde;};
struct _EFI_FTP4_COMMAND_TOKEN {EFI_EVENT Event;UINT8 *Pathname;UINT64 DataBufferSize;void *DataBuffer;EFI_FTP4_DATA_CALLBACK *DataCallback;void *Context;EFI_STATUS Status;};
struct _EFI_PEI_I2C_MASTER_PPI {EFI_PEI_I2C_MASTER_PPI_SET_BUS_FREQUENCY SetBusFrequency;EFI_PEI_I2C_MASTER_PPI_RESET Reset;EFI_PEI_I2C_MASTER_PPI_START_REQUEST StartRequest;const EFI_I2C_CONTROLLER_CAPABILITIES *I2cControllerCapabilities;EFI_GUID Identifier;};
typedef EFI_STATUS (*EFI_PEI_ALLOCATE_PAGES)(const EFI_PEI_SERVICES **PeiServices, EFI_MEMORY_TYPE MemoryType, UINTN Pages, EFI_PHYSICAL_ADDRESS *Memory);
typedef EFI_STATUS (*EFI_PEI_FIND_FV_FINDFV)(EFI_PEI_FIND_FV_PPI *This, EFI_PEI_SERVICES **PeiServices, UINT8 *FvNumber, EFI_FIRMWARE_VOLUME_HEADER **FVAddress);
typedef EFI_STATUS (*EFI_PEI_PCI_CFG_PPI_IO)(EFI_PEI_SERVICES **PeiServices, EFI_PEI_PCI_CFG_PPI *This, EFI_PEI_PCI_CFG_PPI_WIDTH Width, UINT64 Address, void *Buffer);
typedef EFI_STATUS (*EFI_TCG2_GET_EVENT_LOG)(EFI_TCG2_PROTOCOL *This, EFI_TCG2_EVENT_LOG_FORMAT EventLogFormat, EFI_PHYSICAL_ADDRESS *EventLogLocation, EFI_PHYSICAL_ADDRESS *EventLogLastEntry, BOOLEAN *EventLogTruncated);
typedef EFI_STATUS (*EFI_TREE_GET_EVENT_LOG)(EFI_TREE_PROTOCOL *This, TREE_EVENT_LOG_FORMAT EventLogFormat, EFI_PHYSICAL_ADDRESS *EventLogLocation, EFI_PHYSICAL_ADDRESS *EventLogLastEntry, BOOLEAN *EventLogTruncated);
typedef EFI_STATUS (*FRAMEWORK_EFI_FVB_READ)(FRAMEWORK_EFI_FIRMWARE_VOLUME_BLOCK_PROTOCOL *This, EFI_LBA Lba, UINTN Offset, UINTN *NumBytes, UINT8 *Buffer);
typedef EFI_STATUS (*PEI_GET_USB_CONTROLLER)(EFI_PEI_SERVICES **PeiServices, PEI_USB_CONTROLLER_PPI *This, UINT8 UsbControllerId, UINTN *ControllerType, UINTN *BaseAddress);
typedef EFI_STATUS (*EFI_DATA_HUB_LOG_DATA)(EFI_DATA_HUB_PROTOCOL *This, EFI_GUID *DataRecordGuid, EFI_GUID *ProducerName, UINT64 DataRecordClass, void *RawData, UINT32 RawDataSize);
typedef EFI_STATUS (*EFI_HII_GET_FONT_INFO)(const EFI_HII_FONT_PROTOCOL *This, EFI_FONT_HANDLE *FontHandle, const EFI_FONT_DISPLAY_INFO *StringInfoIn, EFI_FONT_DISPLAY_INFO **StringInfoOut, const EFI_STRING String);
typedef EFI_STATUS (*EFI_HII_GET_LANGUAGES)(const EFI_HII_STRING_PROTOCOL *This, EFI_HII_HANDLE PackageList, CHAR8 *Languages, UINTN *LanguagesSize);
typedef EFI_STATUS (*EFI_IP4_GET_MODE_DATA)(const EFI_IP4_PROTOCOL *This, EFI_IP4_MODE_DATA *Ip4ModeData, EFI_MANAGED_NETWORK_CONFIG_DATA *MnpConfigData, EFI_SIMPLE_NETWORK_MODE *SnpModeData);
typedef EFI_STATUS (*EFI_IP6_GET_MODE_DATA)(EFI_IP6_PROTOCOL *This, EFI_IP6_MODE_DATA *Ip6ModeData, EFI_MANAGED_NETWORK_CONFIG_DATA *MnpConfigData, EFI_SIMPLE_NETWORK_MODE *SnpModeData);
typedef EFI_STATUS (*EFI_SMM_GPI_REGISTER2)(const EFI_SMM_GPI_DISPATCH2_PROTOCOL *This, EFI_SMM_HANDLER_ENTRY_POINT2 DispatchFunction, const EFI_SMM_GPI_REGISTER_CONTEXT *RegisterContext, EFI_HANDLE *DispatchHandle);
typedef EFI_STATUS (*EFI_SMM_ICHN_REGISTER)(EFI_SMM_ICHN_DISPATCH_PROTOCOL *This, EFI_SMM_ICHN_DISPATCH DispatchFunction, EFI_SMM_ICHN_DISPATCH_CONTEXT *DispatchContext, EFI_HANDLE *DispatchHandle);
typedef EFI_STATUS (*EFI_SMM_USB_REGISTER2)(const EFI_SMM_USB_DISPATCH2_PROTOCOL *This, EFI_SMM_HANDLER_ENTRY_POINT2 DispatchFunction, const EFI_SMM_USB_REGISTER_CONTEXT *RegisterContext, EFI_HANDLE *DispatchHandle);
typedef EFI_STATUS (*EFI_USBFN_IO_TRANSFER)(EFI_USBFN_IO_PROTOCOL *This, UINT8 EndpointIndex, EFI_USBFN_ENDPOINT_DIRECTION Direction, UINTN *BufferSize, void *Buffer);
typedef EFI_STATUS (*PEI_USB_BULK_TRANSFER)(EFI_PEI_SERVICES **PeiServices, PEI_USB_IO_PPI *This, UINT8 DeviceEndpoint, void *Data, UINTN *DataLength, UINTN Timeout);
typedef EFI_STATUS (*EFI_CREDENTIAL2_FORM)(const EFI_USER_CREDENTIAL2_PROTOCOL *This, EFI_HII_HANDLE *Hii, EFI_GUID *FormSetId, EFI_FORM_ID *FormId);
typedef EFI_STATUS (*EFI_CREDENTIAL2_TILE)(const EFI_USER_CREDENTIAL2_PROTOCOL *This, UINTN *Width, UINTN *Height, EFI_HII_HANDLE *Hii, EFI_IMAGE_ID *Image);
typedef EFI_STATUS (*EFI_HII_GLYPH_TO_BLT)(EFI_HII_PROTOCOL *This, UINT8 *GlyphBuffer, EFI_GRAPHICS_OUTPUT_BLT_PIXEL Foreground, EFI_GRAPHICS_OUTPUT_BLT_PIXEL Background, UINTN Count, UINTN Width, UINTN Height, EFI_GRAPHICS_OUTPUT_BLT_PIXEL *BltBuffer);
typedef EFI_STATUS (*EFI_HTTP_UTILS_BUILD)(EFI_HTTP_UTILITIES_PROTOCOL *This, UINTN SeedMessageSize, void *SeedMessage, UINTN DeleteCount,CHAR8 * *    DeleteList, UINTN AppendCount,EFI_HTTP_HEADER * *    AppendList, UINTN *NewMessageSize, void **NewMessage);
typedef EFI_STATUS (*EFI_HTTP_UTILS_PARSE)(EFI_HTTP_UTILITIES_PROTOCOL *This, CHAR8 *HttpMessage, UINTN HttpMessageSize, EFI_HTTP_HEADER **HeaderFields, UINTN *FieldCount);
typedef EFI_STATUS (*EFI_PEI_FV_LOAD_FILE)(EFI_PEI_FV_FILE_LOADER_PPI *This, EFI_FFS_FILE_HEADER *FfsHeader, EFI_PHYSICAL_ADDRESS *ImageAddress, UINT64 *ImageSize, EFI_PHYSICAL_ADDRESS *EntryPoint);
typedef EFI_STATUS (*EFI_PEI_READ_BLOCKS2)(EFI_PEI_SERVICES **PeiServices, EFI_PEI_RECOVERY_BLOCK_IO2_PPI *This, UINTN DeviceIndex, EFI_PEI_LBA StartLBA, UINTN BufferSize, void *Buffer);
typedef EFI_STATUS (*EFI_SAL_INIT_HANDLER)(void *ModuleGlobal, UINT64 ProcessorStateParameters, EFI_PHYSICAL_ADDRESS MinstateBase, BOOLEAN McaInProgress, UINT64 CpuIndex, SAL_MCA_COUNT_STRUCTURE *McaCountStructure, BOOLEAN *DumpSwitchPressed);
typedef EFI_STATUS (*EFI_SMM_GPI_REGISTER)(EFI_SMM_GPI_DISPATCH_PROTOCOL *This, EFI_SMM_GPI_DISPATCH DispatchFunction, EFI_SMM_GPI_DISPATCH_CONTEXT *DispatchContext, EFI_HANDLE *DispatchHandle);
typedef EFI_STATUS (*EFI_SMM_SW_REGISTER2)(const EFI_SMM_SW_DISPATCH2_PROTOCOL *This, EFI_SMM_HANDLER_ENTRY_POINT2 DispatchFunction, EFI_SMM_SW_REGISTER_CONTEXT *RegisterContext, EFI_HANDLE *DispatchHandle);
typedef EFI_STATUS (*EFI_SMM_SX_REGISTER2)(const EFI_SMM_SX_DISPATCH2_PROTOCOL *This, EFI_SMM_HANDLER_ENTRY_POINT2 DispatchFunction, const EFI_SMM_SX_REGISTER_CONTEXT *RegisterContext, EFI_HANDLE *DispatchHandle);
typedef EFI_STATUS (*EFI_SMM_USB_REGISTER)(EFI_SMM_USB_DISPATCH_PROTOCOL *This, EFI_SMM_USB_DISPATCH DispatchFunction, EFI_SMM_USB_DISPATCH_CONTEXT *DispatchContext, EFI_HANDLE *DispatchHandle);
typedef EFI_STATUS (*EFI_TCG_STATUS_CHECK)(EFI_TCG_PROTOCOL *This, TCG_EFI_BOOT_SERVICE_CAPABILITY *ProtocolCapability, UINT32 *TCGFeatureFlags, EFI_PHYSICAL_ADDRESS *EventLogLocation, EFI_PHYSICAL_ADDRESS *EventLogLastEntry);
typedef EFI_STATUS (*PEI_SMM_CAPABILITIES)(EFI_PEI_SERVICES **PeiServices, PEI_SMM_ACCESS_PPI *This, UINTN *SmramMapSize, EFI_SMRAM_DESCRIPTOR *SmramMap);
typedef EFI_STATUS (*EFI_CREDENTIAL_FORM)(const EFI_USER_CREDENTIAL_PROTOCOL *This, EFI_HII_HANDLE *Hii, EFI_GUID *FormSetId, EFI_FORM_ID *FormId);
typedef EFI_STATUS (*EFI_CREDENTIAL_TILE)(const EFI_USER_CREDENTIAL_PROTOCOL *This, UINTN *Width, UINTN *Height, EFI_HII_HANDLE *Hii, EFI_IMAGE_ID *Image);
typedef EFI_STATUS (*EFI_PEI_READ_BLOCKS)(EFI_PEI_SERVICES **PeiServices, EFI_PEI_RECOVERY_BLOCK_IO_PPI *This, UINTN DeviceIndex, EFI_PEI_LBA StartLBA, UINTN BufferSize, void *Buffer);
typedef EFI_STATUS (*EFI_SAL_MCA_HANDLER)(void *ModuleGlobal, UINT64 ProcessorStateParameters, EFI_PHYSICAL_ADDRESS MinstateBase, UINT64 RendezvouseStateInformation, UINT64 CpuIndex, SAL_MCA_COUNT_STRUCTURE *McaCountStructure, BOOLEAN *CorrectedMachineCheck);
typedef EFI_STATUS (*EFI_SMM_SW_REGISTER)(EFI_SMM_SW_DISPATCH_PROTOCOL *This, EFI_SMM_SW_DISPATCH DispatchFunction, EFI_SMM_SW_DISPATCH_CONTEXT *DispatchContext, EFI_HANDLE *DispatchHandle);
typedef EFI_STATUS (*EFI_SMM_SX_REGISTER)(EFI_SMM_SX_DISPATCH_PROTOCOL *This, EFI_SMM_SX_DISPATCH DispatchFunction, EFI_SMM_SX_DISPATCH_CONTEXT *DispatchContext, EFI_HANDLE *DispatchHandle);
struct _PEI_SMM_ACCESS_PPI {PEI_SMM_OPEN Open;PEI_SMM_CLOSE Close;PEI_SMM_LOCK Lock;PEI_SMM_CAPABILITIES GetCapabilities;BOOLEAN LockState;BOOLEAN OpenState;};
typedef EFI_STATUS (*EFI_ALLOCATE_PAGES)(EFI_ALLOCATE_TYPE Type, EFI_MEMORY_TYPE MemoryType, UINTN Pages, EFI_PHYSICAL_ADDRESS *Memory);
typedef EFI_STATUS (*EFI_BIS_INITIALIZE)(EFI_BIS_PROTOCOL *This, BIS_APPLICATION_HANDLE *AppHandle, EFI_BIS_VERSION *InterfaceVersion, EFI_BIS_DATA *TargetAddress);
typedef EFI_STATUS (*EFI_DHCP4_CALLBACK)(EFI_DHCP4_PROTOCOL *This, void *Context, EFI_DHCP4_STATE CurrentState, EFI_DHCP4_EVENT Dhcp4Event, EFI_DHCP4_PACKET *Packet, EFI_DHCP4_PACKET **NewPacket);
typedef EFI_STATUS (*EFI_DHCP6_CALLBACK)(EFI_DHCP6_PROTOCOL *This, void *Context, EFI_DHCP6_STATE CurrentState, EFI_DHCP6_EVENT Dhcp6Event, EFI_DHCP6_PACKET *Packet, EFI_DHCP6_PACKET **NewPacket);
typedef EFI_STATUS (*EFI_PEI_LOCATE_PPI)(const EFI_PEI_SERVICES **PeiServices, const EFI_GUID *Guid, UINTN Instance, EFI_PEI_PPI_DESCRIPTOR **PpiDescriptor, void **Ppi);
typedef EFI_STATUS (*EFI_CREATE_POP_UP)(UINTN NumberOfLines, BOOLEAN HotKey, UINTN MaximumStringSize, CHAR16 *StringBuffer, EFI_INPUT_KEY *KeyValue, CHAR16 *String, ...);
typedef EFI_STATUS (*EFI_FORM_CALLBACK)(EFI_FORM_CALLBACK_PROTOCOL *This, UINT16 KeyValue, EFI_IFR_DATA_ARRAY *Data, EFI_HII_CALLBACK_PACKET **Packet);
typedef EFI_STATUS (*EFI_FV_WRITE_FILE)(const EFI_FIRMWARE_VOLUME2_PROTOCOL *This, UINT32 NumberOfFiles, EFI_FV_WRITE_POLICY WritePolicy, EFI_FV_WRITE_FILE_DATA *FileData);
typedef EFI_STATUS (*EFI_HII_GET_IMAGE)(const EFI_HII_IMAGE_PROTOCOL *This, EFI_HII_HANDLE PackageList, EFI_IMAGE_ID ImageId, EFI_IMAGE_INPUT *Image);
typedef EFI_STATUS (*EFI_HII_NEW_IMAGE)(const EFI_HII_IMAGE_PROTOCOL *This, EFI_HII_HANDLE PackageList, EFI_IMAGE_ID *ImageId, const EFI_IMAGE_INPUT *Image);
typedef EFI_STATUS (*EFI_HII_SET_IMAGE)(const EFI_HII_IMAGE_PROTOCOL *This, EFI_HII_HANDLE PackageList, EFI_IMAGE_ID ImageId, const EFI_IMAGE_INPUT *Image);
typedef EFI_STATUS (*EFI_LOCATE_HANDLE)(EFI_LOCATE_SEARCH_TYPE SearchType, EFI_GUID *Protocol, void *SearchKey, UINTN *BufferSize, EFI_HANDLE *Buffer);
typedef EFI_STATUS (*EFI_SMM_ACTIVATE2)(const EFI_SMM_CONTROL2_PROTOCOL *This, UINT8 *CommandPort, UINT8 *DataPort, BOOLEAN Periodic, UINTN ActivationInterval);
struct _EFI_SIO_PROTOCOL {EFI_SIO_REGISTER_ACCESS RegisterAccess;EFI_SIO_GET_RESOURCES GetResources;EFI_SIO_SET_RESOURCES SetResources;EFI_SIO_POSSIBLE_RESOURCES PossibleResources;EFI_SIO_MODIFY Modify;};
typedef EFI_STATUS (*EBC_VM_TEST_DASM)(EFI_EBC_VM_TEST_PROTOCOL *This, CHAR16 *AsmText, INT8 *Buffer, UINTN *Len);
typedef EFI_STATUS (*EDKII_UFS_HC_MAP)(EDKII_UFS_HOST_CONTROLLER_PROTOCOL *This, EDKII_UFS_HOST_CONTROLLER_OPERATION Operation, void *HostAddress, UINTN *NumberOfBytes, EFI_PHYSICAL_ADDRESS *DeviceAddress, void **Mapping);
typedef EFI_STATUS (*EFI_CREATE_EVENT)(UINT32 Type, EFI_TPL NotifyTpl, EFI_EVENT_NOTIFY NotifyFunction, void *NotifyContext, EFI_EVENT *Event);
typedef EFI_STATUS (*EFI_FILE_OPEN_EX)(EFI_FILE_PROTOCOL *This, EFI_FILE_PROTOCOL **NewHandle, CHAR16 *FileName, UINT64 OpenMode, UINT64 Attributes, EFI_FILE_IO_TOKEN *Token);
typedef EFI_STATUS (*EFI_GET_VARIABLE)(CHAR16 *VariableName, EFI_GUID *VendorGuid, UINT32 *Attributes, UINTN *DataSize, void *Data);
typedef EFI_STATUS (*EFI_SET_VARIABLE)(CHAR16 *VariableName, EFI_GUID *VendorGuid, UINT32 Attributes, UINTN DataSize, void *Data);
typedef EFI_STATUS (*EFI_SMM_ACTIVATE)(EFI_SMM_CONTROL_PROTOCOL *This, INT8 *ArgumentBuffer, UINTN *ArgumentBufferSize, BOOLEAN Periodic, UINTN ActivationInterval);
typedef EFI_STATUS (*EFI_TCG_HASH_ALL)(EFI_TCG_PROTOCOL *This, UINT8 *HashData, UINT64 HashDataLen, TCG_ALGORITHM_ID AlgorithmId, UINT64 *HashedDataLen, UINT8 **HashedDataResult);
typedef EFI_STATUS (*REGISTER_HOT_KEY)(EFI_INPUT_KEY *KeyData, UINT32 Action, UINT16 DefaultId, EFI_STRING HelpString);
struct tdTCG_PCR_EVENT2 {TCG_PCRINDEX PCRIndex;TCG_EVENTTYPE EventType;TPML_DIGEST_VALUES Digest;UINT32 EventSize;UINT8 Event[1];};
typedef EFI_STATUS (*EBC_VM_TEST_ASM)(EFI_EBC_VM_TEST_PROTOCOL *This, CHAR16 *AsmText, INT8 *Buffer, UINTN *BufferLen);
typedef EFI_STATUS (*EFI_BLOCK_WRITE)(EFI_BLOCK_IO_PROTOCOL *This, UINT32 MediaId, EFI_LBA Lba, UINTN BufferSize, void *Buffer);
typedef EFI_STATUS (*EFI_DHCP4_PARSE)(EFI_DHCP4_PROTOCOL *This, EFI_DHCP4_PACKET *Packet, UINT32 *OptionCount,EFI_DHCP4_PACKET_OPTION * *    PacketOptionList);
typedef EFI_STATUS (*EFI_DHCP6_PARSE)(EFI_DHCP6_PROTOCOL *This, EFI_DHCP6_PACKET *Packet, UINT32 *OptionCount,EFI_DHCP6_PACKET_OPTION * *    PacketOptionList);
typedef EFI_STATUS (*EFI_RNG_GET_RNG)(EFI_RNG_PROTOCOL *This, EFI_RNG_ALGORITHM *RNGAlgorithm, UINTN RNGValueLength, UINT8 *RNGValue);
typedef EFI_STATUS (*EFI_SMM_CPU_IO2)(const EFI_SMM_CPU_IO2_PROTOCOL *This, EFI_SMM_IO_WIDTH Width, UINT64 Address, UINTN Count, void *Buffer);
struct tdTCG_PCR_EVENT {TCG_PCRINDEX PCRIndex;TCG_EVENTTYPE EventType;TCG_DIGEST Digest;UINT32 EventSize;UINT8 Event[1];};
typedef EFI_STATUS (*EFI_BLOCK_READ)(EFI_BLOCK_IO_PROTOCOL *This, UINT32 MediaId, EFI_LBA Lba, UINTN BufferSize, void *Buffer);
typedef EFI_STATUS (*EFI_DISK_WRITE)(EFI_DISK_IO_PROTOCOL *This, UINT32 MediaId, UINT64 Offset, UINTN BufferSize, void *Buffer);
typedef EFI_STATUS (*EFI_IMAGE_LOAD)(BOOLEAN BootPolicy, EFI_HANDLE ParentImageHandle, EFI_DEVICE_PATH_PROTOCOL *DevicePath, void *SourceBuffer, UINTN SourceSize, EFI_HANDLE *ImageHandle);
typedef EFI_STATUS (*EFI_IP6_ROUTES)(EFI_IP6_PROTOCOL *This, BOOLEAN DeleteRoute, EFI_IPv6_ADDRESS *Destination, UINT8 PrefixLength, EFI_IPv6_ADDRESS *GatewayAddress);
typedef EFI_STATUS (*EFI_LOAD_FILE2)(EFI_LOAD_FILE2_PROTOCOL *This, EFI_DEVICE_PATH_PROTOCOL *FilePath, BOOLEAN BootPolicy, UINTN *BufferSize, void *Buffer);
typedef EFI_STATUS (*EFI_SMBIOS_ADD)(const EFI_SMBIOS_PROTOCOL *This, EFI_HANDLE ProducerHandle, EFI_SMBIOS_HANDLE *SmbiosHandle, EFI_SMBIOS_TABLE_HEADER *Record);
typedef EFI_STATUS (*EFI_SMM_CPU_IO)(EFI_SMM_CPU_IO_INTERFACE *This, EFI_SMM_IO_WIDTH Width, UINT64 Address, UINTN Count, void *Buffer);
typedef EFI_STATUS (*EFI_DEVICE_IO)(EFI_DEVICE_IO_PROTOCOL *This, EFI_IO_WIDTH Width, UINT64 Address, UINTN Count, void *Buffer);
typedef EFI_STATUS (*EFI_DISK_READ)(EFI_DISK_IO_PROTOCOL *This, UINT32 MediaId, UINT64 Offset, UINTN BufferSize, void *Buffer);
typedef EFI_STATUS (*EFI_FVB_WRITE)(const EFI_FIRMWARE_VOLUME_BLOCK2_PROTOCOL *This, EFI_LBA Lba, UINTN Offset, UINTN *NumBytes, UINT8 *Buffer);
typedef EFI_STATUS (*EFI_LOAD_FILE)(EFI_LOAD_FILE_PROTOCOL *This, EFI_DEVICE_PATH_PROTOCOL *FilePath, BOOLEAN BootPolicy, UINTN *BufferSize, void *Buffer);
typedef EFI_STATUS (*EFI_ARP_FIND)(EFI_ARP_PROTOCOL *This, BOOLEAN BySwAddress, void *AddressBuffer, UINT32 *EntryLength, UINT32 *EntryCount, EFI_ARP_FIND_DATA **Entries, BOOLEAN Refresh);
typedef EFI_STATUS (*EFI_FVB_READ)(const EFI_FIRMWARE_VOLUME_BLOCK2_PROTOCOL *This, EFI_LBA Lba, UINTN Offset, UINTN *NumBytes, UINT8 *Buffer);
typedef EFI_STATUS (*EFI_IO_MAP)(EFI_DEVICE_IO_PROTOCOL *This, EFI_IO_OPERATION_TYPE Operation, EFI_PHYSICAL_ADDRESS *HostAddress, UINTN *NumberOfBytes, EFI_PHYSICAL_ADDRESS *DeviceAddress, void **Mapping);
typedef EFI_STATUS (*EFI_PCI_ROOT_BRIDGE_IO_PROTOCOL_ALLOCATE_BUFFER)(EFI_PCI_ROOT_BRIDGE_IO_PROTOCOL *This, EFI_ALLOCATE_TYPE Type, EFI_MEMORY_TYPE MemoryType, UINTN Pages, void **HostAddress, UINT64 Attributes);
typedef EFI_STATUS (*EFI_USB2_HC_PROTOCOL_ASYNC_ISOCHRONOUS_TRANSFER)(EFI_USB2_HC_PROTOCOL *This, UINT8 DeviceAddress, UINT8 EndPointAddress, UINT8 DeviceSpeed, UINTN MaximumPacketLength, UINT8 DataBuffersNumber,void * *    Data, UINTN DataLength, EFI_USB2_HC_TRANSACTION_TRANSLATOR *Translator, EFI_ASYNC_USB_TRANSFER_CALLBACK IsochronousCallBack, void *Context);
typedef EFI_STATUS (*FRAMEWORK_EFI_PEI_SECURITY_AUTHENTICATION_STATE)(EFI_PEI_SERVICES **PeiServices, EFI_PEI_SECURITY_PPI *This, UINT32 AuthenticationStatus, EFI_FFS_FILE_HEADER *FfsFileHeader, BOOLEAN *DeferExecution);
typedef EFI_STATUS (*EFI_PLATFORM_TO_DRIVER_CONFIGURATION_RESPONSE)(const EFI_PLATFORM_TO_DRIVER_CONFIGURATION_PROTOCOL *This, const EFI_HANDLE ControllerHandle, const EFI_HANDLE ChildHandle, const UINTN *Instance, const EFI_GUID *ParameterTypeGuid, const void *ParameterBlock, const UINTN ParameterBlockSize, const EFI_PLATFORM_CONFIGURATION_ACTION ConfigurationAction);
typedef EFI_STATUS (*EFI_LEGACY_BIOS_PLATFORM_GET_PLATFORM_HANDLE)(EFI_LEGACY_BIOS_PLATFORM_PROTOCOL *This, EFI_GET_PLATFORM_HANDLE_MODE Mode, UINT16 Type, EFI_HANDLE **HandleBuffer, UINTN *HandleCount, void **AdditionalData);
typedef EFI_STATUS (*EFI_USB2_HC_PROTOCOL_SYNC_INTERRUPT_TRANSFER)(EFI_USB2_HC_PROTOCOL *This, UINT8 DeviceAddress, UINT8 EndPointAddress, UINT8 DeviceSpeed, UINTN MaximumPacketLength, void *Data, UINTN *DataLength, UINT8 *DataToggle, UINTN TimeOut, EFI_USB2_HC_TRANSACTION_TRANSLATOR *Translator, UINT32 *TransferResult);
typedef EFI_STATUS (*EFI_USB_HC_PROTOCOL_ASYNC_INTERRUPT_TRANSFER)(EFI_USB_HC_PROTOCOL *This, UINT8 DeviceAddress, UINT8 EndPointAddress, BOOLEAN IsSlowDevice, UINT8 MaxiumPacketLength, BOOLEAN IsNewTransfer, UINT8 *DataToggle, UINTN PollingInterval, UINTN DataLength, EFI_ASYNC_USB_TRANSFER_CALLBACK CallBackFunction, void *Context);
typedef EFI_STATUS (*EFI_USB_HC_PROTOCOL_SYNC_INTERRUPT_TRANSFER)(EFI_USB_HC_PROTOCOL *This, UINT8 DeviceAddress, UINT8 EndPointAddress, BOOLEAN IsSlowDevice, UINT8 MaximumPacketLength, void *Data, UINTN *DataLength, UINT8 *DataToggle, UINTN TimeOut, UINT32 *TransferResult);
typedef EFI_STATUS (*EFI_FIRMWARE_MANAGEMENT_PROTOCOL_SET_IMAGE)(EFI_FIRMWARE_MANAGEMENT_PROTOCOL *This, UINT8 ImageIndex, const void *Image, UINTN ImageSize, const void *VendorCode, EFI_FIRMWARE_MANAGEMENT_UPDATE_IMAGE_PROGRESS Progress, CHAR16 **AbortReason);
typedef EFI_STATUS (*EFI_USB2_HC_PROTOCOL_ISOCHRONOUS_TRANSFER)(EFI_USB2_HC_PROTOCOL *This, UINT8 DeviceAddress, UINT8 EndPointAddress, UINT8 DeviceSpeed, UINTN MaximumPacketLength, UINT8 DataBuffersNumber,void * *    Data, UINTN DataLength, EFI_USB2_HC_TRANSACTION_TRANSLATOR *Translator, UINT32 *TransferResult);
typedef EFI_STATUS (*FRAMEWORK_EFI_MP_SERVICES_STARTUP_ALL_APS)(FRAMEWORK_EFI_MP_SERVICES_PROTOCOL *This, FRAMEWORK_EFI_AP_PROCEDURE Procedure, BOOLEAN SingleThread, EFI_EVENT WaitEvent, UINTN TimeoutInMicroSecs, void *ProcArguments, UINTN *FailedCPUList);
typedef EFI_STATUS (*EFI_FAULT_TOLERANT_WRITE_GET_LAST_WRITE)(EFI_FAULT_TOLERANT_WRITE_PROTOCOL *This, EFI_GUID *CallerId, EFI_LBA *Lba, UINTN *Offset, UINTN *Length, UINTN *PrivateDataSize, void *PrivateData, BOOLEAN *Complete);
typedef EFI_STATUS (*EFI_PCI_PLATFORM_PREPROCESS_CONTROLLER)(EFI_PCI_PLATFORM_PROTOCOL *This, EFI_HANDLE HostBridge, EFI_HANDLE RootBridge, EFI_PCI_ROOT_BRIDGE_IO_PROTOCOL_PCI_ADDRESS PciAddress, EFI_PCI_CONTROLLER_RESOURCE_ALLOCATION_PHASE Phase, EFI_PCI_EXECUTION_PHASE ExecPhase);
typedef EFI_STATUS (*PEI_USB_HOST_CONTROLLER_BULK_TRANSFER)(EFI_PEI_SERVICES **PeiServices, PEI_USB_HOST_CONTROLLER_PPI *This, UINT8 DeviceAddress, UINT8 EndPointAddress, UINT8 MaximumPacketLength, void *Data, UINTN *DataLength, UINT8 *DataToggle, UINTN TimeOut, UINT32 *TransferResult);
typedef EFI_STATUS (*EDKII_MEMORY_PROFILE_REGISTER_IMAGE)(EDKII_MEMORY_PROFILE_PROTOCOL *This, EFI_DEVICE_PATH_PROTOCOL *FilePath, PHYSICAL_ADDRESS ImageBase, UINT64 ImageSize, EFI_FV_FILETYPE FileType);
typedef EFI_STATUS (*EFI_DATA_HUB_REGISTER_FILTER_DRIVER)(EFI_DATA_HUB_PROTOCOL *This, EFI_EVENT FilterEvent, EFI_TPL FilterTpl, UINT64 FilterClass, EFI_GUID *FilterDataRecordGuid);
typedef EFI_STATUS (*EFI_DRIVER_HEALTH_GET_HEALTH_STATUS)(EFI_DRIVER_HEALTH_PROTOCOL *This, EFI_HANDLE ControllerHandle, EFI_HANDLE ChildHandle, EFI_DRIVER_HEALTH_STATUS *HealthStatus, EFI_DRIVER_HEALTH_HII_MESSAGE **MessageList, EFI_HII_HANDLE *FormHiiHandle);
typedef EFI_STATUS (*EFI_EDID_OVERRIDE_PROTOCOL_GET_EDID)(EFI_EDID_OVERRIDE_PROTOCOL *This, EFI_HANDLE *ChildHandle, UINT32 *Attributes, UINTN *EdidSize, UINT8 **Edid);
typedef EFI_STATUS (*EFI_ISA_IO_PROTOCOL_ALLOCATE_BUFFER)(EFI_ISA_IO_PROTOCOL *This, EFI_ALLOCATE_TYPE Type, EFI_MEMORY_TYPE MemoryType, UINTN Pages, void **HostAddress, UINT64 Attributes);
typedef EFI_STATUS (*EFI_PCI_IO_PROTOCOL_ALLOCATE_BUFFER)(EFI_PCI_IO_PROTOCOL *This, EFI_ALLOCATE_TYPE Type, EFI_MEMORY_TYPE MemoryType, UINTN Pages, void **HostAddress, UINT64 Attributes);
typedef EFI_STATUS (*EFI_PEI_MP_SERVICES_ENABLEDISABLEAP)(const EFI_PEI_SERVICES **PeiServices, EFI_PEI_MP_SERVICES_PPI *This, UINTN ProcessorNumber, BOOLEAN EnableAP, UINT32 *HealthFlag);
typedef EFI_STATUS (*EFI_PEI_MP_SERVICES_STARTUP_ALL_APS)(const EFI_PEI_SERVICES **PeiServices, EFI_PEI_MP_SERVICES_PPI *This, EFI_AP_PROCEDURE Procedure, BOOLEAN SingleThread, UINTN TimeoutInMicroSeconds, void *ProcedureArgument);
typedef EFI_STATUS (*EFI_USB_IO_ASYNC_INTERRUPT_TRANSFER)(EFI_USB_IO_PROTOCOL *This, UINT8 DeviceEndpoint, BOOLEAN IsNewTransfer, UINTN PollingInterval, UINTN DataLength, EFI_ASYNC_USB_TRANSFER_CALLBACK InterruptCallBack, void *Context);
typedef EFI_STATUS (*EFI_BLOCK_IO_CRYPTO_WRITE_EXTENDED)(EFI_BLOCK_IO_CRYPTO_PROTOCOL *This, UINT32 MediaId, EFI_LBA LBA, EFI_BLOCK_IO_CRYPTO_TOKEN *Token, UINT64 BufferSize, void *Buffer, UINT64 *Index, void *CryptoIvInput);
typedef EFI_STATUS (*EFI_SIMPLE_NETWORK_RECEIVE_FILTERS)(EFI_SIMPLE_NETWORK_PROTOCOL *This, UINT32 Enable, UINT32 Disable, BOOLEAN ResetMCastFilter, UINTN MCastFilterCnt, EFI_MAC_ADDRESS *MCastFilter);
typedef EFI_STATUS (*EFI_USB2_HC_PROTOCOL_BULK_TRANSFER)(EFI_USB2_HC_PROTOCOL *This, UINT8 DeviceAddress, UINT8 EndPointAddress, UINT8 DeviceSpeed, UINTN MaximumPacketLength, UINT8 DataBuffersNumber,void * *    Data, UINTN *DataLength, UINT8 *DataToggle, UINTN TimeOut, EFI_USB2_HC_TRANSACTION_TRANSLATOR *Translator, UINT32 *TransferResult);
struct _EFI_FAULT_TOLERANT_WRITE_PROTOCOL {EFI_FAULT_TOLERANT_WRITE_GET_MAX_BLOCK_SIZE GetMaxBlockSize;EFI_FAULT_TOLERANT_WRITE_ALLOCATE Allocate;EFI_FAULT_TOLERANT_WRITE_WRITE Write;EFI_FAULT_TOLERANT_WRITE_RESTART Restart;EFI_FAULT_TOLERANT_WRITE_ABORT Abort;EFI_FAULT_TOLERANT_WRITE_GET_LAST_WRITE GetLastWrite;};
struct _EFI_SIMPLE_TEXT_INPUT_EX_PROTOCOL {EFI_INPUT_RESET_EX Reset;EFI_INPUT_READ_KEY_EX ReadKeyStrokeEx;EFI_EVENT WaitForKeyEx;EFI_SET_STATE SetState;EFI_REGISTER_KEYSTROKE_NOTIFY RegisterKeyNotify;EFI_UNREGISTER_KEYSTROKE_NOTIFY UnregisterKeyNotify;};
struct _138354A4B6EE32FB8CA73971C51237F0 {INIT_HANDLE_ENUMERATOR Init;NEXT_HANDLE Next;SKIP_HANDLE Skip;RESET_HANDLE_ENUMERATOR Reset;CLOSE_HANDLE_ENUMERATOR Close;GET_NUM GetNum;};
struct _37FE5FDAC942EB6E0E5F2E84772A13B3 {TPMI_ALG_PUBLIC type;TPMI_ALG_HASH nameAlg;TPMA_OBJECT objectAttributes;TPM2B_DIGEST authPolicy;TPMU_PUBLIC_PARMS parameters;TPMU_PUBLIC_ID unique;};
typedef EFI_STATUS (*EFI_BLOCK_IO_CRYPTO_READ_EXTENDED)(EFI_BLOCK_IO_CRYPTO_PROTOCOL *This, UINT32 MediaId, EFI_LBA LBA, EFI_BLOCK_IO_CRYPTO_TOKEN *Token, UINT64 BufferSize, void *Buffer, UINT64 *Index, void *CryptoIvInput);
typedef EFI_STATUS (*EFI_SMART_CARD_EDGE_DECRYPT_DATA)(EFI_SMART_CARD_EDGE_PROTOCOL *This, EFI_HANDLE SCardHandle, UINTN KeyId, EFI_GUID *HashAlgorithm, EFI_GUID *PaddingMethod, UINTN EncryptedSize, UINT8 *EncryptedData, UINTN *PlaintextSize, UINT8 *PlaintextData);
typedef EFI_STATUS (*EFI_USBFN_IO_GET_ENDPOINT_POLICY)(EFI_USBFN_IO_PROTOCOL *This, UINT8 EndpointIndex, EFI_USBFN_ENDPOINT_DIRECTION Direction, EFI_USBFN_POLICY_TYPE PolicyType, UINTN *BufferSize, void *Buffer);
typedef EFI_STATUS (*EFI_USBFN_IO_SET_ENDPOINT_POLICY)(EFI_USBFN_IO_PROTOCOL *This, UINT8 EndpointIndex, EFI_USBFN_ENDPOINT_DIRECTION Direction, EFI_USBFN_POLICY_TYPE PolicyType, UINTN BufferSize, void *Buffer);
struct _EFI_SWAP_ADDRESS_RANGE_PROTOCOL {EFI_GET_RANGE_LOCATION GetRangeLocation;EFI_GET_SWAP_STATE GetSwapState;EFI_SET_SWAP_STATE SetSwapState;EFI_GET_RTC_POWER_STATUS GetRtcPowerStatus;EFI_GET_SWAP_LOCK_CAPABILITY GetSwapLockCapability;EFI_SET_SWAP_LOCK SetSwapLock;};
typedef EFI_STATUS (*EFI_EXT_SCSI_PASS_THRU_PASSTHRU)(EFI_EXT_SCSI_PASS_THRU_PROTOCOL *This, UINT8 *Target, UINT64 Lun, EFI_EXT_SCSI_PASS_THRU_SCSI_REQUEST_PACKET *Packet, EFI_EVENT Event);
typedef EFI_STATUS (*EFI_MP_SERVICES_STARTUP_ALL_APS)(EFI_MP_SERVICES_PROTOCOL *This, EFI_AP_PROCEDURE Procedure, BOOLEAN SingleThread, EFI_EVENT WaitEvent, UINTN TimeoutInMicroSeconds, void *ProcedureArgument, UINTN **FailedCpuList);
typedef EFI_STATUS (*EFI_MP_SERVICES_STARTUP_THIS_AP)(EFI_MP_SERVICES_PROTOCOL *This, EFI_AP_PROCEDURE Procedure, UINTN ProcessorNumber, EFI_EVENT WaitEvent, UINTN TimeoutInMicroseconds, void *ProcedureArgument, BOOLEAN *Finished);
typedef EFI_STATUS (*EFI_SMART_CARD_EDGE_GET_CONTEXT)(EFI_SMART_CARD_EDGE_PROTOCOL *This, UINTN *NumberAidSupported, UINTN *AidTableSize, SMART_CARD_AID *AidTable, UINTN *NumberSCPresent, UINTN *CsnTableSize, SMART_CARD_CSN *CsnTable, UINT32 *VersionScEdgeProtocol);
typedef EFI_STATUS (*EFI_PCI_HOTPLUG_REQUEST_NOTIFY)(EFI_PCI_HOTPLUG_REQUEST_PROTOCOL *This, EFI_PCI_HOTPLUG_OPERATION Operation, EFI_HANDLE Controller, EFI_DEVICE_PATH_PROTOCOL *RemainingDevicePath, UINT8 *NumberOfChildren, EFI_HANDLE *ChildHandleBuffer);
typedef EFI_STATUS (*EFI_PEI_FFS_FIND_SECTION_DATA3)(const EFI_PEI_SERVICES **PeiServices, EFI_SECTION_TYPE SectionType, UINTN SectionInstance, EFI_PEI_FILE_HANDLE FileHandle, void **SectionData, UINT32 *AuthenticationStatus);
typedef EFI_STATUS (*FRAMEWORK_EFI_FV_GET_NEXT_FILE)(EFI_FIRMWARE_VOLUME_PROTOCOL *This, void *Key, EFI_FV_FILETYPE *FileType, EFI_GUID *NameGuid, EFI_FV_FILE_ATTRIBUTES *Attributes, UINTN *Size);
typedef EFI_STATUS (*EFI_KMS_GET_KEY_BY_ATTRIBUTES)(EFI_KMS_PROTOCOL *This, EFI_KMS_CLIENT_INFO *Client, UINTN *KeyAttributeCount, EFI_KMS_KEY_ATTRIBUTE *KeyAttributes, UINTN *KeyDescriptorCount, EFI_KMS_KEY_DESCRIPTOR *KeyDescriptors, UINTN *ClientDataSize, void **ClientData);
typedef EFI_STATUS (*EFI_SMART_CARD_EDGE_SIGN_DATA)(EFI_SMART_CARD_EDGE_PROTOCOL *This, EFI_HANDLE SCardHandle, UINTN KeyId, UINTN KeyType, EFI_GUID *HashAlgorithm, EFI_GUID *PaddingMethod, UINT8 *HashedData, UINT8 *SignatureData);
typedef EFI_STATUS (*FRAMEWORK_EFI_FV_READ_SECTION)(EFI_FIRMWARE_VOLUME_PROTOCOL *This, EFI_GUID *NameGuid, EFI_SECTION_TYPE SectionType, UINTN SectionInstance, void **Buffer, UINTN *BufferSize, UINT32 *AuthenticationStatus);
typedef EFI_STATUS (*EDKII_UFS_HC_ALLOCATE_BUFFER)(EDKII_UFS_HOST_CONTROLLER_PROTOCOL *This, EFI_ALLOCATE_TYPE Type, EFI_MEMORY_TYPE MemoryType, UINTN Pages, void **HostAddress, UINT64 Attributes);
typedef EFI_STATUS (*EFI_PCI_IO_PROTOCOL_COPY_MEM)(EFI_PCI_IO_PROTOCOL *This, EFI_PCI_IO_PROTOCOL_WIDTH Width, UINT8 DestBarIndex, UINT64 DestOffset, UINT8 SrcBarIndex, UINT64 SrcOffset, UINTN Count);
typedef EFI_STATUS (*EFI_PEI_SMBUS_PPI_ARP_DEVICE)(EFI_PEI_SERVICES **PeiServices, EFI_PEI_SMBUS_PPI *This, BOOLEAN ArpAll, EFI_SMBUS_UDID *SmbusUdid, EFI_SMBUS_DEVICE_ADDRESS *SlaveAddress);
typedef EFI_STATUS (*EFI_SMART_CARD_READER_STATUS)(EFI_SMART_CARD_READER_PROTOCOL *This, CHAR16 *ReaderName, UINTN *ReaderNameLength, UINT32 *State, UINT32 *CardProtocol, UINT8 *Atr, UINTN *AtrLength);
typedef EFI_STATUS (*EFI_SMM_RSC_HANDLER_CALLBACK)(EFI_STATUS_CODE_TYPE CodeType, EFI_STATUS_CODE_VALUE Value, UINT32 Instance, EFI_GUID *CallerId, EFI_STATUS_CODE_DATA *Data);
typedef EFI_STATUS (*EFI_HII_DATABASE_LIST_PACKS)(const EFI_HII_DATABASE_PROTOCOL *This, UINT8 PackageType, const EFI_GUID *PackageGuid, UINTN *HandleBufferLength, EFI_HII_HANDLE *Handle);
typedef EFI_STATUS (*EFI_LEGACY_BIOS_INSTALL_ROM)(EFI_LEGACY_BIOS_PROTOCOL *This, EFI_HANDLE PciHandle, void **RomImage, UINTN *Flags, UINT8 *DiskStart, UINT8 *DiskEnd, void **RomShadowAddress, UINT32 *ShadowedRomSize);
typedef EFI_STATUS (*EFI_PXE_BASE_CODE_UDP_WRITE)(EFI_PXE_BASE_CODE_PROTOCOL *This, UINT16 OpFlags, EFI_IP_ADDRESS *DestIp, EFI_PXE_BASE_CODE_UDP_PORT *DestPort, EFI_IP_ADDRESS *GatewayIp, EFI_IP_ADDRESS *SrcIp, EFI_PXE_BASE_CODE_UDP_PORT *SrcPort, UINTN *HeaderSize, void *HeaderPtr, UINTN *BufferSize, void *BufferPtr);
typedef EFI_STATUS (*EFI_SCSI_PASS_THRU_PASSTHRU)(EFI_SCSI_PASS_THRU_PROTOCOL *This, UINT32 Target, UINT64 Lun, EFI_SCSI_PASS_THRU_SCSI_REQUEST_PACKET *Packet, EFI_EVENT Event);
typedef EFI_STATUS (*EFI_USB_IO_CONTROL_TRANSFER)(EFI_USB_IO_PROTOCOL *This, EFI_USB_DEVICE_REQUEST *Request, EFI_USB_DATA_DIRECTION Direction, UINT32 Timeout, void *Data, UINTN DataLength, UINT32 *Status);
typedef EFI_STATUS (*FRAMEWORK_EFI_HII_GET_GLYPH)(EFI_HII_PROTOCOL *This, CHAR16 *Source, UINT16 *Index, UINT8 **GlyphBuffer, UINT16 *BitWidth, UINT32 *InternalStatus);
typedef EFI_STATUS (*EFI_PCI_IO_PROTOCOL_IO_MEM)(EFI_PCI_IO_PROTOCOL *This, EFI_PCI_IO_PROTOCOL_WIDTH Width, UINT8 BarIndex, UINT64 Offset, UINTN Count, void *Buffer);
typedef EFI_STATUS (*EFI_PEI_SIO_REGISTER_WRITE)(EFI_PEI_SERVICES **PeiServices, const EFI_SIO_PPI *This, BOOLEAN ExitCfgMode, EFI_SIO_REGISTER Register, UINT8 IoData);
typedef EFI_STATUS (*EFI_PXE_BASE_CODE_UDP_READ)(EFI_PXE_BASE_CODE_PROTOCOL *This, UINT16 OpFlags, EFI_IP_ADDRESS *DestIp, EFI_PXE_BASE_CODE_UDP_PORT *DestPort, EFI_IP_ADDRESS *SrcIp, EFI_PXE_BASE_CODE_UDP_PORT *SrcPort, UINTN *HeaderSize, void *HeaderPtr, UINTN *BufferSize, void *BufferPtr);
typedef EFI_STATUS (*EFI_PEI_CPU_IO_PPI_IO_MEM)(const EFI_PEI_SERVICES **PeiServices, const EFI_PEI_CPU_IO_PPI *This, EFI_PEI_CPU_IO_PPI_WIDTH Width, UINT64 Address, UINTN Count, void *Buffer);
typedef EFI_STATUS (*EFI_PEI_SIO_REGISTER_READ)(EFI_PEI_SERVICES **PeiServices, const EFI_SIO_PPI *This, BOOLEAN ExitCfgMode, EFI_SIO_REGISTER Register, UINT8 *IoData);
typedef EFI_STATUS (*EFI_USER_PROFILE_GET_INFO)(const EFI_USER_MANAGER_PROTOCOL *This, EFI_USER_PROFILE_HANDLE User, EFI_USER_INFO_HANDLE UserInfo, EFI_USER_INFO *Info, UINTN *InfoSize);
typedef EFI_STATUS (*EFI_USER_PROFILE_SET_INFO)(const EFI_USER_MANAGER_PROTOCOL *This, EFI_USER_PROFILE_HANDLE User, EFI_USER_INFO_HANDLE *UserInfo, const EFI_USER_INFO *Info, UINTN InfoSize);
typedef EFI_STATUS (*EFI_GET_HOT_PLUG_PADDING)(EFI_PCI_HOT_PLUG_INIT_PROTOCOL *This, EFI_DEVICE_PATH_PROTOCOL *HpcDevicePath, UINT64 HpcPciAddress, EFI_HPC_STATE *HpcState, void **Padding, EFI_HPC_PADDING_ATTRIBUTES *Attributes);
typedef EFI_STATUS (*EFI_PEI_FV_FIND_SECTION2)(const EFI_PEI_FIRMWARE_VOLUME_PPI *This, EFI_SECTION_TYPE SearchType, UINTN SearchInstance, EFI_PEI_FILE_HANDLE FileHandle, void **SectionData, UINT32 *AuthenticationStatus);
typedef EFI_STATUS (*EFI_PEI_SMBUS_PPI_NOTIFY)(EFI_PEI_SERVICES **PeiServices, EFI_PEI_SMBUS_PPI *This, EFI_SMBUS_DEVICE_ADDRESS SlaveAddress, UINTN Data, EFI_PEI_SMBUS_NOTIFY_FUNCTION NotifyFunction);
typedef EFI_STATUS (*EFI_RSC_HANDLER_CALLBACK)(EFI_STATUS_CODE_TYPE CodeType, EFI_STATUS_CODE_VALUE Value, UINT32 Instance, EFI_GUID *CallerId, EFI_STATUS_CODE_DATA *Data);
typedef EFI_STATUS (*EFI_SMM_REGISTER_HANDLER)(EFI_SMM_BASE_PROTOCOL *This, EFI_DEVICE_PATH_PROTOCOL *FilePath, void *SourceBuffer, UINTN SourceSize, EFI_HANDLE *ImageHandle, BOOLEAN LegacyIA32Binary);
typedef EFI_STATUS (*EFI_HII_DATABASE_NOTIFY)(UINT8 PackageType, const EFI_GUID *PackageGuid, const EFI_HII_PACKAGE_HEADER *Package, EFI_HII_HANDLE Handle, EFI_HII_DATABASE_NOTIFY_TYPE NotifyType);
typedef EFI_STATUS (*EFI_INITIALIZE_ROOT_HPC)(EFI_PCI_HOT_PLUG_INIT_PROTOCOL *This, EFI_DEVICE_PATH_PROTOCOL *HpcDevicePath, UINT64 HpcPciAddress, EFI_EVENT Event, EFI_HPC_STATE *HpcState);
typedef EFI_STATUS (*EFI_IO_ALLOCATE_BUFFER)(EFI_DEVICE_IO_PROTOCOL *This, EFI_ALLOCATE_TYPE Type, EFI_MEMORY_TYPE MemoryType, UINTN Pages, EFI_PHYSICAL_ADDRESS *HostAddress);
typedef EFI_STATUS (*EFI_PEI_PCI_CFG_PPI_RW)(EFI_PEI_SERVICES **PeiServices, EFI_PEI_PCI_CFG_PPI *This, EFI_PEI_PCI_CFG_PPI_WIDTH Width, UINT64 Address, UINTN SetBits, UINTN ClearBits);
typedef EFI_STATUS (*EFI_REPORT_STATUS_CODE)(EFI_STATUS_CODE_TYPE Type, EFI_STATUS_CODE_VALUE Value, UINT32 Instance, EFI_GUID *CallerId, EFI_STATUS_CODE_DATA *Data);
typedef EFI_STATUS (*EFI_UDP4_GET_MODE_DATA)(EFI_UDP4_PROTOCOL *This, EFI_UDP4_CONFIG_DATA *Udp4ConfigData, EFI_IP4_MODE_DATA *Ip4ModeData, EFI_MANAGED_NETWORK_CONFIG_DATA *MnpConfigData, EFI_SIMPLE_NETWORK_MODE *SnpModeData);
typedef EFI_STATUS (*EFI_UDP6_GET_MODE_DATA)(EFI_UDP6_PROTOCOL *This, EFI_UDP6_CONFIG_DATA *Udp6ConfigData, EFI_IP6_MODE_DATA *Ip6ModeData, EFI_MANAGED_NETWORK_CONFIG_DATA *MnpConfigData, EFI_SIMPLE_NETWORK_MODE *SnpModeData);
struct _EFI_BLOCK_IO_PROTOCOL {UINT64 Revision;EFI_BLOCK_IO_MEDIA *Media;EFI_BLOCK_RESET Reset;EFI_BLOCK_READ ReadBlocks;EFI_BLOCK_WRITE WriteBlocks;EFI_BLOCK_FLUSH FlushBlocks;};
typedef EFI_STATUS (*EFI_PEI_GET_VARIABLE2)(const EFI_PEI_READ_ONLY_VARIABLE2_PPI *This, const CHAR16 *VariableName, const EFI_GUID *VariableGuid, UINT32 *Attributes, UINTN *DataSize, void *Data);
typedef EFI_STATUS (*EFI_USER_PROFILE_FIND)(const EFI_USER_MANAGER_PROTOCOL *This, EFI_USER_PROFILE_HANDLE *User, EFI_USER_INFO_HANDLE *UserInfo, const EFI_USER_INFO *Info, UINTN InfoSize);
struct _EFI_SCSI_IO_PROTOCOL {EFI_SCSI_IO_PROTOCOL_GET_DEVICE_TYPE GetDeviceType;EFI_SCSI_IO_PROTOCOL_GET_DEVICE_LOCATION GetDeviceLocation;EFI_SCSI_IO_PROTOCOL_RESET_BUS ResetBus;EFI_SCSI_IO_PROTOCOL_RESET_DEVICE ResetDevice;EFI_SCSI_IO_PROTOCOL_EXEC_SCSI_COMMAND ExecuteScsiCommand;UINT32 IoAlign;};
struct _EFI_TAPE_IO_PROTOCOL {EFI_TAPE_READ TapeRead;EFI_TAPE_WRITE TapeWrite;EFI_TAPE_REWIND TapeRewind;EFI_TAPE_SPACE TapeSpace;EFI_TAPE_WRITEFM TapeWriteFM;EFI_TAPE_RESET TapeReset;};
typedef EFI_STATUS (*EFI_FV_GET_NEXT_FILE)(const EFI_FIRMWARE_VOLUME2_PROTOCOL *This, void *Key, EFI_FV_FILETYPE *FileType, EFI_GUID *NameGuid, EFI_FV_FILE_ATTRIBUTES *Attributes, UINTN *Size);
typedef EFI_STATUS (*EFI_PEI_GET_VARIABLE)(EFI_PEI_SERVICES **PeiServices, CHAR16 *VariableName, EFI_GUID *VendorGuid, UINT32 *Attributes, UINTN *DataSize, void *Data);
typedef EFI_STATUS (*EFI_CREATE_EVENT_EX)(UINT32 Type, EFI_TPL NotifyTpl, EFI_EVENT_NOTIFY NotifyFunction, const void *NotifyContext, const EFI_GUID *EventGroup, EFI_EVENT *Event);
typedef EFI_STATUS (*EFI_FV_READ_SECTION)(const EFI_FIRMWARE_VOLUME2_PROTOCOL *This, const EFI_GUID *NameGuid, EFI_SECTION_TYPE SectionType, UINTN SectionInstance, void **Buffer, UINTN *BufferSize, UINT32 *AuthenticationStatus);
typedef EFI_STATUS (*EFI_HII_GET_ALT_CFG)(const EFI_HII_CONFIG_ROUTING_PROTOCOL *This, const EFI_STRING ConfigResp, const EFI_GUID *Guid, const EFI_STRING Name, const EFI_DEVICE_PATH_PROTOCOL *DevicePath, const UINT16 *AltCfgId, EFI_STRING *AltCfgResp);
typedef EFI_STATUS (*EFI_HII_UPDATE_FORM)(EFI_HII_PROTOCOL *This, FRAMEWORK_EFI_HII_HANDLE Handle, EFI_FORM_LABEL Label, BOOLEAN AddData, EFI_HII_UPDATE_DATA *Data);
typedef EFI_STATUS (*EFI_SMBIOS_GET_NEXT)(const EFI_SMBIOS_PROTOCOL *This, EFI_SMBIOS_HANDLE *SmbiosHandle, EFI_SMBIOS_TYPE *Type, EFI_SMBIOS_TABLE_HEADER **Record, EFI_HANDLE *ProducerHandle);
typedef EFI_STATUS (*EFI_BLOCK_WRITE_EX)(EFI_BLOCK_IO2_PROTOCOL *This, UINT32 MediaId, EFI_LBA LBA, EFI_BLOCK_IO2_TOKEN *Token, UINTN BufferSize, void *Buffer);
typedef EFI_STATUS (*EFI_HII_DRAW_IMAGE)(const EFI_HII_IMAGE_PROTOCOL *This, EFI_HII_DRAW_FLAGS Flags, const EFI_IMAGE_INPUT *Image, EFI_IMAGE_OUTPUT **Blt, UINTN BltX, UINTN BltY);
typedef EFI_STATUS (*EFI_KMS_CREATE_KEY)(EFI_KMS_PROTOCOL *This, EFI_KMS_CLIENT_INFO *Client, UINT16 *KeyDescriptorCount, EFI_KMS_KEY_DESCRIPTOR *KeyDescriptors, UINTN *ClientDataSize, void **ClientData);
typedef EFI_STATUS (*EFI_KMS_DELETE_KEY)(EFI_KMS_PROTOCOL *This, EFI_KMS_CLIENT_INFO *Client, UINT16 *KeyDescriptorCount, EFI_KMS_KEY_DESCRIPTOR *KeyDescriptors, UINTN *ClientDataSize, void **ClientData);
struct _EFI_HTTP_PROTOCOL {EFI_HTTP_GET_MODE_DATA GetModeData;EFI_HTTP_CONFIGURE Configure;EFI_HTTP_REQUEST Request;EFI_HTTP_CANCEL Cancel;EFI_HTTP_RESPONSE Response;EFI_HTTP_POLL Poll;};
typedef EFI_STATUS (*EFI_BLOCK_READ_EX)(EFI_BLOCK_IO2_PROTOCOL *This, UINT32 MediaId, EFI_LBA LBA, EFI_BLOCK_IO2_TOKEN *Token, UINTN BufferSize, void *Buffer);
typedef EFI_STATUS (*EFI_DISK_WRITE_EX)(EFI_DISK_IO2_PROTOCOL *This, UINT32 MediaId, UINT64 Offset, EFI_DISK_IO2_TOKEN *Token, UINTN BufferSize, void *Buffer);
typedef EFI_STATUS (*EFI_HII_GET_FORMS)(EFI_HII_PROTOCOL *This, FRAMEWORK_EFI_HII_HANDLE Handle, EFI_FORM_ID FormId, UINTN *BufferLength, UINT8 *Buffer);
typedef EFI_STATUS (*EFI_HII_GET_GLYPH)(const EFI_HII_FONT_PROTOCOL *This, const CHAR16 Char, const EFI_FONT_DISPLAY_INFO *StringInfo, EFI_IMAGE_OUTPUT **Blt, UINTN *Baseline);
typedef EFI_STATUS (*EFI_IP6_NEIGHBORS)(EFI_IP6_PROTOCOL *This, BOOLEAN DeleteFlag, EFI_IPv6_ADDRESS *TargetIp6Address, EFI_MAC_ADDRESS *TargetLinkAddress, UINT32 Timeout, BOOLEAN Override);
typedef EFI_STATUS (*EFI_PEI_LOAD_FILE)(const EFI_PEI_LOAD_FILE_PPI *This, EFI_PEI_FILE_HANDLE FileHandle, EFI_PHYSICAL_ADDRESS *ImageAddress, UINT64 *ImageSize, EFI_PHYSICAL_ADDRESS *EntryPoint, UINT32 *AuthenticationState);
typedef EFI_STATUS (*EFI_DISK_READ_EX)(EFI_DISK_IO2_PROTOCOL *This, UINT32 MediaId, UINT64 Offset, EFI_DISK_IO2_TOKEN *Token, UINTN BufferSize, void *Buffer);
typedef EFI_STATUS (*PEI_SMM_ACTIVATE)(EFI_PEI_SERVICES **PeiServices, PEI_SMM_CONTROL_PPI *This, INT8 *ArgumentBuffer, UINTN *ArgumentBufferSize, BOOLEAN Periodic, UINTN ActivationInterval);
struct s_pxe_db_receive {PXE_MAC_ADDR SrcAddr;PXE_MAC_ADDR DestAddr;PXE_UINT32 FrameLen;PXE_MEDIA_PROTOCOL Protocol;PXE_UINT16 MediaHeaderLen;PXE_FRAME_TYPE Type;PXE_UINT8 reserved[7];};
typedef EFI_STATUS (*EFI_DHCP4_BUILD)(EFI_DHCP4_PROTOCOL *This, EFI_DHCP4_PACKET *SeedPacket, UINT32 DeleteCount, UINT8 *DeleteList, UINT32 AppendCount,EFI_DHCP4_PACKET_OPTION * *    AppendList, EFI_DHCP4_PACKET **NewPacket);
typedef EFI_STATUS (*EFI_GET_SECTION)(EFI_SECTION_EXTRACTION_PROTOCOL *This, UINTN SectionStreamHandle, EFI_SECTION_TYPE *SectionType, EFI_GUID *SectionDefinitionGuid, UINTN SectionInstance, void **Buffer, UINTN *BufferSize, UINT32 *AuthenticationStatus);
typedef EFI_STATUS (*EFI_KMS_ADD_KEY)(EFI_KMS_PROTOCOL *This, EFI_KMS_CLIENT_INFO *Client, UINT16 *KeyDescriptorCount, EFI_KMS_KEY_DESCRIPTOR *KeyDescriptors, UINTN *ClientDataSize, void **ClientData);
typedef EFI_STATUS (*EFI_KMS_GET_KEY)(EFI_KMS_PROTOCOL *This, EFI_KMS_CLIENT_INFO *Client, UINT16 *KeyDescriptorCount, EFI_KMS_KEY_DESCRIPTOR *KeyDescriptors, UINTN *ClientDataSize, void **ClientData);
typedef EFI_STATUS (*GET_DEVICE_NAME)(EFI_HANDLE DeviceHandle, BOOLEAN UseComponentName, BOOLEAN UseDevicePath, CHAR8 *Language, CHAR16 **BestDeviceName, EFI_STATUS *ConfigurationStatus, EFI_STATUS *DiagnosticsStatus, BOOLEAN Display, UINTN Indent);
typedef EFI_STATUS (*EFI_HASH2_HASH)(const EFI_HASH2_PROTOCOL *This, const EFI_GUID *HashAlgorithm, const UINT8 *Message, UINTN MessageSize, EFI_HASH2_OUTPUT *Hash);
typedef EFI_STATUS (*EFI_NV_READ)(EFI_FORM_CALLBACK_PROTOCOL *This, CHAR16 *VariableName, EFI_GUID *VendorGuid, UINT32 *Attributes, UINTN *DataSize, void *Buffer);
typedef EFI_STATUS (*EFI_FIRMWARE_MANAGEMENT_PROTOCOL_GET_IMAGE_INFO)(EFI_FIRMWARE_MANAGEMENT_PROTOCOL *This, UINTN *ImageInfoSize, EFI_FIRMWARE_IMAGE_DESCRIPTOR *ImageInfo, UINT32 *DescriptorVersion, UINT8 *DescriptorCount, UINTN *DescriptorSize, UINT32 *PackageVersion, CHAR16 **PackageVersionName);
typedef EFI_STATUS (*EFI_USB2_HC_PROTOCOL_ASYNC_INTERRUPT_TRANSFER)(EFI_USB2_HC_PROTOCOL *This, UINT8 DeviceAddress, UINT8 EndPointAddress, UINT8 DeviceSpeed, UINTN MaxiumPacketLength, BOOLEAN IsNewTransfer, UINT8 *DataToggle, UINTN PollingInterval, UINTN DataLength, EFI_USB2_HC_TRANSACTION_TRANSLATOR *Translator, EFI_ASYNC_USB_TRANSFER_CALLBACK CallBackFunction, void *Context);
typedef EFI_STATUS (*PEI_USB2_HOST_CONTROLLER_BULK_TRANSFER)(EFI_PEI_SERVICES **PeiServices, PEI_USB2_HOST_CONTROLLER_PPI *This, UINT8 DeviceAddress, UINT8 EndPointAddress, UINT8 DeviceSpeed, UINTN MaximumPacketLength,void * *    Data, UINTN *DataLength, UINT8 *DataToggle, UINTN TimeOut, EFI_USB2_HC_TRANSACTION_TRANSLATOR *Translator, UINT32 *TransferResult);
typedef EFI_STATUS (*EFI_PEI_SECURITY_AUTHENTICATION_STATE)(const EFI_PEI_SERVICES **PeiServices, const EFI_PEI_SECURITY2_PPI *This, UINT32 AuthenticationStatus, EFI_PEI_FV_HANDLE FvHandle, EFI_PEI_FILE_HANDLE FileHandle, BOOLEAN *DeferExecution);
typedef EFI_STATUS (*EFI_PEI_SMBUS2_PPI_EXECUTE_OPERATION)(const EFI_PEI_SMBUS2_PPI *This, EFI_SMBUS_DEVICE_ADDRESS SlaveAddress, EFI_SMBUS_DEVICE_COMMAND Command, EFI_SMBUS_OPERATION Operation, BOOLEAN PecCheck, UINTN *Length, void *Buffer);
struct _EDKII_UFS_HOST_CONTROLLER_PROTOCOL {EDKII_UFS_HC_GET_MMIO_BAR GetUfsHcMmioBar;EDKII_UFS_HC_ALLOCATE_BUFFER AllocateBuffer;EDKII_UFS_HC_FREE_BUFFER FreeBuffer;EDKII_UFS_HC_MAP Map;EDKII_UFS_HC_UNMAP Unmap;EDKII_UFS_HC_FLUSH Flush;EDKII_UFS_HC_MMIO_READ_WRITE Read;EDKII_UFS_HC_MMIO_READ_WRITE Write;};
struct _0FBE0DD4E58474FD160BBF5E1E7FF604 {UINT32 Revision;EFI_HANDLE ParentHandle;EFI_SYSTEM_TABLE *SystemTable;EFI_HANDLE DeviceHandle;EFI_DEVICE_PATH_PROTOCOL *FilePath;void *Reserved;UINT32 LoadOptionsSize;void *LoadOptions;void *ImageBase;UINT64 ImageSize;EFI_MEMORY_TYPE ImageCodeType;EFI_MEMORY_TYPE ImageDataType;EFI_IMAGE_UNLOAD Unload;};
struct _15C291F1B4915B5E6D0DFE973FD283A4 {EFI_STATUS Status;EFI_EVENT CompletionEvent;EFI_IPv4_ADDRESS RemoteAddress;UINT16 RemotePort;EFI_IPv4_ADDRESS GatewayAddress;UINT32 ListenPointCount;EFI_DHCP4_LISTEN_POINT *ListenPoints;UINT32 TimeoutValue;EFI_DHCP4_PACKET *Packet;UINT32 ResponseCount;EFI_DHCP4_PACKET *ResponseList;};
struct _A3D05C41E9F030ED867654F416EAE9E2 {UINTN StructVersion;UINTN StructSize;UINTN MaxAuthVariableSize;AUTH_VAR_LIB_FIND_VARIABLE FindVariable;AUTH_VAR_LIB_FIND_NEXT_VARIABLE FindNextVariable;AUTH_VAR_LIB_UPDATE_VARIABLE UpdateVariable;AUTH_VAR_LIB_GET_SCRATCH_BUFFER GetScratchBuffer;AUTH_VAR_LIB_CHECK_REMAINING_SPACE CheckRemainingSpaceForConsistency;AUTH_VAR_LIB_AT_RUNTIME AtRuntime;};
struct _D449158CC1DA6C69E7A99D44FCECEFBC {EFI_DHCP6_CALLBACK Dhcp6Callback;void *CallbackContext;UINT32 OptionCount;EFI_DHCP6_PACKET_OPTION **OptionList;EFI_DHCP6_IA_DESCRIPTOR IaDescriptor;EFI_EVENT IaInfoEvent;BOOLEAN ReconfigureAccept;BOOLEAN RapidCommit;EFI_DHCP6_RETRANSMISSION *SolicitRetransmission;};
struct _F28A51465BCE27322D6C3CE71832DC07 {TPM_GENERATED magic;TPMI_ST_ATTEST type;TPM2B_NAME qualifiedSigner;TPM2B_DATA extraData;TPMS_CLOCK_INFO clockInfo;UINT64 firmwareVersion;TPMU_ATTEST attested;};
typedef EFI_STATUS (*EFI_STORAGE_SECURITY_RECEIVE_DATA)(EFI_STORAGE_SECURITY_COMMAND_PROTOCOL *This, UINT32 MediaId, UINT64 Timeout, UINT8 SecurityProtocolId, UINT16 SecurityProtocolSpecificData, UINTN PayloadBufferSize, void *PayloadBuffer, UINTN *PayloadTransferSize);
typedef EFI_STATUS (*EFI_HII_DATABASE_REGISTER_NOTIFY)(const EFI_HII_DATABASE_PROTOCOL *This, UINT8 PackageType, const EFI_GUID *PackageGuid, EFI_HII_DATABASE_NOTIFY PackageNotifyFn, EFI_HII_DATABASE_NOTIFY_TYPE NotifyType, EFI_HANDLE *NotifyHandle);
typedef EFI_STATUS (*EFI_LEGACY_BIOS_PLATFORM_HOOKS)(EFI_LEGACY_BIOS_PLATFORM_PROTOCOL *This, EFI_GET_PLATFORM_HOOK_MODE Mode, UINT16 Type, EFI_HANDLE DeviceHandle, UINTN *ShadowAddress, EFI_COMPATIBILITY16_TABLE *Compatibility16Table, void **AdditionalData);
typedef EFI_STATUS (*EFI_SMART_CARD_EDGE_VERIFY_PIN)(EFI_SMART_CARD_EDGE_PROTOCOL *This, EFI_HANDLE SCardHandle, INT32 PinSize, UINT8 *PinCode, BOOLEAN *PinResult, UINT32 *RemainingAttempts);
typedef EFI_STATUS (*EFI_SMBUS_HC_EXECUTE_OPERATION)(const EFI_SMBUS_HC_PROTOCOL *This, EFI_SMBUS_DEVICE_ADDRESS SlaveAddress, EFI_SMBUS_DEVICE_COMMAND Command, EFI_SMBUS_OPERATION Operation, BOOLEAN PecCheck, UINTN *Length, void *Buffer);
typedef EFI_STATUS (*EFI_STORAGE_SECURITY_SEND_DATA)(EFI_STORAGE_SECURITY_COMMAND_PROTOCOL *This, UINT32 MediaId, UINT64 Timeout, UINT8 SecurityProtocolId, UINT16 SecurityProtocolSpecificData, UINTN PayloadBufferSize, void *PayloadBuffer);
typedef EFI_STATUS (*EFI_KMS_DELETE_KEY_ATTRIBUTES)(EFI_KMS_PROTOCOL *This, EFI_KMS_CLIENT_INFO *Client, UINT8 *KeyIdentifierSize, const void *KeyIdentifier, UINT16 *KeyAttributesCount, EFI_KMS_KEY_ATTRIBUTE *KeyAttributes, UINTN *ClientDataSize, void **ClientData);
typedef EFI_STATUS (*EFI_TCG_HASH_LOG_EXTEND_EVENT)(EFI_TCG_PROTOCOL *This, EFI_PHYSICAL_ADDRESS HashData, UINT64 HashDataLen, TCG_ALGORITHM_ID AlgorithmId, TCG_PCR_EVENT *TCGLogData, UINT32 *EventNumber, EFI_PHYSICAL_ADDRESS *EventLogLastEntry);
typedef EFI_STATUS (*EFI_HII_ACCESS_FORM_CALLBACK)(const EFI_HII_CONFIG_ACCESS_PROTOCOL *This, EFI_BROWSER_ACTION Action, EFI_QUESTION_ID QuestionId, UINT8 Type, EFI_IFR_TYPE_VALUE *Value, EFI_BROWSER_ACTION_REQUEST *ActionRequest);
typedef EFI_STATUS (*EFI_PEI_RSC_HANDLER_CALLBACK)(const EFI_PEI_SERVICES **PeiServices, EFI_STATUS_CODE_TYPE Type, EFI_STATUS_CODE_VALUE Value, UINT32 Instance, const EFI_GUID *CallerId, const EFI_STATUS_CODE_DATA *Data);
typedef EFI_STATUS (*EFI_REGULAR_EXPRESSION_MATCH)(EFI_REGULAR_EXPRESSION_PROTOCOL *This, CHAR16 *String, CHAR16 *Pattern, EFI_REGEX_SYNTAX_TYPE *SyntaxType, BOOLEAN *Result, EFI_REGEX_CAPTURE **Captures, UINTN *CapturesCount);
struct _EFI_SCSI_PASS_THRU_PROTOCOL {EFI_SCSI_PASS_THRU_MODE *Mode;EFI_SCSI_PASS_THRU_PASSTHRU PassThru;EFI_SCSI_PASS_THRU_GET_NEXT_DEVICE GetNextDevice;EFI_SCSI_PASS_THRU_BUILD_DEVICE_PATH BuildDevicePath;EFI_SCSI_PASS_THRU_GET_TARGET_LUN GetTargetLun;EFI_SCSI_PASS_THRU_RESET_CHANNEL ResetChannel;EFI_SCSI_PASS_THRU_RESET_TARGET ResetTarget;};
typedef EFI_STATUS (*EFI_KMS_ADD_KEY_ATTRIBUTES)(EFI_KMS_PROTOCOL *This, EFI_KMS_CLIENT_INFO *Client, UINT8 *KeyIdentifierSize, const void *KeyIdentifier, UINT16 *KeyAttributesCount, EFI_KMS_KEY_ATTRIBUTE *KeyAttributes, UINTN *ClientDataSize, void **ClientData);
typedef EFI_STATUS (*EFI_KMS_GET_KEY_ATTRIBUTES)(EFI_KMS_PROTOCOL *This, EFI_KMS_CLIENT_INFO *Client, UINT8 *KeyIdentifierSize, const void *KeyIdentifier, UINT16 *KeyAttributesCount, EFI_KMS_KEY_ATTRIBUTE *KeyAttributes, UINTN *ClientDataSize, void **ClientData);
typedef EFI_STATUS (*EFI_PEI_REPORT_STATUS_CODE)(const EFI_PEI_SERVICES **PeiServices, EFI_STATUS_CODE_TYPE Type, EFI_STATUS_CODE_VALUE Value, UINT32 Instance, const EFI_GUID *CallerId, const EFI_STATUS_CODE_DATA *Data);
typedef EFI_STATUS (*EFI_SMM_REPORT_STATUS_CODE)(const EFI_SMM_STATUS_CODE_PROTOCOL *This, EFI_STATUS_CODE_TYPE CodeType, EFI_STATUS_CODE_VALUE Value, UINT32 Instance, const EFI_GUID *CallerId, EFI_STATUS_CODE_DATA *Data);
typedef EFI_STATUS (*FRAMEWORK_EFI_FV_READ_FILE)(EFI_FIRMWARE_VOLUME_PROTOCOL *This, EFI_GUID *NameGuid, void **Buffer, UINTN *BufferSize, EFI_FV_FILETYPE *FoundType, EFI_FV_FILE_ATTRIBUTES *FileAttributes, UINT32 *AuthenticationStatus);
typedef EFI_STATUS (*EFI_ALLOCATE_MEMORY_SPACE)(EFI_GCD_ALLOCATE_TYPE GcdAllocateType, EFI_GCD_MEMORY_TYPE GcdMemoryType, UINTN Alignment, UINT64 Length, EFI_PHYSICAL_ADDRESS *BaseAddress, EFI_HANDLE ImageHandle, EFI_HANDLE DeviceHandle);
typedef EFI_STATUS (*EFI_SERIAL_SET_ATTRIBUTES)(EFI_SERIAL_IO_PROTOCOL *This, UINT64 BaudRate, UINT32 ReceiveFifoDepth, UINT32 Timeout, EFI_PARITY_TYPE Parity, UINT8 DataBits, EFI_STOP_BITS_TYPE StopBits);
struct _EFI_MP_SERVICES_PROTOCOL {EFI_MP_SERVICES_GET_NUMBER_OF_PROCESSORS GetNumberOfProcessors;EFI_MP_SERVICES_GET_PROCESSOR_INFO GetProcessorInfo;EFI_MP_SERVICES_STARTUP_ALL_APS StartupAllAPs;EFI_MP_SERVICES_STARTUP_THIS_AP StartupThisAP;EFI_MP_SERVICES_SWITCH_BSP SwitchBSP;EFI_MP_SERVICES_ENABLEDISABLEAP EnableDisableAP;EFI_MP_SERVICES_WHOAMI WhoAmI;};
typedef EFI_STATUS (*PEI_USB_CONTROL_TRANSFER)(EFI_PEI_SERVICES **PeiServices, PEI_USB_IO_PPI *This, EFI_USB_DEVICE_REQUEST *Request, EFI_USB_DATA_DIRECTION Direction, UINT32 Timeout, void *Data, UINTN DataLength);
struct _EFI_PEI_MP_SERVICES_PPI {EFI_PEI_MP_SERVICES_GET_NUMBER_OF_PROCESSORS GetNumberOfProcessors;EFI_PEI_MP_SERVICES_GET_PROCESSOR_INFO GetProcessorInfo;EFI_PEI_MP_SERVICES_STARTUP_ALL_APS StartupAllAPs;EFI_PEI_MP_SERVICES_STARTUP_THIS_AP StartupThisAP;EFI_PEI_MP_SERVICES_SWITCH_BSP SwitchBSP;EFI_PEI_MP_SERVICES_ENABLEDISABLEAP EnableDisableAP;EFI_PEI_MP_SERVICES_WHOAMI WhoAmI;};
typedef EFI_STATUS (*EFI_ISA_IO_PROTOCOL_MAP)(EFI_ISA_IO_PROTOCOL *This, EFI_ISA_IO_PROTOCOL_OPERATION Operation, UINT8 ChannelNumber, UINT32 ChannelAttributes, void *HostAddress, UINTN *NumberOfBytes, EFI_PHYSICAL_ADDRESS *DeviceAddress, void **Mapping);
struct _EFI_DEVICE_IO_PROTOCOL {EFI_IO_ACCESS Mem;EFI_IO_ACCESS Io;EFI_IO_ACCESS Pci;EFI_IO_MAP Map;EFI_PCI_DEVICE_PATH PciDevicePath;EFI_IO_UNMAP Unmap;EFI_IO_ALLOCATE_BUFFER AllocateBuffer;EFI_IO_FLUSH Flush;EFI_IO_FREE_BUFFER FreeBuffer;};
typedef EFI_STATUS (*EFI_TCP4_GET_MODE_DATA)(EFI_TCP4_PROTOCOL *This, EFI_TCP4_CONNECTION_STATE *Tcp4State, EFI_TCP4_CONFIG_DATA *Tcp4ConfigData, EFI_IP4_MODE_DATA *Ip4ModeData, EFI_MANAGED_NETWORK_CONFIG_DATA *MnpConfigData, EFI_SIMPLE_NETWORK_MODE *SnpModeData);
typedef EFI_STATUS (*EFI_TCP6_GET_MODE_DATA)(EFI_TCP6_PROTOCOL *This, EFI_TCP6_CONNECTION_STATE *Tcp6State, EFI_TCP6_CONFIG_DATA *Tcp6ConfigData, EFI_IP6_MODE_DATA *Ip6ModeData, EFI_MANAGED_NETWORK_CONFIG_DATA *MnpConfigData, EFI_SIMPLE_NETWORK_MODE *SnpModeData);
typedef EFI_STATUS (*EFI_ALLOCATE_IO_SPACE)(EFI_GCD_ALLOCATE_TYPE GcdAllocateType, EFI_GCD_IO_TYPE GcdIoType, UINTN Alignment, UINT64 Length, EFI_PHYSICAL_ADDRESS *BaseAddress, EFI_HANDLE ImageHandle, EFI_HANDLE DeviceHandle);
typedef EFI_STATUS (*EFI_BADGING_GET_IMAGE)(EFI_OEM_BADGING_PROTOCOL *This, UINT32 *Instance, EFI_BADGING_FORMAT *Format, UINT8 **ImageData, UINTN *ImageSize, EFI_BADGING_DISPLAY_ATTRIBUTE *Attribute, UINTN *CoordinateX, UINTN *CoordinateY);
typedef EFI_STATUS (*EFI_BROWSER_CALLBACK2)(const EFI_FORM_BROWSER2_PROTOCOL *This, UINTN *ResultsDataSize, EFI_STRING ResultsData, const BOOLEAN RetrieveData, const EFI_GUID *VariableGuid, const CHAR16 *VariableName);
typedef EFI_STATUS (*EFI_HII_DRAW_IMAGE_ID)(const EFI_HII_IMAGE_PROTOCOL *This, EFI_HII_DRAW_FLAGS Flags, EFI_HII_HANDLE PackageList, EFI_IMAGE_ID ImageId, EFI_IMAGE_OUTPUT **Blt, UINTN BltX, UINTN BltY);
typedef EFI_STATUS (*EFI_MTFTP4_GET_INFO)(EFI_MTFTP4_PROTOCOL *This, EFI_MTFTP4_OVERRIDE_DATA *OverrideData, UINT8 *Filename, UINT8 *ModeStr, UINT8 OptionCount, EFI_MTFTP4_OPTION *OptionList, UINT32 *PacketLength, EFI_MTFTP4_PACKET **Packet);
typedef EFI_STATUS (*EFI_MTFTP6_GET_INFO)(EFI_MTFTP6_PROTOCOL *This, EFI_MTFTP6_OVERRIDE_DATA *OverrideData, UINT8 *Filename, UINT8 *ModeStr, UINT8 OptionCount, EFI_MTFTP6_OPTION *OptionList, UINT32 *PacketLength, EFI_MTFTP6_PACKET **Packet);
typedef EFI_STATUS (*EFI_PEI_GET_SECTION)(EFI_PEI_SERVICES **PeiServices, EFI_PEI_SECTION_EXTRACTION_PPI *This, EFI_SECTION_TYPE *SectionType, EFI_GUID *SectionDefinitionGuid, UINTN SectionInstance, void **Buffer, UINT32 *BufferSize, UINT32 *AuthenticationStatus);
struct tdEFI_TCG2_PROTOCOL {EFI_TCG2_GET_CAPABILITY GetCapability;EFI_TCG2_GET_EVENT_LOG GetEventLog;EFI_TCG2_HASH_LOG_EXTEND_EVENT HashLogExtendEvent;EFI_TCG2_SUBMIT_COMMAND SubmitCommand;EFI_TCG2_GET_ACTIVE_PCR_BANKS GetActivePcrBanks;EFI_TCG2_SET_ACTIVE_PCR_BANKS SetActivePcrBanks;EFI_TCG2_GET_RESULT_OF_SET_ACTIVE_PCR_BANKS GetResultOfSetActivePcrBanks;};
typedef EFI_STATUS (*EFI_HII_SET_STRING)(const EFI_HII_STRING_PROTOCOL *This, EFI_HII_HANDLE PackageList, EFI_STRING_ID StringId, const CHAR8 *Language, EFI_STRING String, const EFI_FONT_INFO *StringFontInfo);
struct _EFI_UDP6_PROTOCOL {EFI_UDP6_GET_MODE_DATA GetModeData;EFI_UDP6_CONFIGURE Configure;EFI_UDP6_GROUPS Groups;EFI_UDP6_TRANSMIT Transmit;EFI_UDP6_RECEIVE Receive;EFI_UDP6_CANCEL Cancel;EFI_UDP6_POLL Poll;};
struct _EFI_ARP_PROTOCOL {EFI_ARP_CONFIGURE Configure;EFI_ARP_ADD Add;EFI_ARP_FIND Find;EFI_ARP_DELETE Delete;EFI_ARP_FLUSH Flush;EFI_ARP_REQUEST Request;EFI_ARP_CANCEL Cancel;};
typedef EFI_STATUS (*EFI_FV_READ_FILE)(const EFI_FIRMWARE_VOLUME2_PROTOCOL *This, const EFI_GUID *NameGuid, void **Buffer, UINTN *BufferSize, EFI_FV_FILETYPE *FoundType, EFI_FV_FILE_ATTRIBUTES *FileAttributes, UINT32 *AuthenticationStatus);
typedef EFI_STATUS (*EFI_HII_GET_LINE)(EFI_HII_PROTOCOL *This, FRAMEWORK_EFI_HII_HANDLE Handle, STRING_REF Token, UINT16 *Index, UINT16 LineWidth, CHAR16 *LanguageString, UINT16 *BufferLength, EFI_STRING StringBuffer);
typedef EFI_STATUS (*EFI_HASH_HASH)(const EFI_HASH_PROTOCOL *This, const EFI_GUID *HashAlgorithm, BOOLEAN Extend, const UINT8 *Message, UINT64 MessageSize, EFI_HASH_OUTPUT *Hash);
typedef EFI_STATUS (*LOAD_PE_IMAGE)(EFI_PE32_IMAGE_PROTOCOL *This, EFI_HANDLE ParentImageHandle, EFI_DEVICE_PATH_PROTOCOL *FilePath, void *SourceBuffer, UINTN SourceSize, EFI_PHYSICAL_ADDRESS DstBuffer, UINTN *NumberOfPages, EFI_HANDLE *ImageHandle, EFI_PHYSICAL_ADDRESS *EntryPoint, UINT32 Attribute);
typedef EFI_STATUS (*EFI_NV_WRITE)(EFI_FORM_CALLBACK_PROTOCOL *This, CHAR16 *VariableName, EFI_GUID *VendorGuid, UINT32 Attributes, UINTN DataSize, void *Buffer, BOOLEAN *ResetRequired);
struct s_pxe_cdb {PXE_OPCODE OpCode;PXE_OPFLAGS OpFlags;PXE_UINT16 CPBsize;PXE_UINT16 DBsize;PXE_UINT64 CPBaddr;PXE_UINT64 DBaddr;PXE_STATCODE StatCode;PXE_STATFLAGS StatFlags;PXE_UINT16 IFnum;PXE_CONTROL Control;};
struct _EFI_PCI_HOST_BRIDGE_RESOURCE_ALLOCATION_PROTOCOL {EFI_PCI_HOST_BRIDGE_RESOURCE_ALLOCATION_PROTOCOL_NOTIFY_PHASE NotifyPhase;EFI_PCI_HOST_BRIDGE_RESOURCE_ALLOCATION_PROTOCOL_GET_NEXT_ROOT_BRIDGE GetNextRootBridge;EFI_PCI_HOST_BRIDGE_RESOURCE_ALLOCATION_PROTOCOL_GET_ATTRIBUTES GetAllocAttributes;EFI_PCI_HOST_BRIDGE_RESOURCE_ALLOCATION_PROTOCOL_START_BUS_ENUMERATION StartBusEnumeration;EFI_PCI_HOST_BRIDGE_RESOURCE_ALLOCATION_PROTOCOL_SET_BUS_NUMBERS SetBusNumbers;EFI_PCI_HOST_BRIDGE_RESOURCE_ALLOCATION_PROTOCOL_SUBMIT_RESOURCES SubmitResources;EFI_PCI_HOST_BRIDGE_RESOURCE_ALLOCATION_PROTOCOL_GET_PROPOSED_RESOURCES GetProposedResources;EFI_PCI_HOST_BRIDGE_RESOURCE_ALLOCATION_PROTOCOL_PREPROCESS_CONTROLLER PreprocessController;};
struct _FRAMEWORK_EFI_FIRMWARE_VOLUME_BLOCK_PROTOCOL {FRAMEWORK_EFI_FVB_GET_ATTRIBUTES GetAttributes;FRAMEWORK_EFI_FVB_SET_ATTRIBUTES SetAttributes;FRAMEWORK_EFI_FVB_GET_PHYSICAL_ADDRESS GetPhysicalAddress;FRAMEWORK_EFI_FVB_GET_BLOCK_SIZE GetBlockSize;FRAMEWORK_EFI_FVB_READ Read;FRAMEWORK_EFI_FVB_WRITE Write;FRAMEWORK_EFI_FVB_ERASE_BLOCKS EraseBlocks;EFI_HANDLE ParentHandle;};
typedef EFI_STATUS (*PEI_USB_HOST_CONTROLLER_CONTROL_TRANSFER)(EFI_PEI_SERVICES **PeiServices, PEI_USB_HOST_CONTROLLER_PPI *This, UINT8 DeviceAddress, UINT8 DeviceSpeed, UINT8 MaximumPacketLength, USB_DEVICE_REQUEST *Request, EFI_USB_DATA_DIRECTION TransferDirection, void *Data, UINTN *DataLength, UINTN TimeOut, UINT32 *TransferResult);
typedef EFI_STATUS (*EFI_DRIVER_DIAGNOSTICS2_RUN_DIAGNOSTICS)(EFI_DRIVER_DIAGNOSTICS2_PROTOCOL *This, EFI_HANDLE ControllerHandle, EFI_HANDLE ChildHandle, EFI_DRIVER_DIAGNOSTIC_TYPE DiagnosticType, CHAR8 *Language, EFI_GUID **ErrorType, UINTN *BufferSize, CHAR16 **Buffer);
struct _EDKII_FORM_BROWSER_EXTENSION2_PROTOCOL {UINT32 Version;SET_SCOPE SetScope;REGISTER_HOT_KEY RegisterHotKey;REGISTER_EXIT_HANDLER RegiserExitHandler;IS_BROWSER_DATA_MODIFIED IsBrowserDataModified;EXECUTE_ACTION ExecuteAction;LIST_ENTRY FormViewHistoryHead;LIST_ENTRY OverrideQestListHead;IS_RESET_REQUIRED IsResetRequired;};
typedef EFI_STATUS (*EFI_DRIVER_DIAGNOSTICS_RUN_DIAGNOSTICS)(EFI_DRIVER_DIAGNOSTICS_PROTOCOL *This, EFI_HANDLE ControllerHandle, EFI_HANDLE ChildHandle, EFI_DRIVER_DIAGNOSTIC_TYPE DiagnosticType, CHAR8 *Language, EFI_GUID **ErrorType, UINTN *BufferSize, CHAR16 **Buffer);
typedef EFI_STATUS (*EFI_USB2_HC_PROTOCOL_CONTROL_TRANSFER)(EFI_USB2_HC_PROTOCOL *This, UINT8 DeviceAddress, UINT8 DeviceSpeed, UINTN MaximumPacketLength, EFI_USB_DEVICE_REQUEST *Request, EFI_USB_DATA_DIRECTION TransferDirection, void *Data, UINTN *DataLength, UINTN TimeOut, EFI_USB2_HC_TRANSACTION_TRANSLATOR *Translator, UINT32 *TransferResult);
typedef EFI_STATUS (*EFI_USB_HC_PROTOCOL_CONTROL_TRANSFER)(EFI_USB_HC_PROTOCOL *This, UINT8 DeviceAddress, BOOLEAN IsSlowDevice, UINT8 MaximumPacketLength, EFI_USB_DEVICE_REQUEST *Request, EFI_USB_DATA_DIRECTION TransferDirection, void *Data, UINTN *DataLength, UINTN TimeOut, UINT32 *TransferResult);
typedef EFI_STATUS (*EFI_PEI_SMBUS_PPI_EXECUTE_OPERATION)(EFI_PEI_SERVICES **PeiServices, EFI_PEI_SMBUS_PPI *This, EFI_SMBUS_DEVICE_ADDRESS SlaveAddress, EFI_SMBUS_DEVICE_COMMAND Command, EFI_SMBUS_OPERATION Operation, BOOLEAN PecCheck, UINTN *Length, void *Buffer);
struct _EFI_FIRMWARE_VOLUME_BLOCK_PROTOCOL {EFI_FVB_GET_ATTRIBUTES GetAttributes;EFI_FVB_SET_ATTRIBUTES SetAttributes;EFI_FVB_GET_PHYSICAL_ADDRESS GetPhysicalAddress;EFI_FVB_GET_BLOCK_SIZE GetBlockSize;EFI_FVB_READ Read;EFI_FVB_WRITE Write;EFI_FVB_ERASE_BLOCKS EraseBlocks;EFI_HANDLE ParentHandle;};
struct _FRAMEWORK_EFI_MP_SERVICES_PROTOCOL {EFI_MP_SERVICES_GET_GENERAL_MP_INFO GetGeneralMPInfo;EFI_MP_SERVICES_GET_PROCESSOR_CONTEXT GetProcessorContext;FRAMEWORK_EFI_MP_SERVICES_STARTUP_ALL_APS StartupAllAPs;FRAMEWORK_EFI_MP_SERVICES_STARTUP_THIS_AP StartupThisAP;FRAMEWORK_EFI_MP_SERVICES_SWITCH_BSP SwitchBSP;EFI_MP_SERVICES_SEND_IPI SendIPI;FRAMEWORK_EFI_MP_SERVICES_ENABLEDISABLEAP EnableDisableAP;FRAMEWORK_EFI_MP_SERVICES_WHOAMI WhoAmI;};
struct _62FD0889AE34F9373588B48BD93BECC8 {EFI_RUNTIME_CRYPT_SHA256_GET_CONTEXT_SIZE Sha256GetContextSize;EFI_RUNTIME_CRYPT_SHA256_INIT Sha256Init;EFI_RUNTIME_CRYPT_SHA256_UPDATE Sha256Update;EFI_RUNTIME_CRYPT_SHA256_FINAL Sha256Final;EFI_RUNTIME_CRYPT_RSA_NEW RsaNew;EFI_RUNTIME_CRYPT_RSA_FREE RsaFree;EFI_RUNTIME_CRYPT_RSA_SET_KEY RsaSetKey;EFI_RUNTIME_CRYPT_RSA_PKCS1_VERIFY RsaPkcs1Verify;};
struct _88CEA13D902773BB8EBA67CB9EAE9058 {PHYSICAL_ADDRESS ImageAddress;UINT64 ImageSize;PHYSICAL_ADDRESS DestinationAddress;PHYSICAL_ADDRESS EntryPoint;PE_COFF_LOADER_READ_FILE ImageRead;void *Handle;void *FixupData;UINT32 SectionAlignment;UINT32 PeCoffHeaderOffset;UINT32 DebugDirectoryEntryRva;void *CodeView;CHAR8 *PdbPointer;UINTN SizeOfHeaders;UINT32 ImageCodeMemoryType;UINT32 ImageDataMemoryType;UINT32 ImageError;UINTN FixupDataSize;UINT16 Machine;UINT16 ImageType;BOOLEAN RelocationsStripped;BOOLEAN IsTeImage;PHYSICAL_ADDRESS HiiResourceData;UINT64 Context;};
struct _A79D4CF365EAF285D8F99AA7C0BC1359 {UINTN OptionNumber;EFI_BOOT_MANAGER_LOAD_OPTION_TYPE OptionType;UINT32 Attributes;CHAR16 *Description;EFI_DEVICE_PATH_PROTOCOL *FilePath;UINT8 *OptionalData;UINT32 OptionalDataSize;EFI_GUID VendorGuid;EFI_STATUS Status;CHAR16 *ExitData;UINTN ExitDataSize;};
struct _FB70E6CA8292B432E3A410FF93C01143 {UINT32 Signature;LIST_ENTRY Link;EFI_STATUS Status;EFI_FILE_HANDLE Parent;UINT64 OpenMode;CHAR16 *ParentName;EFI_DEVICE_PATH_PROTOCOL *ParentDevicePath;CHAR16 *FullName;CHAR16 *FileName;EFI_FILE_HANDLE Handle;EFI_FILE_INFO *Info;};
struct _EFI_IDE_CONTROLLER_INIT_PROTOCOL {EFI_IDE_CONTROLLER_GET_CHANNEL_INFO GetChannelInfo;EFI_IDE_CONTROLLER_NOTIFY_PHASE NotifyPhase;EFI_IDE_CONTROLLER_SUBMIT_DATA SubmitData;EFI_IDE_CONTROLLER_DISQUALIFY_MODE DisqualifyMode;EFI_IDE_CONTROLLER_CALCULATE_MODE CalculateMode;EFI_IDE_CONTROLLER_SET_TIMING SetTiming;BOOLEAN EnumAll;UINT8 ChannelCount;};
struct _EFI_EXT_SCSI_PASS_THRU_PROTOCOL {EFI_EXT_SCSI_PASS_THRU_MODE *Mode;EFI_EXT_SCSI_PASS_THRU_PASSTHRU PassThru;EFI_EXT_SCSI_PASS_THRU_GET_NEXT_TARGET_LUN GetNextTargetLun;EFI_EXT_SCSI_PASS_THRU_BUILD_DEVICE_PATH BuildDevicePath;EFI_EXT_SCSI_PASS_THRU_GET_TARGET_LUN GetTargetLun;EFI_EXT_SCSI_PASS_THRU_RESET_CHANNEL ResetChannel;EFI_EXT_SCSI_PASS_THRU_RESET_TARGET_LUN ResetTargetLun;EFI_EXT_SCSI_PASS_THRU_GET_NEXT_TARGET GetNextTarget;};
struct _EFI_BLOCK_IO_CRYPTO_PROTOCOL {EFI_BLOCK_IO_MEDIA *Media;EFI_BLOCK_IO_CRYPTO_RESET Reset;EFI_BLOCK_IO_CRYPTO_GET_CAPABILITIES GetCapabilities;EFI_BLOCK_IO_CRYPTO_SET_CONFIGURATION SetConfiguration;EFI_BLOCK_IO_CRYPTO_GET_CONFIGURATION GetConfiguration;EFI_BLOCK_IO_CRYPTO_READ_EXTENDED ReadExtended;EFI_BLOCK_IO_CRYPTO_WRITE_EXTENDED WriteExtended;EFI_BLOCK_IO_CRYPTO_FLUSH FlushBlocks;};
struct _EFI_FIRMWARE_VOLUME_PROTOCOL {FRAMEWORK_EFI_FV_GET_ATTRIBUTES GetVolumeAttributes;FRAMEWORK_EFI_FV_SET_ATTRIBUTES SetVolumeAttributes;FRAMEWORK_EFI_FV_READ_FILE ReadFile;FRAMEWORK_EFI_FV_READ_SECTION ReadSection;FRAMEWORK_EFI_FV_WRITE_FILE WriteFile;FRAMEWORK_EFI_FV_GET_NEXT_FILE GetNextFile;UINT32 KeySize;EFI_HANDLE ParentHandle;};
struct _EFI_MANAGED_NETWORK_PROTOCOL {EFI_MANAGED_NETWORK_GET_MODE_DATA GetModeData;EFI_MANAGED_NETWORK_CONFIGURE Configure;EFI_MANAGED_NETWORK_MCAST_IP_TO_MAC McastIpToMac;EFI_MANAGED_NETWORK_GROUPS Groups;EFI_MANAGED_NETWORK_TRANSMIT Transmit;EFI_MANAGED_NETWORK_RECEIVE Receive;EFI_MANAGED_NETWORK_CANCEL Cancel;EFI_MANAGED_NETWORK_POLL Poll;};
typedef EFI_STATUS (*FRAMEWORK_EFI_HII_GET_STRING)(EFI_HII_PROTOCOL *This, FRAMEWORK_EFI_HII_HANDLE Handle, STRING_REF Token, BOOLEAN Raw, CHAR16 *LanguageString, UINTN *BufferLength, EFI_STRING StringBuffer);
struct _EFI_EAP_MANAGEMENT_PROTOCOL {EFI_EAP_GET_SYSTEM_CONFIGURATION GetSystemConfiguration;EFI_EAP_SET_SYSTEM_CONFIGURATION SetSystemConfiguration;EFI_EAP_INITIALIZE_PORT InitializePort;EFI_EAP_USER_LOGON UserLogon;EFI_EAP_USER_LOGOFF UserLogoff;EFI_EAP_GET_SUPPLICANT_STATUS GetSupplicantStatus;EFI_EAP_SET_SUPPLICANT_CONFIGURATION SetSupplicantConfiguration;EFI_EAP_GET_SUPPLICANT_STATISTICS GetSupplicantStatistics;};
struct _EFI_ATA_PASS_THRU_PROTOCOL {EFI_ATA_PASS_THRU_MODE *Mode;EFI_ATA_PASS_THRU_PASSTHRU PassThru;EFI_ATA_PASS_THRU_GET_NEXT_PORT GetNextPort;EFI_ATA_PASS_THRU_GET_NEXT_DEVICE GetNextDevice;EFI_ATA_PASS_THRU_BUILD_DEVICE_PATH BuildDevicePath;EFI_ATA_PASS_THRU_GET_DEVICE GetDevice;EFI_ATA_PASS_THRU_RESET_PORT ResetPort;EFI_ATA_PASS_THRU_RESET_DEVICE ResetDevice;};
typedef EFI_STATUS (*EFI_HII_STRING_TO_IMAGE)(const EFI_HII_FONT_PROTOCOL *This, EFI_HII_OUT_FLAGS Flags, const EFI_STRING String, const EFI_FONT_DISPLAY_INFO *StringInfo, EFI_IMAGE_OUTPUT **Blt, UINTN BltX, UINTN BltY, EFI_HII_ROW_INFO **RowInfoArray, UINTN *RowInfoArraySize, UINTN *ColumnInfoArray);
struct _EFI_SERIAL_IO_PROTOCOL {UINT32 Revision;EFI_SERIAL_RESET Reset;EFI_SERIAL_SET_ATTRIBUTES SetAttributes;EFI_SERIAL_SET_CONTROL_BITS SetControl;EFI_SERIAL_GET_CONTROL_BITS GetControl;EFI_SERIAL_WRITE Write;EFI_SERIAL_READ Read;EFI_SERIAL_IO_MODE *Mode;};
typedef EFI_STATUS (*EFI_DHCP6_INFO_REQUEST)(EFI_DHCP6_PROTOCOL *This, BOOLEAN SendClientId, EFI_DHCP6_PACKET_OPTION *OptionRequest, UINT32 OptionCount,EFI_DHCP6_PACKET_OPTION * *    OptionList, EFI_DHCP6_RETRANSMISSION *Retransmission, EFI_EVENT TimeoutEvent, EFI_DHCP6_INFO_CALLBACK ReplyCallback, void *CallbackContext);
struct _EFI_ISA_ACPI_PROTOCOL {EFI_ISA_ACPI_DEVICE_ENUMERATE DeviceEnumerate;EFI_ISA_ACPI_SET_DEVICE_POWER SetPower;EFI_ISA_ACPI_GET_CUR_RESOURCE GetCurResource;EFI_ISA_ACPI_GET_POS_RESOURCE GetPosResource;EFI_ISA_ACPI_SET_RESOURCE SetResource;EFI_ISA_ACPI_ENABLE_DEVICE EnableDevice;EFI_ISA_ACPI_INIT_DEVICE InitDevice;EFI_ISA_ACPI_INTERFACE_INIT InterfaceInit;};
struct _EFI_SMM_BASE_PROTOCOL {EFI_SMM_REGISTER_HANDLER Register;EFI_SMM_UNREGISTER_HANDLER UnRegister;EFI_SMM_COMMUNICATE Communicate;EFI_SMM_CALLBACK_SERVICE RegisterCallback;EFI_SMM_INSIDE_OUT InSmm;EFI_SMM_ALLOCATE_POOL SmmAllocatePool;EFI_SMM_FREE_POOL SmmFreePool;EFI_SMM_GET_SMST_LOCATION GetSmstLocation;};
typedef EFI_STATUS (*EFI_IPSEC_PROCESSEXT)(EFI_IPSEC2_PROTOCOL *This, EFI_HANDLE NicHandle, UINT8 IpVer, void *IpHead, UINT8 *LastHead, void **OptionsBuffer, UINT32 *OptionsLength, EFI_IPSEC_FRAGMENT_DATA **FragmentTable, UINT32 *FragmentCount, EFI_IPSEC_TRAFFIC_DIR TrafficDirection, EFI_EVENT *RecycleSignal);
struct _EFI_MTFTP4_PROTOCOL {EFI_MTFTP4_GET_MODE_DATA GetModeData;EFI_MTFTP4_CONFIGURE Configure;EFI_MTFTP4_GET_INFO GetInfo;EFI_MTFTP4_PARSE_OPTIONS ParseOptions;EFI_MTFTP4_READ_FILE ReadFile;EFI_MTFTP4_WRITE_FILE WriteFile;EFI_MTFTP4_READ_DIRECTORY ReadDirectory;EFI_MTFTP4_POLL Poll;};
struct _EFI_MTFTP6_PROTOCOL {EFI_MTFTP6_GET_MODE_DATA GetModeData;EFI_MTFTP6_CONFIGURE Configure;EFI_MTFTP6_GET_INFO GetInfo;EFI_MTFTP6_PARSE_OPTIONS ParseOptions;EFI_MTFTP6_READ_FILE ReadFile;EFI_MTFTP6_WRITE_FILE WriteFile;EFI_MTFTP6_READ_DIRECTORY ReadDirectory;EFI_MTFTP6_POLL Poll;};
typedef EFI_STATUS (*EFI_HII_GET_STRING)(const EFI_HII_STRING_PROTOCOL *This, const CHAR8 *Language, EFI_HII_HANDLE PackageList, EFI_STRING_ID StringId, EFI_STRING String, UINTN *StringSize, EFI_FONT_INFO **StringFontInfo);
typedef EFI_STATUS (*EFI_HII_NEW_STRING)(const EFI_HII_STRING_PROTOCOL *This, EFI_HII_HANDLE PackageList, EFI_STRING_ID *StringId, const CHAR8 *Language, const CHAR16 *LanguageName, const EFI_STRING String, const EFI_FONT_INFO *StringFontInfo);
struct _EFI_DNS4_PROTOCOL {EFI_DNS4_GET_MODE_DATA GetModeData;EFI_DNS4_CONFIGURE Configure;EFI_DNS4_HOST_NAME_TO_IP HostNameToIp;EFI_DNS4_IP_TO_HOST_NAME IpToHostName;EFI_DNS4_GENERAL_LOOKUP GeneralLookUp;EFI_DNS4_UPDATE_DNS_CACHE UpdateDnsCache;EFI_DNS4_POLL Poll;EFI_DNS4_CANCEL Cancel;};
struct _EFI_DNS6_PROTOCOL {EFI_DNS6_GET_MODE_DATA GetModeData;EFI_DNS6_CONFIGURE Configure;EFI_DNS6_HOST_NAME_TO_IP HostNameToIp;EFI_DNS6_IP_TO_HOST_NAME IpToHostName;EFI_DNS6_GENERAL_LOOKUP GeneralLookUp;EFI_DNS6_UPDATE_DNS_CACHE UpdateDnsCache;EFI_DNS6_POLL Poll;EFI_DNS6_CANCEL Cancel;};
struct _EFI_FTP4_PROTOCOL {EFI_FTP4_GET_MODE_DATA GetModeData;EFI_FTP4_CONNECT Connect;EFI_FTP4_CLOSE Close;EFI_FTP4_CONFIGURE Configure;EFI_FTP4_READ_FILE ReadFile;EFI_FTP4_WRITE_FILE WriteFile;EFI_FTP4_READ_DIRECTORY ReadDirectory;EFI_FTP4_POLL Poll;};
struct _EFI_UDP4_PROTOCOL {EFI_UDP4_GET_MODE_DATA GetModeData;EFI_UDP4_CONFIGURE Configure;EFI_UDP4_GROUPS Groups;EFI_UDP4_ROUTES Routes;EFI_UDP4_TRANSMIT Transmit;EFI_UDP4_RECEIVE Receive;EFI_UDP4_CANCEL Cancel;EFI_UDP4_POLL Poll;};
typedef EFI_STATUS (*EFI_IPSEC_PROCESS)(EFI_IPSEC_PROTOCOL *This, EFI_HANDLE NicHandle, UINT8 IpVer, void *IpHead, UINT8 *LastHead, void *OptionsBuffer, UINT32 OptionsLength, EFI_IPSEC_FRAGMENT_DATA **FragmentTable, UINT32 *FragmentCount, EFI_IPSEC_TRAFFIC_DIR TrafficDirection, EFI_EVENT *RecycleSignal);
struct _EFI_IP4_PROTOCOL {EFI_IP4_GET_MODE_DATA GetModeData;EFI_IP4_CONFIGURE Configure;EFI_IP4_GROUPS Groups;EFI_IP4_ROUTES Routes;EFI_IP4_TRANSMIT Transmit;EFI_IP4_RECEIVE Receive;EFI_IP4_CANCEL Cancel;EFI_IP4_POLL Poll;};
typedef EFI_STATUS (*EFI_SEND_FORM2)(const EFI_FORM_BROWSER2_PROTOCOL *This, EFI_HII_HANDLE *Handle, UINTN HandleCount, EFI_GUID *FormSetGuid, EFI_FORM_ID FormId, const EFI_SCREEN_DESCRIPTOR *ScreenDimensions, EFI_BROWSER_ACTION_REQUEST *ActionRequest);
struct _IP_IO {LIST_ENTRY Entry;LIST_ENTRY IpList;EFI_HANDLE Controller;EFI_HANDLE Image;EFI_HANDLE ChildHandle;IP_IO_IP_PROTOCOL Ip;BOOLEAN IsConfigured;UINT8 Protocol;IP_IO_IP_COMPLETION_TOKEN RcvToken;LIST_ENTRY PendingSndList;void *RcvdContext;void *SndContext;PKT_RCVD_NOTIFY PktRcvdNotify;PKT_SENT_NOTIFY PktSentNotify;UINT8 IpVersion;};
typedef EFI_STATUS (*PEI_USB2_HOST_CONTROLLER_CONTROL_TRANSFER)(EFI_PEI_SERVICES **PeiServices, PEI_USB2_HOST_CONTROLLER_PPI *This, UINT8 DeviceAddress, UINT8 DeviceSpeed, UINTN MaximumPacketLength, USB_DEVICE_REQUEST *Request, EFI_USB_DATA_DIRECTION TransferDirection, void *Data, UINTN *DataLength, UINTN TimeOut, EFI_USB2_HC_TRANSACTION_TRANSLATOR *Translator, UINT32 *TransferResult);
struct _8BB8C0C20D73A7427CF22D29875A4755 {UINT32 Signature;LIST_ENTRY Link;UDP_IO *UdpIo;UDP_IO_CALLBACK CallBack;NET_BUF *Packet;void *Context;EFI_IPv4_ADDRESS Gateway;UDP_SESSION_DATA Session;UDP_COMPLETION_TOKEN Token;UDP_TRANSMIT_DATA Data;};
struct _EFI_EAP_MANAGEMENT2_PROTOCOL {EFI_EAP_GET_SYSTEM_CONFIGURATION GetSystemConfiguration;EFI_EAP_SET_SYSTEM_CONFIGURATION SetSystemConfiguration;EFI_EAP_INITIALIZE_PORT InitializePort;EFI_EAP_USER_LOGON UserLogon;EFI_EAP_USER_LOGOFF UserLogoff;EFI_EAP_GET_SUPPLICANT_STATUS GetSupplicantStatus;EFI_EAP_SET_SUPPLICANT_CONFIGURATION SetSupplicantConfiguration;EFI_EAP_GET_SUPPLICANT_STATISTICS GetSupplicantStatistics;EFI_EAP_GET_KEY GetKey;};
struct _EFI_PEI_FIRMWARE_VOLUME_PPI {EFI_PEI_FV_PROCESS_FV ProcessVolume;EFI_PEI_FV_FIND_FILE_TYPE FindFileByType;EFI_PEI_FV_FIND_FILE_NAME FindFileByName;EFI_PEI_FV_GET_FILE_INFO GetFileInfo;EFI_PEI_FV_GET_INFO GetVolumeInfo;EFI_PEI_FV_FIND_SECTION FindSectionByType;EFI_PEI_FV_GET_FILE_INFO2 GetFileInfo2;EFI_PEI_FV_FIND_SECTION2 FindSectionByType2;UINT32 Signature;UINT32 Revision;};
struct _EFI_BLUETOOTH_HC_PROTOCOL {EFI_BLUETOOTH_HC_SEND_COMMAND SendCommand;EFI_BLUETOOTH_HC_RECEIVE_EVENT ReceiveEvent;EFI_BLUETOOTH_HC_ASYNC_RECEIVE_EVENT AsyncReceiveEvent;EFI_BLUETOOTH_HC_SEND_ACL_DATA SendACLData;EFI_BLUETOOTH_HC_RECEIVE_ACL_DATA ReceiveACLData;EFI_BLUETOOTH_HC_ASYNC_RECEIVE_ACL_DATA AsyncReceiveACLData;EFI_BLUETOOTH_HC_SEND_SCO_DATA SendSCOData;EFI_BLUETOOTH_HC_RECEIVE_SCO_DATA ReceiveSCOData;EFI_BLUETOOTH_HC_ASYNC_RECEIVE_SCO_DATA AsyncReceiveSCOData;};
struct _EFI_LEGACY_8259_PROTOCOL {EFI_LEGACY_8259_SET_VECTOR_BASE SetVectorBase;EFI_LEGACY_8259_GET_MASK GetMask;EFI_LEGACY_8259_SET_MASK SetMask;EFI_LEGACY_8259_SET_MODE SetMode;EFI_LEGACY_8259_GET_VECTOR GetVector;EFI_LEGACY_8259_ENABLE_IRQ EnableIrq;EFI_LEGACY_8259_DISABLE_IRQ DisableIrq;EFI_LEGACY_8259_GET_INTERRUPT_LINE GetInterruptLine;EFI_LEGACY_8259_END_OF_INTERRUPT EndOfInterrupt;};
typedef EFI_STATUS (*EFI_PXE_BASE_CODE_MTFTP)(EFI_PXE_BASE_CODE_PROTOCOL *This, EFI_PXE_BASE_CODE_TFTP_OPCODE Operation, void *BufferPtr, BOOLEAN Overwrite, UINT64 *BufferSize, UINTN *BlockSize, EFI_IP_ADDRESS *ServerIp, UINT8 *Filename, EFI_PXE_BASE_CODE_MTFTP_INFO *Info, BOOLEAN DontUseBuffer);
struct _EFI_CPU_ARCH_PROTOCOL {EFI_CPU_FLUSH_DATA_CACHE FlushDataCache;EFI_CPU_ENABLE_INTERRUPT EnableInterrupt;EFI_CPU_DISABLE_INTERRUPT DisableInterrupt;EFI_CPU_GET_INTERRUPT_STATE GetInterruptState;EFI_CPU_INIT Init;EFI_CPU_REGISTER_INTERRUPT_HANDLER RegisterInterruptHandler;EFI_CPU_GET_TIMER_VALUE GetTimerValue;EFI_CPU_SET_MEMORY_ATTRIBUTES SetMemoryAttributes;UINT32 NumberOfTimers;UINT32 DmaBufferAlignment;};
struct _EFI_ISA_IO_PROTOCOL {EFI_ISA_IO_PROTOCOL_ACCESS Mem;EFI_ISA_IO_PROTOCOL_ACCESS Io;EFI_ISA_IO_PROTOCOL_COPY_MEM CopyMem;EFI_ISA_IO_PROTOCOL_MAP Map;EFI_ISA_IO_PROTOCOL_UNMAP Unmap;EFI_ISA_IO_PROTOCOL_ALLOCATE_BUFFER AllocateBuffer;EFI_ISA_IO_PROTOCOL_FREE_BUFFER FreeBuffer;EFI_ISA_IO_PROTOCOL_FLUSH Flush;EFI_ISA_ACPI_RESOURCE_LIST *ResourceList;UINT32 RomSize;void *RomImage;};
struct _EFI_DHCP4_PROTOCOL {EFI_DHCP4_GET_MODE_DATA GetModeData;EFI_DHCP4_CONFIGURE Configure;EFI_DHCP4_START Start;EFI_DHCP4_RENEW_REBIND RenewRebind;EFI_DHCP4_RELEASE Release;EFI_DHCP4_STOP Stop;EFI_DHCP4_BUILD Build;EFI_DHCP4_TRANSMIT_RECEIVE TransmitReceive;EFI_DHCP4_PARSE Parse;};
struct _EFI_DHCP6_PROTOCOL {EFI_DHCP6_GET_MODE_DATA GetModeData;EFI_DHCP6_CONFIGURE Configure;EFI_DHCP6_START Start;EFI_DHCP6_INFO_REQUEST InfoRequest;EFI_DHCP6_RENEW_REBIND RenewRebind;EFI_DHCP6_DECLINE Decline;EFI_DHCP6_RELEASE Release;EFI_DHCP6_STOP Stop;EFI_DHCP6_PARSE Parse;};
struct _EFI_TCP6_PROTOCOL {EFI_TCP6_GET_MODE_DATA GetModeData;EFI_TCP6_CONFIGURE Configure;EFI_TCP6_CONNECT Connect;EFI_TCP6_ACCEPT Accept;EFI_TCP6_TRANSMIT Transmit;EFI_TCP6_RECEIVE Receive;EFI_TCP6_CLOSE Close;EFI_TCP6_CANCEL Cancel;EFI_TCP6_POLL Poll;};
struct _EFI_IP6_PROTOCOL {EFI_IP6_GET_MODE_DATA GetModeData;EFI_IP6_CONFIGURE Configure;EFI_IP6_GROUPS Groups;EFI_IP6_ROUTES Routes;EFI_IP6_NEIGHBORS Neighbors;EFI_IP6_TRANSMIT Transmit;EFI_IP6_RECEIVE Receive;EFI_IP6_CANCEL Cancel;EFI_IP6_POLL Poll;};
typedef EFI_STATUS (*EFI_SEND_FORM)(EFI_FORM_BROWSER_PROTOCOL *This, BOOLEAN UseDatabase, FRAMEWORK_EFI_HII_HANDLE *Handle, UINTN HandleCount, EFI_IFR_PACKET *Packet, EFI_HANDLE CallbackHandle, UINT8 *NvMapOverride, FRAMEWORK_EFI_SCREEN_DESCRIPTOR *ScreenDimensions, BOOLEAN *ResetRequired);
union _F5FBE7334F772919A43019DC3C2D98D9 {EFI_CACHE_SIZE_DATA CacheSize;EFI_MAXIMUM_CACHE_SIZE_DATA MaximumCacheSize;EFI_CACHE_SPEED_DATA CacheSpeed;EFI_CACHE_SOCKET_DATA CacheSocket;EFI_CACHE_SRAM_TYPE_DATA CacheSramType;EFI_CACHE_SRAM_TYPE_DATA CacheInstalledSramType;EFI_CACHE_ERROR_TYPE_DATA CacheErrorType;EFI_CACHE_TYPE_DATA CacheType;EFI_CACHE_ASSOCIATIVITY_DATA CacheAssociativity;EFI_CACHE_CONFIGURATION_DATA CacheConfig;EFI_CACHE_ASSOCIATION_DATA CacheAssociation;};
struct _EFI_SIMPLE_TEXT_OUTPUT_PROTOCOL {EFI_TEXT_RESET Reset;EFI_TEXT_STRING OutputString;EFI_TEXT_TEST_STRING TestString;EFI_TEXT_QUERY_MODE QueryMode;EFI_TEXT_SET_MODE SetMode;EFI_TEXT_SET_ATTRIBUTE SetAttribute;EFI_TEXT_CLEAR_SCREEN ClearScreen;EFI_TEXT_SET_CURSOR_POSITION SetCursorPosition;EFI_TEXT_ENABLE_CURSOR EnableCursor;EFI_SIMPLE_TEXT_OUTPUT_MODE *Mode;};
struct _EFI_FIRMWARE_VOLUME2_PROTOCOL {EFI_FV_GET_ATTRIBUTES GetVolumeAttributes;EFI_FV_SET_ATTRIBUTES SetVolumeAttributes;EFI_FV_READ_FILE ReadFile;EFI_FV_READ_SECTION ReadSection;EFI_FV_WRITE_FILE WriteFile;EFI_FV_GET_NEXT_FILE GetNextFile;UINT32 KeySize;EFI_HANDLE ParentHandle;EFI_FV_GET_INFO GetInfo;EFI_FV_SET_INFO SetInfo;};
struct _FORM_DISPLAY_ENGINE_STATEMENT {UINTN Signature;UINTN Version;LIST_ENTRY DisplayLink;EFI_IFR_OP_HEADER *OpCode;EFI_HII_VALUE CurrentValue;BOOLEAN SettingChangedFlag;LIST_ENTRY NestStatementList;LIST_ENTRY OptionListHead;UINT32 Attribute;VALIDATE_QUESTION ValidateQuestion;PASSWORD_CHECK PasswordCheck;EFI_IMAGE_ID ImageId;EFI_ANIMATION_ID AnimationId;};
typedef EFI_STATUS (*EFI_HII_STRING_ID_TO_IMAGE)(const EFI_HII_FONT_PROTOCOL *This, EFI_HII_OUT_FLAGS Flags, EFI_HII_HANDLE PackageList, EFI_STRING_ID StringId, const CHAR8 *Language, const EFI_FONT_DISPLAY_INFO *StringInfo, EFI_IMAGE_OUTPUT **Blt, UINTN BltX, UINTN BltY, EFI_HII_ROW_INFO **RowInfoArray, UINTN *RowInfoArraySize, UINTN *ColumnInfoArray);
struct _EFI_PRINT2_PROTOCOL {UNICODE_BS_PRINT UnicodeBSPrint;UNICODE_S_PRINT UnicodeSPrint;UNICODE_BS_PRINT_ASCII_FORMAT UnicodeBSPrintAsciiFormat;UNICODE_S_PRINT_ASCII_FORMAT UnicodeSPrintAsciiFormat;UNICODE_VALUE_TO_STRING UnicodeValueToString;ASCII_BS_PRINT AsciiBSPrint;ASCII_S_PRINT AsciiSPrint;ASCII_BS_PRINT_UNICODE_FORMAT AsciiBSPrintUnicodeFormat;ASCII_S_PRINT_UNICODE_FORMAT AsciiSPrintUnicodeFormat;ASCII_VALUE_TO_STRING AsciiValueToString;};
struct _EFI_TCP4_PROTOCOL {EFI_TCP4_GET_MODE_DATA GetModeData;EFI_TCP4_CONFIGURE Configure;EFI_TCP4_ROUTES Routes;EFI_TCP4_CONNECT Connect;EFI_TCP4_ACCEPT Accept;EFI_TCP4_TRANSMIT Transmit;EFI_TCP4_RECEIVE Receive;EFI_TCP4_CLOSE Close;EFI_TCP4_CANCEL Cancel;EFI_TCP4_POLL Poll;};
struct _EFI_BIS_PROTOCOL {EFI_BIS_INITIALIZE Initialize;EFI_BIS_SHUTDOWN Shutdown;EFI_BIS_FREE Free;EFI_BIS_GET_BOOT_OBJECT_AUTHORIZATION_CERTIFICATE GetBootObjectAuthorizationCertificate;EFI_BIS_GET_BOOT_OBJECT_AUTHORIZATION_CHECKFLAG GetBootObjectAuthorizationCheckFlag;EFI_BIS_GET_BOOT_OBJECT_AUTHORIZATION_UPDATE_TOKEN GetBootObjectAuthorizationUpdateToken;EFI_BIS_GET_SIGNATURE_INFO GetSignatureInfo;EFI_BIS_UPDATE_BOOT_OBJECT_AUTHORIZATION UpdateBootObjectAuthorization;EFI_BIS_VERIFY_BOOT_OBJECT VerifyBootObject;EFI_BIS_VERIFY_OBJECT_WITH_CREDENTIAL VerifyObjectWithCredential;};
struct _EFI_MTFTP4_TOKEN {EFI_STATUS Status;EFI_EVENT Event;EFI_MTFTP4_OVERRIDE_DATA *OverrideData;UINT8 *Filename;UINT8 *ModeStr;UINT32 OptionCount;EFI_MTFTP4_OPTION *OptionList;UINT64 BufferSize;void *Buffer;void *Context;EFI_MTFTP4_CHECK_PACKET CheckPacket;EFI_MTFTP4_TIMEOUT_CALLBACK TimeoutCallback;EFI_MTFTP4_PACKET_NEEDED PacketNeeded;};
struct _EFI_MTFTP6_TOKEN {EFI_STATUS Status;EFI_EVENT Event;EFI_MTFTP6_OVERRIDE_DATA *OverrideData;UINT8 *Filename;UINT8 *ModeStr;UINT32 OptionCount;EFI_MTFTP6_OPTION *OptionList;UINT64 BufferSize;void *Buffer;void *Context;EFI_MTFTP6_CHECK_PACKET CheckPacket;EFI_MTFTP6_TIMEOUT_CALLBACK TimeoutCallback;EFI_MTFTP6_PACKET_NEEDED PacketNeeded;};
struct _EFI_BLUETOOTH_IO_PROTOCOL {EFI_BLUETOOTH_IO_GET_DEVICE_INFO GetDeviceInfo;EFI_BLUETOOTH_IO_GET_SDP_INFO GetSdpInfo;EFI_BLUETOOTH_IO_L2CAP_RAW_SEND L2CapRawSend;EFI_BLUETOOTH_IO_L2CAP_RAW_RECEIVE L2CapRawReceive;EFI_BLUETOOTH_IO_L2CAP_RAW_ASYNC_RECEIVE L2CapRawAsyncReceive;EFI_BLUETOOTH_IO_L2CAP_SEND L2CapSend;EFI_BLUETOOTH_IO_L2CAP_RECEIVE L2CapReceive;EFI_BLUETOOTH_IO_L2CAP_ASYNC_RECEIVE L2CapAsyncReceive;EFI_BLUETOOTH_IO_L2CAP_CONNECT L2CapConnect;EFI_BLUETOOTH_IO_L2CAP_DISCONNECT L2CapDisconnect;EFI_BLUETOOTH_IO_L2CAP_REGISTER_SERVICE L2CapRegisterService;};
struct _EFI_HII_DATABASE_PROTOCOL {EFI_HII_DATABASE_NEW_PACK NewPackageList;EFI_HII_DATABASE_REMOVE_PACK RemovePackageList;EFI_HII_DATABASE_UPDATE_PACK UpdatePackageList;EFI_HII_DATABASE_LIST_PACKS ListPackageLists;EFI_HII_DATABASE_EXPORT_PACKS ExportPackageLists;EFI_HII_DATABASE_REGISTER_NOTIFY RegisterPackageNotify;EFI_HII_DATABASE_UNREGISTER_NOTIFY UnregisterPackageNotify;EFI_HII_FIND_KEYBOARD_LAYOUTS FindKeyboardLayouts;EFI_HII_GET_KEYBOARD_LAYOUT GetKeyboardLayout;EFI_HII_SET_KEYBOARD_LAYOUT SetKeyboardLayout;EFI_HII_DATABASE_GET_PACK_HANDLE GetPackageListHandle;};
struct _EFI_USER_MANAGER_PROTOCOL {EFI_USER_PROFILE_CREATE Create;EFI_USER_PROFILE_DELETE Delete;EFI_USER_PROFILE_GET_NEXT GetNext;EFI_USER_PROFILE_CURRENT Current;EFI_USER_PROFILE_IDENTIFY Identify;EFI_USER_PROFILE_FIND Find;EFI_USER_PROFILE_NOTIFY Notify;EFI_USER_PROFILE_GET_INFO GetInfo;EFI_USER_PROFILE_SET_INFO SetInfo;EFI_USER_PROFILE_DELETE_INFO DeleteInfo;EFI_USER_PROFILE_GET_NEXT_INFO GetNextInfo;};
struct _EFI_SMART_CARD_EDGE_PROTOCOL {EFI_SMART_CARD_EDGE_GET_CONTEXT GetContext;EFI_SMART_CARD_EDGE_CONNECT Connect;EFI_SMART_CARD_EDGE_DISCONNECT Disconnect;EFI_SMART_CARD_EDGE_GET_CSN GetCsn;EFI_SMART_CARD_EDGE_GET_READER_NAME GetReaderName;EFI_SMART_CARD_EDGE_VERIFY_PIN VerifyPin;EFI_SMART_CARD_EDGE_GET_PIN_REMAINING GetPinRemaining;EFI_SMART_CARD_EDGE_GET_DATA GetData;EFI_SMART_CARD_EDGE_GET_CREDENTIAL GetCredential;EFI_SMART_CARD_EDGE_SIGN_DATA SignData;EFI_SMART_CARD_EDGE_DECRYPT_DATA DecryptData;EFI_SMART_CARD_EDGE_BUILD_DH_AGREEMENT BuildDHAgreement;};
struct _EFI_USER_CREDENTIAL_PROTOCOL {EFI_GUID Identifier;EFI_GUID Type;EFI_CREDENTIAL_ENROLL Enroll;EFI_CREDENTIAL_FORM Form;EFI_CREDENTIAL_TILE Tile;EFI_CREDENTIAL_TITLE Title;EFI_CREDENTIAL_USER User;EFI_CREDENTIAL_SELECT Select;EFI_CREDENTIAL_DESELECT Deselect;EFI_CREDENTIAL_DEFAULT Default;EFI_CREDENTIAL_GET_INFO GetInfo;EFI_CREDENTIAL_GET_NEXT_INFO GetNextInfo;EFI_CREDENTIAL_CAPABILITIES Capabilities;};
struct _EFI_LEGACY_BIOS_PROTOCOL {EFI_LEGACY_BIOS_INT86 Int86;EFI_LEGACY_BIOS_FARCALL86 FarCall86;EFI_LEGACY_BIOS_CHECK_ROM CheckPciRom;EFI_LEGACY_BIOS_INSTALL_ROM InstallPciRom;EFI_LEGACY_BIOS_BOOT LegacyBoot;EFI_LEGACY_BIOS_UPDATE_KEYBOARD_LED_STATUS UpdateKeyboardLedStatus;EFI_LEGACY_BIOS_GET_BBS_INFO GetBbsInfo;EFI_LEGACY_BIOS_SHADOW_ALL_LEGACY_OPROMS ShadowAllLegacyOproms;EFI_LEGACY_BIOS_PREPARE_TO_BOOT_EFI PrepareToBootEfi;EFI_LEGACY_BIOS_GET_LEGACY_REGION GetLegacyRegion;EFI_LEGACY_BIOS_COPY_LEGACY_REGION CopyLegacyRegion;EFI_LEGACY_BIOS_BOOT_UNCONVENTIONAL_DEVICE BootUnconventionalDevice;};
struct _976F629227BF629E9EADB1BA5826EE01 {EFI_TABLE_HEADER Hdr;EFI_GET_TIME GetTime;EFI_SET_TIME SetTime;EFI_GET_WAKEUP_TIME GetWakeupTime;EFI_SET_WAKEUP_TIME SetWakeupTime;EFI_SET_VIRTUAL_ADDRESS_MAP SetVirtualAddressMap;EFI_CONVERT_POINTER ConvertPointer;EFI_GET_VARIABLE GetVariable;EFI_GET_NEXT_VARIABLE_NAME GetNextVariableName;EFI_SET_VARIABLE SetVariable;EFI_GET_NEXT_HIGH_MONO_COUNT GetNextHighMonotonicCount;EFI_RESET_SYSTEM ResetSystem;EFI_REPORT_STATUS_CODE ReportStatusCode;};
struct _EFI_PCI_ROOT_BRIDGE_IO_PROTOCOL {EFI_HANDLE ParentHandle;EFI_PCI_ROOT_BRIDGE_IO_PROTOCOL_POLL_IO_MEM PollMem;EFI_PCI_ROOT_BRIDGE_IO_PROTOCOL_POLL_IO_MEM PollIo;EFI_PCI_ROOT_BRIDGE_IO_PROTOCOL_ACCESS Mem;EFI_PCI_ROOT_BRIDGE_IO_PROTOCOL_ACCESS Io;EFI_PCI_ROOT_BRIDGE_IO_PROTOCOL_ACCESS Pci;EFI_PCI_ROOT_BRIDGE_IO_PROTOCOL_COPY_MEM CopyMem;EFI_PCI_ROOT_BRIDGE_IO_PROTOCOL_MAP Map;EFI_PCI_ROOT_BRIDGE_IO_PROTOCOL_UNMAP Unmap;EFI_PCI_ROOT_BRIDGE_IO_PROTOCOL_ALLOCATE_BUFFER AllocateBuffer;EFI_PCI_ROOT_BRIDGE_IO_PROTOCOL_FREE_BUFFER FreeBuffer;EFI_PCI_ROOT_BRIDGE_IO_PROTOCOL_FLUSH Flush;EFI_PCI_ROOT_BRIDGE_IO_PROTOCOL_GET_ATTRIBUTES GetAttributes;EFI_PCI_ROOT_BRIDGE_IO_PROTOCOL_SET_ATTRIBUTES SetAttributes;EFI_PCI_ROOT_BRIDGE_IO_PROTOCOL_CONFIGURATION Configuration;UINT32 SegmentNumber;};
struct _EFI_USER_CREDENTIAL2_PROTOCOL {EFI_GUID Identifier;EFI_GUID Type;EFI_CREDENTIAL2_ENROLL Enroll;EFI_CREDENTIAL2_FORM Form;EFI_CREDENTIAL2_TILE Tile;EFI_CREDENTIAL2_TITLE Title;EFI_CREDENTIAL2_USER User;EFI_CREDENTIAL2_SELECT Select;EFI_CREDENTIAL2_DESELECT Deselect;EFI_CREDENTIAL2_DEFAULT Default;EFI_CREDENTIAL2_GET_INFO GetInfo;EFI_CREDENTIAL2_GET_NEXT_INFO GetNextInfo;EFI_CREDENTIAL_CAPABILITIES Capabilities;EFI_CREDENTIAL2_DELETE Delete;};
struct _EFI_USB_IO_PROTOCOL {EFI_USB_IO_CONTROL_TRANSFER UsbControlTransfer;EFI_USB_IO_BULK_TRANSFER UsbBulkTransfer;EFI_USB_IO_ASYNC_INTERRUPT_TRANSFER UsbAsyncInterruptTransfer;EFI_USB_IO_SYNC_INTERRUPT_TRANSFER UsbSyncInterruptTransfer;EFI_USB_IO_ISOCHRONOUS_TRANSFER UsbIsochronousTransfer;EFI_USB_IO_ASYNC_ISOCHRONOUS_TRANSFER UsbAsyncIsochronousTransfer;EFI_USB_IO_GET_DEVICE_DESCRIPTOR UsbGetDeviceDescriptor;EFI_USB_IO_GET_CONFIG_DESCRIPTOR UsbGetConfigDescriptor;EFI_USB_IO_GET_INTERFACE_DESCRIPTOR UsbGetInterfaceDescriptor;EFI_USB_IO_GET_ENDPOINT_DESCRIPTOR UsbGetEndpointDescriptor;EFI_USB_IO_GET_STRING_DESCRIPTOR UsbGetStringDescriptor;EFI_USB_IO_GET_SUPPORTED_LANGUAGE UsbGetSupportedLanguages;EFI_USB_IO_PORT_RESET UsbPortReset;};
struct _EFI_PXE_BASE_CODE_PROTOCOL {UINT64 Revision;EFI_PXE_BASE_CODE_START Start;EFI_PXE_BASE_CODE_STOP Stop;EFI_PXE_BASE_CODE_DHCP Dhcp;EFI_PXE_BASE_CODE_DISCOVER Discover;EFI_PXE_BASE_CODE_MTFTP Mtftp;EFI_PXE_BASE_CODE_UDP_WRITE UdpWrite;EFI_PXE_BASE_CODE_UDP_READ UdpRead;EFI_PXE_BASE_CODE_SET_IP_FILTER SetIpFilter;EFI_PXE_BASE_CODE_ARP Arp;EFI_PXE_BASE_CODE_SET_PARAMETERS SetParameters;EFI_PXE_BASE_CODE_SET_STATION_IP SetStationIp;EFI_PXE_BASE_CODE_SET_PACKETS SetPackets;EFI_PXE_BASE_CODE_MODE *Mode;};
struct _EFI_USB2_HC_PROTOCOL {EFI_USB2_HC_PROTOCOL_GET_CAPABILITY GetCapability;EFI_USB2_HC_PROTOCOL_RESET Reset;EFI_USB2_HC_PROTOCOL_GET_STATE GetState;EFI_USB2_HC_PROTOCOL_SET_STATE SetState;EFI_USB2_HC_PROTOCOL_CONTROL_TRANSFER ControlTransfer;EFI_USB2_HC_PROTOCOL_BULK_TRANSFER BulkTransfer;EFI_USB2_HC_PROTOCOL_ASYNC_INTERRUPT_TRANSFER AsyncInterruptTransfer;EFI_USB2_HC_PROTOCOL_SYNC_INTERRUPT_TRANSFER SyncInterruptTransfer;EFI_USB2_HC_PROTOCOL_ISOCHRONOUS_TRANSFER IsochronousTransfer;EFI_USB2_HC_PROTOCOL_ASYNC_ISOCHRONOUS_TRANSFER AsyncIsochronousTransfer;EFI_USB2_HC_PROTOCOL_GET_ROOTHUB_PORT_STATUS GetRootHubPortStatus;EFI_USB2_HC_PROTOCOL_SET_ROOTHUB_PORT_FEATURE SetRootHubPortFeature;EFI_USB2_HC_PROTOCOL_CLEAR_ROOTHUB_PORT_FEATURE ClearRootHubPortFeature;UINT16 MajorRevision;UINT16 MinorRevision;};
struct _EFI_PCI_IO_PROTOCOL {EFI_PCI_IO_PROTOCOL_POLL_IO_MEM PollMem;EFI_PCI_IO_PROTOCOL_POLL_IO_MEM PollIo;EFI_PCI_IO_PROTOCOL_ACCESS Mem;EFI_PCI_IO_PROTOCOL_ACCESS Io;EFI_PCI_IO_PROTOCOL_CONFIG_ACCESS Pci;EFI_PCI_IO_PROTOCOL_COPY_MEM CopyMem;EFI_PCI_IO_PROTOCOL_MAP Map;EFI_PCI_IO_PROTOCOL_UNMAP Unmap;EFI_PCI_IO_PROTOCOL_ALLOCATE_BUFFER AllocateBuffer;EFI_PCI_IO_PROTOCOL_FREE_BUFFER FreeBuffer;EFI_PCI_IO_PROTOCOL_FLUSH Flush;EFI_PCI_IO_PROTOCOL_GET_LOCATION GetLocation;EFI_PCI_IO_PROTOCOL_ATTRIBUTES Attributes;EFI_PCI_IO_PROTOCOL_GET_BAR_ATTRIBUTES GetBarAttributes;EFI_PCI_IO_PROTOCOL_SET_BAR_ATTRIBUTES SetBarAttributes;UINT64 RomSize;void *RomImage;};
struct _EFI_USB_HC_PROTOCOL {EFI_USB_HC_PROTOCOL_RESET Reset;EFI_USB_HC_PROTOCOL_GET_STATE GetState;EFI_USB_HC_PROTOCOL_SET_STATE SetState;EFI_USB_HC_PROTOCOL_CONTROL_TRANSFER ControlTransfer;EFI_USB_HC_PROTOCOL_BULK_TRANSFER BulkTransfer;EFI_USB_HC_PROTOCOL_ASYNC_INTERRUPT_TRANSFER AsyncInterruptTransfer;EFI_USB_HC_PROTOCOL_SYNC_INTERRUPT_TRANSFER SyncInterruptTransfer;EFI_USB_HC_PROTOCOL_ISOCHRONOUS_TRANSFER IsochronousTransfer;EFI_USB_HC_PROTOCOL_ASYNC_ISOCHRONOUS_TRANSFER AsyncIsochronousTransfer;EFI_USB_HC_PROTOCOL_GET_ROOTHUB_PORT_NUMBER GetRootHubPortNumber;EFI_USB_HC_PROTOCOL_GET_ROOTHUB_PORT_STATUS GetRootHubPortStatus;EFI_USB_HC_PROTOCOL_SET_ROOTHUB_PORT_FEATURE SetRootHubPortFeature;EFI_USB_HC_PROTOCOL_CLEAR_ROOTHUB_PORT_FEATURE ClearRootHubPortFeature;UINT16 MajorRevision;UINT16 MinorRevision;};
struct _3016E247537C24FA7732182030D115F2 {EFI_TABLE_HEADER Hdr;EFI_GET_TIME GetTime;EFI_SET_TIME SetTime;EFI_GET_WAKEUP_TIME GetWakeupTime;EFI_SET_WAKEUP_TIME SetWakeupTime;EFI_SET_VIRTUAL_ADDRESS_MAP SetVirtualAddressMap;EFI_CONVERT_POINTER ConvertPointer;EFI_GET_VARIABLE GetVariable;EFI_GET_NEXT_VARIABLE_NAME GetNextVariableName;EFI_SET_VARIABLE SetVariable;EFI_GET_NEXT_HIGH_MONO_COUNT GetNextHighMonotonicCount;EFI_RESET_SYSTEM ResetSystem;EFI_UPDATE_CAPSULE UpdateCapsule;EFI_QUERY_CAPSULE_CAPABILITIES QueryCapsuleCapabilities;EFI_QUERY_VARIABLE_INFO QueryVariableInfo;};
struct _EFI_FILE_PROTOCOL {UINT64 Revision;EFI_FILE_OPEN Open;EFI_FILE_CLOSE Close;EFI_FILE_DELETE Delete;EFI_FILE_READ Read;EFI_FILE_WRITE Write;EFI_FILE_GET_POSITION GetPosition;EFI_FILE_SET_POSITION SetPosition;EFI_FILE_GET_INFO GetInfo;EFI_FILE_SET_INFO SetInfo;EFI_FILE_FLUSH Flush;EFI_FILE_OPEN_EX OpenEx;EFI_FILE_READ_EX ReadEx;EFI_FILE_WRITE_EX WriteEx;EFI_FILE_FLUSH_EX FlushEx;};
struct _EFI_SIMPLE_NETWORK_PROTOCOL {UINT64 Revision;EFI_SIMPLE_NETWORK_START Start;EFI_SIMPLE_NETWORK_STOP Stop;EFI_SIMPLE_NETWORK_INITIALIZE Initialize;EFI_SIMPLE_NETWORK_RESET Reset;EFI_SIMPLE_NETWORK_SHUTDOWN Shutdown;EFI_SIMPLE_NETWORK_RECEIVE_FILTERS ReceiveFilters;EFI_SIMPLE_NETWORK_STATION_ADDRESS StationAddress;EFI_SIMPLE_NETWORK_STATISTICS Statistics;EFI_SIMPLE_NETWORK_MCAST_IP_TO_MAC MCastIpToMac;EFI_SIMPLE_NETWORK_NVDATA NvData;EFI_SIMPLE_NETWORK_GET_STATUS GetStatus;EFI_SIMPLE_NETWORK_TRANSMIT Transmit;EFI_SIMPLE_NETWORK_RECEIVE Receive;EFI_EVENT WaitForPacket;EFI_SIMPLE_NETWORK_MODE *Mode;};
struct _EFI_HII_PROTOCOL {EFI_HII_NEW_PACK NewPack;EFI_HII_REMOVE_PACK RemovePack;EFI_HII_FIND_HANDLES FindHandles;EFI_HII_EXPORT ExportDatabase;EFI_HII_TEST_STRING TestString;FRAMEWORK_EFI_HII_GET_GLYPH GetGlyph;EFI_HII_GLYPH_TO_BLT GlyphToBlt;FRAMEWORK_EFI_HII_NEW_STRING NewString;EFI_HII_GET_PRI_LANGUAGES GetPrimaryLanguages;EFI_HII_GET_SEC_LANGUAGES GetSecondaryLanguages;FRAMEWORK_EFI_HII_GET_STRING GetString;EFI_HII_RESET_STRINGS ResetStrings;EFI_HII_GET_LINE GetLine;EFI_HII_GET_FORMS GetForms;EFI_HII_GET_DEFAULT_IMAGE GetDefaultImage;EFI_HII_UPDATE_FORM UpdateForm;FRAMEWORK_EFI_HII_GET_KEYBOARD_LAYOUT GetKeyboardLayout;};
struct _41B3A175AE25B0BCD91769F5CBDEAF65 {EFI_PEI_PCD_PPI_SET_SKU SetSku;EFI_PEI_PCD_PPI_GET_8 Get8;EFI_PEI_PCD_PPI_GET_16 Get16;EFI_PEI_PCD_PPI_GET_32 Get32;EFI_PEI_PCD_PPI_GET_64 Get64;EFI_PEI_PCD_PPI_GET_POINTER GetPtr;EFI_PEI_PCD_PPI_GET_BOOLEAN GetBool;EFI_PEI_PCD_PPI_GET_SIZE GetSize;EFI_PEI_PCD_PPI_SET_8 Set8;EFI_PEI_PCD_PPI_SET_16 Set16;EFI_PEI_PCD_PPI_SET_32 Set32;EFI_PEI_PCD_PPI_SET_64 Set64;EFI_PEI_PCD_PPI_SET_POINTER SetPtr;EFI_PEI_PCD_PPI_SET_BOOLEAN SetBool;EFI_PEI_PCD_PPI_CALLBACK_ON_SET CallbackOnSet;EFI_PEI_PCD_PPI_CANCEL_CALLBACK CancelCallback;EFI_PEI_PCD_PPI_GET_NEXT_TOKEN GetNextToken;EFI_PEI_PCD_PPI_GET_NEXT_TOKEN_SPACE GetNextTokenSpace;};
struct _EFI_USBFN_IO_PROTOCOL {UINT32 Revision;EFI_USBFN_IO_DETECT_PORT DetectPort;EFI_USBFN_IO_CONFIGURE_ENABLE_ENDPOINTS ConfigureEnableEndpoints;EFI_USBFN_IO_GET_ENDPOINT_MAXPACKET_SIZE GetEndpointMaxPacketSize;EFI_USBFN_IO_GET_DEVICE_INFO GetDeviceInfo;EFI_USBFN_IO_GET_VENDOR_ID_PRODUCT_ID GetVendorIdProductId;EFI_USBFN_IO_ABORT_TRANSFER AbortTransfer;EFI_USBFN_IO_GET_ENDPOINT_STALL_STATE GetEndpointStallState;EFI_USBFN_IO_SET_ENDPOINT_STALL_STATE SetEndpointStallState;EFI_USBFN_IO_EVENTHANDLER EventHandler;EFI_USBFN_IO_TRANSFER Transfer;EFI_USBFN_IO_GET_MAXTRANSFER_SIZE GetMaxTransferSize;EFI_USBFN_IO_ALLOCATE_TRANSFER_BUFFER AllocateTransferBuffer;EFI_USBFN_IO_FREE_TRANSFER_BUFFER FreeTransferBuffer;EFI_USBFN_IO_START_CONTROLLER StartController;EFI_USBFN_IO_STOP_CONTROLLER StopController;EFI_USBFN_IO_SET_ENDPOINT_POLICY SetEndpointPolicy;EFI_USBFN_IO_GET_ENDPOINT_POLICY GetEndpointPolicy;};
struct _EFI_KMS_PROTOCOL {EFI_KMS_GET_SERVICE_STATUS GetServiceStatus;EFI_KMS_REGISTER_CLIENT RegisterClient;EFI_KMS_CREATE_KEY CreateKey;EFI_KMS_GET_KEY GetKey;EFI_KMS_ADD_KEY AddKey;EFI_KMS_DELETE_KEY DeleteKey;EFI_KMS_GET_KEY_ATTRIBUTES GetKeyAttributes;EFI_KMS_ADD_KEY_ATTRIBUTES AddKeyAttributes;EFI_KMS_DELETE_KEY_ATTRIBUTES DeleteKeyAttributes;EFI_KMS_GET_KEY_BY_ATTRIBUTES GetKeyByAttributes;UINT32 ProtocolVersion;EFI_GUID ServiceId;CHAR16 *ServiceName;UINT32 ServiceVersion;BOOLEAN ServiceAvailable;BOOLEAN ClientIdSupported;BOOLEAN ClientIdRequired;UINT16 ClientIdMaxSize;UINT8 ClientNameStringTypes;BOOLEAN ClientNameRequired;UINT16 ClientNameMaxCount;BOOLEAN ClientDataSupported;UINTN ClientDataMaxSize;BOOLEAN KeyIdVariableLenSupported;UINTN KeyIdMaxSize;UINTN KeyFormatsCount;EFI_GUID *KeyFormats;BOOLEAN KeyAttributesSupported;UINT8 KeyAttributeIdStringTypes;UINT16 KeyAttributeIdMaxCount;UINTN KeyAttributesCount;EFI_KMS_KEY_ATTRIBUTE *KeyAttributes;};
struct _EFI_PCD_PROTOCOL {EFI_PCD_PROTOCOL_SET_SKU SetSku;EFI_PCD_PROTOCOL_GET_8 Get8;EFI_PCD_PROTOCOL_GET_16 Get16;EFI_PCD_PROTOCOL_GET_32 Get32;EFI_PCD_PROTOCOL_GET_64 Get64;EFI_PCD_PROTOCOL_GET_POINTER GetPtr;EFI_PCD_PROTOCOL_GET_BOOLEAN GetBool;EFI_PCD_PROTOCOL_GET_SIZE GetSize;EFI_PCD_PROTOCOL_SET_8 Set8;EFI_PCD_PROTOCOL_SET_16 Set16;EFI_PCD_PROTOCOL_SET_32 Set32;EFI_PCD_PROTOCOL_SET_64 Set64;EFI_PCD_PROTOCOL_SET_POINTER SetPtr;EFI_PCD_PROTOCOL_SET_BOOLEAN SetBool;EFI_PCD_PROTOCOL_CALLBACK_ON_SET CallbackOnSet;EFI_PCD_PROTOCOL_CANCEL_CALLBACK CancelCallback;EFI_PCD_PROTOCOL_GET_NEXT_TOKEN GetNextToken;EFI_PCD_PROTOCOL_GET_NEXT_TOKEN_SPACE GetNextTokenSpace;};
struct _FRAMEWORK_EFI_PEI_SERVICES {EFI_TABLE_HEADER Hdr;EFI_PEI_INSTALL_PPI InstallPpi;EFI_PEI_REINSTALL_PPI ReInstallPpi;EFI_PEI_LOCATE_PPI LocatePpi;EFI_PEI_NOTIFY_PPI NotifyPpi;EFI_PEI_GET_BOOT_MODE GetBootMode;EFI_PEI_SET_BOOT_MODE SetBootMode;EFI_PEI_GET_HOB_LIST GetHobList;EFI_PEI_CREATE_HOB CreateHob;EFI_PEI_FFS_FIND_NEXT_VOLUME FfsFindNextVolume;EFI_PEI_FFS_FIND_NEXT_FILE FfsFindNextFile;EFI_PEI_FFS_FIND_SECTION_DATA FfsFindSectionData;EFI_PEI_INSTALL_PEI_MEMORY InstallPeiMemory;EFI_PEI_ALLOCATE_PAGES AllocatePages;EFI_PEI_ALLOCATE_POOL AllocatePool;EFI_PEI_COPY_MEM CopyMem;EFI_PEI_SET_MEM SetMem;EFI_PEI_REPORT_STATUS_CODE ReportStatusCode;EFI_PEI_RESET_SYSTEM ResetSystem;EFI_PEI_CPU_IO_PPI *CpuIo;EFI_PEI_PCI_CFG_PPI *PciCfg;};
struct _EFI_PEI_SERVICES {EFI_TABLE_HEADER Hdr;EFI_PEI_INSTALL_PPI InstallPpi;EFI_PEI_REINSTALL_PPI ReInstallPpi;EFI_PEI_LOCATE_PPI LocatePpi;EFI_PEI_NOTIFY_PPI NotifyPpi;EFI_PEI_GET_BOOT_MODE GetBootMode;EFI_PEI_SET_BOOT_MODE SetBootMode;EFI_PEI_GET_HOB_LIST GetHobList;EFI_PEI_CREATE_HOB CreateHob;EFI_PEI_FFS_FIND_NEXT_VOLUME2 FfsFindNextVolume;EFI_PEI_FFS_FIND_NEXT_FILE2 FfsFindNextFile;EFI_PEI_FFS_FIND_SECTION_DATA2 FfsFindSectionData;EFI_PEI_INSTALL_PEI_MEMORY InstallPeiMemory;EFI_PEI_ALLOCATE_PAGES AllocatePages;EFI_PEI_ALLOCATE_POOL AllocatePool;EFI_PEI_COPY_MEM CopyMem;EFI_PEI_SET_MEM SetMem;EFI_PEI_REPORT_STATUS_CODE ReportStatusCode;EFI_PEI_RESET_SYSTEM ResetSystem;EFI_PEI_CPU_IO_PPI *CpuIo;EFI_PEI_PCI_CFG2_PPI *PciCfg;EFI_PEI_FFS_FIND_BY_NAME FfsFindFileByName;EFI_PEI_FFS_GET_FILE_INFO FfsGetFileInfo;EFI_PEI_FFS_GET_VOLUME_INFO FfsGetVolumeInfo;EFI_PEI_REGISTER_FOR_SHADOW RegisterForShadow;EFI_PEI_FFS_FIND_SECTION_DATA3 FindSectionData3;EFI_PEI_FFS_GET_FILE_INFO2 FfsGetFileInfo2;EFI_PEI_RESET2_SYSTEM ResetSystem2;};
union _3793CD92955580789EAEA0D05A428B4A {EFI_PROCESSOR_CORE_FREQUENCY_LIST_DATA ProcessorCoreFrequencyList;EFI_PROCESSOR_FSB_FREQUENCY_LIST_DATA ProcessorFsbFrequencyList;EFI_PROCESSOR_SERIAL_NUMBER_DATA ProcessorSerialNumber;EFI_PROCESSOR_CORE_FREQUENCY_DATA ProcessorCoreFrequency;EFI_PROCESSOR_FSB_FREQUENCY_DATA ProcessorFsbFrequency;EFI_PROCESSOR_MAX_CORE_FREQUENCY_DATA ProcessorMaxCoreFrequency;EFI_PROCESSOR_MAX_FSB_FREQUENCY_DATA ProcessorMaxFsbFrequency;EFI_PROCESSOR_VERSION_DATA ProcessorVersion;EFI_PROCESSOR_MANUFACTURER_DATA ProcessorManufacturer;EFI_PROCESSOR_ID_DATA ProcessorId;EFI_PROCESSOR_TYPE_DATA ProcessorType;EFI_PROCESSOR_FAMILY_DATA ProcessorFamily;EFI_PROCESSOR_VOLTAGE_DATA ProcessorVoltage;EFI_PROCESSOR_APIC_BASE_ADDRESS_DATA ProcessorApicBase;EFI_PROCESSOR_APIC_ID_DATA ProcessorApicId;EFI_PROCESSOR_APIC_VERSION_NUMBER_DATA ProcessorApicVersionNumber;EFI_PROCESSOR_MICROCODE_REVISION_DATA CpuUcodeRevisionData;EFI_PROCESSOR_STATUS_DATA ProcessorStatus;EFI_PROCESSOR_SOCKET_TYPE_DATA ProcessorSocketType;EFI_PROCESSOR_SOCKET_NAME_DATA ProcessorSocketName;EFI_PROCESSOR_ASSET_TAG_DATA ProcessorAssetTag;EFI_PROCESSOR_PART_NUMBER_DATA ProcessorPartNumber;EFI_PROCESSOR_HEALTH_STATUS ProcessorHealthStatus;EFI_PROCESSOR_PACKAGE_NUMBER_DATA ProcessorPackageNumber;EFI_PROCESSOR_CORE_COUNT_DATA ProcessorCoreCount;EFI_PROCESSOR_ENABLED_CORE_COUNT_DATA ProcessorEnabledCoreCount;EFI_PROCESSOR_THREAD_COUNT_DATA ProcessorThreadCount;EFI_PROCESSOR_CHARACTERISTICS_DATA ProcessorCharacteristics;EFI_PROCESSOR_FAMILY2_DATA ProcessorFamily2;};
struct _068E160FC62FFE8A9A8C3D0DCCD74500 {PCD_PROTOCOL_SET_SKU SetSku;PCD_PROTOCOL_GET8 Get8;PCD_PROTOCOL_GET16 Get16;PCD_PROTOCOL_GET32 Get32;PCD_PROTOCOL_GET64 Get64;PCD_PROTOCOL_GET_POINTER GetPtr;PCD_PROTOCOL_GET_BOOLEAN GetBool;PCD_PROTOCOL_GET_SIZE GetSize;PCD_PROTOCOL_GET_EX_8 Get8Ex;PCD_PROTOCOL_GET_EX_16 Get16Ex;PCD_PROTOCOL_GET_EX_32 Get32Ex;PCD_PROTOCOL_GET_EX_64 Get64Ex;PCD_PROTOCOL_GET_EX_POINTER GetPtrEx;PCD_PROTOCOL_GET_EX_BOOLEAN GetBoolEx;PCD_PROTOCOL_GET_EX_SIZE GetSizeEx;PCD_PROTOCOL_SET8 Set8;PCD_PROTOCOL_SET16 Set16;PCD_PROTOCOL_SET32 Set32;PCD_PROTOCOL_SET64 Set64;PCD_PROTOCOL_SET_POINTER SetPtr;PCD_PROTOCOL_SET_BOOLEAN SetBool;PCD_PROTOCOL_SET_EX_8 Set8Ex;PCD_PROTOCOL_SET_EX_16 Set16Ex;PCD_PROTOCOL_SET_EX_32 Set32Ex;PCD_PROTOCOL_SET_EX_64 Set64Ex;PCD_PROTOCOL_SET_EX_POINTER SetPtrEx;PCD_PROTOCOL_SET_EX_BOOLEAN SetBoolEx;PCD_PROTOCOL_CALLBACK_ONSET CallbackOnSet;PCD_PROTOCOL_CANCEL_CALLBACK CancelCallback;PCD_PROTOCOL_GET_NEXT_TOKEN GetNextToken;PCD_PROTOCOL_GET_NEXT_TOKENSPACE GetNextTokenSpace;};
struct _33F599C01F472A75885CD02E1089BF19 {PCD_PPI_SET_SKU SetSku;PCD_PPI_GET8 Get8;PCD_PPI_GET16 Get16;PCD_PPI_GET32 Get32;PCD_PPI_GET64 Get64;PCD_PPI_GET_POINTER GetPtr;PCD_PPI_GET_BOOLEAN GetBool;PCD_PPI_GET_SIZE GetSize;PCD_PPI_GET_EX_8 Get8Ex;PCD_PPI_GET_EX_16 Get16Ex;PCD_PPI_GET_EX_32 Get32Ex;PCD_PPI_GET_EX_64 Get64Ex;PCD_PPI_GET_EX_POINTER GetPtrEx;PCD_PPI_GET_EX_BOOLEAN GetBoolEx;PCD_PPI_GET_EX_SIZE GetSizeEx;PCD_PPI_SET8 Set8;PCD_PPI_SET16 Set16;PCD_PPI_SET32 Set32;PCD_PPI_SET64 Set64;PCD_PPI_SET_POINTER SetPtr;PCD_PPI_SET_BOOLEAN SetBool;PCD_PPI_SET_EX_8 Set8Ex;PCD_PPI_SET_EX_16 Set16Ex;PCD_PPI_SET_EX_32 Set32Ex;PCD_PPI_SET_EX_64 Set64Ex;PCD_PPI_SET_EX_POINTER SetPtrEx;PCD_PPI_SET_EX_BOOLEAN SetBoolEx;PCD_PPI_CALLBACK_ONSET CallbackOnSet;PCD_PPI_CANCEL_CALLBACK CancelCallback;PCD_PPI_GET_NEXT_TOKEN GetNextToken;PCD_PPI_GET_NEXT_TOKENSPACE GetNextTokenSpace;};
struct _FC8057BD7989C9ED1DAB2B2369E11209 {SHELLENV_EXECUTE Execute;SHELLENV_GET_ENV GetEnv;SHELLENV_GET_MAP GetMap;SHELLENV_ADD_CMD AddCmd;SHELLENV_ADD_PROT AddProt;SHELLENV_GET_PROT GetProt;SHELLENV_CUR_DIR CurDir;SHELLENV_FILE_META_ARG FileMetaArg;SHELLENV_FREE_FILE_LIST FreeFileList;SHELLENV_NEW_SHELL NewShell;SHELLENV_BATCH_IS_ACTIVE BatchIsActive;SHELLENV_FREE_RESOURCES FreeResources;EFI_GUID SESGuid;UINT32 MajorVersion;UINT32 MinorVersion;SHELLENV_ENABLE_PAGE_BREAK EnablePageBreak;SHELLENV_DISABLE_PAGE_BREAK DisablePageBreak;SHELLENV_GET_PAGE_BREAK GetPageBreak;SHELLENV_SET_KEY_FILTER SetKeyFilter;SHELLENV_GET_KEY_FILTER GetKeyFilter;SHELLENV_GET_EXECUTION_BREAK GetExecutionBreak;SHELLENV_INCREMENT_SHELL_NESTING_LEVEL IncrementShellNestingLevel;SHELLENV_DECREMENT_SHELL_NESTING_LEVEL DecrementShellNestingLevel;SHELLENV_IS_ROOT_SHELL IsRootShell;SHELLENV_CLOSE_CONSOLE_PROXY CloseConsoleProxy;HANDLE_ENUMERATOR HandleEnumerator;PROTOCOL_INFO_ENUMERATOR ProtocolInfoEnumerator;GET_DEVICE_NAME GetDeviceName;GET_SHELL_MODE GetShellMode;SHELLENV_NAME_TO_PATH NameToPath;SHELLENV_GET_FS_NAME GetFsName;SHELLENV_FILE_META_ARG_NO_WILDCARD FileMetaArgNoWildCard;SHELLENV_DEL_DUP_FILE DelDupFileArg;SHELLENV_GET_FS_DEVICE_PATH GetFsDevicePath;};
struct _EFI_SHELL_PROTOCOL {EFI_SHELL_EXECUTE Execute;EFI_SHELL_GET_ENV GetEnv;EFI_SHELL_SET_ENV SetEnv;EFI_SHELL_GET_ALIAS GetAlias;EFI_SHELL_SET_ALIAS SetAlias;EFI_SHELL_GET_HELP_TEXT GetHelpText;EFI_SHELL_GET_DEVICE_PATH_FROM_MAP GetDevicePathFromMap;EFI_SHELL_GET_MAP_FROM_DEVICE_PATH GetMapFromDevicePath;EFI_SHELL_GET_DEVICE_PATH_FROM_FILE_PATH GetDevicePathFromFilePath;EFI_SHELL_GET_FILE_PATH_FROM_DEVICE_PATH GetFilePathFromDevicePath;EFI_SHELL_SET_MAP SetMap;EFI_SHELL_GET_CUR_DIR GetCurDir;EFI_SHELL_SET_CUR_DIR SetCurDir;EFI_SHELL_OPEN_FILE_LIST OpenFileList;EFI_SHELL_FREE_FILE_LIST FreeFileList;EFI_SHELL_REMOVE_DUP_IN_FILE_LIST RemoveDupInFileList;EFI_SHELL_BATCH_IS_ACTIVE BatchIsActive;EFI_SHELL_IS_ROOT_SHELL IsRootShell;EFI_SHELL_ENABLE_PAGE_BREAK EnablePageBreak;EFI_SHELL_DISABLE_PAGE_BREAK DisablePageBreak;EFI_SHELL_GET_PAGE_BREAK GetPageBreak;EFI_SHELL_GET_DEVICE_NAME GetDeviceName;EFI_SHELL_GET_FILE_INFO GetFileInfo;EFI_SHELL_SET_FILE_INFO SetFileInfo;EFI_SHELL_OPEN_FILE_BY_NAME OpenFileByName;EFI_SHELL_CLOSE_FILE CloseFile;EFI_SHELL_CREATE_FILE CreateFile;EFI_SHELL_READ_FILE ReadFile;EFI_SHELL_WRITE_FILE WriteFile;EFI_SHELL_DELETE_FILE DeleteFile;EFI_SHELL_DELETE_FILE_BY_NAME DeleteFileByName;EFI_SHELL_GET_FILE_POSITION GetFilePosition;EFI_SHELL_SET_FILE_POSITION SetFilePosition;EFI_SHELL_FLUSH_FILE FlushFile;EFI_SHELL_FIND_FILES FindFiles;EFI_SHELL_FIND_FILES_IN_DIR FindFilesInDir;EFI_SHELL_GET_FILE_SIZE GetFileSize;EFI_SHELL_OPEN_ROOT OpenRoot;EFI_SHELL_OPEN_ROOT_BY_HANDLE OpenRootByHandle;EFI_EVENT ExecutionBreak;UINT32 MajorVersion;UINT32 MinorVersion;EFI_SHELL_REGISTER_GUID_NAME RegisterGuidName;EFI_SHELL_GET_GUID_NAME GetGuidName;EFI_SHELL_GET_GUID_FROM_NAME GetGuidFromName;EFI_SHELL_GET_ENV_EX GetEnvEx;};
struct _08DB8EA3216404F09CBCE8BC640796A1 {UINT64 Signature;WinNtGetProcAddress GetProcAddress;WinNtGetTickCount GetTickCount;WinNtLoadLibraryEx LoadLibraryEx;WinNtFreeLibrary FreeLibrary;WinNtSetPriorityClass SetPriorityClass;WinNtSetThreadPriority SetThreadPriority;WinNtSleep Sleep;WinNtSuspendThread SuspendThread;WinNtGetCurrentThread GetCurrentThread;WinNtGetCurrentThreadId GetCurrentThreadId;WinNtGetCurrentProcess GetCurrentProcess;WinNtCreateThread CreateThread;WinNtTerminateThread TerminateThread;WinNtSendMessage SendMessage;WinNtExitThread ExitThread;WinNtResumeThread ResumeThread;WinNtDuplicateHandle DuplicateHandle;WinNtInitializeCriticalSection InitializeCriticalSection;WinNtEnterCriticalSection EnterCriticalSection;WinNtLeaveCriticalSection LeaveCriticalSection;WinNtDeleteCriticalSection DeleteCriticalSection;WinNtTlsAlloc TlsAlloc;WinNtTlsFree TlsFree;WinNtTlsSetValue TlsSetValue;WinNtTlsGetValue TlsGetValue;WinNtCreateSemaphore CreateSemaphore;WinNtWaitForSingleObject WaitForSingleObject;WinNtReleaseSemaphore ReleaseSemaphore;WinNtCreateConsoleScreenBuffer CreateConsoleScreenBuffer;WinNtFillConsoleOutputAttribute FillConsoleOutputAttribute;WinNtFillConsoleOutputCharacter FillConsoleOutputCharacter;WinNtGetConsoleCursorInfo GetConsoleCursorInfo;WinNtGetNumberOfConsoleInputEvents GetNumberOfConsoleInputEvents;WinNtPeekConsoleInput PeekConsoleInput;WinNtScrollConsoleScreenBuffer ScrollConsoleScreenBuffer;WinNtReadConsoleInput ReadConsoleInput;WinNtSetConsoleActiveScreenBuffer SetConsoleActiveScreenBuffer;WinNtSetConsoleCursorInfo SetConsoleCursorInfo;WinNtSetConsoleCursorPosition SetConsoleCursorPosition;WinNtSetConsoleScreenBufferSize SetConsoleScreenBufferSize;WinNtSetConsoleTitleW SetConsoleTitleW;WinNtWriteConsoleInput WriteConsoleInput;WinNtWriteConsoleOutput WriteConsoleOutput;WinNtCreateFile CreateFile;WinNtDeviceIoControl DeviceIoControl;WinNtCreateDirectory CreateDirectory;WinNtRemoveDirectory RemoveDirectory;WinNtGetFileAttributes GetFileAttributes;WinNtSetFileAttributes SetFileAttributes;WinNtCreateFileMapping CreateFileMapping;WinNtCloseHandle CloseHandle;WinNtDeleteFile DeleteFile;WinNtFindFirstFile FindFirstFile;WinNtFindNextFile FindNextFile;WinNtFindClose FindClose;WinNtFlushFileBuffers FlushFileBuffers;WinNtGetEnvironmentVariable GetEnvironmentVariable;WinNtGetLastError GetLastError;WinNtSetErrorMode SetErrorMode;WinNtGetStdHandle GetStdHandle;WinNtMapViewOfFileEx MapViewOfFileEx;WinNtReadFile ReadFile;WinNtSetEndOfFile SetEndOfFile;WinNtSetFilePointer SetFilePointer;WinNtWriteFile WriteFile;WinNtGetFileInformationByHandle GetFileInformationByHandle;WinNtGetDiskFreeSpace GetDiskFreeSpace;WinNtGetDiskFreeSpaceEx GetDiskFreeSpaceEx;WinNtMoveFile MoveFile;WinNtSetFileTime SetFileTime;WinNtSystemTimeToFileTime SystemTimeToFileTime;WinNtLocalFileTimeToFileTime LocalFileTimeToFileTime;WinNtFileTimeToLocalFileTime FileTimeToLocalFileTime;WinNtFileTimeToSystemTime FileTimeToSystemTime;WinNtGetSystemTime GetSystemTime;WinNtSetSystemTime SetSystemTime;WinNtGetLocalTime GetLocalTime;WinNtSetLocalTime SetLocalTime;WinNtGetTimeZoneInformation GetTimeZoneInformation;WinNtSetTimeZoneInformation SetTimeZoneInformation;WinNttimeSetEvent timeSetEvent;WinNttimeKillEvent timeKillEvent;WinNtClearCommError ClearCommError;WinNtEscapeCommFunction EscapeCommFunction;WinNtGetCommModemStatus GetCommModemStatus;WinNtGetCommState GetCommState;WinNtSetCommState SetCommState;WinNtPurgeComm PurgeComm;WinNtSetCommTimeouts SetCommTimeouts;WinNtExitProcess ExitProcess;WinNtSprintf SPrintf;WinNtGetDesktopWindow GetDesktopWindow;WinNtGetForegroundWindow GetForegroundWindow;WinNtCreateWindowEx CreateWindowEx;WinNtShowWindow ShowWindow;WinNtUpdateWindow UpdateWindow;WinNtDestroyWindow DestroyWindow;WinNtInvalidateRect InvalidateRect;WinNtGetWindowDC GetWindowDC;WinNtGetClientRect GetClientRect;WinNtAdjustWindowRect AdjustWindowRect;WinNtSetDIBitsToDevice SetDIBitsToDevice;WinNtBitBlt BitBlt;WinNtGetDC GetDC;WinNtReleaseDC ReleaseDC;WinNtRegisterClassEx RegisterClassEx;WinNtUnregisterClass UnregisterClass;WinNtBeginPaint BeginPaint;WinNtEndPaint EndPaint;WinNtPostQuitMessage PostQuitMessage;WinNtDefWindowProc DefWindowProc;WinNtLoadIcon LoadIcon;WinNtLoadCursor LoadCursor;WinNtGetStockObject GetStockObject;WinNtSetViewportOrgEx SetViewportOrgEx;WinNtSetWindowOrgEx SetWindowOrgEx;WinNtMoveWindow MoveWindow;WinNtGetWindowRect GetWindowRect;WinNtGetMessage GetMessage;WinNtTranslateMessage TranslateMessage;WinNtDispatchMessage DispatchMessage;WinNtGetProcessHeap GetProcessHeap;WinNtHeapAlloc HeapAlloc;WinNtHeapFree HeapFree;WinNtQueryPerformanceCounter QueryPerformanceCounter;WinNtQueryPerformanceFrequency QueryPerformanceFrequency;};
struct _EFI_I2C_BUS_CONFIGURATION_MANAGEMENT_PROTOCOL {EFI_I2C_BUS_CONFIGURATION_MANAGEMENT_PROTOCOL_ENABLE_I2C_BUS_CONFIGURATION EnableI2cBusConfiguration;};
struct _EFI_INCOMPATIBLE_PCI_DEVICE_SUPPORT_PROTOCOL {EFI_INCOMPATIBLE_PCI_DEVICE_SUPPORT_CHECK_DEVICE CheckDevice;};
struct _EFI_BUS_SPECIFIC_DRIVER_OVERRIDE_PROTOCOL {EFI_BUS_SPECIFIC_DRIVER_OVERRIDE_GET_DRIVER GetDriver;};
struct _EFI_GUIDED_SECTION_EXTRACTION_PROTOCOL {EFI_EXTRACT_GUIDED_SECTION ExtractSection;};
struct _EFI_PEI_GUIDED_SECTION_EXTRACTION_PPI {EFI_PEI_EXTRACT_GUIDED_SECTION ExtractSection;};
typedef EFI_SET_VARIABLE VAR_CHECK_SET_VARIABLE_CHECK_HANDLER;
struct _EFI_SEC_PLATFORM_INFORMATION2_PPI {EFI_SEC_PLATFORM_INFORMATION2 PlatformInformation2;};
struct _061D9092A34041E6AFB688EEE464331D {EFI_STATUS MediaState;};
struct _2CA9EC6012C6584BFB94BC02F6C66B70 {NT_FWH_INFORMATION NtFwh;};
struct _4ABC1B5E6ED33879201640F22DCC37CF {TPMI_ALG_HASH hashAlg;};
struct _52F38D82287F88B2A17E25A2ED2468AA {PEI_NT_AUTOSCAN NtAutoScan;};
struct _64EA12DCB4C736810A8DF8EE50AB484E {NT_PEI_LOAD_FILE PeiLoadFileService;};
struct _6BD28D9232744C53F8596E93389AFC65 {EFI_PEI_RESET_SYSTEM ResetSystem;};
struct _7680A9C78C4B44526ADAC236D1AC2C1B {EFI_CPU_IO_PROTOCOL_IO_MEM Read;EFI_CPU_IO_PROTOCOL_IO_MEM Write;};
struct _83364E2BB946AAE377FAB9B129222450 {EFI_PEI_CPU_IO_PPI_IO_MEM Read;EFI_PEI_CPU_IO_PPI_IO_MEM Write;};
struct _A9E28A1432A11848918081ED8160DA80 {EFI_PCI_ROOT_BRIDGE_IO_PROTOCOL_IO_MEM Read;EFI_PCI_ROOT_BRIDGE_IO_PROTOCOL_IO_MEM Write;};
struct _AF27D0DC8C9C83CD0E7DDA450B8A5353 {EFI_ISA_IO_PROTOCOL_IO_MEM Read;EFI_ISA_IO_PROTOCOL_IO_MEM Write;};
struct _B2A071DCF8C2EFE52336CEBC18503C32 {EFI_SMM_CPU_IO2 Read;EFI_SMM_CPU_IO2 Write;};
struct _C679344B91BEC6C13F77CE3FEFAEF2B8 {EFI_PCI_IO_PROTOCOL_IO_MEM Read;EFI_PCI_IO_PROTOCOL_IO_MEM Write;};
struct _CDAD2CCD829691FEAE05A88E0D75617A {TEMPORARY_RAM_MIGRATION TemporaryRamMigration;};
struct _DF3BC5FD17EFDA646BF5E85682013C25 {EFI_DEVICE_IO Read;EFI_DEVICE_IO Write;};
struct _ECF8D0F446F0DA6D5BA2650D6B923C03 {EFI_PEI_REPORT_STATUS_CODE ReportStatusCode;};
struct _EF06F899AB40CEA3705D0602563CA587 {EFI_PCI_IO_PROTOCOL_CONFIG Read;EFI_PCI_IO_PROTOCOL_CONFIG Write;};
union _F1C594884B56499A144068841DCCBD9C {TPMI_ALG_SYM_MODE aes;TPMI_ALG_SYM_MODE SM4;TPMI_ALG_SYM_MODE sym;};
struct _FC60D38E48AB1C9DD1AEF485EB8C0EF1 {EFI_SMM_CPU_IO Read;EFI_SMM_CPU_IO Write;};
struct _EFI_DEFERRED_IMAGE_LOAD_PROTOCOL {EFI_DEFERRED_IMAGE_INFO GetImageInfo;};
struct _EFI_PCI_HOTPLUG_REQUEST_PROTOCOL {EFI_PCI_HOTPLUG_REQUEST_NOTIFY Notify;};
struct _EFI_PEI_BOOT_SCRIPT_EXECUTER_PPI {EFI_PEI_BOOT_SCRIPT_EXECUTE Execute;};
struct _EFI_SEC_PLATFORM_INFORMATION_PPI {EFI_SEC_PLATFORM_INFORMATION PlatformInformation;};
struct _EFI_PEI_SECTION_EXTRACTION_PPI {EFI_PEI_GET_SECTION GetSection;};
struct _EFI_SMM_COMMUNICATION_PROTOCOL {EFI_SMM_COMMUNICATE2 Communicate;};
struct _EDKII_UFS_HOST_CONTROLLER_PPI {EDKII_UFS_HC_GET_MMIO_BAR GetUfsHcMmioBar;};
struct _EFI_PEI_SMM_COMMUNICATION_PPI {EFI_PEI_SMM_COMMUNICATE Communicate;};
struct _EDKII_VARIABLE_LOCK_PROTOCOL {EDKII_VARIABLE_LOCK_PROTOCOL_REQUEST_TO_LOCK RequestToLock;};
struct _EFI_SMM_STATUS_CODE_PROTOCOL {EFI_SMM_REPORT_STATUS_CODE ReportStatusCode;};
struct _EFI_PEI_RECOVERY_MODULE_PPI {EFI_PEI_LOAD_RECOVERY_CAPSULE LoadRecoveryCapsule;};
struct _EFI_SECURITY2_ARCH_PROTOCOL {EFI_SECURITY2_FILE_AUTHENTICATION FileAuthentication;};
struct _EFI_EDID_OVERRIDE_PROTOCOL {EFI_EDID_OVERRIDE_PROTOCOL_GET_EDID GetEdid;};
struct _EFI_PEI_FV_FILE_LOADER_PPI {EFI_PEI_FV_LOAD_FILE FvLoadFile;};
struct _EFI_SECURITY_ARCH_PROTOCOL {EFI_SECURITY_FILE_AUTHENTICATION_STATE FileAuthenticationState;};
typedef EFI_STATUS (*EFI_PEI_TEMPORARY_RAM_DONE)(void);
struct _EFI_OEM_BADGING_PROTOCOL {EFI_BADGING_GET_IMAGE GetImage;};
struct _EFI_STATUS_CODE_PROTOCOL {EFI_REPORT_STATUS_CODE ReportStatusCode;};
struct s_pxe_cpb_receive_filters {PXE_MAC_ADDR MCastList[8];};
struct s_pxe_cpb_station_address {PXE_MAC_ADDR StationAddr;};
struct s_pxe_dpb_station_address {PXE_MAC_ADDR StationAddr;PXE_MAC_ADDR BroadcastAddr;PXE_MAC_ADDR PermanentAddr;};
struct _EFI_LOAD_FILE2_PROTOCOL {EFI_LOAD_FILE2 LoadFile;};
struct _PEI_SEC_PERFORMANCE_PPI {GET_SEC_PERFORMANCE GetPerformance;};
struct s_pxe_db_mcast_ip_to_mac {PXE_MAC_ADDR MAC;};
struct s_pxe_db_receive_filters {PXE_MAC_ADDR MCastList[8];};
struct _EFI_BOOT_LOGO_PROTOCOL {EFI_SET_BOOT_LOGO SetBootLogo;};
struct _EFI_LOAD_FILE_PROTOCOL {EFI_LOAD_FILE LoadFile;};
struct _EFI_PEI_DECOMPRESS_PPI {EFI_PEI_DECOMPRESS_DECOMPRESS Decompress;};
struct _EFI_PEI_S3_RESUME2_PPI {EFI_PEI_S3_RESUME_PPI_RESTORE_CONFIG2 S3RestoreConfig2;};
struct _PEI_USB_CONTROLLER_PPI {PEI_GET_USB_CONTROLLER GetUsbController;};
struct s_pxe_cpb_nvdata_sparse {struct s_pxe_cpb_nvdata_sparse___19EFFCE7218537726B6C299C17662D42 Item[128];};
struct _EFI_PEI_LOAD_FILE_PPI {EFI_PEI_LOAD_FILE LoadFile;};
struct _EFI_PEI_SECURITY2_PPI {EFI_PEI_SECURITY_AUTHENTICATION_STATE AuthenticationState;};
typedef EFI_STATUS (*EFI_PEI_GRAPHICS_INIT)(void *GraphicsPolicyPtr);
typedef EFI_STATUS (*EFI_SMMCORE_FREE_POOL)(void *Buffer);
struct _EFI_PEI_SECURITY_PPI {FRAMEWORK_EFI_PEI_SECURITY_AUTHENTICATION_STATE AuthenticationState;};
typedef EFI_STATUS (*LOCK_ESRT_REPOSITORY)(void);
typedef EFI_STATUS (*TPM2_REQUEST_USE_TPM)(void);
struct _EFI_PEI_FIND_FV_PPI {EFI_PEI_FIND_FV_FINDFV FindFv;};
struct _EFI_PEI_RESET2_PPI {EFI_PEI_RESET2_SYSTEM ResetSystem;};
struct _EFI_DXE_IPL_PPI {EFI_DXE_IPL_ENTRY Entry;};
typedef void (*EFI_RESTORE_TPL)(EFI_TPL OldTpl);
typedef EFI_STATUS (*EFI_FREE_POOL)(void *Buffer);
typedef EFI_TPL (*EFI_RAISE_TPL)(EFI_TPL NewTpl);
typedef EFI_STATUS (*SYNC_ESRT_FMP)(void);
typedef EFI_STATUS (*EFI_DISPATCH)(void);
typedef EFI_STATUS (*EDKII_VAR_CHECK_REGISTER_SET_VARIABLE_CHECK_HANDLER)(VAR_CHECK_SET_VARIABLE_CHECK_HANDLER Handler);
struct _EFI_PLATFORM_TO_DRIVER_CONFIGURATION_PROTOCOL {EFI_PLATFORM_TO_DRIVER_CONFIGURATION_QUERY Query;EFI_PLATFORM_TO_DRIVER_CONFIGURATION_RESPONSE Response;};
struct _EFI_SMM_STANDBY_BUTTON_DISPATCH2_PROTOCOL {EFI_SMM_STANDBY_BUTTON_REGISTER2 Register;EFI_SMM_STANDBY_BUTTON_UNREGISTER2 UnRegister;};
struct _EFI_SMM_STANDBY_BUTTON_DISPATCH_PROTOCOL {EFI_SMM_STANDBY_BUTTON_REGISTER Register;EFI_SMM_STANDBY_BUTTON_UNREGISTER UnRegister;};
struct _EFI_SMM_POWER_BUTTON_DISPATCH2_PROTOCOL {EFI_SMM_POWER_BUTTON_REGISTER2 Register;EFI_SMM_POWER_BUTTON_UNREGISTER2 UnRegister;};
struct _EFI_SMM_POWER_BUTTON_DISPATCH_PROTOCOL {EFI_SMM_POWER_BUTTON_REGISTER Register;EFI_SMM_POWER_BUTTON_UNREGISTER UnRegister;};
struct _EFI_STORAGE_SECURITY_COMMAND_PROTOCOL {EFI_STORAGE_SECURITY_RECEIVE_DATA ReceiveData;EFI_STORAGE_SECURITY_SEND_DATA SendData;};
struct _EFI_CONFIG_KEYWORD_HANDLER_PROTOCOL {EFI_CONFIG_KEYWORD_HANDLER_SET_DATA SetData;EFI_CONFIG_KEYWORD_HANDLER_GET_DATA GetData;};
struct _EFI_SMM_IO_TRAP_DISPATCH2_PROTOCOL {EFI_SMM_IO_TRAP_DISPATCH2_REGISTER Register;EFI_SMM_IO_TRAP_DISPATCH2_UNREGISTER UnRegister;};
struct _EFI_ISCSI_INITIATOR_NAME_PROTOCOL {EFI_ISCSI_INITIATOR_NAME_GET Get;EFI_ISCSI_INITIATOR_NAME_SET Set;};
struct _E7FD308AFB9199992B0FF4C170562F5A {UINT8 KeyboardLight;EFI_PS2_INIT_HARDWARE Ps2InitHardware;};
struct _EFI_AUTHENTICATION_INFO_PROTOCOL {EFI_AUTHENTICATION_INFO_PROTOCOL_GET Get;EFI_AUTHENTICATION_INFO_PROTOCOL_SET Set;};
struct _EFI_DRIVER_DIAGNOSTICS2_PROTOCOL {EFI_DRIVER_DIAGNOSTICS2_RUN_DIAGNOSTICS RunDiagnostics;CHAR8 *SupportedLanguages;};
struct _EFI_DRIVER_DIAGNOSTICS_PROTOCOL {EFI_DRIVER_DIAGNOSTICS_RUN_DIAGNOSTICS RunDiagnostics;CHAR8 *SupportedLanguages;};
struct _EFI_PEI_READ_ONLY_VARIABLE2_PPI {EFI_PEI_GET_VARIABLE2 GetVariable;EFI_PEI_GET_NEXT_VARIABLE_NAME2 NextVariableName;};
struct _EFI_REGULAR_EXPRESSION_PROTOCOL {EFI_REGULAR_EXPRESSION_MATCH MatchString;EFI_REGULAR_EXPRESSION_GET_INFO GetInfo;};
struct _EFI_SIMPLE_FILE_SYSTEM_PROTOCOL {UINT64 Revision;EFI_SIMPLE_FILE_SYSTEM_PROTOCOL_OPEN_VOLUME OpenVolume;};
struct _EFI_EAP_CONFIGURATION_PROTOCOL {EFI_EAP_CONFIGURATION_SET_DATA SetData;EFI_EAP_CONFIGURATION_GET_DATA GetData;};
struct _EFI_PEI_READ_ONLY_VARIABLE_PPI {EFI_PEI_GET_VARIABLE PeiGetVariable;EFI_PEI_GET_NEXT_VARIABLE_NAME PeiGetNextVariableName;};
struct _EFI_SMM_CONFIGURATION_PROTOCOL {EFI_SMM_RESERVED_SMRAM_REGION *SmramReservedRegions;EFI_SMM_REGISTER_SMM_ENTRY RegisterSmmEntry;};
struct _EFI_SMM_ICHN_DISPATCH_PROTOCOL {EFI_SMM_ICHN_REGISTER Register;EFI_SMM_ICHN_UNREGISTER UnRegister;};
struct _EFI_SMM_USB_DISPATCH2_PROTOCOL {EFI_SMM_USB_REGISTER2 Register;EFI_SMM_USB_UNREGISTER2 UnRegister;};
typedef EFI_STATUS (*EFI_PEI_RSC_HANDLER_UNREGISTER)(EFI_PEI_RSC_HANDLER_CALLBACK Callback);
typedef EFI_STATUS (*EFI_SMM_RSC_HANDLER_UNREGISTER)(EFI_SMM_RSC_HANDLER_CALLBACK Callback);
struct _EFI_BOOT_SCRIPT_SAVE_PROTOCOL {EFI_BOOT_SCRIPT_WRITE Write;EFI_BOOT_SCRIPT_CLOSE_TABLE CloseTable;};
struct _EFI_SMM_SX_DISPATCH2_PROTOCOL {EFI_SMM_SX_REGISTER2 Register;EFI_SMM_SX_UNREGISTER2 UnRegister;};
struct _EFI_SMM_USB_DISPATCH_PROTOCOL {EFI_SMM_USB_REGISTER Register;EFI_SMM_USB_UNREGISTER UnRegister;};
struct _EFI_SERVICE_BINDING_PROTOCOL {EFI_SERVICE_BINDING_CREATE_CHILD CreateChild;EFI_SERVICE_BINDING_DESTROY_CHILD DestroyChild;};
struct _EFI_SMM_SX_DISPATCH_PROTOCOL {EFI_SMM_SX_REGISTER Register;EFI_SMM_SX_UNREGISTER UnRegister;};
typedef EFI_STATUS (*EFI_PEI_RSC_HANDLER_REGISTER)(EFI_PEI_RSC_HANDLER_CALLBACK Callback);
typedef EFI_STATUS (*EFI_SMM_RSC_HANDLER_REGISTER)(EFI_SMM_RSC_HANDLER_CALLBACK Callback);
struct _EFI_HTTP_UTILITIES_PROTOCOL {EFI_HTTP_UTILS_BUILD Build;EFI_HTTP_UTILS_PARSE Parse;};
struct _EFI_METRONOME_ARCH_PROTOCOL {EFI_METRONOME_WAIT_FOR_TICK WaitForTick;UINT32 TickPeriod;};
struct _EFI_DRIVER_HEALTH_PROTOCOL {EFI_DRIVER_HEALTH_GET_HEALTH_STATUS GetHealthStatus;EFI_DRIVER_HEALTH_REPAIR Repair;};
struct _EFI_FORM_BROWSER2_PROTOCOL {EFI_SEND_FORM2 SendForm;EFI_BROWSER_CALLBACK2 BrowserCallback;};
struct _EFI_I2C_ENUMERATE_PROTOCOL {EFI_I2C_ENUMERATE_PROTOCOL_ENUMERATE Enumerate;EFI_I2C_ENUMERATE_PROTOCOL_GET_BUS_FREQUENCY GetBusFrequency;};
typedef EFI_STATUS (*EFI_RSC_HANDLER_UNREGISTER)(EFI_RSC_HANDLER_CALLBACK Callback);
struct _EFI_ACPI_S3_SAVE_PROTOCOL {EFI_ACPI_GET_LEGACY_MEMORY_SIZE GetLegacyMemorySize;EFI_ACPI_S3_SAVE S3Save;};
struct _EFI_FORM_BROWSER_PROTOCOL {EFI_SEND_FORM SendForm;EFI_CREATE_POP_UP CreatePopUp;};
struct _EFI_GET_PCD_INFO_PROTOCOL {EFI_GET_PCD_INFO_PROTOCOL_GET_INFO GetInfo;EFI_GET_PCD_INFO_PROTOCOL_GET_SKU GetSku;};
struct _EFI_PKCS7_VERIFY_PROTOCOL {EFI_PKCS7_VERIFY_BUFFER VerifyBuffer;EFI_PKCS7_VERIFY_SIGNATURE VerifySignature;};
struct _EFI_ACPI_TABLE_PROTOCOL {EFI_ACPI_TABLE_INSTALL_ACPI_TABLE InstallAcpiTable;EFI_ACPI_TABLE_UNINSTALL_ACPI_TABLE UninstallAcpiTable;};
struct _EFI_DECOMPRESS_PROTOCOL {EFI_DECOMPRESS_GET_INFO GetInfo;EFI_DECOMPRESS_DECOMPRESS Decompress;};
struct _EFI_PE32_IMAGE_PROTOCOL {LOAD_PE_IMAGE LoadPeImage;UNLOAD_PE_IMAGE UnLoadPeImage;};
struct _EFI_PEI_RSC_HANDLER_PPI {EFI_PEI_RSC_HANDLER_REGISTER Register;EFI_PEI_RSC_HANDLER_UNREGISTER Unregister;};
struct _EFI_SMM_BASE2_PROTOCOL {EFI_SMM_INSIDE_OUT2 InSmm;EFI_SMM_GET_SMST_LOCATION2 GetSmstLocation;};
struct _PEI_ATA_CONTROLLER_PPI {PEI_ENABLE_ATA EnableAtaChannel;GET_IDE_REGS_BASE_ADDR GetIdeRegsBaseAddr;};
struct _EFI_I2C_HOST_PROTOCOL {EFI_I2C_HOST_PROTOCOL_QUEUE_REQUEST QueueRequest;const EFI_I2C_CONTROLLER_CAPABILITIES *I2cControllerCapabilities;};
struct _EFI_SMM_ENTRY_CONTEXT {EFI_SMM_STARTUP_THIS_AP SmmStartupThisAp;UINTN CurrentlyExecutingCpu;UINTN NumberOfCpus;UINTN *CpuSaveStateSize;void **CpuSaveState;};
struct _EFI_GET_PCD_INFO_PPI {EFI_GET_PCD_INFO_PPI_GET_INFO GetInfo;EFI_GET_PCD_INFO_PPI_GET_SKU GetSku;};
struct _EFI_PEI_GRAPHICS_PPI {EFI_PEI_GRAPHICS_INIT GraphicsPpiInit;EFI_PEI_GRAPHICS_GET_MODE GraphicsPpiGetMode;};
struct _EFI_SMM_CPU_PROTOCOL {EFI_SMM_READ_SAVE_STATE ReadSaveState;EFI_SMM_WRITE_SAVE_STATE WriteSaveState;};
struct _EFI_PEI_PCI_CFG_PPI {EFI_PEI_PCI_CFG_PPI_IO Read;EFI_PEI_PCI_CFG_PPI_IO Write;EFI_PEI_PCI_CFG_PPI_RW Modify;};
struct _PEI_SMM_CONTROL_PPI {PEI_SMM_ACTIVATE Trigger;PEI_SMM_DEACTIVATE Clear;};
struct _EFI_HASH_PROTOCOL {EFI_HASH_GET_HASH_SIZE GetHashSize;EFI_HASH_HASH Hash;};
struct _EFI_PEI_STALL_PPI {UINTN Resolution;EFI_PEI_STALL Stall;};
struct _EFI_REST_PROTOCOL {EFI_REST_SEND_RECEIVE SendReceive;EFI_REST_GET_TIME GetServiceTime;};
struct _EFI_DPC_PROTOCOL {EFI_DPC_QUEUE_DPC QueueDpc;EFI_DPC_DISPATCH_DPC DispatchDpc;};
struct _EFI_RNG_PROTOCOL {EFI_RNG_GET_INFO GetInfo;EFI_RNG_GET_RNG GetRNG;};
typedef EFI_STATUS (*EFI_BLUETOOTH_CONFIG_REGISTER_CONNECT_COMPLETE_CALLBACK)(EFI_BLUETOOTH_CONFIG_PROTOCOL *This, EFI_BLUETOOTH_CONFIG_REGISTER_CONNECT_COMPLETE_CALLBACK_FUNCTION Callback, void *Context);
typedef EFI_STATUS (*EFI_BLUETOOTH_CONFIG_REGISTER_GET_LINK_KEY_CALLBACK)(EFI_BLUETOOTH_CONFIG_PROTOCOL *This, EFI_BLUETOOTH_CONFIG_REGISTER_GET_LINK_KEY_CALLBACK_FUNCTION Callback, void *Context);
typedef EFI_STATUS (*EFI_BLUETOOTH_CONFIG_REGISTER_SET_LINK_KEY_CALLBACK)(EFI_BLUETOOTH_CONFIG_PROTOCOL *This, EFI_BLUETOOTH_CONFIG_REGISTER_SET_LINK_KEY_CALLBACK_FUNCTION Callback, void *Context);
typedef EFI_STATUS (*EFI_BLUETOOTH_CONFIG_REGISTER_PIN_CALLBACK)(EFI_BLUETOOTH_CONFIG_PROTOCOL *This, EFI_BLUETOOTH_CONFIG_REGISTER_PIN_CALLBACK_FUNCTION Callback, void *Context);
struct _EFI_SMM_PERIODIC_TIMER_DISPATCH2_PROTOCOL {EFI_SMM_PERIODIC_TIMER_REGISTER2 Register;EFI_SMM_PERIODIC_TIMER_UNREGISTER2 UnRegister;EFI_SMM_PERIODIC_TIMER_INTERVAL2 GetNextShorterInterval;};
struct _EFI_SMM_PERIODIC_TIMER_DISPATCH_PROTOCOL {EFI_SMM_PERIODIC_TIMER_REGISTER Register;EFI_SMM_PERIODIC_TIMER_UNREGISTER UnRegister;EFI_SMM_PERIODIC_TIMER_INTERVAL GetNextShorterInterval;};
struct _EFI_PLATFORM_DRIVER_OVERRIDE_PROTOCOL {EFI_PLATFORM_DRIVER_OVERRIDE_GET_DRIVER GetDriver;EFI_PLATFORM_DRIVER_OVERRIDE_GET_DRIVER_PATH GetDriverPath;EFI_PLATFORM_DRIVER_OVERRIDE_DRIVER_LOADED DriverLoaded;};
struct _EFI_PEI_DEVICE_RECOVERY_MODULE_PPI {EFI_PEI_DEVICE_GET_NUMBER_RECOVERY_CAPSULE GetNumberRecoveryCapsules;EFI_PEI_DEVICE_GET_RECOVERY_CAPSULE_INFO GetRecoveryCapsuleInfo;EFI_PEI_DEVICE_LOAD_RECOVERY_CAPSULE LoadRecoveryCapsule;};
struct _3DFDE0F26E9B69B6378595698C0EC11B {FORM_DISPLAY FormDisplay;EXIT_DISPLAY ExitDisplay;CONFIRM_DATA_CHANGE ConfirmDataChange;};
struct _CB71B91A277CE6BD36AD5111FF5E3244 {EFI_GUID ProviderGuid;TPM2_SUBMIT_COMMAND Tpm2SubmitCommand;TPM2_REQUEST_USE_TPM Tpm2RequestUseTpm;};
struct _EFI_ADAPTER_INFORMATION_PROTOCOL {EFI_ADAPTER_INFO_GET_INFO GetInformation;EFI_ADAPTER_INFO_SET_INFO SetInformation;EFI_ADAPTER_INFO_GET_SUPPORTED_TYPES GetSupportedTypes;};
struct _EFI_BOOT_MANAGER_POLICY_PROTOCOL {UINT64 Revision;EFI_BOOT_MANAGER_POLICY_CONNECT_DEVICE_PATH ConnectDevicePath;EFI_BOOT_MANAGER_POLICY_CONNECT_DEVICE_CLASS ConnectDeviceClass;};
typedef EFI_STATUS (*EFI_SMM_REGISTER_PROTOCOL_NOTIFY)(const EFI_GUID *Protocol, EFI_SMM_NOTIFY_FN Function, void **Registration);
struct _EFI_SECTION_EXTRACTION_PROTOCOL {EFI_OPEN_SECTION_STREAM OpenSectionStream;EFI_GET_SECTION GetSection;EFI_CLOSE_SECTION_STREAM CloseSectionStream;};
struct _EFI_HII_CONFIG_ACCESS_PROTOCOL {EFI_HII_ACCESS_EXTRACT_CONFIG ExtractConfig;EFI_HII_ACCESS_ROUTE_CONFIG RouteConfig;EFI_HII_ACCESS_FORM_CALLBACK Callback;};
struct _EFI_PCI_HOT_PLUG_INIT_PROTOCOL {EFI_GET_ROOT_HPC_LIST GetRootHpcList;EFI_INITIALIZE_ROOT_HPC InitializeRootHpc;EFI_GET_HOT_PLUG_PADDING GetResourcePadding;};
struct _EFI_SIMPLE_TEXT_INPUT_PROTOCOL {EFI_INPUT_RESET Reset;EFI_INPUT_READ_KEY ReadKeyStroke;EFI_EVENT WaitForKey;};
struct _EFI_SMM_GPI_DISPATCH2_PROTOCOL {EFI_SMM_GPI_REGISTER2 Register;EFI_SMM_GPI_UNREGISTER2 UnRegister;UINTN NumSupportedGpis;};
struct _EDKII_MEMORY_PROFILE_PROTOCOL {EDKII_MEMORY_PROFILE_GET_DATA GetData;EDKII_MEMORY_PROFILE_REGISTER_IMAGE RegisterImage;EDKII_MEMORY_PROFILE_UNREGISTER_IMAGE UnregisterImage;};
struct _EFI_PEI_RECOVERY_BLOCK_IO_PPI {EFI_PEI_GET_NUMBER_BLOCK_DEVICES GetNumberOfBlockDevices;EFI_PEI_GET_DEVICE_MEDIA_INFORMATION GetBlockDeviceMediaInfo;EFI_PEI_READ_BLOCKS ReadBlocks;};
struct _EFI_SMM_GPI_DISPATCH_PROTOCOL {EFI_SMM_GPI_REGISTER Register;EFI_SMM_GPI_UNREGISTER UnRegister;UINTN NumSupportedGpis;};
struct _EFI_SMM_SW_DISPATCH2_PROTOCOL {EFI_SMM_SW_REGISTER2 Register;EFI_SMM_SW_UNREGISTER2 UnRegister;UINTN MaximumSwiValue;};
typedef EFI_STATUS (*EFI_EBC_REGISTER_ICACHE_FLUSH)(EFI_EBC_PROTOCOL *This, EBC_ICACHE_FLUSH Flush);
struct _EDKII_SMM_VAR_CHECK_PROTOCOL {EDKII_VAR_CHECK_REGISTER_SET_VARIABLE_CHECK_HANDLER SmmRegisterSetVariableCheckHandler;EDKII_VAR_CHECK_VARIABLE_PROPERTY_SET SmmVariablePropertySet;EDKII_VAR_CHECK_VARIABLE_PROPERTY_GET SmmVariablePropertyGet;};
struct _EFI_COMPONENT_NAME2_PROTOCOL {EFI_COMPONENT_NAME2_GET_DRIVER_NAME GetDriverName;EFI_COMPONENT_NAME2_GET_CONTROLLER_NAME GetControllerName;CHAR8 *SupportedLanguages;};
struct _EFI_SMM_SW_DISPATCH_PROTOCOL {EFI_SMM_SW_REGISTER Register;EFI_SMM_SW_UNREGISTER UnRegister;UINTN MaximumSwiValue;};
struct _EFI_COMPONENT_NAME_PROTOCOL {EFI_COMPONENT_NAME_GET_DRIVER_NAME GetDriverName;EFI_COMPONENT_NAME_GET_CONTROLLER_NAME GetControllerName;CHAR8 *SupportedLanguages;};
struct _EFI_FORM_CALLBACK_PROTOCOL {EFI_NV_READ NvRead;EFI_NV_WRITE NvWrite;EFI_FORM_CALLBACK Callback;};
struct _EFI_VGA_MINI_PORT_PROTOCOL {EFI_VGA_MINI_PORT_SET_MODE SetMode;UINT64 VgaMemoryOffset;UINT64 CrtcAddressRegisterOffset;UINT64 CrtcDataRegisterOffset;UINT8 VgaMemoryBar;UINT8 CrtcAddressRegisterBar;UINT8 CrtcDataRegisterBar;UINT8 MaxMode;};
struct _EFI_ACPI_SUPPORT_PROTOCOL {EFI_ACPI_GET_ACPI_TABLE GetAcpiTable;EFI_ACPI_SET_ACPI_TABLE SetAcpiTable;EFI_ACPI_PUBLISH_TABLES PublishTables;};
struct _EFI_SMM_CONTROL2_PROTOCOL {EFI_SMM_ACTIVATE2 Trigger;EFI_SMM_DEACTIVATE2 Clear;EFI_SMM_PERIOD MinimumTriggerPeriod;};
struct _EDKII_VAR_CHECK_PROTOCOL {EDKII_VAR_CHECK_REGISTER_SET_VARIABLE_CHECK_HANDLER RegisterSetVariableCheckHandler;EDKII_VAR_CHECK_VARIABLE_PROPERTY_SET VariablePropertySet;EDKII_VAR_CHECK_VARIABLE_PROPERTY_GET VariablePropertyGet;};
struct _EFI_EBC_VM_TEST_PROTOCOL {EBC_VM_TEST_EXECUTE Execute;EBC_VM_TEST_ASM Assemble;EBC_VM_TEST_DASM Disassemble;};
struct _EFI_VLAN_CONFIG_PROTOCOL {EFI_VLAN_CONFIG_SET Set;EFI_VLAN_CONFIG_FIND Find;EFI_VLAN_CONFIG_REMOVE Remove;};
typedef EFI_STATUS (*EFI_ACPI_REGISTER_NOTIFY)(BOOLEAN Register, EFI_ACPI_NOTIFICATION_FN Notification);
typedef EFI_STATUS (*EFI_RSC_HANDLER_REGISTER)(EFI_RSC_HANDLER_CALLBACK Callback, EFI_TPL Tpl);
struct _EFI_DEBUG_MASK_PROTOCOL {INT64 Revision;EFI_GET_DEBUG_MASK GetDebugMask;EFI_SET_DEBUG_MASK SetDebugMask;};
struct _EFI_IP4_CONFIG_PROTOCOL {EFI_IP4_CONFIG_START Start;EFI_IP4_CONFIG_STOP Stop;EFI_IP4_CONFIG_GET_DATA GetData;};
struct _PERFORMANCE_EX_PROTOCOL {PERFORMANCE_START_GAUGE_EX StartGaugeEx;PERFORMANCE_END_GAUGE_EX EndGaugeEx;PERFORMANCE_GET_GAUGE_EX GetGaugeEx;};
struct _EFI_UGA_DRAW_PROTOCOL {EFI_UGA_DRAW_PROTOCOL_GET_MODE GetMode;EFI_UGA_DRAW_PROTOCOL_SET_MODE SetMode;EFI_UGA_DRAW_PROTOCOL_BLT Blt;};
struct _GET_PCD_INFO_PROTOCOL {GET_PCD_INFO_PROTOCOL_GET_INFO GetInfo;GET_PCD_INFO_PROTOCOL_GET_INFO_EX GetInfoEx;GET_PCD_INFO_PROTOCOL_GET_SKU GetSku;};
struct _EFI_DISK_IO_PROTOCOL {UINT64 Revision;EFI_DISK_READ ReadDisk;EFI_DISK_WRITE WriteDisk;};
struct _EFI_PEI_PCI_CFG2_PPI {EFI_PEI_PCI_CFG2_PPI_IO Read;EFI_PEI_PCI_CFG2_PPI_IO Write;EFI_PEI_PCI_CFG2_PPI_RW Modify;UINT16 Segment;};
struct _EFI_IPSEC2_PROTOCOL {EFI_IPSEC_PROCESSEXT ProcessExt;EFI_EVENT DisabledEvent;BOOLEAN DisabledFlag;};
struct _EFI_ISA_HC_PROTOCOL {UINT32 Version;EFI_ISA_HC_OPEN_IO OpenIoAperture;EFI_ISA_HC_CLOSE_IO CloseIoAperture;};
struct _EFI_UGA_IO_PROTOCOL {EFI_UGA_IO_PROTOCOL_CREATE_DEVICE CreateDevice;EFI_UGA_IO_PROTOCOL_DELETE_DEVICE DeleteDevice;PUGA_FW_SERVICE_DISPATCH DispatchService;};
struct _EFI_IPSEC_PROTOCOL {EFI_IPSEC_PROCESS Process;EFI_EVENT DisabledEvent;BOOLEAN DisabledFlag;};
struct _GET_PCD_INFO_PPI {GET_PCD_INFO_PPI_GET_INFO GetInfo;GET_PCD_INFO_PPI_GET_INFO_EX GetInfoEx;GET_PCD_INFO_PPI_GET_SKU GetSku;};
struct _IP_IO_OPEN_DATA {IP_IO_IP_CONFIG_DATA IpConfigData;void *RcvdContext;void *SndContext;PKT_RCVD_NOTIFY PktRcvdNotify;PKT_SENT_NOTIFY PktSentNotify;};
struct _EFI_ISA_HC_PPI {UINT32 Version;UINT32 Address;EFI_PEI_ISA_HC_OPEN_IO OpenIoAperture;EFI_PEI_ISA_HC_CLOSE_IO CloseIoAperture;};
typedef EFI_STATUS (*EFI_EAP_REGISTER_AUTHENTICATION_METHOD)(EFI_EAP_PROTOCOL *This, UINT8 EapAuthType, EFI_EAP_BUILD_RESPONSE_PACKET Handler);
struct _EFI_FORM_BROWSER_EXTENSION_PROTOCOL {SET_SCOPE SetScope;REGISTER_HOT_KEY RegisterHotKey;REGISTER_EXIT_HANDLER RegiserExitHandler;SAVE_REMINDER SaveReminder;};
struct _EFI_DRIVER_CONFIGURATION2_PROTOCOL {EFI_DRIVER_CONFIGURATION2_SET_OPTIONS SetOptions;EFI_DRIVER_CONFIGURATION2_OPTIONS_VALID OptionsValid;EFI_DRIVER_CONFIGURATION2_FORCE_DEFAULTS ForceDefaults;CHAR8 *SupportedLanguages;};
struct _EXTENDED_SAL_BOOT_SERVICE_PROTOCOL {EXTENDED_SAL_ADD_SST_INFO AddSalSystemTableInfo;EXTENDED_SAL_ADD_SST_ENTRY AddSalSystemTableEntry;EXTENDED_SAL_REGISTER_INTERNAL_PROC RegisterExtendedSalProc;EXTENDED_SAL_PROC ExtendedSalProc;};
struct _EFI_DRIVER_CONFIGURATION_PROTOCOL {EFI_DRIVER_CONFIGURATION_SET_OPTIONS SetOptions;EFI_DRIVER_CONFIGURATION_OPTIONS_VALID OptionsValid;EFI_DRIVER_CONFIGURATION_FORCE_DEFAULTS ForceDefaults;CHAR8 *SupportedLanguages;};
struct _04211BAC36A0C3642E48C93F963D55B3 {UINT32 DiscoverTryCount;UINT32 *DiscoverTimeout;UINT32 RequestTryCount;UINT32 *RequestTimeout;EFI_IPv4_ADDRESS ClientAddress;EFI_DHCP4_CALLBACK Dhcp4Callback;void *CallbackContext;UINT32 OptionCount;EFI_DHCP4_PACKET_OPTION **OptionList;};
struct _EFI_EBC_SIMPLE_DEBUGGER_PROTOCOL {EBC_DEBUGGER_DEBUG Debugger;EBC_DEBUGGER_SIGNAL_EXCEPTION SignalException;EBC_DEBUGGER_DASM Dasm;EBC_DEBUGGER_CONFIGURE Configure;};
struct _EFI_GENERIC_MEMORY_TEST_PROTOCOL {EFI_MEMORY_TEST_INIT MemoryTestInit;EFI_PERFORM_MEMORY_TEST PerformMemoryTest;EFI_MEMORY_TEST_FINISHED Finished;EFI_MEMORY_TEST_COMPATIBLE_RANGE CompatibleRangeTest;};
struct _EFI_PEI_RECOVERY_BLOCK_IO2_PPI {UINT64 Revision;EFI_PEI_GET_NUMBER_BLOCK_DEVICES2 GetNumberOfBlockDevices;EFI_PEI_GET_DEVICE_MEDIA_INFORMATION2 GetBlockDeviceMediaInfo;EFI_PEI_READ_BLOCKS2 ReadBlocks;};
typedef EFI_STATUS (*EFI_SAL_REGISTER_INIT_HANDLER)(EFI_SAL_MCA_INIT_PMI_PROTOCOL *This, EFI_SAL_INIT_HANDLER InitHandler, void *ModuleGlobal, BOOLEAN MakeFirst, BOOLEAN MakeLast);
struct _EFI_GRAPHICS_OUTPUT_PROTOCOL {EFI_GRAPHICS_OUTPUT_PROTOCOL_QUERY_MODE QueryMode;EFI_GRAPHICS_OUTPUT_PROTOCOL_SET_MODE SetMode;EFI_GRAPHICS_OUTPUT_PROTOCOL_BLT Blt;EFI_GRAPHICS_OUTPUT_PROTOCOL_MODE *Mode;};
typedef EFI_STATUS (*EFI_SAL_REGISTER_MCA_HANDLER)(EFI_SAL_MCA_INIT_PMI_PROTOCOL *This, EFI_SAL_MCA_HANDLER McaHandler, void *ModuleGlobal, BOOLEAN MakeFirst, BOOLEAN MakeLast);
struct _EFI_LEGACY_REGION_PROTOCOL {EFI_LEGACY_REGION_DECODE Decode;EFI_LEGACY_REGION_LOCK Lock;EFI_LEGACY_REGION_BOOT_LOCK BootLock;EFI_LEGACY_REGION_UNLOCK UnLock;};
struct _EFI_S3_SAVE_STATE_PROTOCOL {EFI_S3_SAVE_STATE_WRITE Write;EFI_S3_SAVE_STATE_INSERT Insert;EFI_S3_SAVE_STATE_LABEL Label;EFI_S3_SAVE_STATE_COMPARE Compare;};
struct _EFI_PCI_PLATFORM_PROTOCOL {EFI_PCI_PLATFORM_PHASE_NOTIFY PlatformNotify;EFI_PCI_PLATFORM_PREPROCESS_CONTROLLER PlatformPrepController;EFI_PCI_PLATFORM_GET_PLATFORM_POLICY GetPlatformPolicy;EFI_PCI_PLATFORM_GET_PCI_ROM GetPciRom;};
struct _EFI_SMM_VARIABLE_PROTOCOL {EFI_GET_VARIABLE SmmGetVariable;EFI_GET_NEXT_VARIABLE_NAME SmmGetNextVariableName;EFI_SET_VARIABLE SmmSetVariable;EFI_QUERY_VARIABLE_INFO SmmQueryVariableInfo;};
struct _EFI_IP4_CONFIG2_PROTOCOL {EFI_IP4_CONFIG2_SET_DATA SetData;EFI_IP4_CONFIG2_GET_DATA GetData;EFI_IP4_CONFIG2_REGISTER_NOTIFY RegisterDataNotify;EFI_IP4_CONFIG2_UNREGISTER_NOTIFY UnregisterDataNotify;};
struct _EFI_SMM_CONTROL_PROTOCOL {EFI_SMM_ACTIVATE Trigger;EFI_SMM_DEACTIVATE Clear;EFI_SMM_GET_REGISTER_INFO GetRegisterInfo;UINTN MinimumTriggerPeriod;};
struct _EFI_I2C_MASTER_PROTOCOL {EFI_I2C_MASTER_PROTOCOL_SET_BUS_FREQUENCY SetBusFrequency;EFI_I2C_MASTER_PROTOCOL_RESET Reset;EFI_I2C_MASTER_PROTOCOL_START_REQUEST StartRequest;const EFI_I2C_CONTROLLER_CAPABILITIES *I2cControllerCapabilities;};
struct _EFI_IP6_CONFIG_PROTOCOL {EFI_IP6_CONFIG_SET_DATA SetData;EFI_IP6_CONFIG_GET_DATA GetData;EFI_IP6_CONFIG_REGISTER_NOTIFY RegisterDataNotify;EFI_IP6_CONFIG_UNREGISTER_NOTIFY UnregisterDataNotify;};
struct _EFI_DEBUGPORT_PROTOCOL {EFI_DEBUGPORT_RESET Reset;EFI_DEBUGPORT_WRITE Write;EFI_DEBUGPORT_READ Read;EFI_DEBUGPORT_POLL Poll;};
struct _EFI_DATA_HUB_PROTOCOL {EFI_DATA_HUB_LOG_DATA LogData;EFI_DATA_HUB_GET_NEXT_RECORD GetNextRecord;EFI_DATA_HUB_REGISTER_FILTER_DRIVER RegisterFilterDriver;EFI_DATA_HUB_UNREGISTER_FILTER_DRIVER UnregisterFilterDriver;};
struct _EFI_HII_FONT_PROTOCOL {EFI_HII_STRING_TO_IMAGE StringToImage;EFI_HII_STRING_ID_TO_IMAGE StringIdToImage;EFI_HII_GET_GLYPH GetGlyph;EFI_HII_GET_FONT_INFO GetFontInfo;};
struct _EFI_SMBUS_HC_PROTOCOL {EFI_SMBUS_HC_EXECUTE_OPERATION Execute;EFI_SMBUS_HC_PROTOCOL_ARP_DEVICE ArpDevice;EFI_SMBUS_HC_PROTOCOL_GET_ARP_MAP GetArpMap;EFI_SMBUS_HC_PROTOCOL_NOTIFY Notify;};
struct _EFI_I2C_IO_PROTOCOL {EFI_I2C_IO_PROTOCOL_QUEUE_REQUEST QueueRequest;const EFI_GUID *DeviceGuid;UINT32 DeviceIndex;UINT32 HardwareRevision;const EFI_I2C_CONTROLLER_CAPABILITIES *I2cControllerCapabilities;};
struct _EFI_PEI_SMBUS_PPI {EFI_PEI_SMBUS_PPI_EXECUTE_OPERATION Execute;EFI_PEI_SMBUS_PPI_ARP_DEVICE ArpDevice;EFI_PEI_SMBUS_PPI_GET_ARP_MAP GetArpMap;EFI_PEI_SMBUS_PPI_NOTIFY Notify;};
struct _EFI_TREE_PROTOCOL {EFI_TREE_GET_CAPABILITY GetCapability;EFI_TREE_GET_EVENT_LOG GetEventLog;EFI_TREE_HASH_LOG_EXTEND_EVENT HashLogExtendEvent;EFI_TREE_SUBMIT_COMMAND SubmitCommand;};
struct _EFI_EBC_PROTOCOL {EFI_EBC_CREATE_THUNK CreateThunk;EFI_EBC_UNLOAD_IMAGE UnloadImage;EFI_EBC_REGISTER_ICACHE_FLUSH RegisterICacheFlush;EFI_EBC_GET_VERSION GetVersion;};
struct _EFI_NVM_EXPRESS_PASS_THRU_PROTOCOL {EFI_NVM_EXPRESS_PASS_THRU_MODE *Mode;EFI_NVM_EXPRESS_PASS_THRU_PASSTHRU PassThru;EFI_NVM_EXPRESS_PASS_THRU_GET_NEXT_NAMESPACE GetNextNamespace;EFI_NVM_EXPRESS_PASS_THRU_BUILD_DEVICE_PATH BuildDevicePath;EFI_NVM_EXPRESS_PASS_THRU_GET_NAMESPACE GetNamespace;};
struct _EFI_IPSEC_CONFIG_PROTOCOL {EFI_IPSEC_CONFIG_SET_DATA SetData;EFI_IPSEC_CONFIG_GET_DATA GetData;EFI_IPSEC_CONFIG_GET_NEXT_SELECTOR GetNextSelector;EFI_IPSEC_CONFIG_REGISTER_NOTIFY RegisterDataNotify;EFI_IPSEC_CONFIG_UNREGISTER_NOTIFY UnregisterDataNotify;};
struct _EFI_HII_STRING_PROTOCOL {EFI_HII_NEW_STRING NewString;EFI_HII_GET_STRING GetString;EFI_HII_SET_STRING SetString;EFI_HII_GET_LANGUAGES GetLanguages;EFI_HII_GET_2ND_LANGUAGES GetSecondaryLanguages;};
struct _EFI_BLOCK_IO2_PROTOCOL {EFI_BLOCK_IO_MEDIA *Media;EFI_BLOCK_RESET_EX Reset;EFI_BLOCK_READ_EX ReadBlocksEx;EFI_BLOCK_WRITE_EX WriteBlocksEx;EFI_BLOCK_FLUSH_EX FlushBlocksEx;};
struct _EFI_HII_IMAGE_PROTOCOL {EFI_HII_NEW_IMAGE NewImage;EFI_HII_GET_IMAGE GetImage;EFI_HII_SET_IMAGE SetImage;EFI_HII_DRAW_IMAGE DrawImage;EFI_HII_DRAW_IMAGE_ID DrawImageId;};
struct _EFI_DISK_IO2_PROTOCOL {UINT64 Revision;EFI_DISK_CANCEL_EX Cancel;EFI_DISK_READ_EX ReadDiskEx;EFI_DISK_WRITE_EX WriteDiskEx;EFI_DISK_FLUSH_EX FlushDiskEx;};
struct _EFI_SMBIOS_PROTOCOL {EFI_SMBIOS_ADD Add;EFI_SMBIOS_UPDATE_STRING UpdateString;EFI_SMBIOS_REMOVE Remove;EFI_SMBIOS_GET_NEXT GetNext;UINT8 MajorVersion;UINT8 MinorVersion;};
struct _EFI_HASH2_PROTOCOL {EFI_HASH2_GET_HASH_SIZE GetHashSize;EFI_HASH2_HASH Hash;EFI_HASH2_HASH_INIT HashInit;EFI_HASH2_HASH_UPDATE HashUpdate;EFI_HASH2_HASH_FINAL HashFinal;};
struct _EFI_PEI_SMBUS2_PPI {EFI_PEI_SMBUS2_PPI_EXECUTE_OPERATION Execute;EFI_PEI_SMBUS2_PPI_ARP_DEVICE ArpDevice;EFI_PEI_SMBUS2_PPI_GET_ARP_MAP GetArpMap;EFI_PEI_SMBUS2_PPI_NOTIFY Notify;EFI_GUID Identifier;};
struct _EFI_TCG_PROTOCOL {EFI_TCG_STATUS_CHECK StatusCheck;EFI_TCG_HASH_ALL HashAll;EFI_TCG_LOG_EVENT LogEvent;EFI_TCG_PASS_THROUGH_TO_TPM PassThroughToTpm;EFI_TCG_HASH_LOG_EXTEND_EVENT HashLogExtendEvent;};
struct _PEI_USB_IO_PPI {PEI_USB_CONTROL_TRANSFER UsbControlTransfer;PEI_USB_BULK_TRANSFER UsbBulkTransfer;PEI_USB_GET_INTERFACE_DESCRIPTOR UsbGetInterfaceDescriptor;PEI_USB_GET_ENDPOINT_DESCRIPTOR UsbGetEndpointDescriptor;PEI_USB_PORT_RESET UsbPortReset;};
struct _EFI_SIO_PPI {EFI_PEI_SIO_REGISTER_READ Read;EFI_PEI_SIO_REGISTER_WRITE Write;EFI_PEI_SIO_REGISTER_MODIFY Modify;EFI_GUID SioGuid;PEFI_SIO_INFO Info;};
struct _EFI_FIRMWARE_MANAGEMENT_PROTOCOL {EFI_FIRMWARE_MANAGEMENT_PROTOCOL_GET_IMAGE_INFO GetImageInfo;EFI_FIRMWARE_MANAGEMENT_PROTOCOL_GET_IMAGE GetImage;EFI_FIRMWARE_MANAGEMENT_PROTOCOL_SET_IMAGE SetImage;EFI_FIRMWARE_MANAGEMENT_PROTOCOL_CHECK_IMAGE CheckImage;EFI_FIRMWARE_MANAGEMENT_PROTOCOL_GET_PACKAGE_INFO GetPackageInfo;EFI_FIRMWARE_MANAGEMENT_PROTOCOL_SET_PACKAGE_INFO SetPackageInfo;};
struct _EFI_HII_CONFIG_ROUTING_PROTOCOL {EFI_HII_EXTRACT_CONFIG ExtractConfig;EFI_HII_EXPORT_CONFIG ExportConfig;EFI_HII_ROUTE_CONFIG RouteConfig;EFI_HII_BLOCK_TO_CONFIG BlockToConfig;EFI_HII_CONFIG_TO_BLOCK ConfigToBlock;EFI_HII_GET_ALT_CFG GetAltConfig;};
struct _EFI_SMART_CARD_READER_PROTOCOL {EFI_SMART_CARD_READER_CONNECT SCardConnect;EFI_SMART_CARD_READER_DISCONNECT SCardDisconnect;EFI_SMART_CARD_READER_STATUS SCardStatus;EFI_SMART_CARD_READER_TRANSMIT SCardTransmit;EFI_SMART_CARD_READER_CONTROL SCardControl;EFI_SMART_CARD_READER_GET_ATTRIB SCardGetAttrib;};
struct _PEI_USB2_HOST_CONTROLLER_PPI {PEI_USB2_HOST_CONTROLLER_CONTROL_TRANSFER ControlTransfer;PEI_USB2_HOST_CONTROLLER_BULK_TRANSFER BulkTransfer;PEI_USB2_HOST_CONTROLLER_GET_ROOTHUB_PORT_NUMBER GetRootHubPortNumber;PEI_USB2_HOST_CONTROLLER_GET_ROOTHUB_PORT_STATUS GetRootHubPortStatus;PEI_USB2_HOST_CONTROLLER_SET_ROOTHUB_PORT_FEATURE SetRootHubPortFeature;PEI_USB2_HOST_CONTROLLER_CLEAR_ROOTHUB_PORT_FEATURE ClearRootHubPortFeature;};
struct _PEI_USB_HOST_CONTROLLER_PPI {PEI_USB_HOST_CONTROLLER_CONTROL_TRANSFER ControlTransfer;PEI_USB_HOST_CONTROLLER_BULK_TRANSFER BulkTransfer;PEI_USB_HOST_CONTROLLER_GET_ROOTHUB_PORT_NUMBER GetRootHubPortNumber;PEI_USB_HOST_CONTROLLER_GET_ROOTHUB_PORT_STATUS GetRootHubPortStatus;PEI_USB_HOST_CONTROLLER_SET_ROOTHUB_PORT_FEATURE SetRootHubPortFeature;PEI_USB_HOST_CONTROLLER_CLEAR_ROOTHUB_PORT_FEATURE ClearRootHubPortFeature;};
struct _ESRT_MANAGEMENT_PROTOCOL {GET_ESRT_ENTRY GetEsrtEntry;UPDATE_ESRT_ENTRY UpdateEsrtEntry;REGISTER_ESRT_ENTRY RegisterEsrtEntry;UNREGISTER_ESRT_ENTRY UnRegisterEsrtEntry;SYNC_ESRT_FMP SyncEsrtFmp;LOCK_ESRT_REPOSITORY LockEsrtRepository;};
struct _EFI_LEGACY_BIOS_PLATFORM_PROTOCOL {EFI_LEGACY_BIOS_PLATFORM_GET_PLATFORM_INFO GetPlatformInfo;EFI_LEGACY_BIOS_PLATFORM_GET_PLATFORM_HANDLE GetPlatformHandle;EFI_LEGACY_BIOS_PLATFORM_SMM_INIT SmmInit;EFI_LEGACY_BIOS_PLATFORM_HOOKS PlatformHooks;EFI_LEGACY_BIOS_PLATFORM_GET_ROUTING_TABLE GetRoutingTable;EFI_LEGACY_BIOS_PLATFORM_TRANSLATE_PIRQ TranslatePirq;EFI_LEGACY_BIOS_PLATFORM_PREPARE_TO_BOOT PrepareToBoot;};
struct _EFI_ACPI_SDT_PROTOCOL {EFI_ACPI_TABLE_VERSION AcpiVersion;EFI_ACPI_GET_ACPI_TABLE2 GetAcpiTable;EFI_ACPI_REGISTER_NOTIFY RegisterNotify;EFI_ACPI_OPEN Open;EFI_ACPI_OPEN_SDT OpenSdt;EFI_ACPI_CLOSE Close;EFI_ACPI_GET_CHILD GetChild;EFI_ACPI_GET_OPTION GetOption;EFI_ACPI_SET_OPTION SetOption;EFI_ACPI_FIND_PATH FindPath;};
struct _EFI_BLUETOOTH_CONFIG_PROTOCOL {EFI_BLUETOOTH_CONFIG_INIT Init;EFI_BLUETOOTH_CONFIG_SCAN Scan;EFI_BLUETOOTH_CONFIG_CONNECT Connect;EFI_BLUETOOTH_CONFIG_DISCONNECT Disconnect;EFI_BLUETOOTH_CONFIG_GET_DATA GetData;EFI_BLUETOOTH_CONFIG_SET_DATA SetData;EFI_BLUETOOTH_CONFIG_GET_REMOTE_DATA GetRemoteData;EFI_BLUETOOTH_CONFIG_REGISTER_PIN_CALLBACK RegisterPinCallback;EFI_BLUETOOTH_CONFIG_REGISTER_GET_LINK_KEY_CALLBACK RegisterGetLinkKeyCallback;EFI_BLUETOOTH_CONFIG_REGISTER_SET_LINK_KEY_CALLBACK RegisterSetLinkKeyCallback;EFI_BLUETOOTH_CONFIG_REGISTER_CONNECT_COMPLETE_CALLBACK RegisterLinkConnectCompleteCallback;};
struct _EFI_SMM_SYSTEM_TABLE {EFI_TABLE_HEADER Hdr;CHAR16 *SmmFirmwareVendor;UINT32 SmmFirmwareRevision;EFI_SMM_INSTALL_CONFIGURATION_TABLE SmmInstallConfigurationTable;EFI_GUID EfiSmmCpuIoGuid;EFI_SMM_CPU_IO_INTERFACE SmmIo;EFI_SMMCORE_ALLOCATE_POOL SmmAllocatePool;EFI_SMMCORE_FREE_POOL SmmFreePool;EFI_SMMCORE_ALLOCATE_PAGES SmmAllocatePages;EFI_SMMCORE_FREE_PAGES SmmFreePages;EFI_SMM_STARTUP_THIS_AP SmmStartupThisAp;UINTN CurrentlyExecutingCpu;UINTN NumberOfCpus;EFI_SMM_CPU_SAVE_STATE *CpuSaveState;EFI_SMM_FLOATING_POINT_SAVE_STATE *CpuOptionalFloatingPointState;UINTN NumberOfTableEntries;EFI_CONFIGURATION_TABLE *SmmConfigurationTable;};
struct _3D90DC302D39627B69518384DF4F2103 {EFI_TABLE_HEADER Hdr;EFI_ADD_MEMORY_SPACE AddMemorySpace;EFI_ALLOCATE_MEMORY_SPACE AllocateMemorySpace;EFI_FREE_MEMORY_SPACE FreeMemorySpace;EFI_REMOVE_MEMORY_SPACE RemoveMemorySpace;EFI_GET_MEMORY_SPACE_DESCRIPTOR GetMemorySpaceDescriptor;EFI_SET_MEMORY_SPACE_ATTRIBUTES SetMemorySpaceAttributes;EFI_GET_MEMORY_SPACE_MAP GetMemorySpaceMap;EFI_ADD_IO_SPACE AddIoSpace;EFI_ALLOCATE_IO_SPACE AllocateIoSpace;EFI_FREE_IO_SPACE FreeIoSpace;EFI_REMOVE_IO_SPACE RemoveIoSpace;EFI_GET_IO_SPACE_DESCRIPTOR GetIoSpaceDescriptor;EFI_GET_IO_SPACE_MAP GetIoSpaceMap;EFI_DISPATCH Dispatch;EFI_SCHEDULE Schedule;EFI_TRUST Trust;EFI_PROCESS_FIRMWARE_VOLUME ProcessFirmwareVolume;EFI_SET_MEMORY_SPACE_CAPABILITIES SetMemorySpaceCapabilities;};
struct _EFI_SMM_SYSTEM_TABLE2 {EFI_TABLE_HEADER Hdr;CHAR16 *SmmFirmwareVendor;UINT32 SmmFirmwareRevision;EFI_SMM_INSTALL_CONFIGURATION_TABLE2 SmmInstallConfigurationTable;EFI_SMM_CPU_IO2_PROTOCOL SmmIo;EFI_ALLOCATE_POOL SmmAllocatePool;EFI_FREE_POOL SmmFreePool;EFI_ALLOCATE_PAGES SmmAllocatePages;EFI_FREE_PAGES SmmFreePages;EFI_SMM_STARTUP_THIS_AP SmmStartupThisAp;UINTN CurrentlyExecutingCpu;UINTN NumberOfCpus;UINTN *CpuSaveStateSize;void **CpuSaveState;UINTN NumberOfTableEntries;EFI_CONFIGURATION_TABLE *SmmConfigurationTable;EFI_INSTALL_PROTOCOL_INTERFACE SmmInstallProtocolInterface;EFI_UNINSTALL_PROTOCOL_INTERFACE SmmUninstallProtocolInterface;EFI_HANDLE_PROTOCOL SmmHandleProtocol;EFI_SMM_REGISTER_PROTOCOL_NOTIFY SmmRegisterProtocolNotify;EFI_LOCATE_HANDLE SmmLocateHandle;EFI_LOCATE_PROTOCOL SmmLocateProtocol;EFI_SMM_INTERRUPT_MANAGE SmiManage;EFI_SMM_INTERRUPT_REGISTER SmiHandlerRegister;EFI_SMM_INTERRUPT_UNREGISTER SmiHandlerUnRegister;};
struct _3D19AB9A470BF56182098D487246055F {EFI_TABLE_HEADER Hdr;EFI_RAISE_TPL RaiseTPL;EFI_RESTORE_TPL RestoreTPL;EFI_ALLOCATE_PAGES AllocatePages;EFI_FREE_PAGES FreePages;EFI_GET_MEMORY_MAP GetMemoryMap;EFI_ALLOCATE_POOL AllocatePool;EFI_FREE_POOL FreePool;EFI_CREATE_EVENT CreateEvent;EFI_SET_TIMER SetTimer;EFI_WAIT_FOR_EVENT WaitForEvent;EFI_SIGNAL_EVENT SignalEvent;EFI_CLOSE_EVENT CloseEvent;EFI_CHECK_EVENT CheckEvent;EFI_INSTALL_PROTOCOL_INTERFACE InstallProtocolInterface;EFI_REINSTALL_PROTOCOL_INTERFACE ReinstallProtocolInterface;EFI_UNINSTALL_PROTOCOL_INTERFACE UninstallProtocolInterface;EFI_HANDLE_PROTOCOL HandleProtocol;EFI_HANDLE_PROTOCOL PcHandleProtocol;EFI_REGISTER_PROTOCOL_NOTIFY RegisterProtocolNotify;EFI_LOCATE_HANDLE LocateHandle;EFI_LOCATE_DEVICE_PATH LocateDevicePath;EFI_INSTALL_CONFIGURATION_TABLE InstallConfigurationTable;EFI_IMAGE_LOAD LoadImage;EFI_IMAGE_START StartImage;EFI_EXIT Exit;EFI_IMAGE_UNLOAD UnloadImage;EFI_EXIT_BOOT_SERVICES ExitBootServices;EFI_GET_NEXT_MONOTONIC_COUNT GetNextMonotonicCount;EFI_STALL Stall;EFI_SET_WATCHDOG_TIMER SetWatchdogTimer;EFI_CONNECT_CONTROLLER ConnectController;EFI_DISCONNECT_CONTROLLER DisconnectController;EFI_OPEN_PROTOCOL OpenProtocol;EFI_CLOSE_PROTOCOL CloseProtocol;EFI_OPEN_PROTOCOL_INFORMATION OpenProtocolInformation;EFI_PROTOCOLS_PER_HANDLE ProtocolsPerHandle;EFI_LOCATE_HANDLE_BUFFER LocateHandleBuffer;EFI_LOCATE_PROTOCOL LocateProtocol;EFI_INSTALL_MULTIPLE_PROTOCOL_INTERFACES InstallMultipleProtocolInterfaces;EFI_UNINSTALL_MULTIPLE_PROTOCOL_INTERFACES UninstallMultipleProtocolInterfaces;EFI_CALCULATE_CRC32 CalculateCrc32;EFI_COPY_MEM CopyMem;EFI_SET_MEM SetMem;};
struct _FB71CE30D7CCDDEC85E5BB8165632F3B {EFI_TABLE_HEADER Hdr;EFI_RAISE_TPL RaiseTPL;EFI_RESTORE_TPL RestoreTPL;EFI_ALLOCATE_PAGES AllocatePages;EFI_FREE_PAGES FreePages;EFI_GET_MEMORY_MAP GetMemoryMap;EFI_ALLOCATE_POOL AllocatePool;EFI_FREE_POOL FreePool;EFI_CREATE_EVENT CreateEvent;EFI_SET_TIMER SetTimer;EFI_WAIT_FOR_EVENT WaitForEvent;EFI_SIGNAL_EVENT SignalEvent;EFI_CLOSE_EVENT CloseEvent;EFI_CHECK_EVENT CheckEvent;EFI_INSTALL_PROTOCOL_INTERFACE InstallProtocolInterface;EFI_REINSTALL_PROTOCOL_INTERFACE ReinstallProtocolInterface;EFI_UNINSTALL_PROTOCOL_INTERFACE UninstallProtocolInterface;EFI_HANDLE_PROTOCOL HandleProtocol;void *Reserved;EFI_REGISTER_PROTOCOL_NOTIFY RegisterProtocolNotify;EFI_LOCATE_HANDLE LocateHandle;EFI_LOCATE_DEVICE_PATH LocateDevicePath;EFI_INSTALL_CONFIGURATION_TABLE InstallConfigurationTable;EFI_IMAGE_LOAD LoadImage;EFI_IMAGE_START StartImage;EFI_EXIT Exit;EFI_IMAGE_UNLOAD UnloadImage;EFI_EXIT_BOOT_SERVICES ExitBootServices;EFI_GET_NEXT_MONOTONIC_COUNT GetNextMonotonicCount;EFI_STALL Stall;EFI_SET_WATCHDOG_TIMER SetWatchdogTimer;EFI_CONNECT_CONTROLLER ConnectController;EFI_DISCONNECT_CONTROLLER DisconnectController;EFI_OPEN_PROTOCOL OpenProtocol;EFI_CLOSE_PROTOCOL CloseProtocol;EFI_OPEN_PROTOCOL_INFORMATION OpenProtocolInformation;EFI_PROTOCOLS_PER_HANDLE ProtocolsPerHandle;EFI_LOCATE_HANDLE_BUFFER LocateHandleBuffer;EFI_LOCATE_PROTOCOL LocateProtocol;EFI_INSTALL_MULTIPLE_PROTOCOL_INTERFACES InstallMultipleProtocolInterfaces;EFI_UNINSTALL_MULTIPLE_PROTOCOL_INTERFACES UninstallMultipleProtocolInterfaces;EFI_CALCULATE_CRC32 CalculateCrc32;EFI_COPY_MEM CopyMem;EFI_SET_MEM SetMem;EFI_CREATE_EVENT_EX CreateEventEx;};
struct _EFI_PEI_TEMPORARY_RAM_DONE_PPI {EFI_PEI_TEMPORARY_RAM_DONE TemporaryRamDone;};
struct _995E2D1C7E1C08F056C9CB2DF62ABADF {EFI_RSC_HANDLER_REGISTER Register;EFI_RSC_HANDLER_UNREGISTER Unregister;};
struct _EFI_SMM_RSC_HANDLER_PROTOCOL {EFI_SMM_RSC_HANDLER_REGISTER Register;EFI_SMM_RSC_HANDLER_UNREGISTER Unregister;};
struct _EFI_EAP_PROTOCOL {EFI_EAP_SET_DESIRED_AUTHENTICATION_METHOD SetDesiredAuthMethod;EFI_EAP_REGISTER_AUTHENTICATION_METHOD RegisterAuthMethod;};
struct _EFI_SAL_MCA_INIT_PMI_PROTOCOL {EFI_SAL_REGISTER_MCA_HANDLER RegisterMcaHandler;EFI_SAL_REGISTER_INIT_HANDLER RegisterInitHandler;EFI_SAL_REGISTER_PMI_HANDLER RegisterPmiHandler;BOOLEAN McaInProgress;BOOLEAN InitInProgress;BOOLEAN PmiInProgress;};



#endif
